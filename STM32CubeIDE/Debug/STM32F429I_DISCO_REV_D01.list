
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ef14  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003c48  0802f0c4  0802f0c4  000300c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000008a6  08032d0c  08032d0c  00033d0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000028  080335b4  080335b4  000345b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000144  080335dc  080335dc  000345dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 IntFlashSection 001cb76c  08033720  08033720  00034720  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081fee8c  081fee8c  00200380  2**0
                  CONTENTS
  8 .ARM          00000008  081fee8c  081fee8c  001ffe8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081fee94  081fee94  00200380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081fee94  081fee94  001ffe94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  081feea8  081feea8  001ffea8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  081feeb0  00200000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  081ff014  00200180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  081ff114  00200280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00014244  20000380  081ff214  00200380  2**2
                  ALLOC
 16 ._user_heap_stack 00001404  200145c4  081ff214  002005c4  2**0
                  ALLOC
 17 ExtFlashSection 00000000  90000000  90000000  00200380  2**0
                  CONTENTS
 18 .ARM.attributes 00000030  00000000  00000000  00200380  2**0
                  CONTENTS, READONLY
 19 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00201000  2**2
                  ALLOC
 20 .debug_line   000a6e24  00000000  00000000  002003b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000078  00000000  00000000  002a71d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   001de7f9  00000000  00000000  002a724c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0002e01b  00000000  00000000  00485a45  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 000055a0  00000000  00000000  004b3a60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    00120c36  00000000  00000000  004b9000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 00008fb5  00000000  00000000  005d9c36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_loclists 0003f131  00000000  00000000  005e2beb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  0003c094  00000000  00000000  00621d1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .comment      000000c2  00000000  00000000  0065ddb0  2**0
                  CONTENTS, READONLY
 30 .debug_frame  0000d600  00000000  00000000  0065de74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802f0ac 	.word	0x0802f0ac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	0802f0ac 	.word	0x0802f0ac

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_dmul>:
 8000290:	b570      	push	{r4, r5, r6, lr}
 8000292:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000296:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800029a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800029e:	bf1d      	ittte	ne
 80002a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002a4:	ea94 0f0c 	teqne	r4, ip
 80002a8:	ea95 0f0c 	teqne	r5, ip
 80002ac:	f000 f8de 	bleq	800046c <__aeabi_dmul+0x1dc>
 80002b0:	442c      	add	r4, r5
 80002b2:	ea81 0603 	eor.w	r6, r1, r3
 80002b6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002ba:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002be:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002c2:	bf18      	it	ne
 80002c4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002c8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80002cc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80002d0:	d038      	beq.n	8000344 <__aeabi_dmul+0xb4>
 80002d2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002d6:	f04f 0500 	mov.w	r5, #0
 80002da:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002de:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80002e2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002e6:	f04f 0600 	mov.w	r6, #0
 80002ea:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002ee:	f09c 0f00 	teq	ip, #0
 80002f2:	bf18      	it	ne
 80002f4:	f04e 0e01 	orrne.w	lr, lr, #1
 80002f8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80002fc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000300:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 8000304:	d204      	bcs.n	8000310 <__aeabi_dmul+0x80>
 8000306:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800030a:	416d      	adcs	r5, r5
 800030c:	eb46 0606 	adc.w	r6, r6, r6
 8000310:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000314:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000318:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800031c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000320:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000324:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000328:	bf88      	it	hi
 800032a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800032e:	d81e      	bhi.n	800036e <__aeabi_dmul+0xde>
 8000330:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000334:	bf08      	it	eq
 8000336:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800033a:	f150 0000 	adcs.w	r0, r0, #0
 800033e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000342:	bd70      	pop	{r4, r5, r6, pc}
 8000344:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000348:	ea46 0101 	orr.w	r1, r6, r1
 800034c:	ea40 0002 	orr.w	r0, r0, r2
 8000350:	ea81 0103 	eor.w	r1, r1, r3
 8000354:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000358:	bfc2      	ittt	gt
 800035a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800035e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000362:	bd70      	popgt	{r4, r5, r6, pc}
 8000364:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000368:	f04f 0e00 	mov.w	lr, #0
 800036c:	3c01      	subs	r4, #1
 800036e:	f300 80ab 	bgt.w	80004c8 <__aeabi_dmul+0x238>
 8000372:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000376:	bfde      	ittt	le
 8000378:	2000      	movle	r0, #0
 800037a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800037e:	bd70      	pople	{r4, r5, r6, pc}
 8000380:	f1c4 0400 	rsb	r4, r4, #0
 8000384:	3c20      	subs	r4, #32
 8000386:	da35      	bge.n	80003f4 <__aeabi_dmul+0x164>
 8000388:	340c      	adds	r4, #12
 800038a:	dc1b      	bgt.n	80003c4 <__aeabi_dmul+0x134>
 800038c:	f104 0414 	add.w	r4, r4, #20
 8000390:	f1c4 0520 	rsb	r5, r4, #32
 8000394:	fa00 f305 	lsl.w	r3, r0, r5
 8000398:	fa20 f004 	lsr.w	r0, r0, r4
 800039c:	fa01 f205 	lsl.w	r2, r1, r5
 80003a0:	ea40 0002 	orr.w	r0, r0, r2
 80003a4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80003a8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80003ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003b0:	fa21 f604 	lsr.w	r6, r1, r4
 80003b4:	eb42 0106 	adc.w	r1, r2, r6
 80003b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003bc:	bf08      	it	eq
 80003be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003c2:	bd70      	pop	{r4, r5, r6, pc}
 80003c4:	f1c4 040c 	rsb	r4, r4, #12
 80003c8:	f1c4 0520 	rsb	r5, r4, #32
 80003cc:	fa00 f304 	lsl.w	r3, r0, r4
 80003d0:	fa20 f005 	lsr.w	r0, r0, r5
 80003d4:	fa01 f204 	lsl.w	r2, r1, r4
 80003d8:	ea40 0002 	orr.w	r0, r0, r2
 80003dc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80003e0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003e4:	f141 0100 	adc.w	r1, r1, #0
 80003e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003ec:	bf08      	it	eq
 80003ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003f2:	bd70      	pop	{r4, r5, r6, pc}
 80003f4:	f1c4 0520 	rsb	r5, r4, #32
 80003f8:	fa00 f205 	lsl.w	r2, r0, r5
 80003fc:	ea4e 0e02 	orr.w	lr, lr, r2
 8000400:	fa20 f304 	lsr.w	r3, r0, r4
 8000404:	fa01 f205 	lsl.w	r2, r1, r5
 8000408:	ea43 0302 	orr.w	r3, r3, r2
 800040c:	fa21 f004 	lsr.w	r0, r1, r4
 8000410:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000414:	fa21 f204 	lsr.w	r2, r1, r4
 8000418:	ea20 0002 	bic.w	r0, r0, r2
 800041c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000420:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000424:	bf08      	it	eq
 8000426:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800042a:	bd70      	pop	{r4, r5, r6, pc}
 800042c:	f094 0f00 	teq	r4, #0
 8000430:	d10f      	bne.n	8000452 <__aeabi_dmul+0x1c2>
 8000432:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000436:	0040      	lsls	r0, r0, #1
 8000438:	eb41 0101 	adc.w	r1, r1, r1
 800043c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000440:	bf08      	it	eq
 8000442:	3c01      	subeq	r4, #1
 8000444:	d0f7      	beq.n	8000436 <__aeabi_dmul+0x1a6>
 8000446:	ea41 0106 	orr.w	r1, r1, r6
 800044a:	f095 0f00 	teq	r5, #0
 800044e:	bf18      	it	ne
 8000450:	4770      	bxne	lr
 8000452:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000456:	0052      	lsls	r2, r2, #1
 8000458:	eb43 0303 	adc.w	r3, r3, r3
 800045c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000460:	bf08      	it	eq
 8000462:	3d01      	subeq	r5, #1
 8000464:	d0f7      	beq.n	8000456 <__aeabi_dmul+0x1c6>
 8000466:	ea43 0306 	orr.w	r3, r3, r6
 800046a:	4770      	bx	lr
 800046c:	ea94 0f0c 	teq	r4, ip
 8000470:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000474:	bf18      	it	ne
 8000476:	ea95 0f0c 	teqne	r5, ip
 800047a:	d00c      	beq.n	8000496 <__aeabi_dmul+0x206>
 800047c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000480:	bf18      	it	ne
 8000482:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000486:	d1d1      	bne.n	800042c <__aeabi_dmul+0x19c>
 8000488:	ea81 0103 	eor.w	r1, r1, r3
 800048c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000490:	f04f 0000 	mov.w	r0, #0
 8000494:	bd70      	pop	{r4, r5, r6, pc}
 8000496:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800049a:	bf06      	itte	eq
 800049c:	4610      	moveq	r0, r2
 800049e:	4619      	moveq	r1, r3
 80004a0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004a4:	d019      	beq.n	80004da <__aeabi_dmul+0x24a>
 80004a6:	ea94 0f0c 	teq	r4, ip
 80004aa:	d102      	bne.n	80004b2 <__aeabi_dmul+0x222>
 80004ac:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004b0:	d113      	bne.n	80004da <__aeabi_dmul+0x24a>
 80004b2:	ea95 0f0c 	teq	r5, ip
 80004b6:	d105      	bne.n	80004c4 <__aeabi_dmul+0x234>
 80004b8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004bc:	bf1c      	itt	ne
 80004be:	4610      	movne	r0, r2
 80004c0:	4619      	movne	r1, r3
 80004c2:	d10a      	bne.n	80004da <__aeabi_dmul+0x24a>
 80004c4:	ea81 0103 	eor.w	r1, r1, r3
 80004c8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80004cc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd70      	pop	{r4, r5, r6, pc}
 80004da:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004de:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80004e2:	bd70      	pop	{r4, r5, r6, pc}

080004e4 <__aeabi_drsub>:
 80004e4:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80004e8:	e002      	b.n	80004f0 <__adddf3>
 80004ea:	bf00      	nop

080004ec <__aeabi_dsub>:
 80004ec:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080004f0 <__adddf3>:
 80004f0:	b530      	push	{r4, r5, lr}
 80004f2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80004f6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80004fa:	ea94 0f05 	teq	r4, r5
 80004fe:	bf08      	it	eq
 8000500:	ea90 0f02 	teqeq	r0, r2
 8000504:	bf1f      	itttt	ne
 8000506:	ea54 0c00 	orrsne.w	ip, r4, r0
 800050a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800050e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000512:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000516:	f000 80e2 	beq.w	80006de <__adddf3+0x1ee>
 800051a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800051e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000522:	bfb8      	it	lt
 8000524:	426d      	neglt	r5, r5
 8000526:	dd0c      	ble.n	8000542 <__adddf3+0x52>
 8000528:	442c      	add	r4, r5
 800052a:	ea80 0202 	eor.w	r2, r0, r2
 800052e:	ea81 0303 	eor.w	r3, r1, r3
 8000532:	ea82 0000 	eor.w	r0, r2, r0
 8000536:	ea83 0101 	eor.w	r1, r3, r1
 800053a:	ea80 0202 	eor.w	r2, r0, r2
 800053e:	ea81 0303 	eor.w	r3, r1, r3
 8000542:	2d36      	cmp	r5, #54	@ 0x36
 8000544:	bf88      	it	hi
 8000546:	bd30      	pophi	{r4, r5, pc}
 8000548:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800054c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000550:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000554:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000558:	d002      	beq.n	8000560 <__adddf3+0x70>
 800055a:	4240      	negs	r0, r0
 800055c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000560:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000564:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000568:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800056c:	d002      	beq.n	8000574 <__adddf3+0x84>
 800056e:	4252      	negs	r2, r2
 8000570:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000574:	ea94 0f05 	teq	r4, r5
 8000578:	f000 80a7 	beq.w	80006ca <__adddf3+0x1da>
 800057c:	f1a4 0401 	sub.w	r4, r4, #1
 8000580:	f1d5 0e20 	rsbs	lr, r5, #32
 8000584:	db0d      	blt.n	80005a2 <__adddf3+0xb2>
 8000586:	fa02 fc0e 	lsl.w	ip, r2, lr
 800058a:	fa22 f205 	lsr.w	r2, r2, r5
 800058e:	1880      	adds	r0, r0, r2
 8000590:	f141 0100 	adc.w	r1, r1, #0
 8000594:	fa03 f20e 	lsl.w	r2, r3, lr
 8000598:	1880      	adds	r0, r0, r2
 800059a:	fa43 f305 	asr.w	r3, r3, r5
 800059e:	4159      	adcs	r1, r3
 80005a0:	e00e      	b.n	80005c0 <__adddf3+0xd0>
 80005a2:	f1a5 0520 	sub.w	r5, r5, #32
 80005a6:	f10e 0e20 	add.w	lr, lr, #32
 80005aa:	2a01      	cmp	r2, #1
 80005ac:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005b0:	bf28      	it	cs
 80005b2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005b6:	fa43 f305 	asr.w	r3, r3, r5
 80005ba:	18c0      	adds	r0, r0, r3
 80005bc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	d507      	bpl.n	80005d6 <__adddf3+0xe6>
 80005c6:	f04f 0e00 	mov.w	lr, #0
 80005ca:	f1dc 0c00 	rsbs	ip, ip, #0
 80005ce:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005d2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005d6:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80005da:	d31b      	bcc.n	8000614 <__adddf3+0x124>
 80005dc:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80005e0:	d30c      	bcc.n	80005fc <__adddf3+0x10c>
 80005e2:	0849      	lsrs	r1, r1, #1
 80005e4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005e8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005ec:	f104 0401 	add.w	r4, r4, #1
 80005f0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80005f4:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80005f8:	f080 809a 	bcs.w	8000730 <__adddf3+0x240>
 80005fc:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000600:	bf08      	it	eq
 8000602:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000606:	f150 0000 	adcs.w	r0, r0, #0
 800060a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800060e:	ea41 0105 	orr.w	r1, r1, r5
 8000612:	bd30      	pop	{r4, r5, pc}
 8000614:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000618:	4140      	adcs	r0, r0
 800061a:	eb41 0101 	adc.w	r1, r1, r1
 800061e:	3c01      	subs	r4, #1
 8000620:	bf28      	it	cs
 8000622:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000626:	d2e9      	bcs.n	80005fc <__adddf3+0x10c>
 8000628:	f091 0f00 	teq	r1, #0
 800062c:	bf04      	itt	eq
 800062e:	4601      	moveq	r1, r0
 8000630:	2000      	moveq	r0, #0
 8000632:	fab1 f381 	clz	r3, r1
 8000636:	bf08      	it	eq
 8000638:	3320      	addeq	r3, #32
 800063a:	f1a3 030b 	sub.w	r3, r3, #11
 800063e:	f1b3 0220 	subs.w	r2, r3, #32
 8000642:	da0c      	bge.n	800065e <__adddf3+0x16e>
 8000644:	320c      	adds	r2, #12
 8000646:	dd08      	ble.n	800065a <__adddf3+0x16a>
 8000648:	f102 0c14 	add.w	ip, r2, #20
 800064c:	f1c2 020c 	rsb	r2, r2, #12
 8000650:	fa01 f00c 	lsl.w	r0, r1, ip
 8000654:	fa21 f102 	lsr.w	r1, r1, r2
 8000658:	e00c      	b.n	8000674 <__adddf3+0x184>
 800065a:	f102 0214 	add.w	r2, r2, #20
 800065e:	bfd8      	it	le
 8000660:	f1c2 0c20 	rsble	ip, r2, #32
 8000664:	fa01 f102 	lsl.w	r1, r1, r2
 8000668:	fa20 fc0c 	lsr.w	ip, r0, ip
 800066c:	bfdc      	itt	le
 800066e:	ea41 010c 	orrle.w	r1, r1, ip
 8000672:	4090      	lslle	r0, r2
 8000674:	1ae4      	subs	r4, r4, r3
 8000676:	bfa2      	ittt	ge
 8000678:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800067c:	4329      	orrge	r1, r5
 800067e:	bd30      	popge	{r4, r5, pc}
 8000680:	ea6f 0404 	mvn.w	r4, r4
 8000684:	3c1f      	subs	r4, #31
 8000686:	da1c      	bge.n	80006c2 <__adddf3+0x1d2>
 8000688:	340c      	adds	r4, #12
 800068a:	dc0e      	bgt.n	80006aa <__adddf3+0x1ba>
 800068c:	f104 0414 	add.w	r4, r4, #20
 8000690:	f1c4 0220 	rsb	r2, r4, #32
 8000694:	fa20 f004 	lsr.w	r0, r0, r4
 8000698:	fa01 f302 	lsl.w	r3, r1, r2
 800069c:	ea40 0003 	orr.w	r0, r0, r3
 80006a0:	fa21 f304 	lsr.w	r3, r1, r4
 80006a4:	ea45 0103 	orr.w	r1, r5, r3
 80006a8:	bd30      	pop	{r4, r5, pc}
 80006aa:	f1c4 040c 	rsb	r4, r4, #12
 80006ae:	f1c4 0220 	rsb	r2, r4, #32
 80006b2:	fa20 f002 	lsr.w	r0, r0, r2
 80006b6:	fa01 f304 	lsl.w	r3, r1, r4
 80006ba:	ea40 0003 	orr.w	r0, r0, r3
 80006be:	4629      	mov	r1, r5
 80006c0:	bd30      	pop	{r4, r5, pc}
 80006c2:	fa21 f004 	lsr.w	r0, r1, r4
 80006c6:	4629      	mov	r1, r5
 80006c8:	bd30      	pop	{r4, r5, pc}
 80006ca:	f094 0f00 	teq	r4, #0
 80006ce:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80006d2:	bf06      	itte	eq
 80006d4:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80006d8:	3401      	addeq	r4, #1
 80006da:	3d01      	subne	r5, #1
 80006dc:	e74e      	b.n	800057c <__adddf3+0x8c>
 80006de:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006e2:	bf18      	it	ne
 80006e4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006e8:	d029      	beq.n	800073e <__adddf3+0x24e>
 80006ea:	ea94 0f05 	teq	r4, r5
 80006ee:	bf08      	it	eq
 80006f0:	ea90 0f02 	teqeq	r0, r2
 80006f4:	d005      	beq.n	8000702 <__adddf3+0x212>
 80006f6:	ea54 0c00 	orrs.w	ip, r4, r0
 80006fa:	bf04      	itt	eq
 80006fc:	4619      	moveq	r1, r3
 80006fe:	4610      	moveq	r0, r2
 8000700:	bd30      	pop	{r4, r5, pc}
 8000702:	ea91 0f03 	teq	r1, r3
 8000706:	bf1e      	ittt	ne
 8000708:	2100      	movne	r1, #0
 800070a:	2000      	movne	r0, #0
 800070c:	bd30      	popne	{r4, r5, pc}
 800070e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000712:	d105      	bne.n	8000720 <__adddf3+0x230>
 8000714:	0040      	lsls	r0, r0, #1
 8000716:	4149      	adcs	r1, r1
 8000718:	bf28      	it	cs
 800071a:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800071e:	bd30      	pop	{r4, r5, pc}
 8000720:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000724:	bf3c      	itt	cc
 8000726:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800072a:	bd30      	popcc	{r4, r5, pc}
 800072c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000730:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000734:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000738:	f04f 0000 	mov.w	r0, #0
 800073c:	bd30      	pop	{r4, r5, pc}
 800073e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000742:	bf1a      	itte	ne
 8000744:	4619      	movne	r1, r3
 8000746:	4610      	movne	r0, r2
 8000748:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800074c:	bf1c      	itt	ne
 800074e:	460b      	movne	r3, r1
 8000750:	4602      	movne	r2, r0
 8000752:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000756:	bf06      	itte	eq
 8000758:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800075c:	ea91 0f03 	teqeq	r1, r3
 8000760:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop

08000768 <__aeabi_ui2d>:
 8000768:	f090 0f00 	teq	r0, #0
 800076c:	bf04      	itt	eq
 800076e:	2100      	moveq	r1, #0
 8000770:	4770      	bxeq	lr
 8000772:	b530      	push	{r4, r5, lr}
 8000774:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000778:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800077c:	f04f 0500 	mov.w	r5, #0
 8000780:	f04f 0100 	mov.w	r1, #0
 8000784:	e750      	b.n	8000628 <__adddf3+0x138>
 8000786:	bf00      	nop

08000788 <__aeabi_i2d>:
 8000788:	f090 0f00 	teq	r0, #0
 800078c:	bf04      	itt	eq
 800078e:	2100      	moveq	r1, #0
 8000790:	4770      	bxeq	lr
 8000792:	b530      	push	{r4, r5, lr}
 8000794:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000798:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800079c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80007a0:	bf48      	it	mi
 80007a2:	4240      	negmi	r0, r0
 80007a4:	f04f 0100 	mov.w	r1, #0
 80007a8:	e73e      	b.n	8000628 <__adddf3+0x138>
 80007aa:	bf00      	nop

080007ac <__aeabi_f2d>:
 80007ac:	0042      	lsls	r2, r0, #1
 80007ae:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007b2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007b6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007ba:	bf1f      	itttt	ne
 80007bc:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80007c0:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80007c4:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80007c8:	4770      	bxne	lr
 80007ca:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80007ce:	bf08      	it	eq
 80007d0:	4770      	bxeq	lr
 80007d2:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80007d6:	bf04      	itt	eq
 80007d8:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80007dc:	4770      	bxeq	lr
 80007de:	b530      	push	{r4, r5, lr}
 80007e0:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80007e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80007e8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80007ec:	e71c      	b.n	8000628 <__adddf3+0x138>
 80007ee:	bf00      	nop

080007f0 <__aeabi_ul2d>:
 80007f0:	ea50 0201 	orrs.w	r2, r0, r1
 80007f4:	bf08      	it	eq
 80007f6:	4770      	bxeq	lr
 80007f8:	b530      	push	{r4, r5, lr}
 80007fa:	f04f 0500 	mov.w	r5, #0
 80007fe:	e00a      	b.n	8000816 <__aeabi_l2d+0x16>

08000800 <__aeabi_l2d>:
 8000800:	ea50 0201 	orrs.w	r2, r0, r1
 8000804:	bf08      	it	eq
 8000806:	4770      	bxeq	lr
 8000808:	b530      	push	{r4, r5, lr}
 800080a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800080e:	d502      	bpl.n	8000816 <__aeabi_l2d+0x16>
 8000810:	4240      	negs	r0, r0
 8000812:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000816:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800081a:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800081e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000822:	f43f aed8 	beq.w	80005d6 <__adddf3+0xe6>
 8000826:	f04f 0203 	mov.w	r2, #3
 800082a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800082e:	bf18      	it	ne
 8000830:	3203      	addne	r2, #3
 8000832:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000836:	bf18      	it	ne
 8000838:	3203      	addne	r2, #3
 800083a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800083e:	f1c2 0320 	rsb	r3, r2, #32
 8000842:	fa00 fc03 	lsl.w	ip, r0, r3
 8000846:	fa20 f002 	lsr.w	r0, r0, r2
 800084a:	fa01 fe03 	lsl.w	lr, r1, r3
 800084e:	ea40 000e 	orr.w	r0, r0, lr
 8000852:	fa21 f102 	lsr.w	r1, r1, r2
 8000856:	4414      	add	r4, r2
 8000858:	e6bd      	b.n	80005d6 <__adddf3+0xe6>
 800085a:	bf00      	nop

0800085c <__aeabi_d2iz>:
 800085c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000860:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000864:	d215      	bcs.n	8000892 <__aeabi_d2iz+0x36>
 8000866:	d511      	bpl.n	800088c <__aeabi_d2iz+0x30>
 8000868:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 800086c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000870:	d912      	bls.n	8000898 <__aeabi_d2iz+0x3c>
 8000872:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000876:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800087a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800087e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000882:	fa23 f002 	lsr.w	r0, r3, r2
 8000886:	bf18      	it	ne
 8000888:	4240      	negne	r0, r0
 800088a:	4770      	bx	lr
 800088c:	f04f 0000 	mov.w	r0, #0
 8000890:	4770      	bx	lr
 8000892:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000896:	d105      	bne.n	80008a4 <__aeabi_d2iz+0x48>
 8000898:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 800089c:	bf08      	it	eq
 800089e:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 80008a2:	4770      	bx	lr
 80008a4:	f04f 0000 	mov.w	r0, #0
 80008a8:	4770      	bx	lr
 80008aa:	bf00      	nop

080008ac <__aeabi_ldivmod>:
 80008ac:	b97b      	cbnz	r3, 80008ce <__aeabi_ldivmod+0x22>
 80008ae:	b972      	cbnz	r2, 80008ce <__aeabi_ldivmod+0x22>
 80008b0:	2900      	cmp	r1, #0
 80008b2:	bfbe      	ittt	lt
 80008b4:	2000      	movlt	r0, #0
 80008b6:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80008ba:	e006      	blt.n	80008ca <__aeabi_ldivmod+0x1e>
 80008bc:	bf08      	it	eq
 80008be:	2800      	cmpeq	r0, #0
 80008c0:	bf1c      	itt	ne
 80008c2:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80008c6:	f04f 30ff 	movne.w	r0, #4294967295
 80008ca:	f000 b9d3 	b.w	8000c74 <__aeabi_idiv0>
 80008ce:	f1ad 0c08 	sub.w	ip, sp, #8
 80008d2:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80008d6:	2900      	cmp	r1, #0
 80008d8:	db09      	blt.n	80008ee <__aeabi_ldivmod+0x42>
 80008da:	2b00      	cmp	r3, #0
 80008dc:	db1a      	blt.n	8000914 <__aeabi_ldivmod+0x68>
 80008de:	f000 f84d 	bl	800097c <__udivmoddi4>
 80008e2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80008e6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80008ea:	b004      	add	sp, #16
 80008ec:	4770      	bx	lr
 80008ee:	4240      	negs	r0, r0
 80008f0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008f4:	2b00      	cmp	r3, #0
 80008f6:	db1b      	blt.n	8000930 <__aeabi_ldivmod+0x84>
 80008f8:	f000 f840 	bl	800097c <__udivmoddi4>
 80008fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000900:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000904:	b004      	add	sp, #16
 8000906:	4240      	negs	r0, r0
 8000908:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800090c:	4252      	negs	r2, r2
 800090e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000912:	4770      	bx	lr
 8000914:	4252      	negs	r2, r2
 8000916:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800091a:	f000 f82f 	bl	800097c <__udivmoddi4>
 800091e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000922:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000926:	b004      	add	sp, #16
 8000928:	4240      	negs	r0, r0
 800092a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800092e:	4770      	bx	lr
 8000930:	4252      	negs	r2, r2
 8000932:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000936:	f000 f821 	bl	800097c <__udivmoddi4>
 800093a:	f8dd e004 	ldr.w	lr, [sp, #4]
 800093e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000942:	b004      	add	sp, #16
 8000944:	4252      	negs	r2, r2
 8000946:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800094a:	4770      	bx	lr

0800094c <__aeabi_uldivmod>:
 800094c:	b953      	cbnz	r3, 8000964 <__aeabi_uldivmod+0x18>
 800094e:	b94a      	cbnz	r2, 8000964 <__aeabi_uldivmod+0x18>
 8000950:	2900      	cmp	r1, #0
 8000952:	bf08      	it	eq
 8000954:	2800      	cmpeq	r0, #0
 8000956:	bf1c      	itt	ne
 8000958:	f04f 31ff 	movne.w	r1, #4294967295
 800095c:	f04f 30ff 	movne.w	r0, #4294967295
 8000960:	f000 b988 	b.w	8000c74 <__aeabi_idiv0>
 8000964:	f1ad 0c08 	sub.w	ip, sp, #8
 8000968:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800096c:	f000 f806 	bl	800097c <__udivmoddi4>
 8000970:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000974:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000978:	b004      	add	sp, #16
 800097a:	4770      	bx	lr

0800097c <__udivmoddi4>:
 800097c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000980:	9d08      	ldr	r5, [sp, #32]
 8000982:	468e      	mov	lr, r1
 8000984:	4604      	mov	r4, r0
 8000986:	4688      	mov	r8, r1
 8000988:	2b00      	cmp	r3, #0
 800098a:	d14a      	bne.n	8000a22 <__udivmoddi4+0xa6>
 800098c:	428a      	cmp	r2, r1
 800098e:	4617      	mov	r7, r2
 8000990:	d962      	bls.n	8000a58 <__udivmoddi4+0xdc>
 8000992:	fab2 f682 	clz	r6, r2
 8000996:	b14e      	cbz	r6, 80009ac <__udivmoddi4+0x30>
 8000998:	f1c6 0320 	rsb	r3, r6, #32
 800099c:	fa01 f806 	lsl.w	r8, r1, r6
 80009a0:	fa20 f303 	lsr.w	r3, r0, r3
 80009a4:	40b7      	lsls	r7, r6
 80009a6:	ea43 0808 	orr.w	r8, r3, r8
 80009aa:	40b4      	lsls	r4, r6
 80009ac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80009b0:	fa1f fc87 	uxth.w	ip, r7
 80009b4:	fbb8 f1fe 	udiv	r1, r8, lr
 80009b8:	0c23      	lsrs	r3, r4, #16
 80009ba:	fb0e 8811 	mls	r8, lr, r1, r8
 80009be:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80009c2:	fb01 f20c 	mul.w	r2, r1, ip
 80009c6:	429a      	cmp	r2, r3
 80009c8:	d909      	bls.n	80009de <__udivmoddi4+0x62>
 80009ca:	18fb      	adds	r3, r7, r3
 80009cc:	f101 30ff 	add.w	r0, r1, #4294967295
 80009d0:	f080 80ea 	bcs.w	8000ba8 <__udivmoddi4+0x22c>
 80009d4:	429a      	cmp	r2, r3
 80009d6:	f240 80e7 	bls.w	8000ba8 <__udivmoddi4+0x22c>
 80009da:	3902      	subs	r1, #2
 80009dc:	443b      	add	r3, r7
 80009de:	1a9a      	subs	r2, r3, r2
 80009e0:	b2a3      	uxth	r3, r4
 80009e2:	fbb2 f0fe 	udiv	r0, r2, lr
 80009e6:	fb0e 2210 	mls	r2, lr, r0, r2
 80009ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80009ee:	fb00 fc0c 	mul.w	ip, r0, ip
 80009f2:	459c      	cmp	ip, r3
 80009f4:	d909      	bls.n	8000a0a <__udivmoddi4+0x8e>
 80009f6:	18fb      	adds	r3, r7, r3
 80009f8:	f100 32ff 	add.w	r2, r0, #4294967295
 80009fc:	f080 80d6 	bcs.w	8000bac <__udivmoddi4+0x230>
 8000a00:	459c      	cmp	ip, r3
 8000a02:	f240 80d3 	bls.w	8000bac <__udivmoddi4+0x230>
 8000a06:	443b      	add	r3, r7
 8000a08:	3802      	subs	r0, #2
 8000a0a:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a0e:	eba3 030c 	sub.w	r3, r3, ip
 8000a12:	2100      	movs	r1, #0
 8000a14:	b11d      	cbz	r5, 8000a1e <__udivmoddi4+0xa2>
 8000a16:	40f3      	lsrs	r3, r6
 8000a18:	2200      	movs	r2, #0
 8000a1a:	e9c5 3200 	strd	r3, r2, [r5]
 8000a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a22:	428b      	cmp	r3, r1
 8000a24:	d905      	bls.n	8000a32 <__udivmoddi4+0xb6>
 8000a26:	b10d      	cbz	r5, 8000a2c <__udivmoddi4+0xb0>
 8000a28:	e9c5 0100 	strd	r0, r1, [r5]
 8000a2c:	2100      	movs	r1, #0
 8000a2e:	4608      	mov	r0, r1
 8000a30:	e7f5      	b.n	8000a1e <__udivmoddi4+0xa2>
 8000a32:	fab3 f183 	clz	r1, r3
 8000a36:	2900      	cmp	r1, #0
 8000a38:	d146      	bne.n	8000ac8 <__udivmoddi4+0x14c>
 8000a3a:	4573      	cmp	r3, lr
 8000a3c:	d302      	bcc.n	8000a44 <__udivmoddi4+0xc8>
 8000a3e:	4282      	cmp	r2, r0
 8000a40:	f200 8105 	bhi.w	8000c4e <__udivmoddi4+0x2d2>
 8000a44:	1a84      	subs	r4, r0, r2
 8000a46:	eb6e 0203 	sbc.w	r2, lr, r3
 8000a4a:	2001      	movs	r0, #1
 8000a4c:	4690      	mov	r8, r2
 8000a4e:	2d00      	cmp	r5, #0
 8000a50:	d0e5      	beq.n	8000a1e <__udivmoddi4+0xa2>
 8000a52:	e9c5 4800 	strd	r4, r8, [r5]
 8000a56:	e7e2      	b.n	8000a1e <__udivmoddi4+0xa2>
 8000a58:	2a00      	cmp	r2, #0
 8000a5a:	f000 8090 	beq.w	8000b7e <__udivmoddi4+0x202>
 8000a5e:	fab2 f682 	clz	r6, r2
 8000a62:	2e00      	cmp	r6, #0
 8000a64:	f040 80a4 	bne.w	8000bb0 <__udivmoddi4+0x234>
 8000a68:	1a8a      	subs	r2, r1, r2
 8000a6a:	0c03      	lsrs	r3, r0, #16
 8000a6c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000a70:	b280      	uxth	r0, r0
 8000a72:	b2bc      	uxth	r4, r7
 8000a74:	2101      	movs	r1, #1
 8000a76:	fbb2 fcfe 	udiv	ip, r2, lr
 8000a7a:	fb0e 221c 	mls	r2, lr, ip, r2
 8000a7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000a82:	fb04 f20c 	mul.w	r2, r4, ip
 8000a86:	429a      	cmp	r2, r3
 8000a88:	d907      	bls.n	8000a9a <__udivmoddi4+0x11e>
 8000a8a:	18fb      	adds	r3, r7, r3
 8000a8c:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000a90:	d202      	bcs.n	8000a98 <__udivmoddi4+0x11c>
 8000a92:	429a      	cmp	r2, r3
 8000a94:	f200 80e0 	bhi.w	8000c58 <__udivmoddi4+0x2dc>
 8000a98:	46c4      	mov	ip, r8
 8000a9a:	1a9b      	subs	r3, r3, r2
 8000a9c:	fbb3 f2fe 	udiv	r2, r3, lr
 8000aa0:	fb0e 3312 	mls	r3, lr, r2, r3
 8000aa4:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000aa8:	fb02 f404 	mul.w	r4, r2, r4
 8000aac:	429c      	cmp	r4, r3
 8000aae:	d907      	bls.n	8000ac0 <__udivmoddi4+0x144>
 8000ab0:	18fb      	adds	r3, r7, r3
 8000ab2:	f102 30ff 	add.w	r0, r2, #4294967295
 8000ab6:	d202      	bcs.n	8000abe <__udivmoddi4+0x142>
 8000ab8:	429c      	cmp	r4, r3
 8000aba:	f200 80ca 	bhi.w	8000c52 <__udivmoddi4+0x2d6>
 8000abe:	4602      	mov	r2, r0
 8000ac0:	1b1b      	subs	r3, r3, r4
 8000ac2:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000ac6:	e7a5      	b.n	8000a14 <__udivmoddi4+0x98>
 8000ac8:	f1c1 0620 	rsb	r6, r1, #32
 8000acc:	408b      	lsls	r3, r1
 8000ace:	fa22 f706 	lsr.w	r7, r2, r6
 8000ad2:	431f      	orrs	r7, r3
 8000ad4:	fa0e f401 	lsl.w	r4, lr, r1
 8000ad8:	fa20 f306 	lsr.w	r3, r0, r6
 8000adc:	fa2e fe06 	lsr.w	lr, lr, r6
 8000ae0:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000ae4:	4323      	orrs	r3, r4
 8000ae6:	fa00 f801 	lsl.w	r8, r0, r1
 8000aea:	fa1f fc87 	uxth.w	ip, r7
 8000aee:	fbbe f0f9 	udiv	r0, lr, r9
 8000af2:	0c1c      	lsrs	r4, r3, #16
 8000af4:	fb09 ee10 	mls	lr, r9, r0, lr
 8000af8:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000afc:	fb00 fe0c 	mul.w	lr, r0, ip
 8000b00:	45a6      	cmp	lr, r4
 8000b02:	fa02 f201 	lsl.w	r2, r2, r1
 8000b06:	d909      	bls.n	8000b1c <__udivmoddi4+0x1a0>
 8000b08:	193c      	adds	r4, r7, r4
 8000b0a:	f100 3aff 	add.w	sl, r0, #4294967295
 8000b0e:	f080 809c 	bcs.w	8000c4a <__udivmoddi4+0x2ce>
 8000b12:	45a6      	cmp	lr, r4
 8000b14:	f240 8099 	bls.w	8000c4a <__udivmoddi4+0x2ce>
 8000b18:	3802      	subs	r0, #2
 8000b1a:	443c      	add	r4, r7
 8000b1c:	eba4 040e 	sub.w	r4, r4, lr
 8000b20:	fa1f fe83 	uxth.w	lr, r3
 8000b24:	fbb4 f3f9 	udiv	r3, r4, r9
 8000b28:	fb09 4413 	mls	r4, r9, r3, r4
 8000b2c:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000b30:	fb03 fc0c 	mul.w	ip, r3, ip
 8000b34:	45a4      	cmp	ip, r4
 8000b36:	d908      	bls.n	8000b4a <__udivmoddi4+0x1ce>
 8000b38:	193c      	adds	r4, r7, r4
 8000b3a:	f103 3eff 	add.w	lr, r3, #4294967295
 8000b3e:	f080 8082 	bcs.w	8000c46 <__udivmoddi4+0x2ca>
 8000b42:	45a4      	cmp	ip, r4
 8000b44:	d97f      	bls.n	8000c46 <__udivmoddi4+0x2ca>
 8000b46:	3b02      	subs	r3, #2
 8000b48:	443c      	add	r4, r7
 8000b4a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000b4e:	eba4 040c 	sub.w	r4, r4, ip
 8000b52:	fba0 ec02 	umull	lr, ip, r0, r2
 8000b56:	4564      	cmp	r4, ip
 8000b58:	4673      	mov	r3, lr
 8000b5a:	46e1      	mov	r9, ip
 8000b5c:	d362      	bcc.n	8000c24 <__udivmoddi4+0x2a8>
 8000b5e:	d05f      	beq.n	8000c20 <__udivmoddi4+0x2a4>
 8000b60:	b15d      	cbz	r5, 8000b7a <__udivmoddi4+0x1fe>
 8000b62:	ebb8 0203 	subs.w	r2, r8, r3
 8000b66:	eb64 0409 	sbc.w	r4, r4, r9
 8000b6a:	fa04 f606 	lsl.w	r6, r4, r6
 8000b6e:	fa22 f301 	lsr.w	r3, r2, r1
 8000b72:	431e      	orrs	r6, r3
 8000b74:	40cc      	lsrs	r4, r1
 8000b76:	e9c5 6400 	strd	r6, r4, [r5]
 8000b7a:	2100      	movs	r1, #0
 8000b7c:	e74f      	b.n	8000a1e <__udivmoddi4+0xa2>
 8000b7e:	fbb1 fcf2 	udiv	ip, r1, r2
 8000b82:	0c01      	lsrs	r1, r0, #16
 8000b84:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000b88:	b280      	uxth	r0, r0
 8000b8a:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000b8e:	463b      	mov	r3, r7
 8000b90:	4638      	mov	r0, r7
 8000b92:	463c      	mov	r4, r7
 8000b94:	46b8      	mov	r8, r7
 8000b96:	46be      	mov	lr, r7
 8000b98:	2620      	movs	r6, #32
 8000b9a:	fbb1 f1f7 	udiv	r1, r1, r7
 8000b9e:	eba2 0208 	sub.w	r2, r2, r8
 8000ba2:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000ba6:	e766      	b.n	8000a76 <__udivmoddi4+0xfa>
 8000ba8:	4601      	mov	r1, r0
 8000baa:	e718      	b.n	80009de <__udivmoddi4+0x62>
 8000bac:	4610      	mov	r0, r2
 8000bae:	e72c      	b.n	8000a0a <__udivmoddi4+0x8e>
 8000bb0:	f1c6 0220 	rsb	r2, r6, #32
 8000bb4:	fa2e f302 	lsr.w	r3, lr, r2
 8000bb8:	40b7      	lsls	r7, r6
 8000bba:	40b1      	lsls	r1, r6
 8000bbc:	fa20 f202 	lsr.w	r2, r0, r2
 8000bc0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000bc4:	430a      	orrs	r2, r1
 8000bc6:	fbb3 f8fe 	udiv	r8, r3, lr
 8000bca:	b2bc      	uxth	r4, r7
 8000bcc:	fb0e 3318 	mls	r3, lr, r8, r3
 8000bd0:	0c11      	lsrs	r1, r2, #16
 8000bd2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000bd6:	fb08 f904 	mul.w	r9, r8, r4
 8000bda:	40b0      	lsls	r0, r6
 8000bdc:	4589      	cmp	r9, r1
 8000bde:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000be2:	b280      	uxth	r0, r0
 8000be4:	d93e      	bls.n	8000c64 <__udivmoddi4+0x2e8>
 8000be6:	1879      	adds	r1, r7, r1
 8000be8:	f108 3cff 	add.w	ip, r8, #4294967295
 8000bec:	d201      	bcs.n	8000bf2 <__udivmoddi4+0x276>
 8000bee:	4589      	cmp	r9, r1
 8000bf0:	d81f      	bhi.n	8000c32 <__udivmoddi4+0x2b6>
 8000bf2:	eba1 0109 	sub.w	r1, r1, r9
 8000bf6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000bfa:	fb09 f804 	mul.w	r8, r9, r4
 8000bfe:	fb0e 1119 	mls	r1, lr, r9, r1
 8000c02:	b292      	uxth	r2, r2
 8000c04:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c08:	4542      	cmp	r2, r8
 8000c0a:	d229      	bcs.n	8000c60 <__udivmoddi4+0x2e4>
 8000c0c:	18ba      	adds	r2, r7, r2
 8000c0e:	f109 31ff 	add.w	r1, r9, #4294967295
 8000c12:	d2c4      	bcs.n	8000b9e <__udivmoddi4+0x222>
 8000c14:	4542      	cmp	r2, r8
 8000c16:	d2c2      	bcs.n	8000b9e <__udivmoddi4+0x222>
 8000c18:	f1a9 0102 	sub.w	r1, r9, #2
 8000c1c:	443a      	add	r2, r7
 8000c1e:	e7be      	b.n	8000b9e <__udivmoddi4+0x222>
 8000c20:	45f0      	cmp	r8, lr
 8000c22:	d29d      	bcs.n	8000b60 <__udivmoddi4+0x1e4>
 8000c24:	ebbe 0302 	subs.w	r3, lr, r2
 8000c28:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000c2c:	3801      	subs	r0, #1
 8000c2e:	46e1      	mov	r9, ip
 8000c30:	e796      	b.n	8000b60 <__udivmoddi4+0x1e4>
 8000c32:	eba7 0909 	sub.w	r9, r7, r9
 8000c36:	4449      	add	r1, r9
 8000c38:	f1a8 0c02 	sub.w	ip, r8, #2
 8000c3c:	fbb1 f9fe 	udiv	r9, r1, lr
 8000c40:	fb09 f804 	mul.w	r8, r9, r4
 8000c44:	e7db      	b.n	8000bfe <__udivmoddi4+0x282>
 8000c46:	4673      	mov	r3, lr
 8000c48:	e77f      	b.n	8000b4a <__udivmoddi4+0x1ce>
 8000c4a:	4650      	mov	r0, sl
 8000c4c:	e766      	b.n	8000b1c <__udivmoddi4+0x1a0>
 8000c4e:	4608      	mov	r0, r1
 8000c50:	e6fd      	b.n	8000a4e <__udivmoddi4+0xd2>
 8000c52:	443b      	add	r3, r7
 8000c54:	3a02      	subs	r2, #2
 8000c56:	e733      	b.n	8000ac0 <__udivmoddi4+0x144>
 8000c58:	f1ac 0c02 	sub.w	ip, ip, #2
 8000c5c:	443b      	add	r3, r7
 8000c5e:	e71c      	b.n	8000a9a <__udivmoddi4+0x11e>
 8000c60:	4649      	mov	r1, r9
 8000c62:	e79c      	b.n	8000b9e <__udivmoddi4+0x222>
 8000c64:	eba1 0109 	sub.w	r1, r1, r9
 8000c68:	46c4      	mov	ip, r8
 8000c6a:	fbb1 f9fe 	udiv	r9, r1, lr
 8000c6e:	fb09 f804 	mul.w	r8, r9, r4
 8000c72:	e7c4      	b.n	8000bfe <__udivmoddi4+0x282>

08000c74 <__aeabi_idiv0>:
 8000c74:	4770      	bx	lr
 8000c76:	bf00      	nop

08000c78 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000c78:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000cb0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000c7c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000c7e:	e003      	b.n	8000c88 <LoopCopyDataInit>

08000c80 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000c80:	4b0c      	ldr	r3, [pc, #48]	@ (8000cb4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000c82:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000c84:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000c86:	3104      	adds	r1, #4

08000c88 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000c88:	480b      	ldr	r0, [pc, #44]	@ (8000cb8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000c8a:	4b0c      	ldr	r3, [pc, #48]	@ (8000cbc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000c8c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000c8e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000c90:	d3f6      	bcc.n	8000c80 <CopyDataInit>
  ldr  r2, =_sbss
 8000c92:	4a0b      	ldr	r2, [pc, #44]	@ (8000cc0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000c94:	e002      	b.n	8000c9c <LoopFillZerobss>

08000c96 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000c96:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000c98:	f842 3b04 	str.w	r3, [r2], #4

08000c9c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000c9c:	4b09      	ldr	r3, [pc, #36]	@ (8000cc4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000c9e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ca0:	d3f9      	bcc.n	8000c96 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ca2:	f00f fb15 	bl	80102d0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ca6:	f02d fc93 	bl	802e5d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000caa:	f001 f867 	bl	8001d7c <main>
  bx  lr    
 8000cae:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cb0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cb4:	081feeb0 	.word	0x081feeb0
  ldr  r0, =_sdata
 8000cb8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cbc:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 8000cc0:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 8000cc4:	200145c4 	.word	0x200145c4

08000cc8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000cc8:	e7fe      	b.n	8000cc8 <ADC_IRQHandler>

08000cca <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000cca:	4770      	bx	lr

08000ccc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000ccc:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000cce:	f000 fdbf 	bl	8001850 <touchgfx_components_init>
    touchgfx_init();
}
 8000cd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000cd6:	f000 bd41 	b.w	800175c <touchgfx_init>

08000cda <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000cda:	f000 bdbb 	b.w	8001854 <touchgfx_taskEntry>

08000cde <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000cde:	4770      	bx	lr

08000ce0 <_ZN20STM32TouchControllerD0Ev>:
 8000ce0:	b510      	push	{r4, lr}
 8000ce2:	2104      	movs	r1, #4
 8000ce4:	4604      	mov	r4, r0
 8000ce6:	f02c fa86 	bl	802d1f6 <_ZdlPvj>
 8000cea:	4620      	mov	r0, r4
 8000cec:	bd10      	pop	{r4, pc}
	...

08000cf0 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000cf0:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000cf2:	4b0c      	ldr	r3, [pc, #48]	@ (8000d24 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000cf4:	4c0c      	ldr	r4, [pc, #48]	@ (8000d28 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000cf6:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000cf8:	4b0c      	ldr	r3, [pc, #48]	@ (8000d2c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000cfa:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8000cfc:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000cfe:	6863      	ldr	r3, [r4, #4]
 8000d00:	4798      	blx	r3
 8000d02:	f640 0311 	movw	r3, #2065	@ 0x811
 8000d06:	4298      	cmp	r0, r3
 8000d08:	d10a      	bne.n	8000d20 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000d0a:	4d09      	ldr	r5, [pc, #36]	@ (8000d30 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000d0c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000d0e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000d10:	2082      	movs	r0, #130	@ 0x82
 8000d12:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000d14:	682b      	ldr	r3, [r5, #0]
 8000d16:	2082      	movs	r0, #130	@ 0x82
 8000d18:	68db      	ldr	r3, [r3, #12]
 8000d1a:	4798      	blx	r3
 8000d1c:	2000      	movs	r0, #0
    }

    return ret;
}
 8000d1e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000d20:	2001      	movs	r0, #1
 8000d22:	e7fc      	b.n	8000d1e <_Z11BSP_TS_Inittt+0x2e>
 8000d24:	200003a6 	.word	0x200003a6
 8000d28:	2000004c 	.word	0x2000004c
 8000d2c:	200003a4 	.word	0x200003a4
 8000d30:	200003a8 	.word	0x200003a8

08000d34 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000d34:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000d38:	20f0      	movs	r0, #240	@ 0xf0
 8000d3a:	f7ff bfd9 	b.w	8000cf0 <_Z11BSP_TS_Inittt>
	...

08000d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000d40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000d42:	4d39      	ldr	r5, [pc, #228]	@ (8000e28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000d44:	682b      	ldr	r3, [r5, #0]
{
 8000d46:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000d48:	691b      	ldr	r3, [r3, #16]
 8000d4a:	2082      	movs	r0, #130	@ 0x82
 8000d4c:	4798      	blx	r3
 8000d4e:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000d50:	2800      	cmp	r0, #0
 8000d52:	d04e      	beq.n	8000df2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000d54:	682b      	ldr	r3, [r5, #0]
 8000d56:	f10d 0206 	add.w	r2, sp, #6
 8000d5a:	695b      	ldr	r3, [r3, #20]
 8000d5c:	a901      	add	r1, sp, #4
 8000d5e:	2082      	movs	r0, #130	@ 0x82
 8000d60:	4798      	blx	r3

        if (isRevD)
 8000d62:	4b32      	ldr	r3, [pc, #200]	@ (8000e2c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000d64:	781b      	ldrb	r3, [r3, #0]
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	d04b      	beq.n	8000e02 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 8000d6a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000d6e:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000d72:	429a      	cmp	r2, r3
 8000d74:	d93f      	bls.n	8000df6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 8000d76:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 8000d7a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000d7e:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000d80:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000d82:	2b0a      	cmp	r3, #10
 8000d84:	d942      	bls.n	8000e0c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 8000d86:	220b      	movs	r2, #11
 8000d88:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000d8c:	4a28      	ldr	r2, [pc, #160]	@ (8000e30 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000d8e:	8812      	ldrh	r2, [r2, #0]
 8000d90:	4293      	cmp	r3, r2
 8000d92:	d901      	bls.n	8000d98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000d94:	3a01      	subs	r2, #1
 8000d96:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000d98:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000d9c:	4825      	ldr	r0, [pc, #148]	@ (8000e34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000d9e:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000da2:	428a      	cmp	r2, r1
 8000da4:	d834      	bhi.n	8000e10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 8000da6:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 8000daa:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000dac:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8000dae:	b292      	uxth	r2, r2
        xr = x / 15;
 8000db0:	250f      	movs	r5, #15
 8000db2:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 8000db6:	4d20      	ldr	r5, [pc, #128]	@ (8000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 8000db8:	882d      	ldrh	r5, [r5, #0]
 8000dba:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8000dbc:	bf84      	itt	hi
 8000dbe:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8000dc2:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000dc4:	428a      	cmp	r2, r1
 8000dc6:	4615      	mov	r5, r2
 8000dc8:	b28e      	uxth	r6, r1
 8000dca:	d92a      	bls.n	8000e22 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8000dcc:	1b92      	subs	r2, r2, r6
 8000dce:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000dd0:	4e1a      	ldr	r6, [pc, #104]	@ (8000e3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 8000dd2:	6837      	ldr	r7, [r6, #0]
 8000dd4:	42bb      	cmp	r3, r7
 8000dd6:	b2ba      	uxth	r2, r7
 8000dd8:	bf8c      	ite	hi
 8000dda:	1a9a      	subhi	r2, r3, r2
 8000ddc:	1ad2      	subls	r2, r2, r3
 8000dde:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 8000de0:	4411      	add	r1, r2
 8000de2:	2905      	cmp	r1, #5
        {
            _x = x;
 8000de4:	bfc4      	itt	gt
 8000de6:	6005      	strgt	r5, [r0, #0]
            _y = y;
 8000de8:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000dea:	6803      	ldr	r3, [r0, #0]
 8000dec:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000dee:	6833      	ldr	r3, [r6, #0]
 8000df0:	80a3      	strh	r3, [r4, #4]
    }
}
 8000df2:	b003      	add	sp, #12
 8000df4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 8000df6:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 8000df8:	bf9c      	itt	ls
 8000dfa:	22b4      	movls	r2, #180	@ 0xb4
 8000dfc:	f8ad 2006 	strhls.w	r2, [sp, #6]
 8000e00:	e7bb      	b.n	8000d7a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 8000e02:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e06:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8000e0a:	e7b9      	b.n	8000d80 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	e7c3      	b.n	8000d98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000e10:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000e14:	3208      	adds	r2, #8
 8000e16:	b292      	uxth	r2, r2
        if (xr <= 0)
 8000e18:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e1a:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000e1c:	d8c8      	bhi.n	8000db0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e1e:	2500      	movs	r5, #0
            xr = 0;
 8000e20:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e22:	1a89      	subs	r1, r1, r2
 8000e24:	b289      	uxth	r1, r1
 8000e26:	e7d3      	b.n	8000dd0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 8000e28:	200003a8 	.word	0x200003a8
 8000e2c:	200027cc 	.word	0x200027cc
 8000e30:	200003a4 	.word	0x200003a4
 8000e34:	200003a0 	.word	0x200003a0
 8000e38:	200003a6 	.word	0x200003a6
 8000e3c:	2000039c 	.word	0x2000039c

08000e40 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000e40:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000e42:	4668      	mov	r0, sp
{
 8000e44:	460d      	mov	r5, r1
 8000e46:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000e48:	f7ff ff7a 	bl	8000d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000e4c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000e50:	b130      	cbz	r0, 8000e60 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000e52:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000e56:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000e58:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000e5c:	6023      	str	r3, [r4, #0]
        return true;
 8000e5e:	2001      	movs	r0, #1
}
 8000e60:	b003      	add	sp, #12
 8000e62:	bd30      	pop	{r4, r5, pc}

08000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000e64:	2803      	cmp	r0, #3
 8000e66:	d821      	bhi.n	8000eac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000e68:	e8df f000 	tbb	[pc, r0]
 8000e6c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000e70:	4b0f      	ldr	r3, [pc, #60]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000e72:	681a      	ldr	r2, [r3, #0]
 8000e74:	fab2 f282 	clz	r2, r2
 8000e78:	0952      	lsrs	r2, r2, #5
 8000e7a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000e7c:	480d      	ldr	r0, [pc, #52]	@ (8000eb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000e7e:	f00f bcbb 	b.w	80107f8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000e82:	4b0b      	ldr	r3, [pc, #44]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000e84:	685a      	ldr	r2, [r3, #4]
 8000e86:	fab2 f282 	clz	r2, r2
 8000e8a:	0952      	lsrs	r2, r2, #5
 8000e8c:	2108      	movs	r1, #8
 8000e8e:	e7f5      	b.n	8000e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000e90:	4b07      	ldr	r3, [pc, #28]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000e92:	689a      	ldr	r2, [r3, #8]
 8000e94:	fab2 f282 	clz	r2, r2
 8000e98:	0952      	lsrs	r2, r2, #5
 8000e9a:	2110      	movs	r1, #16
 8000e9c:	e7ee      	b.n	8000e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000e9e:	4b04      	ldr	r3, [pc, #16]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000ea0:	68da      	ldr	r2, [r3, #12]
 8000ea2:	fab2 f282 	clz	r2, r2
 8000ea6:	0952      	lsrs	r2, r2, #5
 8000ea8:	2120      	movs	r1, #32
 8000eaa:	e7e7      	b.n	8000e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000eac:	4770      	bx	lr
 8000eae:	bf00      	nop
 8000eb0:	200003ac 	.word	0x200003ac
 8000eb4:	40021000 	.word	0x40021000

08000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000eb8:	2803      	cmp	r0, #3
 8000eba:	d821      	bhi.n	8000f00 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8000ebc:	e8df f000 	tbb	[pc, r0]
 8000ec0:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000ec4:	4b0f      	ldr	r3, [pc, #60]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ec6:	681a      	ldr	r2, [r3, #0]
 8000ec8:	3a00      	subs	r2, #0
 8000eca:	bf18      	it	ne
 8000ecc:	2201      	movne	r2, #1
 8000ece:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000ed0:	480d      	ldr	r0, [pc, #52]	@ (8000f08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000ed2:	f00f bc91 	b.w	80107f8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000ed6:	4b0b      	ldr	r3, [pc, #44]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ed8:	685a      	ldr	r2, [r3, #4]
 8000eda:	3a00      	subs	r2, #0
 8000edc:	bf18      	it	ne
 8000ede:	2201      	movne	r2, #1
 8000ee0:	2108      	movs	r1, #8
 8000ee2:	e7f5      	b.n	8000ed0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000ee4:	4b07      	ldr	r3, [pc, #28]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ee6:	689a      	ldr	r2, [r3, #8]
 8000ee8:	3a00      	subs	r2, #0
 8000eea:	bf18      	it	ne
 8000eec:	2201      	movne	r2, #1
 8000eee:	2110      	movs	r1, #16
 8000ef0:	e7ee      	b.n	8000ed0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000ef2:	4b04      	ldr	r3, [pc, #16]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ef4:	68da      	ldr	r2, [r3, #12]
 8000ef6:	3a00      	subs	r2, #0
 8000ef8:	bf18      	it	ne
 8000efa:	2201      	movne	r2, #1
 8000efc:	2120      	movs	r1, #32
 8000efe:	e7e7      	b.n	8000ed0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000f00:	4770      	bx	lr
 8000f02:	bf00      	nop
 8000f04:	200003ac 	.word	0x200003ac
 8000f08:	40021000 	.word	0x40021000

08000f0c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000f0c:	2803      	cmp	r0, #3
 8000f0e:	d80d      	bhi.n	8000f2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000f10:	e8df f000 	tbb	[pc, r0]
 8000f14:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f18:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f1a:	4805      	ldr	r0, [pc, #20]	@ (8000f30 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000f1c:	f00f bc71 	b.w	8010802 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f20:	2108      	movs	r1, #8
 8000f22:	e7fa      	b.n	8000f1a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f24:	2110      	movs	r1, #16
 8000f26:	e7f8      	b.n	8000f1a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f28:	2120      	movs	r1, #32
 8000f2a:	e7f6      	b.n	8000f1a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000f2c:	4770      	bx	lr
 8000f2e:	bf00      	nop
 8000f30:	40021000 	.word	0x40021000

08000f34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000f34:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000f36:	2803      	cmp	r0, #3
 8000f38:	d811      	bhi.n	8000f5e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000f3a:	e8df f000 	tbb	[pc, r0]
 8000f3e:	0a02      	.short	0x0a02
 8000f40:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f42:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f44:	4807      	ldr	r0, [pc, #28]	@ (8000f64 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000f46:	f00f fc51 	bl	80107ec <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000f4a:	1e43      	subs	r3, r0, #1
 8000f4c:	4258      	negs	r0, r3
 8000f4e:	4158      	adcs	r0, r3
 8000f50:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f52:	2108      	movs	r1, #8
 8000f54:	e7f6      	b.n	8000f44 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f56:	2110      	movs	r1, #16
 8000f58:	e7f4      	b.n	8000f44 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f5a:	2120      	movs	r1, #32
 8000f5c:	e7f2      	b.n	8000f44 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000f5e:	2000      	movs	r0, #0
 8000f60:	e7f3      	b.n	8000f4a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000f62:	bf00      	nop
 8000f64:	40021000 	.word	0x40021000

08000f68 <_ZN8touchgfx4GPIO4initEv>:
{
 8000f68:	b570      	push	{r4, r5, r6, lr}
 8000f6a:	4d08      	ldr	r5, [pc, #32]	@ (8000f8c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000f6c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000f6e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000f70:	b2e0      	uxtb	r0, r4
 8000f72:	f7ff ffdf 	bl	8000f34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000f76:	b118      	cbz	r0, 8000f80 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000f78:	682b      	ldr	r3, [r5, #0]
 8000f7a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000f7c:	bf18      	it	ne
 8000f7e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000f80:	3401      	adds	r4, #1
 8000f82:	2c05      	cmp	r4, #5
 8000f84:	f105 0504 	add.w	r5, r5, #4
 8000f88:	d1f2      	bne.n	8000f70 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000f8a:	bd70      	pop	{r4, r5, r6, pc}
 8000f8c:	200003ac 	.word	0x200003ac

08000f90 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f90:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f92:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000f96:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000f9a:	4770      	bx	lr

08000f9c <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000f9c:	4770      	bx	lr

08000f9e <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000f9e:	2000      	movs	r0, #0
 8000fa0:	4770      	bx	lr
	...

08000fa4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fa4:	4b03      	ldr	r3, [pc, #12]	@ (8000fb4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000fa6:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fa8:	3900      	subs	r1, #0
 8000faa:	bf18      	it	ne
 8000fac:	2101      	movne	r1, #1
 8000fae:	7019      	strb	r1, [r3, #0]
    }
 8000fb0:	4770      	bx	lr
 8000fb2:	bf00      	nop
 8000fb4:	20013883 	.word	0x20013883

08000fb8 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8000fb8:	4770      	bx	lr

08000fba <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000fba:	2000      	movs	r0, #0
 8000fbc:	4770      	bx	lr

08000fbe <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000fbe:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8000fc0:	b10b      	cbz	r3, 8000fc6 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000fc2:	4608      	mov	r0, r1
 8000fc4:	4718      	bx	r3
        }
    }
 8000fc6:	4770      	bx	lr

08000fc8 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000fc8:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8000fcc:	4770      	bx	lr

08000fce <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000fce:	6840      	ldr	r0, [r0, #4]
 8000fd0:	6803      	ldr	r3, [r0, #0]
 8000fd2:	699b      	ldr	r3, [r3, #24]
 8000fd4:	4718      	bx	r3

08000fd6 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8000fd6:	4770      	bx	lr

08000fd8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000fd8:	4770      	bx	lr

08000fda <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000fda:	4770      	bx	lr

08000fdc <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8000fdc:	4770      	bx	lr

08000fde <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000fde:	4770      	bx	lr

08000fe0 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000fe0:	b510      	push	{r4, lr}
 8000fe2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000fe4:	f000 fd4c 	bl	8001a80 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000fe8:	6823      	ldr	r3, [r4, #0]
 8000fea:	4903      	ldr	r1, [pc, #12]	@ (8000ff8 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000fec:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ff0:	4620      	mov	r0, r4
}
 8000ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8000ff6:	4718      	bx	r3
 8000ff8:	d0000000 	.word	0xd0000000

08000ffc <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000ffc:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000ffe:	6803      	ldr	r3, [r0, #0]
{
 8001000:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001002:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8001006:	4798      	blx	r3
    enableInterrupts();
 8001008:	6823      	ldr	r3, [r4, #0]
 800100a:	4620      	mov	r0, r4
 800100c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800100e:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001010:	f000 f8ec 	bl	80011ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001014:	6823      	ldr	r3, [r4, #0]
 8001016:	4620      	mov	r0, r4
 8001018:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800101a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800101c:	2029      	movs	r0, #41	@ 0x29
 800101e:	f001 f91f 	bl	8002260 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001022:	f000 f8e3 	bl	80011ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001026:	6823      	ldr	r3, [r4, #0]
 8001028:	4620      	mov	r0, r4
 800102a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800102c:	4798      	blx	r3
    for (;;)
 800102e:	e7f8      	b.n	8001022 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001030 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001030:	b510      	push	{r4, lr}
 8001032:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001034:	f014 fd32 	bl	8015a9c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001038:	6823      	ldr	r3, [r4, #0]
 800103a:	4620      	mov	r0, r4
 800103c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8001040:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001044:	4718      	bx	r3

08001046 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001046:	f000 bcff 	b.w	8001a48 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800104a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800104a:	f000 bd03 	b.w	8001a54 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800104e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800104e:	f000 bd35 	b.w	8001abc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001052 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001052:	f000 bcd5 	b.w	8001a00 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001056 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001056:	f000 bd45 	b.w	8001ae4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800105a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800105a:	f000 bd4d 	b.w	8001af8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800105e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800105e:	f000 bcd9 	b.w	8001a14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001062 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001062:	f013 bf49 	b.w	8014ef8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001066 <_ZN11TouchGFXHALD0Ev>:
 8001066:	b510      	push	{r4, lr}
 8001068:	2184      	movs	r1, #132	@ 0x84
 800106a:	4604      	mov	r4, r0
 800106c:	f02c f8c3 	bl	802d1f6 <_ZdlPvj>
 8001070:	4620      	mov	r0, r4
 8001072:	bd10      	pop	{r4, pc}

08001074 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001074:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001076:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 800107a:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 800107e:	4b0c      	ldr	r3, [pc, #48]	@ (80010b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001080:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001082:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001084:	d009      	beq.n	800109a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001086:	b93a      	cbnz	r2, 8001098 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001088:	4a0a      	ldr	r2, [pc, #40]	@ (80010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800108a:	490b      	ldr	r1, [pc, #44]	@ (80010b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800108c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800108e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001090:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001092:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001094:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001096:	701a      	strb	r2, [r3, #0]
    }
 8001098:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800109a:	2a00      	cmp	r2, #0
 800109c:	d0fc      	beq.n	8001098 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800109e:	4a05      	ldr	r2, [pc, #20]	@ (80010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80010a0:	4905      	ldr	r1, [pc, #20]	@ (80010b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80010a2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80010a4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80010a6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80010a8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80010aa:	2200      	movs	r2, #0
 80010ac:	e7f3      	b.n	8001096 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80010ae:	bf00      	nop
 80010b0:	2001387c 	.word	0x2001387c
 80010b4:	20013878 	.word	0x20013878
 80010b8:	2001387a 	.word	0x2001387a

080010bc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80010bc:	b570      	push	{r4, r5, r6, lr}
 80010be:	460d      	mov	r5, r1
 80010c0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80010c2:	b935      	cbnz	r5, 80010d2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80010c4:	4b09      	ldr	r3, [pc, #36]	@ (80010ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80010c6:	4a0a      	ldr	r2, [pc, #40]	@ (80010f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80010c8:	480a      	ldr	r0, [pc, #40]	@ (80010f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80010ca:	f240 21ff 	movw	r1, #767	@ 0x2ff
 80010ce:	f02c ffcf 	bl	802e070 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80010d2:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80010d6:	4b08      	ldr	r3, [pc, #32]	@ (80010f8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80010d8:	3a00      	subs	r2, #0
 80010da:	bf18      	it	ne
 80010dc:	2201      	movne	r2, #1
 80010de:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80010e0:	6803      	ldr	r3, [r0, #0]
    }
 80010e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80010e6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80010ea:	4718      	bx	r3
 80010ec:	0802f11c 	.word	0x0802f11c
 80010f0:	0802f154 	.word	0x0802f154
 80010f4:	0802f1a2 	.word	0x0802f1a2
 80010f8:	20013882 	.word	0x20013882

080010fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80010fc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80010fe:	4b09      	ldr	r3, [pc, #36]	@ (8001124 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001100:	881b      	ldrh	r3, [r3, #0]
 8001102:	428b      	cmp	r3, r1
 8001104:	d803      	bhi.n	800110e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001106:	4b08      	ldr	r3, [pc, #32]	@ (8001128 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001108:	881b      	ldrh	r3, [r3, #0]
 800110a:	4293      	cmp	r3, r2
 800110c:	d905      	bls.n	800111a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800110e:	4b07      	ldr	r3, [pc, #28]	@ (800112c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001110:	4a07      	ldr	r2, [pc, #28]	@ (8001130 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001112:	4808      	ldr	r0, [pc, #32]	@ (8001134 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001114:	21a3      	movs	r1, #163	@ 0xa3
 8001116:	f02c ffab 	bl	802e070 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800111a:	4b07      	ldr	r3, [pc, #28]	@ (8001138 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800111c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800111e:	4b07      	ldr	r3, [pc, #28]	@ (800113c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001120:	801a      	strh	r2, [r3, #0]
    }
 8001122:	bd08      	pop	{r3, pc}
 8001124:	20013878 	.word	0x20013878
 8001128:	2001387a 	.word	0x2001387a
 800112c:	0802f1e7 	.word	0x0802f1e7
 8001130:	0802f24a 	.word	0x0802f24a
 8001134:	0802f1a2 	.word	0x0802f1a2
 8001138:	2001387e 	.word	0x2001387e
 800113c:	20013880 	.word	0x20013880

08001140 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001140:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001142:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001146:	b118      	cbz	r0, 8001150 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001148:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800114a:	6803      	ldr	r3, [r0, #0]
 800114c:	681b      	ldr	r3, [r3, #0]
 800114e:	4718      	bx	r3
    }
 8001150:	4770      	bx	lr
	...

08001154 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001154:	2101      	movs	r1, #1
{
 8001156:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001158:	2200      	movs	r2, #0
 800115a:	4608      	mov	r0, r1
 800115c:	f011 fbc0 	bl	80128e0 <osSemaphoreNew>
 8001160:	4b0a      	ldr	r3, [pc, #40]	@ (800118c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001162:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001164:	b928      	cbnz	r0, 8001172 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001166:	4b0a      	ldr	r3, [pc, #40]	@ (8001190 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001168:	4a0a      	ldr	r2, [pc, #40]	@ (8001194 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800116a:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800116c:	480a      	ldr	r0, [pc, #40]	@ (8001198 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800116e:	f02c ff7f 	bl	802e070 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001172:	2200      	movs	r2, #0
 8001174:	2104      	movs	r1, #4
 8001176:	2001      	movs	r0, #1
 8001178:	f011 fc51 	bl	8012a1e <osMessageQueueNew>
 800117c:	4b07      	ldr	r3, [pc, #28]	@ (800119c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800117e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001180:	b918      	cbnz	r0, 800118a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001182:	4b07      	ldr	r3, [pc, #28]	@ (80011a0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001184:	4a03      	ldr	r2, [pc, #12]	@ (8001194 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001186:	212c      	movs	r1, #44	@ 0x2c
 8001188:	e7f0      	b.n	800116c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800118a:	bd08      	pop	{r3, pc}
 800118c:	200003c0 	.word	0x200003c0
 8001190:	0802f28d 	.word	0x0802f28d
 8001194:	0802f2d6 	.word	0x0802f2d6
 8001198:	0802f305 	.word	0x0802f305
 800119c:	200003bc 	.word	0x200003bc
 80011a0:	0802f364 	.word	0x0802f364

080011a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80011a4:	4b02      	ldr	r3, [pc, #8]	@ (80011b0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80011a6:	f04f 31ff 	mov.w	r1, #4294967295
 80011aa:	6818      	ldr	r0, [r3, #0]
 80011ac:	f011 bbe2 	b.w	8012974 <osSemaphoreAcquire>
 80011b0:	200003c0 	.word	0x200003c0

080011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80011b4:	4b01      	ldr	r3, [pc, #4]	@ (80011bc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80011b6:	6818      	ldr	r0, [r3, #0]
 80011b8:	f011 bc08 	b.w	80129cc <osSemaphoreRelease>
 80011bc:	200003c0 	.word	0x200003c0

080011c0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011c0:	4b02      	ldr	r3, [pc, #8]	@ (80011cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80011c2:	2100      	movs	r1, #0
 80011c4:	6818      	ldr	r0, [r3, #0]
 80011c6:	f011 bbd5 	b.w	8012974 <osSemaphoreAcquire>
 80011ca:	bf00      	nop
 80011cc:	200003c0 	.word	0x200003c0

080011d0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 80011d0:	f7ff bff0 	b.w	80011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080011d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80011d4:	4803      	ldr	r0, [pc, #12]	@ (80011e4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80011d6:	4904      	ldr	r1, [pc, #16]	@ (80011e8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80011d8:	6800      	ldr	r0, [r0, #0]
 80011da:	2300      	movs	r3, #0
 80011dc:	461a      	mov	r2, r3
 80011de:	f011 bc59 	b.w	8012a94 <osMessageQueuePut>
 80011e2:	bf00      	nop
 80011e4:	200003bc 	.word	0x200003bc
 80011e8:	20000004 	.word	0x20000004

080011ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80011ec:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80011ee:	4c08      	ldr	r4, [pc, #32]	@ (8001210 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80011f0:	2300      	movs	r3, #0
 80011f2:	461a      	mov	r2, r3
 80011f4:	a901      	add	r1, sp, #4
 80011f6:	6820      	ldr	r0, [r4, #0]
 80011f8:	f011 fc7d 	bl	8012af6 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80011fc:	6820      	ldr	r0, [r4, #0]
 80011fe:	f04f 33ff 	mov.w	r3, #4294967295
 8001202:	2200      	movs	r2, #0
 8001204:	a901      	add	r1, sp, #4
 8001206:	f011 fc76 	bl	8012af6 <osMessageQueueGet>
}
 800120a:	b002      	add	sp, #8
 800120c:	bd10      	pop	{r4, pc}
 800120e:	bf00      	nop
 8001210:	200003bc 	.word	0x200003bc

08001214 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001214:	6803      	ldr	r3, [r0, #0]
 8001216:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001218:	4718      	bx	r3

0800121a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800121a:	2001      	movs	r0, #1
 800121c:	4770      	bx	lr

0800121e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800121e:	6803      	ldr	r3, [r0, #0]
 8001220:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001222:	4718      	bx	r3

08001224 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8001224:	e7fe      	b.n	8001224 <DMA2D_XferErrorCallback>

08001226 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001226:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800122a:	4770      	bx	lr

0800122c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 800122c:	4b05      	ldr	r3, [pc, #20]	@ (8001244 <_ZN8STM32DMAD1Ev+0x18>)
 800122e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001230:	4b05      	ldr	r3, [pc, #20]	@ (8001248 <_ZN8STM32DMAD1Ev+0x1c>)
 8001232:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001236:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800123a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800123e:	f3bf 8f6f 	isb	sy
}
 8001242:	4770      	bx	lr
 8001244:	080307ac 	.word	0x080307ac
 8001248:	e000e100 	.word	0xe000e100

0800124c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800124c:	b510      	push	{r4, lr}
 800124e:	4604      	mov	r4, r0
}
 8001250:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001254:	f7ff ffea 	bl	800122c <_ZN8STM32DMAD1Ev>
 8001258:	4620      	mov	r0, r4
 800125a:	f02b ffcc 	bl	802d1f6 <_ZdlPvj>
 800125e:	4620      	mov	r0, r4
 8001260:	bd10      	pop	{r4, pc}
	...

08001264 <_ZN8STM32DMA10initializeEv>:
{
 8001264:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001266:	2300      	movs	r3, #0
 8001268:	9301      	str	r3, [sp, #4]
 800126a:	4b0e      	ldr	r3, [pc, #56]	@ (80012a4 <_ZN8STM32DMA10initializeEv+0x40>)
 800126c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800126e:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001272:	631a      	str	r2, [r3, #48]	@ 0x30
 8001274:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001276:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 800127a:	9201      	str	r2, [sp, #4]
 800127c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800127e:	691a      	ldr	r2, [r3, #16]
 8001280:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001284:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001286:	691a      	ldr	r2, [r3, #16]
 8001288:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800128c:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800128e:	4b06      	ldr	r3, [pc, #24]	@ (80012a8 <_ZN8STM32DMA10initializeEv+0x44>)
 8001290:	4a06      	ldr	r2, [pc, #24]	@ (80012ac <_ZN8STM32DMA10initializeEv+0x48>)
 8001292:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8001294:	4a06      	ldr	r2, [pc, #24]	@ (80012b0 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001296:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b06      	ldr	r3, [pc, #24]	@ (80012b4 <_ZN8STM32DMA10initializeEv+0x50>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800129e:	609a      	str	r2, [r3, #8]
}
 80012a0:	b002      	add	sp, #8
 80012a2:	4770      	bx	lr
 80012a4:	40023800 	.word	0x40023800
 80012a8:	20002960 	.word	0x20002960
 80012ac:	08001505 	.word	0x08001505
 80012b0:	08001225 	.word	0x08001225
 80012b4:	e000e100 	.word	0xe000e100

080012b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80012b8:	b508      	push	{r3, lr}
    switch (format)
 80012ba:	280a      	cmp	r0, #10
 80012bc:	d809      	bhi.n	80012d2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80012be:	e8df f000 	tbb	[pc, r0]
 80012c2:	1006      	.short	0x1006
 80012c4:	0808080e 	.word	0x0808080e
 80012c8:	10101008 	.word	0x10101008
 80012cc:	10          	.byte	0x10
 80012cd:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80012ce:	2002      	movs	r0, #2
}
 80012d0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80012d2:	4b05      	ldr	r3, [pc, #20]	@ (80012e8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 80012d4:	4a05      	ldr	r2, [pc, #20]	@ (80012ec <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80012d6:	4806      	ldr	r0, [pc, #24]	@ (80012f0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80012d8:	2190      	movs	r1, #144	@ 0x90
 80012da:	f02c fec9 	bl	802e070 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80012de:	2000      	movs	r0, #0
 80012e0:	e7f6      	b.n	80012d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80012e2:	2001      	movs	r0, #1
    return dma2dColorMode;
 80012e4:	e7f4      	b.n	80012d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80012e6:	bf00      	nop
 80012e8:	0802f3a6 	.word	0x0802f3a6
 80012ec:	0802f3c1 	.word	0x0802f3c1
 80012f0:	0802f40c 	.word	0x0802f40c

080012f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80012f4:	b538      	push	{r3, r4, r5, lr}
 80012f6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80012f8:	7f88      	ldrb	r0, [r1, #30]
 80012fa:	f7ff ffdd 	bl	80012b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80012fe:	8aa5      	ldrh	r5, [r4, #20]
 8001300:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001302:	4b16      	ldr	r3, [pc, #88]	@ (800135c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001304:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001306:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001308:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800130c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800130e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001310:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001312:	1b52      	subs	r2, r2, r5
 8001314:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001316:	6825      	ldr	r5, [r4, #0]
 8001318:	2d08      	cmp	r5, #8
 800131a:	d10e      	bne.n	800133a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800131c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800131e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001320:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001322:	7f20      	ldrb	r0, [r4, #28]
 8001324:	4a0e      	ldr	r2, [pc, #56]	@ (8001360 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001326:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800132a:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800132c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800132e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8001330:	4a0c      	ldr	r2, [pc, #48]	@ (8001364 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001332:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001334:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001336:	601a      	str	r2, [r3, #0]
    }
}
 8001338:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 800133a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800133c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800133e:	611a      	str	r2, [r3, #16]
 8001340:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001342:	0a0a      	lsrs	r2, r1, #8
 8001344:	0948      	lsrs	r0, r1, #5
 8001346:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 800134a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800134e:	4302      	orrs	r2, r0
 8001350:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001354:	430a      	orrs	r2, r1
 8001356:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001358:	4a03      	ldr	r2, [pc, #12]	@ (8001368 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 800135a:	e7ec      	b.n	8001336 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800135c:	4002b000 	.word	0x4002b000
 8001360:	00010009 	.word	0x00010009
 8001364:	00022301 	.word	0x00022301
 8001368:	00032301 	.word	0x00032301

0800136c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 800136c:	b508      	push	{r3, lr}
    switch (format)
 800136e:	280b      	cmp	r0, #11
 8001370:	d80b      	bhi.n	800138a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001372:	e8df f000 	tbb	[pc, r0]
 8001376:	1206      	.short	0x1206
 8001378:	0a0a0a10 	.word	0x0a0a0a10
 800137c:	0808080a 	.word	0x0808080a
 8001380:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001382:	2002      	movs	r0, #2
}
 8001384:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001386:	2005      	movs	r0, #5
        break;
 8001388:	e7fc      	b.n	8001384 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 800138a:	4b05      	ldr	r3, [pc, #20]	@ (80013a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 800138c:	4a05      	ldr	r2, [pc, #20]	@ (80013a4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 800138e:	4806      	ldr	r0, [pc, #24]	@ (80013a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001390:	216f      	movs	r1, #111	@ 0x6f
 8001392:	f02c fe6d 	bl	802e070 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001396:	2000      	movs	r0, #0
 8001398:	e7f4      	b.n	8001384 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800139a:	2001      	movs	r0, #1
    return dma2dColorMode;
 800139c:	e7f2      	b.n	8001384 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 800139e:	bf00      	nop
 80013a0:	0802f3a6 	.word	0x0802f3a6
 80013a4:	0802f469 	.word	0x0802f469
 80013a8:	0802f40c 	.word	0x0802f40c

080013ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80013ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013b0:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80013b4:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013b6:	4640      	mov	r0, r8
 80013b8:	f7ff ffd8 	bl	800136c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013bc:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013be:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013c0:	4638      	mov	r0, r7
 80013c2:	f7ff ffd3 	bl	800136c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80013c6:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013c8:	4638      	mov	r0, r7
 80013ca:	f7ff ff75 	bl	80012b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013ce:	8aa1      	ldrh	r1, [r4, #20]
 80013d0:	8b62      	ldrh	r2, [r4, #26]
 80013d2:	4b44      	ldr	r3, [pc, #272]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80013d4:	1a52      	subs	r2, r2, r1
 80013d6:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013d8:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80013da:	8b22      	ldrh	r2, [r4, #24]
 80013dc:	1a52      	subs	r2, r2, r1
 80013de:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80013e0:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80013e2:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80013e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80013e8:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80013ea:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80013ec:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80013ee:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80013f0:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 80013f2:	6820      	ldr	r0, [r4, #0]
 80013f4:	2880      	cmp	r0, #128	@ 0x80
 80013f6:	d028      	beq.n	800144a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 80013f8:	7f22      	ldrb	r2, [r4, #28]
 80013fa:	d80f      	bhi.n	800141c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 80013fc:	2820      	cmp	r0, #32
 80013fe:	d067      	beq.n	80014d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001400:	2840      	cmp	r0, #64	@ 0x40
 8001402:	d065      	beq.n	80014d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001404:	2804      	cmp	r0, #4
 8001406:	d01a      	beq.n	800143e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001408:	4b36      	ldr	r3, [pc, #216]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800140a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800140e:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001412:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001414:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001416:	d061      	beq.n	80014dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001418:	4a33      	ldr	r2, [pc, #204]	@ (80014e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 800141a:	e044      	b.n	80014a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 800141c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001420:	d004      	beq.n	800142c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001422:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001426:	d1ef      	bne.n	8001408 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001428:	4830      	ldr	r0, [pc, #192]	@ (80014ec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 800142a:	e000      	b.n	800142e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800142c:	4830      	ldr	r0, [pc, #192]	@ (80014f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800142e:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001432:	61da      	str	r2, [r3, #28]
 8001434:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001436:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001438:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800143a:	6159      	str	r1, [r3, #20]
 800143c:	e032      	b.n	80014a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800143e:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001442:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001446:	61da      	str	r2, [r3, #28]
 8001448:	e7f6      	b.n	8001438 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800144a:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800144c:	1d02      	adds	r2, r0, #4
 800144e:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001450:	7f22      	ldrb	r2, [r4, #28]
 8001452:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001456:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 800145a:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800145c:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800145e:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001460:	7801      	ldrb	r1, [r0, #0]
 8001462:	b141      	cbz	r1, 8001476 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001464:	2901      	cmp	r1, #1
 8001466:	d021      	beq.n	80014ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001468:	4b22      	ldr	r3, [pc, #136]	@ (80014f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800146a:	4a23      	ldr	r2, [pc, #140]	@ (80014f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 800146c:	4823      	ldr	r0, [pc, #140]	@ (80014fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800146e:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8001472:	f02c fdfd 	bl	802e070 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001476:	69da      	ldr	r2, [r3, #28]
 8001478:	8841      	ldrh	r1, [r0, #2]
 800147a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 800147e:	3901      	subs	r1, #1
 8001480:	f022 0210 	bic.w	r2, r2, #16
 8001484:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001488:	61da      	str	r2, [r3, #28]
            bool blend = true;
 800148a:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800148c:	4b15      	ldr	r3, [pc, #84]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800148e:	69da      	ldr	r2, [r3, #28]
 8001490:	f042 0220 	orr.w	r2, r2, #32
 8001494:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001496:	69da      	ldr	r2, [r3, #28]
 8001498:	0692      	lsls	r2, r2, #26
 800149a:	d4fc      	bmi.n	8001496 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800149c:	2210      	movs	r2, #16
 800149e:	609a      	str	r2, [r3, #8]
            if (blend)
 80014a0:	2900      	cmp	r1, #0
 80014a2:	d0b9      	beq.n	8001418 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80014a4:	4a16      	ldr	r2, [pc, #88]	@ (8001500 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80014a6:	601a      	str	r2, [r3, #0]
}
 80014a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80014ac:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80014b0:	69da      	ldr	r2, [r3, #28]
 80014b2:	8840      	ldrh	r0, [r0, #2]
 80014b4:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80014b8:	f100 30ff 	add.w	r0, r0, #4294967295
 80014bc:	f022 0210 	bic.w	r2, r2, #16
 80014c0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80014c4:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80014c8:	bf18      	it	ne
 80014ca:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80014cc:	61da      	str	r2, [r3, #28]
                break;
 80014ce:	e7dd      	b.n	800148c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80014d0:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80014d4:	4b03      	ldr	r3, [pc, #12]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80014d6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80014da:	e7b4      	b.n	8001446 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80014dc:	f242 3201 	movw	r2, #8961	@ 0x2301
 80014e0:	e7e1      	b.n	80014a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 80014e2:	bf00      	nop
 80014e4:	4002b000 	.word	0x4002b000
 80014e8:	00012301 	.word	0x00012301
 80014ec:	00020009 	.word	0x00020009
 80014f0:	0002000a 	.word	0x0002000a
 80014f4:	0802f4b3 	.word	0x0802f4b3
 80014f8:	0802f4cd 	.word	0x0802f4cd
 80014fc:	0802f40c 	.word	0x0802f40c
 8001500:	00022301 	.word	0x00022301

08001504 <DMA2D_XferCpltCallback>:
        return instance;
 8001504:	4b02      	ldr	r3, [pc, #8]	@ (8001510 <DMA2D_XferCpltCallback+0xc>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 800150a:	6803      	ldr	r3, [r0, #0]
 800150c:	695b      	ldr	r3, [r3, #20]
 800150e:	4718      	bx	r3
 8001510:	20013884 	.word	0x20013884

08001514 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001514:	b570      	push	{r4, r5, r6, lr}
 8001516:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001518:	4625      	mov	r5, r4
 800151a:	4b0a      	ldr	r3, [pc, #40]	@ (8001544 <_ZN8STM32DMAC1Ev+0x30>)
 800151c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800151e:	2600      	movs	r6, #0
 8001520:	6060      	str	r0, [r4, #4]
 8001522:	7226      	strb	r6, [r4, #8]
 8001524:	7266      	strb	r6, [r4, #9]
 8001526:	f845 3b20 	str.w	r3, [r5], #32
 800152a:	2260      	movs	r2, #96	@ 0x60
 800152c:	4629      	mov	r1, r5
 800152e:	f014 fc0b 	bl	8015d48 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001532:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001536:	60ee      	str	r6, [r5, #12]
 8001538:	3524      	adds	r5, #36	@ 0x24
 800153a:	429d      	cmp	r5, r3
 800153c:	d1fb      	bne.n	8001536 <_ZN8STM32DMAC1Ev+0x22>
}
 800153e:	4620      	mov	r0, r4
 8001540:	bd70      	pop	{r4, r5, r6, pc}
 8001542:	bf00      	nop
 8001544:	080307ac 	.word	0x080307ac

08001548 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001548:	4b03      	ldr	r3, [pc, #12]	@ (8001558 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 800154a:	681a      	ldr	r2, [r3, #0]
 800154c:	07d2      	lsls	r2, r2, #31
 800154e:	d4fc      	bmi.n	800154a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001550:	2223      	movs	r2, #35	@ 0x23
 8001552:	609a      	str	r2, [r3, #8]
}
 8001554:	4770      	bx	lr
 8001556:	bf00      	nop
 8001558:	4002b000 	.word	0x4002b000

0800155c <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 800155c:	4770      	bx	lr
	...

08001560 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001560:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001562:	4c0f      	ldr	r4, [pc, #60]	@ (80015a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001564:	6825      	ldr	r5, [r4, #0]
 8001566:	07ed      	lsls	r5, r5, #31
 8001568:	d4fc      	bmi.n	8001564 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800156a:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800156c:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800156e:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001570:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001574:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001576:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001578:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800157a:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800157c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 800157e:	d00a      	beq.n	8001596 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001580:	4908      	ldr	r1, [pc, #32]	@ (80015a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001582:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001584:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001588:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800158a:	4b07      	ldr	r3, [pc, #28]	@ (80015a8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 800158c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800158e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8001590:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001592:	6023      	str	r3, [r4, #0]
    }
}
 8001594:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001596:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001598:	9b03      	ldr	r3, [sp, #12]
 800159a:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800159c:	4b03      	ldr	r3, [pc, #12]	@ (80015ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 800159e:	e7f8      	b.n	8001592 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 80015a0:	4002b000 	.word	0x4002b000
 80015a4:	00010009 	.word	0x00010009
 80015a8:	00020001 	.word	0x00020001
 80015ac:	00030001 	.word	0x00030001

080015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 80015b0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80015b2:	4c0e      	ldr	r4, [pc, #56]	@ (80015ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 80015b4:	6825      	ldr	r5, [r4, #0]
 80015b6:	07ed      	lsls	r5, r5, #31
 80015b8:	d4fc      	bmi.n	80015b4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80015ba:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015bc:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80015be:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015c0:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80015c4:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 80015c6:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80015c8:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015ca:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80015cc:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80015ce:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 80015d0:	d008      	beq.n	80015e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80015d2:	061b      	lsls	r3, r3, #24
 80015d4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 80015d8:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80015da:	4b05      	ldr	r3, [pc, #20]	@ (80015f0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80015dc:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80015de:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80015e0:	6023      	str	r3, [r4, #0]
    }
}
 80015e2:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80015e4:	4b03      	ldr	r3, [pc, #12]	@ (80015f4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 80015e6:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80015e8:	2301      	movs	r3, #1
 80015ea:	e7f9      	b.n	80015e0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80015ec:	4002b000 	.word	0x4002b000
 80015f0:	00020001 	.word	0x00020001
 80015f4:	ff020002 	.word	0xff020002

080015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80015f8:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80015fa:	4c0b      	ldr	r4, [pc, #44]	@ (8001628 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 80015fc:	6825      	ldr	r5, [r4, #0]
 80015fe:	07ed      	lsls	r5, r5, #31
 8001600:	d4fc      	bmi.n	80015fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001602:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001604:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001606:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001608:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800160a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800160e:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001610:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001614:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001616:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001618:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800161a:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800161c:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800161e:	4b03      	ldr	r3, [pc, #12]	@ (800162c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001620:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001622:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001624:	6023      	str	r3, [r4, #0]
}
 8001626:	bd30      	pop	{r4, r5, pc}
 8001628:	4002b000 	.word	0x4002b000
 800162c:	00020001 	.word	0x00020001

08001630 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001630:	2001      	movs	r0, #1
 8001632:	4770      	bx	lr

08001634 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001634:	200c      	movs	r0, #12
 8001636:	4770      	bx	lr

08001638 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001638:	230c      	movs	r3, #12
 800163a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800163e:	3008      	adds	r0, #8
 8001640:	4770      	bx	lr

08001642 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001642:	230c      	movs	r3, #12
 8001644:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001648:	3008      	adds	r0, #8
 800164a:	4770      	bx	lr

0800164c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800164c:	2001      	movs	r0, #1
 800164e:	4770      	bx	lr

08001650 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001650:	f44f 5096 	mov.w	r0, #4800	@ 0x12c0
 8001654:	4770      	bx	lr

08001656 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001656:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 800165a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800165e:	3008      	adds	r0, #8
 8001660:	4770      	bx	lr

08001662 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001662:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 8001666:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800166a:	3008      	adds	r0, #8
 800166c:	4770      	bx	lr

0800166e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800166e:	2001      	movs	r0, #1
 8001670:	4770      	bx	lr

08001672 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001672:	2010      	movs	r0, #16
 8001674:	4770      	bx	lr

08001676 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001676:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800167a:	3008      	adds	r0, #8
 800167c:	4770      	bx	lr

0800167e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800167e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001682:	3008      	adds	r0, #8
 8001684:	4770      	bx	lr

08001686 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainMenuScreenScreenNoTransition();
 8001686:	4608      	mov	r0, r1
 8001688:	f002 bacc 	b.w	8003c24 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>

0800168c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800168c:	b510      	push	{r4, lr}
 800168e:	4b03      	ldr	r3, [pc, #12]	@ (800169c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001690:	6003      	str	r3, [r0, #0]
 8001692:	4604      	mov	r4, r0
 8001694:	f013 f987 	bl	80149a6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001698:	4620      	mov	r0, r4
 800169a:	bd10      	pop	{r4, pc}
 800169c:	08030864 	.word	0x08030864

080016a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80016a0:	b510      	push	{r4, lr}
 80016a2:	4604      	mov	r4, r0
 80016a4:	f7ff fff2 	bl	800168c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016a8:	4620      	mov	r0, r4
 80016aa:	2114      	movs	r1, #20
 80016ac:	f02b fda3 	bl	802d1f6 <_ZdlPvj>
 80016b0:	4620      	mov	r0, r4
 80016b2:	bd10      	pop	{r4, pc}

080016b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80016b4:	b510      	push	{r4, lr}
 80016b6:	4b03      	ldr	r3, [pc, #12]	@ (80016c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80016b8:	6003      	str	r3, [r0, #0]
 80016ba:	4604      	mov	r4, r0
 80016bc:	f013 f973 	bl	80149a6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80016c0:	4620      	mov	r0, r4
 80016c2:	bd10      	pop	{r4, pc}
 80016c4:	08030830 	.word	0x08030830

080016c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80016c8:	b510      	push	{r4, lr}
 80016ca:	4604      	mov	r4, r0
 80016cc:	f7ff fff2 	bl	80016b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016d0:	4620      	mov	r0, r4
 80016d2:	f241 21c8 	movw	r1, #4808	@ 0x12c8
 80016d6:	f02b fd8e 	bl	802d1f6 <_ZdlPvj>
 80016da:	4620      	mov	r0, r4
 80016dc:	bd10      	pop	{r4, pc}
	...

080016e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80016e0:	b510      	push	{r4, lr}
 80016e2:	4b03      	ldr	r3, [pc, #12]	@ (80016f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80016e4:	6003      	str	r3, [r0, #0]
 80016e6:	4604      	mov	r4, r0
 80016e8:	f013 f95d 	bl	80149a6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80016ec:	4620      	mov	r0, r4
 80016ee:	bd10      	pop	{r4, pc}
 80016f0:	080307fc 	.word	0x080307fc

080016f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80016f4:	b510      	push	{r4, lr}
 80016f6:	4604      	mov	r4, r0
 80016f8:	f7ff fff2 	bl	80016e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016fc:	4620      	mov	r0, r4
 80016fe:	2118      	movs	r1, #24
 8001700:	f02b fd79 	bl	802d1f6 <_ZdlPvj>
 8001704:	4620      	mov	r0, r4
 8001706:	bd10      	pop	{r4, pc}

08001708 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001708:	b510      	push	{r4, lr}
 800170a:	4b09      	ldr	r3, [pc, #36]	@ (8001730 <_ZN12FrontendHeapD1Ev+0x28>)
 800170c:	6003      	str	r3, [r0, #0]
 800170e:	4604      	mov	r4, r0
 8001710:	f500 5097 	add.w	r0, r0, #4832	@ 0x12e0
 8001714:	3014      	adds	r0, #20
 8001716:	f7ff ffb9 	bl	800168c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800171a:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 800171e:	f7ff ffc9 	bl	80016b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001722:	f104 0014 	add.w	r0, r4, #20
 8001726:	f7ff ffdb 	bl	80016e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800172a:	4620      	mov	r0, r4
 800172c:	bd10      	pop	{r4, pc}
 800172e:	bf00      	nop
 8001730:	08030898 	.word	0x08030898

08001734 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001734:	b508      	push	{r3, lr}
 8001736:	4802      	ldr	r0, [pc, #8]	@ (8001740 <__tcf_0+0xc>)
 8001738:	f7ff ffe6 	bl	8001708 <_ZN12FrontendHeapD1Ev>
 800173c:	bd08      	pop	{r3, pc}
 800173e:	bf00      	nop
 8001740:	2000129c 	.word	0x2000129c

08001744 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001744:	b510      	push	{r4, lr}
 8001746:	4604      	mov	r4, r0
 8001748:	f7ff ffde 	bl	8001708 <_ZN12FrontendHeapD1Ev>
 800174c:	4620      	mov	r0, r4
 800174e:	f241 4168 	movw	r1, #5224	@ 0x1468
 8001752:	f02b fd50 	bl	802d1f6 <_ZdlPvj>
 8001756:	4620      	mov	r0, r4
 8001758:	bd10      	pop	{r4, pc}
	...

0800175c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800175c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001760:	f001 fb6e 	bl	8002e40 <_ZN14BitmapDatabase11getInstanceEv>
 8001764:	4605      	mov	r5, r0
 8001766:	f001 fb6f 	bl	8002e48 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800176a:	2400      	movs	r4, #0
 800176c:	4601      	mov	r1, r0
 800176e:	4623      	mov	r3, r4
 8001770:	4628      	mov	r0, r5
 8001772:	4622      	mov	r2, r4
 8001774:	9400      	str	r4, [sp, #0]
 8001776:	f01c fcab 	bl	801e0d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800177a:	4b28      	ldr	r3, [pc, #160]	@ (800181c <touchgfx_init+0xc0>)
 800177c:	4a28      	ldr	r2, [pc, #160]	@ (8001820 <touchgfx_init+0xc4>)
 800177e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001780:	4620      	mov	r0, r4
 8001782:	f008 fc63 	bl	800a04c <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001786:	4d27      	ldr	r5, [pc, #156]	@ (8001824 <touchgfx_init+0xc8>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001788:	4b27      	ldr	r3, [pc, #156]	@ (8001828 <touchgfx_init+0xcc>)
 800178a:	4a28      	ldr	r2, [pc, #160]	@ (800182c <touchgfx_init+0xd0>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800178c:	4828      	ldr	r0, [pc, #160]	@ (8001830 <touchgfx_init+0xd4>)
 800178e:	609a      	str	r2, [r3, #8]
 8001790:	f01c fc06 	bl	801dfa0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001794:	682b      	ldr	r3, [r5, #0]
 8001796:	f3bf 8f5b 	dmb	ish
 800179a:	07db      	lsls	r3, r3, #31
 800179c:	d437      	bmi.n	800180e <touchgfx_init+0xb2>
 800179e:	4628      	mov	r0, r5
 80017a0:	f02b fd2b 	bl	802d1fa <__cxa_guard_acquire>
 80017a4:	b398      	cbz	r0, 800180e <touchgfx_init+0xb2>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80017a6:	4c23      	ldr	r4, [pc, #140]	@ (8001834 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80017a8:	4b23      	ldr	r3, [pc, #140]	@ (8001838 <touchgfx_init+0xdc>)
 80017aa:	6023      	str	r3, [r4, #0]
 80017ac:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
          transitionStorage(tra),
 80017b0:	f500 5797 	add.w	r7, r0, #4832	@ 0x12e0
          frontendApplication(app)
 80017b4:	f107 0618 	add.w	r6, r7, #24
          screenStorage(scr),
 80017b8:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 80017bc:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80017be:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80017c2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80017c4:	6126      	str	r6, [r4, #16]
 80017c6:	f013 f8ef 	bl	80149a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80017ca:	4b1c      	ldr	r3, [pc, #112]	@ (800183c <touchgfx_init+0xe0>)
 80017cc:	6163      	str	r3, [r4, #20]
 80017ce:	4640      	mov	r0, r8
 80017d0:	f013 f8ea 	bl	80149a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80017d4:	4b1a      	ldr	r3, [pc, #104]	@ (8001840 <touchgfx_init+0xe4>)
 80017d6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80017d8:	4638      	mov	r0, r7
 80017da:	f013 f8e5 	bl	80149a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80017de:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80017e2:	f503 7042 	add.w	r0, r3, #776	@ 0x308
 80017e6:	4a17      	ldr	r2, [pc, #92]	@ (8001844 <touchgfx_init+0xe8>)
 80017e8:	f8c3 22f4 	str.w	r2, [r3, #756]	@ 0x2f4
 80017ec:	f00a ff14 	bl	800c618 <_ZN5ModelC1Ev>
 80017f0:	4622      	mov	r2, r4
 80017f2:	f107 0114 	add.w	r1, r7, #20
 80017f6:	4630      	mov	r0, r6
 80017f8:	f008 ff98 	bl	800a72c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80017fc:	4630      	mov	r0, r6
 80017fe:	f002 fa11 	bl	8003c24 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001802:	4811      	ldr	r0, [pc, #68]	@ (8001848 <touchgfx_init+0xec>)
 8001804:	f02c fc52 	bl	802e0ac <atexit>
 8001808:	4628      	mov	r0, r5
 800180a:	f02b fd02 	bl	802d212 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800180e:	480f      	ldr	r0, [pc, #60]	@ (800184c <touchgfx_init+0xf0>)
}
 8001810:	b002      	add	sp, #8
 8001812:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001816:	f7ff bbe3 	b.w	8000fe0 <_ZN11TouchGFXHAL10initializeEv>
 800181a:	bf00      	nop
 800181c:	200138e8 	.word	0x200138e8
 8001820:	20000448 	.word	0x20000448
 8001824:	20001298 	.word	0x20001298
 8001828:	20000468 	.word	0x20000468
 800182c:	2000044c 	.word	0x2000044c
 8001830:	20000008 	.word	0x20000008
 8001834:	2000129c 	.word	0x2000129c
 8001838:	08030898 	.word	0x08030898
 800183c:	080307fc 	.word	0x080307fc
 8001840:	08030830 	.word	0x08030830
 8001844:	08030864 	.word	0x08030864
 8001848:	08001735 	.word	0x08001735
 800184c:	200003c4 	.word	0x200003c4

08001850 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001850:	4770      	bx	lr
	...

08001854 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001854:	4801      	ldr	r0, [pc, #4]	@ (800185c <touchgfx_taskEntry+0x8>)
 8001856:	f7ff bbd1 	b.w	8000ffc <_ZN11TouchGFXHAL9taskEntryEv>
 800185a:	bf00      	nop
 800185c:	200003c4 	.word	0x200003c4

08001860 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001860:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001862:	4e26      	ldr	r6, [pc, #152]	@ (80018fc <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001864:	4c26      	ldr	r4, [pc, #152]	@ (8001900 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001866:	4d27      	ldr	r5, [pc, #156]	@ (8001904 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001868:	4b27      	ldr	r3, [pc, #156]	@ (8001908 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800186a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800186c:	4630      	mov	r0, r6
 800186e:	f7ff fe51 	bl	8001514 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001872:	4628      	mov	r0, r5
 8001874:	f021 fd32 	bl	80232dc <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001878:	4824      	ldr	r0, [pc, #144]	@ (800190c <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800187a:	f01a fc93 	bl	801c1a4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800187e:	4b24      	ldr	r3, [pc, #144]	@ (8001910 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001880:	4824      	ldr	r0, [pc, #144]	@ (8001914 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001882:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001884:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001886:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800188a:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800188e:	4922      	ldr	r1, [pc, #136]	@ (8001918 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001890:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001892:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001896:	4921      	ldr	r1, [pc, #132]	@ (800191c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001898:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 800189c:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 80018a0:	491f      	ldr	r1, [pc, #124]	@ (8001920 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80018a2:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 80018a6:	491f      	ldr	r1, [pc, #124]	@ (8001924 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80018a8:	481f      	ldr	r0, [pc, #124]	@ (8001928 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 80018aa:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80018ac:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 80018ae:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80018b2:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80018b6:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80018ba:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80018be:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80018c2:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80018c6:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80018ca:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80018ce:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80018d0:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80018d4:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80018d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80018da:	8001      	strh	r1, [r0, #0]
 80018dc:	4813      	ldr	r0, [pc, #76]	@ (800192c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80018de:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80018e0:	4813      	ldr	r0, [pc, #76]	@ (8001930 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80018e2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80018e6:	8001      	strh	r1, [r0, #0]
 80018e8:	4812      	ldr	r0, [pc, #72]	@ (8001934 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80018ea:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80018ec:	4912      	ldr	r1, [pc, #72]	@ (8001938 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80018ee:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80018f0:	2201      	movs	r2, #1
 80018f2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80018f6:	4a11      	ldr	r2, [pc, #68]	@ (800193c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80018f8:	601a      	str	r2, [r3, #0]
}
 80018fa:	bd70      	pop	{r4, r5, r6, pc}
 80018fc:	200004f4 	.word	0x200004f4
 8001900:	20001294 	.word	0x20001294
 8001904:	20000468 	.word	0x20000468
 8001908:	0802f10c 	.word	0x0802f10c
 800190c:	2000044c 	.word	0x2000044c
 8001910:	200003c4 	.word	0x200003c4
 8001914:	01010000 	.word	0x01010000
 8001918:	01000001 	.word	0x01000001
 800191c:	00500400 	.word	0x00500400
 8001920:	0014001a 	.word	0x0014001a
 8001924:	20013884 	.word	0x20013884
 8001928:	20013878 	.word	0x20013878
 800192c:	2001387e 	.word	0x2001387e
 8001930:	2001387a 	.word	0x2001387a
 8001934:	20013880 	.word	0x20013880
 8001938:	2001387c 	.word	0x2001387c
 800193c:	080306c0 	.word	0x080306c0

08001940 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001940:	4801      	ldr	r0, [pc, #4]	@ (8001948 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001942:	f7ff bc73 	b.w	800122c <_ZN8STM32DMAD1Ev>
 8001946:	bf00      	nop
 8001948:	200004f4 	.word	0x200004f4

0800194c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800194c:	2000      	movs	r0, #0
 800194e:	4770      	bx	lr

08001950 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001950:	8081      	strh	r1, [r0, #4]
    }
 8001952:	4770      	bx	lr

08001954 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001954:	80c1      	strh	r1, [r0, #6]
    }
 8001956:	4770      	bx	lr

08001958 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001958:	8101      	strh	r1, [r0, #8]
    }
 800195a:	4770      	bx	lr

0800195c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800195c:	8141      	strh	r1, [r0, #10]
    }
 800195e:	4770      	bx	lr

08001960 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001960:	4770      	bx	lr

08001962 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001962:	4770      	bx	lr

08001964 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001964:	4770      	bx	lr

08001966 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001966:	4770      	bx	lr

08001968 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001968:	4770      	bx	lr

0800196a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800196a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800196c:	88c4      	ldrh	r4, [r0, #6]
 800196e:	6803      	ldr	r3, [r0, #0]
 8001970:	1b12      	subs	r2, r2, r4
 8001972:	8884      	ldrh	r4, [r0, #4]
 8001974:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001976:	1b09      	subs	r1, r1, r4
 8001978:	b212      	sxth	r2, r2
    }
 800197a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800197e:	b209      	sxth	r1, r1
 8001980:	4718      	bx	r3

08001982 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001982:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001986:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001988:	f04f 33ff 	mov.w	r3, #4294967295
 800198c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800198e:	6813      	ldr	r3, [r2, #0]
 8001990:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001992:	6010      	str	r0, [r2, #0]
    }
 8001994:	4770      	bx	lr

08001996 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001996:	2000      	movs	r0, #0
 8001998:	4770      	bx	lr

0800199a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800199a:	888b      	ldrh	r3, [r1, #4]
 800199c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800199e:	2001      	movs	r0, #1
 80019a0:	4770      	bx	lr

080019a2 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80019a2:	4770      	bx	lr

080019a4 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80019a4:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 80019a8:	4770      	bx	lr

080019aa <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80019aa:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 80019ae:	4770      	bx	lr

080019b0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80019b0:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80019b2:	2200      	movs	r2, #0
        return rect.width;
 80019b4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80019b8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80019bc:	8002      	strh	r2, [r0, #0]
 80019be:	8042      	strh	r2, [r0, #2]
 80019c0:	8084      	strh	r4, [r0, #4]
 80019c2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80019c4:	bd10      	pop	{r4, pc}

080019c6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80019c6:	2200      	movs	r2, #0
 80019c8:	8002      	strh	r2, [r0, #0]
 80019ca:	8042      	strh	r2, [r0, #2]
 80019cc:	8082      	strh	r2, [r0, #4]
 80019ce:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80019d0:	4770      	bx	lr

080019d2 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80019d2:	7701      	strb	r1, [r0, #28]
    }
 80019d4:	4770      	bx	lr

080019d6 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80019d6:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80019da:	4770      	bx	lr

080019dc <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80019dc:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80019e0:	4770      	bx	lr

080019e2 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80019e2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80019e6:	4770      	bx	lr

080019e8 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80019e8:	2001      	movs	r0, #1
 80019ea:	4770      	bx	lr

080019ec <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80019ec:	3098      	adds	r0, #152	@ 0x98
 80019ee:	4770      	bx	lr

080019f0 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80019f0:	308c      	adds	r0, #140	@ 0x8c
 80019f2:	4770      	bx	lr

080019f4 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80019f4:	3084      	adds	r0, #132	@ 0x84
 80019f6:	4770      	bx	lr

080019f8 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80019f8:	4770      	bx	lr

080019fa <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80019fa:	4770      	bx	lr

080019fc <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80019fc:	4770      	bx	lr
	...

08001a00 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001a00:	4b03      	ldr	r3, [pc, #12]	@ (8001a10 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001a02:	2290      	movs	r2, #144	@ 0x90
 8001a04:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001a08:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001a0c:	4770      	bx	lr
 8001a0e:	bf00      	nop
 8001a10:	e000e100 	.word	0xe000e100

08001a14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001a14:	4a09      	ldr	r2, [pc, #36]	@ (8001a3c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001a16:	490a      	ldr	r1, [pc, #40]	@ (8001a40 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001a18:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001a1a:	480a      	ldr	r0, [pc, #40]	@ (8001a44 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001a1c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001a20:	3b01      	subs	r3, #1
 8001a22:	b29b      	uxth	r3, r3
 8001a24:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001a26:	6911      	ldr	r1, [r2, #16]
 8001a28:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001a2c:	3901      	subs	r1, #1
 8001a2e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001a30:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001a32:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001a34:	f043 0301 	orr.w	r3, r3, #1
 8001a38:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001a3a:	4770      	bx	lr
 8001a3c:	40016800 	.word	0x40016800
 8001a40:	20002706 	.word	0x20002706
 8001a44:	20002704 	.word	0x20002704

08001a48 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001a48:	4b01      	ldr	r3, [pc, #4]	@ (8001a50 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001a4a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001a4e:	4770      	bx	lr
 8001a50:	40016800 	.word	0x40016800

08001a54 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001a54:	4b02      	ldr	r3, [pc, #8]	@ (8001a60 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001a56:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001a58:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001a5c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001a5e:	4770      	bx	lr
 8001a60:	40016800 	.word	0x40016800

08001a64 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001a64:	b510      	push	{r4, lr}
 8001a66:	212c      	movs	r1, #44	@ 0x2c
 8001a68:	4604      	mov	r4, r0
 8001a6a:	f02b fbc4 	bl	802d1f6 <_ZdlPvj>
 8001a6e:	4620      	mov	r0, r4
 8001a70:	bd10      	pop	{r4, pc}

08001a72 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001a72:	b510      	push	{r4, lr}
 8001a74:	21bc      	movs	r1, #188	@ 0xbc
 8001a76:	4604      	mov	r4, r0
 8001a78:	f02b fbbd 	bl	802d1f6 <_ZdlPvj>
 8001a7c:	4620      	mov	r0, r4
 8001a7e:	bd10      	pop	{r4, pc}

08001a80 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001a80:	b570      	push	{r4, r5, r6, lr}
 8001a82:	4604      	mov	r4, r0
    HAL::initialize();
 8001a84:	f013 fa8d 	bl	8014fa2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001a88:	6823      	ldr	r3, [r4, #0]
 8001a8a:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001a8c:	f019 f922 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
 8001a90:	4601      	mov	r1, r0
 8001a92:	4620      	mov	r0, r4
 8001a94:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001a96:	6823      	ldr	r3, [r4, #0]
 8001a98:	4a05      	ldr	r2, [pc, #20]	@ (8001ab0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001a9a:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8001a9e:	4620      	mov	r0, r4
 8001aa0:	46ac      	mov	ip, r5
 8001aa2:	2300      	movs	r3, #0
}
 8001aa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001aa8:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001aac:	4760      	bx	ip
 8001aae:	bf00      	nop
 8001ab0:	d004b000 	.word	0xd004b000

08001ab4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001ab4:	f013 ba5c 	b.w	8014f70 <_ZN8touchgfx3HAL10beginFrameEv>

08001ab8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001ab8:	f013 ba66 	b.w	8014f88 <_ZN8touchgfx3HAL8endFrameEv>

08001abc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001abc:	f013 ba22 	b.w	8014f04 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001ac0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001ac0:	f013 bb91 	b.w	80151e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001ac4 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001ac4:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001ac8:	b112      	cbz	r2, 8001ad0 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001aca:	6803      	ldr	r3, [r0, #0]
 8001acc:	695b      	ldr	r3, [r3, #20]
 8001ace:	4718      	bx	r3
    }
 8001ad0:	4770      	bx	lr

08001ad2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001ad2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001ad6:	b11a      	cbz	r2, 8001ae0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001ad8:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001adc:	b102      	cbz	r2, 8001ae0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001ade:	6018      	str	r0, [r3, #0]
        }
    }
 8001ae0:	4770      	bx	lr
	...

08001ae4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ae4:	4b03      	ldr	r3, [pc, #12]	@ (8001af4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001ae6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001aea:	609a      	str	r2, [r3, #8]
 8001aec:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001af0:	609a      	str	r2, [r3, #8]
}
 8001af2:	4770      	bx	lr
 8001af4:	e000e100 	.word	0xe000e100

08001af8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001af8:	4b08      	ldr	r3, [pc, #32]	@ (8001b1c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001afa:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001afe:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b02:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b06:	f3bf 8f6f 	isb	sy
 8001b0a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001b0e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b16:	f3bf 8f6f 	isb	sy
}
 8001b1a:	4770      	bx	lr
 8001b1c:	e000e100 	.word	0xe000e100

08001b20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001b20:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001b22:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001b24:	4e12      	ldr	r6, [pc, #72]	@ (8001b70 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001b26:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001b28:	4b12      	ldr	r3, [pc, #72]	@ (8001b74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001b2a:	6003      	str	r3, [r0, #0]
 8001b2c:	6833      	ldr	r3, [r6, #0]
 8001b2e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001b32:	4605      	mov	r5, r0
 8001b34:	b10a      	cbz	r2, 8001b3a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001b36:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001b38:	b900      	cbnz	r0, 8001b3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001b3a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001b3c:	6803      	ldr	r3, [r0, #0]
 8001b3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001b40:	4798      	blx	r3
        return auxiliaryLCD;
 8001b42:	6833      	ldr	r3, [r6, #0]
 8001b44:	fab0 f480 	clz	r4, r0
 8001b48:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001b4a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001b4c:	b130      	cbz	r0, 8001b5c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001b4e:	6803      	ldr	r3, [r0, #0]
 8001b50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001b52:	4798      	blx	r3
 8001b54:	2800      	cmp	r0, #0
 8001b56:	bf08      	it	eq
 8001b58:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001b5c:	b92c      	cbnz	r4, 8001b6a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001b5e:	4b06      	ldr	r3, [pc, #24]	@ (8001b78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001b60:	4a06      	ldr	r2, [pc, #24]	@ (8001b7c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001b62:	4807      	ldr	r0, [pc, #28]	@ (8001b80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001b64:	212c      	movs	r1, #44	@ 0x2c
 8001b66:	f02c fa83 	bl	802e070 <__assert_func>
    }
 8001b6a:	4628      	mov	r0, r5
 8001b6c:	bd70      	pop	{r4, r5, r6, pc}
 8001b6e:	bf00      	nop
 8001b70:	20013884 	.word	0x20013884
 8001b74:	080308ac 	.word	0x080308ac
 8001b78:	0802f50b 	.word	0x0802f50b
 8001b7c:	0802f569 	.word	0x0802f569
 8001b80:	0802f5a2 	.word	0x0802f5a2

08001b84 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001b84:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001b86:	4e25      	ldr	r6, [pc, #148]	@ (8001c1c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001b88:	6835      	ldr	r5, [r6, #0]
 8001b8a:	f3bf 8f5b 	dmb	ish
 8001b8e:	f015 0501 	ands.w	r5, r5, #1
 8001b92:	d140      	bne.n	8001c16 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001b94:	4630      	mov	r0, r6
 8001b96:	f02b fb30 	bl	802d1fa <__cxa_guard_acquire>
 8001b9a:	2800      	cmp	r0, #0
 8001b9c:	d03b      	beq.n	8001c16 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8001b9e:	4c20      	ldr	r4, [pc, #128]	@ (8001c20 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001ba0:	4b20      	ldr	r3, [pc, #128]	@ (8001c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001ba2:	6125      	str	r5, [r4, #16]
 8001ba4:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001ba8:	e9c4 3500 	strd	r3, r5, [r4]
 8001bac:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001bb0:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001bb2:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001bb4:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8001bb6:	f01a fdda 	bl	801c76e <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 8001bba:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001bbe:	f015 fd77 	bl	80176b0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001bc2:	4b19      	ldr	r3, [pc, #100]	@ (8001c28 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8001bc4:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001bc6:	4620      	mov	r0, r4
 8001bc8:	4b18      	ldr	r3, [pc, #96]	@ (8001c2c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8001bca:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001bce:	f7ff ffa7 	bl	8001b20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001bd2:	4b17      	ldr	r3, [pc, #92]	@ (8001c30 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8001bd4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8001bd8:	3324      	adds	r3, #36	@ 0x24
 8001bda:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001bde:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001be2:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8001be6:	2300      	movs	r3, #0
 8001be8:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8001bec:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8001bf0:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8001bf4:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8001bf8:	480e      	ldr	r0, [pc, #56]	@ (8001c34 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 8001bfa:	4b0f      	ldr	r3, [pc, #60]	@ (8001c38 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8001bfc:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 8001c00:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8001c04:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8001c08:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8001c0c:	f02c fa4e 	bl	802e0ac <atexit>
 8001c10:	4630      	mov	r0, r6
 8001c12:	f02b fafe 	bl	802d212 <__cxa_guard_release>
}
 8001c16:	4802      	ldr	r0, [pc, #8]	@ (8001c20 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001c18:	bd70      	pop	{r4, r5, r6, pc}
 8001c1a:	bf00      	nop
 8001c1c:	20002708 	.word	0x20002708
 8001c20:	2000270c 	.word	0x2000270c
 8001c24:	080321ac 	.word	0x080321ac
 8001c28:	080308cc 	.word	0x080308cc
 8001c2c:	08030944 	.word	0x08030944
 8001c30:	08032160 	.word	0x08032160
 8001c34:	080019fd 	.word	0x080019fd
 8001c38:	08032140 	.word	0x08032140

08001c3c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001c3c:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8001c3e:	4c18      	ldr	r4, [pc, #96]	@ (8001ca0 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 8001c40:	6823      	ldr	r3, [r4, #0]
 8001c42:	b35b      	cbz	r3, 8001c9c <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001c44:	4b17      	ldr	r3, [pc, #92]	@ (8001ca4 <HAL_LTDC_LineEventCallback+0x68>)
 8001c46:	4a18      	ldr	r2, [pc, #96]	@ (8001ca8 <HAL_LTDC_LineEventCallback+0x6c>)
 8001c48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c4a:	8811      	ldrh	r1, [r2, #0]
 8001c4c:	428b      	cmp	r3, r1
 8001c4e:	d116      	bne.n	8001c7e <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001c50:	4b16      	ldr	r3, [pc, #88]	@ (8001cac <HAL_LTDC_LineEventCallback+0x70>)
 8001c52:	8819      	ldrh	r1, [r3, #0]
 8001c54:	f00f fbd8 	bl	8011408 <HAL_LTDC_ProgramLineEvent>
 8001c58:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001c5a:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001c5e:	2500      	movs	r5, #0
        vSyncCnt++;
 8001c60:	3201      	adds	r2, #1
 8001c62:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001c66:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001c6a:	f7ff fab3 	bl	80011d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001c6e:	6820      	ldr	r0, [r4, #0]
 8001c70:	f013 ff14 	bl	8015a9c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001c74:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001c76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001c7a:	f7ff b8f3 	b.w	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001c7e:	f00f fbc3 	bl	8011408 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001c82:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001c84:	6823      	ldr	r3, [r4, #0]
 8001c86:	4620      	mov	r0, r4
 8001c88:	6a1b      	ldr	r3, [r3, #32]
 8001c8a:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001c8c:	2301      	movs	r3, #1
 8001c8e:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001c92:	2000      	movs	r0, #0
    }
 8001c94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001c98:	f7ff b90e 	b.w	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001c9c:	bd38      	pop	{r3, r4, r5, pc}
 8001c9e:	bf00      	nop
 8001ca0:	20013884 	.word	0x20013884
 8001ca4:	40016800 	.word	0x40016800
 8001ca8:	20002706 	.word	0x20002706
 8001cac:	20002704 	.word	0x20002704

08001cb0 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001cb0:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001cb2:	4b06      	ldr	r3, [pc, #24]	@ (8001ccc <SPI5_Write+0x1c>)
{
 8001cb4:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001cb8:	681b      	ldr	r3, [r3, #0]
 8001cba:	4805      	ldr	r0, [pc, #20]	@ (8001cd0 <SPI5_Write+0x20>)
 8001cbc:	2201      	movs	r2, #1
 8001cbe:	f10d 0106 	add.w	r1, sp, #6
 8001cc2:	f010 f941 	bl	8011f48 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001cc6:	b003      	add	sp, #12
 8001cc8:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ccc:	2000000c 	.word	0x2000000c
 8001cd0:	2000280c 	.word	0x2000280c

08001cd4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001cd4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001cd6:	2064      	movs	r0, #100	@ 0x64
 8001cd8:	f010 fdf6 	bl	80128c8 <osDelay>
  for(;;)
 8001cdc:	e7fb      	b.n	8001cd6 <StartDefaultTask+0x2>
	...

08001ce0 <SystemClock_Config>:
{
 8001ce0:	b530      	push	{r4, r5, lr}
 8001ce2:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001ce4:	2210      	movs	r2, #16
 8001ce6:	2100      	movs	r1, #0
 8001ce8:	a80a      	add	r0, sp, #40	@ 0x28
 8001cea:	f02c fbc8 	bl	802e47e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001cee:	2214      	movs	r2, #20
 8001cf0:	2100      	movs	r1, #0
 8001cf2:	a803      	add	r0, sp, #12
 8001cf4:	f02c fbc3 	bl	802e47e <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001cf8:	2400      	movs	r4, #0
 8001cfa:	4b1e      	ldr	r3, [pc, #120]	@ (8001d74 <SystemClock_Config+0x94>)
 8001cfc:	9401      	str	r4, [sp, #4]
 8001cfe:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001d00:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001d04:	641a      	str	r2, [r3, #64]	@ 0x40
 8001d06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d08:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001d0c:	9301      	str	r3, [sp, #4]
 8001d0e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001d10:	4b19      	ldr	r3, [pc, #100]	@ (8001d78 <SystemClock_Config+0x98>)
 8001d12:	9402      	str	r4, [sp, #8]
 8001d14:	681a      	ldr	r2, [r3, #0]
 8001d16:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001d1a:	601a      	str	r2, [r3, #0]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001d22:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001d24:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001d26:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001d28:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001d2c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001d30:	2502      	movs	r5, #2
 8001d32:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001d36:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001d38:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001d3c:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8001d40:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001d44:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001d46:	2304      	movs	r3, #4
 8001d48:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001d4a:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001d4c:	f00f fbb4 	bl	80114b8 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001d50:	f00f fb78 	bl	8011444 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001d54:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001d56:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d5a:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001d5e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001d62:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d66:	2105      	movs	r1, #5
 8001d68:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001d6a:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d6c:	f00f fd80 	bl	8011870 <HAL_RCC_ClockConfig>
}
 8001d70:	b015      	add	sp, #84	@ 0x54
 8001d72:	bd30      	pop	{r4, r5, pc}
 8001d74:	40023800 	.word	0x40023800
 8001d78:	40007000 	.word	0x40007000

08001d7c <main>:
{
 8001d7c:	b580      	push	{r7, lr}
 8001d7e:	b09a      	sub	sp, #104	@ 0x68
  HAL_Init();
 8001d80:	f00e fab4 	bl	80102ec <HAL_Init>
  SystemClock_Config();
 8001d84:	f7ff ffac 	bl	8001ce0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d88:	2214      	movs	r2, #20
 8001d8a:	2100      	movs	r1, #0
 8001d8c:	a80d      	add	r0, sp, #52	@ 0x34
 8001d8e:	f02c fb76 	bl	802e47e <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d92:	2400      	movs	r4, #0
 8001d94:	4bc7      	ldr	r3, [pc, #796]	@ (80020b4 <main+0x338>)
 8001d96:	9400      	str	r4, [sp, #0]
 8001d98:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001d9a:	48c7      	ldr	r0, [pc, #796]	@ (80020b8 <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001d9c:	4dc7      	ldr	r5, [pc, #796]	@ (80020bc <main+0x340>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001d9e:	f8df 8354 	ldr.w	r8, [pc, #852]	@ 80020f4 <main+0x378>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001da2:	f042 0210 	orr.w	r2, r2, #16
 8001da6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001da8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001daa:	f002 0210 	and.w	r2, r2, #16
 8001dae:	9200      	str	r2, [sp, #0]
 8001db0:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001db2:	9401      	str	r4, [sp, #4]
 8001db4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001db6:	f042 0220 	orr.w	r2, r2, #32
 8001dba:	631a      	str	r2, [r3, #48]	@ 0x30
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001dbe:	f002 0220 	and.w	r2, r2, #32
 8001dc2:	9201      	str	r2, [sp, #4]
 8001dc4:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001dc6:	9402      	str	r4, [sp, #8]
 8001dc8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001dca:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001dce:	631a      	str	r2, [r3, #48]	@ 0x30
 8001dd0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001dd2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001dd6:	9202      	str	r2, [sp, #8]
 8001dd8:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dda:	9403      	str	r4, [sp, #12]
 8001ddc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001dde:	f042 0204 	orr.w	r2, r2, #4
 8001de2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001de4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001de6:	f002 0204 	and.w	r2, r2, #4
 8001dea:	9203      	str	r2, [sp, #12]
 8001dec:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001dee:	9404      	str	r4, [sp, #16]
 8001df0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001df2:	f042 0201 	orr.w	r2, r2, #1
 8001df6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001df8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001dfa:	f002 0201 	and.w	r2, r2, #1
 8001dfe:	9204      	str	r2, [sp, #16]
 8001e00:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e02:	9405      	str	r4, [sp, #20]
 8001e04:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001e06:	f042 0202 	orr.w	r2, r2, #2
 8001e0a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001e0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001e0e:	f002 0202 	and.w	r2, r2, #2
 8001e12:	9205      	str	r2, [sp, #20]
 8001e14:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001e16:	9406      	str	r4, [sp, #24]
 8001e18:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001e1a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001e1e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001e20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001e22:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001e26:	9206      	str	r2, [sp, #24]
 8001e28:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e2a:	9407      	str	r4, [sp, #28]
 8001e2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001e2e:	f042 0208 	orr.w	r2, r2, #8
 8001e32:	631a      	str	r2, [r3, #48]	@ 0x30
 8001e34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e36:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001e3a:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e3c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001e3e:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e40:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001e42:	f00e fcd9 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001e46:	489e      	ldr	r0, [pc, #632]	@ (80020c0 <main+0x344>)
 8001e48:	2201      	movs	r2, #1
 8001e4a:	2102      	movs	r1, #2
 8001e4c:	f00e fcd4 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e50:	4622      	mov	r2, r4
 8001e52:	489b      	ldr	r0, [pc, #620]	@ (80020c0 <main+0x344>)
 8001e54:	2104      	movs	r1, #4
 8001e56:	f00e fccf 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001e5a:	4622      	mov	r2, r4
 8001e5c:	4899      	ldr	r0, [pc, #612]	@ (80020c4 <main+0x348>)
 8001e5e:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001e62:	f00e fcc9 	bl	80107f8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e66:	2601      	movs	r6, #1
 8001e68:	233c      	movs	r3, #60	@ 0x3c
 8001e6a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e6e:	4892      	ldr	r0, [pc, #584]	@ (80020b8 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e70:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e72:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e74:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8001e76:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e78:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e7a:	f00e fbd3 	bl	8010624 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001e7e:	4890      	ldr	r0, [pc, #576]	@ (80020c0 <main+0x344>)
 8001e80:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e82:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e86:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001e8a:	f00e fbcb 	bl	8010624 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001e8e:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e90:	488b      	ldr	r0, [pc, #556]	@ (80020c0 <main+0x344>)
 8001e92:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e94:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e98:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e9c:	f00e fbc2 	bl	8010624 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ea0:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001ea2:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ea6:	4887      	ldr	r0, [pc, #540]	@ (80020c4 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ea8:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001eac:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001eb0:	f00e fbb8 	bl	8010624 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001eb4:	4884      	ldr	r0, [pc, #528]	@ (80020c8 <main+0x34c>)
 8001eb6:	4b85      	ldr	r3, [pc, #532]	@ (80020cc <main+0x350>)
 8001eb8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001eba:	f00e faa9 	bl	8010410 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001ebe:	f8df e238 	ldr.w	lr, [pc, #568]	@ 80020f8 <main+0x37c>
 8001ec2:	4b83      	ldr	r3, [pc, #524]	@ (80020d0 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001ec4:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001ec6:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001eca:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001ecc:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001ed0:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001ed4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001ed8:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001edc:	f00e fe9a 	bl	8010c14 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001ee0:	2110      	movs	r1, #16
 8001ee2:	4628      	mov	r0, r5
 8001ee4:	f00f f8de 	bl	80110a4 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001ee8:	4621      	mov	r1, r4
 8001eea:	4628      	mov	r0, r5
  hspi5.Instance = SPI5;
 8001eec:	4d79      	ldr	r5, [pc, #484]	@ (80020d4 <main+0x358>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001eee:	f00f f8f8 	bl	80110e2 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001ef2:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001ef6:	e9c5 8300 	strd	r8, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001efa:	f44f 7900 	mov.w	r9, #512	@ 0x200
 8001efe:	2318      	movs	r3, #24
 8001f00:	e9c5 9306 	strd	r9, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001f04:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001f06:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001f08:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001f0c:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001f10:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001f14:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8001f16:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001f18:	f00f ffba 	bl	8011e90 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001f1c:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001f1e:	4622      	mov	r2, r4
 8001f20:	4639      	mov	r1, r7
 8001f22:	4867      	ldr	r0, [pc, #412]	@ (80020c0 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001f24:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8001f28:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001f2c:	f00e fc64 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001f30:	4632      	mov	r2, r6
 8001f32:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001f36:	a909      	add	r1, sp, #36	@ 0x24
 8001f38:	4628      	mov	r0, r5
 8001f3a:	f010 f805 	bl	8011f48 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001f3e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001f42:	4632      	mov	r2, r6
 8001f44:	a90d      	add	r1, sp, #52	@ 0x34
 8001f46:	4628      	mov	r0, r5
 8001f48:	f010 f9aa 	bl	80122a0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001f4c:	4632      	mov	r2, r6
 8001f4e:	4639      	mov	r1, r7
 8001f50:	485b      	ldr	r0, [pc, #364]	@ (80020c0 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001f52:	4d61      	ldr	r5, [pc, #388]	@ (80020d8 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001f54:	f00e fc50 	bl	80107f8 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8001f58:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8001f5c:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001f5e:	bf04      	itt	eq
 8001f60:	4b5e      	ldreq	r3, [pc, #376]	@ (80020dc <main+0x360>)
 8001f62:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001f64:	4b5e      	ldr	r3, [pc, #376]	@ (80020e0 <main+0x364>)
 8001f66:	2601      	movs	r6, #1
 8001f68:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001f6c:	2210      	movs	r2, #16
 8001f6e:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001f70:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001f72:	e9c5 2304 	strd	r2, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001f76:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001f7a:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001f7e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001f82:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001f86:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001f8a:	2702      	movs	r7, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001f8c:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001f90:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001f92:	f04f 0a03 	mov.w	sl, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001f96:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001f98:	a90d      	add	r1, sp, #52	@ 0x34
 8001f9a:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001f9c:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001fa0:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001fa4:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001fa8:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001fac:	e9cd a711 	strd	sl, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001fb0:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001fb2:	f00f fe51 	bl	8011c58 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fb6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001fba:	a909      	add	r1, sp, #36	@ 0x24
 8001fbc:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001fbe:	e9cd 860a 	strd	r8, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001fc2:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001fc4:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001fc6:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fc8:	f00f fe66 	bl	8011c98 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001fcc:	4630      	mov	r0, r6
 8001fce:	f00e f9b9 	bl	8010344 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fd2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001fd6:	a909      	add	r1, sp, #36	@ 0x24
 8001fd8:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001fda:	e9cd 7809 	strd	r7, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001fde:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fe2:	f00f fe59 	bl	8011c98 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fe6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001fea:	a909      	add	r1, sp, #36	@ 0x24
 8001fec:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001fee:	e9cd a809 	strd	sl, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001ff2:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ff6:	f00f fe4f 	bl	8011c98 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001ffa:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001ffe:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8002000:	9b08      	ldr	r3, [sp, #32]
 8002002:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002004:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002008:	a909      	add	r1, sp, #36	@ 0x24
 800200a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800200c:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8002010:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002012:	f00f fe41 	bl	8011c98 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8002016:	f240 516a 	movw	r1, #1386	@ 0x56a
 800201a:	4628      	mov	r0, r5
 800201c:	f00f fe5a 	bl	8011cd4 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002020:	2234      	movs	r2, #52	@ 0x34
 8002022:	eb0d 0002 	add.w	r0, sp, r2
 8002026:	4621      	mov	r1, r4
 8002028:	f02c fa29 	bl	802e47e <memset>
  hltdc.Instance = LTDC;
 800202c:	4d2d      	ldr	r5, [pc, #180]	@ (80020e4 <main+0x368>)
 800202e:	4b2e      	ldr	r3, [pc, #184]	@ (80020e8 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8002030:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8002032:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8002036:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8002038:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800203c:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 800203e:	e9c5 3a07 	strd	r3, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8002042:	f240 110d 	movw	r1, #269	@ 0x10d
 8002046:	f240 1343 	movw	r3, #323	@ 0x143
 800204a:	e9c5 1309 	strd	r1, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 800204e:	f240 1017 	movw	r0, #279	@ 0x117
 8002052:	f240 1347 	movw	r3, #327	@ 0x147
 8002056:	e9c5 030b 	strd	r0, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800205a:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800205c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8002060:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8002062:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8002066:	f00f f8d7 	bl	8011218 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800206a:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800206c:	f44f 6c80 	mov.w	ip, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8002070:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002074:	2105      	movs	r1, #5
 8002076:	e9cd c114 	strd	ip, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowX1 = 240;
 800207a:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.FBStartAdress = 0xD0000000;
 800207c:	f04f 4150 	mov.w	r1, #3489660928	@ 0xd0000000
  pLayerCfg.WindowY1 = 320;
 8002080:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.ImageWidth = 240;
 8002084:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  pLayerCfg.WindowY0 = 0;
 8002088:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800208c:	a90d      	add	r1, sp, #52	@ 0x34
 800208e:	4622      	mov	r2, r4
 8002090:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8002092:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 8002096:	4d15      	ldr	r5, [pc, #84]	@ (80020ec <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8002098:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 800209a:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 800209c:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 80020a0:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80020a4:	f00f f983 	bl	80113ae <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80020a8:	4b11      	ldr	r3, [pc, #68]	@ (80020f0 <main+0x374>)
 80020aa:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80020ac:	681b      	ldr	r3, [r3, #0]
 80020ae:	4798      	blx	r3
  LcdDrv->DisplayOn();
 80020b0:	682b      	ldr	r3, [r5, #0]
 80020b2:	e023      	b.n	80020fc <main+0x380>
 80020b4:	40023800 	.word	0x40023800
 80020b8:	40021000 	.word	0x40021000
 80020bc:	2000290c 	.word	0x2000290c
 80020c0:	40020800 	.word	0x40020800
 80020c4:	40020c00 	.word	0x40020c00
 80020c8:	200029a0 	.word	0x200029a0
 80020cc:	40023000 	.word	0x40023000
 80020d0:	000186a0 	.word	0x000186a0
 80020d4:	2000280c 	.word	0x2000280c
 80020d8:	200027d8 	.word	0x200027d8
 80020dc:	200027cc 	.word	0x200027cc
 80020e0:	a0000140 	.word	0xa0000140
 80020e4:	20002864 	.word	0x20002864
 80020e8:	40016800 	.word	0x40016800
 80020ec:	200027c8 	.word	0x200027c8
 80020f0:	20000014 	.word	0x20000014
 80020f4:	40015000 	.word	0x40015000
 80020f8:	40005c00 	.word	0x40005c00
  hdma2d.Instance = DMA2D;
 80020fc:	4d14      	ldr	r5, [pc, #80]	@ (8002150 <main+0x3d4>)
  LcdDrv->DisplayOn();
 80020fe:	689b      	ldr	r3, [r3, #8]
 8002100:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8002102:	4b14      	ldr	r3, [pc, #80]	@ (8002154 <main+0x3d8>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002104:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8002106:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800210a:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800210e:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002112:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002116:	f00e f98b 	bl	8010430 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800211a:	4631      	mov	r1, r6
 800211c:	4628      	mov	r0, r5
 800211e:	f00e fa3d 	bl	801059c <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8002122:	f7fe fdd3 	bl	8000ccc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8002126:	f7fe fdd0 	bl	8000cca <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 800212a:	f010 fb5d 	bl	80127e8 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800212e:	4a0a      	ldr	r2, [pc, #40]	@ (8002158 <main+0x3dc>)
 8002130:	480a      	ldr	r0, [pc, #40]	@ (800215c <main+0x3e0>)
 8002132:	4621      	mov	r1, r4
 8002134:	f010 fb84 	bl	8012840 <osThreadNew>
 8002138:	4b09      	ldr	r3, [pc, #36]	@ (8002160 <main+0x3e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800213a:	4a0a      	ldr	r2, [pc, #40]	@ (8002164 <main+0x3e8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800213c:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800213e:	4621      	mov	r1, r4
 8002140:	4809      	ldr	r0, [pc, #36]	@ (8002168 <main+0x3ec>)
 8002142:	f010 fb7d 	bl	8012840 <osThreadNew>
 8002146:	4b09      	ldr	r3, [pc, #36]	@ (800216c <main+0x3f0>)
 8002148:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800214a:	f010 fb5f 	bl	801280c <osKernelStart>
  while (1)
 800214e:	e7fe      	b.n	800214e <main+0x3d2>
 8002150:	20002960 	.word	0x20002960
 8002154:	4002b000 	.word	0x4002b000
 8002158:	080309ac 	.word	0x080309ac
 800215c:	08001cd5 	.word	0x08001cd5
 8002160:	200027d4 	.word	0x200027d4
 8002164:	08030988 	.word	0x08030988
 8002168:	08000cdb 	.word	0x08000cdb
 800216c:	200027d0 	.word	0x200027d0

08002170 <IOE_Init>:
void IOE_Init(void)
 8002170:	4770      	bx	lr

08002172 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8002172:	4770      	bx	lr

08002174 <IOE_Write>:
{
 8002174:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8002176:	4b09      	ldr	r3, [pc, #36]	@ (800219c <IOE_Write+0x28>)
 8002178:	f88d 2017 	strb.w	r2, [sp, #23]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	9302      	str	r3, [sp, #8]
 8002180:	f10d 0217 	add.w	r2, sp, #23
 8002184:	2301      	movs	r3, #1
 8002186:	9200      	str	r2, [sp, #0]
 8002188:	9301      	str	r3, [sp, #4]
 800218a:	460a      	mov	r2, r1
 800218c:	4601      	mov	r1, r0
 800218e:	4804      	ldr	r0, [pc, #16]	@ (80021a0 <IOE_Write+0x2c>)
 8002190:	f00e fde8 	bl	8010d64 <HAL_I2C_Mem_Write>
}
 8002194:	b007      	add	sp, #28
 8002196:	f85d fb04 	ldr.w	pc, [sp], #4
 800219a:	bf00      	nop
 800219c:	20000010 	.word	0x20000010
 80021a0:	2000290c 	.word	0x2000290c

080021a4 <IOE_Read>:
{
 80021a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80021a6:	2300      	movs	r3, #0
 80021a8:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80021ac:	4b08      	ldr	r3, [pc, #32]	@ (80021d0 <IOE_Read+0x2c>)
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	9302      	str	r3, [sp, #8]
{
 80021b2:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80021b4:	2301      	movs	r3, #1
 80021b6:	f10d 0117 	add.w	r1, sp, #23
 80021ba:	9100      	str	r1, [sp, #0]
 80021bc:	9301      	str	r3, [sp, #4]
 80021be:	4601      	mov	r1, r0
 80021c0:	4804      	ldr	r0, [pc, #16]	@ (80021d4 <IOE_Read+0x30>)
 80021c2:	f00e fe5f 	bl	8010e84 <HAL_I2C_Mem_Read>
}
 80021c6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80021ca:	b007      	add	sp, #28
 80021cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80021d0:	20000010 	.word	0x20000010
 80021d4:	2000290c 	.word	0x2000290c

080021d8 <IOE_ReadMultiple>:
{
 80021d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80021da:	4c08      	ldr	r4, [pc, #32]	@ (80021fc <IOE_ReadMultiple+0x24>)
 80021dc:	6824      	ldr	r4, [r4, #0]
 80021de:	9200      	str	r2, [sp, #0]
 80021e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80021e4:	460a      	mov	r2, r1
 80021e6:	2301      	movs	r3, #1
 80021e8:	4601      	mov	r1, r0
 80021ea:	4805      	ldr	r0, [pc, #20]	@ (8002200 <IOE_ReadMultiple+0x28>)
 80021ec:	f00e fe4a 	bl	8010e84 <HAL_I2C_Mem_Read>
}
 80021f0:	3800      	subs	r0, #0
 80021f2:	bf18      	it	ne
 80021f4:	2001      	movne	r0, #1
 80021f6:	b004      	add	sp, #16
 80021f8:	bd10      	pop	{r4, pc}
 80021fa:	bf00      	nop
 80021fc:	20000010 	.word	0x20000010
 8002200:	2000290c 	.word	0x2000290c

08002204 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002204:	f00e b89e 	b.w	8010344 <HAL_Delay>

08002208 <LCD_IO_Init>:
{
 8002208:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800220a:	4c06      	ldr	r4, [pc, #24]	@ (8002224 <LCD_IO_Init+0x1c>)
 800220c:	2200      	movs	r2, #0
 800220e:	4620      	mov	r0, r4
 8002210:	2104      	movs	r1, #4
 8002212:	f00e faf1 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002216:	4620      	mov	r0, r4
 8002218:	2201      	movs	r2, #1
}
 800221a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800221e:	2104      	movs	r1, #4
 8002220:	f00e baea 	b.w	80107f8 <HAL_GPIO_WritePin>
 8002224:	40020800 	.word	0x40020800

08002228 <LCD_IO_WriteData>:
{
 8002228:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800222a:	4d0b      	ldr	r5, [pc, #44]	@ (8002258 <LCD_IO_WriteData+0x30>)
{
 800222c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800222e:	2201      	movs	r2, #1
 8002230:	480a      	ldr	r0, [pc, #40]	@ (800225c <LCD_IO_WriteData+0x34>)
 8002232:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002236:	f00e fadf 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800223a:	2200      	movs	r2, #0
 800223c:	2104      	movs	r1, #4
 800223e:	4628      	mov	r0, r5
 8002240:	f00e fada 	bl	80107f8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002244:	4620      	mov	r0, r4
 8002246:	f7ff fd33 	bl	8001cb0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800224a:	4628      	mov	r0, r5
 800224c:	2201      	movs	r2, #1
}
 800224e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002252:	2104      	movs	r1, #4
 8002254:	f00e bad0 	b.w	80107f8 <HAL_GPIO_WritePin>
 8002258:	40020800 	.word	0x40020800
 800225c:	40020c00 	.word	0x40020c00

08002260 <LCD_IO_WriteReg>:
{
 8002260:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002262:	4d0b      	ldr	r5, [pc, #44]	@ (8002290 <LCD_IO_WriteReg+0x30>)
{
 8002264:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002266:	2200      	movs	r2, #0
 8002268:	480a      	ldr	r0, [pc, #40]	@ (8002294 <LCD_IO_WriteReg+0x34>)
 800226a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800226e:	f00e fac3 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002272:	2200      	movs	r2, #0
 8002274:	2104      	movs	r1, #4
 8002276:	4628      	mov	r0, r5
 8002278:	f00e fabe 	bl	80107f8 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 800227c:	4620      	mov	r0, r4
 800227e:	f7ff fd17 	bl	8001cb0 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002282:	4628      	mov	r0, r5
 8002284:	2201      	movs	r2, #1
}
 8002286:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800228a:	2104      	movs	r1, #4
 800228c:	f00e bab4 	b.w	80107f8 <HAL_GPIO_WritePin>
 8002290:	40020800 	.word	0x40020800
 8002294:	40020c00 	.word	0x40020c00

08002298 <LCD_IO_ReadData>:
{
 8002298:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800229a:	4e14      	ldr	r6, [pc, #80]	@ (80022ec <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800229c:	4f14      	ldr	r7, [pc, #80]	@ (80022f0 <LCD_IO_ReadData+0x58>)
{
 800229e:	4605      	mov	r5, r0
 80022a0:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80022a2:	4630      	mov	r0, r6
 80022a4:	2200      	movs	r2, #0
 80022a6:	2104      	movs	r1, #4
 80022a8:	f00e faa6 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80022ac:	2200      	movs	r2, #0
 80022ae:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80022b2:	4638      	mov	r0, r7
 80022b4:	f00e faa0 	bl	80107f8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80022b8:	4628      	mov	r0, r5
 80022ba:	f7ff fcf9 	bl	8001cb0 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80022be:	4b0d      	ldr	r3, [pc, #52]	@ (80022f4 <LCD_IO_ReadData+0x5c>)
 80022c0:	480d      	ldr	r0, [pc, #52]	@ (80022f8 <LCD_IO_ReadData+0x60>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	4622      	mov	r2, r4
 80022c6:	a901      	add	r1, sp, #4
 80022c8:	f00f ffea 	bl	80122a0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80022cc:	4638      	mov	r0, r7
 80022ce:	2201      	movs	r2, #1
 80022d0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 80022d4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80022d6:	f00e fa8f 	bl	80107f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80022da:	4630      	mov	r0, r6
 80022dc:	2201      	movs	r2, #1
 80022de:	2104      	movs	r1, #4
 80022e0:	f00e fa8a 	bl	80107f8 <HAL_GPIO_WritePin>
}
 80022e4:	4620      	mov	r0, r4
 80022e6:	b003      	add	sp, #12
 80022e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022ea:	bf00      	nop
 80022ec:	40020800 	.word	0x40020800
 80022f0:	40020c00 	.word	0x40020c00
 80022f4:	2000000c 	.word	0x2000000c
 80022f8:	2000280c 	.word	0x2000280c

080022fc <LCD_Delay>:
  HAL_Delay(Delay);
 80022fc:	f00e b822 	b.w	8010344 <HAL_Delay>

08002300 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8002300:	6802      	ldr	r2, [r0, #0]
 8002302:	4b03      	ldr	r3, [pc, #12]	@ (8002310 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002304:	429a      	cmp	r2, r3
 8002306:	d101      	bne.n	800230c <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002308:	f00e b80a 	b.w	8010320 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800230c:	4770      	bx	lr
 800230e:	bf00      	nop
 8002310:	40001000 	.word	0x40001000

08002314 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002314:	4770      	bx	lr
	...

08002318 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002318:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800231a:	4b0e      	ldr	r3, [pc, #56]	@ (8002354 <HAL_MspInit+0x3c>)
 800231c:	2200      	movs	r2, #0
 800231e:	9200      	str	r2, [sp, #0]
 8002320:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002322:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8002326:	6459      	str	r1, [r3, #68]	@ 0x44
 8002328:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800232a:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800232e:	9100      	str	r1, [sp, #0]
 8002330:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002332:	9201      	str	r2, [sp, #4]
 8002334:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8002336:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 800233a:	6419      	str	r1, [r3, #64]	@ 0x40
 800233c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800233e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002342:	9301      	str	r3, [sp, #4]
 8002344:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002346:	210f      	movs	r1, #15
 8002348:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800234c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800234e:	f00e b81f 	b.w	8010390 <HAL_NVIC_SetPriority>
 8002352:	bf00      	nop
 8002354:	40023800 	.word	0x40023800

08002358 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002358:	6802      	ldr	r2, [r0, #0]
 800235a:	4b09      	ldr	r3, [pc, #36]	@ (8002380 <HAL_CRC_MspInit+0x28>)
 800235c:	429a      	cmp	r2, r3
{
 800235e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002360:	d10b      	bne.n	800237a <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002362:	2300      	movs	r3, #0
 8002364:	9301      	str	r3, [sp, #4]
 8002366:	4b07      	ldr	r3, [pc, #28]	@ (8002384 <HAL_CRC_MspInit+0x2c>)
 8002368:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800236a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800236e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002372:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002376:	9301      	str	r3, [sp, #4]
 8002378:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 800237a:	b002      	add	sp, #8
 800237c:	4770      	bx	lr
 800237e:	bf00      	nop
 8002380:	40023000 	.word	0x40023000
 8002384:	40023800 	.word	0x40023800

08002388 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002388:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800238a:	4b0f      	ldr	r3, [pc, #60]	@ (80023c8 <HAL_DMA2D_MspInit+0x40>)
 800238c:	6802      	ldr	r2, [r0, #0]
 800238e:	429a      	cmp	r2, r3
 8002390:	d116      	bne.n	80023c0 <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002392:	2200      	movs	r2, #0
 8002394:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002398:	9201      	str	r2, [sp, #4]
 800239a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800239c:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80023a0:	6319      	str	r1, [r3, #48]	@ 0x30
 80023a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023a4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80023a8:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80023aa:	2105      	movs	r1, #5
 80023ac:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80023ae:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80023b0:	f00d ffee 	bl	8010390 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80023b4:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80023b6:	b003      	add	sp, #12
 80023b8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80023bc:	f00e b81a 	b.w	80103f4 <HAL_NVIC_EnableIRQ>
}
 80023c0:	b003      	add	sp, #12
 80023c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80023c6:	bf00      	nop
 80023c8:	4002b000 	.word	0x4002b000

080023cc <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80023cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80023d0:	4604      	mov	r4, r0
 80023d2:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023d4:	2214      	movs	r2, #20
 80023d6:	2100      	movs	r1, #0
 80023d8:	a803      	add	r0, sp, #12
 80023da:	f02c f850 	bl	802e47e <memset>
  if(hi2c->Instance==I2C3)
 80023de:	6822      	ldr	r2, [r4, #0]
 80023e0:	4b24      	ldr	r3, [pc, #144]	@ (8002474 <HAL_I2C_MspInit+0xa8>)
 80023e2:	429a      	cmp	r2, r3
 80023e4:	d143      	bne.n	800246e <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023e6:	4c24      	ldr	r4, [pc, #144]	@ (8002478 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023e8:	4824      	ldr	r0, [pc, #144]	@ (800247c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ea:	2500      	movs	r5, #0
 80023ec:	9500      	str	r5, [sp, #0]
 80023ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80023f0:	f043 0304 	orr.w	r3, r3, #4
 80023f4:	6323      	str	r3, [r4, #48]	@ 0x30
 80023f6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80023f8:	f003 0304 	and.w	r3, r3, #4
 80023fc:	9300      	str	r3, [sp, #0]
 80023fe:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002400:	9501      	str	r5, [sp, #4]
 8002402:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002404:	f043 0301 	orr.w	r3, r3, #1
 8002408:	6323      	str	r3, [r4, #48]	@ 0x30
 800240a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800240c:	f003 0301 	and.w	r3, r3, #1
 8002410:	9301      	str	r3, [sp, #4]
 8002412:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002414:	f04f 0912 	mov.w	r9, #18
 8002418:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800241c:	f04f 0801 	mov.w	r8, #1
 8002420:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002422:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002424:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002426:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800242a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800242e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002430:	f00e f8f8 	bl	8010624 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002434:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002438:	4811      	ldr	r0, [pc, #68]	@ (8002480 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800243a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800243c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800243e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002442:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002446:	f00e f8ed 	bl	8010624 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 800244a:	9502      	str	r5, [sp, #8]
 800244c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800244e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002452:	6423      	str	r3, [r4, #64]	@ 0x40
 8002454:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002456:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800245a:	9302      	str	r3, [sp, #8]
 800245c:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800245e:	6a23      	ldr	r3, [r4, #32]
 8002460:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002464:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002466:	6a23      	ldr	r3, [r4, #32]
 8002468:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800246c:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 800246e:	b009      	add	sp, #36	@ 0x24
 8002470:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002474:	40005c00 	.word	0x40005c00
 8002478:	40023800 	.word	0x40023800
 800247c:	40020800 	.word	0x40020800
 8002480:	40020000 	.word	0x40020000

08002484 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002484:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002486:	b099      	sub	sp, #100	@ 0x64
 8002488:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800248a:	2214      	movs	r2, #20
 800248c:	2100      	movs	r1, #0
 800248e:	a807      	add	r0, sp, #28
 8002490:	f02b fff5 	bl	802e47e <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002494:	2230      	movs	r2, #48	@ 0x30
 8002496:	eb0d 0002 	add.w	r0, sp, r2
 800249a:	2100      	movs	r1, #0
 800249c:	f02b ffef 	bl	802e47e <memset>
  if(hltdc->Instance==LTDC)
 80024a0:	6822      	ldr	r2, [r4, #0]
 80024a2:	4b5e      	ldr	r3, [pc, #376]	@ (800261c <HAL_LTDC_MspInit+0x198>)
 80024a4:	429a      	cmp	r2, r3
 80024a6:	f040 80b7 	bne.w	8002618 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80024aa:	2308      	movs	r3, #8
 80024ac:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80024ae:	23c0      	movs	r3, #192	@ 0xc0
 80024b0:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80024b2:	2304      	movs	r3, #4
 80024b4:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80024b6:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80024b8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80024bc:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80024be:	f00f fa9f 	bl	8011a00 <HAL_RCCEx_PeriphCLKConfig>
 80024c2:	b108      	cbz	r0, 80024c8 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80024c4:	f7ff ff26 	bl	8002314 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80024c8:	4b55      	ldr	r3, [pc, #340]	@ (8002620 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024ca:	4856      	ldr	r0, [pc, #344]	@ (8002624 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80024cc:	2400      	movs	r4, #0
 80024ce:	9400      	str	r4, [sp, #0]
 80024d0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80024d2:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80024d6:	645a      	str	r2, [r3, #68]	@ 0x44
 80024d8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80024da:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80024de:	9200      	str	r2, [sp, #0]
 80024e0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024e2:	9401      	str	r4, [sp, #4]
 80024e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80024e6:	f042 0220 	orr.w	r2, r2, #32
 80024ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80024ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80024ee:	f002 0220 	and.w	r2, r2, #32
 80024f2:	9201      	str	r2, [sp, #4]
 80024f4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024f6:	9402      	str	r4, [sp, #8]
 80024f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80024fa:	f042 0201 	orr.w	r2, r2, #1
 80024fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8002500:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002502:	f002 0201 	and.w	r2, r2, #1
 8002506:	9202      	str	r2, [sp, #8]
 8002508:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800250a:	9403      	str	r4, [sp, #12]
 800250c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800250e:	f042 0202 	orr.w	r2, r2, #2
 8002512:	631a      	str	r2, [r3, #48]	@ 0x30
 8002514:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002516:	f002 0202 	and.w	r2, r2, #2
 800251a:	9203      	str	r2, [sp, #12]
 800251c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800251e:	9404      	str	r4, [sp, #16]
 8002520:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002522:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002526:	631a      	str	r2, [r3, #48]	@ 0x30
 8002528:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800252a:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800252e:	9204      	str	r2, [sp, #16]
 8002530:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002532:	9405      	str	r4, [sp, #20]
 8002534:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002536:	f042 0204 	orr.w	r2, r2, #4
 800253a:	631a      	str	r2, [r3, #48]	@ 0x30
 800253c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800253e:	f002 0204 	and.w	r2, r2, #4
 8002542:	9205      	str	r2, [sp, #20]
 8002544:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002546:	9406      	str	r4, [sp, #24]
 8002548:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800254a:	f042 0208 	orr.w	r2, r2, #8
 800254e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002550:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002552:	f003 0308 	and.w	r3, r3, #8
 8002556:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002558:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800255a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800255c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800255e:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002560:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002564:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002566:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800256a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800256e:	f00e f859 	bl	8010624 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002572:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002576:	482c      	ldr	r0, [pc, #176]	@ (8002628 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002578:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800257a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800257c:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002580:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002582:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002586:	f00e f84d 	bl	8010624 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800258a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800258c:	4827      	ldr	r0, [pc, #156]	@ (800262c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800258e:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002590:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002592:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002596:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800259a:	f00e f843 	bl	8010624 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800259e:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025a2:	4822      	ldr	r0, [pc, #136]	@ (800262c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025a4:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025a6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025ac:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025b0:	f00e f838 	bl	8010624 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80025b4:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025b8:	481d      	ldr	r0, [pc, #116]	@ (8002630 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025ba:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025bc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025be:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025c2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025c6:	f00e f82d 	bl	8010624 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80025ca:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025cc:	4819      	ldr	r0, [pc, #100]	@ (8002634 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025ce:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025d0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025d2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025d6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025da:	f00e f823 	bl	8010624 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80025de:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025e0:	4815      	ldr	r0, [pc, #84]	@ (8002638 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025e2:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025e4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025e6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025ea:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025ee:	f00e f819 	bl	8010624 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80025f2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025f6:	480e      	ldr	r0, [pc, #56]	@ (8002630 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80025f8:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025fa:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025fc:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002600:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002604:	f00e f80e 	bl	8010624 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002608:	2058      	movs	r0, #88	@ 0x58
 800260a:	4622      	mov	r2, r4
 800260c:	2105      	movs	r1, #5
 800260e:	f00d febf 	bl	8010390 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002612:	2058      	movs	r0, #88	@ 0x58
 8002614:	f00d feee 	bl	80103f4 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002618:	b019      	add	sp, #100	@ 0x64
 800261a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800261c:	40016800 	.word	0x40016800
 8002620:	40023800 	.word	0x40023800
 8002624:	40021400 	.word	0x40021400
 8002628:	40020000 	.word	0x40020000
 800262c:	40020400 	.word	0x40020400
 8002630:	40021800 	.word	0x40021800
 8002634:	40020800 	.word	0x40020800
 8002638:	40020c00 	.word	0x40020c00

0800263c <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800263c:	b510      	push	{r4, lr}
 800263e:	4604      	mov	r4, r0
 8002640:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002642:	2214      	movs	r2, #20
 8002644:	2100      	movs	r1, #0
 8002646:	a803      	add	r0, sp, #12
 8002648:	f02b ff19 	bl	802e47e <memset>
  if(hspi->Instance==SPI5)
 800264c:	6822      	ldr	r2, [r4, #0]
 800264e:	4b14      	ldr	r3, [pc, #80]	@ (80026a0 <HAL_SPI_MspInit+0x64>)
 8002650:	429a      	cmp	r2, r3
 8002652:	d123      	bne.n	800269c <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002654:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002658:	2100      	movs	r1, #0
 800265a:	9101      	str	r1, [sp, #4]
 800265c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800265e:	4811      	ldr	r0, [pc, #68]	@ (80026a4 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002660:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002664:	645a      	str	r2, [r3, #68]	@ 0x44
 8002666:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002668:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800266c:	9201      	str	r2, [sp, #4]
 800266e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002670:	9102      	str	r1, [sp, #8]
 8002672:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002674:	f042 0220 	orr.w	r2, r2, #32
 8002678:	631a      	str	r2, [r3, #48]	@ 0x30
 800267a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800267c:	f003 0320 	and.w	r3, r3, #32
 8002680:	9302      	str	r3, [sp, #8]
 8002682:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002684:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002688:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800268a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800268c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002690:	2305      	movs	r3, #5
 8002692:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002696:	a903      	add	r1, sp, #12
 8002698:	f00d ffc4 	bl	8010624 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 800269c:	b008      	add	sp, #32
 800269e:	bd10      	pop	{r4, pc}
 80026a0:	40015000 	.word	0x40015000
 80026a4:	40021400 	.word	0x40021400

080026a8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80026a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026ac:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80026ae:	2300      	movs	r3, #0
 80026b0:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80026b2:	4b2b      	ldr	r3, [pc, #172]	@ (8002760 <HAL_SDRAM_MspInit+0xb8>)
 80026b4:	681c      	ldr	r4, [r3, #0]
 80026b6:	2c00      	cmp	r4, #0
 80026b8:	d14f      	bne.n	800275a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80026ba:	f04f 0801 	mov.w	r8, #1
 80026be:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80026c2:	4b28      	ldr	r3, [pc, #160]	@ (8002764 <HAL_SDRAM_MspInit+0xbc>)
 80026c4:	9400      	str	r4, [sp, #0]
 80026c6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026c8:	4827      	ldr	r0, [pc, #156]	@ (8002768 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80026ca:	ea42 0208 	orr.w	r2, r2, r8
 80026ce:	639a      	str	r2, [r3, #56]	@ 0x38
 80026d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80026d2:	ea03 0308 	and.w	r3, r3, r8
 80026d6:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026d8:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026da:	2603      	movs	r6, #3
 80026dc:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80026de:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026e0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026e2:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80026e6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026ea:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026ee:	f00d ff99 	bl	8010624 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f2:	481e      	ldr	r0, [pc, #120]	@ (800276c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026f4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026f8:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026fc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002700:	f00d ff90 	bl	8010624 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002704:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002708:	4819      	ldr	r0, [pc, #100]	@ (8002770 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800270a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800270c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800270e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002712:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002716:	f00d ff85 	bl	8010624 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800271a:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800271e:	4815      	ldr	r0, [pc, #84]	@ (8002774 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002720:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002722:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002724:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002728:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800272c:	f00d ff7a 	bl	8010624 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002730:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002734:	4810      	ldr	r0, [pc, #64]	@ (8002778 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002736:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002738:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800273a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800273e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002742:	f00d ff6f 	bl	8010624 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002746:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002748:	480c      	ldr	r0, [pc, #48]	@ (800277c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800274a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800274c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800274e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002752:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002756:	f00d ff65 	bl	8010624 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800275a:	b006      	add	sp, #24
 800275c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002760:	200029a8 	.word	0x200029a8
 8002764:	40023800 	.word	0x40023800
 8002768:	40021400 	.word	0x40021400
 800276c:	40020800 	.word	0x40020800
 8002770:	40021800 	.word	0x40021800
 8002774:	40021000 	.word	0x40021000
 8002778:	40020c00 	.word	0x40020c00
 800277c:	40020400 	.word	0x40020400

08002780 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002780:	b570      	push	{r4, r5, r6, lr}
 8002782:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002784:	2300      	movs	r3, #0
 8002786:	9302      	str	r3, [sp, #8]
 8002788:	4b20      	ldr	r3, [pc, #128]	@ (800280c <HAL_InitTick+0x8c>)
 800278a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800278c:	f042 0210 	orr.w	r2, r2, #16
 8002790:	641a      	str	r2, [r3, #64]	@ 0x40
 8002792:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002794:	f003 0310 	and.w	r3, r3, #16
 8002798:	9302      	str	r3, [sp, #8]
{
 800279a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800279c:	a901      	add	r1, sp, #4
 800279e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80027a0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027a2:	f00f f90f 	bl	80119c4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80027a6:	9b06      	ldr	r3, [sp, #24]
 80027a8:	bb4b      	cbnz	r3, 80027fe <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80027aa:	f00f f8fb 	bl	80119a4 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80027ae:	4e18      	ldr	r6, [pc, #96]	@ (8002810 <HAL_InitTick+0x90>)
 80027b0:	4b18      	ldr	r3, [pc, #96]	@ (8002814 <HAL_InitTick+0x94>)
 80027b2:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027b4:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80027b8:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027ba:	4b17      	ldr	r3, [pc, #92]	@ (8002818 <HAL_InitTick+0x98>)
 80027bc:	fbb0 f3f3 	udiv	r3, r0, r3
 80027c0:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80027c2:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80027c4:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 80027c6:	2300      	movs	r3, #0
 80027c8:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027ca:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80027cc:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80027ce:	f00f ff37 	bl	8012640 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80027d2:	4604      	mov	r4, r0
 80027d4:	b980      	cbnz	r0, 80027f8 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80027d6:	4630      	mov	r0, r6
 80027d8:	f00f fe08 	bl	80123ec <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80027dc:	4604      	mov	r4, r0
 80027de:	b958      	cbnz	r0, 80027f8 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80027e0:	2036      	movs	r0, #54	@ 0x36
 80027e2:	f00d fe07 	bl	80103f4 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80027e6:	2d0f      	cmp	r5, #15
 80027e8:	d80d      	bhi.n	8002806 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80027ea:	4622      	mov	r2, r4
 80027ec:	4629      	mov	r1, r5
 80027ee:	2036      	movs	r0, #54	@ 0x36
 80027f0:	f00d fdce 	bl	8010390 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80027f4:	4b09      	ldr	r3, [pc, #36]	@ (800281c <HAL_InitTick+0x9c>)
 80027f6:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 80027f8:	4620      	mov	r0, r4
 80027fa:	b008      	add	sp, #32
 80027fc:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80027fe:	f00f f8d1 	bl	80119a4 <HAL_RCC_GetPCLK1Freq>
 8002802:	0040      	lsls	r0, r0, #1
 8002804:	e7d3      	b.n	80027ae <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002806:	2401      	movs	r4, #1
 8002808:	e7f6      	b.n	80027f8 <HAL_InitTick+0x78>
 800280a:	bf00      	nop
 800280c:	40023800 	.word	0x40023800
 8002810:	200029ac 	.word	0x200029ac
 8002814:	40001000 	.word	0x40001000
 8002818:	000f4240 	.word	0x000f4240
 800281c:	2000007c 	.word	0x2000007c

08002820 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002820:	4770      	bx	lr

08002822 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002822:	e7fe      	b.n	8002822 <HardFault_Handler>

08002824 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002824:	e7fe      	b.n	8002824 <MemManage_Handler>

08002826 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002826:	e7fe      	b.n	8002826 <BusFault_Handler>

08002828 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002828:	e7fe      	b.n	8002828 <UsageFault_Handler>

0800282a <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800282a:	4770      	bx	lr

0800282c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800282c:	4801      	ldr	r0, [pc, #4]	@ (8002834 <TIM6_DAC_IRQHandler+0x8>)
 800282e:	f00f be1b 	b.w	8012468 <HAL_TIM_IRQHandler>
 8002832:	bf00      	nop
 8002834:	200029ac 	.word	0x200029ac

08002838 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002838:	4801      	ldr	r0, [pc, #4]	@ (8002840 <LTDC_IRQHandler+0x8>)
 800283a:	f00e bd5b 	b.w	80112f4 <HAL_LTDC_IRQHandler>
 800283e:	bf00      	nop
 8002840:	20002864 	.word	0x20002864

08002844 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002844:	4801      	ldr	r0, [pc, #4]	@ (800284c <DMA2D_IRQHandler+0x8>)
 8002846:	f00d be1f 	b.w	8010488 <HAL_DMA2D_IRQHandler>
 800284a:	bf00      	nop
 800284c:	20002960 	.word	0x20002960

08002850 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002850:	2001      	movs	r0, #1
 8002852:	4770      	bx	lr

08002854 <_kill>:

int _kill(int pid, int sig)
{
 8002854:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002856:	f02b feb5 	bl	802e5c4 <__errno>
 800285a:	2316      	movs	r3, #22
 800285c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800285e:	f04f 30ff 	mov.w	r0, #4294967295
 8002862:	bd08      	pop	{r3, pc}

08002864 <_exit>:

void _exit (int status)
{
 8002864:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002866:	f02b fead 	bl	802e5c4 <__errno>
 800286a:	2316      	movs	r3, #22
 800286c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800286e:	e7fe      	b.n	800286e <_exit+0xa>

08002870 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002870:	b570      	push	{r4, r5, r6, lr}
 8002872:	460d      	mov	r5, r1
 8002874:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002876:	460e      	mov	r6, r1
 8002878:	1b73      	subs	r3, r6, r5
 800287a:	429c      	cmp	r4, r3
 800287c:	dc01      	bgt.n	8002882 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800287e:	4620      	mov	r0, r4
 8002880:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002882:	f3af 8000 	nop.w
 8002886:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800288a:	e7f5      	b.n	8002878 <_read+0x8>

0800288c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800288c:	b570      	push	{r4, r5, r6, lr}
 800288e:	460d      	mov	r5, r1
 8002890:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002892:	460e      	mov	r6, r1
 8002894:	1b73      	subs	r3, r6, r5
 8002896:	429c      	cmp	r4, r3
 8002898:	dc01      	bgt.n	800289e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800289a:	4620      	mov	r0, r4
 800289c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800289e:	f816 0b01 	ldrb.w	r0, [r6], #1
 80028a2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028a6:	e7f5      	b.n	8002894 <_write+0x8>

080028a8 <_close>:

int _close(int file)
{
	return -1;
}
 80028a8:	f04f 30ff 	mov.w	r0, #4294967295
 80028ac:	4770      	bx	lr

080028ae <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80028ae:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80028b2:	604b      	str	r3, [r1, #4]
	return 0;
}
 80028b4:	2000      	movs	r0, #0
 80028b6:	4770      	bx	lr

080028b8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80028b8:	2001      	movs	r0, #1
 80028ba:	4770      	bx	lr

080028bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80028bc:	2000      	movs	r0, #0
 80028be:	4770      	bx	lr

080028c0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80028c0:	4a0a      	ldr	r2, [pc, #40]	@ (80028ec <_sbrk+0x2c>)
 80028c2:	6811      	ldr	r1, [r2, #0]
{
 80028c4:	b508      	push	{r3, lr}
 80028c6:	4603      	mov	r3, r0
	if (heap_end == 0)
 80028c8:	b909      	cbnz	r1, 80028ce <_sbrk+0xe>
		heap_end = &end;
 80028ca:	4909      	ldr	r1, [pc, #36]	@ (80028f0 <_sbrk+0x30>)
 80028cc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80028ce:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80028d0:	4669      	mov	r1, sp
 80028d2:	4403      	add	r3, r0
 80028d4:	428b      	cmp	r3, r1
 80028d6:	d906      	bls.n	80028e6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 80028d8:	f02b fe74 	bl	802e5c4 <__errno>
 80028dc:	230c      	movs	r3, #12
 80028de:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80028e0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80028e4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80028e6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80028e8:	e7fc      	b.n	80028e4 <_sbrk+0x24>
 80028ea:	bf00      	nop
 80028ec:	200029f4 	.word	0x200029f4
 80028f0:	200145c8 	.word	0x200145c8

080028f4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DAMAGEFONT = 3;    // arialbd_35_4bpp
    static const touchgfx::FontId TYPOGRAPHY_02 = 4; // arialbd_14_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80028f4:	4770      	bx	lr

080028f6 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80028f6:	b508      	push	{r3, lr}
    switch (typography)
 80028f8:	2906      	cmp	r1, #6
 80028fa:	d819      	bhi.n	8002930 <_ZN23ApplicationFontProvider7getFontEt+0x3a>
 80028fc:	e8df f001 	tbb	[pc, r1]
 8002900:	0c08040c 	.word	0x0c08040c
 8002904:	100c      	.short	0x100c
 8002906:	14          	.byte	0x14
 8002907:	00          	.byte	0x00
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::LARGE:
        // arialbd_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002908:	f007 fbec 	bl	800a0e4 <_ZN17TypedTextDatabase8getFontsEv>
 800290c:	6840      	ldr	r0, [r0, #4]
        // arialbd_14_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 800290e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002910:	f007 fbe8 	bl	800a0e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002914:	6880      	ldr	r0, [r0, #8]
 8002916:	e7fa      	b.n	800290e <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002918:	f007 fbe4 	bl	800a0e4 <_ZN17TypedTextDatabase8getFontsEv>
 800291c:	6800      	ldr	r0, [r0, #0]
 800291e:	e7f6      	b.n	800290e <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002920:	f007 fbe0 	bl	800a0e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002924:	68c0      	ldr	r0, [r0, #12]
 8002926:	e7f2      	b.n	800290e <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002928:	f007 fbdc 	bl	800a0e4 <_ZN17TypedTextDatabase8getFontsEv>
 800292c:	6900      	ldr	r0, [r0, #16]
 800292e:	e7ee      	b.n	800290e <_ZN23ApplicationFontProvider7getFontEt+0x18>
    switch (typography)
 8002930:	2000      	movs	r0, #0
 8002932:	e7ec      	b.n	800290e <_ZN23ApplicationFontProvider7getFontEt+0x18>

08002934 <_ZN23ApplicationFontProviderD0Ev>:
 8002934:	b510      	push	{r4, lr}
 8002936:	2104      	movs	r1, #4
 8002938:	4604      	mov	r4, r0
 800293a:	f02a fc5c 	bl	802d1f6 <_ZdlPvj>
 800293e:	4620      	mov	r0, r4
 8002940:	bd10      	pop	{r4, pc}

08002942 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002942:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002944:	4770      	bx	lr

08002946 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002946:	4770      	bx	lr

08002948 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002948:	4770      	bx	lr

0800294a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800294a:	4770      	bx	lr

0800294c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800294c:	4770      	bx	lr

0800294e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800294e:	4770      	bx	lr

08002950 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002950:	4770      	bx	lr

08002952 <_ZN8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002952:	4770      	bx	lr

08002954 <_ZN20BackUpScreenViewBaseD1Ev>:
}

BackUpScreenViewBase::~BackUpScreenViewBase()
{

}
 8002954:	4770      	bx	lr

08002956 <_ZN20BackUpScreenViewBase11setupScreenEv>:

void BackUpScreenViewBase::setupScreen()
{

}
 8002956:	4770      	bx	lr

08002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed() const
    {
        return pressed;
 8002958:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800295c:	b14b      	cbz	r3, 8002972 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 800295e:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 8002962:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002964:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002966:	b13b      	cbz	r3, 8002978 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002968:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 800296c:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 800296e:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 8002970:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002972:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 8002976:	e7f4      	b.n	8002962 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002978:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 800297c:	e7f6      	b.n	800296c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

0800297e <_ZN8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800297e:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002980:	68c2      	ldr	r2, [r0, #12]
 8002982:	6844      	ldr	r4, [r0, #4]
 8002984:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002986:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002988:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800298c:	07d2      	lsls	r2, r2, #31
 800298e:	bf48      	it	mi
 8002990:	5962      	ldrmi	r2, [r4, r5]
 8002992:	689b      	ldr	r3, [r3, #8]
    }
 8002994:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002996:	bf48      	it	mi
 8002998:	58d3      	ldrmi	r3, [r2, r3]
 800299a:	4718      	bx	r3

0800299c <_ZNK8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 800299c:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800299e:	6840      	ldr	r0, [r0, #4]
 80029a0:	b130      	cbz	r0, 80029b0 <_ZNK8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80029a2:	689a      	ldr	r2, [r3, #8]
 80029a4:	b91a      	cbnz	r2, 80029ae <_ZNK8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80029a6:	68d8      	ldr	r0, [r3, #12]
 80029a8:	f000 0001 	and.w	r0, r0, #1
 80029ac:	4770      	bx	lr
 80029ae:	2001      	movs	r0, #1
    }
 80029b0:	4770      	bx	lr

080029b2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80029b2:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 80029b6:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80029ba:	4770      	bx	lr

080029bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 80029bc:	b510      	push	{r4, lr}
 80029be:	2178      	movs	r1, #120	@ 0x78
 80029c0:	4604      	mov	r4, r0
 80029c2:	f02a fc18 	bl	802d1f6 <_ZdlPvj>
 80029c6:	4620      	mov	r0, r4
 80029c8:	bd10      	pop	{r4, pc}

080029ca <_ZN8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029ca:	b510      	push	{r4, lr}
 80029cc:	2110      	movs	r1, #16
 80029ce:	4604      	mov	r4, r0
 80029d0:	f02a fc11 	bl	802d1f6 <_ZdlPvj>
 80029d4:	4620      	mov	r0, r4
 80029d6:	bd10      	pop	{r4, pc}

080029d8 <_ZN20BackUpScreenViewBaseD0Ev>:
BackUpScreenViewBase::~BackUpScreenViewBase()
 80029d8:	b510      	push	{r4, lr}
}
 80029da:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
BackUpScreenViewBase::~BackUpScreenViewBase()
 80029de:	4604      	mov	r4, r0
}
 80029e0:	f02a fc09 	bl	802d1f6 <_ZdlPvj>
 80029e4:	4620      	mov	r0, r4
 80029e6:	bd10      	pop	{r4, pc}

080029e8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80029e8:	b510      	push	{r4, lr}
 80029ea:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80029ec:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80029ee:	b150      	cbz	r0, 8002a06 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80029f0:	6803      	ldr	r3, [r0, #0]
 80029f2:	68db      	ldr	r3, [r3, #12]
 80029f4:	4798      	blx	r3
 80029f6:	b130      	cbz	r0, 8002a06 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80029f8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80029fa:	6803      	ldr	r3, [r0, #0]
 80029fc:	4621      	mov	r1, r4
 80029fe:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002a00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002a04:	4718      	bx	r3
    }
 8002a06:	bd10      	pop	{r4, pc}

08002a08 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002a08:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002a0a:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002a0c:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 8002a10:	4604      	mov	r4, r0
 8002a12:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002a14:	b90b      	cbnz	r3, 8002a1a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 8002a16:	b116      	cbz	r6, 8002a1e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 8002a18:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002a1a:	2e00      	cmp	r6, #0
 8002a1c:	d0fc      	beq.n	8002a18 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002a1e:	fab3 f383 	clz	r3, r3
 8002a22:	095b      	lsrs	r3, r3, #5
 8002a24:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 8002a28:	6823      	ldr	r3, [r4, #0]
 8002a2a:	4620      	mov	r0, r4
 8002a2c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8002a30:	4798      	blx	r3
            invalidate();
 8002a32:	6823      	ldr	r3, [r4, #0]
 8002a34:	4620      	mov	r0, r4
 8002a36:	695b      	ldr	r3, [r3, #20]
 8002a38:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002a3a:	2e00      	cmp	r6, #0
 8002a3c:	d0ec      	beq.n	8002a18 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 8002a3e:	792b      	ldrb	r3, [r5, #4]
 8002a40:	2b01      	cmp	r3, #1
 8002a42:	d1e9      	bne.n	8002a18 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002a44:	6823      	ldr	r3, [r4, #0]
 8002a46:	4620      	mov	r0, r4
 8002a48:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 8002a4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002a50:	4718      	bx	r3

08002a52 <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void BackUpScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8002a52:	b538      	push	{r3, r4, r5, lr}
    if (&src == &SELECT)
 8002a54:	f500 730e 	add.w	r3, r0, #568	@ 0x238
 8002a58:	4299      	cmp	r1, r3
{
 8002a5a:	4604      	mov	r4, r0
 8002a5c:	460d      	mov	r5, r1
    if (&src == &SELECT)
 8002a5e:	d103      	bne.n	8002a68 <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~BackUpScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002a60:	f018 f938 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Select
        //When SELECT clicked change screen to Character_2
        //Go to Character_2 with no screen transition
        application().gotoCharacter_2ScreenNoTransition();
 8002a64:	f001 f91e 	bl	8003ca4 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>
    }
    if (&src == &PLAY)
 8002a68:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 8002a6c:	429d      	cmp	r5, r3
 8002a6e:	d103      	bne.n	8002a78 <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 8002a70:	f018 f930 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //PLAY
        //When PLAY clicked change screen to Character_2
        //Go to Character_2 with no screen transition
        application().gotoCharacter_2ScreenNoTransition();
 8002a74:	f001 f916 	bl	8003ca4 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>
    }
    if (&src == &REWARD)
 8002a78:	f504 74a4 	add.w	r4, r4, #328	@ 0x148
 8002a7c:	42a5      	cmp	r5, r4
 8002a7e:	d105      	bne.n	8002a8c <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
 8002a80:	f018 f928 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //REWARD
        //When REWARD clicked change screen to RewardScreen
        //Go to RewardScreen with no screen transition
        application().gotoRewardScreenScreenNoTransition();
    }
}
 8002a84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoRewardScreenScreenNoTransition();
 8002a88:	f001 b91c 	b.w	8003cc4 <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv>
}
 8002a8c:	bd38      	pop	{r3, r4, r5, pc}

08002a8e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002a8e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002a90:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002a92:	4604      	mov	r4, r0
        setX(x);
 8002a94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002a96:	4615      	mov	r5, r2
        setX(x);
 8002a98:	4798      	blx	r3
        setY(y);
 8002a9a:	6823      	ldr	r3, [r4, #0]
 8002a9c:	4629      	mov	r1, r5
 8002a9e:	4620      	mov	r0, r4
 8002aa0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002aa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002aa6:	4718      	bx	r3

08002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002aa8:	b570      	push	{r4, r5, r6, lr}
 8002aaa:	4604      	mov	r4, r0
 8002aac:	461d      	mov	r5, r3
 8002aae:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002ab2:	f7ff ffec 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ab6:	6823      	ldr	r3, [r4, #0]
 8002ab8:	4629      	mov	r1, r5
 8002aba:	4620      	mov	r0, r4
 8002abc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002abe:	4798      	blx	r3
        setHeight(height);
 8002ac0:	6823      	ldr	r3, [r4, #0]
 8002ac2:	4631      	mov	r1, r6
 8002ac4:	4620      	mov	r0, r4
 8002ac6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002acc:	4718      	bx	r3
	...

08002ad0 <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 8002ad0:	4a09      	ldr	r2, [pc, #36]	@ (8002af8 <_ZN8touchgfx3BoxC1Ev+0x28>)
 8002ad2:	6002      	str	r2, [r0, #0]
          touchable(false),
 8002ad4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002ad8:	2200      	movs	r2, #0
 8002ada:	8481      	strh	r1, [r0, #36]	@ 0x24
 8002adc:	21ff      	movs	r1, #255	@ 0xff
 8002ade:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002ae2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002ae6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002aea:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002aee:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 8002af2:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8002af4:	4770      	bx	lr
 8002af6:	bf00      	nop
 8002af8:	08032374 	.word	0x08032374

08002afc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>:
        handleAlphaUpdated();
 8002afc:	6803      	ldr	r3, [r0, #0]
        alpha = newAlpha;
 8002afe:	f880 102d 	strb.w	r1, [r0, #45]	@ 0x2d
        handleAlphaUpdated();
 8002b02:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002b06:	4718      	bx	r3

08002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002b08:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
    BoxWithBorderButtonStyle()
 8002b0c:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 8002b0e:	4606      	mov	r6, r0
 8002b10:	8583      	strh	r3, [r0, #44]	@ 0x2c
        touchable = touch;
 8002b12:	f240 1301 	movw	r3, #257	@ 0x101
          firstChild(0)
 8002b16:	2500      	movs	r5, #0
 8002b18:	8483      	strh	r3, [r0, #36]	@ 0x24
 8002b1a:	4b12      	ldr	r3, [pc, #72]	@ (8002b64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 8002b1c:	6285      	str	r5, [r0, #40]	@ 0x28
        : x(0), y(0), width(0), height(0)
 8002b1e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002b22:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8002b26:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8002b2a:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002b2e:	6305      	str	r5, [r0, #48]	@ 0x30
 8002b30:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 8002b34:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002b36:	4630      	mov	r0, r6
 8002b38:	f7ff ffca 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8002b3c:	4b0a      	ldr	r3, [pc, #40]	@ (8002b68 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 8002b3e:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 8002b40:	462a      	mov	r2, r5
 8002b42:	4629      	mov	r1, r5
 8002b44:	4630      	mov	r0, r6
        : color(0)
 8002b46:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 8002b4a:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 8002b4e:	6625      	str	r5, [r4, #96]	@ 0x60
 8002b50:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 8002b54:	f7ff ff9b 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002b58:	4620      	mov	r0, r4
 8002b5a:	4631      	mov	r1, r6
 8002b5c:	f011 ff36 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002b60:	4620      	mov	r0, r4
 8002b62:	bd70      	pop	{r4, r5, r6, pc}
 8002b64:	080309ec 	.word	0x080309ec
 8002b68:	080323dc 	.word	0x080323dc

08002b6c <_ZN20BackUpScreenViewBaseC1Ev>:
BackUpScreenViewBase::BackUpScreenViewBase() :
 8002b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b70:	4604      	mov	r4, r0
 8002b72:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &BackUpScreenViewBase::flexButtonCallbackHandler)
 8002b74:	46a2      	mov	sl, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002b76:	2500      	movs	r5, #0
 8002b78:	f01a f8d2 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8002b7c:	4ba9      	ldr	r3, [pc, #676]	@ (8002e24 <_ZN20BackUpScreenViewBaseC1Ev+0x2b8>)
 8002b7e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002b80:	f84a 3b40 	str.w	r3, [sl], #64
 8002b84:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8002b88:	4650      	mov	r0, sl
 8002b8a:	f7ff ffa1 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8002b8e:	f104 0898 	add.w	r8, r4, #152	@ 0x98
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002b92:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 8002b96:	a907      	add	r1, sp, #28
 8002b98:	4648      	mov	r0, r9
 8002b9a:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8002b9e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002ba2:	f014 fded 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002ba6:	a907      	add	r1, sp, #28
 8002ba8:	4640      	mov	r0, r8
 8002baa:	f104 06f0 	add.w	r6, r4, #240	@ 0xf0
 8002bae:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002bb2:	f014 fde5 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002bb6:	a907      	add	r1, sp, #28
 8002bb8:	4638      	mov	r0, r7
 8002bba:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002bbe:	f014 fddf 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002bc2:	a907      	add	r1, sp, #28
 8002bc4:	4630      	mov	r0, r6
 8002bc6:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002bca:	f014 fdd9 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002bce:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8002bd2:	a907      	add	r1, sp, #28
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	9302      	str	r3, [sp, #8]
 8002bd8:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002bdc:	f014 fdd0 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002be0:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8002be4:	4618      	mov	r0, r3
 8002be6:	9303      	str	r3, [sp, #12]
 8002be8:	f7ff ff8e 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bec:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 8002bf0:	4618      	mov	r0, r3
 8002bf2:	9304      	str	r3, [sp, #16]
 8002bf4:	f7ff ff88 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bf8:	f504 730e 	add.w	r3, r4, #568	@ 0x238
 8002bfc:	4618      	mov	r0, r3
 8002bfe:	9305      	str	r3, [sp, #20]
 8002c00:	f7ff ff82 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002c04:	4b88      	ldr	r3, [pc, #544]	@ (8002e28 <_ZN20BackUpScreenViewBaseC1Ev+0x2bc>)
 8002c06:	e9c4 34ac 	strd	r3, r4, [r4, #688]	@ 0x2b0
 8002c0a:	4b88      	ldr	r3, [pc, #544]	@ (8002e2c <_ZN20BackUpScreenViewBaseC1Ev+0x2c0>)
 8002c0c:	e9c4 35ae 	strd	r3, r5, [r4, #696]	@ 0x2b8
    __background.setPosition(0, 0, 240, 320);
 8002c10:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002c14:	462a      	mov	r2, r5
 8002c16:	9300      	str	r3, [sp, #0]
 8002c18:	4629      	mov	r1, r5
 8002c1a:	4650      	mov	r0, sl
 8002c1c:	23f0      	movs	r3, #240	@ 0xf0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002c1e:	f104 0b04 	add.w	fp, r4, #4
 8002c22:	f7ff ff41 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002c26:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002c2a:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002c2c:	4651      	mov	r1, sl
 8002c2e:	4658      	mov	r0, fp
 8002c30:	f011 fecc 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c34:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 8002c36:	a907      	add	r1, sp, #28
 8002c38:	4648      	mov	r0, r9
 8002c3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002c3e:	f015 fc3b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8002c42:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002c46:	462a      	mov	r2, r5
 8002c48:	9300      	str	r3, [sp, #0]
 8002c4a:	4629      	mov	r1, r5
 8002c4c:	23f0      	movs	r3, #240	@ 0xf0
 8002c4e:	4648      	mov	r0, r9
 8002c50:	f7ff ff2a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002c54:	4629      	mov	r1, r5
 8002c56:	4648      	mov	r0, r9
 8002c58:	f014 fd4d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002c5c:	4649      	mov	r1, r9
 8002c5e:	4658      	mov	r0, fp
 8002c60:	f011 feb4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c64:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 8002c66:	a907      	add	r1, sp, #28
 8002c68:	4640      	mov	r0, r8
 8002c6a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002c6e:	f015 fc23 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 8002c72:	2370      	movs	r3, #112	@ 0x70
 8002c74:	220e      	movs	r2, #14
 8002c76:	9300      	str	r3, [sp, #0]
 8002c78:	4640      	mov	r0, r8
 8002c7a:	239e      	movs	r3, #158	@ 0x9e
 8002c7c:	2129      	movs	r1, #41	@ 0x29
 8002c7e:	f7ff ff13 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002c82:	4629      	mov	r1, r5
 8002c84:	4640      	mov	r0, r8
 8002c86:	f014 fd36 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002c8a:	4641      	mov	r1, r8
 8002c8c:	4658      	mov	r0, fp
 8002c8e:	f011 fe9d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c92:	234a      	movs	r3, #74	@ 0x4a
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA2_ID));
 8002c94:	a907      	add	r1, sp, #28
 8002c96:	4638      	mov	r0, r7
 8002c98:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002c9c:	f015 fc0c 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(64, 146, 110, 73);
 8002ca0:	2349      	movs	r3, #73	@ 0x49
 8002ca2:	2292      	movs	r2, #146	@ 0x92
 8002ca4:	9300      	str	r3, [sp, #0]
 8002ca6:	4638      	mov	r0, r7
 8002ca8:	236e      	movs	r3, #110	@ 0x6e
 8002caa:	2140      	movs	r1, #64	@ 0x40
 8002cac:	f7ff fefc 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002cb0:	4629      	mov	r1, r5
 8002cb2:	4638      	mov	r0, r7
 8002cb4:	f014 fd1f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002cb8:	4639      	mov	r1, r7
 8002cba:	4658      	mov	r0, fp
 8002cbc:	f011 fe86 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002cc0:	233c      	movs	r3, #60	@ 0x3c
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8002cc2:	a907      	add	r1, sp, #28
 8002cc4:	4630      	mov	r0, r6
 8002cc6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002cca:	f015 fbf5 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 8002cce:	2341      	movs	r3, #65	@ 0x41
 8002cd0:	22db      	movs	r2, #219	@ 0xdb
 8002cd2:	9300      	str	r3, [sp, #0]
 8002cd4:	4630      	mov	r0, r6
 8002cd6:	237c      	movs	r3, #124	@ 0x7c
 8002cd8:	2139      	movs	r1, #57	@ 0x39
 8002cda:	f7ff fee5 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002cde:	4629      	mov	r1, r5
 8002ce0:	4630      	mov	r0, r6
 8002ce2:	f014 fd08 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002ce6:	4631      	mov	r1, r6
 8002ce8:	4658      	mov	r0, fp
 8002cea:	f011 fe6f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 8002cee:	9802      	ldr	r0, [sp, #8]
        down = colorPressed;
 8002cf0:	4f4f      	ldr	r7, [pc, #316]	@ (8002e30 <_ZN20BackUpScreenViewBaseC1Ev+0x2c4>)
 8002cf2:	f8df a148 	ldr.w	sl, [pc, #328]	@ 8002e3c <_ZN20BackUpScreenViewBaseC1Ev+0x2d0>
 8002cf6:	2357      	movs	r3, #87	@ 0x57
 8002cf8:	a907      	add	r1, sp, #28
 8002cfa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002cfe:	f015 fbdb 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 8002d02:	2324      	movs	r3, #36	@ 0x24
 8002d04:	f44f 728c 	mov.w	r2, #280	@ 0x118
 8002d08:	9802      	ldr	r0, [sp, #8]
 8002d0a:	9300      	str	r3, [sp, #0]
 8002d0c:	21b8      	movs	r1, #184	@ 0xb8
 8002d0e:	2337      	movs	r3, #55	@ 0x37
 8002d10:	f7ff feca 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002d14:	9802      	ldr	r0, [sp, #8]
 8002d16:	4629      	mov	r1, r5
 8002d18:	f014 fced 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 8002d1c:	f04f 092c 	mov.w	r9, #44	@ 0x2c
 8002d20:	9902      	ldr	r1, [sp, #8]
 8002d22:	4658      	mov	r0, fp
 8002d24:	f011 fe52 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d28:	4629      	mov	r1, r5
 8002d2a:	f8cd 9000 	str.w	r9, [sp]
 8002d2e:	462a      	mov	r2, r5
 8002d30:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 8002d34:	2337      	movs	r3, #55	@ 0x37
 8002d36:	f7ff feb7 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8002d3a:	4b3e      	ldr	r3, [pc, #248]	@ (8002e34 <_ZN20BackUpScreenViewBaseC1Ev+0x2c8>)
 8002d3c:	4a3e      	ldr	r2, [pc, #248]	@ (8002e38 <_ZN20BackUpScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 8002d3e:	9803      	ldr	r0, [sp, #12]
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002d40:	f04f 0805 	mov.w	r8, #5
        borderDown = borderColorPressed;
 8002d44:	e9c4 326e 	strd	r3, r2, [r4, #440]	@ 0x1b8
        down = colorPressed;
 8002d48:	e9c4 7a6c 	strd	r7, sl, [r4, #432]	@ 0x1b0
 8002d4c:	f8a4 81ac 	strh.w	r8, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 8002d50:	f7ff fe02 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    REWARD.setAction(flexButtonCallback);
 8002d54:	f504 762c 	add.w	r6, r4, #688	@ 0x2b0
    REWARD.setAlpha(6);
 8002d58:	9803      	ldr	r0, [sp, #12]
 8002d5a:	2106      	movs	r1, #6
 8002d5c:	f7ff fece 	bl	8002afc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    REWARD.setPosition(184, 276, 55, 44);
 8002d60:	9803      	ldr	r0, [sp, #12]
        action = &callback;
 8002d62:	f8c4 6178 	str.w	r6, [r4, #376]	@ 0x178
 8002d66:	2337      	movs	r3, #55	@ 0x37
 8002d68:	f8cd 9000 	str.w	r9, [sp]
 8002d6c:	f44f 728a 	mov.w	r2, #276	@ 0x114
 8002d70:	21b8      	movs	r1, #184	@ 0xb8
 8002d72:	f7ff fe99 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8002d76:	f04f 0936 	mov.w	r9, #54	@ 0x36
 8002d7a:	9903      	ldr	r1, [sp, #12]
 8002d7c:	4658      	mov	r0, fp
 8002d7e:	f011 fe25 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d82:	4629      	mov	r1, r5
 8002d84:	462a      	mov	r2, r5
 8002d86:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 8002d8a:	f8cd 9000 	str.w	r9, [sp]
 8002d8e:	2366      	movs	r3, #102	@ 0x66
 8002d90:	f7ff fe8a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8002d94:	4b27      	ldr	r3, [pc, #156]	@ (8002e34 <_ZN20BackUpScreenViewBaseC1Ev+0x2c8>)
 8002d96:	4a28      	ldr	r2, [pc, #160]	@ (8002e38 <_ZN20BackUpScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 8002d98:	9804      	ldr	r0, [sp, #16]
 8002d9a:	f8a4 8224 	strh.w	r8, [r4, #548]	@ 0x224
        borderDown = borderColorPressed;
 8002d9e:	e9c4 328c 	strd	r3, r2, [r4, #560]	@ 0x230
        down = colorPressed;
 8002da2:	e9c4 7a8a 	strd	r7, sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 8002da6:	f7ff fdd7 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    PLAY.setAlpha(6);
 8002daa:	9804      	ldr	r0, [sp, #16]
 8002dac:	2106      	movs	r1, #6
 8002dae:	f7ff fea5 	bl	8002afc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    PLAY.setPosition(69, 224, 102, 54);
 8002db2:	9804      	ldr	r0, [sp, #16]
 8002db4:	f8c4 61f0 	str.w	r6, [r4, #496]	@ 0x1f0
 8002db8:	2366      	movs	r3, #102	@ 0x66
 8002dba:	22e0      	movs	r2, #224	@ 0xe0
 8002dbc:	f8cd 9000 	str.w	r9, [sp]
 8002dc0:	2145      	movs	r1, #69	@ 0x45
 8002dc2:	f7ff fe71 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002dc6:	9904      	ldr	r1, [sp, #16]
 8002dc8:	4658      	mov	r0, fp
 8002dca:	f011 fdff 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8002dce:	4629      	mov	r1, r5
 8002dd0:	462a      	mov	r2, r5
 8002dd2:	f504 701b 	add.w	r0, r4, #620	@ 0x26c
 8002dd6:	f8cd 9000 	str.w	r9, [sp]
 8002dda:	2366      	movs	r3, #102	@ 0x66
 8002ddc:	f7ff fe64 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8002de0:	4b14      	ldr	r3, [pc, #80]	@ (8002e34 <_ZN20BackUpScreenViewBaseC1Ev+0x2c8>)
 8002de2:	4a15      	ldr	r2, [pc, #84]	@ (8002e38 <_ZN20BackUpScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 8002de4:	9805      	ldr	r0, [sp, #20]
 8002de6:	f8a4 829c 	strh.w	r8, [r4, #668]	@ 0x29c
        borderDown = borderColorPressed;
 8002dea:	e9c4 32aa 	strd	r3, r2, [r4, #680]	@ 0x2a8
        down = colorPressed;
 8002dee:	e9c4 7aa8 	strd	r7, sl, [r4, #672]	@ 0x2a0
        handlePressedUpdated();
 8002df2:	f7ff fdb1 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    SELECT.setAlpha(6);
 8002df6:	9805      	ldr	r0, [sp, #20]
 8002df8:	2106      	movs	r1, #6
 8002dfa:	f7ff fe7f 	bl	8002afc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    SELECT.setPosition(68, 160, 102, 54);
 8002dfe:	9805      	ldr	r0, [sp, #20]
 8002e00:	f8c4 6268 	str.w	r6, [r4, #616]	@ 0x268
 8002e04:	2366      	movs	r3, #102	@ 0x66
 8002e06:	22a0      	movs	r2, #160	@ 0xa0
 8002e08:	f8cd 9000 	str.w	r9, [sp]
 8002e0c:	2144      	movs	r1, #68	@ 0x44
 8002e0e:	f7ff fe4b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e12:	4658      	mov	r0, fp
 8002e14:	9905      	ldr	r1, [sp, #20]
 8002e16:	f011 fdd9 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002e1a:	4620      	mov	r0, r4
 8002e1c:	b009      	add	sp, #36	@ 0x24
 8002e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e22:	bf00      	nop
 8002e24:	08030aa0 	.word	0x08030aa0
 8002e28:	08030a88 	.word	0x08030a88
 8002e2c:	08002a53 	.word	0x08002a53
 8002e30:	ff006699 	.word	0xff006699
 8002e34:	ff003366 	.word	0xff003366
 8002e38:	ff336699 	.word	0xff336699
 8002e3c:	ff0099cc 	.word	0xff0099cc

08002e40 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002e40:	4800      	ldr	r0, [pc, #0]	@ (8002e44 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002e42:	4770      	bx	lr
 8002e44:	08030acc 	.word	0x08030acc

08002e48 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002e48:	205a      	movs	r0, #90	@ 0x5a
 8002e4a:	4770      	bx	lr

08002e4c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002e4c:	b513      	push	{r0, r1, r4, lr}
 8002e4e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002e50:	b151      	cbz	r1, 8002e68 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002e52:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002e54:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002e56:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002e5a:	aa01      	add	r2, sp, #4
 8002e5c:	689c      	ldr	r4, [r3, #8]
 8002e5e:	f10d 0303 	add.w	r3, sp, #3
 8002e62:	47a0      	blx	r4
        return glyph;
    }
 8002e64:	b002      	add	sp, #8
 8002e66:	bd10      	pop	{r4, pc}
            return 0;
 8002e68:	4608      	mov	r0, r1
 8002e6a:	e7fb      	b.n	8002e64 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002e6c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002e6c:	89c0      	ldrh	r0, [r0, #14]
 8002e6e:	4770      	bx	lr

08002e70 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002e70:	8a00      	ldrh	r0, [r0, #16]
 8002e72:	4770      	bx	lr

08002e74 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002e74:	88c0      	ldrh	r0, [r0, #6]
 8002e76:	4770      	bx	lr

08002e78 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002e78:	8880      	ldrh	r0, [r0, #4]
 8002e7a:	4770      	bx	lr

08002e7c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002e7c:	7a80      	ldrb	r0, [r0, #10]
    }
 8002e7e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002e82:	4770      	bx	lr

08002e84 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002e84:	7a80      	ldrb	r0, [r0, #10]
    }
 8002e86:	09c0      	lsrs	r0, r0, #7
 8002e88:	4770      	bx	lr

08002e8a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002e8a:	2000      	movs	r0, #0
 8002e8c:	4770      	bx	lr
	...

08002e90 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002e90:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002e98 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002e94:	4770      	bx	lr
 8002e96:	bf00      	nop
 8002e98:	00000000 	.word	0x00000000

08002e9c <_ZN8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e9c:	4770      	bx	lr

08002e9e <_ZN18Character1ViewBaseD1Ev>:
}

Character1ViewBase::~Character1ViewBase()
{

}
 8002e9e:	4770      	bx	lr

08002ea0 <_ZN18Character1ViewBase11setupScreenEv>:

void Character1ViewBase::setupScreen()
{

}
 8002ea0:	4770      	bx	lr

08002ea2 <_ZN8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002ea2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ea4:	68c2      	ldr	r2, [r0, #12]
 8002ea6:	6844      	ldr	r4, [r0, #4]
 8002ea8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002eaa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002eac:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002eb0:	07d2      	lsls	r2, r2, #31
 8002eb2:	bf48      	it	mi
 8002eb4:	5962      	ldrmi	r2, [r4, r5]
 8002eb6:	689b      	ldr	r3, [r3, #8]
    }
 8002eb8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002eba:	bf48      	it	mi
 8002ebc:	58d3      	ldrmi	r3, [r2, r3]
 8002ebe:	4718      	bx	r3

08002ec0 <_ZNK8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8002ec0:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002ec2:	6840      	ldr	r0, [r0, #4]
 8002ec4:	b130      	cbz	r0, 8002ed4 <_ZNK8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002ec6:	689a      	ldr	r2, [r3, #8]
 8002ec8:	b91a      	cbnz	r2, 8002ed2 <_ZNK8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8002eca:	68d8      	ldr	r0, [r3, #12]
 8002ecc:	f000 0001 	and.w	r0, r0, #1
 8002ed0:	4770      	bx	lr
 8002ed2:	2001      	movs	r0, #1
    }
 8002ed4:	4770      	bx	lr

08002ed6 <_ZN8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ed6:	b510      	push	{r4, lr}
 8002ed8:	2110      	movs	r1, #16
 8002eda:	4604      	mov	r4, r0
 8002edc:	f02a f98b 	bl	802d1f6 <_ZdlPvj>
 8002ee0:	4620      	mov	r0, r4
 8002ee2:	bd10      	pop	{r4, pc}

08002ee4 <_ZN18Character1ViewBaseD0Ev>:
Character1ViewBase::~Character1ViewBase()
 8002ee4:	b510      	push	{r4, lr}
}
 8002ee6:	f44f 7190 	mov.w	r1, #288	@ 0x120
Character1ViewBase::~Character1ViewBase()
 8002eea:	4604      	mov	r4, r0
}
 8002eec:	f02a f983 	bl	802d1f6 <_ZdlPvj>
 8002ef0:	4620      	mov	r0, r4
 8002ef2:	bd10      	pop	{r4, pc}

08002ef4 <_ZN18Character1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Character1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &GoHome)
 8002ef4:	3098      	adds	r0, #152	@ 0x98
 8002ef6:	4288      	cmp	r0, r1
{
 8002ef8:	b508      	push	{r3, lr}
    if (&src == &GoHome)
 8002efa:	d105      	bne.n	8002f08 <_ZN18Character1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~Character1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002efc:	f017 feea 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When GoHome clicked change screen to SakuraFinalScreen
        //Go to SakuraFinalScreen with no screen transition
        application().gotoSakuraFinalScreenScreenNoTransition();
    }
}
 8002f00:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraFinalScreenScreenNoTransition();
 8002f04:	f000 bf2e 	b.w	8003d64 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>
}
 8002f08:	bd08      	pop	{r3, pc}
	...

08002f0c <_ZN18Character1ViewBaseC1Ev>:
Character1ViewBase::Character1ViewBase() :
 8002f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f10:	4604      	mov	r4, r0
 8002f12:	b085      	sub	sp, #20
    flexButtonCallback(this, &Character1ViewBase::flexButtonCallbackHandler)
 8002f14:	46a0      	mov	r8, r4
 8002f16:	2500      	movs	r5, #0
 8002f18:	f019 ff02 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8002f1c:	4b57      	ldr	r3, [pc, #348]	@ (800307c <_ZN18Character1ViewBaseC1Ev+0x170>)
 8002f1e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002f20:	f848 3b40 	str.w	r3, [r8], #64
 8002f24:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8002f28:	4640      	mov	r0, r8
 8002f2a:	f7ff fdd1 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8002f2e:	a903      	add	r1, sp, #12
 8002f30:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002f34:	4638      	mov	r0, r7
 8002f36:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002f3a:	f014 fc21 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 8002f3e:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8002f42:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
        touchable = touch;
 8002f46:	f240 1301 	movw	r3, #257	@ 0x101
        : Box(), borderColor(0), borderSize(0)
 8002f4a:	f104 09cc 	add.w	r9, r4, #204	@ 0xcc
 8002f4e:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
        : T(), up(), down()
 8002f52:	4b4b      	ldr	r3, [pc, #300]	@ (8003080 <_ZN18Character1ViewBaseC1Ev+0x174>)
 8002f54:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
        : x(0), y(0), width(0), height(0)
 8002f58:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
 8002f5c:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
 8002f60:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
 8002f64:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
 8002f68:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
 8002f6c:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8002f70:	4648      	mov	r0, r9
 8002f72:	f7ff fdad 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8002f76:	4b43      	ldr	r3, [pc, #268]	@ (8003084 <_ZN18Character1ViewBaseC1Ev+0x178>)
 8002f78:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
 8002f7c:	f104 0698 	add.w	r6, r4, #152	@ 0x98
        borderBox.setXY(0, 0);
 8002f80:	462a      	mov	r2, r5
        : color(0)
 8002f82:	e9c4 5540 	strd	r5, r5, [r4, #256]	@ 0x100
 8002f86:	e9c4 5542 	strd	r5, r5, [r4, #264]	@ 0x108
        : color(col)
 8002f8a:	f8c4 50f8 	str.w	r5, [r4, #248]	@ 0xf8
 8002f8e:	f8a4 50fc 	strh.w	r5, [r4, #252]	@ 0xfc
 8002f92:	4629      	mov	r1, r5
 8002f94:	4648      	mov	r0, r9
 8002f96:	f7ff fd7a 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002f9a:	4649      	mov	r1, r9
 8002f9c:	4630      	mov	r0, r6
 8002f9e:	f011 fd15 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002fa2:	4b39      	ldr	r3, [pc, #228]	@ (8003088 <_ZN18Character1ViewBaseC1Ev+0x17c>)
 8002fa4:	e9c4 3444 	strd	r3, r4, [r4, #272]	@ 0x110
 8002fa8:	4b38      	ldr	r3, [pc, #224]	@ (800308c <_ZN18Character1ViewBaseC1Ev+0x180>)
    __background.setPosition(0, 0, 240, 320);
 8002faa:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
 8002fae:	e9c4 3546 	strd	r3, r5, [r4, #280]	@ 0x118
 8002fb2:	462a      	mov	r2, r5
 8002fb4:	4629      	mov	r1, r5
 8002fb6:	4640      	mov	r0, r8
 8002fb8:	f8cd b000 	str.w	fp, [sp]
 8002fbc:	23f0      	movs	r3, #240	@ 0xf0
 8002fbe:	f7ff fd73 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fc2:	f104 0a04 	add.w	sl, r4, #4
 8002fc6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002fca:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002fcc:	4641      	mov	r1, r8
 8002fce:	4650      	mov	r0, sl
 8002fd0:	f011 fcfc 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002fd4:	231d      	movs	r3, #29
    background.setBitmap(touchgfx::Bitmap(BITMAP_CELEBRATE_ID));
 8002fd6:	a903      	add	r1, sp, #12
 8002fd8:	4638      	mov	r0, r7
 8002fda:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002fde:	f015 fa6b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8002fe2:	462a      	mov	r2, r5
 8002fe4:	23f0      	movs	r3, #240	@ 0xf0
 8002fe6:	4629      	mov	r1, r5
 8002fe8:	4638      	mov	r0, r7
 8002fea:	f8cd b000 	str.w	fp, [sp]
 8002fee:	f7ff fd5b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002ff2:	4629      	mov	r1, r5
 8002ff4:	4638      	mov	r0, r7
 8002ff6:	f014 fb7e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002ffa:	4639      	mov	r1, r7
 8002ffc:	4650      	mov	r0, sl
        borderBox.setPosition(x, y, width, height);
 8002ffe:	274d      	movs	r7, #77	@ 0x4d
 8003000:	f011 fce4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003004:	462a      	mov	r2, r5
 8003006:	4629      	mov	r1, r5
 8003008:	4648      	mov	r0, r9
 800300a:	9700      	str	r7, [sp, #0]
 800300c:	2370      	movs	r3, #112	@ 0x70
 800300e:	f7ff fd4b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8003012:	2305      	movs	r3, #5
 8003014:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
        up = colorReleased;
 8003018:	4b1d      	ldr	r3, [pc, #116]	@ (8003090 <_ZN18Character1ViewBaseC1Ev+0x184>)
 800301a:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
        down = colorPressed;
 800301e:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8003022:	3333      	adds	r3, #51	@ 0x33
 8003024:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        borderUp = borderColorReleased;
 8003028:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 800302c:	3b66      	subs	r3, #102	@ 0x66
 800302e:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
        borderDown = borderColorPressed;
 8003032:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8003036:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 800303a:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
        handlePressedUpdated();
 800303e:	4630      	mov	r0, r6
 8003040:	f8d4 5098 	ldr.w	r5, [r4, #152]	@ 0x98
 8003044:	f7ff fc88 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8003048:	2306      	movs	r3, #6
 800304a:	f884 30c5 	strb.w	r3, [r4, #197]	@ 0xc5
        handleAlphaUpdated();
 800304e:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8003052:	4630      	mov	r0, r6
 8003054:	4798      	blx	r3
    GoHome.setAction(flexButtonCallback);
 8003056:	f504 7388 	add.w	r3, r4, #272	@ 0x110
        action = &callback;
 800305a:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    GoHome.setPosition(61, 23, 112, 77);
 800305e:	2217      	movs	r2, #23
 8003060:	2370      	movs	r3, #112	@ 0x70
 8003062:	4630      	mov	r0, r6
 8003064:	9700      	str	r7, [sp, #0]
 8003066:	213d      	movs	r1, #61	@ 0x3d
 8003068:	f7ff fd1e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800306c:	4650      	mov	r0, sl
 800306e:	4631      	mov	r1, r6
 8003070:	f011 fcac 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003074:	4620      	mov	r0, r4
 8003076:	b005      	add	sp, #20
 8003078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800307c:	080311f4 	.word	0x080311f4
 8003080:	080309ec 	.word	0x080309ec
 8003084:	080323dc 	.word	0x080323dc
 8003088:	080311dc 	.word	0x080311dc
 800308c:	08002ef5 	.word	0x08002ef5
 8003090:	ff006699 	.word	0xff006699

08003094 <_ZN8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003094:	4770      	bx	lr

08003096 <_ZN17CharacterViewBaseD1Ev>:
}

CharacterViewBase::~CharacterViewBase()
{

}
 8003096:	4770      	bx	lr

08003098 <_ZN17CharacterViewBase11setupScreenEv>:

void CharacterViewBase::setupScreen()
{

}
 8003098:	4770      	bx	lr

0800309a <_ZN8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800309a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800309c:	68c2      	ldr	r2, [r0, #12]
 800309e:	6844      	ldr	r4, [r0, #4]
 80030a0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80030a2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80030a4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80030a8:	07d2      	lsls	r2, r2, #31
 80030aa:	bf48      	it	mi
 80030ac:	5962      	ldrmi	r2, [r4, r5]
 80030ae:	689b      	ldr	r3, [r3, #8]
    }
 80030b0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80030b2:	bf48      	it	mi
 80030b4:	58d3      	ldrmi	r3, [r2, r3]
 80030b6:	4718      	bx	r3

080030b8 <_ZNK8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80030b8:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80030ba:	6840      	ldr	r0, [r0, #4]
 80030bc:	b130      	cbz	r0, 80030cc <_ZNK8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80030be:	689a      	ldr	r2, [r3, #8]
 80030c0:	b91a      	cbnz	r2, 80030ca <_ZNK8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80030c2:	68d8      	ldr	r0, [r3, #12]
 80030c4:	f000 0001 	and.w	r0, r0, #1
 80030c8:	4770      	bx	lr
 80030ca:	2001      	movs	r0, #1
    }
 80030cc:	4770      	bx	lr

080030ce <_ZN8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80030ce:	b510      	push	{r4, lr}
 80030d0:	2110      	movs	r1, #16
 80030d2:	4604      	mov	r4, r0
 80030d4:	f02a f88f 	bl	802d1f6 <_ZdlPvj>
 80030d8:	4620      	mov	r0, r4
 80030da:	bd10      	pop	{r4, pc}

080030dc <_ZN17CharacterViewBaseD0Ev>:
CharacterViewBase::~CharacterViewBase()
 80030dc:	b510      	push	{r4, lr}
}
 80030de:	f44f 7115 	mov.w	r1, #596	@ 0x254
CharacterViewBase::~CharacterViewBase()
 80030e2:	4604      	mov	r4, r0
}
 80030e4:	f02a f887 	bl	802d1f6 <_ZdlPvj>
 80030e8:	4620      	mov	r0, r4
 80030ea:	bd10      	pop	{r4, pc}

080030ec <_ZN17CharacterViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CharacterViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &MAINMENU_BUT)
 80030ec:	f500 70e6 	add.w	r0, r0, #460	@ 0x1cc
 80030f0:	4288      	cmp	r0, r1
{
 80030f2:	b508      	push	{r3, lr}
    if (&src == &MAINMENU_BUT)
 80030f4:	d105      	bne.n	8003102 <_ZN17CharacterViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~CharacterViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80030f6:	f017 fded 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When MAINMENU_BUT clicked change screen to MainMenuScreen
        //Go to MainMenuScreen with no screen transition
        application().gotoMainMenuScreenScreenNoTransition();
    }
}
 80030fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainMenuScreenScreenNoTransition();
 80030fe:	f000 bd91 	b.w	8003c24 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>
}
 8003102:	bd08      	pop	{r3, pc}

08003104 <_ZN17CharacterViewBaseC1Ev>:
CharacterViewBase::CharacterViewBase() :
 8003104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003108:	4604      	mov	r4, r0
 800310a:	b08b      	sub	sp, #44	@ 0x2c
    flexButtonCallback(this, &CharacterViewBase::flexButtonCallbackHandler)
 800310c:	46a2      	mov	sl, r4
 800310e:	2500      	movs	r5, #0
 8003110:	f019 fe06 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8003114:	4bc4      	ldr	r3, [pc, #784]	@ (8003428 <_ZN17CharacterViewBaseC1Ev+0x324>)
 8003116:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003118:	f84a 3b40 	str.w	r3, [sl], #64
 800311c:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8003120:	4650      	mov	r0, sl
 8003122:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003126:	f7ff fcd3 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 800312a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800312e:	a909      	add	r1, sp, #36	@ 0x24
 8003130:	4648      	mov	r0, r9
 8003132:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8003136:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800313a:	f014 fb21 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800313e:	a909      	add	r1, sp, #36	@ 0x24
 8003140:	4640      	mov	r0, r8
 8003142:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003146:	f014 fb1b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800314a:	a909      	add	r1, sp, #36	@ 0x24
 800314c:	4638      	mov	r0, r7
 800314e:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003152:	f014 fb15 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003156:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800315a:	a909      	add	r1, sp, #36	@ 0x24
 800315c:	4618      	mov	r0, r3
 800315e:	9302      	str	r3, [sp, #8]
 8003160:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003164:	f014 fb0c 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003168:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 800316c:	a909      	add	r1, sp, #36	@ 0x24
 800316e:	4618      	mov	r0, r3
 8003170:	9303      	str	r3, [sp, #12]
 8003172:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003176:	f014 fb03 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800317a:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 800317e:	a909      	add	r1, sp, #36	@ 0x24
 8003180:	4618      	mov	r0, r3
 8003182:	9304      	str	r3, [sp, #16]
 8003184:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003188:	f014 fafa 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800318c:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8003190:	a909      	add	r1, sp, #36	@ 0x24
 8003192:	4618      	mov	r0, r3
 8003194:	9305      	str	r3, [sp, #20]
 8003196:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800319a:	f014 faf1 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800319e:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80031a2:	a909      	add	r1, sp, #36	@ 0x24
 80031a4:	4618      	mov	r0, r3
 80031a6:	9306      	str	r3, [sp, #24]
 80031a8:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80031ac:	f014 fae8 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 80031b0:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 80031b4:	f8a4 31f8 	strh.w	r3, [r4, #504]	@ 0x1f8
        touchable = touch;
 80031b8:	f240 1301 	movw	r3, #257	@ 0x101
 80031bc:	f8a4 31f0 	strh.w	r3, [r4, #496]	@ 0x1f0
        : T(), up(), down()
 80031c0:	4b9a      	ldr	r3, [pc, #616]	@ (800342c <_ZN17CharacterViewBaseC1Ev+0x328>)
 80031c2:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
        : Box(), borderColor(0), borderSize(0)
 80031c6:	f504 7300 	add.w	r3, r4, #512	@ 0x200
        : x(0), y(0), width(0), height(0)
 80031ca:	e9c4 5574 	strd	r5, r5, [r4, #464]	@ 0x1d0
 80031ce:	e9c4 5576 	strd	r5, r5, [r4, #472]	@ 0x1d8
          nextSibling(0),
 80031d2:	e9c4 5578 	strd	r5, r5, [r4, #480]	@ 0x1e0
          cachedAbsX(0),
 80031d6:	e9c4 557a 	strd	r5, r5, [r4, #488]	@ 0x1e8
 80031da:	f8c4 51f4 	str.w	r5, [r4, #500]	@ 0x1f4
 80031de:	f8c4 51fc 	str.w	r5, [r4, #508]	@ 0x1fc
 80031e2:	4618      	mov	r0, r3
 80031e4:	9307      	str	r3, [sp, #28]
 80031e6:	f7ff fc73 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 80031ea:	4b91      	ldr	r3, [pc, #580]	@ (8003430 <_ZN17CharacterViewBaseC1Ev+0x32c>)
 80031ec:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
 80031f0:	f504 7be6 	add.w	fp, r4, #460	@ 0x1cc
        borderBox.setXY(0, 0);
 80031f4:	462a      	mov	r2, r5
        : color(0)
 80031f6:	e9c4 558d 	strd	r5, r5, [r4, #564]	@ 0x234
 80031fa:	e9c4 558f 	strd	r5, r5, [r4, #572]	@ 0x23c
 80031fe:	9807      	ldr	r0, [sp, #28]
        : color(col)
 8003200:	f8c4 522c 	str.w	r5, [r4, #556]	@ 0x22c
 8003204:	f8a4 5230 	strh.w	r5, [r4, #560]	@ 0x230
 8003208:	4629      	mov	r1, r5
 800320a:	f7ff fc40 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800320e:	9907      	ldr	r1, [sp, #28]
 8003210:	4658      	mov	r0, fp
 8003212:	f011 fbdb 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003216:	4b87      	ldr	r3, [pc, #540]	@ (8003434 <_ZN17CharacterViewBaseC1Ev+0x330>)
 8003218:	e9c4 3491 	strd	r3, r4, [r4, #580]	@ 0x244
 800321c:	4b86      	ldr	r3, [pc, #536]	@ (8003438 <_ZN17CharacterViewBaseC1Ev+0x334>)
 800321e:	e9c4 3593 	strd	r3, r5, [r4, #588]	@ 0x24c
    __background.setPosition(0, 0, 240, 320);
 8003222:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003226:	462a      	mov	r2, r5
 8003228:	9300      	str	r3, [sp, #0]
 800322a:	4629      	mov	r1, r5
 800322c:	4650      	mov	r0, sl
 800322e:	23f0      	movs	r3, #240	@ 0xf0
 8003230:	1d26      	adds	r6, r4, #4
 8003232:	f7ff fc39 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003236:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800323a:	66a3      	str	r3, [r4, #104]	@ 0x68
 800323c:	4651      	mov	r1, sl
 800323e:	4630      	mov	r0, r6
 8003240:	f011 fbc4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003244:	233b      	movs	r3, #59	@ 0x3b
    background.setBitmap(touchgfx::Bitmap(BITMAP_PICK_ID));
 8003246:	a909      	add	r1, sp, #36	@ 0x24
 8003248:	4648      	mov	r0, r9
 800324a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800324e:	f015 f933 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8003252:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003256:	462a      	mov	r2, r5
 8003258:	9300      	str	r3, [sp, #0]
 800325a:	4629      	mov	r1, r5
 800325c:	23f0      	movs	r3, #240	@ 0xf0
 800325e:	4648      	mov	r0, r9
 8003260:	f7ff fc22 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003264:	4629      	mov	r1, r5
 8003266:	4648      	mov	r0, r9
 8003268:	f014 fa45 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800326c:	4649      	mov	r1, r9
 800326e:	4630      	mov	r0, r6
 8003270:	f011 fbac 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(62, 76, 110, 160);
 8003274:	f04f 09a0 	mov.w	r9, #160	@ 0xa0
 8003278:	2333      	movs	r3, #51	@ 0x33
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 800327a:	a909      	add	r1, sp, #36	@ 0x24
 800327c:	4640      	mov	r0, r8
 800327e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003282:	f015 f919 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(62, 76, 110, 160);
 8003286:	224c      	movs	r2, #76	@ 0x4c
 8003288:	236e      	movs	r3, #110	@ 0x6e
 800328a:	4640      	mov	r0, r8
 800328c:	f8cd 9000 	str.w	r9, [sp]
 8003290:	213e      	movs	r1, #62	@ 0x3e
 8003292:	f7ff fc09 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003296:	4629      	mov	r1, r5
 8003298:	4640      	mov	r0, r8
 800329a:	f014 fa2c 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800329e:	4641      	mov	r1, r8
 80032a0:	4630      	mov	r0, r6
 80032a2:	f011 fb93 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032a6:	234e      	movs	r3, #78	@ 0x4e
    sponge.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 80032a8:	a909      	add	r1, sp, #36	@ 0x24
 80032aa:	4638      	mov	r0, r7
 80032ac:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80032b0:	f015 f902 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge.setPosition(57, 65, 132, 185);
 80032b4:	23b9      	movs	r3, #185	@ 0xb9
 80032b6:	2241      	movs	r2, #65	@ 0x41
 80032b8:	9300      	str	r3, [sp, #0]
 80032ba:	4638      	mov	r0, r7
 80032bc:	2384      	movs	r3, #132	@ 0x84
 80032be:	2139      	movs	r1, #57	@ 0x39
 80032c0:	f7ff fbf2 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80032c4:	4629      	mov	r1, r5
 80032c6:	4638      	mov	r0, r7
 80032c8:	f014 fa15 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        visible = vis;
 80032cc:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 80032d0:	4639      	mov	r1, r7
 80032d2:	4630      	mov	r0, r6
 80032d4:	f011 fb7a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura.setPosition(62, 67, 116, 178);
 80032d8:	27b2      	movs	r7, #178	@ 0xb2
    sakura.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 80032da:	9802      	ldr	r0, [sp, #8]
 80032dc:	2342      	movs	r3, #66	@ 0x42
 80032de:	a909      	add	r1, sp, #36	@ 0x24
 80032e0:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80032e4:	f015 f8e8 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura.setPosition(62, 67, 116, 178);
 80032e8:	2243      	movs	r2, #67	@ 0x43
 80032ea:	2374      	movs	r3, #116	@ 0x74
 80032ec:	9802      	ldr	r0, [sp, #8]
 80032ee:	9700      	str	r7, [sp, #0]
 80032f0:	213e      	movs	r1, #62	@ 0x3e
 80032f2:	f7ff fbd9 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80032f6:	9802      	ldr	r0, [sp, #8]
 80032f8:	4629      	mov	r1, r5
 80032fa:	f014 f9fc 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80032fe:	9902      	ldr	r1, [sp, #8]
 8003300:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8003304:	4630      	mov	r0, r6
 8003306:	f011 fb61 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura_lock.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_LOCK_ID));
 800330a:	9803      	ldr	r0, [sp, #12]
 800330c:	2345      	movs	r3, #69	@ 0x45
 800330e:	a909      	add	r1, sp, #36	@ 0x24
 8003310:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003314:	f015 f8d0 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura_lock.setPosition(62, 67, 116, 178);
 8003318:	2243      	movs	r2, #67	@ 0x43
 800331a:	2374      	movs	r3, #116	@ 0x74
 800331c:	9803      	ldr	r0, [sp, #12]
 800331e:	9700      	str	r7, [sp, #0]
 8003320:	213e      	movs	r1, #62	@ 0x3e
 8003322:	f7ff fbc1 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura_lock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003326:	9803      	ldr	r0, [sp, #12]
 8003328:	4629      	mov	r1, r5
 800332a:	f014 f9e4 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800332e:	9903      	ldr	r1, [sp, #12]
 8003330:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 8003334:	4630      	mov	r0, r6
 8003336:	f011 fb49 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sponge_lock.setBitmap(touchgfx::Bitmap(BITMAP_SPONG_LOCK_ID));
 800333a:	9804      	ldr	r0, [sp, #16]
 800333c:	234d      	movs	r3, #77	@ 0x4d
 800333e:	a909      	add	r1, sp, #36	@ 0x24
 8003340:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003344:	f015 f8b8 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge_lock.setPosition(62, 67, 116, 178);
 8003348:	2243      	movs	r2, #67	@ 0x43
 800334a:	2374      	movs	r3, #116	@ 0x74
 800334c:	9804      	ldr	r0, [sp, #16]
 800334e:	9700      	str	r7, [sp, #0]
 8003350:	213e      	movs	r1, #62	@ 0x3e
 8003352:	f7ff fba9 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge_lock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003356:	9804      	ldr	r0, [sp, #16]
 8003358:	4629      	mov	r1, r5
 800335a:	f014 f9cc 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800335e:	9904      	ldr	r1, [sp, #16]
 8003360:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 8003364:	4630      	mov	r0, r6
 8003366:	f011 fb31 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    rightarrow.setPosition(197, 135, 42, 54);
 800336a:	2736      	movs	r7, #54	@ 0x36
    rightarrow.setBitmap(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID));
 800336c:	9805      	ldr	r0, [sp, #20]
 800336e:	2341      	movs	r3, #65	@ 0x41
 8003370:	a909      	add	r1, sp, #36	@ 0x24
 8003372:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003376:	f015 f89f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    rightarrow.setPosition(197, 135, 42, 54);
 800337a:	2287      	movs	r2, #135	@ 0x87
 800337c:	232a      	movs	r3, #42	@ 0x2a
 800337e:	9805      	ldr	r0, [sp, #20]
 8003380:	9700      	str	r7, [sp, #0]
 8003382:	21c5      	movs	r1, #197	@ 0xc5
 8003384:	f7ff fb90 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    rightarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003388:	9805      	ldr	r0, [sp, #20]
 800338a:	4629      	mov	r1, r5
 800338c:	f014 f9b3 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003390:	9905      	ldr	r1, [sp, #20]
 8003392:	4630      	mov	r0, r6
 8003394:	f011 fb1a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    leftarrow.setBitmap(touchgfx::Bitmap(BITMAP_LEFTARROW_ID));
 8003398:	9806      	ldr	r0, [sp, #24]
 800339a:	232e      	movs	r3, #46	@ 0x2e
 800339c:	a909      	add	r1, sp, #36	@ 0x24
 800339e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80033a2:	f015 f889 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    leftarrow.setPosition(0, 135, 42, 54);
 80033a6:	232a      	movs	r3, #42	@ 0x2a
 80033a8:	2287      	movs	r2, #135	@ 0x87
 80033aa:	9806      	ldr	r0, [sp, #24]
 80033ac:	9700      	str	r7, [sp, #0]
 80033ae:	4629      	mov	r1, r5
 80033b0:	f7ff fb7a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    leftarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80033b4:	9806      	ldr	r0, [sp, #24]
 80033b6:	4629      	mov	r1, r5
 80033b8:	f014 f99d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80033bc:	9906      	ldr	r1, [sp, #24]
 80033be:	4630      	mov	r0, r6
 80033c0:	f011 fb04 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 80033c4:	4629      	mov	r1, r5
 80033c6:	9807      	ldr	r0, [sp, #28]
 80033c8:	f8cd 9000 	str.w	r9, [sp]
 80033cc:	462a      	mov	r2, r5
 80033ce:	2366      	movs	r3, #102	@ 0x66
 80033d0:	f7ff fb6a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        up = colorReleased;
 80033d4:	f04f 33ff 	mov.w	r3, #4294967295
        borderDown = borderColorPressed;
 80033d8:	4a18      	ldr	r2, [pc, #96]	@ (800343c <_ZN17CharacterViewBaseC1Ev+0x338>)
        borderSize = size;
 80033da:	f8a4 5230 	strh.w	r5, [r4, #560]	@ 0x230
        down = colorPressed;
 80033de:	e9c4 338d 	strd	r3, r3, [r4, #564]	@ 0x234
        borderDown = borderColorPressed;
 80033e2:	4b17      	ldr	r3, [pc, #92]	@ (8003440 <_ZN17CharacterViewBaseC1Ev+0x33c>)
        handlePressedUpdated();
 80033e4:	f8d4 51cc 	ldr.w	r5, [r4, #460]	@ 0x1cc
        borderDown = borderColorPressed;
 80033e8:	e9c4 238f 	strd	r2, r3, [r4, #572]	@ 0x23c
        handlePressedUpdated();
 80033ec:	4658      	mov	r0, fp
 80033ee:	f7ff fab3 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 80033f2:	2306      	movs	r3, #6
 80033f4:	f884 31f9 	strb.w	r3, [r4, #505]	@ 0x1f9
        handleAlphaUpdated();
 80033f8:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 80033fc:	4658      	mov	r0, fp
 80033fe:	4798      	blx	r3
    MAINMENU_BUT.setAction(flexButtonCallback);
 8003400:	f504 7311 	add.w	r3, r4, #580	@ 0x244
        action = &callback;
 8003404:	f8c4 31fc 	str.w	r3, [r4, #508]	@ 0x1fc
    MAINMENU_BUT.setPosition(70, 76, 102, 160);
 8003408:	224c      	movs	r2, #76	@ 0x4c
 800340a:	2366      	movs	r3, #102	@ 0x66
 800340c:	4658      	mov	r0, fp
 800340e:	f8cd 9000 	str.w	r9, [sp]
 8003412:	2146      	movs	r1, #70	@ 0x46
 8003414:	f7ff fb48 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003418:	4630      	mov	r0, r6
 800341a:	4659      	mov	r1, fp
 800341c:	f011 fad6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003420:	4620      	mov	r0, r4
 8003422:	b00b      	add	sp, #44	@ 0x2c
 8003424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003428:	08031240 	.word	0x08031240
 800342c:	080309ec 	.word	0x080309ec
 8003430:	080323dc 	.word	0x080323dc
 8003434:	08031228 	.word	0x08031228
 8003438:	080030ed 	.word	0x080030ed
 800343c:	ff8a8a8a 	.word	0xff8a8a8a
 8003440:	ff336699 	.word	0xff336699

08003444 <_ZN8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003444:	4770      	bx	lr

08003446 <_ZN19Character_2ViewBaseD1Ev>:
}

Character_2ViewBase::~Character_2ViewBase()
{

}
 8003446:	4770      	bx	lr

08003448 <_ZN19Character_2ViewBase11setupScreenEv>:

void Character_2ViewBase::setupScreen()
{

}
 8003448:	4770      	bx	lr

0800344a <_ZN8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800344a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800344c:	68c2      	ldr	r2, [r0, #12]
 800344e:	6844      	ldr	r4, [r0, #4]
 8003450:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003452:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003454:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003458:	07d2      	lsls	r2, r2, #31
 800345a:	bf48      	it	mi
 800345c:	5962      	ldrmi	r2, [r4, r5]
 800345e:	689b      	ldr	r3, [r3, #8]
    }
 8003460:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003462:	bf48      	it	mi
 8003464:	58d3      	ldrmi	r3, [r2, r3]
 8003466:	4718      	bx	r3

08003468 <_ZNK8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003468:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800346a:	6840      	ldr	r0, [r0, #4]
 800346c:	b130      	cbz	r0, 800347c <_ZNK8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800346e:	689a      	ldr	r2, [r3, #8]
 8003470:	b91a      	cbnz	r2, 800347a <_ZNK8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8003472:	68d8      	ldr	r0, [r3, #12]
 8003474:	f000 0001 	and.w	r0, r0, #1
 8003478:	4770      	bx	lr
 800347a:	2001      	movs	r0, #1
    }
 800347c:	4770      	bx	lr

0800347e <_ZN8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800347e:	b510      	push	{r4, lr}
 8003480:	2110      	movs	r1, #16
 8003482:	4604      	mov	r4, r0
 8003484:	f029 feb7 	bl	802d1f6 <_ZdlPvj>
 8003488:	4620      	mov	r0, r4
 800348a:	bd10      	pop	{r4, pc}

0800348c <_ZN19Character_2ViewBaseD0Ev>:
Character_2ViewBase::~Character_2ViewBase()
 800348c:	b510      	push	{r4, lr}
}
 800348e:	f44f 711d 	mov.w	r1, #628	@ 0x274
Character_2ViewBase::~Character_2ViewBase()
 8003492:	4604      	mov	r4, r0
}
 8003494:	f029 feaf 	bl	802d1f6 <_ZdlPvj>
 8003498:	4620      	mov	r0, r4
 800349a:	bd10      	pop	{r4, pc}

0800349c <_ZN19Character_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Character_2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800349c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &sakurabutton)
 800349e:	f500 73ba 	add.w	r3, r0, #372	@ 0x174
 80034a2:	4299      	cmp	r1, r3
{
 80034a4:	4604      	mov	r4, r0
 80034a6:	460d      	mov	r5, r1
    if (&src == &sakurabutton)
 80034a8:	d103      	bne.n	80034b2 <_ZN19Character_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Character_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80034aa:	f017 fc13 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Sakura_Select
        //When sakurabutton clicked change screen to SakuraMainScreen
        //Go to SakuraMainScreen with no screen transition
        application().gotoSakuraMainScreenScreenNoTransition();
 80034ae:	f000 fc19 	bl	8003ce4 <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv>
    }
    if (&src == &narutobutton)
 80034b2:	f504 74f6 	add.w	r4, r4, #492	@ 0x1ec
 80034b6:	42a5      	cmp	r5, r4
 80034b8:	d105      	bne.n	80034c6 <_ZN19Character_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 80034ba:	f017 fc0b 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When narutobutton clicked change screen to NarutoGameScreen2
        //Go to NarutoGameScreen2 with no screen transition
        application().gotoNarutoGameScreen2ScreenNoTransition();
    }
}
 80034be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoNarutoGameScreen2ScreenNoTransition();
 80034c2:	f000 bc2f 	b.w	8003d24 <_ZN23FrontendApplicationBase39gotoNarutoGameScreen2ScreenNoTransitionEv>
}
 80034c6:	bd38      	pop	{r3, r4, r5, pc}

080034c8 <_ZN19Character_2ViewBaseC1Ev>:
Character_2ViewBase::Character_2ViewBase() :
 80034c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034cc:	4604      	mov	r4, r0
 80034ce:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &Character_2ViewBase::flexButtonCallbackHandler)
 80034d0:	46a2      	mov	sl, r4
 80034d2:	2500      	movs	r5, #0
 80034d4:	f019 fc24 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 80034d8:	4ba7      	ldr	r3, [pc, #668]	@ (8003778 <_ZN19Character_2ViewBaseC1Ev+0x2b0>)
 80034da:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80034dc:	f84a 3b40 	str.w	r3, [sl], #64
 80034e0:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 80034e4:	4650      	mov	r0, sl
 80034e6:	f7ff faf3 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 80034ea:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80034ee:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80034f2:	a907      	add	r1, sp, #28
 80034f4:	4648      	mov	r0, r9
 80034f6:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 80034fa:	f8ad 601c 	strh.w	r6, [sp, #28]
 80034fe:	f014 f93f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003502:	a907      	add	r1, sp, #28
 8003504:	4640      	mov	r0, r8
 8003506:	f8ad 601c 	strh.w	r6, [sp, #28]
 800350a:	f014 f939 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800350e:	a907      	add	r1, sp, #28
 8003510:	4638      	mov	r0, r7
 8003512:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003516:	f014 f933 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800351a:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800351e:	a907      	add	r1, sp, #28
 8003520:	4618      	mov	r0, r3
 8003522:	9302      	str	r3, [sp, #8]
 8003524:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003528:	f014 f92a 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800352c:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003530:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8003534:	a907      	add	r1, sp, #28
 8003536:	4618      	mov	r0, r3
 8003538:	9303      	str	r3, [sp, #12]
 800353a:	f8ad 601c 	strh.w	r6, [sp, #28]
 800353e:	f014 f91f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003542:	a907      	add	r1, sp, #28
 8003544:	4658      	mov	r0, fp
 8003546:	f8ad 601c 	strh.w	r6, [sp, #28]
 800354a:	f014 f919 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800354e:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8003552:	4618      	mov	r0, r3
 8003554:	9304      	str	r3, [sp, #16]
 8003556:	f7ff fad7 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800355a:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 800355e:	4618      	mov	r0, r3
 8003560:	9305      	str	r3, [sp, #20]
 8003562:	f7ff fad1 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003566:	4b85      	ldr	r3, [pc, #532]	@ (800377c <_ZN19Character_2ViewBaseC1Ev+0x2b4>)
 8003568:	e9c4 3499 	strd	r3, r4, [r4, #612]	@ 0x264
 800356c:	4b84      	ldr	r3, [pc, #528]	@ (8003780 <_ZN19Character_2ViewBaseC1Ev+0x2b8>)
 800356e:	e9c4 359b 	strd	r3, r5, [r4, #620]	@ 0x26c
    __background.setPosition(0, 0, 240, 320);
 8003572:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003576:	462a      	mov	r2, r5
 8003578:	9300      	str	r3, [sp, #0]
 800357a:	4629      	mov	r1, r5
 800357c:	4650      	mov	r0, sl
 800357e:	23f0      	movs	r3, #240	@ 0xf0
 8003580:	1d26      	adds	r6, r4, #4
 8003582:	f7ff fa91 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003586:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800358a:	66a3      	str	r3, [r4, #104]	@ 0x68
 800358c:	4651      	mov	r1, sl
 800358e:	4630      	mov	r0, r6
 8003590:	f011 fa1c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003594:	233b      	movs	r3, #59	@ 0x3b
    background.setBitmap(touchgfx::Bitmap(BITMAP_PICK_ID));
 8003596:	a907      	add	r1, sp, #28
 8003598:	4648      	mov	r0, r9
 800359a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800359e:	f014 ff8b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 80035a2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80035a6:	462a      	mov	r2, r5
 80035a8:	9300      	str	r3, [sp, #0]
 80035aa:	4629      	mov	r1, r5
 80035ac:	23f0      	movs	r3, #240	@ 0xf0
 80035ae:	4648      	mov	r0, r9
 80035b0:	f7ff fa7a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80035b4:	4629      	mov	r1, r5
 80035b6:	4648      	mov	r0, r9
 80035b8:	f014 f89d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80035bc:	4649      	mov	r1, r9
 80035be:	4630      	mov	r0, r6
 80035c0:	f011 fa04 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(62, 76, 110, 160);
 80035c4:	f04f 0aa0 	mov.w	sl, #160	@ 0xa0
 80035c8:	2333      	movs	r3, #51	@ 0x33
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 80035ca:	a907      	add	r1, sp, #28
 80035cc:	4640      	mov	r0, r8
 80035ce:	f8ad 301c 	strh.w	r3, [sp, #28]
 80035d2:	f014 ff71 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(62, 76, 110, 160);
 80035d6:	224c      	movs	r2, #76	@ 0x4c
 80035d8:	236e      	movs	r3, #110	@ 0x6e
 80035da:	4640      	mov	r0, r8
 80035dc:	f8cd a000 	str.w	sl, [sp]
 80035e0:	213e      	movs	r1, #62	@ 0x3e
 80035e2:	f7ff fa61 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80035e6:	4629      	mov	r1, r5
 80035e8:	4640      	mov	r0, r8
 80035ea:	f014 f884 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80035ee:	4641      	mov	r1, r8
 80035f0:	4630      	mov	r0, r6
 80035f2:	f011 f9eb 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035f6:	234e      	movs	r3, #78	@ 0x4e
    sponge.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 80035f8:	a907      	add	r1, sp, #28
 80035fa:	4638      	mov	r0, r7
 80035fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003600:	f014 ff5a 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge.setPosition(57, 65, 132, 185);
 8003604:	23b9      	movs	r3, #185	@ 0xb9
 8003606:	2241      	movs	r2, #65	@ 0x41
 8003608:	9300      	str	r3, [sp, #0]
 800360a:	4638      	mov	r0, r7
 800360c:	2384      	movs	r3, #132	@ 0x84
 800360e:	2139      	movs	r1, #57	@ 0x39
 8003610:	f7ff fa4a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003614:	4629      	mov	r1, r5
 8003616:	4638      	mov	r0, r7
 8003618:	f014 f86d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800361c:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 8003620:	4639      	mov	r1, r7
 8003622:	4630      	mov	r0, r6
 8003624:	f011 f9d2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 8003628:	9802      	ldr	r0, [sp, #8]
 800362a:	2342      	movs	r3, #66	@ 0x42
 800362c:	a907      	add	r1, sp, #28
 800362e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003632:	f014 ff41 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura.setPosition(62, 67, 116, 178);
 8003636:	23b2      	movs	r3, #178	@ 0xb2
 8003638:	2243      	movs	r2, #67	@ 0x43
 800363a:	9802      	ldr	r0, [sp, #8]
 800363c:	9300      	str	r3, [sp, #0]
 800363e:	213e      	movs	r1, #62	@ 0x3e
 8003640:	2374      	movs	r3, #116	@ 0x74
 8003642:	f7ff fa31 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003646:	9802      	ldr	r0, [sp, #8]
 8003648:	4629      	mov	r1, r5
 800364a:	f014 f854 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800364e:	9902      	ldr	r1, [sp, #8]
 8003650:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8003654:	4630      	mov	r0, r6
 8003656:	f011 f9b9 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    rightarrow.setPosition(197, 135, 42, 54);
 800365a:	2736      	movs	r7, #54	@ 0x36
    rightarrow.setBitmap(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID));
 800365c:	9803      	ldr	r0, [sp, #12]
 800365e:	2341      	movs	r3, #65	@ 0x41
 8003660:	a907      	add	r1, sp, #28
 8003662:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003666:	f014 ff27 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    rightarrow.setPosition(197, 135, 42, 54);
 800366a:	2287      	movs	r2, #135	@ 0x87
 800366c:	232a      	movs	r3, #42	@ 0x2a
 800366e:	9803      	ldr	r0, [sp, #12]
 8003670:	9700      	str	r7, [sp, #0]
 8003672:	21c5      	movs	r1, #197	@ 0xc5
 8003674:	f7ff fa18 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    rightarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003678:	9803      	ldr	r0, [sp, #12]
 800367a:	4629      	mov	r1, r5
 800367c:	f014 f83b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003680:	9903      	ldr	r1, [sp, #12]
 8003682:	4630      	mov	r0, r6
 8003684:	f011 f9a2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003688:	232e      	movs	r3, #46	@ 0x2e
    leftarrow.setBitmap(touchgfx::Bitmap(BITMAP_LEFTARROW_ID));
 800368a:	a907      	add	r1, sp, #28
 800368c:	4658      	mov	r0, fp
 800368e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003692:	f014 ff11 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    leftarrow.setPosition(0, 135, 42, 54);
 8003696:	232a      	movs	r3, #42	@ 0x2a
 8003698:	2287      	movs	r2, #135	@ 0x87
 800369a:	9700      	str	r7, [sp, #0]
 800369c:	4629      	mov	r1, r5
 800369e:	4658      	mov	r0, fp
 80036a0:	f7ff fa02 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    leftarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80036a4:	4629      	mov	r1, r5
 80036a6:	4658      	mov	r0, fp
 80036a8:	f014 f825 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80036ac:	4659      	mov	r1, fp
 80036ae:	4630      	mov	r0, r6
 80036b0:	f011 f98c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 80036b4:	462a      	mov	r2, r5
 80036b6:	4629      	mov	r1, r5
 80036b8:	f504 70d4 	add.w	r0, r4, #424	@ 0x1a8
 80036bc:	f8cd a000 	str.w	sl, [sp]
 80036c0:	2366      	movs	r3, #102	@ 0x66
 80036c2:	f7ff f9f1 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 80036c6:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 8003788 <_ZN19Character_2ViewBaseC1Ev+0x2c0>
 80036ca:	4b2e      	ldr	r3, [pc, #184]	@ (8003784 <_ZN19Character_2ViewBaseC1Ev+0x2bc>)
        handlePressedUpdated();
 80036cc:	f8d4 8174 	ldr.w	r8, [r4, #372]	@ 0x174
 80036d0:	9804      	ldr	r0, [sp, #16]
 80036d2:	f8a4 51d8 	strh.w	r5, [r4, #472]	@ 0x1d8
        up = colorReleased;
 80036d6:	f04f 37ff 	mov.w	r7, #4294967295
        borderDown = borderColorPressed;
 80036da:	e9c4 b379 	strd	fp, r3, [r4, #484]	@ 0x1e4
        alpha = newAlpha;
 80036de:	f04f 0906 	mov.w	r9, #6
        down = colorPressed;
 80036e2:	e9c4 7777 	strd	r7, r7, [r4, #476]	@ 0x1dc
        handlePressedUpdated();
 80036e6:	f7ff f937 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
 80036ea:	f884 91a1 	strb.w	r9, [r4, #417]	@ 0x1a1
        handleAlphaUpdated();
 80036ee:	f8d8 3090 	ldr.w	r3, [r8, #144]	@ 0x90
 80036f2:	9804      	ldr	r0, [sp, #16]
    sakurabutton.setAction(flexButtonCallback);
 80036f4:	f504 7819 	add.w	r8, r4, #612	@ 0x264
 80036f8:	4798      	blx	r3
 80036fa:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
    sakurabutton.setPosition(70, 76, 102, 160);
 80036fe:	9804      	ldr	r0, [sp, #16]
        action = &callback;
 8003700:	f8c4 81a4 	str.w	r8, [r4, #420]	@ 0x1a4
 8003704:	2366      	movs	r3, #102	@ 0x66
 8003706:	224c      	movs	r2, #76	@ 0x4c
 8003708:	f8cd a000 	str.w	sl, [sp]
 800370c:	2146      	movs	r1, #70	@ 0x46
 800370e:	f7ff f9cb 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003712:	9904      	ldr	r1, [sp, #16]
 8003714:	4630      	mov	r0, r6
 8003716:	f011 f959 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 800371a:	462a      	mov	r2, r5
 800371c:	4629      	mov	r1, r5
 800371e:	f504 7008 	add.w	r0, r4, #544	@ 0x220
 8003722:	f8cd a000 	str.w	sl, [sp]
 8003726:	2366      	movs	r3, #102	@ 0x66
 8003728:	f7ff f9be 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 800372c:	4b15      	ldr	r3, [pc, #84]	@ (8003784 <_ZN19Character_2ViewBaseC1Ev+0x2bc>)
        handlePressedUpdated();
 800372e:	9805      	ldr	r0, [sp, #20]
 8003730:	f8a4 5250 	strh.w	r5, [r4, #592]	@ 0x250
        borderDown = borderColorPressed;
 8003734:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
        handlePressedUpdated();
 8003738:	f8d4 51ec 	ldr.w	r5, [r4, #492]	@ 0x1ec
        borderUp = borderColorReleased;
 800373c:	f8c4 b25c 	str.w	fp, [r4, #604]	@ 0x25c
        down = colorPressed;
 8003740:	e9c4 7795 	strd	r7, r7, [r4, #596]	@ 0x254
        handlePressedUpdated();
 8003744:	f7ff f908 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8003748:	f884 9219 	strb.w	r9, [r4, #537]	@ 0x219
        handleAlphaUpdated();
 800374c:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8003750:	9805      	ldr	r0, [sp, #20]
 8003752:	4798      	blx	r3
    narutobutton.setPosition(70, 76, 102, 160);
 8003754:	9805      	ldr	r0, [sp, #20]
        action = &callback;
 8003756:	f8c4 821c 	str.w	r8, [r4, #540]	@ 0x21c
 800375a:	2366      	movs	r3, #102	@ 0x66
 800375c:	224c      	movs	r2, #76	@ 0x4c
 800375e:	f8cd a000 	str.w	sl, [sp]
 8003762:	2146      	movs	r1, #70	@ 0x46
 8003764:	f7ff f9a0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003768:	4630      	mov	r0, r6
 800376a:	9905      	ldr	r1, [sp, #20]
 800376c:	f011 f92e 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003770:	4620      	mov	r0, r4
 8003772:	b009      	add	sp, #36	@ 0x24
 8003774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003778:	0803128c 	.word	0x0803128c
 800377c:	08031274 	.word	0x08031274
 8003780:	0800349d 	.word	0x0800349d
 8003784:	ff336699 	.word	0xff336699
 8003788:	ff8a8a8a 	.word	0xff8a8a8a

0800378c <_ZN8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800378c:	4770      	bx	lr

0800378e <_ZN23Character_FinalViewBaseD1Ev>:
}

Character_FinalViewBase::~Character_FinalViewBase()
{

}
 800378e:	4770      	bx	lr

08003790 <_ZN23Character_FinalViewBase11setupScreenEv>:

void Character_FinalViewBase::setupScreen()
{

}
 8003790:	4770      	bx	lr

08003792 <_ZN8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003792:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003794:	68c2      	ldr	r2, [r0, #12]
 8003796:	6844      	ldr	r4, [r0, #4]
 8003798:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800379a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800379c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80037a0:	07d2      	lsls	r2, r2, #31
 80037a2:	bf48      	it	mi
 80037a4:	5962      	ldrmi	r2, [r4, r5]
 80037a6:	689b      	ldr	r3, [r3, #8]
    }
 80037a8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80037aa:	bf48      	it	mi
 80037ac:	58d3      	ldrmi	r3, [r2, r3]
 80037ae:	4718      	bx	r3

080037b0 <_ZNK8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80037b0:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80037b2:	6840      	ldr	r0, [r0, #4]
 80037b4:	b130      	cbz	r0, 80037c4 <_ZNK8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80037b6:	689a      	ldr	r2, [r3, #8]
 80037b8:	b91a      	cbnz	r2, 80037c2 <_ZNK8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80037ba:	68d8      	ldr	r0, [r3, #12]
 80037bc:	f000 0001 	and.w	r0, r0, #1
 80037c0:	4770      	bx	lr
 80037c2:	2001      	movs	r0, #1
    }
 80037c4:	4770      	bx	lr

080037c6 <_ZN8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80037c6:	b510      	push	{r4, lr}
 80037c8:	2110      	movs	r1, #16
 80037ca:	4604      	mov	r4, r0
 80037cc:	f029 fd13 	bl	802d1f6 <_ZdlPvj>
 80037d0:	4620      	mov	r0, r4
 80037d2:	bd10      	pop	{r4, pc}

080037d4 <_ZN23Character_FinalViewBaseD0Ev>:
Character_FinalViewBase::~Character_FinalViewBase()
 80037d4:	b510      	push	{r4, lr}
}
 80037d6:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
Character_FinalViewBase::~Character_FinalViewBase()
 80037da:	4604      	mov	r4, r0
}
 80037dc:	f029 fd0b 	bl	802d1f6 <_ZdlPvj>
 80037e0:	4620      	mov	r0, r4
 80037e2:	bd10      	pop	{r4, pc}

080037e4 <_ZN23Character_FinalViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Character_FinalViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &spongebutton)
 80037e4:	f500 70ba 	add.w	r0, r0, #372	@ 0x174
 80037e8:	4288      	cmp	r0, r1
{
 80037ea:	b508      	push	{r3, lr}
    if (&src == &spongebutton)
 80037ec:	d105      	bne.n	80037fa <_ZN23Character_FinalViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Character_FinalViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80037ee:	f017 fa71 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //Sponge
        //When spongebutton clicked change screen to Sponge
        //Go to Sponge with no screen transition
        application().gotoSpongeScreenNoTransition();
    }
}
 80037f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSpongeScreenNoTransition();
 80037f6:	f000 bae5 	b.w	8003dc4 <_ZN23FrontendApplicationBase28gotoSpongeScreenNoTransitionEv>
}
 80037fa:	bd08      	pop	{r3, pc}

080037fc <_ZN23Character_FinalViewBaseC1Ev>:
Character_FinalViewBase::Character_FinalViewBase() :
 80037fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003800:	4604      	mov	r4, r0
 8003802:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &Character_FinalViewBase::flexButtonCallbackHandler)
 8003804:	46a2      	mov	sl, r4
 8003806:	2500      	movs	r5, #0
 8003808:	f019 fa8a 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 800380c:	4ba3      	ldr	r3, [pc, #652]	@ (8003a9c <_ZN23Character_FinalViewBaseC1Ev+0x2a0>)
 800380e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003810:	f84a 3b40 	str.w	r3, [sl], #64
 8003814:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8003818:	4650      	mov	r0, sl
 800381a:	f7ff f959 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 800381e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003822:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8003826:	a907      	add	r1, sp, #28
 8003828:	4648      	mov	r0, r9
 800382a:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 800382e:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003832:	f013 ffa5 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003836:	a907      	add	r1, sp, #28
 8003838:	4640      	mov	r0, r8
 800383a:	f8ad 601c 	strh.w	r6, [sp, #28]
 800383e:	f013 ff9f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003842:	a907      	add	r1, sp, #28
 8003844:	4638      	mov	r0, r7
 8003846:	f8ad 601c 	strh.w	r6, [sp, #28]
 800384a:	f013 ff99 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800384e:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8003852:	a907      	add	r1, sp, #28
 8003854:	4618      	mov	r0, r3
 8003856:	9302      	str	r3, [sp, #8]
 8003858:	f8ad 601c 	strh.w	r6, [sp, #28]
 800385c:	f013 ff90 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003860:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003864:	a907      	add	r1, sp, #28
 8003866:	4618      	mov	r0, r3
 8003868:	9303      	str	r3, [sp, #12]
 800386a:	f8ad 601c 	strh.w	r6, [sp, #28]
 800386e:	f013 ff87 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003872:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8003876:	a907      	add	r1, sp, #28
 8003878:	4618      	mov	r0, r3
 800387a:	9304      	str	r3, [sp, #16]
 800387c:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003880:	f013 ff7e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 8003884:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8003888:	f8a4 31a0 	strh.w	r3, [r4, #416]	@ 0x1a0
        touchable = touch;
 800388c:	f240 1301 	movw	r3, #257	@ 0x101
 8003890:	f8a4 3198 	strh.w	r3, [r4, #408]	@ 0x198
        : T(), up(), down()
 8003894:	4b82      	ldr	r3, [pc, #520]	@ (8003aa0 <_ZN23Character_FinalViewBaseC1Ev+0x2a4>)
 8003896:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
        : Box(), borderColor(0), borderSize(0)
 800389a:	f504 73d4 	add.w	r3, r4, #424	@ 0x1a8
        : x(0), y(0), width(0), height(0)
 800389e:	e9c4 555e 	strd	r5, r5, [r4, #376]	@ 0x178
 80038a2:	e9c4 5560 	strd	r5, r5, [r4, #384]	@ 0x180
          nextSibling(0),
 80038a6:	e9c4 5562 	strd	r5, r5, [r4, #392]	@ 0x188
          cachedAbsX(0),
 80038aa:	e9c4 5564 	strd	r5, r5, [r4, #400]	@ 0x190
 80038ae:	f8c4 519c 	str.w	r5, [r4, #412]	@ 0x19c
 80038b2:	f8c4 51a4 	str.w	r5, [r4, #420]	@ 0x1a4
 80038b6:	4618      	mov	r0, r3
 80038b8:	9305      	str	r3, [sp, #20]
 80038ba:	f7ff f909 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 80038be:	4b79      	ldr	r3, [pc, #484]	@ (8003aa4 <_ZN23Character_FinalViewBaseC1Ev+0x2a8>)
 80038c0:	f8c4 31a8 	str.w	r3, [r4, #424]	@ 0x1a8
 80038c4:	f504 7bba 	add.w	fp, r4, #372	@ 0x174
        borderBox.setXY(0, 0);
 80038c8:	462a      	mov	r2, r5
        : color(0)
 80038ca:	e9c4 5577 	strd	r5, r5, [r4, #476]	@ 0x1dc
 80038ce:	e9c4 5579 	strd	r5, r5, [r4, #484]	@ 0x1e4
 80038d2:	9805      	ldr	r0, [sp, #20]
        : color(col)
 80038d4:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
 80038d8:	f8a4 51d8 	strh.w	r5, [r4, #472]	@ 0x1d8
 80038dc:	4629      	mov	r1, r5
 80038de:	f7ff f8d6 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80038e2:	9905      	ldr	r1, [sp, #20]
 80038e4:	4658      	mov	r0, fp
 80038e6:	f011 f871 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 80038ea:	4b6f      	ldr	r3, [pc, #444]	@ (8003aa8 <_ZN23Character_FinalViewBaseC1Ev+0x2ac>)
 80038ec:	e9c4 347b 	strd	r3, r4, [r4, #492]	@ 0x1ec
 80038f0:	4b6e      	ldr	r3, [pc, #440]	@ (8003aac <_ZN23Character_FinalViewBaseC1Ev+0x2b0>)
 80038f2:	e9c4 357d 	strd	r3, r5, [r4, #500]	@ 0x1f4
    __background.setPosition(0, 0, 240, 320);
 80038f6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80038fa:	462a      	mov	r2, r5
 80038fc:	9300      	str	r3, [sp, #0]
 80038fe:	4629      	mov	r1, r5
 8003900:	4650      	mov	r0, sl
 8003902:	23f0      	movs	r3, #240	@ 0xf0
 8003904:	f7ff f8d0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003908:	1d26      	adds	r6, r4, #4
 800390a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800390e:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003910:	4651      	mov	r1, sl
 8003912:	4630      	mov	r0, r6
 8003914:	f011 f85a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003918:	233b      	movs	r3, #59	@ 0x3b
    background.setBitmap(touchgfx::Bitmap(BITMAP_PICK_ID));
 800391a:	a907      	add	r1, sp, #28
 800391c:	4648      	mov	r0, r9
 800391e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003922:	f014 fdc9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8003926:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800392a:	462a      	mov	r2, r5
 800392c:	9300      	str	r3, [sp, #0]
 800392e:	4629      	mov	r1, r5
 8003930:	23f0      	movs	r3, #240	@ 0xf0
 8003932:	4648      	mov	r0, r9
 8003934:	f7ff f8b8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003938:	4629      	mov	r1, r5
 800393a:	4648      	mov	r0, r9
 800393c:	f013 fedb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003940:	4649      	mov	r1, r9
 8003942:	4630      	mov	r0, r6
 8003944:	f011 f842 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(62, 76, 110, 160);
 8003948:	f04f 09a0 	mov.w	r9, #160	@ 0xa0
 800394c:	2333      	movs	r3, #51	@ 0x33
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 800394e:	a907      	add	r1, sp, #28
 8003950:	4640      	mov	r0, r8
 8003952:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003956:	f014 fdaf 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(62, 76, 110, 160);
 800395a:	224c      	movs	r2, #76	@ 0x4c
 800395c:	236e      	movs	r3, #110	@ 0x6e
 800395e:	4640      	mov	r0, r8
 8003960:	f8cd 9000 	str.w	r9, [sp]
 8003964:	213e      	movs	r1, #62	@ 0x3e
 8003966:	f7ff f89f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800396a:	4629      	mov	r1, r5
 800396c:	4640      	mov	r0, r8
 800396e:	f013 fec2 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        visible = vis;
 8003972:	f884 50bd 	strb.w	r5, [r4, #189]	@ 0xbd
 8003976:	4641      	mov	r1, r8
 8003978:	4630      	mov	r0, r6
 800397a:	f011 f827 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800397e:	234e      	movs	r3, #78	@ 0x4e
    sponge.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 8003980:	a907      	add	r1, sp, #28
 8003982:	4638      	mov	r0, r7
 8003984:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003988:	f014 fd96 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge.setPosition(57, 65, 132, 185);
 800398c:	23b9      	movs	r3, #185	@ 0xb9
 800398e:	2241      	movs	r2, #65	@ 0x41
 8003990:	9300      	str	r3, [sp, #0]
 8003992:	4638      	mov	r0, r7
 8003994:	2384      	movs	r3, #132	@ 0x84
 8003996:	2139      	movs	r1, #57	@ 0x39
 8003998:	f7ff f886 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800399c:	4629      	mov	r1, r5
 800399e:	4638      	mov	r0, r7
 80039a0:	f013 fea9 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80039a4:	4639      	mov	r1, r7
 80039a6:	4630      	mov	r0, r6
 80039a8:	f011 f810 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 80039ac:	9802      	ldr	r0, [sp, #8]
 80039ae:	2342      	movs	r3, #66	@ 0x42
 80039b0:	a907      	add	r1, sp, #28
 80039b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80039b6:	f014 fd7f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura.setPosition(62, 67, 116, 178);
 80039ba:	23b2      	movs	r3, #178	@ 0xb2
 80039bc:	2243      	movs	r2, #67	@ 0x43
 80039be:	9802      	ldr	r0, [sp, #8]
 80039c0:	9300      	str	r3, [sp, #0]
 80039c2:	213e      	movs	r1, #62	@ 0x3e
 80039c4:	2374      	movs	r3, #116	@ 0x74
 80039c6:	f7ff f86f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80039ca:	9802      	ldr	r0, [sp, #8]
 80039cc:	4629      	mov	r1, r5
 80039ce:	f013 fe92 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80039d2:	9902      	ldr	r1, [sp, #8]
 80039d4:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 80039d8:	4630      	mov	r0, r6
 80039da:	f010 fff7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    rightarrow.setPosition(197, 135, 42, 54);
 80039de:	2736      	movs	r7, #54	@ 0x36
    rightarrow.setBitmap(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID));
 80039e0:	9803      	ldr	r0, [sp, #12]
 80039e2:	2341      	movs	r3, #65	@ 0x41
 80039e4:	a907      	add	r1, sp, #28
 80039e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80039ea:	f014 fd65 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    rightarrow.setPosition(197, 135, 42, 54);
 80039ee:	2287      	movs	r2, #135	@ 0x87
 80039f0:	232a      	movs	r3, #42	@ 0x2a
 80039f2:	9803      	ldr	r0, [sp, #12]
 80039f4:	9700      	str	r7, [sp, #0]
 80039f6:	21c5      	movs	r1, #197	@ 0xc5
 80039f8:	f7ff f856 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    rightarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80039fc:	9803      	ldr	r0, [sp, #12]
 80039fe:	4629      	mov	r1, r5
 8003a00:	f013 fe79 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003a04:	9903      	ldr	r1, [sp, #12]
 8003a06:	4630      	mov	r0, r6
 8003a08:	f010 ffe0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    leftarrow.setBitmap(touchgfx::Bitmap(BITMAP_LEFTARROW_ID));
 8003a0c:	9804      	ldr	r0, [sp, #16]
 8003a0e:	232e      	movs	r3, #46	@ 0x2e
 8003a10:	a907      	add	r1, sp, #28
 8003a12:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003a16:	f014 fd4f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    leftarrow.setPosition(0, 135, 42, 54);
 8003a1a:	232a      	movs	r3, #42	@ 0x2a
 8003a1c:	2287      	movs	r2, #135	@ 0x87
 8003a1e:	9804      	ldr	r0, [sp, #16]
 8003a20:	9700      	str	r7, [sp, #0]
 8003a22:	4629      	mov	r1, r5
 8003a24:	f7ff f840 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    leftarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003a28:	9804      	ldr	r0, [sp, #16]
 8003a2a:	4629      	mov	r1, r5
 8003a2c:	f013 fe63 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003a30:	9904      	ldr	r1, [sp, #16]
 8003a32:	4630      	mov	r0, r6
 8003a34:	f010 ffca 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8003a38:	4629      	mov	r1, r5
 8003a3a:	9805      	ldr	r0, [sp, #20]
 8003a3c:	f8cd 9000 	str.w	r9, [sp]
 8003a40:	462a      	mov	r2, r5
 8003a42:	2366      	movs	r3, #102	@ 0x66
 8003a44:	f7ff f830 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        up = colorReleased;
 8003a48:	f04f 33ff 	mov.w	r3, #4294967295
        borderDown = borderColorPressed;
 8003a4c:	4a18      	ldr	r2, [pc, #96]	@ (8003ab0 <_ZN23Character_FinalViewBaseC1Ev+0x2b4>)
        borderSize = size;
 8003a4e:	f8a4 51d8 	strh.w	r5, [r4, #472]	@ 0x1d8
        down = colorPressed;
 8003a52:	e9c4 3377 	strd	r3, r3, [r4, #476]	@ 0x1dc
        borderDown = borderColorPressed;
 8003a56:	4b17      	ldr	r3, [pc, #92]	@ (8003ab4 <_ZN23Character_FinalViewBaseC1Ev+0x2b8>)
        handlePressedUpdated();
 8003a58:	f8d4 5174 	ldr.w	r5, [r4, #372]	@ 0x174
        borderDown = borderColorPressed;
 8003a5c:	e9c4 2379 	strd	r2, r3, [r4, #484]	@ 0x1e4
        handlePressedUpdated();
 8003a60:	4658      	mov	r0, fp
 8003a62:	f7fe ff79 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8003a66:	2306      	movs	r3, #6
 8003a68:	f884 31a1 	strb.w	r3, [r4, #417]	@ 0x1a1
        handleAlphaUpdated();
 8003a6c:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8003a70:	4658      	mov	r0, fp
 8003a72:	4798      	blx	r3
    spongebutton.setAction(flexButtonCallback);
 8003a74:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
        action = &callback;
 8003a78:	f8c4 31a4 	str.w	r3, [r4, #420]	@ 0x1a4
    spongebutton.setPosition(70, 76, 102, 160);
 8003a7c:	224c      	movs	r2, #76	@ 0x4c
 8003a7e:	2366      	movs	r3, #102	@ 0x66
 8003a80:	4658      	mov	r0, fp
 8003a82:	f8cd 9000 	str.w	r9, [sp]
 8003a86:	2146      	movs	r1, #70	@ 0x46
 8003a88:	f7ff f80e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a8c:	4630      	mov	r0, r6
 8003a8e:	4659      	mov	r1, fp
 8003a90:	f010 ff9c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003a94:	4620      	mov	r0, r4
 8003a96:	b009      	add	sp, #36	@ 0x24
 8003a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a9c:	080312d8 	.word	0x080312d8
 8003aa0:	080309ec 	.word	0x080309ec
 8003aa4:	080323dc 	.word	0x080323dc
 8003aa8:	080312c0 	.word	0x080312c0
 8003aac:	080037e5 	.word	0x080037e5
 8003ab0:	ff8a8a8a 	.word	0xff8a8a8a
 8003ab4:	ff336699 	.word	0xff336699

08003ab8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003ab8:	4770      	bx	lr

08003aba <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003aba:	b510      	push	{r4, lr}
    }
 8003abc:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003abe:	4604      	mov	r4, r0
    }
 8003ac0:	f029 fb99 	bl	802d1f6 <_ZdlPvj>
 8003ac4:	4620      	mov	r0, r4
 8003ac6:	bd10      	pop	{r4, pc}

08003ac8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003ac8:	4770      	bx	lr

08003aca <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003aca:	4770      	bx	lr

08003acc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003acc:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8003ad0:	6808      	ldr	r0, [r1, #0]
 8003ad2:	6849      	ldr	r1, [r1, #4]
 8003ad4:	c303      	stmia	r3!, {r0, r1}
    }
 8003ad6:	4770      	bx	lr

08003ad8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003ad8:	4770      	bx	lr

08003ada <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003ada:	4770      	bx	lr

08003adc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003adc:	6041      	str	r1, [r0, #4]
    }
 8003ade:	4770      	bx	lr

08003ae0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003ae0:	4770      	bx	lr

08003ae2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003ae2:	4770      	bx	lr

08003ae4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8003ae4:	4b06      	ldr	r3, [pc, #24]	@ (8003b00 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003ae6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003aea:	2300      	movs	r3, #0
 8003aec:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MainMenuScreen

void FrontendApplicationBase::gotoMainMenuScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainMenuScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003af0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003af4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003af8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainMenuScreenScreenNoTransition();
    }
 8003afc:	4770      	bx	lr
 8003afe:	bf00      	nop
 8003b00:	08004e95 	.word	0x08004e95

08003b04 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003b04:	2301      	movs	r3, #1
 8003b06:	7203      	strb	r3, [r0, #8]
    }
 8003b08:	4770      	bx	lr

08003b0a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003b0a:	4770      	bx	lr

08003b0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003b0c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003b0e:	68c2      	ldr	r2, [r0, #12]
 8003b10:	6841      	ldr	r1, [r0, #4]
 8003b12:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003b14:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003b16:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003b1a:	07d2      	lsls	r2, r2, #31
 8003b1c:	bf48      	it	mi
 8003b1e:	590a      	ldrmi	r2, [r1, r4]
 8003b20:	689b      	ldr	r3, [r3, #8]
    }
 8003b22:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003b26:	bf48      	it	mi
 8003b28:	58d3      	ldrmi	r3, [r2, r3]
 8003b2a:	4718      	bx	r3

08003b2c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8003b2c:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003b2e:	6840      	ldr	r0, [r0, #4]
 8003b30:	b130      	cbz	r0, 8003b40 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003b32:	689a      	ldr	r2, [r3, #8]
 8003b34:	b91a      	cbnz	r2, 8003b3e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8003b36:	68d8      	ldr	r0, [r3, #12]
 8003b38:	f000 0001 	and.w	r0, r0, #1
 8003b3c:	4770      	bx	lr
 8003b3e:	2001      	movs	r0, #1
    }
 8003b40:	4770      	bx	lr

08003b42 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003b42:	b510      	push	{r4, lr}
 8003b44:	210c      	movs	r1, #12
 8003b46:	4604      	mov	r4, r0
 8003b48:	f029 fb55 	bl	802d1f6 <_ZdlPvj>
 8003b4c:	4620      	mov	r0, r4
 8003b4e:	bd10      	pop	{r4, pc}

08003b50 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003b50:	b510      	push	{r4, lr}
 8003b52:	2110      	movs	r1, #16
 8003b54:	4604      	mov	r4, r0
 8003b56:	f029 fb4e 	bl	802d1f6 <_ZdlPvj>
 8003b5a:	4620      	mov	r0, r4
 8003b5c:	bd10      	pop	{r4, pc}

08003b5e <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003b5e:	b510      	push	{r4, lr}
 8003b60:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003b64:	4604      	mov	r4, r0
 8003b66:	f029 fb46 	bl	802d1f6 <_ZdlPvj>
 8003b6a:	4620      	mov	r0, r4
 8003b6c:	bd10      	pop	{r4, pc}

08003b6e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003b6e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003b70:	f017 f8b0 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
 8003b74:	6803      	ldr	r3, [r0, #0]
    }
 8003b76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003b7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003b7c:	4718      	bx	r3

08003b7e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003b7e:	b510      	push	{r4, lr}
 8003b80:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003b82:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8003b86:	b158      	cbz	r0, 8003ba0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003b88:	6803      	ldr	r3, [r0, #0]
 8003b8a:	68db      	ldr	r3, [r3, #12]
 8003b8c:	4798      	blx	r3
 8003b8e:	b138      	cbz	r0, 8003ba0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003b90:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8003b94:	6803      	ldr	r3, [r0, #0]
 8003b96:	689b      	ldr	r3, [r3, #8]
 8003b98:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003b9a:	2300      	movs	r3, #0
 8003b9c:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8003ba0:	bd10      	pop	{r4, pc}
	...

08003ba4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003ba4:	4b04      	ldr	r3, [pc, #16]	@ (8003bb8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8003bac:	b10a      	cbz	r2, 8003bb2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003bae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8003bb0:	b900      	cbnz	r0, 8003bb4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003bb2:	6898      	ldr	r0, [r3, #8]
    }
 8003bb4:	4770      	bx	lr
 8003bb6:	bf00      	nop
 8003bb8:	20013884 	.word	0x20013884

08003bbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003bbe:	4617      	mov	r7, r2
 8003bc0:	4604      	mov	r4, r0
 8003bc2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003bc4:	f017 f948 	bl	801ae58 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003bc8:	4b12      	ldr	r3, [pc, #72]	@ (8003c14 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8003bca:	601c      	str	r4, [r3, #0]
      model(m)
 8003bcc:	4b12      	ldr	r3, [pc, #72]	@ (8003c18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003bce:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003bd0:	4b12      	ldr	r3, [pc, #72]	@ (8003c1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 8003bd2:	2500      	movs	r5, #0
 8003bd4:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8003bd8:	4b11      	ldr	r3, [pc, #68]	@ (8003c20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8003bda:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 8003bde:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003be0:	6803      	ldr	r3, [r0, #0]
 8003be2:	2101      	movs	r1, #1
 8003be4:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003be6:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 8003bea:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003bee:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003bf0:	4628      	mov	r0, r5
 8003bf2:	f006 fa2b 	bl	800a04c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003bf6:	f7ff ffd5 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 8003bfa:	f021 fa18 	bl	802502e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003bfe:	f7ff ffd1 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 8003c02:	f021 fa8f 	bl	8025124 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8003c06:	f7ff ffcd 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 8003c0a:	f021 fa97 	bl	802513c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8003c0e:	4620      	mov	r0, r4
 8003c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003c12:	bf00      	nop
 8003c14:	200138d8 	.word	0x200138d8
 8003c18:	08031334 	.word	0x08031334
 8003c1c:	0803131c 	.word	0x0803131c
 8003c20:	20013884 	.word	0x20013884

08003c24 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003c24:	4b06      	ldr	r3, [pc, #24]	@ (8003c40 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv+0x1c>)
 8003c26:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003c2a:	2300      	movs	r3, #0
 8003c2c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c30:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003c34:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003c38:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003c3c:	4770      	bx	lr
 8003c3e:	bf00      	nop
 8003c40:	08004e95 	.word	0x08004e95

08003c44 <_ZN23FrontendApplicationBase32gotoGameScreenScreenNoTransitionEv>:
 8003c44:	4b06      	ldr	r3, [pc, #24]	@ (8003c60 <_ZN23FrontendApplicationBase32gotoGameScreenScreenNoTransitionEv+0x1c>)
 8003c46:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003c4a:	2300      	movs	r3, #0
 8003c4c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen

void FrontendApplicationBase::gotoGameScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003c50:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003c54:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003c58:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003c5c:	4770      	bx	lr
 8003c5e:	bf00      	nop
 8003c60:	08004d4d 	.word	0x08004d4d

08003c64 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>:
 8003c64:	4b06      	ldr	r3, [pc, #24]	@ (8003c80 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv+0x1c>)
 8003c66:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// BackUpScreen

void FrontendApplicationBase::gotoBackUpScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoBackUpScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003c70:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003c74:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003c78:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003c7c:	4770      	bx	lr
 8003c7e:	bf00      	nop
 8003c80:	08004c05 	.word	0x08004c05

08003c84 <_ZN23FrontendApplicationBase31gotoCharacterScreenNoTransitionEv>:
 8003c84:	4b06      	ldr	r3, [pc, #24]	@ (8003ca0 <_ZN23FrontendApplicationBase31gotoCharacterScreenNoTransitionEv+0x1c>)
 8003c86:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003c8a:	2300      	movs	r3, #0
 8003c8c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character

void FrontendApplicationBase::gotoCharacterScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacterScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003c90:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003c94:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003c98:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003c9c:	4770      	bx	lr
 8003c9e:	bf00      	nop
 8003ca0:	08004abd 	.word	0x08004abd

08003ca4 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>:
 8003ca4:	4b06      	ldr	r3, [pc, #24]	@ (8003cc0 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv+0x1c>)
 8003ca6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003caa:	2300      	movs	r3, #0
 8003cac:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character_2

void FrontendApplicationBase::gotoCharacter_2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacter_2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003cb0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003cb4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003cb8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003cbc:	4770      	bx	lr
 8003cbe:	bf00      	nop
 8003cc0:	08004975 	.word	0x08004975

08003cc4 <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv>:
 8003cc4:	4b06      	ldr	r3, [pc, #24]	@ (8003ce0 <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv+0x1c>)
 8003cc6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003cca:	2300      	movs	r3, #0
 8003ccc:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// RewardScreen

void FrontendApplicationBase::gotoRewardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRewardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003cd0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003cd4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003cd8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003cdc:	4770      	bx	lr
 8003cde:	bf00      	nop
 8003ce0:	0800482d 	.word	0x0800482d

08003ce4 <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv>:
 8003ce4:	4b06      	ldr	r3, [pc, #24]	@ (8003d00 <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv+0x1c>)
 8003ce6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003cea:	2300      	movs	r3, #0
 8003cec:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// SakuraMainScreen

void FrontendApplicationBase::gotoSakuraMainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSakuraMainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003cf0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003cf4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003cf8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003cfc:	4770      	bx	lr
 8003cfe:	bf00      	nop
 8003d00:	080046e5 	.word	0x080046e5

08003d04 <_ZN23FrontendApplicationBase38gotoSakuraGameScreenScreenNoTransitionEv>:
 8003d04:	4b06      	ldr	r3, [pc, #24]	@ (8003d20 <_ZN23FrontendApplicationBase38gotoSakuraGameScreenScreenNoTransitionEv+0x1c>)
 8003d06:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// SakuraGameScreen

void FrontendApplicationBase::gotoSakuraGameScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSakuraGameScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003d10:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003d14:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003d18:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003d1c:	4770      	bx	lr
 8003d1e:	bf00      	nop
 8003d20:	0800459d 	.word	0x0800459d

08003d24 <_ZN23FrontendApplicationBase39gotoNarutoGameScreen2ScreenNoTransitionEv>:
 8003d24:	4b06      	ldr	r3, [pc, #24]	@ (8003d40 <_ZN23FrontendApplicationBase39gotoNarutoGameScreen2ScreenNoTransitionEv+0x1c>)
 8003d26:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003d2a:	2300      	movs	r3, #0
 8003d2c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// NarutoGameScreen2

void FrontendApplicationBase::gotoNarutoGameScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoNarutoGameScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003d30:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003d34:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003d38:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003d3c:	4770      	bx	lr
 8003d3e:	bf00      	nop
 8003d40:	08004455 	.word	0x08004455

08003d44 <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv>:
 8003d44:	4b06      	ldr	r3, [pc, #24]	@ (8003d60 <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv+0x1c>)
 8003d46:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003d4a:	2300      	movs	r3, #0
 8003d4c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character1

void FrontendApplicationBase::gotoCharacter1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacter1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003d50:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003d54:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003d58:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003d5c:	4770      	bx	lr
 8003d5e:	bf00      	nop
 8003d60:	0800430d 	.word	0x0800430d

08003d64 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>:
 8003d64:	4b06      	ldr	r3, [pc, #24]	@ (8003d80 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv+0x1c>)
 8003d66:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003d6a:	2300      	movs	r3, #0
 8003d6c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// SakuraFinalScreen

void FrontendApplicationBase::gotoSakuraFinalScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSakuraFinalScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003d70:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003d74:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003d78:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003d7c:	4770      	bx	lr
 8003d7e:	bf00      	nop
 8003d80:	080041c5 	.word	0x080041c5

08003d84 <_ZN23FrontendApplicationBase39gotoRewardFinalScreenScreenNoTransitionEv>:
 8003d84:	4b06      	ldr	r3, [pc, #24]	@ (8003da0 <_ZN23FrontendApplicationBase39gotoRewardFinalScreenScreenNoTransitionEv+0x1c>)
 8003d86:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003d8a:	2300      	movs	r3, #0
 8003d8c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// RewardFinalScreen

void FrontendApplicationBase::gotoRewardFinalScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRewardFinalScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003d90:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003d94:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003d98:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003d9c:	4770      	bx	lr
 8003d9e:	bf00      	nop
 8003da0:	0800407d 	.word	0x0800407d

08003da4 <_ZN23FrontendApplicationBase37gotoCharacter_FinalScreenNoTransitionEv>:
 8003da4:	4b06      	ldr	r3, [pc, #24]	@ (8003dc0 <_ZN23FrontendApplicationBase37gotoCharacter_FinalScreenNoTransitionEv+0x1c>)
 8003da6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003daa:	2300      	movs	r3, #0
 8003dac:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character_Final

void FrontendApplicationBase::gotoCharacter_FinalScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacter_FinalScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003db0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003db4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003db8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003dbc:	4770      	bx	lr
 8003dbe:	bf00      	nop
 8003dc0:	08003f35 	.word	0x08003f35

08003dc4 <_ZN23FrontendApplicationBase28gotoSpongeScreenNoTransitionEv>:
 8003dc4:	4b06      	ldr	r3, [pc, #24]	@ (8003de0 <_ZN23FrontendApplicationBase28gotoSpongeScreenNoTransitionEv+0x1c>)
 8003dc6:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003dca:	2300      	movs	r3, #0
 8003dcc:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Sponge

void FrontendApplicationBase::gotoSpongeScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSpongeScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003dd0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003dd4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003dd8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003ddc:	4770      	bx	lr
 8003dde:	bf00      	nop
 8003de0:	08003ded 	.word	0x08003ded

08003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003de4:	6803      	ldr	r3, [r0, #0]
 8003de6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003de8:	4718      	bx	r3
	...

08003dec <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoSpongeScreenNoTransitionImpl()
{
 8003dec:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SpongeView, SpongePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003df0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003df4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003df6:	68b0      	ldr	r0, [r6, #8]
 8003df8:	6803      	ldr	r3, [r0, #0]
 8003dfa:	6a1b      	ldr	r3, [r3, #32]
 8003dfc:	4798      	blx	r3
 8003dfe:	f5b0 7f4e 	cmp.w	r0, #824	@ 0x338
 8003e02:	d205      	bcs.n	8003e10 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x24>
 8003e04:	4b43      	ldr	r3, [pc, #268]	@ (8003f14 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x128>)
 8003e06:	4a44      	ldr	r2, [pc, #272]	@ (8003f18 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x12c>)
 8003e08:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e0a:	4844      	ldr	r0, [pc, #272]	@ (8003f1c <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x130>)
 8003e0c:	f02a f930 	bl	802e070 <__assert_func>
 8003e10:	6870      	ldr	r0, [r6, #4]
 8003e12:	6803      	ldr	r3, [r0, #0]
 8003e14:	6a1b      	ldr	r3, [r3, #32]
 8003e16:	4798      	blx	r3
 8003e18:	280f      	cmp	r0, #15
 8003e1a:	d803      	bhi.n	8003e24 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x38>
 8003e1c:	4b40      	ldr	r3, [pc, #256]	@ (8003f20 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x134>)
 8003e1e:	4a3e      	ldr	r2, [pc, #248]	@ (8003f18 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x12c>)
 8003e20:	21a4      	movs	r1, #164	@ 0xa4
 8003e22:	e7f2      	b.n	8003e0a <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e24:	68f0      	ldr	r0, [r6, #12]
 8003e26:	6803      	ldr	r3, [r0, #0]
 8003e28:	6a1b      	ldr	r3, [r3, #32]
 8003e2a:	4798      	blx	r3
 8003e2c:	280b      	cmp	r0, #11
 8003e2e:	d803      	bhi.n	8003e38 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x4c>
 8003e30:	4b3c      	ldr	r3, [pc, #240]	@ (8003f24 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x138>)
 8003e32:	4a39      	ldr	r2, [pc, #228]	@ (8003f18 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x12c>)
 8003e34:	21a5      	movs	r1, #165	@ 0xa5
 8003e36:	e7e8      	b.n	8003e0a <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003e38:	f016 ff4c 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e3c:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8003f2c <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003e40:	3004      	adds	r0, #4
 8003e42:	f016 ff6c 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e46:	f8d9 0000 	ldr.w	r0, [r9]
 8003e4a:	b110      	cbz	r0, 8003e52 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8003e4c:	6803      	ldr	r3, [r0, #0]
 8003e4e:	68db      	ldr	r3, [r3, #12]
 8003e50:	4798      	blx	r3
    if (*currentTrans)
 8003e52:	f8d9 0000 	ldr.w	r0, [r9]
 8003e56:	b110      	cbz	r0, 8003e5e <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8003e58:	6803      	ldr	r3, [r0, #0]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	4798      	blx	r3
    if (*currentScreen)
 8003e5e:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003f30 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x144>
 8003e62:	f8d8 0000 	ldr.w	r0, [r8]
 8003e66:	b110      	cbz	r0, 8003e6e <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003e68:	6803      	ldr	r3, [r0, #0]
 8003e6a:	695b      	ldr	r3, [r3, #20]
 8003e6c:	4798      	blx	r3
    if (*currentPresenter)
 8003e6e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003e72:	b110      	cbz	r0, 8003e7a <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003e74:	6803      	ldr	r3, [r0, #0]
 8003e76:	685b      	ldr	r3, [r3, #4]
 8003e78:	4798      	blx	r3
    if (*currentScreen)
 8003e7a:	f8d8 0000 	ldr.w	r0, [r8]
 8003e7e:	b110      	cbz	r0, 8003e86 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003e80:	6803      	ldr	r3, [r0, #0]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	4798      	blx	r3
    if (*currentPresenter)
 8003e86:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003e8a:	b110      	cbz	r0, 8003e92 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003e8c:	6803      	ldr	r3, [r0, #0]
 8003e8e:	689b      	ldr	r3, [r3, #8]
 8003e90:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003e92:	68f0      	ldr	r0, [r6, #12]
 8003e94:	2100      	movs	r1, #0
 8003e96:	f7ff ffa5 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 8003e9a:	f04f 0b00 	mov.w	fp, #0
 8003e9e:	4b22      	ldr	r3, [pc, #136]	@ (8003f28 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x13c>)
 8003ea0:	f8c0 b004 	str.w	fp, [r0, #4]
 8003ea4:	4604      	mov	r4, r0
 8003ea6:	f880 b008 	strb.w	fp, [r0, #8]
 8003eaa:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003eac:	68b0      	ldr	r0, [r6, #8]
 8003eae:	6803      	ldr	r3, [r0, #0]
 8003eb0:	4659      	mov	r1, fp
 8003eb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003eb4:	4798      	blx	r3
 8003eb6:	4605      	mov	r5, r0
 8003eb8:	f00b fdc2 	bl	800fa40 <_ZN10SpongeViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ebc:	6870      	ldr	r0, [r6, #4]
 8003ebe:	6803      	ldr	r3, [r0, #0]
 8003ec0:	4659      	mov	r1, fp
 8003ec2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ec4:	4798      	blx	r3
 8003ec6:	4629      	mov	r1, r5
 8003ec8:	4606      	mov	r6, r0
 8003eca:	f00b fd97 	bl	800f9fc <_ZN15SpongePresenterC1ER10SpongeView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8003ece:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003ed0:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003ed4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003ed8:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003edc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ee0:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003ee2:	f8c6 a008 	str.w	sl, [r6, #8]
 8003ee6:	4628      	mov	r0, r5
 8003ee8:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003eea:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003eec:	4798      	blx	r3
    newPresenter->activate();
 8003eee:	6833      	ldr	r3, [r6, #0]
 8003ef0:	4630      	mov	r0, r6
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ef6:	4621      	mov	r1, r4
 8003ef8:	4628      	mov	r0, r5
 8003efa:	f019 f8bd 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003efe:	6823      	ldr	r3, [r4, #0]
 8003f00:	4620      	mov	r0, r4
 8003f02:	691b      	ldr	r3, [r3, #16]
 8003f04:	4798      	blx	r3
    newTransition->invalidate();
 8003f06:	6823      	ldr	r3, [r4, #0]
 8003f08:	695b      	ldr	r3, [r3, #20]
 8003f0a:	4620      	mov	r0, r4
}
 8003f0c:	b001      	add	sp, #4
 8003f0e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f12:	4718      	bx	r3
 8003f14:	0802f619 	.word	0x0802f619
 8003f18:	0802f6a7 	.word	0x0802f6a7
 8003f1c:	0802f777 	.word	0x0802f777
 8003f20:	0802f7be 	.word	0x0802f7be
 8003f24:	0802f861 	.word	0x0802f861
 8003f28:	08031388 	.word	0x08031388
 8003f2c:	200138cc 	.word	0x200138cc
 8003f30:	200138c8 	.word	0x200138c8

08003f34 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv>:
{
 8003f34:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Character_FinalView, Character_FinalPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f38:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003f3c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f3e:	68b0      	ldr	r0, [r6, #8]
 8003f40:	6803      	ldr	r3, [r0, #0]
 8003f42:	6a1b      	ldr	r3, [r3, #32]
 8003f44:	4798      	blx	r3
 8003f46:	f5b0 7ffe 	cmp.w	r0, #508	@ 0x1fc
 8003f4a:	d205      	bcs.n	8003f58 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x24>
 8003f4c:	4b43      	ldr	r3, [pc, #268]	@ (800405c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x128>)
 8003f4e:	4a44      	ldr	r2, [pc, #272]	@ (8004060 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x12c>)
 8003f50:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f52:	4844      	ldr	r0, [pc, #272]	@ (8004064 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x130>)
 8003f54:	f02a f88c 	bl	802e070 <__assert_func>
 8003f58:	6870      	ldr	r0, [r6, #4]
 8003f5a:	6803      	ldr	r3, [r0, #0]
 8003f5c:	6a1b      	ldr	r3, [r3, #32]
 8003f5e:	4798      	blx	r3
 8003f60:	280f      	cmp	r0, #15
 8003f62:	d803      	bhi.n	8003f6c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x38>
 8003f64:	4b40      	ldr	r3, [pc, #256]	@ (8004068 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x134>)
 8003f66:	4a3e      	ldr	r2, [pc, #248]	@ (8004060 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x12c>)
 8003f68:	21a4      	movs	r1, #164	@ 0xa4
 8003f6a:	e7f2      	b.n	8003f52 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003f6c:	68f0      	ldr	r0, [r6, #12]
 8003f6e:	6803      	ldr	r3, [r0, #0]
 8003f70:	6a1b      	ldr	r3, [r3, #32]
 8003f72:	4798      	blx	r3
 8003f74:	280b      	cmp	r0, #11
 8003f76:	d803      	bhi.n	8003f80 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x4c>
 8003f78:	4b3c      	ldr	r3, [pc, #240]	@ (800406c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x138>)
 8003f7a:	4a39      	ldr	r2, [pc, #228]	@ (8004060 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x12c>)
 8003f7c:	21a5      	movs	r1, #165	@ 0xa5
 8003f7e:	e7e8      	b.n	8003f52 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003f80:	f016 fea8 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003f84:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004074 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x140>
 8003f88:	3004      	adds	r0, #4
 8003f8a:	f016 fec8 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003f8e:	f8d9 0000 	ldr.w	r0, [r9]
 8003f92:	b110      	cbz	r0, 8003f9a <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8003f94:	6803      	ldr	r3, [r0, #0]
 8003f96:	68db      	ldr	r3, [r3, #12]
 8003f98:	4798      	blx	r3
    if (*currentTrans)
 8003f9a:	f8d9 0000 	ldr.w	r0, [r9]
 8003f9e:	b110      	cbz	r0, 8003fa6 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8003fa0:	6803      	ldr	r3, [r0, #0]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	4798      	blx	r3
    if (*currentScreen)
 8003fa6:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004078 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x144>
 8003faa:	f8d8 0000 	ldr.w	r0, [r8]
 8003fae:	b110      	cbz	r0, 8003fb6 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003fb0:	6803      	ldr	r3, [r0, #0]
 8003fb2:	695b      	ldr	r3, [r3, #20]
 8003fb4:	4798      	blx	r3
    if (*currentPresenter)
 8003fb6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003fba:	b110      	cbz	r0, 8003fc2 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003fbc:	6803      	ldr	r3, [r0, #0]
 8003fbe:	685b      	ldr	r3, [r3, #4]
 8003fc0:	4798      	blx	r3
    if (*currentScreen)
 8003fc2:	f8d8 0000 	ldr.w	r0, [r8]
 8003fc6:	b110      	cbz	r0, 8003fce <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003fc8:	6803      	ldr	r3, [r0, #0]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	4798      	blx	r3
    if (*currentPresenter)
 8003fce:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003fd2:	b110      	cbz	r0, 8003fda <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003fd4:	6803      	ldr	r3, [r0, #0]
 8003fd6:	689b      	ldr	r3, [r3, #8]
 8003fd8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003fda:	68f0      	ldr	r0, [r6, #12]
 8003fdc:	2100      	movs	r1, #0
 8003fde:	f7ff ff01 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003fe2:	f04f 0b00 	mov.w	fp, #0
 8003fe6:	4b22      	ldr	r3, [pc, #136]	@ (8004070 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x13c>)
 8003fe8:	f8c0 b004 	str.w	fp, [r0, #4]
 8003fec:	4604      	mov	r4, r0
 8003fee:	f880 b008 	strb.w	fp, [r0, #8]
 8003ff2:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ff4:	68b0      	ldr	r0, [r6, #8]
 8003ff6:	6803      	ldr	r3, [r0, #0]
 8003ff8:	4659      	mov	r1, fp
 8003ffa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ffc:	4798      	blx	r3
 8003ffe:	4605      	mov	r5, r0
 8004000:	f006 fb74 	bl	800a6ec <_ZN19Character_FinalViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004004:	6870      	ldr	r0, [r6, #4]
 8004006:	6803      	ldr	r3, [r0, #0]
 8004008:	4659      	mov	r1, fp
 800400a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800400c:	4798      	blx	r3
 800400e:	4629      	mov	r1, r5
 8004010:	4606      	mov	r6, r0
 8004012:	f006 fb49 	bl	800a6a8 <_ZN24Character_FinalPresenterC1ER19Character_FinalView>
    model->bind(newPresenter);
 8004016:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004018:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800401c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004020:	f8c8 5000 	str.w	r5, [r8]
 8004024:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004028:	682b      	ldr	r3, [r5, #0]
 800402a:	f8c6 a008 	str.w	sl, [r6, #8]
 800402e:	4628      	mov	r0, r5
 8004030:	68db      	ldr	r3, [r3, #12]
 8004032:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004034:	4798      	blx	r3
    newPresenter->activate();
 8004036:	6833      	ldr	r3, [r6, #0]
 8004038:	4630      	mov	r0, r6
 800403a:	681b      	ldr	r3, [r3, #0]
 800403c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800403e:	4621      	mov	r1, r4
 8004040:	4628      	mov	r0, r5
 8004042:	f019 f819 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004046:	6823      	ldr	r3, [r4, #0]
 8004048:	4620      	mov	r0, r4
 800404a:	691b      	ldr	r3, [r3, #16]
 800404c:	4798      	blx	r3
    newTransition->invalidate();
 800404e:	6823      	ldr	r3, [r4, #0]
 8004050:	695b      	ldr	r3, [r3, #20]
 8004052:	4620      	mov	r0, r4
}
 8004054:	b001      	add	sp, #4
 8004056:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800405a:	4718      	bx	r3
 800405c:	0802f619 	.word	0x0802f619
 8004060:	0802f904 	.word	0x0802f904
 8004064:	0802f777 	.word	0x0802f777
 8004068:	0802f7be 	.word	0x0802f7be
 800406c:	0802f861 	.word	0x0802f861
 8004070:	08031388 	.word	0x08031388
 8004074:	200138cc 	.word	0x200138cc
 8004078:	200138c8 	.word	0x200138c8

0800407c <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv>:
{
 800407c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<RewardFinalScreenView, RewardFinalScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004080:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004084:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004086:	68b0      	ldr	r0, [r6, #8]
 8004088:	6803      	ldr	r3, [r0, #0]
 800408a:	6a1b      	ldr	r3, [r3, #32]
 800408c:	4798      	blx	r3
 800408e:	f5b0 7fe8 	cmp.w	r0, #464	@ 0x1d0
 8004092:	d205      	bcs.n	80040a0 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x24>
 8004094:	4b43      	ldr	r3, [pc, #268]	@ (80041a4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x128>)
 8004096:	4a44      	ldr	r2, [pc, #272]	@ (80041a8 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x12c>)
 8004098:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800409a:	4844      	ldr	r0, [pc, #272]	@ (80041ac <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x130>)
 800409c:	f029 ffe8 	bl	802e070 <__assert_func>
 80040a0:	6870      	ldr	r0, [r6, #4]
 80040a2:	6803      	ldr	r3, [r0, #0]
 80040a4:	6a1b      	ldr	r3, [r3, #32]
 80040a6:	4798      	blx	r3
 80040a8:	280f      	cmp	r0, #15
 80040aa:	d803      	bhi.n	80040b4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x38>
 80040ac:	4b40      	ldr	r3, [pc, #256]	@ (80041b0 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x134>)
 80040ae:	4a3e      	ldr	r2, [pc, #248]	@ (80041a8 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x12c>)
 80040b0:	21a4      	movs	r1, #164	@ 0xa4
 80040b2:	e7f2      	b.n	800409a <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040b4:	68f0      	ldr	r0, [r6, #12]
 80040b6:	6803      	ldr	r3, [r0, #0]
 80040b8:	6a1b      	ldr	r3, [r3, #32]
 80040ba:	4798      	blx	r3
 80040bc:	280b      	cmp	r0, #11
 80040be:	d803      	bhi.n	80040c8 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x4c>
 80040c0:	4b3c      	ldr	r3, [pc, #240]	@ (80041b4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x138>)
 80040c2:	4a39      	ldr	r2, [pc, #228]	@ (80041a8 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x12c>)
 80040c4:	21a5      	movs	r1, #165	@ 0xa5
 80040c6:	e7e8      	b.n	800409a <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80040c8:	f016 fe04 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040cc:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80041bc <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x140>
 80040d0:	3004      	adds	r0, #4
 80040d2:	f016 fe24 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80040d6:	f8d9 0000 	ldr.w	r0, [r9]
 80040da:	b110      	cbz	r0, 80040e2 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80040dc:	6803      	ldr	r3, [r0, #0]
 80040de:	68db      	ldr	r3, [r3, #12]
 80040e0:	4798      	blx	r3
    if (*currentTrans)
 80040e2:	f8d9 0000 	ldr.w	r0, [r9]
 80040e6:	b110      	cbz	r0, 80040ee <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80040e8:	6803      	ldr	r3, [r0, #0]
 80040ea:	681b      	ldr	r3, [r3, #0]
 80040ec:	4798      	blx	r3
    if (*currentScreen)
 80040ee:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80041c0 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x144>
 80040f2:	f8d8 0000 	ldr.w	r0, [r8]
 80040f6:	b110      	cbz	r0, 80040fe <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80040f8:	6803      	ldr	r3, [r0, #0]
 80040fa:	695b      	ldr	r3, [r3, #20]
 80040fc:	4798      	blx	r3
    if (*currentPresenter)
 80040fe:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004102:	b110      	cbz	r0, 800410a <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004104:	6803      	ldr	r3, [r0, #0]
 8004106:	685b      	ldr	r3, [r3, #4]
 8004108:	4798      	blx	r3
    if (*currentScreen)
 800410a:	f8d8 0000 	ldr.w	r0, [r8]
 800410e:	b110      	cbz	r0, 8004116 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004110:	6803      	ldr	r3, [r0, #0]
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	4798      	blx	r3
    if (*currentPresenter)
 8004116:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800411a:	b110      	cbz	r0, 8004122 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800411c:	6803      	ldr	r3, [r0, #0]
 800411e:	689b      	ldr	r3, [r3, #8]
 8004120:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004122:	68f0      	ldr	r0, [r6, #12]
 8004124:	2100      	movs	r1, #0
 8004126:	f7ff fe5d 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800412a:	f04f 0b00 	mov.w	fp, #0
 800412e:	4b22      	ldr	r3, [pc, #136]	@ (80041b8 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x13c>)
 8004130:	f8c0 b004 	str.w	fp, [r0, #4]
 8004134:	4604      	mov	r4, r0
 8004136:	f880 b008 	strb.w	fp, [r0, #8]
 800413a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800413c:	68b0      	ldr	r0, [r6, #8]
 800413e:	6803      	ldr	r3, [r0, #0]
 8004140:	4659      	mov	r1, fp
 8004142:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004144:	4798      	blx	r3
 8004146:	4605      	mov	r5, r0
 8004148:	f009 ff06 	bl	800df58 <_ZN21RewardFinalScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800414c:	6870      	ldr	r0, [r6, #4]
 800414e:	6803      	ldr	r3, [r0, #0]
 8004150:	4659      	mov	r1, fp
 8004152:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004154:	4798      	blx	r3
 8004156:	4629      	mov	r1, r5
 8004158:	4606      	mov	r6, r0
 800415a:	f009 fedb 	bl	800df14 <_ZN26RewardFinalScreenPresenterC1ER21RewardFinalScreenView>
    model->bind(newPresenter);
 800415e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004160:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004164:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004168:	f8c8 5000 	str.w	r5, [r8]
 800416c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004170:	682b      	ldr	r3, [r5, #0]
 8004172:	f8c6 a008 	str.w	sl, [r6, #8]
 8004176:	4628      	mov	r0, r5
 8004178:	68db      	ldr	r3, [r3, #12]
 800417a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800417c:	4798      	blx	r3
    newPresenter->activate();
 800417e:	6833      	ldr	r3, [r6, #0]
 8004180:	4630      	mov	r0, r6
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004186:	4621      	mov	r1, r4
 8004188:	4628      	mov	r0, r5
 800418a:	f018 ff75 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800418e:	6823      	ldr	r3, [r4, #0]
 8004190:	4620      	mov	r0, r4
 8004192:	691b      	ldr	r3, [r3, #16]
 8004194:	4798      	blx	r3
    newTransition->invalidate();
 8004196:	6823      	ldr	r3, [r4, #0]
 8004198:	695b      	ldr	r3, [r3, #20]
 800419a:	4620      	mov	r0, r4
}
 800419c:	b001      	add	sp, #4
 800419e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041a2:	4718      	bx	r3
 80041a4:	0802f619 	.word	0x0802f619
 80041a8:	0802f9e6 	.word	0x0802f9e6
 80041ac:	0802f777 	.word	0x0802f777
 80041b0:	0802f7be 	.word	0x0802f7be
 80041b4:	0802f861 	.word	0x0802f861
 80041b8:	08031388 	.word	0x08031388
 80041bc:	200138cc 	.word	0x200138cc
 80041c0:	200138c8 	.word	0x200138c8

080041c4 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv>:
{
 80041c4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SakuraFinalScreenView, SakuraFinalScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80041c8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80041cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80041ce:	68b0      	ldr	r0, [r6, #8]
 80041d0:	6803      	ldr	r3, [r0, #0]
 80041d2:	6a1b      	ldr	r3, [r3, #32]
 80041d4:	4798      	blx	r3
 80041d6:	f5b0 7f12 	cmp.w	r0, #584	@ 0x248
 80041da:	d205      	bcs.n	80041e8 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x24>
 80041dc:	4b43      	ldr	r3, [pc, #268]	@ (80042ec <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x128>)
 80041de:	4a44      	ldr	r2, [pc, #272]	@ (80042f0 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x12c>)
 80041e0:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041e2:	4844      	ldr	r0, [pc, #272]	@ (80042f4 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x130>)
 80041e4:	f029 ff44 	bl	802e070 <__assert_func>
 80041e8:	6870      	ldr	r0, [r6, #4]
 80041ea:	6803      	ldr	r3, [r0, #0]
 80041ec:	6a1b      	ldr	r3, [r3, #32]
 80041ee:	4798      	blx	r3
 80041f0:	280f      	cmp	r0, #15
 80041f2:	d803      	bhi.n	80041fc <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x38>
 80041f4:	4b40      	ldr	r3, [pc, #256]	@ (80042f8 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x134>)
 80041f6:	4a3e      	ldr	r2, [pc, #248]	@ (80042f0 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x12c>)
 80041f8:	21a4      	movs	r1, #164	@ 0xa4
 80041fa:	e7f2      	b.n	80041e2 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041fc:	68f0      	ldr	r0, [r6, #12]
 80041fe:	6803      	ldr	r3, [r0, #0]
 8004200:	6a1b      	ldr	r3, [r3, #32]
 8004202:	4798      	blx	r3
 8004204:	280b      	cmp	r0, #11
 8004206:	d803      	bhi.n	8004210 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x4c>
 8004208:	4b3c      	ldr	r3, [pc, #240]	@ (80042fc <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x138>)
 800420a:	4a39      	ldr	r2, [pc, #228]	@ (80042f0 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x12c>)
 800420c:	21a5      	movs	r1, #165	@ 0xa5
 800420e:	e7e8      	b.n	80041e2 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004210:	f016 fd60 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004214:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004304 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x140>
 8004218:	3004      	adds	r0, #4
 800421a:	f016 fd80 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800421e:	f8d9 0000 	ldr.w	r0, [r9]
 8004222:	b110      	cbz	r0, 800422a <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004224:	6803      	ldr	r3, [r0, #0]
 8004226:	68db      	ldr	r3, [r3, #12]
 8004228:	4798      	blx	r3
    if (*currentTrans)
 800422a:	f8d9 0000 	ldr.w	r0, [r9]
 800422e:	b110      	cbz	r0, 8004236 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004230:	6803      	ldr	r3, [r0, #0]
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	4798      	blx	r3
    if (*currentScreen)
 8004236:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004308 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x144>
 800423a:	f8d8 0000 	ldr.w	r0, [r8]
 800423e:	b110      	cbz	r0, 8004246 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004240:	6803      	ldr	r3, [r0, #0]
 8004242:	695b      	ldr	r3, [r3, #20]
 8004244:	4798      	blx	r3
    if (*currentPresenter)
 8004246:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800424a:	b110      	cbz	r0, 8004252 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800424c:	6803      	ldr	r3, [r0, #0]
 800424e:	685b      	ldr	r3, [r3, #4]
 8004250:	4798      	blx	r3
    if (*currentScreen)
 8004252:	f8d8 0000 	ldr.w	r0, [r8]
 8004256:	b110      	cbz	r0, 800425e <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004258:	6803      	ldr	r3, [r0, #0]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	4798      	blx	r3
    if (*currentPresenter)
 800425e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004262:	b110      	cbz	r0, 800426a <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004264:	6803      	ldr	r3, [r0, #0]
 8004266:	689b      	ldr	r3, [r3, #8]
 8004268:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800426a:	68f0      	ldr	r0, [r6, #12]
 800426c:	2100      	movs	r1, #0
 800426e:	f7ff fdb9 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004272:	f04f 0b00 	mov.w	fp, #0
 8004276:	4b22      	ldr	r3, [pc, #136]	@ (8004300 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x13c>)
 8004278:	f8c0 b004 	str.w	fp, [r0, #4]
 800427c:	4604      	mov	r4, r0
 800427e:	f880 b008 	strb.w	fp, [r0, #8]
 8004282:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004284:	68b0      	ldr	r0, [r6, #8]
 8004286:	6803      	ldr	r3, [r0, #0]
 8004288:	4659      	mov	r1, fp
 800428a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800428c:	4798      	blx	r3
 800428e:	4605      	mov	r5, r0
 8004290:	f009 feda 	bl	800e048 <_ZN21SakuraFinalScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004294:	6870      	ldr	r0, [r6, #4]
 8004296:	6803      	ldr	r3, [r0, #0]
 8004298:	4659      	mov	r1, fp
 800429a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800429c:	4798      	blx	r3
 800429e:	4629      	mov	r1, r5
 80042a0:	4606      	mov	r6, r0
 80042a2:	f009 feaf 	bl	800e004 <_ZN26SakuraFinalScreenPresenterC1ER21SakuraFinalScreenView>
    model->bind(newPresenter);
 80042a6:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80042a8:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80042ac:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80042b0:	f8c8 5000 	str.w	r5, [r8]
 80042b4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80042b8:	682b      	ldr	r3, [r5, #0]
 80042ba:	f8c6 a008 	str.w	sl, [r6, #8]
 80042be:	4628      	mov	r0, r5
 80042c0:	68db      	ldr	r3, [r3, #12]
 80042c2:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80042c4:	4798      	blx	r3
    newPresenter->activate();
 80042c6:	6833      	ldr	r3, [r6, #0]
 80042c8:	4630      	mov	r0, r6
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80042ce:	4621      	mov	r1, r4
 80042d0:	4628      	mov	r0, r5
 80042d2:	f018 fed1 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042d6:	6823      	ldr	r3, [r4, #0]
 80042d8:	4620      	mov	r0, r4
 80042da:	691b      	ldr	r3, [r3, #16]
 80042dc:	4798      	blx	r3
    newTransition->invalidate();
 80042de:	6823      	ldr	r3, [r4, #0]
 80042e0:	695b      	ldr	r3, [r3, #20]
 80042e2:	4620      	mov	r0, r4
}
 80042e4:	b001      	add	sp, #4
 80042e6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042ea:	4718      	bx	r3
 80042ec:	0802f619 	.word	0x0802f619
 80042f0:	0802facc 	.word	0x0802facc
 80042f4:	0802f777 	.word	0x0802f777
 80042f8:	0802f7be 	.word	0x0802f7be
 80042fc:	0802f861 	.word	0x0802f861
 8004300:	08031388 	.word	0x08031388
 8004304:	200138cc 	.word	0x200138cc
 8004308:	200138c8 	.word	0x200138c8

0800430c <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv>:
{
 800430c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Character1View, Character1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004310:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004314:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004316:	68b0      	ldr	r0, [r6, #8]
 8004318:	6803      	ldr	r3, [r0, #0]
 800431a:	6a1b      	ldr	r3, [r3, #32]
 800431c:	4798      	blx	r3
 800431e:	f5b0 7f90 	cmp.w	r0, #288	@ 0x120
 8004322:	d205      	bcs.n	8004330 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x24>
 8004324:	4b43      	ldr	r3, [pc, #268]	@ (8004434 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x128>)
 8004326:	4a44      	ldr	r2, [pc, #272]	@ (8004438 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x12c>)
 8004328:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800432a:	4844      	ldr	r0, [pc, #272]	@ (800443c <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x130>)
 800432c:	f029 fea0 	bl	802e070 <__assert_func>
 8004330:	6870      	ldr	r0, [r6, #4]
 8004332:	6803      	ldr	r3, [r0, #0]
 8004334:	6a1b      	ldr	r3, [r3, #32]
 8004336:	4798      	blx	r3
 8004338:	280f      	cmp	r0, #15
 800433a:	d803      	bhi.n	8004344 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x38>
 800433c:	4b40      	ldr	r3, [pc, #256]	@ (8004440 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x134>)
 800433e:	4a3e      	ldr	r2, [pc, #248]	@ (8004438 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x12c>)
 8004340:	21a4      	movs	r1, #164	@ 0xa4
 8004342:	e7f2      	b.n	800432a <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004344:	68f0      	ldr	r0, [r6, #12]
 8004346:	6803      	ldr	r3, [r0, #0]
 8004348:	6a1b      	ldr	r3, [r3, #32]
 800434a:	4798      	blx	r3
 800434c:	280b      	cmp	r0, #11
 800434e:	d803      	bhi.n	8004358 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x4c>
 8004350:	4b3c      	ldr	r3, [pc, #240]	@ (8004444 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x138>)
 8004352:	4a39      	ldr	r2, [pc, #228]	@ (8004438 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x12c>)
 8004354:	21a5      	movs	r1, #165	@ 0xa5
 8004356:	e7e8      	b.n	800432a <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004358:	f016 fcbc 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800435c:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 800444c <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x140>
 8004360:	3004      	adds	r0, #4
 8004362:	f016 fcdc 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004366:	f8d9 0000 	ldr.w	r0, [r9]
 800436a:	b110      	cbz	r0, 8004372 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 800436c:	6803      	ldr	r3, [r0, #0]
 800436e:	68db      	ldr	r3, [r3, #12]
 8004370:	4798      	blx	r3
    if (*currentTrans)
 8004372:	f8d9 0000 	ldr.w	r0, [r9]
 8004376:	b110      	cbz	r0, 800437e <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004378:	6803      	ldr	r3, [r0, #0]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	4798      	blx	r3
    if (*currentScreen)
 800437e:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004450 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x144>
 8004382:	f8d8 0000 	ldr.w	r0, [r8]
 8004386:	b110      	cbz	r0, 800438e <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004388:	6803      	ldr	r3, [r0, #0]
 800438a:	695b      	ldr	r3, [r3, #20]
 800438c:	4798      	blx	r3
    if (*currentPresenter)
 800438e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004392:	b110      	cbz	r0, 800439a <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004394:	6803      	ldr	r3, [r0, #0]
 8004396:	685b      	ldr	r3, [r3, #4]
 8004398:	4798      	blx	r3
    if (*currentScreen)
 800439a:	f8d8 0000 	ldr.w	r0, [r8]
 800439e:	b110      	cbz	r0, 80043a6 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80043a0:	6803      	ldr	r3, [r0, #0]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	4798      	blx	r3
    if (*currentPresenter)
 80043a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80043aa:	b110      	cbz	r0, 80043b2 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80043ac:	6803      	ldr	r3, [r0, #0]
 80043ae:	689b      	ldr	r3, [r3, #8]
 80043b0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80043b2:	68f0      	ldr	r0, [r6, #12]
 80043b4:	2100      	movs	r1, #0
 80043b6:	f7ff fd15 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80043ba:	f04f 0b00 	mov.w	fp, #0
 80043be:	4b22      	ldr	r3, [pc, #136]	@ (8004448 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x13c>)
 80043c0:	f8c0 b004 	str.w	fp, [r0, #4]
 80043c4:	4604      	mov	r4, r0
 80043c6:	f880 b008 	strb.w	fp, [r0, #8]
 80043ca:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80043cc:	68b0      	ldr	r0, [r6, #8]
 80043ce:	6803      	ldr	r3, [r0, #0]
 80043d0:	4659      	mov	r1, fp
 80043d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043d4:	4798      	blx	r3
 80043d6:	4605      	mov	r5, r0
 80043d8:	f005 ff10 	bl	800a1fc <_ZN14Character1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80043dc:	6870      	ldr	r0, [r6, #4]
 80043de:	6803      	ldr	r3, [r0, #0]
 80043e0:	4659      	mov	r1, fp
 80043e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043e4:	4798      	blx	r3
 80043e6:	4629      	mov	r1, r5
 80043e8:	4606      	mov	r6, r0
 80043ea:	f005 fee5 	bl	800a1b8 <_ZN19Character1PresenterC1ER14Character1View>
    model->bind(newPresenter);
 80043ee:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80043f0:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80043f4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80043f8:	f8c8 5000 	str.w	r5, [r8]
 80043fc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004400:	682b      	ldr	r3, [r5, #0]
 8004402:	f8c6 a008 	str.w	sl, [r6, #8]
 8004406:	4628      	mov	r0, r5
 8004408:	68db      	ldr	r3, [r3, #12]
 800440a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800440c:	4798      	blx	r3
    newPresenter->activate();
 800440e:	6833      	ldr	r3, [r6, #0]
 8004410:	4630      	mov	r0, r6
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004416:	4621      	mov	r1, r4
 8004418:	4628      	mov	r0, r5
 800441a:	f018 fe2d 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800441e:	6823      	ldr	r3, [r4, #0]
 8004420:	4620      	mov	r0, r4
 8004422:	691b      	ldr	r3, [r3, #16]
 8004424:	4798      	blx	r3
    newTransition->invalidate();
 8004426:	6823      	ldr	r3, [r4, #0]
 8004428:	695b      	ldr	r3, [r3, #20]
 800442a:	4620      	mov	r0, r4
}
 800442c:	b001      	add	sp, #4
 800442e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004432:	4718      	bx	r3
 8004434:	0802f619 	.word	0x0802f619
 8004438:	0802fbb2 	.word	0x0802fbb2
 800443c:	0802f777 	.word	0x0802f777
 8004440:	0802f7be 	.word	0x0802f7be
 8004444:	0802f861 	.word	0x0802f861
 8004448:	08031388 	.word	0x08031388
 800444c:	200138cc 	.word	0x200138cc
 8004450:	200138c8 	.word	0x200138c8

08004454 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv>:
{
 8004454:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<NarutoGameScreen2View, NarutoGameScreen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004458:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800445c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800445e:	68b0      	ldr	r0, [r6, #8]
 8004460:	6803      	ldr	r3, [r0, #0]
 8004462:	6a1b      	ldr	r3, [r3, #32]
 8004464:	4798      	blx	r3
 8004466:	f5b0 6f2d 	cmp.w	r0, #2768	@ 0xad0
 800446a:	d205      	bcs.n	8004478 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x24>
 800446c:	4b43      	ldr	r3, [pc, #268]	@ (800457c <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x128>)
 800446e:	4a44      	ldr	r2, [pc, #272]	@ (8004580 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x12c>)
 8004470:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004472:	4844      	ldr	r0, [pc, #272]	@ (8004584 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x130>)
 8004474:	f029 fdfc 	bl	802e070 <__assert_func>
 8004478:	6870      	ldr	r0, [r6, #4]
 800447a:	6803      	ldr	r3, [r0, #0]
 800447c:	6a1b      	ldr	r3, [r3, #32]
 800447e:	4798      	blx	r3
 8004480:	280f      	cmp	r0, #15
 8004482:	d803      	bhi.n	800448c <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x38>
 8004484:	4b40      	ldr	r3, [pc, #256]	@ (8004588 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x134>)
 8004486:	4a3e      	ldr	r2, [pc, #248]	@ (8004580 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x12c>)
 8004488:	21a4      	movs	r1, #164	@ 0xa4
 800448a:	e7f2      	b.n	8004472 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800448c:	68f0      	ldr	r0, [r6, #12]
 800448e:	6803      	ldr	r3, [r0, #0]
 8004490:	6a1b      	ldr	r3, [r3, #32]
 8004492:	4798      	blx	r3
 8004494:	280b      	cmp	r0, #11
 8004496:	d803      	bhi.n	80044a0 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x4c>
 8004498:	4b3c      	ldr	r3, [pc, #240]	@ (800458c <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x138>)
 800449a:	4a39      	ldr	r2, [pc, #228]	@ (8004580 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x12c>)
 800449c:	21a5      	movs	r1, #165	@ 0xa5
 800449e:	e7e8      	b.n	8004472 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80044a0:	f016 fc18 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80044a4:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004594 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x140>
 80044a8:	3004      	adds	r0, #4
 80044aa:	f016 fc38 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80044ae:	f8d9 0000 	ldr.w	r0, [r9]
 80044b2:	b110      	cbz	r0, 80044ba <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80044b4:	6803      	ldr	r3, [r0, #0]
 80044b6:	68db      	ldr	r3, [r3, #12]
 80044b8:	4798      	blx	r3
    if (*currentTrans)
 80044ba:	f8d9 0000 	ldr.w	r0, [r9]
 80044be:	b110      	cbz	r0, 80044c6 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80044c0:	6803      	ldr	r3, [r0, #0]
 80044c2:	681b      	ldr	r3, [r3, #0]
 80044c4:	4798      	blx	r3
    if (*currentScreen)
 80044c6:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004598 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x144>
 80044ca:	f8d8 0000 	ldr.w	r0, [r8]
 80044ce:	b110      	cbz	r0, 80044d6 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80044d0:	6803      	ldr	r3, [r0, #0]
 80044d2:	695b      	ldr	r3, [r3, #20]
 80044d4:	4798      	blx	r3
    if (*currentPresenter)
 80044d6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80044da:	b110      	cbz	r0, 80044e2 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80044dc:	6803      	ldr	r3, [r0, #0]
 80044de:	685b      	ldr	r3, [r3, #4]
 80044e0:	4798      	blx	r3
    if (*currentScreen)
 80044e2:	f8d8 0000 	ldr.w	r0, [r8]
 80044e6:	b110      	cbz	r0, 80044ee <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80044e8:	6803      	ldr	r3, [r0, #0]
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	4798      	blx	r3
    if (*currentPresenter)
 80044ee:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80044f2:	b110      	cbz	r0, 80044fa <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80044f4:	6803      	ldr	r3, [r0, #0]
 80044f6:	689b      	ldr	r3, [r3, #8]
 80044f8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044fa:	68f0      	ldr	r0, [r6, #12]
 80044fc:	2100      	movs	r1, #0
 80044fe:	f7ff fc71 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004502:	f04f 0b00 	mov.w	fp, #0
 8004506:	4b22      	ldr	r3, [pc, #136]	@ (8004590 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x13c>)
 8004508:	f8c0 b004 	str.w	fp, [r0, #4]
 800450c:	4604      	mov	r4, r0
 800450e:	f880 b008 	strb.w	fp, [r0, #8]
 8004512:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004514:	68b0      	ldr	r0, [r6, #8]
 8004516:	6803      	ldr	r3, [r0, #0]
 8004518:	4659      	mov	r1, fp
 800451a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800451c:	4798      	blx	r3
 800451e:	4605      	mov	r5, r0
 8004520:	f008 f8b6 	bl	800c690 <_ZN21NarutoGameScreen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004524:	6870      	ldr	r0, [r6, #4]
 8004526:	6803      	ldr	r3, [r0, #0]
 8004528:	4659      	mov	r1, fp
 800452a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800452c:	4798      	blx	r3
 800452e:	4629      	mov	r1, r5
 8004530:	4606      	mov	r6, r0
 8004532:	f008 f883 	bl	800c63c <_ZN26NarutoGameScreen2PresenterC1ER21NarutoGameScreen2View>
    model->bind(newPresenter);
 8004536:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004538:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800453c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004540:	f8c8 5000 	str.w	r5, [r8]
 8004544:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004548:	682b      	ldr	r3, [r5, #0]
 800454a:	f8c6 a008 	str.w	sl, [r6, #8]
 800454e:	4628      	mov	r0, r5
 8004550:	68db      	ldr	r3, [r3, #12]
 8004552:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004554:	4798      	blx	r3
    newPresenter->activate();
 8004556:	6833      	ldr	r3, [r6, #0]
 8004558:	4630      	mov	r0, r6
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800455e:	4621      	mov	r1, r4
 8004560:	4628      	mov	r0, r5
 8004562:	f018 fd89 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004566:	6823      	ldr	r3, [r4, #0]
 8004568:	4620      	mov	r0, r4
 800456a:	691b      	ldr	r3, [r3, #16]
 800456c:	4798      	blx	r3
    newTransition->invalidate();
 800456e:	6823      	ldr	r3, [r4, #0]
 8004570:	695b      	ldr	r3, [r3, #20]
 8004572:	4620      	mov	r0, r4
}
 8004574:	b001      	add	sp, #4
 8004576:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800457a:	4718      	bx	r3
 800457c:	0802f619 	.word	0x0802f619
 8004580:	0802fc8a 	.word	0x0802fc8a
 8004584:	0802f777 	.word	0x0802f777
 8004588:	0802f7be 	.word	0x0802f7be
 800458c:	0802f861 	.word	0x0802f861
 8004590:	08031388 	.word	0x08031388
 8004594:	200138cc 	.word	0x200138cc
 8004598:	200138c8 	.word	0x200138c8

0800459c <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv>:
{
 800459c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SakuraGameScreenView, SakuraGameScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045a0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80045a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045a6:	68b0      	ldr	r0, [r6, #8]
 80045a8:	6803      	ldr	r3, [r0, #0]
 80045aa:	6a1b      	ldr	r3, [r3, #32]
 80045ac:	4798      	blx	r3
 80045ae:	f5b0 6f2d 	cmp.w	r0, #2768	@ 0xad0
 80045b2:	d205      	bcs.n	80045c0 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x24>
 80045b4:	4b43      	ldr	r3, [pc, #268]	@ (80046c4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x128>)
 80045b6:	4a44      	ldr	r2, [pc, #272]	@ (80046c8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x12c>)
 80045b8:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045ba:	4844      	ldr	r0, [pc, #272]	@ (80046cc <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x130>)
 80045bc:	f029 fd58 	bl	802e070 <__assert_func>
 80045c0:	6870      	ldr	r0, [r6, #4]
 80045c2:	6803      	ldr	r3, [r0, #0]
 80045c4:	6a1b      	ldr	r3, [r3, #32]
 80045c6:	4798      	blx	r3
 80045c8:	280f      	cmp	r0, #15
 80045ca:	d803      	bhi.n	80045d4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x38>
 80045cc:	4b40      	ldr	r3, [pc, #256]	@ (80046d0 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x134>)
 80045ce:	4a3e      	ldr	r2, [pc, #248]	@ (80046c8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x12c>)
 80045d0:	21a4      	movs	r1, #164	@ 0xa4
 80045d2:	e7f2      	b.n	80045ba <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80045d4:	68f0      	ldr	r0, [r6, #12]
 80045d6:	6803      	ldr	r3, [r0, #0]
 80045d8:	6a1b      	ldr	r3, [r3, #32]
 80045da:	4798      	blx	r3
 80045dc:	280b      	cmp	r0, #11
 80045de:	d803      	bhi.n	80045e8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x4c>
 80045e0:	4b3c      	ldr	r3, [pc, #240]	@ (80046d4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x138>)
 80045e2:	4a39      	ldr	r2, [pc, #228]	@ (80046c8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x12c>)
 80045e4:	21a5      	movs	r1, #165	@ 0xa5
 80045e6:	e7e8      	b.n	80045ba <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80045e8:	f016 fb74 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80045ec:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80046dc <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x140>
 80045f0:	3004      	adds	r0, #4
 80045f2:	f016 fb94 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045f6:	f8d9 0000 	ldr.w	r0, [r9]
 80045fa:	b110      	cbz	r0, 8004602 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80045fc:	6803      	ldr	r3, [r0, #0]
 80045fe:	68db      	ldr	r3, [r3, #12]
 8004600:	4798      	blx	r3
    if (*currentTrans)
 8004602:	f8d9 0000 	ldr.w	r0, [r9]
 8004606:	b110      	cbz	r0, 800460e <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004608:	6803      	ldr	r3, [r0, #0]
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	4798      	blx	r3
    if (*currentScreen)
 800460e:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80046e0 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x144>
 8004612:	f8d8 0000 	ldr.w	r0, [r8]
 8004616:	b110      	cbz	r0, 800461e <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004618:	6803      	ldr	r3, [r0, #0]
 800461a:	695b      	ldr	r3, [r3, #20]
 800461c:	4798      	blx	r3
    if (*currentPresenter)
 800461e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004622:	b110      	cbz	r0, 800462a <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004624:	6803      	ldr	r3, [r0, #0]
 8004626:	685b      	ldr	r3, [r3, #4]
 8004628:	4798      	blx	r3
    if (*currentScreen)
 800462a:	f8d8 0000 	ldr.w	r0, [r8]
 800462e:	b110      	cbz	r0, 8004636 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004630:	6803      	ldr	r3, [r0, #0]
 8004632:	681b      	ldr	r3, [r3, #0]
 8004634:	4798      	blx	r3
    if (*currentPresenter)
 8004636:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800463a:	b110      	cbz	r0, 8004642 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800463c:	6803      	ldr	r3, [r0, #0]
 800463e:	689b      	ldr	r3, [r3, #8]
 8004640:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004642:	68f0      	ldr	r0, [r6, #12]
 8004644:	2100      	movs	r1, #0
 8004646:	f7ff fbcd 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800464a:	f04f 0b00 	mov.w	fp, #0
 800464e:	4b22      	ldr	r3, [pc, #136]	@ (80046d8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x13c>)
 8004650:	f8c0 b004 	str.w	fp, [r0, #4]
 8004654:	4604      	mov	r4, r0
 8004656:	f880 b008 	strb.w	fp, [r0, #8]
 800465a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800465c:	68b0      	ldr	r0, [r6, #8]
 800465e:	6803      	ldr	r3, [r0, #0]
 8004660:	4659      	mov	r1, fp
 8004662:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004664:	4798      	blx	r3
 8004666:	4605      	mov	r5, r0
 8004668:	f009 fd32 	bl	800e0d0 <_ZN20SakuraGameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800466c:	6870      	ldr	r0, [r6, #4]
 800466e:	6803      	ldr	r3, [r0, #0]
 8004670:	4659      	mov	r1, fp
 8004672:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004674:	4798      	blx	r3
 8004676:	4629      	mov	r1, r5
 8004678:	4606      	mov	r6, r0
 800467a:	f009 fcff 	bl	800e07c <_ZN25SakuraGameScreenPresenterC1ER20SakuraGameScreenView>
    model->bind(newPresenter);
 800467e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004680:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004684:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004688:	f8c8 5000 	str.w	r5, [r8]
 800468c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004690:	682b      	ldr	r3, [r5, #0]
 8004692:	f8c6 a008 	str.w	sl, [r6, #8]
 8004696:	4628      	mov	r0, r5
 8004698:	68db      	ldr	r3, [r3, #12]
 800469a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800469c:	4798      	blx	r3
    newPresenter->activate();
 800469e:	6833      	ldr	r3, [r6, #0]
 80046a0:	4630      	mov	r0, r6
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046a6:	4621      	mov	r1, r4
 80046a8:	4628      	mov	r0, r5
 80046aa:	f018 fce5 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046ae:	6823      	ldr	r3, [r4, #0]
 80046b0:	4620      	mov	r0, r4
 80046b2:	691b      	ldr	r3, [r3, #16]
 80046b4:	4798      	blx	r3
    newTransition->invalidate();
 80046b6:	6823      	ldr	r3, [r4, #0]
 80046b8:	695b      	ldr	r3, [r3, #20]
 80046ba:	4620      	mov	r0, r4
}
 80046bc:	b001      	add	sp, #4
 80046be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046c2:	4718      	bx	r3
 80046c4:	0802f619 	.word	0x0802f619
 80046c8:	0802fd70 	.word	0x0802fd70
 80046cc:	0802f777 	.word	0x0802f777
 80046d0:	0802f7be 	.word	0x0802f7be
 80046d4:	0802f861 	.word	0x0802f861
 80046d8:	08031388 	.word	0x08031388
 80046dc:	200138cc 	.word	0x200138cc
 80046e0:	200138c8 	.word	0x200138c8

080046e4 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv>:
{
 80046e4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SakuraMainScreenView, SakuraMainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046e8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80046ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046ee:	68b0      	ldr	r0, [r6, #8]
 80046f0:	6803      	ldr	r3, [r0, #0]
 80046f2:	6a1b      	ldr	r3, [r3, #32]
 80046f4:	4798      	blx	r3
 80046f6:	f5b0 7f30 	cmp.w	r0, #704	@ 0x2c0
 80046fa:	d205      	bcs.n	8004708 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x24>
 80046fc:	4b43      	ldr	r3, [pc, #268]	@ (800480c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x128>)
 80046fe:	4a44      	ldr	r2, [pc, #272]	@ (8004810 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x12c>)
 8004700:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004702:	4844      	ldr	r0, [pc, #272]	@ (8004814 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x130>)
 8004704:	f029 fcb4 	bl	802e070 <__assert_func>
 8004708:	6870      	ldr	r0, [r6, #4]
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	6a1b      	ldr	r3, [r3, #32]
 800470e:	4798      	blx	r3
 8004710:	280f      	cmp	r0, #15
 8004712:	d803      	bhi.n	800471c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x38>
 8004714:	4b40      	ldr	r3, [pc, #256]	@ (8004818 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x134>)
 8004716:	4a3e      	ldr	r2, [pc, #248]	@ (8004810 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x12c>)
 8004718:	21a4      	movs	r1, #164	@ 0xa4
 800471a:	e7f2      	b.n	8004702 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800471c:	68f0      	ldr	r0, [r6, #12]
 800471e:	6803      	ldr	r3, [r0, #0]
 8004720:	6a1b      	ldr	r3, [r3, #32]
 8004722:	4798      	blx	r3
 8004724:	280b      	cmp	r0, #11
 8004726:	d803      	bhi.n	8004730 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x4c>
 8004728:	4b3c      	ldr	r3, [pc, #240]	@ (800481c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x138>)
 800472a:	4a39      	ldr	r2, [pc, #228]	@ (8004810 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x12c>)
 800472c:	21a5      	movs	r1, #165	@ 0xa5
 800472e:	e7e8      	b.n	8004702 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004730:	f016 fad0 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004734:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004824 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x140>
 8004738:	3004      	adds	r0, #4
 800473a:	f016 faf0 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800473e:	f8d9 0000 	ldr.w	r0, [r9]
 8004742:	b110      	cbz	r0, 800474a <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004744:	6803      	ldr	r3, [r0, #0]
 8004746:	68db      	ldr	r3, [r3, #12]
 8004748:	4798      	blx	r3
    if (*currentTrans)
 800474a:	f8d9 0000 	ldr.w	r0, [r9]
 800474e:	b110      	cbz	r0, 8004756 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004750:	6803      	ldr	r3, [r0, #0]
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	4798      	blx	r3
    if (*currentScreen)
 8004756:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004828 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x144>
 800475a:	f8d8 0000 	ldr.w	r0, [r8]
 800475e:	b110      	cbz	r0, 8004766 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004760:	6803      	ldr	r3, [r0, #0]
 8004762:	695b      	ldr	r3, [r3, #20]
 8004764:	4798      	blx	r3
    if (*currentPresenter)
 8004766:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800476a:	b110      	cbz	r0, 8004772 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800476c:	6803      	ldr	r3, [r0, #0]
 800476e:	685b      	ldr	r3, [r3, #4]
 8004770:	4798      	blx	r3
    if (*currentScreen)
 8004772:	f8d8 0000 	ldr.w	r0, [r8]
 8004776:	b110      	cbz	r0, 800477e <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004778:	6803      	ldr	r3, [r0, #0]
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	4798      	blx	r3
    if (*currentPresenter)
 800477e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004782:	b110      	cbz	r0, 800478a <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004784:	6803      	ldr	r3, [r0, #0]
 8004786:	689b      	ldr	r3, [r3, #8]
 8004788:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800478a:	68f0      	ldr	r0, [r6, #12]
 800478c:	2100      	movs	r1, #0
 800478e:	f7ff fb29 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004792:	f04f 0b00 	mov.w	fp, #0
 8004796:	4b22      	ldr	r3, [pc, #136]	@ (8004820 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x13c>)
 8004798:	f8c0 b004 	str.w	fp, [r0, #4]
 800479c:	4604      	mov	r4, r0
 800479e:	f880 b008 	strb.w	fp, [r0, #8]
 80047a2:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047a4:	68b0      	ldr	r0, [r6, #8]
 80047a6:	6803      	ldr	r3, [r0, #0]
 80047a8:	4659      	mov	r1, fp
 80047aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047ac:	4798      	blx	r3
 80047ae:	4605      	mov	r5, r0
 80047b0:	f00b f90a 	bl	800f9c8 <_ZN20SakuraMainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047b4:	6870      	ldr	r0, [r6, #4]
 80047b6:	6803      	ldr	r3, [r0, #0]
 80047b8:	4659      	mov	r1, fp
 80047ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047bc:	4798      	blx	r3
 80047be:	4629      	mov	r1, r5
 80047c0:	4606      	mov	r6, r0
 80047c2:	f00b f8df 	bl	800f984 <_ZN25SakuraMainScreenPresenterC1ER20SakuraMainScreenView>
    model->bind(newPresenter);
 80047c6:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80047c8:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80047cc:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80047d0:	f8c8 5000 	str.w	r5, [r8]
 80047d4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047d8:	682b      	ldr	r3, [r5, #0]
 80047da:	f8c6 a008 	str.w	sl, [r6, #8]
 80047de:	4628      	mov	r0, r5
 80047e0:	68db      	ldr	r3, [r3, #12]
 80047e2:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80047e4:	4798      	blx	r3
    newPresenter->activate();
 80047e6:	6833      	ldr	r3, [r6, #0]
 80047e8:	4630      	mov	r0, r6
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80047ee:	4621      	mov	r1, r4
 80047f0:	4628      	mov	r0, r5
 80047f2:	f018 fc41 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80047f6:	6823      	ldr	r3, [r4, #0]
 80047f8:	4620      	mov	r0, r4
 80047fa:	691b      	ldr	r3, [r3, #16]
 80047fc:	4798      	blx	r3
    newTransition->invalidate();
 80047fe:	6823      	ldr	r3, [r4, #0]
 8004800:	695b      	ldr	r3, [r3, #20]
 8004802:	4620      	mov	r0, r4
}
 8004804:	b001      	add	sp, #4
 8004806:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800480a:	4718      	bx	r3
 800480c:	0802f619 	.word	0x0802f619
 8004810:	0802fe54 	.word	0x0802fe54
 8004814:	0802f777 	.word	0x0802f777
 8004818:	0802f7be 	.word	0x0802f7be
 800481c:	0802f861 	.word	0x0802f861
 8004820:	08031388 	.word	0x08031388
 8004824:	200138cc 	.word	0x200138cc
 8004828:	200138c8 	.word	0x200138c8

0800482c <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv>:
{
 800482c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<RewardScreenView, RewardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004830:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004834:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004836:	68b0      	ldr	r0, [r6, #8]
 8004838:	6803      	ldr	r3, [r0, #0]
 800483a:	6a1b      	ldr	r3, [r3, #32]
 800483c:	4798      	blx	r3
 800483e:	f5b0 7fbc 	cmp.w	r0, #376	@ 0x178
 8004842:	d205      	bcs.n	8004850 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x24>
 8004844:	4b43      	ldr	r3, [pc, #268]	@ (8004954 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x128>)
 8004846:	4a44      	ldr	r2, [pc, #272]	@ (8004958 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x12c>)
 8004848:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800484a:	4844      	ldr	r0, [pc, #272]	@ (800495c <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x130>)
 800484c:	f029 fc10 	bl	802e070 <__assert_func>
 8004850:	6870      	ldr	r0, [r6, #4]
 8004852:	6803      	ldr	r3, [r0, #0]
 8004854:	6a1b      	ldr	r3, [r3, #32]
 8004856:	4798      	blx	r3
 8004858:	280f      	cmp	r0, #15
 800485a:	d803      	bhi.n	8004864 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x38>
 800485c:	4b40      	ldr	r3, [pc, #256]	@ (8004960 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x134>)
 800485e:	4a3e      	ldr	r2, [pc, #248]	@ (8004958 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x12c>)
 8004860:	21a4      	movs	r1, #164	@ 0xa4
 8004862:	e7f2      	b.n	800484a <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004864:	68f0      	ldr	r0, [r6, #12]
 8004866:	6803      	ldr	r3, [r0, #0]
 8004868:	6a1b      	ldr	r3, [r3, #32]
 800486a:	4798      	blx	r3
 800486c:	280b      	cmp	r0, #11
 800486e:	d803      	bhi.n	8004878 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x4c>
 8004870:	4b3c      	ldr	r3, [pc, #240]	@ (8004964 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x138>)
 8004872:	4a39      	ldr	r2, [pc, #228]	@ (8004958 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x12c>)
 8004874:	21a5      	movs	r1, #165	@ 0xa5
 8004876:	e7e8      	b.n	800484a <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004878:	f016 fa2c 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800487c:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 800496c <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x140>
 8004880:	3004      	adds	r0, #4
 8004882:	f016 fa4c 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004886:	f8d9 0000 	ldr.w	r0, [r9]
 800488a:	b110      	cbz	r0, 8004892 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 800488c:	6803      	ldr	r3, [r0, #0]
 800488e:	68db      	ldr	r3, [r3, #12]
 8004890:	4798      	blx	r3
    if (*currentTrans)
 8004892:	f8d9 0000 	ldr.w	r0, [r9]
 8004896:	b110      	cbz	r0, 800489e <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004898:	6803      	ldr	r3, [r0, #0]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	4798      	blx	r3
    if (*currentScreen)
 800489e:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004970 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x144>
 80048a2:	f8d8 0000 	ldr.w	r0, [r8]
 80048a6:	b110      	cbz	r0, 80048ae <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80048a8:	6803      	ldr	r3, [r0, #0]
 80048aa:	695b      	ldr	r3, [r3, #20]
 80048ac:	4798      	blx	r3
    if (*currentPresenter)
 80048ae:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80048b2:	b110      	cbz	r0, 80048ba <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80048b4:	6803      	ldr	r3, [r0, #0]
 80048b6:	685b      	ldr	r3, [r3, #4]
 80048b8:	4798      	blx	r3
    if (*currentScreen)
 80048ba:	f8d8 0000 	ldr.w	r0, [r8]
 80048be:	b110      	cbz	r0, 80048c6 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80048c0:	6803      	ldr	r3, [r0, #0]
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	4798      	blx	r3
    if (*currentPresenter)
 80048c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80048ca:	b110      	cbz	r0, 80048d2 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80048cc:	6803      	ldr	r3, [r0, #0]
 80048ce:	689b      	ldr	r3, [r3, #8]
 80048d0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80048d2:	68f0      	ldr	r0, [r6, #12]
 80048d4:	2100      	movs	r1, #0
 80048d6:	f7ff fa85 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80048da:	f04f 0b00 	mov.w	fp, #0
 80048de:	4b22      	ldr	r3, [pc, #136]	@ (8004968 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x13c>)
 80048e0:	f8c0 b004 	str.w	fp, [r0, #4]
 80048e4:	4604      	mov	r4, r0
 80048e6:	f880 b008 	strb.w	fp, [r0, #8]
 80048ea:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80048ec:	68b0      	ldr	r0, [r6, #8]
 80048ee:	6803      	ldr	r3, [r0, #0]
 80048f0:	4659      	mov	r1, fp
 80048f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048f4:	4798      	blx	r3
 80048f6:	4605      	mov	r5, r0
 80048f8:	f009 fb6a 	bl	800dfd0 <_ZN16RewardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048fc:	6870      	ldr	r0, [r6, #4]
 80048fe:	6803      	ldr	r3, [r0, #0]
 8004900:	4659      	mov	r1, fp
 8004902:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004904:	4798      	blx	r3
 8004906:	4629      	mov	r1, r5
 8004908:	4606      	mov	r6, r0
 800490a:	f009 fb3f 	bl	800df8c <_ZN21RewardScreenPresenterC1ER16RewardScreenView>
    model->bind(newPresenter);
 800490e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004910:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004914:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004918:	f8c8 5000 	str.w	r5, [r8]
 800491c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004920:	682b      	ldr	r3, [r5, #0]
 8004922:	f8c6 a008 	str.w	sl, [r6, #8]
 8004926:	4628      	mov	r0, r5
 8004928:	68db      	ldr	r3, [r3, #12]
 800492a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800492c:	4798      	blx	r3
    newPresenter->activate();
 800492e:	6833      	ldr	r3, [r6, #0]
 8004930:	4630      	mov	r0, r6
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004936:	4621      	mov	r1, r4
 8004938:	4628      	mov	r0, r5
 800493a:	f018 fb9d 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800493e:	6823      	ldr	r3, [r4, #0]
 8004940:	4620      	mov	r0, r4
 8004942:	691b      	ldr	r3, [r3, #16]
 8004944:	4798      	blx	r3
    newTransition->invalidate();
 8004946:	6823      	ldr	r3, [r4, #0]
 8004948:	695b      	ldr	r3, [r3, #20]
 800494a:	4620      	mov	r0, r4
}
 800494c:	b001      	add	sp, #4
 800494e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004952:	4718      	bx	r3
 8004954:	0802f619 	.word	0x0802f619
 8004958:	0802ff38 	.word	0x0802ff38
 800495c:	0802f777 	.word	0x0802f777
 8004960:	0802f7be 	.word	0x0802f7be
 8004964:	0802f861 	.word	0x0802f861
 8004968:	08031388 	.word	0x08031388
 800496c:	200138cc 	.word	0x200138cc
 8004970:	200138c8 	.word	0x200138c8

08004974 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv>:
{
 8004974:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Character_2View, Character_2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004978:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800497c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800497e:	68b0      	ldr	r0, [r6, #8]
 8004980:	6803      	ldr	r3, [r0, #0]
 8004982:	6a1b      	ldr	r3, [r3, #32]
 8004984:	4798      	blx	r3
 8004986:	f5b0 7f1e 	cmp.w	r0, #632	@ 0x278
 800498a:	d205      	bcs.n	8004998 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x24>
 800498c:	4b43      	ldr	r3, [pc, #268]	@ (8004a9c <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x128>)
 800498e:	4a44      	ldr	r2, [pc, #272]	@ (8004aa0 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x12c>)
 8004990:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004992:	4844      	ldr	r0, [pc, #272]	@ (8004aa4 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x130>)
 8004994:	f029 fb6c 	bl	802e070 <__assert_func>
 8004998:	6870      	ldr	r0, [r6, #4]
 800499a:	6803      	ldr	r3, [r0, #0]
 800499c:	6a1b      	ldr	r3, [r3, #32]
 800499e:	4798      	blx	r3
 80049a0:	280f      	cmp	r0, #15
 80049a2:	d803      	bhi.n	80049ac <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x38>
 80049a4:	4b40      	ldr	r3, [pc, #256]	@ (8004aa8 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x134>)
 80049a6:	4a3e      	ldr	r2, [pc, #248]	@ (8004aa0 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x12c>)
 80049a8:	21a4      	movs	r1, #164	@ 0xa4
 80049aa:	e7f2      	b.n	8004992 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049ac:	68f0      	ldr	r0, [r6, #12]
 80049ae:	6803      	ldr	r3, [r0, #0]
 80049b0:	6a1b      	ldr	r3, [r3, #32]
 80049b2:	4798      	blx	r3
 80049b4:	280b      	cmp	r0, #11
 80049b6:	d803      	bhi.n	80049c0 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x4c>
 80049b8:	4b3c      	ldr	r3, [pc, #240]	@ (8004aac <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x138>)
 80049ba:	4a39      	ldr	r2, [pc, #228]	@ (8004aa0 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x12c>)
 80049bc:	21a5      	movs	r1, #165	@ 0xa5
 80049be:	e7e8      	b.n	8004992 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80049c0:	f016 f988 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80049c4:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004ab4 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x140>
 80049c8:	3004      	adds	r0, #4
 80049ca:	f016 f9a8 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80049ce:	f8d9 0000 	ldr.w	r0, [r9]
 80049d2:	b110      	cbz	r0, 80049da <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80049d4:	6803      	ldr	r3, [r0, #0]
 80049d6:	68db      	ldr	r3, [r3, #12]
 80049d8:	4798      	blx	r3
    if (*currentTrans)
 80049da:	f8d9 0000 	ldr.w	r0, [r9]
 80049de:	b110      	cbz	r0, 80049e6 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80049e0:	6803      	ldr	r3, [r0, #0]
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	4798      	blx	r3
    if (*currentScreen)
 80049e6:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004ab8 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x144>
 80049ea:	f8d8 0000 	ldr.w	r0, [r8]
 80049ee:	b110      	cbz	r0, 80049f6 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80049f0:	6803      	ldr	r3, [r0, #0]
 80049f2:	695b      	ldr	r3, [r3, #20]
 80049f4:	4798      	blx	r3
    if (*currentPresenter)
 80049f6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80049fa:	b110      	cbz	r0, 8004a02 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80049fc:	6803      	ldr	r3, [r0, #0]
 80049fe:	685b      	ldr	r3, [r3, #4]
 8004a00:	4798      	blx	r3
    if (*currentScreen)
 8004a02:	f8d8 0000 	ldr.w	r0, [r8]
 8004a06:	b110      	cbz	r0, 8004a0e <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a08:	6803      	ldr	r3, [r0, #0]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	4798      	blx	r3
    if (*currentPresenter)
 8004a0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004a12:	b110      	cbz	r0, 8004a1a <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a14:	6803      	ldr	r3, [r0, #0]
 8004a16:	689b      	ldr	r3, [r3, #8]
 8004a18:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a1a:	68f0      	ldr	r0, [r6, #12]
 8004a1c:	2100      	movs	r1, #0
 8004a1e:	f7ff f9e1 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004a22:	f04f 0b00 	mov.w	fp, #0
 8004a26:	4b22      	ldr	r3, [pc, #136]	@ (8004ab0 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x13c>)
 8004a28:	f8c0 b004 	str.w	fp, [r0, #4]
 8004a2c:	4604      	mov	r4, r0
 8004a2e:	f880 b008 	strb.w	fp, [r0, #8]
 8004a32:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a34:	68b0      	ldr	r0, [r6, #8]
 8004a36:	6803      	ldr	r3, [r0, #0]
 8004a38:	4659      	mov	r1, fp
 8004a3a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a3c:	4798      	blx	r3
 8004a3e:	4605      	mov	r5, r0
 8004a40:	f005 fd5e 	bl	800a500 <_ZN15Character_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a44:	6870      	ldr	r0, [r6, #4]
 8004a46:	6803      	ldr	r3, [r0, #0]
 8004a48:	4659      	mov	r1, fp
 8004a4a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a4c:	4798      	blx	r3
 8004a4e:	4629      	mov	r1, r5
 8004a50:	4606      	mov	r6, r0
 8004a52:	f005 fd33 	bl	800a4bc <_ZN20Character_2PresenterC1ER15Character_2View>
    model->bind(newPresenter);
 8004a56:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004a58:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004a5c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004a60:	f8c8 5000 	str.w	r5, [r8]
 8004a64:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a68:	682b      	ldr	r3, [r5, #0]
 8004a6a:	f8c6 a008 	str.w	sl, [r6, #8]
 8004a6e:	4628      	mov	r0, r5
 8004a70:	68db      	ldr	r3, [r3, #12]
 8004a72:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004a74:	4798      	blx	r3
    newPresenter->activate();
 8004a76:	6833      	ldr	r3, [r6, #0]
 8004a78:	4630      	mov	r0, r6
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a7e:	4621      	mov	r1, r4
 8004a80:	4628      	mov	r0, r5
 8004a82:	f018 faf9 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a86:	6823      	ldr	r3, [r4, #0]
 8004a88:	4620      	mov	r0, r4
 8004a8a:	691b      	ldr	r3, [r3, #16]
 8004a8c:	4798      	blx	r3
    newTransition->invalidate();
 8004a8e:	6823      	ldr	r3, [r4, #0]
 8004a90:	695b      	ldr	r3, [r3, #20]
 8004a92:	4620      	mov	r0, r4
}
 8004a94:	b001      	add	sp, #4
 8004a96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a9a:	4718      	bx	r3
 8004a9c:	0802f619 	.word	0x0802f619
 8004aa0:	08030014 	.word	0x08030014
 8004aa4:	0802f777 	.word	0x0802f777
 8004aa8:	0802f7be 	.word	0x0802f7be
 8004aac:	0802f861 	.word	0x0802f861
 8004ab0:	08031388 	.word	0x08031388
 8004ab4:	200138cc 	.word	0x200138cc
 8004ab8:	200138c8 	.word	0x200138c8

08004abc <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv>:
{
 8004abc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<CharacterView, CharacterPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ac0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004ac4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ac6:	68b0      	ldr	r0, [r6, #8]
 8004ac8:	6803      	ldr	r3, [r0, #0]
 8004aca:	6a1b      	ldr	r3, [r3, #32]
 8004acc:	4798      	blx	r3
 8004ace:	f5b0 7f16 	cmp.w	r0, #600	@ 0x258
 8004ad2:	d205      	bcs.n	8004ae0 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x24>
 8004ad4:	4b43      	ldr	r3, [pc, #268]	@ (8004be4 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x128>)
 8004ad6:	4a44      	ldr	r2, [pc, #272]	@ (8004be8 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x12c>)
 8004ad8:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ada:	4844      	ldr	r0, [pc, #272]	@ (8004bec <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x130>)
 8004adc:	f029 fac8 	bl	802e070 <__assert_func>
 8004ae0:	6870      	ldr	r0, [r6, #4]
 8004ae2:	6803      	ldr	r3, [r0, #0]
 8004ae4:	6a1b      	ldr	r3, [r3, #32]
 8004ae6:	4798      	blx	r3
 8004ae8:	280f      	cmp	r0, #15
 8004aea:	d803      	bhi.n	8004af4 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x38>
 8004aec:	4b40      	ldr	r3, [pc, #256]	@ (8004bf0 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x134>)
 8004aee:	4a3e      	ldr	r2, [pc, #248]	@ (8004be8 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x12c>)
 8004af0:	21a4      	movs	r1, #164	@ 0xa4
 8004af2:	e7f2      	b.n	8004ada <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004af4:	68f0      	ldr	r0, [r6, #12]
 8004af6:	6803      	ldr	r3, [r0, #0]
 8004af8:	6a1b      	ldr	r3, [r3, #32]
 8004afa:	4798      	blx	r3
 8004afc:	280b      	cmp	r0, #11
 8004afe:	d803      	bhi.n	8004b08 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x4c>
 8004b00:	4b3c      	ldr	r3, [pc, #240]	@ (8004bf4 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x138>)
 8004b02:	4a39      	ldr	r2, [pc, #228]	@ (8004be8 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x12c>)
 8004b04:	21a5      	movs	r1, #165	@ 0xa5
 8004b06:	e7e8      	b.n	8004ada <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b08:	f016 f8e4 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b0c:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004bfc <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x140>
 8004b10:	3004      	adds	r0, #4
 8004b12:	f016 f904 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b16:	f8d9 0000 	ldr.w	r0, [r9]
 8004b1a:	b110      	cbz	r0, 8004b22 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b1c:	6803      	ldr	r3, [r0, #0]
 8004b1e:	68db      	ldr	r3, [r3, #12]
 8004b20:	4798      	blx	r3
    if (*currentTrans)
 8004b22:	f8d9 0000 	ldr.w	r0, [r9]
 8004b26:	b110      	cbz	r0, 8004b2e <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b28:	6803      	ldr	r3, [r0, #0]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	4798      	blx	r3
    if (*currentScreen)
 8004b2e:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004c00 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x144>
 8004b32:	f8d8 0000 	ldr.w	r0, [r8]
 8004b36:	b110      	cbz	r0, 8004b3e <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b38:	6803      	ldr	r3, [r0, #0]
 8004b3a:	695b      	ldr	r3, [r3, #20]
 8004b3c:	4798      	blx	r3
    if (*currentPresenter)
 8004b3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004b42:	b110      	cbz	r0, 8004b4a <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b44:	6803      	ldr	r3, [r0, #0]
 8004b46:	685b      	ldr	r3, [r3, #4]
 8004b48:	4798      	blx	r3
    if (*currentScreen)
 8004b4a:	f8d8 0000 	ldr.w	r0, [r8]
 8004b4e:	b110      	cbz	r0, 8004b56 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b50:	6803      	ldr	r3, [r0, #0]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	4798      	blx	r3
    if (*currentPresenter)
 8004b56:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004b5a:	b110      	cbz	r0, 8004b62 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b5c:	6803      	ldr	r3, [r0, #0]
 8004b5e:	689b      	ldr	r3, [r3, #8]
 8004b60:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b62:	68f0      	ldr	r0, [r6, #12]
 8004b64:	2100      	movs	r1, #0
 8004b66:	f7ff f93d 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004b6a:	f04f 0b00 	mov.w	fp, #0
 8004b6e:	4b22      	ldr	r3, [pc, #136]	@ (8004bf8 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x13c>)
 8004b70:	f8c0 b004 	str.w	fp, [r0, #4]
 8004b74:	4604      	mov	r4, r0
 8004b76:	f880 b008 	strb.w	fp, [r0, #8]
 8004b7a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b7c:	68b0      	ldr	r0, [r6, #8]
 8004b7e:	6803      	ldr	r3, [r0, #0]
 8004b80:	4659      	mov	r1, fp
 8004b82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b84:	4798      	blx	r3
 8004b86:	4605      	mov	r5, r0
 8004b88:	f005 fb74 	bl	800a274 <_ZN13CharacterViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b8c:	6870      	ldr	r0, [r6, #4]
 8004b8e:	6803      	ldr	r3, [r0, #0]
 8004b90:	4659      	mov	r1, fp
 8004b92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b94:	4798      	blx	r3
 8004b96:	4629      	mov	r1, r5
 8004b98:	4606      	mov	r6, r0
 8004b9a:	f005 fb49 	bl	800a230 <_ZN18CharacterPresenterC1ER13CharacterView>
    model->bind(newPresenter);
 8004b9e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004ba0:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004ba4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004ba8:	f8c8 5000 	str.w	r5, [r8]
 8004bac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bb0:	682b      	ldr	r3, [r5, #0]
 8004bb2:	f8c6 a008 	str.w	sl, [r6, #8]
 8004bb6:	4628      	mov	r0, r5
 8004bb8:	68db      	ldr	r3, [r3, #12]
 8004bba:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004bbc:	4798      	blx	r3
    newPresenter->activate();
 8004bbe:	6833      	ldr	r3, [r6, #0]
 8004bc0:	4630      	mov	r0, r6
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bc6:	4621      	mov	r1, r4
 8004bc8:	4628      	mov	r0, r5
 8004bca:	f018 fa55 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004bce:	6823      	ldr	r3, [r4, #0]
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	691b      	ldr	r3, [r3, #16]
 8004bd4:	4798      	blx	r3
    newTransition->invalidate();
 8004bd6:	6823      	ldr	r3, [r4, #0]
 8004bd8:	695b      	ldr	r3, [r3, #20]
 8004bda:	4620      	mov	r0, r4
}
 8004bdc:	b001      	add	sp, #4
 8004bde:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004be2:	4718      	bx	r3
 8004be4:	0802f619 	.word	0x0802f619
 8004be8:	080300ee 	.word	0x080300ee
 8004bec:	0802f777 	.word	0x0802f777
 8004bf0:	0802f7be 	.word	0x0802f7be
 8004bf4:	0802f861 	.word	0x0802f861
 8004bf8:	08031388 	.word	0x08031388
 8004bfc:	200138cc 	.word	0x200138cc
 8004c00:	200138c8 	.word	0x200138c8

08004c04 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv>:
{
 8004c04:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<BackUpScreenView, BackUpScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c08:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004c0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c0e:	68b0      	ldr	r0, [r6, #8]
 8004c10:	6803      	ldr	r3, [r0, #0]
 8004c12:	6a1b      	ldr	r3, [r3, #32]
 8004c14:	4798      	blx	r3
 8004c16:	f5b0 7f30 	cmp.w	r0, #704	@ 0x2c0
 8004c1a:	d205      	bcs.n	8004c28 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x24>
 8004c1c:	4b43      	ldr	r3, [pc, #268]	@ (8004d2c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x128>)
 8004c1e:	4a44      	ldr	r2, [pc, #272]	@ (8004d30 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x12c>)
 8004c20:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c22:	4844      	ldr	r0, [pc, #272]	@ (8004d34 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x130>)
 8004c24:	f029 fa24 	bl	802e070 <__assert_func>
 8004c28:	6870      	ldr	r0, [r6, #4]
 8004c2a:	6803      	ldr	r3, [r0, #0]
 8004c2c:	6a1b      	ldr	r3, [r3, #32]
 8004c2e:	4798      	blx	r3
 8004c30:	280f      	cmp	r0, #15
 8004c32:	d803      	bhi.n	8004c3c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x38>
 8004c34:	4b40      	ldr	r3, [pc, #256]	@ (8004d38 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x134>)
 8004c36:	4a3e      	ldr	r2, [pc, #248]	@ (8004d30 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x12c>)
 8004c38:	21a4      	movs	r1, #164	@ 0xa4
 8004c3a:	e7f2      	b.n	8004c22 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c3c:	68f0      	ldr	r0, [r6, #12]
 8004c3e:	6803      	ldr	r3, [r0, #0]
 8004c40:	6a1b      	ldr	r3, [r3, #32]
 8004c42:	4798      	blx	r3
 8004c44:	280b      	cmp	r0, #11
 8004c46:	d803      	bhi.n	8004c50 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x4c>
 8004c48:	4b3c      	ldr	r3, [pc, #240]	@ (8004d3c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x138>)
 8004c4a:	4a39      	ldr	r2, [pc, #228]	@ (8004d30 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x12c>)
 8004c4c:	21a5      	movs	r1, #165	@ 0xa5
 8004c4e:	e7e8      	b.n	8004c22 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c50:	f016 f840 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c54:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004d44 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x140>
 8004c58:	3004      	adds	r0, #4
 8004c5a:	f016 f860 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c5e:	f8d9 0000 	ldr.w	r0, [r9]
 8004c62:	b110      	cbz	r0, 8004c6a <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c64:	6803      	ldr	r3, [r0, #0]
 8004c66:	68db      	ldr	r3, [r3, #12]
 8004c68:	4798      	blx	r3
    if (*currentTrans)
 8004c6a:	f8d9 0000 	ldr.w	r0, [r9]
 8004c6e:	b110      	cbz	r0, 8004c76 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c70:	6803      	ldr	r3, [r0, #0]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	4798      	blx	r3
    if (*currentScreen)
 8004c76:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004d48 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x144>
 8004c7a:	f8d8 0000 	ldr.w	r0, [r8]
 8004c7e:	b110      	cbz	r0, 8004c86 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c80:	6803      	ldr	r3, [r0, #0]
 8004c82:	695b      	ldr	r3, [r3, #20]
 8004c84:	4798      	blx	r3
    if (*currentPresenter)
 8004c86:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004c8a:	b110      	cbz	r0, 8004c92 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c8c:	6803      	ldr	r3, [r0, #0]
 8004c8e:	685b      	ldr	r3, [r3, #4]
 8004c90:	4798      	blx	r3
    if (*currentScreen)
 8004c92:	f8d8 0000 	ldr.w	r0, [r8]
 8004c96:	b110      	cbz	r0, 8004c9e <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c98:	6803      	ldr	r3, [r0, #0]
 8004c9a:	681b      	ldr	r3, [r3, #0]
 8004c9c:	4798      	blx	r3
    if (*currentPresenter)
 8004c9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004ca2:	b110      	cbz	r0, 8004caa <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004ca4:	6803      	ldr	r3, [r0, #0]
 8004ca6:	689b      	ldr	r3, [r3, #8]
 8004ca8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004caa:	68f0      	ldr	r0, [r6, #12]
 8004cac:	2100      	movs	r1, #0
 8004cae:	f7ff f899 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004cb2:	f04f 0b00 	mov.w	fp, #0
 8004cb6:	4b22      	ldr	r3, [pc, #136]	@ (8004d40 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x13c>)
 8004cb8:	f8c0 b004 	str.w	fp, [r0, #4]
 8004cbc:	4604      	mov	r4, r0
 8004cbe:	f880 b008 	strb.w	fp, [r0, #8]
 8004cc2:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cc4:	68b0      	ldr	r0, [r6, #8]
 8004cc6:	6803      	ldr	r3, [r0, #0]
 8004cc8:	4659      	mov	r1, fp
 8004cca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ccc:	4798      	blx	r3
 8004cce:	4605      	mov	r5, r0
 8004cd0:	f005 fa58 	bl	800a184 <_ZN16BackUpScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cd4:	6870      	ldr	r0, [r6, #4]
 8004cd6:	6803      	ldr	r3, [r0, #0]
 8004cd8:	4659      	mov	r1, fp
 8004cda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cdc:	4798      	blx	r3
 8004cde:	4629      	mov	r1, r5
 8004ce0:	4606      	mov	r6, r0
 8004ce2:	f005 fa2d 	bl	800a140 <_ZN21BackUpScreenPresenterC1ER16BackUpScreenView>
    model->bind(newPresenter);
 8004ce6:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004ce8:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004cec:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004cf0:	f8c8 5000 	str.w	r5, [r8]
 8004cf4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004cf8:	682b      	ldr	r3, [r5, #0]
 8004cfa:	f8c6 a008 	str.w	sl, [r6, #8]
 8004cfe:	4628      	mov	r0, r5
 8004d00:	68db      	ldr	r3, [r3, #12]
 8004d02:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004d04:	4798      	blx	r3
    newPresenter->activate();
 8004d06:	6833      	ldr	r3, [r6, #0]
 8004d08:	4630      	mov	r0, r6
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d0e:	4621      	mov	r1, r4
 8004d10:	4628      	mov	r0, r5
 8004d12:	f018 f9b1 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d16:	6823      	ldr	r3, [r4, #0]
 8004d18:	4620      	mov	r0, r4
 8004d1a:	691b      	ldr	r3, [r3, #16]
 8004d1c:	4798      	blx	r3
    newTransition->invalidate();
 8004d1e:	6823      	ldr	r3, [r4, #0]
 8004d20:	695b      	ldr	r3, [r3, #20]
 8004d22:	4620      	mov	r0, r4
}
 8004d24:	b001      	add	sp, #4
 8004d26:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d2a:	4718      	bx	r3
 8004d2c:	0802f619 	.word	0x0802f619
 8004d30:	080301c4 	.word	0x080301c4
 8004d34:	0802f777 	.word	0x0802f777
 8004d38:	0802f7be 	.word	0x0802f7be
 8004d3c:	0802f861 	.word	0x0802f861
 8004d40:	08031388 	.word	0x08031388
 8004d44:	200138cc 	.word	0x200138cc
 8004d48:	200138c8 	.word	0x200138c8

08004d4c <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv>:
{
 8004d4c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<GameScreenView, GameScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d50:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004d54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d56:	68b0      	ldr	r0, [r6, #8]
 8004d58:	6803      	ldr	r3, [r0, #0]
 8004d5a:	6a1b      	ldr	r3, [r3, #32]
 8004d5c:	4798      	blx	r3
 8004d5e:	f5b0 5f96 	cmp.w	r0, #4800	@ 0x12c0
 8004d62:	d205      	bcs.n	8004d70 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x24>
 8004d64:	4b43      	ldr	r3, [pc, #268]	@ (8004e74 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x128>)
 8004d66:	4a44      	ldr	r2, [pc, #272]	@ (8004e78 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x12c>)
 8004d68:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d6a:	4844      	ldr	r0, [pc, #272]	@ (8004e7c <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x130>)
 8004d6c:	f029 f980 	bl	802e070 <__assert_func>
 8004d70:	6870      	ldr	r0, [r6, #4]
 8004d72:	6803      	ldr	r3, [r0, #0]
 8004d74:	6a1b      	ldr	r3, [r3, #32]
 8004d76:	4798      	blx	r3
 8004d78:	280f      	cmp	r0, #15
 8004d7a:	d803      	bhi.n	8004d84 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x38>
 8004d7c:	4b40      	ldr	r3, [pc, #256]	@ (8004e80 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x134>)
 8004d7e:	4a3e      	ldr	r2, [pc, #248]	@ (8004e78 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x12c>)
 8004d80:	21a4      	movs	r1, #164	@ 0xa4
 8004d82:	e7f2      	b.n	8004d6a <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d84:	68f0      	ldr	r0, [r6, #12]
 8004d86:	6803      	ldr	r3, [r0, #0]
 8004d88:	6a1b      	ldr	r3, [r3, #32]
 8004d8a:	4798      	blx	r3
 8004d8c:	280b      	cmp	r0, #11
 8004d8e:	d803      	bhi.n	8004d98 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x4c>
 8004d90:	4b3c      	ldr	r3, [pc, #240]	@ (8004e84 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x138>)
 8004d92:	4a39      	ldr	r2, [pc, #228]	@ (8004e78 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x12c>)
 8004d94:	21a5      	movs	r1, #165	@ 0xa5
 8004d96:	e7e8      	b.n	8004d6a <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d98:	f015 ff9c 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d9c:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004e8c <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x140>
 8004da0:	3004      	adds	r0, #4
 8004da2:	f015 ffbc 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004da6:	f8d9 0000 	ldr.w	r0, [r9]
 8004daa:	b110      	cbz	r0, 8004db2 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004dac:	6803      	ldr	r3, [r0, #0]
 8004dae:	68db      	ldr	r3, [r3, #12]
 8004db0:	4798      	blx	r3
    if (*currentTrans)
 8004db2:	f8d9 0000 	ldr.w	r0, [r9]
 8004db6:	b110      	cbz	r0, 8004dbe <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004db8:	6803      	ldr	r3, [r0, #0]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	4798      	blx	r3
    if (*currentScreen)
 8004dbe:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004e90 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x144>
 8004dc2:	f8d8 0000 	ldr.w	r0, [r8]
 8004dc6:	b110      	cbz	r0, 8004dce <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004dc8:	6803      	ldr	r3, [r0, #0]
 8004dca:	695b      	ldr	r3, [r3, #20]
 8004dcc:	4798      	blx	r3
    if (*currentPresenter)
 8004dce:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004dd2:	b110      	cbz	r0, 8004dda <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004dd4:	6803      	ldr	r3, [r0, #0]
 8004dd6:	685b      	ldr	r3, [r3, #4]
 8004dd8:	4798      	blx	r3
    if (*currentScreen)
 8004dda:	f8d8 0000 	ldr.w	r0, [r8]
 8004dde:	b110      	cbz	r0, 8004de6 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004de0:	6803      	ldr	r3, [r0, #0]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	4798      	blx	r3
    if (*currentPresenter)
 8004de6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004dea:	b110      	cbz	r0, 8004df2 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004dec:	6803      	ldr	r3, [r0, #0]
 8004dee:	689b      	ldr	r3, [r3, #8]
 8004df0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004df2:	68f0      	ldr	r0, [r6, #12]
 8004df4:	2100      	movs	r1, #0
 8004df6:	f7fe fff5 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004dfa:	f04f 0b00 	mov.w	fp, #0
 8004dfe:	4b22      	ldr	r3, [pc, #136]	@ (8004e88 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x13c>)
 8004e00:	f8c0 b004 	str.w	fp, [r0, #4]
 8004e04:	4604      	mov	r4, r0
 8004e06:	f880 b008 	strb.w	fp, [r0, #8]
 8004e0a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e0c:	68b0      	ldr	r0, [r6, #8]
 8004e0e:	6803      	ldr	r3, [r0, #0]
 8004e10:	4659      	mov	r1, fp
 8004e12:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e14:	4798      	blx	r3
 8004e16:	4605      	mov	r5, r0
 8004e18:	f005 fcfe 	bl	800a818 <_ZN14GameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e1c:	6870      	ldr	r0, [r6, #4]
 8004e1e:	6803      	ldr	r3, [r0, #0]
 8004e20:	4659      	mov	r1, fp
 8004e22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e24:	4798      	blx	r3
 8004e26:	4629      	mov	r1, r5
 8004e28:	4606      	mov	r6, r0
 8004e2a:	f005 fc97 	bl	800a75c <_ZN19GameScreenPresenterC1ER14GameScreenView>
    model->bind(newPresenter);
 8004e2e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004e30:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004e34:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004e38:	f8c8 5000 	str.w	r5, [r8]
 8004e3c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e40:	682b      	ldr	r3, [r5, #0]
 8004e42:	f8c6 a008 	str.w	sl, [r6, #8]
 8004e46:	4628      	mov	r0, r5
 8004e48:	68db      	ldr	r3, [r3, #12]
 8004e4a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004e4c:	4798      	blx	r3
    newPresenter->activate();
 8004e4e:	6833      	ldr	r3, [r6, #0]
 8004e50:	4630      	mov	r0, r6
 8004e52:	681b      	ldr	r3, [r3, #0]
 8004e54:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e56:	4621      	mov	r1, r4
 8004e58:	4628      	mov	r0, r5
 8004e5a:	f018 f90d 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e5e:	6823      	ldr	r3, [r4, #0]
 8004e60:	4620      	mov	r0, r4
 8004e62:	691b      	ldr	r3, [r3, #16]
 8004e64:	4798      	blx	r3
    newTransition->invalidate();
 8004e66:	6823      	ldr	r3, [r4, #0]
 8004e68:	695b      	ldr	r3, [r3, #20]
 8004e6a:	4620      	mov	r0, r4
}
 8004e6c:	b001      	add	sp, #4
 8004e6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e72:	4718      	bx	r3
 8004e74:	0802f619 	.word	0x0802f619
 8004e78:	080302a0 	.word	0x080302a0
 8004e7c:	0802f777 	.word	0x0802f777
 8004e80:	0802f7be 	.word	0x0802f7be
 8004e84:	0802f861 	.word	0x0802f861
 8004e88:	08031388 	.word	0x08031388
 8004e8c:	200138cc 	.word	0x200138cc
 8004e90:	200138c8 	.word	0x200138c8

08004e94 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv>:
{
 8004e94:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainMenuScreenView, MainMenuScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e98:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004e9c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e9e:	68b0      	ldr	r0, [r6, #8]
 8004ea0:	6803      	ldr	r3, [r0, #0]
 8004ea2:	6a1b      	ldr	r3, [r3, #32]
 8004ea4:	4798      	blx	r3
 8004ea6:	f5b0 7f12 	cmp.w	r0, #584	@ 0x248
 8004eaa:	d205      	bcs.n	8004eb8 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x24>
 8004eac:	4b43      	ldr	r3, [pc, #268]	@ (8004fbc <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x128>)
 8004eae:	4a44      	ldr	r2, [pc, #272]	@ (8004fc0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x12c>)
 8004eb0:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004eb2:	4844      	ldr	r0, [pc, #272]	@ (8004fc4 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x130>)
 8004eb4:	f029 f8dc 	bl	802e070 <__assert_func>
 8004eb8:	6870      	ldr	r0, [r6, #4]
 8004eba:	6803      	ldr	r3, [r0, #0]
 8004ebc:	6a1b      	ldr	r3, [r3, #32]
 8004ebe:	4798      	blx	r3
 8004ec0:	280f      	cmp	r0, #15
 8004ec2:	d803      	bhi.n	8004ecc <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x38>
 8004ec4:	4b40      	ldr	r3, [pc, #256]	@ (8004fc8 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x134>)
 8004ec6:	4a3e      	ldr	r2, [pc, #248]	@ (8004fc0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x12c>)
 8004ec8:	21a4      	movs	r1, #164	@ 0xa4
 8004eca:	e7f2      	b.n	8004eb2 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ecc:	68f0      	ldr	r0, [r6, #12]
 8004ece:	6803      	ldr	r3, [r0, #0]
 8004ed0:	6a1b      	ldr	r3, [r3, #32]
 8004ed2:	4798      	blx	r3
 8004ed4:	280b      	cmp	r0, #11
 8004ed6:	d803      	bhi.n	8004ee0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x4c>
 8004ed8:	4b3c      	ldr	r3, [pc, #240]	@ (8004fcc <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x138>)
 8004eda:	4a39      	ldr	r2, [pc, #228]	@ (8004fc0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x12c>)
 8004edc:	21a5      	movs	r1, #165	@ 0xa5
 8004ede:	e7e8      	b.n	8004eb2 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ee0:	f015 fef8 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ee4:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004fd4 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x140>
 8004ee8:	3004      	adds	r0, #4
 8004eea:	f015 ff18 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004eee:	f8d9 0000 	ldr.w	r0, [r9]
 8004ef2:	b110      	cbz	r0, 8004efa <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004ef4:	6803      	ldr	r3, [r0, #0]
 8004ef6:	68db      	ldr	r3, [r3, #12]
 8004ef8:	4798      	blx	r3
    if (*currentTrans)
 8004efa:	f8d9 0000 	ldr.w	r0, [r9]
 8004efe:	b110      	cbz	r0, 8004f06 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004f00:	6803      	ldr	r3, [r0, #0]
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	4798      	blx	r3
    if (*currentScreen)
 8004f06:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004fd8 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x144>
 8004f0a:	f8d8 0000 	ldr.w	r0, [r8]
 8004f0e:	b110      	cbz	r0, 8004f16 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004f10:	6803      	ldr	r3, [r0, #0]
 8004f12:	695b      	ldr	r3, [r3, #20]
 8004f14:	4798      	blx	r3
    if (*currentPresenter)
 8004f16:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004f1a:	b110      	cbz	r0, 8004f22 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004f1c:	6803      	ldr	r3, [r0, #0]
 8004f1e:	685b      	ldr	r3, [r3, #4]
 8004f20:	4798      	blx	r3
    if (*currentScreen)
 8004f22:	f8d8 0000 	ldr.w	r0, [r8]
 8004f26:	b110      	cbz	r0, 8004f2e <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004f28:	6803      	ldr	r3, [r0, #0]
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	4798      	blx	r3
    if (*currentPresenter)
 8004f2e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004f32:	b110      	cbz	r0, 8004f3a <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004f34:	6803      	ldr	r3, [r0, #0]
 8004f36:	689b      	ldr	r3, [r3, #8]
 8004f38:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f3a:	68f0      	ldr	r0, [r6, #12]
 8004f3c:	2100      	movs	r1, #0
 8004f3e:	f7fe ff51 	bl	8003de4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004f42:	f04f 0b00 	mov.w	fp, #0
 8004f46:	4b22      	ldr	r3, [pc, #136]	@ (8004fd0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x13c>)
 8004f48:	f8c0 b004 	str.w	fp, [r0, #4]
 8004f4c:	4604      	mov	r4, r0
 8004f4e:	f880 b008 	strb.w	fp, [r0, #8]
 8004f52:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f54:	68b0      	ldr	r0, [r6, #8]
 8004f56:	6803      	ldr	r3, [r0, #0]
 8004f58:	4659      	mov	r1, fp
 8004f5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f5c:	4798      	blx	r3
 8004f5e:	4605      	mov	r5, r0
 8004f60:	f007 fb4e 	bl	800c600 <_ZN18MainMenuScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f64:	6870      	ldr	r0, [r6, #4]
 8004f66:	6803      	ldr	r3, [r0, #0]
 8004f68:	4659      	mov	r1, fp
 8004f6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f6c:	4798      	blx	r3
 8004f6e:	4629      	mov	r1, r5
 8004f70:	4606      	mov	r6, r0
 8004f72:	f007 fb23 	bl	800c5bc <_ZN23MainMenuScreenPresenterC1ER18MainMenuScreenView>
    model->bind(newPresenter);
 8004f76:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004f78:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004f7c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004f80:	f8c8 5000 	str.w	r5, [r8]
 8004f84:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f88:	682b      	ldr	r3, [r5, #0]
 8004f8a:	f8c6 a008 	str.w	sl, [r6, #8]
 8004f8e:	4628      	mov	r0, r5
 8004f90:	68db      	ldr	r3, [r3, #12]
 8004f92:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004f94:	4798      	blx	r3
    newPresenter->activate();
 8004f96:	6833      	ldr	r3, [r6, #0]
 8004f98:	4630      	mov	r0, r6
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f9e:	4621      	mov	r1, r4
 8004fa0:	4628      	mov	r0, r5
 8004fa2:	f018 f869 	bl	801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fa6:	6823      	ldr	r3, [r4, #0]
 8004fa8:	4620      	mov	r0, r4
 8004faa:	691b      	ldr	r3, [r3, #16]
 8004fac:	4798      	blx	r3
    newTransition->invalidate();
 8004fae:	6823      	ldr	r3, [r4, #0]
 8004fb0:	695b      	ldr	r3, [r3, #20]
 8004fb2:	4620      	mov	r0, r4
}
 8004fb4:	b001      	add	sp, #4
 8004fb6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fba:	4718      	bx	r3
 8004fbc:	0802f619 	.word	0x0802f619
 8004fc0:	08030378 	.word	0x08030378
 8004fc4:	0802f777 	.word	0x0802f777
 8004fc8:	0802f7be 	.word	0x0802f7be
 8004fcc:	0802f861 	.word	0x0802f861
 8004fd0:	08031388 	.word	0x08031388
 8004fd4:	200138cc 	.word	0x200138cc
 8004fd8:	200138c8 	.word	0x200138c8

08004fdc <_ZN18GameScreenViewBaseD1Ev>:
}

GameScreenViewBase::~GameScreenViewBase()
{

}
 8004fdc:	4770      	bx	lr

08004fde <_ZN18GameScreenViewBase11setupScreenEv>:

void GameScreenViewBase::setupScreen()
{

}
 8004fde:	4770      	bx	lr

08004fe0 <_ZN18GameScreenViewBaseD0Ev>:
GameScreenViewBase::~GameScreenViewBase()
 8004fe0:	b510      	push	{r4, lr}
}
 8004fe2:	f241 215c 	movw	r1, #4700	@ 0x125c
GameScreenViewBase::~GameScreenViewBase()
 8004fe6:	4604      	mov	r4, r0
}
 8004fe8:	f028 f905 	bl	802d1f6 <_ZdlPvj>
 8004fec:	4620      	mov	r0, r4
 8004fee:	bd10      	pop	{r4, pc}

08004ff0 <_ZN8touchgfx8TextAreaC1Ev>:
          touchable(false),
 8004ff0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8004ff4:	8481      	strh	r1, [r0, #36]	@ 0x24
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004ff6:	490d      	ldr	r1, [pc, #52]	@ (800502c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8004ff8:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 8004ffa:	490d      	ldr	r1, [pc, #52]	@ (8005030 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8004ffc:	6281      	str	r1, [r0, #40]	@ 0x28
 8004ffe:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8005002:	8581      	strh	r1, [r0, #44]	@ 0x2c
 8005004:	f44f 017f 	mov.w	r1, #16711680	@ 0xff0000
        : x(0), y(0), width(0), height(0)
 8005008:	2200      	movs	r2, #0
 800500a:	6341      	str	r1, [r0, #52]	@ 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800500c:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 8005010:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8005014:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8005018:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800501c:	e9c0 2207 	strd	r2, r2, [r0, #28]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8005020:	e9c0 1210 	strd	r1, r2, [r0, #64]	@ 0x40
        : color(col)
 8005024:	6302      	str	r2, [r0, #48]	@ 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005026:	8702      	strh	r2, [r0, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005028:	63c2      	str	r2, [r0, #60]	@ 0x3c
    }
 800502a:	4770      	bx	lr
 800502c:	080322e4 	.word	0x080322e4
 8005030:	0803130c 	.word	0x0803130c

08005034 <_ZN18GameScreenViewBaseC1Ev>:
GameScreenViewBase::GameScreenViewBase()
 8005034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005038:	4604      	mov	r4, r0
 800503a:	b0db      	sub	sp, #364	@ 0x16c
 800503c:	46a2      	mov	sl, r4
        : presenter(0)
 800503e:	2500      	movs	r5, #0
 8005040:	f017 fe6e 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8005044:	4bd1      	ldr	r3, [pc, #836]	@ (800538c <_ZN18GameScreenViewBaseC1Ev+0x358>)
 8005046:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8005048:	f84a 3b40 	str.w	r3, [sl], #64
 800504c:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8005050:	4650      	mov	r0, sl
 8005052:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8005056:	f7fd fd3b 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 800505a:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 800505e:	a958      	add	r1, sp, #352	@ 0x160
 8005060:	4638      	mov	r0, r7
 8005062:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
 8005066:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800506a:	f012 fb89 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800506e:	a958      	add	r1, sp, #352	@ 0x160
 8005070:	4648      	mov	r0, r9
 8005072:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005076:	f012 fb83 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800507a:	a958      	add	r1, sp, #352	@ 0x160
 800507c:	4640      	mov	r0, r8
 800507e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005082:	f012 fb7d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005086:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800508a:	a958      	add	r1, sp, #352	@ 0x160
 800508c:	4618      	mov	r0, r3
 800508e:	9323      	str	r3, [sp, #140]	@ 0x8c
 8005090:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005094:	f012 fb74 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005098:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 800509c:	a958      	add	r1, sp, #352	@ 0x160
 800509e:	4618      	mov	r0, r3
 80050a0:	9324      	str	r3, [sp, #144]	@ 0x90
 80050a2:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80050a6:	f012 fb6b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80050aa:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 80050ae:	a958      	add	r1, sp, #352	@ 0x160
 80050b0:	4618      	mov	r0, r3
 80050b2:	9325      	str	r3, [sp, #148]	@ 0x94
 80050b4:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80050b8:	f012 fb62 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80050bc:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 80050c0:	a958      	add	r1, sp, #352	@ 0x160
 80050c2:	4618      	mov	r0, r3
 80050c4:	9326      	str	r3, [sp, #152]	@ 0x98
 80050c6:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80050ca:	f012 fb59 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80050ce:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80050d2:	a958      	add	r1, sp, #352	@ 0x160
 80050d4:	4618      	mov	r0, r3
 80050d6:	9327      	str	r3, [sp, #156]	@ 0x9c
 80050d8:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80050dc:	f012 fb50 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80050e0:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 80050e4:	a958      	add	r1, sp, #352	@ 0x160
 80050e6:	4618      	mov	r0, r3
 80050e8:	9328      	str	r3, [sp, #160]	@ 0xa0
 80050ea:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80050ee:	f012 fb47 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80050f2:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 80050f6:	a958      	add	r1, sp, #352	@ 0x160
 80050f8:	4618      	mov	r0, r3
 80050fa:	9329      	str	r3, [sp, #164]	@ 0xa4
 80050fc:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005100:	f012 fb3e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005104:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8005108:	a958      	add	r1, sp, #352	@ 0x160
 800510a:	4618      	mov	r0, r3
 800510c:	932a      	str	r3, [sp, #168]	@ 0xa8
 800510e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005112:	f012 fb35 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005116:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 800511a:	a958      	add	r1, sp, #352	@ 0x160
 800511c:	4618      	mov	r0, r3
 800511e:	932b      	str	r3, [sp, #172]	@ 0xac
 8005120:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005124:	f012 fb2c 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005128:	f504 731f 	add.w	r3, r4, #636	@ 0x27c
 800512c:	a958      	add	r1, sp, #352	@ 0x160
 800512e:	4618      	mov	r0, r3
 8005130:	932c      	str	r3, [sp, #176]	@ 0xb0
 8005132:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005136:	f012 fb23 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800513a:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 800513e:	a958      	add	r1, sp, #352	@ 0x160
 8005140:	4618      	mov	r0, r3
 8005142:	932d      	str	r3, [sp, #180]	@ 0xb4
 8005144:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005148:	f012 fb1a 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800514c:	f504 7335 	add.w	r3, r4, #724	@ 0x2d4
 8005150:	a958      	add	r1, sp, #352	@ 0x160
 8005152:	4618      	mov	r0, r3
 8005154:	932e      	str	r3, [sp, #184]	@ 0xb8
 8005156:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800515a:	f012 fb11 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800515e:	f504 7340 	add.w	r3, r4, #768	@ 0x300
 8005162:	a958      	add	r1, sp, #352	@ 0x160
 8005164:	4618      	mov	r0, r3
 8005166:	932f      	str	r3, [sp, #188]	@ 0xbc
 8005168:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800516c:	f012 fb08 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005170:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 8005174:	a958      	add	r1, sp, #352	@ 0x160
 8005176:	4618      	mov	r0, r3
 8005178:	9330      	str	r3, [sp, #192]	@ 0xc0
 800517a:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800517e:	f012 faff 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005182:	f504 7356 	add.w	r3, r4, #856	@ 0x358
 8005186:	a958      	add	r1, sp, #352	@ 0x160
 8005188:	4618      	mov	r0, r3
 800518a:	9331      	str	r3, [sp, #196]	@ 0xc4
 800518c:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005190:	f012 faf6 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005194:	f504 7361 	add.w	r3, r4, #900	@ 0x384
 8005198:	a958      	add	r1, sp, #352	@ 0x160
 800519a:	4618      	mov	r0, r3
 800519c:	9332      	str	r3, [sp, #200]	@ 0xc8
 800519e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80051a2:	f012 faed 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80051a6:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 80051aa:	a958      	add	r1, sp, #352	@ 0x160
 80051ac:	4618      	mov	r0, r3
 80051ae:	9333      	str	r3, [sp, #204]	@ 0xcc
 80051b0:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80051b4:	f012 fae4 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80051b8:	f504 7377 	add.w	r3, r4, #988	@ 0x3dc
 80051bc:	a958      	add	r1, sp, #352	@ 0x160
 80051be:	4618      	mov	r0, r3
 80051c0:	9334      	str	r3, [sp, #208]	@ 0xd0
 80051c2:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80051c6:	f012 fadb 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80051ca:	f504 6381 	add.w	r3, r4, #1032	@ 0x408
 80051ce:	a958      	add	r1, sp, #352	@ 0x160
 80051d0:	4618      	mov	r0, r3
 80051d2:	9335      	str	r3, [sp, #212]	@ 0xd4
 80051d4:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80051d8:	f012 fad2 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80051dc:	f204 4334 	addw	r3, r4, #1076	@ 0x434
 80051e0:	a958      	add	r1, sp, #352	@ 0x160
 80051e2:	4618      	mov	r0, r3
 80051e4:	9336      	str	r3, [sp, #216]	@ 0xd8
 80051e6:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80051ea:	f012 fac9 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80051ee:	f504 638c 	add.w	r3, r4, #1120	@ 0x460
 80051f2:	a958      	add	r1, sp, #352	@ 0x160
 80051f4:	4618      	mov	r0, r3
 80051f6:	9337      	str	r3, [sp, #220]	@ 0xdc
 80051f8:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80051fc:	f012 fac0 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005200:	f204 438c 	addw	r3, r4, #1164	@ 0x48c
 8005204:	a958      	add	r1, sp, #352	@ 0x160
 8005206:	4618      	mov	r0, r3
 8005208:	9338      	str	r3, [sp, #224]	@ 0xe0
 800520a:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800520e:	f012 fab7 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005212:	f504 6397 	add.w	r3, r4, #1208	@ 0x4b8
 8005216:	a958      	add	r1, sp, #352	@ 0x160
 8005218:	4618      	mov	r0, r3
 800521a:	9339      	str	r3, [sp, #228]	@ 0xe4
 800521c:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005220:	f012 faae 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005224:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 8005228:	a958      	add	r1, sp, #352	@ 0x160
 800522a:	4618      	mov	r0, r3
 800522c:	933a      	str	r3, [sp, #232]	@ 0xe8
 800522e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005232:	f012 faa5 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005236:	f504 63a2 	add.w	r3, r4, #1296	@ 0x510
 800523a:	a958      	add	r1, sp, #352	@ 0x160
 800523c:	4618      	mov	r0, r3
 800523e:	933b      	str	r3, [sp, #236]	@ 0xec
 8005240:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005244:	f012 fa9c 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005248:	f204 533c 	addw	r3, r4, #1340	@ 0x53c
 800524c:	a958      	add	r1, sp, #352	@ 0x160
 800524e:	4618      	mov	r0, r3
 8005250:	933c      	str	r3, [sp, #240]	@ 0xf0
 8005252:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005256:	f012 fa93 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800525a:	f504 63ad 	add.w	r3, r4, #1384	@ 0x568
 800525e:	a958      	add	r1, sp, #352	@ 0x160
 8005260:	4618      	mov	r0, r3
 8005262:	933d      	str	r3, [sp, #244]	@ 0xf4
 8005264:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005268:	f012 fa8a 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800526c:	f204 5394 	addw	r3, r4, #1428	@ 0x594
 8005270:	a958      	add	r1, sp, #352	@ 0x160
 8005272:	4618      	mov	r0, r3
 8005274:	933e      	str	r3, [sp, #248]	@ 0xf8
 8005276:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800527a:	f012 fa81 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800527e:	f504 63b8 	add.w	r3, r4, #1472	@ 0x5c0
 8005282:	a958      	add	r1, sp, #352	@ 0x160
 8005284:	4618      	mov	r0, r3
 8005286:	933f      	str	r3, [sp, #252]	@ 0xfc
 8005288:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800528c:	f012 fa78 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005290:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
 8005294:	a958      	add	r1, sp, #352	@ 0x160
 8005296:	4618      	mov	r0, r3
 8005298:	9340      	str	r3, [sp, #256]	@ 0x100
 800529a:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800529e:	f012 fa6f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80052a2:	f504 63c3 	add.w	r3, r4, #1560	@ 0x618
 80052a6:	a958      	add	r1, sp, #352	@ 0x160
 80052a8:	4618      	mov	r0, r3
 80052aa:	9341      	str	r3, [sp, #260]	@ 0x104
 80052ac:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80052b0:	f012 fa66 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80052b4:	f204 6344 	addw	r3, r4, #1604	@ 0x644
 80052b8:	a958      	add	r1, sp, #352	@ 0x160
 80052ba:	4618      	mov	r0, r3
 80052bc:	9342      	str	r3, [sp, #264]	@ 0x108
 80052be:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80052c2:	f012 fa5d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80052c6:	f504 63ce 	add.w	r3, r4, #1648	@ 0x670
 80052ca:	a958      	add	r1, sp, #352	@ 0x160
 80052cc:	4618      	mov	r0, r3
 80052ce:	9343      	str	r3, [sp, #268]	@ 0x10c
 80052d0:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80052d4:	f012 fa54 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80052d8:	f204 639c 	addw	r3, r4, #1692	@ 0x69c
 80052dc:	a958      	add	r1, sp, #352	@ 0x160
 80052de:	4618      	mov	r0, r3
 80052e0:	9344      	str	r3, [sp, #272]	@ 0x110
 80052e2:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80052e6:	f012 fa4b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80052ea:	f504 63d9 	add.w	r3, r4, #1736	@ 0x6c8
 80052ee:	a958      	add	r1, sp, #352	@ 0x160
 80052f0:	4618      	mov	r0, r3
 80052f2:	9345      	str	r3, [sp, #276]	@ 0x114
 80052f4:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80052f8:	f012 fa42 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80052fc:	f204 63f4 	addw	r3, r4, #1780	@ 0x6f4
 8005300:	a958      	add	r1, sp, #352	@ 0x160
 8005302:	4618      	mov	r0, r3
 8005304:	9346      	str	r3, [sp, #280]	@ 0x118
 8005306:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800530a:	f012 fa39 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800530e:	f504 63e4 	add.w	r3, r4, #1824	@ 0x720
 8005312:	a958      	add	r1, sp, #352	@ 0x160
 8005314:	4618      	mov	r0, r3
 8005316:	9347      	str	r3, [sp, #284]	@ 0x11c
 8005318:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800531c:	f012 fa30 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005320:	f204 734c 	addw	r3, r4, #1868	@ 0x74c
 8005324:	4618      	mov	r0, r3
 8005326:	9352      	str	r3, [sp, #328]	@ 0x148
 8005328:	f7fd fbd2 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 800532c:	f504 63ef 	add.w	r3, r4, #1912	@ 0x778
 8005330:	4618      	mov	r0, r3
 8005332:	9353      	str	r3, [sp, #332]	@ 0x14c
 8005334:	f7fd fbcc 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8005338:	f204 73a4 	addw	r3, r4, #1956	@ 0x7a4
 800533c:	a958      	add	r1, sp, #352	@ 0x160
 800533e:	4618      	mov	r0, r3
 8005340:	9348      	str	r3, [sp, #288]	@ 0x120
 8005342:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005346:	f012 fa1b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800534a:	f504 63fa 	add.w	r3, r4, #2000	@ 0x7d0
 800534e:	a958      	add	r1, sp, #352	@ 0x160
 8005350:	4618      	mov	r0, r3
 8005352:	9349      	str	r3, [sp, #292]	@ 0x124
 8005354:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005358:	f012 fa12 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800535c:	f204 73fc 	addw	r3, r4, #2044	@ 0x7fc
 8005360:	a958      	add	r1, sp, #352	@ 0x160
 8005362:	4618      	mov	r0, r3
 8005364:	934a      	str	r3, [sp, #296]	@ 0x128
 8005366:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800536a:	f012 fa09 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800536e:	f604 0328 	addw	r3, r4, #2088	@ 0x828
 8005372:	a958      	add	r1, sp, #352	@ 0x160
 8005374:	4618      	mov	r0, r3
 8005376:	934b      	str	r3, [sp, #300]	@ 0x12c
 8005378:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800537c:	f012 fa00 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005380:	f604 0354 	addw	r3, r4, #2132	@ 0x854
 8005384:	a958      	add	r1, sp, #352	@ 0x160
 8005386:	4618      	mov	r0, r3
 8005388:	e002      	b.n	8005390 <_ZN18GameScreenViewBaseC1Ev+0x35c>
 800538a:	bf00      	nop
 800538c:	080313ac 	.word	0x080313ac
 8005390:	934c      	str	r3, [sp, #304]	@ 0x130
 8005392:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005396:	f012 f9f3 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800539a:	f504 6308 	add.w	r3, r4, #2176	@ 0x880
 800539e:	a958      	add	r1, sp, #352	@ 0x160
 80053a0:	4618      	mov	r0, r3
 80053a2:	934d      	str	r3, [sp, #308]	@ 0x134
 80053a4:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053a8:	f012 f9ea 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053ac:	f604 03ac 	addw	r3, r4, #2220	@ 0x8ac
 80053b0:	a958      	add	r1, sp, #352	@ 0x160
 80053b2:	4618      	mov	r0, r3
 80053b4:	934e      	str	r3, [sp, #312]	@ 0x138
 80053b6:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053ba:	f012 f9e1 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053be:	f604 03d8 	addw	r3, r4, #2264	@ 0x8d8
 80053c2:	a958      	add	r1, sp, #352	@ 0x160
 80053c4:	4618      	mov	r0, r3
 80053c6:	934f      	str	r3, [sp, #316]	@ 0x13c
 80053c8:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053cc:	f012 f9d8 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053d0:	f604 1304 	addw	r3, r4, #2308	@ 0x904
 80053d4:	a958      	add	r1, sp, #352	@ 0x160
 80053d6:	4618      	mov	r0, r3
 80053d8:	9350      	str	r3, [sp, #320]	@ 0x140
 80053da:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053de:	f012 f9cf 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053e2:	f504 6313 	add.w	r3, r4, #2352	@ 0x930
 80053e6:	a958      	add	r1, sp, #352	@ 0x160
 80053e8:	4618      	mov	r0, r3
 80053ea:	9351      	str	r3, [sp, #324]	@ 0x144
 80053ec:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053f0:	f012 f9c6 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053f4:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 80053f8:	4618      	mov	r0, r3
 80053fa:	930b      	str	r3, [sp, #44]	@ 0x2c
 80053fc:	f7ff fdf8 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005400:	f604 13a4 	addw	r3, r4, #2468	@ 0x9a4
 8005404:	4618      	mov	r0, r3
 8005406:	930c      	str	r3, [sp, #48]	@ 0x30
 8005408:	f7ff fdf2 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 800540c:	f604 13ec 	addw	r3, r4, #2540	@ 0x9ec
 8005410:	4618      	mov	r0, r3
 8005412:	930d      	str	r3, [sp, #52]	@ 0x34
 8005414:	f7ff fdec 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005418:	f604 2334 	addw	r3, r4, #2612	@ 0xa34
 800541c:	4618      	mov	r0, r3
 800541e:	930e      	str	r3, [sp, #56]	@ 0x38
 8005420:	f7ff fde6 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005424:	f604 237c 	addw	r3, r4, #2684	@ 0xa7c
 8005428:	4618      	mov	r0, r3
 800542a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800542c:	f7ff fde0 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005430:	f604 23c4 	addw	r3, r4, #2756	@ 0xac4
 8005434:	4618      	mov	r0, r3
 8005436:	9310      	str	r3, [sp, #64]	@ 0x40
 8005438:	f7ff fdda 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 800543c:	f604 330c 	addw	r3, r4, #2828	@ 0xb0c
 8005440:	4618      	mov	r0, r3
 8005442:	9311      	str	r3, [sp, #68]	@ 0x44
 8005444:	f7ff fdd4 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005448:	f604 3354 	addw	r3, r4, #2900	@ 0xb54
 800544c:	4618      	mov	r0, r3
 800544e:	9312      	str	r3, [sp, #72]	@ 0x48
 8005450:	f7ff fdce 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005454:	f604 339c 	addw	r3, r4, #2972	@ 0xb9c
 8005458:	4618      	mov	r0, r3
 800545a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800545c:	f7ff fdc8 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005460:	f604 33e4 	addw	r3, r4, #3044	@ 0xbe4
 8005464:	4618      	mov	r0, r3
 8005466:	9314      	str	r3, [sp, #80]	@ 0x50
 8005468:	f7ff fdc2 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 800546c:	f604 432c 	addw	r3, r4, #3116	@ 0xc2c
 8005470:	4618      	mov	r0, r3
 8005472:	9315      	str	r3, [sp, #84]	@ 0x54
 8005474:	f7ff fdbc 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005478:	f604 4374 	addw	r3, r4, #3188	@ 0xc74
 800547c:	4618      	mov	r0, r3
 800547e:	9316      	str	r3, [sp, #88]	@ 0x58
 8005480:	f7ff fdb6 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005484:	f604 43bc 	addw	r3, r4, #3260	@ 0xcbc
 8005488:	4618      	mov	r0, r3
 800548a:	9317      	str	r3, [sp, #92]	@ 0x5c
 800548c:	f7ff fdb0 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005490:	f604 5304 	addw	r3, r4, #3332	@ 0xd04
 8005494:	4618      	mov	r0, r3
 8005496:	9318      	str	r3, [sp, #96]	@ 0x60
 8005498:	f7ff fdaa 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 800549c:	f604 534c 	addw	r3, r4, #3404	@ 0xd4c
 80054a0:	4618      	mov	r0, r3
 80054a2:	9319      	str	r3, [sp, #100]	@ 0x64
 80054a4:	f7ff fda4 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054a8:	f604 5394 	addw	r3, r4, #3476	@ 0xd94
 80054ac:	4618      	mov	r0, r3
 80054ae:	931a      	str	r3, [sp, #104]	@ 0x68
 80054b0:	f7ff fd9e 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054b4:	f604 53dc 	addw	r3, r4, #3548	@ 0xddc
 80054b8:	4618      	mov	r0, r3
 80054ba:	931b      	str	r3, [sp, #108]	@ 0x6c
 80054bc:	f7ff fd98 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054c0:	f604 6324 	addw	r3, r4, #3620	@ 0xe24
 80054c4:	4618      	mov	r0, r3
 80054c6:	931c      	str	r3, [sp, #112]	@ 0x70
 80054c8:	f7ff fd92 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054cc:	f604 636c 	addw	r3, r4, #3692	@ 0xe6c
 80054d0:	4618      	mov	r0, r3
 80054d2:	931d      	str	r3, [sp, #116]	@ 0x74
 80054d4:	f7ff fd8c 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054d8:	f604 63b4 	addw	r3, r4, #3764	@ 0xeb4
 80054dc:	4618      	mov	r0, r3
 80054de:	931e      	str	r3, [sp, #120]	@ 0x78
 80054e0:	f7ff fd86 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054e4:	f604 63fc 	addw	r3, r4, #3836	@ 0xefc
 80054e8:	4618      	mov	r0, r3
 80054ea:	931f      	str	r3, [sp, #124]	@ 0x7c
 80054ec:	f7ff fd80 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054f0:	f604 7344 	addw	r3, r4, #3908	@ 0xf44
 80054f4:	4618      	mov	r0, r3
 80054f6:	9320      	str	r3, [sp, #128]	@ 0x80
 80054f8:	f7ff fd7a 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 80054fc:	f604 738c 	addw	r3, r4, #3980	@ 0xf8c
 8005500:	4618      	mov	r0, r3
 8005502:	9321      	str	r3, [sp, #132]	@ 0x84
 8005504:	f7ff fd74 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005508:	f604 73d4 	addw	r3, r4, #4052	@ 0xfd4
 800550c:	4618      	mov	r0, r3
 800550e:	9322      	str	r3, [sp, #136]	@ 0x88
 8005510:	f7ff fd6e 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005514:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8005518:	331c      	adds	r3, #28
 800551a:	4618      	mov	r0, r3
 800551c:	9303      	str	r3, [sp, #12]
 800551e:	f7ff fd67 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005522:	f504 5383 	add.w	r3, r4, #4192	@ 0x1060
 8005526:	3304      	adds	r3, #4
 8005528:	4618      	mov	r0, r3
 800552a:	9304      	str	r3, [sp, #16]
 800552c:	f7ff fd60 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005530:	f504 5385 	add.w	r3, r4, #4256	@ 0x10a0
 8005534:	330c      	adds	r3, #12
 8005536:	4618      	mov	r0, r3
 8005538:	9305      	str	r3, [sp, #20]
 800553a:	f7ff fd59 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 800553e:	f504 5387 	add.w	r3, r4, #4320	@ 0x10e0
 8005542:	3314      	adds	r3, #20
 8005544:	4618      	mov	r0, r3
 8005546:	9306      	str	r3, [sp, #24]
 8005548:	f7ff fd52 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 800554c:	f504 5389 	add.w	r3, r4, #4384	@ 0x1120
 8005550:	331c      	adds	r3, #28
 8005552:	4618      	mov	r0, r3
 8005554:	9307      	str	r3, [sp, #28]
 8005556:	f7ff fd4b 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 800555a:	f504 538c 	add.w	r3, r4, #4480	@ 0x1180
 800555e:	3304      	adds	r3, #4
 8005560:	4618      	mov	r0, r3
 8005562:	9308      	str	r3, [sp, #32]
 8005564:	f7ff fd44 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005568:	f504 538e 	add.w	r3, r4, #4544	@ 0x11c0
 800556c:	330c      	adds	r3, #12
 800556e:	4618      	mov	r0, r3
 8005570:	9309      	str	r3, [sp, #36]	@ 0x24
 8005572:	f7ff fd3d 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
 8005576:	f504 5390 	add.w	r3, r4, #4608	@ 0x1200
 800557a:	3314      	adds	r3, #20
    __background.setPosition(0, 0, 240, 320);
 800557c:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
GameScreenViewBase::GameScreenViewBase()
 8005580:	4618      	mov	r0, r3
 8005582:	930a      	str	r3, [sp, #40]	@ 0x28
 8005584:	f7ff fd34 	bl	8004ff0 <_ZN8touchgfx8TextAreaC1Ev>
    __background.setPosition(0, 0, 240, 320);
 8005588:	462a      	mov	r2, r5
 800558a:	f8cd b000 	str.w	fp, [sp]
 800558e:	4629      	mov	r1, r5
 8005590:	4650      	mov	r0, sl
 8005592:	23f0      	movs	r3, #240	@ 0xf0
 8005594:	1d26      	adds	r6, r4, #4
 8005596:	f7fd fa87 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800559a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800559e:	66a3      	str	r3, [r4, #104]	@ 0x68
 80055a0:	4651      	mov	r1, sl
 80055a2:	4630      	mov	r0, r6
 80055a4:	f00f fa12 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80055a8:	2353      	movs	r3, #83	@ 0x53
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_STAGE2_ID));
 80055aa:	a958      	add	r1, sp, #352	@ 0x160
 80055ac:	4638      	mov	r0, r7
 80055ae:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80055b2:	f012 ff81 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 80055b6:	462a      	mov	r2, r5
 80055b8:	23f0      	movs	r3, #240	@ 0xf0
 80055ba:	f8cd b000 	str.w	fp, [sp]
 80055be:	4629      	mov	r1, r5
 80055c0:	4638      	mov	r0, r7
 80055c2:	f7fd fa71 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80055c6:	4629      	mov	r1, r5
 80055c8:	4638      	mov	r0, r7
 80055ca:	f012 f894 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80055ce:	4639      	mov	r1, r7
 80055d0:	4630      	mov	r0, r6
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 80055d2:	271d      	movs	r7, #29
 80055d4:	f00f f9fa 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80055d8:	2301      	movs	r3, #1
    BITMAP_HP_100_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR1_ID));
 80055da:	a958      	add	r1, sp, #352	@ 0x160
 80055dc:	4648      	mov	r0, r9
 80055de:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80055e2:	f012 ff69 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 80055e6:	2369      	movs	r3, #105	@ 0x69
 80055e8:	2206      	movs	r2, #6
 80055ea:	9700      	str	r7, [sp, #0]
 80055ec:	4648      	mov	r0, r9
 80055ee:	2105      	movs	r1, #5
 80055f0:	f7fd fa5a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80055f4:	4629      	mov	r1, r5
 80055f6:	4648      	mov	r0, r9
 80055f8:	f012 f87d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80055fc:	4649      	mov	r1, r9
 80055fe:	4630      	mov	r0, r6
 8005600:	f00f f9e4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005604:	f04f 0b03 	mov.w	fp, #3
    BITMAP_HP_10_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR11_ID));
 8005608:	a958      	add	r1, sp, #352	@ 0x160
 800560a:	4640      	mov	r0, r8
 800560c:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
 8005610:	f012 ff52 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID.setPosition(5, 6, 105, 29);
 8005614:	2206      	movs	r2, #6
 8005616:	2369      	movs	r3, #105	@ 0x69
 8005618:	9700      	str	r7, [sp, #0]
 800561a:	4640      	mov	r0, r8
 800561c:	2105      	movs	r1, #5
 800561e:	f7fd fa43 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005622:	4629      	mov	r1, r5
 8005624:	4640      	mov	r0, r8
 8005626:	f012 f866 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800562a:	4641      	mov	r1, r8
 800562c:	4630      	mov	r0, r6
        visible = vis;
 800562e:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 8005632:	f00f f9cb 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR12_ID));
 8005636:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8005638:	2304      	movs	r3, #4
 800563a:	a958      	add	r1, sp, #352	@ 0x160
 800563c:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005640:	f012 ff3a 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID.setPosition(5, 6, 105, 29);
 8005644:	2206      	movs	r2, #6
 8005646:	2369      	movs	r3, #105	@ 0x69
 8005648:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 800564a:	9700      	str	r7, [sp, #0]
 800564c:	2105      	movs	r1, #5
 800564e:	f7fd fa2b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005652:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8005654:	4629      	mov	r1, r5
 8005656:	f012 f84e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800565a:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 800565c:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8005660:	4630      	mov	r0, r6
 8005662:	f00f f9b3 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR10_ID));
 8005666:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8005668:	2302      	movs	r3, #2
 800566a:	a958      	add	r1, sp, #352	@ 0x160
 800566c:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005670:	f012 ff22 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID.setPosition(5, 6, 105, 29);
 8005674:	2206      	movs	r2, #6
 8005676:	2369      	movs	r3, #105	@ 0x69
 8005678:	9824      	ldr	r0, [sp, #144]	@ 0x90
 800567a:	9700      	str	r7, [sp, #0]
 800567c:	2105      	movs	r1, #5
 800567e:	f7fd fa13 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005682:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8005684:	4629      	mov	r1, r5
 8005686:	f012 f836 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800568a:	9924      	ldr	r1, [sp, #144]	@ 0x90
 800568c:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 8005690:	4630      	mov	r0, r6
 8005692:	f00f f99b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR9_ID));
 8005696:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8005698:	230c      	movs	r3, #12
 800569a:	a958      	add	r1, sp, #352	@ 0x160
 800569c:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80056a0:	f012 ff0a 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID.setPosition(5, 6, 105, 29);
 80056a4:	2206      	movs	r2, #6
 80056a6:	2369      	movs	r3, #105	@ 0x69
 80056a8:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80056aa:	9700      	str	r7, [sp, #0]
 80056ac:	2105      	movs	r1, #5
 80056ae:	f7fd f9fb 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80056b2:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80056b4:	4629      	mov	r1, r5
 80056b6:	f012 f81e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80056ba:	9925      	ldr	r1, [sp, #148]	@ 0x94
 80056bc:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 80056c0:	4630      	mov	r0, r6
 80056c2:	f00f f983 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR8_ID));
 80056c6:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80056c8:	230b      	movs	r3, #11
 80056ca:	a958      	add	r1, sp, #352	@ 0x160
 80056cc:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80056d0:	f012 fef2 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID.setPosition(5, 6, 105, 29);
 80056d4:	2206      	movs	r2, #6
 80056d6:	2369      	movs	r3, #105	@ 0x69
 80056d8:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80056da:	9700      	str	r7, [sp, #0]
 80056dc:	2105      	movs	r1, #5
 80056de:	f7fd f9e3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80056e2:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80056e4:	4629      	mov	r1, r5
 80056e6:	f012 f806 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80056ea:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80056ec:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 80056f0:	4630      	mov	r0, r6
 80056f2:	f00f f96b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR7_ID));
 80056f6:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80056f8:	230a      	movs	r3, #10
 80056fa:	a958      	add	r1, sp, #352	@ 0x160
 80056fc:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005700:	f012 feda 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID.setPosition(5, 6, 105, 29);
 8005704:	2206      	movs	r2, #6
 8005706:	2369      	movs	r3, #105	@ 0x69
 8005708:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 800570a:	9700      	str	r7, [sp, #0]
 800570c:	2105      	movs	r1, #5
 800570e:	f7fd f9cb 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005712:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8005714:	4629      	mov	r1, r5
 8005716:	f011 ffee 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800571a:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 800571c:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8005720:	4630      	mov	r0, r6
 8005722:	f00f f953 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR6_ID));
 8005726:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8005728:	2309      	movs	r3, #9
 800572a:	a958      	add	r1, sp, #352	@ 0x160
 800572c:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005730:	f012 fec2 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID.setPosition(5, 6, 105, 29);
 8005734:	2206      	movs	r2, #6
 8005736:	2369      	movs	r3, #105	@ 0x69
 8005738:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 800573a:	9700      	str	r7, [sp, #0]
 800573c:	2105      	movs	r1, #5
 800573e:	f7fd f9b3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005742:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8005744:	4629      	mov	r1, r5
 8005746:	f011 ffd6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800574a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 800574c:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 8005750:	4630      	mov	r0, r6
 8005752:	f00f f93b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR5_ID));
 8005756:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8005758:	2308      	movs	r3, #8
 800575a:	a958      	add	r1, sp, #352	@ 0x160
 800575c:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005760:	f012 feaa 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID.setPosition(5, 6, 105, 29);
 8005764:	2369      	movs	r3, #105	@ 0x69
 8005766:	2206      	movs	r2, #6
 8005768:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 800576a:	9700      	str	r7, [sp, #0]
 800576c:	2105      	movs	r1, #5
 800576e:	f7fd f99b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005772:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8005774:	4629      	mov	r1, r5
 8005776:	f011 ffbe 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800577a:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800577c:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 8005780:	4630      	mov	r0, r6
 8005782:	f00f f923 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005786:	f04f 0807 	mov.w	r8, #7
    BITMAP_HP_80_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR4_ID));
 800578a:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 800578c:	f8ad 8160 	strh.w	r8, [sp, #352]	@ 0x160
 8005790:	a958      	add	r1, sp, #352	@ 0x160
 8005792:	f012 fe91 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID.setPosition(5, 6, 105, 29);
 8005796:	2369      	movs	r3, #105	@ 0x69
 8005798:	2206      	movs	r2, #6
 800579a:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 800579c:	9700      	str	r7, [sp, #0]
 800579e:	2105      	movs	r1, #5
 80057a0:	f7fd f982 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80057a4:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80057a6:	4629      	mov	r1, r5
 80057a8:	f011 ffa5 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80057ac:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80057ae:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 80057b2:	4630      	mov	r0, r6
 80057b4:	f04f 0906 	mov.w	r9, #6
 80057b8:	f00f f908 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR3_ID));
 80057bc:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80057be:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 80057c2:	a958      	add	r1, sp, #352	@ 0x160
 80057c4:	f012 fe78 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID.setPosition(5, 6, 105, 29);
 80057c8:	464a      	mov	r2, r9
 80057ca:	2369      	movs	r3, #105	@ 0x69
 80057cc:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80057ce:	9700      	str	r7, [sp, #0]
 80057d0:	2105      	movs	r1, #5
 80057d2:	f7fd f969 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80057d6:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80057d8:	4629      	mov	r1, r5
 80057da:	f011 ff8c 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80057de:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80057e0:	f884 5275 	strb.w	r5, [r4, #629]	@ 0x275
 80057e4:	4630      	mov	r0, r6
 80057e6:	f00f f8f1 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80057ea:	f04f 0a05 	mov.w	sl, #5
    BITMAP_HP_100_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BAR2_ID));
 80057ee:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 80057f0:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
 80057f4:	a958      	add	r1, sp, #352	@ 0x160
 80057f6:	f012 fe5f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID_1.setPosition(126, 6, 105, 29);
 80057fa:	464a      	mov	r2, r9
 80057fc:	2369      	movs	r3, #105	@ 0x69
 80057fe:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8005800:	9700      	str	r7, [sp, #0]
 8005802:	217e      	movs	r1, #126	@ 0x7e
 8005804:	f7fd f950 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005808:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800580a:	4629      	mov	r1, r5
 800580c:	f011 ff73 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005810:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8005812:	4630      	mov	r0, r6
 8005814:	f00f f8da 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH9_ID));
 8005818:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 800581a:	2316      	movs	r3, #22
 800581c:	a958      	add	r1, sp, #352	@ 0x160
 800581e:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005822:	f012 fe49 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID_1.setPosition(126, 6, 105, 29);
 8005826:	464a      	mov	r2, r9
 8005828:	2369      	movs	r3, #105	@ 0x69
 800582a:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 800582c:	9700      	str	r7, [sp, #0]
 800582e:	217e      	movs	r1, #126	@ 0x7e
 8005830:	f7fd f93a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005834:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8005836:	4629      	mov	r1, r5
 8005838:	f011 ff5d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800583c:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800583e:	f884 52cd 	strb.w	r5, [r4, #717]	@ 0x2cd
 8005842:	4630      	mov	r0, r6
 8005844:	f00f f8c2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH8_ID));
 8005848:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 800584a:	2315      	movs	r3, #21
 800584c:	a958      	add	r1, sp, #352	@ 0x160
 800584e:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005852:	f012 fe31 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID_1.setPosition(126, 6, 105, 29);
 8005856:	464a      	mov	r2, r9
 8005858:	2369      	movs	r3, #105	@ 0x69
 800585a:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 800585c:	9700      	str	r7, [sp, #0]
 800585e:	217e      	movs	r1, #126	@ 0x7e
 8005860:	f7fd f922 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005864:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8005866:	4629      	mov	r1, r5
 8005868:	f011 ff45 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800586c:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 800586e:	f884 52f9 	strb.w	r5, [r4, #761]	@ 0x2f9
 8005872:	4630      	mov	r0, r6
 8005874:	f00f f8aa 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH7_ID));
 8005878:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 800587a:	2314      	movs	r3, #20
 800587c:	a958      	add	r1, sp, #352	@ 0x160
 800587e:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005882:	f012 fe19 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID_1.setPosition(126, 6, 105, 29);
 8005886:	464a      	mov	r2, r9
 8005888:	2369      	movs	r3, #105	@ 0x69
 800588a:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 800588c:	9700      	str	r7, [sp, #0]
 800588e:	217e      	movs	r1, #126	@ 0x7e
 8005890:	f7fd f90a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005894:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8005896:	4629      	mov	r1, r5
 8005898:	f011 ff2d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800589c:	992f      	ldr	r1, [sp, #188]	@ 0xbc
 800589e:	f884 5325 	strb.w	r5, [r4, #805]	@ 0x325
 80058a2:	4630      	mov	r0, r6
 80058a4:	f00f f892 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH6_ID));
 80058a8:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 80058aa:	2313      	movs	r3, #19
 80058ac:	a958      	add	r1, sp, #352	@ 0x160
 80058ae:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80058b2:	f012 fe01 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID_1.setPosition(126, 6, 105, 29);
 80058b6:	464a      	mov	r2, r9
 80058b8:	2369      	movs	r3, #105	@ 0x69
 80058ba:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 80058bc:	9700      	str	r7, [sp, #0]
 80058be:	217e      	movs	r1, #126	@ 0x7e
 80058c0:	f7fd f8f2 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80058c4:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 80058c6:	4629      	mov	r1, r5
 80058c8:	f011 ff15 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80058cc:	9930      	ldr	r1, [sp, #192]	@ 0xc0
 80058ce:	f884 5351 	strb.w	r5, [r4, #849]	@ 0x351
 80058d2:	4630      	mov	r0, r6
 80058d4:	f00f f87a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH5_ID));
 80058d8:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 80058da:	2312      	movs	r3, #18
 80058dc:	a958      	add	r1, sp, #352	@ 0x160
 80058de:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80058e2:	f012 fde9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID_1.setPosition(126, 6, 105, 29);
 80058e6:	464a      	mov	r2, r9
 80058e8:	2369      	movs	r3, #105	@ 0x69
 80058ea:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 80058ec:	9700      	str	r7, [sp, #0]
 80058ee:	217e      	movs	r1, #126	@ 0x7e
 80058f0:	f7fd f8da 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80058f4:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 80058f6:	4629      	mov	r1, r5
 80058f8:	f011 fefd 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80058fc:	9931      	ldr	r1, [sp, #196]	@ 0xc4
 80058fe:	f884 537d 	strb.w	r5, [r4, #893]	@ 0x37d
 8005902:	4630      	mov	r0, r6
 8005904:	f00f f862 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH4_ID));
 8005908:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 800590a:	2311      	movs	r3, #17
 800590c:	a958      	add	r1, sp, #352	@ 0x160
 800590e:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005912:	f012 fdd1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID_1.setPosition(126, 6, 105, 29);
 8005916:	464a      	mov	r2, r9
 8005918:	2369      	movs	r3, #105	@ 0x69
 800591a:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 800591c:	9700      	str	r7, [sp, #0]
 800591e:	217e      	movs	r1, #126	@ 0x7e
 8005920:	f7fd f8c2 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005924:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8005926:	4629      	mov	r1, r5
 8005928:	f011 fee5 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800592c:	9932      	ldr	r1, [sp, #200]	@ 0xc8
 800592e:	f884 53a9 	strb.w	r5, [r4, #937]	@ 0x3a9
 8005932:	4630      	mov	r0, r6
 8005934:	f00f f84a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH3_ID));
 8005938:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 800593a:	2310      	movs	r3, #16
 800593c:	a958      	add	r1, sp, #352	@ 0x160
 800593e:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005942:	f012 fdb9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID_1.setPosition(126, 6, 105, 29);
 8005946:	464a      	mov	r2, r9
 8005948:	2369      	movs	r3, #105	@ 0x69
 800594a:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 800594c:	9700      	str	r7, [sp, #0]
 800594e:	217e      	movs	r1, #126	@ 0x7e
 8005950:	f7fd f8aa 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005954:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8005956:	4629      	mov	r1, r5
 8005958:	f011 fecd 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800595c:	9933      	ldr	r1, [sp, #204]	@ 0xcc
 800595e:	f884 53d5 	strb.w	r5, [r4, #981]	@ 0x3d5
 8005962:	4630      	mov	r0, r6
 8005964:	f00f f832 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH2_ID));
 8005968:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 800596a:	230f      	movs	r3, #15
 800596c:	a958      	add	r1, sp, #352	@ 0x160
 800596e:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005972:	f012 fda1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID_1.setPosition(126, 6, 105, 29);
 8005976:	464a      	mov	r2, r9
 8005978:	2369      	movs	r3, #105	@ 0x69
 800597a:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 800597c:	9700      	str	r7, [sp, #0]
 800597e:	217e      	movs	r1, #126	@ 0x7e
 8005980:	f7fd f892 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005984:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8005986:	4629      	mov	r1, r5
 8005988:	f011 feb5 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800598c:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 800598e:	f884 5401 	strb.w	r5, [r4, #1025]	@ 0x401
 8005992:	4630      	mov	r0, r6
 8005994:	f00f f81a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_10_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH1_ID));
 8005998:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 800599a:	f04f 030e 	mov.w	r3, #14
 800599e:	a958      	add	r1, sp, #352	@ 0x160
 80059a0:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80059a4:	f012 fd88 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID_1.setPosition(126, 6, 105, 29);
 80059a8:	464a      	mov	r2, r9
 80059aa:	2369      	movs	r3, #105	@ 0x69
 80059ac:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 80059ae:	9700      	str	r7, [sp, #0]
 80059b0:	217e      	movs	r1, #126	@ 0x7e
 80059b2:	f7fd f879 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80059b6:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 80059b8:	4629      	mov	r1, r5
 80059ba:	f011 fe9c 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80059be:	9935      	ldr	r1, [sp, #212]	@ 0xd4
 80059c0:	f884 542d 	strb.w	r5, [r4, #1069]	@ 0x42d
 80059c4:	4630      	mov	r0, r6
 80059c6:	f00f f801 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH0_ID));
 80059ca:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 80059cc:	230d      	movs	r3, #13
 80059ce:	a958      	add	r1, sp, #352	@ 0x160
 80059d0:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80059d4:	f012 fd70 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID_1.setPosition(126, 6, 105, 29);
 80059d8:	464a      	mov	r2, r9
 80059da:	2369      	movs	r3, #105	@ 0x69
 80059dc:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 80059de:	9700      	str	r7, [sp, #0]
 80059e0:	217e      	movs	r1, #126	@ 0x7e
 80059e2:	f7fd f861 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80059e6:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 80059e8:	4629      	mov	r1, r5
 80059ea:	f011 fe84 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80059ee:	9936      	ldr	r1, [sp, #216]	@ 0xd8
 80059f0:	f884 5459 	strb.w	r5, [r4, #1113]	@ 0x459
 80059f4:	4630      	mov	r0, r6
 80059f6:	f00e ffe9 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setPosition(167, 107, 64, 85);
 80059fa:	f04f 0955 	mov.w	r9, #85	@ 0x55
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_ID));
 80059fe:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8005a00:	2317      	movs	r3, #23
 8005a02:	a958      	add	r1, sp, #352	@ 0x160
 8005a04:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005a08:	f012 fd56 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(167, 107, 64, 85);
 8005a0c:	2340      	movs	r3, #64	@ 0x40
 8005a0e:	226b      	movs	r2, #107	@ 0x6b
 8005a10:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8005a12:	f8cd 9000 	str.w	r9, [sp]
 8005a16:	21a7      	movs	r1, #167	@ 0xa7
 8005a18:	f7fd f846 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005a1c:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8005a1e:	4629      	mov	r1, r5
 8005a20:	f011 fe69 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005a24:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 8005a26:	4630      	mov	r0, r6
 8005a28:	f00e ffd0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_win.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_WIN_ID));
 8005a2c:	9838      	ldr	r0, [sp, #224]	@ 0xe0
 8005a2e:	f04f 021c 	mov.w	r2, #28
 8005a32:	a958      	add	r1, sp, #352	@ 0x160
 8005a34:	f8ad 2160 	strh.w	r2, [sp, #352]	@ 0x160
 8005a38:	f012 fd3e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_win.setPosition(161, 107, 76, 85);
 8005a3c:	234c      	movs	r3, #76	@ 0x4c
 8005a3e:	226b      	movs	r2, #107	@ 0x6b
 8005a40:	9838      	ldr	r0, [sp, #224]	@ 0xe0
 8005a42:	f8cd 9000 	str.w	r9, [sp]
 8005a46:	21a1      	movs	r1, #161	@ 0xa1
 8005a48:	f7fd f82e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005a4c:	9838      	ldr	r0, [sp, #224]	@ 0xe0
 8005a4e:	4629      	mov	r1, r5
 8005a50:	f011 fe51 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005a54:	9938      	ldr	r1, [sp, #224]	@ 0xe0
 8005a56:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 8005a5a:	4630      	mov	r0, r6
 8005a5c:	f00e ffb6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_lose.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_DIE_ID));
 8005a60:	a858      	add	r0, sp, #352	@ 0x160
 8005a62:	f04f 011a 	mov.w	r1, #26
 8005a66:	f8ad 1160 	strh.w	r1, [sp, #352]	@ 0x160
 8005a6a:	4601      	mov	r1, r0
 8005a6c:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 8005a6e:	f012 fd23 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_lose.setPosition(167, 112, 64, 85);
 8005a72:	2340      	movs	r3, #64	@ 0x40
 8005a74:	2270      	movs	r2, #112	@ 0x70
 8005a76:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 8005a78:	f8cd 9000 	str.w	r9, [sp]
 8005a7c:	21a7      	movs	r1, #167	@ 0xa7
 8005a7e:	f7fd f813 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005a82:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 8005a84:	4629      	mov	r1, r5
 8005a86:	f011 fe36 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005a8a:	9939      	ldr	r1, [sp, #228]	@ 0xe4
 8005a8c:	f884 54dd 	strb.w	r5, [r4, #1245]	@ 0x4dd
 8005a90:	4630      	mov	r0, r6
 8005a92:	f00e ff9b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_SPE_ID));
 8005a96:	f50d 7cb0 	add.w	ip, sp, #352	@ 0x160
 8005a9a:	f04f 001b 	mov.w	r0, #27
 8005a9e:	4661      	mov	r1, ip
 8005aa0:	f8ad 0160 	strh.w	r0, [sp, #352]	@ 0x160
 8005aa4:	983a      	ldr	r0, [sp, #232]	@ 0xe8
 8005aa6:	f012 fd07 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe.setPosition(99, 62, 117, 130);
 8005aaa:	2382      	movs	r3, #130	@ 0x82
 8005aac:	223e      	movs	r2, #62	@ 0x3e
 8005aae:	983a      	ldr	r0, [sp, #232]	@ 0xe8
 8005ab0:	9300      	str	r3, [sp, #0]
 8005ab2:	2163      	movs	r1, #99	@ 0x63
 8005ab4:	2375      	movs	r3, #117	@ 0x75
 8005ab6:	f7fc fff7 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005aba:	983a      	ldr	r0, [sp, #232]	@ 0xe8
 8005abc:	4629      	mov	r1, r5
 8005abe:	f011 fe1a 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005ac2:	993a      	ldr	r1, [sp, #232]	@ 0xe8
 8005ac4:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 8005ac8:	4630      	mov	r0, r6
 8005aca:	f00e ff7f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_def.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_DEF_ID));
 8005ace:	f50d 7eb0 	add.w	lr, sp, #352	@ 0x160
 8005ad2:	f04f 0c19 	mov.w	ip, #25
 8005ad6:	4671      	mov	r1, lr
 8005ad8:	983b      	ldr	r0, [sp, #236]	@ 0xec
 8005ada:	f8ad c160 	strh.w	ip, [sp, #352]	@ 0x160
 8005ade:	f012 fceb 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_def.setPosition(164, 95, 76, 97);
 8005ae2:	2361      	movs	r3, #97	@ 0x61
 8005ae4:	225f      	movs	r2, #95	@ 0x5f
 8005ae6:	983b      	ldr	r0, [sp, #236]	@ 0xec
 8005ae8:	9300      	str	r3, [sp, #0]
 8005aea:	21a4      	movs	r1, #164	@ 0xa4
 8005aec:	234c      	movs	r3, #76	@ 0x4c
 8005aee:	f7fc ffdb 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005af2:	983b      	ldr	r0, [sp, #236]	@ 0xec
 8005af4:	4629      	mov	r1, r5
 8005af6:	f011 fdfe 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005afa:	993b      	ldr	r1, [sp, #236]	@ 0xec
 8005afc:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 8005b00:	4630      	mov	r0, r6
 8005b02:	f00e ff63 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005b06:	f04f 0e18 	mov.w	lr, #24
    bleach_atk.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_ATK_ID));
 8005b0a:	983c      	ldr	r0, [sp, #240]	@ 0xf0
 8005b0c:	f8ad e160 	strh.w	lr, [sp, #352]	@ 0x160
 8005b10:	a958      	add	r1, sp, #352	@ 0x160
 8005b12:	f012 fcd1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_atk.setPosition(110, 66, 103, 126);
 8005b16:	237e      	movs	r3, #126	@ 0x7e
 8005b18:	2242      	movs	r2, #66	@ 0x42
 8005b1a:	983c      	ldr	r0, [sp, #240]	@ 0xf0
 8005b1c:	9300      	str	r3, [sp, #0]
 8005b1e:	216e      	movs	r1, #110	@ 0x6e
 8005b20:	2367      	movs	r3, #103	@ 0x67
 8005b22:	f7fc ffc1 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b26:	983c      	ldr	r0, [sp, #240]	@ 0xf0
 8005b28:	4629      	mov	r1, r5
 8005b2a:	f011 fde4 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005b2e:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 8005b30:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 8005b34:	4630      	mov	r0, r6
 8005b36:	f00e ff49 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 8005b3a:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 8005b3c:	2333      	movs	r3, #51	@ 0x33
 8005b3e:	a958      	add	r1, sp, #352	@ 0x160
 8005b40:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005b44:	f012 fcb8 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(3, 110, 67, 85);
 8005b48:	2343      	movs	r3, #67	@ 0x43
 8005b4a:	226e      	movs	r2, #110	@ 0x6e
 8005b4c:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 8005b4e:	f8cd 9000 	str.w	r9, [sp]
 8005b52:	4659      	mov	r1, fp
 8005b54:	f7fc ffa8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b58:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 8005b5a:	4629      	mov	r1, r5
 8005b5c:	f011 fdcb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005b60:	f04f 0b38 	mov.w	fp, #56	@ 0x38
 8005b64:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8005b66:	4630      	mov	r0, r6
 8005b68:	f00e ff30 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005b6c:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_WIN_ID));
 8005b70:	f50d 7bb0 	add.w	fp, sp, #352	@ 0x160
 8005b74:	983e      	ldr	r0, [sp, #248]	@ 0xf8
 8005b76:	4659      	mov	r1, fp
    naruto_win.setPosition(7, 99, 73, 93);
 8005b78:	f04f 0b5d 	mov.w	fp, #93	@ 0x5d
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_WIN_ID));
 8005b7c:	f012 fc9c 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_win.setPosition(7, 99, 73, 93);
 8005b80:	2263      	movs	r2, #99	@ 0x63
 8005b82:	2349      	movs	r3, #73	@ 0x49
 8005b84:	983e      	ldr	r0, [sp, #248]	@ 0xf8
 8005b86:	f8cd b000 	str.w	fp, [sp]
 8005b8a:	4641      	mov	r1, r8
 8005b8c:	f7fc ff8c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b90:	983e      	ldr	r0, [sp, #248]	@ 0xf8
 8005b92:	4629      	mov	r1, r5
 8005b94:	f011 fdaf 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005b98:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 8005b9a:	f884 55b9 	strb.w	r5, [r4, #1465]	@ 0x5b9
 8005b9e:	4630      	mov	r0, r6
 8005ba0:	f00e ff14 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_lose.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DIE_ID));
 8005ba4:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 8005ba6:	2336      	movs	r3, #54	@ 0x36
 8005ba8:	a958      	add	r1, sp, #352	@ 0x160
 8005baa:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005bae:	f012 fc83 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_lose.setPosition(7, 117, 67, 85);
 8005bb2:	2275      	movs	r2, #117	@ 0x75
 8005bb4:	2343      	movs	r3, #67	@ 0x43
 8005bb6:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 8005bb8:	f8cd 9000 	str.w	r9, [sp]
 8005bbc:	4641      	mov	r1, r8
 8005bbe:	f7fc ff73 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005bc2:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 8005bc4:	4629      	mov	r1, r5
 8005bc6:	f011 fd96 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_SPE_ID));
 8005bca:	f50d 78b0 	add.w	r8, sp, #352	@ 0x160
 8005bce:	993f      	ldr	r1, [sp, #252]	@ 0xfc
 8005bd0:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 8005bd4:	4630      	mov	r0, r6
 8005bd6:	f00e fef9 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005bda:	9840      	ldr	r0, [sp, #256]	@ 0x100
 8005bdc:	2337      	movs	r3, #55	@ 0x37
 8005bde:	4641      	mov	r1, r8
 8005be0:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005be4:	f012 fc68 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(63, 103, 69, 93);
 8005be8:	2267      	movs	r2, #103	@ 0x67
 8005bea:	2345      	movs	r3, #69	@ 0x45
 8005bec:	9840      	ldr	r0, [sp, #256]	@ 0x100
 8005bee:	f8cd b000 	str.w	fp, [sp]
 8005bf2:	213f      	movs	r1, #63	@ 0x3f
 8005bf4:	f7fc ff58 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005bf8:	9840      	ldr	r0, [sp, #256]	@ 0x100
 8005bfa:	4629      	mov	r1, r5
 8005bfc:	f011 fd7b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005c00:	9940      	ldr	r1, [sp, #256]	@ 0x100
 8005c02:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 8005c06:	4630      	mov	r0, r6
 8005c08:	f00e fee0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DEF_ID));
 8005c0c:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8005c0e:	2335      	movs	r3, #53	@ 0x35
 8005c10:	4641      	mov	r1, r8
    naruto_def.setPosition(5, 100, 69, 92);
 8005c12:	f04f 085c 	mov.w	r8, #92	@ 0x5c
 8005c16:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DEF_ID));
 8005c1a:	f012 fc4d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(5, 100, 69, 92);
 8005c1e:	2264      	movs	r2, #100	@ 0x64
 8005c20:	2345      	movs	r3, #69	@ 0x45
 8005c22:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8005c24:	f8cd 8000 	str.w	r8, [sp]
 8005c28:	4651      	mov	r1, sl
 8005c2a:	f7fc ff3d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005c2e:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8005c30:	4629      	mov	r1, r5
 8005c32:	f011 fd60 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_ATK_ID));
 8005c36:	f50d 79b0 	add.w	r9, sp, #352	@ 0x160
 8005c3a:	9941      	ldr	r1, [sp, #260]	@ 0x104
 8005c3c:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 8005c40:	4630      	mov	r0, r6
 8005c42:	f00e fec3 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005c46:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8005c48:	2334      	movs	r3, #52	@ 0x34
 8005c4a:	4649      	mov	r1, r9
 8005c4c:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005c50:	f012 fc32 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(57, 100, 69, 92);
 8005c54:	2345      	movs	r3, #69	@ 0x45
 8005c56:	2264      	movs	r2, #100	@ 0x64
 8005c58:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8005c5a:	f8cd 8000 	str.w	r8, [sp]
 8005c5e:	2139      	movs	r1, #57	@ 0x39
 8005c60:	f7fc ff22 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005c64:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8005c66:	4629      	mov	r1, r5
 8005c68:	f011 fd45 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005c6c:	9942      	ldr	r1, [sp, #264]	@ 0x108
 8005c6e:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 8005c72:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 8005c74:	f04f 082e 	mov.w	r8, #46	@ 0x2e
 8005c78:	f00e fea8 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 8005c7c:	9843      	ldr	r0, [sp, #268]	@ 0x10c
 8005c7e:	f8ad 5160 	strh.w	r5, [sp, #352]	@ 0x160
 8005c82:	4649      	mov	r1, r9
 8005c84:	f012 fc18 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 8005c88:	4643      	mov	r3, r8
 8005c8a:	22f2      	movs	r2, #242	@ 0xf2
 8005c8c:	9843      	ldr	r0, [sp, #268]	@ 0x10c
 8005c8e:	f8cd 8000 	str.w	r8, [sp]
 8005c92:	2140      	movs	r1, #64	@ 0x40
 8005c94:	f7fc ff08 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005c98:	9843      	ldr	r0, [sp, #268]	@ 0x10c
 8005c9a:	4629      	mov	r1, r5
 8005c9c:	f011 fd2b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8005ca0:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 8005ca4:	9943      	ldr	r1, [sp, #268]	@ 0x10c
 8005ca6:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 8005caa:	4630      	mov	r0, r6
 8005cac:	f00e fe8e 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005cb0:	f04f 091f 	mov.w	r9, #31
 8005cb4:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8005cb6:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8005cba:	4651      	mov	r1, sl
 8005cbc:	f012 fbfc 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 8005cc0:	4643      	mov	r3, r8
 8005cc2:	22f2      	movs	r2, #242	@ 0xf2
 8005cc4:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8005cc6:	f8cd 8000 	str.w	r8, [sp]
 8005cca:	217c      	movs	r1, #124	@ 0x7c
 8005ccc:	f7fc feec 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005cd0:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8005cd2:	4629      	mov	r1, r5
 8005cd4:	f011 fd0f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005cd8:	9944      	ldr	r1, [sp, #272]	@ 0x110
 8005cda:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 8005cde:	4630      	mov	r0, r6
 8005ce0:	f00e fe74 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 8005ce4:	9845      	ldr	r0, [sp, #276]	@ 0x114
 8005ce6:	234c      	movs	r3, #76	@ 0x4c
 8005ce8:	4651      	mov	r1, sl
 8005cea:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005cee:	f012 fbe3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 8005cf2:	4643      	mov	r3, r8
 8005cf4:	22f2      	movs	r2, #242	@ 0xf2
 8005cf6:	9845      	ldr	r0, [sp, #276]	@ 0x114
 8005cf8:	f8cd 8000 	str.w	r8, [sp]
 8005cfc:	21b8      	movs	r1, #184	@ 0xb8
 8005cfe:	f7fc fed3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005d02:	9845      	ldr	r0, [sp, #276]	@ 0x114
 8005d04:	4629      	mov	r1, r5
 8005d06:	f011 fcf6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005d0a:	f04f 0a3a 	mov.w	sl, #58	@ 0x3a
 8005d0e:	9945      	ldr	r1, [sp, #276]	@ 0x114
 8005d10:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 8005d14:	4630      	mov	r0, r6
 8005d16:	f00e fe59 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005d1a:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 8005d1e:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 8005d22:	9846      	ldr	r0, [sp, #280]	@ 0x118
 8005d24:	4651      	mov	r1, sl
 8005d26:	f012 fbc7 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 8005d2a:	4643      	mov	r3, r8
 8005d2c:	22f1      	movs	r2, #241	@ 0xf1
 8005d2e:	9846      	ldr	r0, [sp, #280]	@ 0x118
 8005d30:	f8cd 8000 	str.w	r8, [sp]
 8005d34:	2102      	movs	r1, #2
 8005d36:	f7fc feb7 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005d3a:	9846      	ldr	r0, [sp, #280]	@ 0x118
 8005d3c:	4629      	mov	r1, r5
 8005d3e:	f011 fcda 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005d42:	f04f 0a39 	mov.w	sl, #57	@ 0x39
 8005d46:	9946      	ldr	r1, [sp, #280]	@ 0x118
 8005d48:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 8005d4c:	4630      	mov	r0, r6
 8005d4e:	f00e fe3d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005d52:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 8005d56:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 8005d5a:	9847      	ldr	r0, [sp, #284]	@ 0x11c
 8005d5c:	4651      	mov	r1, sl
 8005d5e:	f012 fbab 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 8005d62:	4643      	mov	r3, r8
 8005d64:	22f1      	movs	r2, #241	@ 0xf1
 8005d66:	9847      	ldr	r0, [sp, #284]	@ 0x11c
 8005d68:	f8cd 8000 	str.w	r8, [sp]
 8005d6c:	2102      	movs	r1, #2
 8005d6e:	f7fc fe9b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005d72:	9847      	ldr	r0, [sp, #284]	@ 0x11c
 8005d74:	4629      	mov	r1, r5
 8005d76:	f011 fcbe 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    chakra_box1.setPosition(14, 43, 86, 5);
 8005d7a:	f04f 0805 	mov.w	r8, #5
 8005d7e:	9947      	ldr	r1, [sp, #284]	@ 0x11c
 8005d80:	4630      	mov	r0, r6
 8005d82:	f00e fe23 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005d86:	9852      	ldr	r0, [sp, #328]	@ 0x148
 8005d88:	f8cd 8000 	str.w	r8, [sp]
 8005d8c:	2356      	movs	r3, #86	@ 0x56
 8005d8e:	f8df 8724 	ldr.w	r8, [pc, #1828]	@ 80064b4 <_ZN18GameScreenViewBaseC1Ev+0x1480>
 8005d92:	222b      	movs	r2, #43	@ 0x2b
 8005d94:	210e      	movs	r1, #14
 8005d96:	f7fc fe87 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakra_box2.setPosition(135, 43, 86, 5);
 8005d9a:	f04f 0a05 	mov.w	sl, #5
 8005d9e:	9952      	ldr	r1, [sp, #328]	@ 0x148
 8005da0:	f8c4 8774 	str.w	r8, [r4, #1908]	@ 0x774
 8005da4:	4630      	mov	r0, r6
 8005da6:	f00e fe11 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005daa:	222b      	movs	r2, #43	@ 0x2b
 8005dac:	9853      	ldr	r0, [sp, #332]	@ 0x14c
 8005dae:	f8cd a000 	str.w	sl, [sp]
 8005db2:	2356      	movs	r3, #86	@ 0x56
 8005db4:	2187      	movs	r1, #135	@ 0x87
 8005db6:	f7fc fe77 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dba:	9953      	ldr	r1, [sp, #332]	@ 0x14c
 8005dbc:	f8c4 87a0 	str.w	r8, [r4, #1952]	@ 0x7a0
 8005dc0:	4630      	mov	r0, r6
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 8005dc2:	f50d 78b0 	add.w	r8, sp, #352	@ 0x160
 8005dc6:	f00e fe01 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005dca:	9848      	ldr	r0, [sp, #288]	@ 0x120
 8005dcc:	232a      	movs	r3, #42	@ 0x2a
 8005dce:	4641      	mov	r1, r8
    gameover.setPosition(65, 6, 110, 157);
 8005dd0:	f04f 089d 	mov.w	r8, #157	@ 0x9d
 8005dd4:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 8005dd8:	f012 fb6e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.setPosition(65, 6, 110, 157);
 8005ddc:	2206      	movs	r2, #6
 8005dde:	236e      	movs	r3, #110	@ 0x6e
 8005de0:	9848      	ldr	r0, [sp, #288]	@ 0x120
 8005de2:	f8cd 8000 	str.w	r8, [sp]
 8005de6:	2141      	movs	r1, #65	@ 0x41
 8005de8:	f7fc fe5e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    gameover.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005dec:	9848      	ldr	r0, [sp, #288]	@ 0x120
 8005dee:	4629      	mov	r1, r5
 8005df0:	f011 fc81 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    win.setBitmap(touchgfx::Bitmap(BITMAP_YOUWIN_ID));
 8005df4:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 8005df8:	9948      	ldr	r1, [sp, #288]	@ 0x120
 8005dfa:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 8005dfe:	4630      	mov	r0, r6
 8005e00:	f00e fde4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e04:	9849      	ldr	r0, [sp, #292]	@ 0x124
 8005e06:	2359      	movs	r3, #89	@ 0x59
 8005e08:	4651      	mov	r1, sl
 8005e0a:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005e0e:	f012 fb53 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    win.setPosition(65, 6, 110, 157);
 8005e12:	236e      	movs	r3, #110	@ 0x6e
 8005e14:	2206      	movs	r2, #6
 8005e16:	9849      	ldr	r0, [sp, #292]	@ 0x124
 8005e18:	f8cd 8000 	str.w	r8, [sp]
 8005e1c:	2141      	movs	r1, #65	@ 0x41
 8005e1e:	f7fc fe43 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005e22:	9849      	ldr	r0, [sp, #292]	@ 0x124
 8005e24:	4629      	mov	r1, r5
 8005e26:	f011 fc66 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005e2a:	9949      	ldr	r1, [sp, #292]	@ 0x124
 8005e2c:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5
 8005e30:	4630      	mov	r0, r6
 8005e32:	f00e fdcb 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_2.setPosition(199, 61, 32, 37);
 8005e36:	f04f 0825 	mov.w	r8, #37	@ 0x25
    x2dame_2.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8005e3a:	984a      	ldr	r0, [sp, #296]	@ 0x128
 8005e3c:	f04f 0958 	mov.w	r9, #88	@ 0x58
 8005e40:	4651      	mov	r1, sl
 8005e42:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8005e46:	f012 fb37 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_2.setPosition(199, 61, 32, 37);
 8005e4a:	2320      	movs	r3, #32
 8005e4c:	223d      	movs	r2, #61	@ 0x3d
 8005e4e:	984a      	ldr	r0, [sp, #296]	@ 0x128
 8005e50:	f8cd 8000 	str.w	r8, [sp]
 8005e54:	21c7      	movs	r1, #199	@ 0xc7
 8005e56:	f7fc fe27 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005e5a:	984a      	ldr	r0, [sp, #296]	@ 0x128
 8005e5c:	4629      	mov	r1, r5
 8005e5e:	f011 fc4a 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005e62:	994a      	ldr	r1, [sp, #296]	@ 0x128
 8005e64:	f884 5821 	strb.w	r5, [r4, #2081]	@ 0x821
 8005e68:	4630      	mov	r0, r6
 8005e6a:	f00e fdaf 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_1.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8005e6e:	984b      	ldr	r0, [sp, #300]	@ 0x12c
 8005e70:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8005e74:	4651      	mov	r1, sl
 8005e76:	f012 fb1f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_1.setPosition(7, 61, 32, 37);
 8005e7a:	2320      	movs	r3, #32
 8005e7c:	223d      	movs	r2, #61	@ 0x3d
 8005e7e:	984b      	ldr	r0, [sp, #300]	@ 0x12c
 8005e80:	f8cd 8000 	str.w	r8, [sp]
 8005e84:	2107      	movs	r1, #7
 8005e86:	f7fc fe0f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005e8a:	984b      	ldr	r0, [sp, #300]	@ 0x12c
 8005e8c:	4629      	mov	r1, r5
 8005e8e:	f011 fc32 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    healthplus_1.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8005e92:	f50d 7bb0 	add.w	fp, sp, #352	@ 0x160
 8005e96:	994b      	ldr	r1, [sp, #300]	@ 0x12c
 8005e98:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
 8005e9c:	4630      	mov	r0, r6
 8005e9e:	f00e fd95 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005ea2:	f04f 0a2c 	mov.w	sl, #44	@ 0x2c
 8005ea6:	984c      	ldr	r0, [sp, #304]	@ 0x130
 8005ea8:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
 8005eac:	4659      	mov	r1, fp
 8005eae:	f012 fb03 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_1.setPosition(9, 61, 32, 37);
 8005eb2:	2320      	movs	r3, #32
 8005eb4:	223d      	movs	r2, #61	@ 0x3d
 8005eb6:	984c      	ldr	r0, [sp, #304]	@ 0x130
 8005eb8:	f8cd 8000 	str.w	r8, [sp]
 8005ebc:	2109      	movs	r1, #9
 8005ebe:	f7fc fdf3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005ec2:	984c      	ldr	r0, [sp, #304]	@ 0x130
 8005ec4:	4629      	mov	r1, r5
 8005ec6:	f011 fc16 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005eca:	994c      	ldr	r1, [sp, #304]	@ 0x130
 8005ecc:	f884 5879 	strb.w	r5, [r4, #2169]	@ 0x879
 8005ed0:	4630      	mov	r0, r6
 8005ed2:	f00e fd7b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005ed6:	f04f 091e 	mov.w	r9, #30
    chakragain_1.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 8005eda:	984d      	ldr	r0, [sp, #308]	@ 0x134
 8005edc:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8005ee0:	4659      	mov	r1, fp
 8005ee2:	f012 fae9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_1.setPosition(9, 61, 32, 37);
 8005ee6:	2320      	movs	r3, #32
 8005ee8:	223d      	movs	r2, #61	@ 0x3d
 8005eea:	984d      	ldr	r0, [sp, #308]	@ 0x134
 8005eec:	f8cd 8000 	str.w	r8, [sp]
 8005ef0:	2109      	movs	r1, #9
 8005ef2:	f7fc fdd9 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005ef6:	984d      	ldr	r0, [sp, #308]	@ 0x134
 8005ef8:	4629      	mov	r1, r5
 8005efa:	f011 fbfc 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005efe:	994d      	ldr	r1, [sp, #308]	@ 0x134
 8005f00:	f884 58a5 	strb.w	r5, [r4, #2213]	@ 0x8a5
 8005f04:	4630      	mov	r0, r6
 8005f06:	f00e fd61 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005f0a:	f04f 0b4b 	mov.w	fp, #75	@ 0x4b
    sheild_1.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 8005f0e:	984e      	ldr	r0, [sp, #312]	@ 0x138
 8005f10:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
 8005f14:	a958      	add	r1, sp, #352	@ 0x160
 8005f16:	f012 facf 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_1.setPosition(8, 59, 32, 37);
 8005f1a:	2320      	movs	r3, #32
 8005f1c:	223b      	movs	r2, #59	@ 0x3b
 8005f1e:	984e      	ldr	r0, [sp, #312]	@ 0x138
 8005f20:	f8cd 8000 	str.w	r8, [sp]
 8005f24:	2108      	movs	r1, #8
 8005f26:	f7fc fdbf 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005f2a:	984e      	ldr	r0, [sp, #312]	@ 0x138
 8005f2c:	4629      	mov	r1, r5
 8005f2e:	f011 fbe2 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005f32:	994e      	ldr	r1, [sp, #312]	@ 0x138
 8005f34:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 8005f38:	4630      	mov	r0, r6
 8005f3a:	f00e fd47 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005f3e:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
    sheild_2.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 8005f42:	f50d 7bb0 	add.w	fp, sp, #352	@ 0x160
 8005f46:	984f      	ldr	r0, [sp, #316]	@ 0x13c
 8005f48:	4659      	mov	r1, fp
 8005f4a:	f012 fab5 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_2.setPosition(199, 58, 32, 37);
 8005f4e:	2320      	movs	r3, #32
 8005f50:	223a      	movs	r2, #58	@ 0x3a
 8005f52:	984f      	ldr	r0, [sp, #316]	@ 0x13c
 8005f54:	f8cd 8000 	str.w	r8, [sp]
 8005f58:	21c7      	movs	r1, #199	@ 0xc7
 8005f5a:	f7fc fda5 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005f5e:	984f      	ldr	r0, [sp, #316]	@ 0x13c
 8005f60:	4629      	mov	r1, r5
 8005f62:	f011 fbc8 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005f66:	994f      	ldr	r1, [sp, #316]	@ 0x13c
 8005f68:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 8005f6c:	4630      	mov	r0, r6
 8005f6e:	f00e fd2d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakragain_2.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 8005f72:	9850      	ldr	r0, [sp, #320]	@ 0x140
 8005f74:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8005f78:	4659      	mov	r1, fp
 8005f7a:	f012 fa9d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_2.setPosition(199, 61, 32, 37);
 8005f7e:	2320      	movs	r3, #32
 8005f80:	223d      	movs	r2, #61	@ 0x3d
 8005f82:	9850      	ldr	r0, [sp, #320]	@ 0x140
 8005f84:	f8cd 8000 	str.w	r8, [sp]
 8005f88:	21c7      	movs	r1, #199	@ 0xc7
 8005f8a:	f7fc fd8d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005f8e:	9850      	ldr	r0, [sp, #320]	@ 0x140
 8005f90:	4629      	mov	r1, r5
 8005f92:	f011 fbb0 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005f96:	9950      	ldr	r1, [sp, #320]	@ 0x140
 8005f98:	f884 5929 	strb.w	r5, [r4, #2345]	@ 0x929
 8005f9c:	4630      	mov	r0, r6
 8005f9e:	f00e fd15 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    healthplus_2.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8005fa2:	9851      	ldr	r0, [sp, #324]	@ 0x144
 8005fa4:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
 8005fa8:	4659      	mov	r1, fp
 8005faa:	f012 fa85 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_2.setPosition(199, 61, 32, 37);
 8005fae:	2320      	movs	r3, #32
 8005fb0:	223d      	movs	r2, #61	@ 0x3d
 8005fb2:	9851      	ldr	r0, [sp, #324]	@ 0x144
 8005fb4:	f8cd 8000 	str.w	r8, [sp]
 8005fb8:	21c7      	movs	r1, #199	@ 0xc7
 8005fba:	f7fc fd75 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005fbe:	9851      	ldr	r0, [sp, #324]	@ 0x144
 8005fc0:	f8df a4f4 	ldr.w	sl, [pc, #1268]	@ 80064b8 <_ZN18GameScreenViewBaseC1Ev+0x1484>
 8005fc4:	4629      	mov	r1, r5
 8005fc6:	f011 fb96 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005fca:	9951      	ldr	r1, [sp, #324]	@ 0x144
 8005fcc:	f884 5955 	strb.w	r5, [r4, #2389]	@ 0x955
 8005fd0:	4630      	mov	r0, r6
        boundingArea = calculateBoundingArea();
 8005fd2:	f50d 78a8 	add.w	r8, sp, #336	@ 0x150
        color = newColor;
 8005fd6:	f04f 4b7f 	mov.w	fp, #4278190080	@ 0xff000000
 8005fda:	f00e fcf7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_0.setXY(64, 113);
 8005fde:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005fe0:	2271      	movs	r2, #113	@ 0x71
 8005fe2:	2140      	movs	r1, #64	@ 0x40
 8005fe4:	f7fc fd53 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005fe8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        color = newColor;
 8005fea:	f8c4 b98c 	str.w	fp, [r4, #2444]	@ 0x98c
        boundingArea = calculateBoundingArea();
 8005fee:	4640      	mov	r0, r8
        linespace = space;
 8005ff0:	f8a4 5990 	strh.w	r5, [r4, #2448]	@ 0x990
        boundingArea = calculateBoundingArea();
 8005ff4:	f011 fec8 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ff8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005ffc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005ffe:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006002:	333c      	adds	r3, #60	@ 0x3c
 8006004:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006008:	f04f 031f 	mov.w	r3, #31
    minus_0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q361));
 800600c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800600e:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006012:	a958      	add	r1, sp, #352	@ 0x160
 8006014:	f012 f960 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006018:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800601a:	f884 5981 	strb.w	r5, [r4, #2433]	@ 0x981
 800601e:	4630      	mov	r0, r6
 8006020:	f00e fcd4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_0_1.setXY(161, 107);
 8006024:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006026:	226b      	movs	r2, #107	@ 0x6b
 8006028:	21a1      	movs	r1, #161	@ 0xa1
 800602a:	f7fc fd30 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 800602e:	990c      	ldr	r1, [sp, #48]	@ 0x30
        color = newColor;
 8006030:	f8c4 b9d4 	str.w	fp, [r4, #2516]	@ 0x9d4
        boundingArea = calculateBoundingArea();
 8006034:	4640      	mov	r0, r8
        linespace = space;
 8006036:	f8a4 59d8 	strh.w	r5, [r4, #2520]	@ 0x9d8
        boundingArea = calculateBoundingArea();
 800603a:	f011 fea5 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800603e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006042:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006044:	f8ad 9164 	strh.w	r9, [sp, #356]	@ 0x164
 8006048:	333c      	adds	r3, #60	@ 0x3c
    minus_0_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F1PO));
 800604a:	f50d 79b0 	add.w	r9, sp, #352	@ 0x160
 800604e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006052:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006054:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006058:	4649      	mov	r1, r9
 800605a:	f012 f93d 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800605e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8006060:	f884 59c9 	strb.w	r5, [r4, #2505]	@ 0x9c9
 8006064:	4630      	mov	r0, r6
 8006066:	f00e fcb1 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_1.setXY(82, 140);
 800606a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800606c:	228c      	movs	r2, #140	@ 0x8c
 800606e:	2152      	movs	r1, #82	@ 0x52
 8006070:	f7fc fd0d 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006074:	990d      	ldr	r1, [sp, #52]	@ 0x34
        color = newColor;
 8006076:	f8c4 ba1c 	str.w	fp, [r4, #2588]	@ 0xa1c
        boundingArea = calculateBoundingArea();
 800607a:	4640      	mov	r0, r8
        linespace = space;
 800607c:	f8a4 5a20 	strh.w	r5, [r4, #2592]	@ 0xa20
        boundingArea = calculateBoundingArea();
 8006080:	f011 fe82 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006084:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006088:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800608a:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800608e:	333c      	adds	r3, #60	@ 0x3c
 8006090:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006094:	2312      	movs	r3, #18
    minus_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JUKL));
 8006096:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8006098:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800609c:	4649      	mov	r1, r9
 800609e:	f012 f91b 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060a2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80060a4:	f884 5a11 	strb.w	r5, [r4, #2577]	@ 0xa11
 80060a8:	4630      	mov	r0, r6
 80060aa:	f00e fc8f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_1_1.setXY(181, 87);
 80060ae:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80060b0:	2257      	movs	r2, #87	@ 0x57
 80060b2:	21b5      	movs	r1, #181	@ 0xb5
 80060b4:	f7fc fceb 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80060b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
        color = newColor;
 80060ba:	f8c4 ba64 	str.w	fp, [r4, #2660]	@ 0xa64
        boundingArea = calculateBoundingArea();
 80060be:	4640      	mov	r0, r8
        linespace = space;
 80060c0:	f8a4 5a68 	strh.w	r5, [r4, #2664]	@ 0xa68
        boundingArea = calculateBoundingArea();
 80060c4:	f011 fe60 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060c8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80060cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80060ce:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80060d2:	333c      	adds	r3, #60	@ 0x3c
 80060d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060d8:	2311      	movs	r3, #17
    minus_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_539L));
 80060da:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80060dc:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80060e0:	4649      	mov	r1, r9
 80060e2:	f012 f8f9 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060e6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80060e8:	f884 5a59 	strb.w	r5, [r4, #2649]	@ 0xa59
 80060ec:	4630      	mov	r0, r6
 80060ee:	f00e fc6d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_3.setXY(65, 107);
 80060f2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80060f4:	226b      	movs	r2, #107	@ 0x6b
 80060f6:	2141      	movs	r1, #65	@ 0x41
 80060f8:	f7fc fcc9 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80060fc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
        color = newColor;
 80060fe:	f8c4 baac 	str.w	fp, [r4, #2732]	@ 0xaac
        boundingArea = calculateBoundingArea();
 8006102:	4640      	mov	r0, r8
        linespace = space;
 8006104:	f8a4 5ab0 	strh.w	r5, [r4, #2736]	@ 0xab0
        boundingArea = calculateBoundingArea();
 8006108:	f011 fe3e 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800610c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006110:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006112:	f8ad 7164 	strh.w	r7, [sp, #356]	@ 0x164
 8006116:	333c      	adds	r3, #60	@ 0x3c
 8006118:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ABJK));
 800611c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800611e:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006122:	4649      	mov	r1, r9
 8006124:	f012 f8d8 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006128:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800612a:	f884 5aa1 	strb.w	r5, [r4, #2721]	@ 0xaa1
 800612e:	4630      	mov	r0, r6
 8006130:	f00e fc4c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_3_1.setXY(190, 87);
 8006134:	9810      	ldr	r0, [sp, #64]	@ 0x40
        color = newColor;
 8006136:	4fde      	ldr	r7, [pc, #888]	@ (80064b0 <_ZN18GameScreenViewBaseC1Ev+0x147c>)
 8006138:	2257      	movs	r2, #87	@ 0x57
 800613a:	21be      	movs	r1, #190	@ 0xbe
 800613c:	f7fc fca7 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006140:	9910      	ldr	r1, [sp, #64]	@ 0x40
        color = newColor;
 8006142:	f8c4 baf4 	str.w	fp, [r4, #2804]	@ 0xaf4
        boundingArea = calculateBoundingArea();
 8006146:	4640      	mov	r0, r8
        linespace = space;
 8006148:	f8a4 5af8 	strh.w	r5, [r4, #2808]	@ 0xaf8
        boundingArea = calculateBoundingArea();
 800614c:	f011 fe1c 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006150:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006154:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006156:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800615a:	333c      	adds	r3, #60	@ 0x3c
 800615c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006160:	f04f 021c 	mov.w	r2, #28
    minus_3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7L2W));
 8006164:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8006166:	f8ad 2164 	strh.w	r2, [sp, #356]	@ 0x164
 800616a:	4649      	mov	r1, r9
 800616c:	f012 f8b4 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006170:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8006172:	f884 5ae9 	strb.w	r5, [r4, #2793]	@ 0xae9
 8006176:	4630      	mov	r0, r6
 8006178:	f00e fc28 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_4.setXY(65, 107);
 800617c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800617e:	226b      	movs	r2, #107	@ 0x6b
 8006180:	2141      	movs	r1, #65	@ 0x41
 8006182:	f7fc fc84 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006186:	9911      	ldr	r1, [sp, #68]	@ 0x44
        color = newColor;
 8006188:	f8c4 bb3c 	str.w	fp, [r4, #2876]	@ 0xb3c
        boundingArea = calculateBoundingArea();
 800618c:	4640      	mov	r0, r8
        linespace = space;
 800618e:	f8a4 5b40 	strh.w	r5, [r4, #2880]	@ 0xb40
        boundingArea = calculateBoundingArea();
 8006192:	f011 fdf9 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006196:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800619a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800619c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80061a0:	333c      	adds	r3, #60	@ 0x3c
 80061a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061a6:	f04f 001b 	mov.w	r0, #27
 80061aa:	f8ad 0164 	strh.w	r0, [sp, #356]	@ 0x164
    minus_4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D4S));
 80061ae:	4649      	mov	r1, r9
 80061b0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80061b2:	f012 f891 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061b6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80061b8:	f884 5b31 	strb.w	r5, [r4, #2865]	@ 0xb31
 80061bc:	4630      	mov	r0, r6
 80061be:	f00e fc05 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_4_1.setXY(65, 107);
 80061c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80061c4:	226b      	movs	r2, #107	@ 0x6b
 80061c6:	2141      	movs	r1, #65	@ 0x41
 80061c8:	f7fc fc61 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80061cc:	9912      	ldr	r1, [sp, #72]	@ 0x48
        color = newColor;
 80061ce:	f8c4 bb84 	str.w	fp, [r4, #2948]	@ 0xb84
        boundingArea = calculateBoundingArea();
 80061d2:	4640      	mov	r0, r8
        linespace = space;
 80061d4:	f8a4 5b88 	strh.w	r5, [r4, #2952]	@ 0xb88
        boundingArea = calculateBoundingArea();
 80061d8:	f011 fdd6 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80061e0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80061e2:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80061e6:	333c      	adds	r3, #60	@ 0x3c
 80061e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061ec:	f04f 011a 	mov.w	r1, #26
    minus_4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PNWU));
 80061f0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80061f2:	f8ad 1164 	strh.w	r1, [sp, #356]	@ 0x164
 80061f6:	4649      	mov	r1, r9
 80061f8:	f012 f86e 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061fc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80061fe:	f884 5b79 	strb.w	r5, [r4, #2937]	@ 0xb79
 8006202:	4630      	mov	r0, r6
 8006204:	f00e fbe2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_5.setXY(56, 87);
 8006208:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 800620a:	2257      	movs	r2, #87	@ 0x57
 800620c:	2138      	movs	r1, #56	@ 0x38
 800620e:	f7fc fc3e 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006212:	9913      	ldr	r1, [sp, #76]	@ 0x4c
        color = newColor;
 8006214:	f8c4 bbcc 	str.w	fp, [r4, #3020]	@ 0xbcc
        boundingArea = calculateBoundingArea();
 8006218:	4640      	mov	r0, r8
        linespace = space;
 800621a:	f8a4 5bd0 	strh.w	r5, [r4, #3024]	@ 0xbd0
        boundingArea = calculateBoundingArea();
 800621e:	f011 fdb3 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006222:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006226:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006228:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800622c:	333c      	adds	r3, #60	@ 0x3c
 800622e:	f04f 0c19 	mov.w	ip, #25
 8006232:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V88D));
 8006236:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8006238:	f8ad c164 	strh.w	ip, [sp, #356]	@ 0x164
 800623c:	4649      	mov	r1, r9
 800623e:	f012 f84b 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006242:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006244:	f884 5bc1 	strb.w	r5, [r4, #3009]	@ 0xbc1
 8006248:	4630      	mov	r0, r6
 800624a:	f00e fbbf 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_5_1.setXY(149, 150);
 800624e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8006250:	2296      	movs	r2, #150	@ 0x96
 8006252:	2195      	movs	r1, #149	@ 0x95
 8006254:	f7fc fc1b 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006258:	9914      	ldr	r1, [sp, #80]	@ 0x50
        color = newColor;
 800625a:	f8c4 bc14 	str.w	fp, [r4, #3092]	@ 0xc14
        boundingArea = calculateBoundingArea();
 800625e:	4640      	mov	r0, r8
        linespace = space;
 8006260:	f8a4 5c18 	strh.w	r5, [r4, #3096]	@ 0xc18
        boundingArea = calculateBoundingArea();
 8006264:	f011 fd90 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006268:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800626c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800626e:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006272:	333c      	adds	r3, #60	@ 0x3c
 8006274:	f04f 0e18 	mov.w	lr, #24
 8006278:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NE6X));
 800627c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800627e:	f8ad e164 	strh.w	lr, [sp, #356]	@ 0x164
 8006282:	4649      	mov	r1, r9
 8006284:	f012 f828 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006288:	9914      	ldr	r1, [sp, #80]	@ 0x50
 800628a:	f884 5c09 	strb.w	r5, [r4, #3081]	@ 0xc09
 800628e:	4630      	mov	r0, r6
 8006290:	f00e fb9c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_6.setXY(74, 150);
 8006294:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8006296:	2296      	movs	r2, #150	@ 0x96
 8006298:	214a      	movs	r1, #74	@ 0x4a
 800629a:	f7fc fbf8 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 800629e:	9915      	ldr	r1, [sp, #84]	@ 0x54
        color = newColor;
 80062a0:	f8c4 bc5c 	str.w	fp, [r4, #3164]	@ 0xc5c
        boundingArea = calculateBoundingArea();
 80062a4:	4640      	mov	r0, r8
        linespace = space;
 80062a6:	f8a4 5c60 	strh.w	r5, [r4, #3168]	@ 0xc60
        boundingArea = calculateBoundingArea();
 80062aa:	f011 fd6d 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062ae:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80062b2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80062b4:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80062b8:	333c      	adds	r3, #60	@ 0x3c
 80062ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062be:	2317      	movs	r3, #23
    minus_6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WFFX));
 80062c0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80062c2:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80062c6:	4649      	mov	r1, r9
 80062c8:	f012 f806 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062cc:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80062ce:	f884 5c51 	strb.w	r5, [r4, #3153]	@ 0xc51
 80062d2:	4630      	mov	r0, r6
 80062d4:	f00e fb7a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_6_1.setXY(190, 87);
 80062d8:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80062da:	2257      	movs	r2, #87	@ 0x57
 80062dc:	21be      	movs	r1, #190	@ 0xbe
 80062de:	f7fc fbd6 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80062e2:	9916      	ldr	r1, [sp, #88]	@ 0x58
        color = newColor;
 80062e4:	f8c4 bca4 	str.w	fp, [r4, #3236]	@ 0xca4
        boundingArea = calculateBoundingArea();
 80062e8:	4640      	mov	r0, r8
        linespace = space;
 80062ea:	f8a4 5ca8 	strh.w	r5, [r4, #3240]	@ 0xca8
        boundingArea = calculateBoundingArea();
 80062ee:	f011 fd4b 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062f2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80062f6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80062f8:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80062fc:	333c      	adds	r3, #60	@ 0x3c
 80062fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006302:	2316      	movs	r3, #22
    minus_6_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1O0B));
 8006304:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8006306:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800630a:	4649      	mov	r1, r9
 800630c:	f011 ffe4 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006310:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8006312:	f884 5c99 	strb.w	r5, [r4, #3225]	@ 0xc99
 8006316:	4630      	mov	r0, r6
 8006318:	f00e fb58 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_7.setXY(33, 87);
 800631c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800631e:	2257      	movs	r2, #87	@ 0x57
 8006320:	2121      	movs	r1, #33	@ 0x21
 8006322:	f7fc fbb4 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006326:	9917      	ldr	r1, [sp, #92]	@ 0x5c
        color = newColor;
 8006328:	f8c4 bcec 	str.w	fp, [r4, #3308]	@ 0xcec
        boundingArea = calculateBoundingArea();
 800632c:	4640      	mov	r0, r8
        linespace = space;
 800632e:	f8a4 5cf0 	strh.w	r5, [r4, #3312]	@ 0xcf0
        boundingArea = calculateBoundingArea();
 8006332:	f011 fd29 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006336:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800633a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800633c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006340:	333c      	adds	r3, #60	@ 0x3c
 8006342:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006346:	2315      	movs	r3, #21
    minus_7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_56L9));
 8006348:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800634a:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800634e:	4649      	mov	r1, r9
 8006350:	f011 ffc2 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006354:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006356:	f884 5ce1 	strb.w	r5, [r4, #3297]	@ 0xce1
 800635a:	4630      	mov	r0, r6
 800635c:	f00e fb36 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_7_1.setXY(143, 160);
 8006360:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8006362:	22a0      	movs	r2, #160	@ 0xa0
 8006364:	218f      	movs	r1, #143	@ 0x8f
 8006366:	f7fc fb92 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 800636a:	9918      	ldr	r1, [sp, #96]	@ 0x60
        color = newColor;
 800636c:	f8c4 bd34 	str.w	fp, [r4, #3380]	@ 0xd34
        boundingArea = calculateBoundingArea();
 8006370:	4640      	mov	r0, r8
        linespace = space;
 8006372:	f8a4 5d38 	strh.w	r5, [r4, #3384]	@ 0xd38
        boundingArea = calculateBoundingArea();
 8006376:	f011 fd07 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800637a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800637e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8006380:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006384:	333c      	adds	r3, #60	@ 0x3c
 8006386:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800638a:	2314      	movs	r3, #20
    minus_7_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TA5C));
 800638c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800638e:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006392:	4649      	mov	r1, r9
 8006394:	f011 ffa0 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006398:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800639a:	f884 5d29 	strb.w	r5, [r4, #3369]	@ 0xd29
 800639e:	4630      	mov	r0, r6
 80063a0:	f00e fb14 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_8.setXY(65, 97);
 80063a4:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80063a6:	2261      	movs	r2, #97	@ 0x61
 80063a8:	2141      	movs	r1, #65	@ 0x41
 80063aa:	f7fc fb70 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80063ae:	9919      	ldr	r1, [sp, #100]	@ 0x64
        color = newColor;
 80063b0:	f8c4 bd7c 	str.w	fp, [r4, #3452]	@ 0xd7c
        boundingArea = calculateBoundingArea();
 80063b4:	4640      	mov	r0, r8
        linespace = space;
 80063b6:	f8a4 5d80 	strh.w	r5, [r4, #3456]	@ 0xd80
        boundingArea = calculateBoundingArea();
 80063ba:	f011 fce5 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80063be:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80063c2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80063c4:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80063c8:	333c      	adds	r3, #60	@ 0x3c
 80063ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80063ce:	2313      	movs	r3, #19
    minus_8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QFOP));
 80063d0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80063d2:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80063d6:	4649      	mov	r1, r9
 80063d8:	f011 ff7e 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063dc:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80063de:	f884 5d71 	strb.w	r5, [r4, #3441]	@ 0xd71
 80063e2:	4630      	mov	r0, r6
 80063e4:	f00e faf2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_8_1.setXY(158, 87);
 80063e8:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80063ea:	2257      	movs	r2, #87	@ 0x57
 80063ec:	219e      	movs	r1, #158	@ 0x9e
 80063ee:	f7fc fb4e 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80063f2:	991a      	ldr	r1, [sp, #104]	@ 0x68
        color = newColor;
 80063f4:	f8c4 bdc4 	str.w	fp, [r4, #3524]	@ 0xdc4
        boundingArea = calculateBoundingArea();
 80063f8:	4640      	mov	r0, r8
        linespace = space;
 80063fa:	f8a4 5dc8 	strh.w	r5, [r4, #3528]	@ 0xdc8
        boundingArea = calculateBoundingArea();
 80063fe:	f011 fcc3 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006402:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006406:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8006408:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800640c:	333c      	adds	r3, #60	@ 0x3c
 800640e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006412:	2310      	movs	r3, #16
    minus_8_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NC8X));
 8006414:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8006416:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800641a:	4649      	mov	r1, r9
 800641c:	f011 ff5c 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006420:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8006422:	f884 5db9 	strb.w	r5, [r4, #3513]	@ 0xdb9
 8006426:	4630      	mov	r0, r6
 8006428:	f00e fad0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_10.setXY(65, 97);
 800642c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800642e:	2261      	movs	r2, #97	@ 0x61
 8006430:	2141      	movs	r1, #65	@ 0x41
 8006432:	f7fc fb2c 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006436:	991b      	ldr	r1, [sp, #108]	@ 0x6c
        color = newColor;
 8006438:	f8c4 7e0c 	str.w	r7, [r4, #3596]	@ 0xe0c
        boundingArea = calculateBoundingArea();
 800643c:	4640      	mov	r0, r8
        linespace = space;
 800643e:	f8a4 5e10 	strh.w	r5, [r4, #3600]	@ 0xe10
        boundingArea = calculateBoundingArea();
 8006442:	f011 fca1 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006446:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800644a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800644c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006450:	333c      	adds	r3, #60	@ 0x3c
 8006452:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006456:	230f      	movs	r3, #15
    minus_10.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G9CR));
 8006458:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800645a:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800645e:	4649      	mov	r1, r9
 8006460:	f011 ff3a 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006464:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8006466:	f884 5e01 	strb.w	r5, [r4, #3585]	@ 0xe01
 800646a:	4630      	mov	r0, r6
 800646c:	f00e faae 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_10_1.setXY(164, 87);
 8006470:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8006472:	2257      	movs	r2, #87	@ 0x57
 8006474:	21a4      	movs	r1, #164	@ 0xa4
 8006476:	f7fc fb0a 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 800647a:	991c      	ldr	r1, [sp, #112]	@ 0x70
        color = newColor;
 800647c:	f8c4 7e54 	str.w	r7, [r4, #3668]	@ 0xe54
        boundingArea = calculateBoundingArea();
 8006480:	4640      	mov	r0, r8
        linespace = space;
 8006482:	f8a4 5e58 	strh.w	r5, [r4, #3672]	@ 0xe58
        boundingArea = calculateBoundingArea();
 8006486:	f011 fc7f 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800648a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800648e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8006490:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006494:	333c      	adds	r3, #60	@ 0x3c
 8006496:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800649a:	f04f 030e 	mov.w	r3, #14
    minus_10_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G9X8));
 800649e:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80064a0:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80064a4:	4649      	mov	r1, r9
 80064a6:	f011 ff17 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064aa:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80064ac:	e006      	b.n	80064bc <_ZN18GameScreenViewBaseC1Ev+0x1488>
 80064ae:	bf00      	nop
 80064b0:	ffdb2323 	.word	0xffdb2323
 80064b4:	ff0066ff 	.word	0xff0066ff
 80064b8:	0803130c 	.word	0x0803130c
 80064bc:	f884 5e49 	strb.w	r5, [r4, #3657]	@ 0xe49
 80064c0:	4630      	mov	r0, r6
 80064c2:	f00e fa83 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_12.setXY(65, 97);
 80064c6:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80064c8:	2261      	movs	r2, #97	@ 0x61
 80064ca:	2141      	movs	r1, #65	@ 0x41
 80064cc:	f7fc fadf 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80064d0:	991d      	ldr	r1, [sp, #116]	@ 0x74
        color = newColor;
 80064d2:	f8c4 7e9c 	str.w	r7, [r4, #3740]	@ 0xe9c
        boundingArea = calculateBoundingArea();
 80064d6:	4640      	mov	r0, r8
        linespace = space;
 80064d8:	f8a4 5ea0 	strh.w	r5, [r4, #3744]	@ 0xea0
        boundingArea = calculateBoundingArea();
 80064dc:	f011 fc54 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064e0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80064e4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80064e6:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80064ea:	333c      	adds	r3, #60	@ 0x3c
 80064ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064f0:	f04f 090d 	mov.w	r9, #13
    minus_12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FVK3));
 80064f4:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80064f6:	f8ad 9164 	strh.w	r9, [sp, #356]	@ 0x164
 80064fa:	a958      	add	r1, sp, #352	@ 0x160
 80064fc:	f011 feec 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006500:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8006502:	f884 5e91 	strb.w	r5, [r4, #3729]	@ 0xe91
 8006506:	4630      	mov	r0, r6
 8006508:	f00e fa60 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_12_1.setXY(170, 87);
 800650c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 800650e:	2257      	movs	r2, #87	@ 0x57
 8006510:	21aa      	movs	r1, #170	@ 0xaa
 8006512:	f7fc fabc 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006516:	991e      	ldr	r1, [sp, #120]	@ 0x78
        color = newColor;
 8006518:	f8c4 7ee4 	str.w	r7, [r4, #3812]	@ 0xee4
        boundingArea = calculateBoundingArea();
 800651c:	4640      	mov	r0, r8
        linespace = space;
 800651e:	f8a4 5ee8 	strh.w	r5, [r4, #3816]	@ 0xee8
        boundingArea = calculateBoundingArea();
 8006522:	f011 fc31 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006526:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800652a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800652c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006530:	333c      	adds	r3, #60	@ 0x3c
 8006532:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006536:	230c      	movs	r3, #12
    minus_12_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VMY7));
 8006538:	981e      	ldr	r0, [sp, #120]	@ 0x78
 800653a:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800653e:	a958      	add	r1, sp, #352	@ 0x160
 8006540:	f011 feca 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006544:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8006546:	f884 5ed9 	strb.w	r5, [r4, #3801]	@ 0xed9
 800654a:	4630      	mov	r0, r6
 800654c:	f00e fa3e 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_15.setXY(59, 129);
 8006550:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8006552:	2281      	movs	r2, #129	@ 0x81
 8006554:	213b      	movs	r1, #59	@ 0x3b
 8006556:	f7fc fa9a 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 800655a:	991f      	ldr	r1, [sp, #124]	@ 0x7c
        color = newColor;
 800655c:	f8c4 7f2c 	str.w	r7, [r4, #3884]	@ 0xf2c
        boundingArea = calculateBoundingArea();
 8006560:	4640      	mov	r0, r8
        linespace = space;
 8006562:	f8a4 5f30 	strh.w	r5, [r4, #3888]	@ 0xf30
        boundingArea = calculateBoundingArea();
 8006566:	f011 fc0f 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800656a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800656e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8006570:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006574:	333c      	adds	r3, #60	@ 0x3c
 8006576:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800657a:	230b      	movs	r3, #11
    minus_15.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJL7));
 800657c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 800657e:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006582:	a958      	add	r1, sp, #352	@ 0x160
 8006584:	f011 fea8 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006588:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 800658a:	f884 5f21 	strb.w	r5, [r4, #3873]	@ 0xf21
 800658e:	4630      	mov	r0, r6
 8006590:	f00e fa1c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_15_1.setXY(147, 140);
 8006594:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8006596:	228c      	movs	r2, #140	@ 0x8c
 8006598:	2193      	movs	r1, #147	@ 0x93
 800659a:	f7fc fa78 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 800659e:	9920      	ldr	r1, [sp, #128]	@ 0x80
        color = newColor;
 80065a0:	f8c4 7f74 	str.w	r7, [r4, #3956]	@ 0xf74
        boundingArea = calculateBoundingArea();
 80065a4:	4640      	mov	r0, r8
        linespace = space;
 80065a6:	f8a4 5f78 	strh.w	r5, [r4, #3960]	@ 0xf78
        boundingArea = calculateBoundingArea();
 80065aa:	f011 fbed 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065ae:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80065b4:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80065b8:	333c      	adds	r3, #60	@ 0x3c
 80065ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065be:	230a      	movs	r3, #10
    minus_15_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X1OE));
 80065c0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80065c2:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80065c6:	a958      	add	r1, sp, #352	@ 0x160
 80065c8:	f011 fe86 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065cc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80065ce:	f884 5f69 	strb.w	r5, [r4, #3945]	@ 0xf69
 80065d2:	4630      	mov	r0, r6
 80065d4:	f00e f9fa 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_17.setXY(13, 77);
 80065d8:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80065da:	224d      	movs	r2, #77	@ 0x4d
 80065dc:	4649      	mov	r1, r9
 80065de:	f7fc fa56 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80065e2:	9921      	ldr	r1, [sp, #132]	@ 0x84
        color = newColor;
 80065e4:	f8c4 7fbc 	str.w	r7, [r4, #4028]	@ 0xfbc
        boundingArea = calculateBoundingArea();
 80065e8:	4640      	mov	r0, r8
        linespace = space;
 80065ea:	f8a4 5fc0 	strh.w	r5, [r4, #4032]	@ 0xfc0
        boundingArea = calculateBoundingArea();
 80065ee:	f011 fbcb 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065f2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065f6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80065f8:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80065fc:	333c      	adds	r3, #60	@ 0x3c
 80065fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006602:	2309      	movs	r3, #9
    minus_17.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BS6E));
 8006604:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8006606:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800660a:	a958      	add	r1, sp, #352	@ 0x160
        color = newColor;
 800660c:	f504 5980 	add.w	r9, r4, #4096	@ 0x1000
 8006610:	f011 fe62 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006614:	9921      	ldr	r1, [sp, #132]	@ 0x84
 8006616:	f884 5fb1 	strb.w	r5, [r4, #4017]	@ 0xfb1
 800661a:	4630      	mov	r0, r6
 800661c:	f00e f9d6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_17_1.setXY(199, 87);
 8006620:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8006622:	2257      	movs	r2, #87	@ 0x57
 8006624:	21c7      	movs	r1, #199	@ 0xc7
 8006626:	f7fc fa32 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800662a:	9922      	ldr	r1, [sp, #136]	@ 0x88
        color = newColor;
 800662c:	f8c9 7004 	str.w	r7, [r9, #4]
        boundingArea = calculateBoundingArea();
 8006630:	4640      	mov	r0, r8
        linespace = space;
 8006632:	f8a9 5008 	strh.w	r5, [r9, #8]
        boundingArea = calculateBoundingArea();
 8006636:	f011 fba7 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800663a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800663e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006640:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006644:	333c      	adds	r3, #60	@ 0x3c
 8006646:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800664a:	2308      	movs	r3, #8
    minus_17_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0R2K));
 800664c:	9822      	ldr	r0, [sp, #136]	@ 0x88
 800664e:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006652:	a958      	add	r1, sp, #352	@ 0x160
 8006654:	f011 fe40 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006658:	9922      	ldr	r1, [sp, #136]	@ 0x88
 800665a:	f884 5ff9 	strb.w	r5, [r4, #4089]	@ 0xff9
 800665e:	4630      	mov	r0, r6
 8006660:	f00e f9b4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_20.setXY(57, 96);
 8006664:	9803      	ldr	r0, [sp, #12]
 8006666:	2260      	movs	r2, #96	@ 0x60
 8006668:	2139      	movs	r1, #57	@ 0x39
 800666a:	f7fc fa10 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 800666e:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8006670:	f8c9 704c 	str.w	r7, [r9, #76]	@ 0x4c
        boundingArea = calculateBoundingArea();
 8006674:	4640      	mov	r0, r8
        linespace = space;
 8006676:	f8a9 5050 	strh.w	r5, [r9, #80]	@ 0x50
        boundingArea = calculateBoundingArea();
 800667a:	f011 fb85 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800667e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006682:	9b03      	ldr	r3, [sp, #12]
 8006684:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006688:	333c      	adds	r3, #60	@ 0x3c
 800668a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800668e:	2307      	movs	r3, #7
    minus_20.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MAJN));
 8006690:	9803      	ldr	r0, [sp, #12]
 8006692:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006696:	a958      	add	r1, sp, #352	@ 0x160
 8006698:	f011 fe1e 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800669c:	9903      	ldr	r1, [sp, #12]
 800669e:	f889 5041 	strb.w	r5, [r9, #65]	@ 0x41
 80066a2:	4630      	mov	r0, r6
 80066a4:	f00e f992 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_20_1.setXY(147, 136);
 80066a8:	9804      	ldr	r0, [sp, #16]
 80066aa:	2288      	movs	r2, #136	@ 0x88
 80066ac:	2193      	movs	r1, #147	@ 0x93
 80066ae:	f7fc f9ee 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80066b2:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80066b4:	f8c9 7094 	str.w	r7, [r9, #148]	@ 0x94
        boundingArea = calculateBoundingArea();
 80066b8:	4640      	mov	r0, r8
        linespace = space;
 80066ba:	f8a9 5098 	strh.w	r5, [r9, #152]	@ 0x98
        boundingArea = calculateBoundingArea();
 80066be:	f011 fb63 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066c2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80066c6:	9b04      	ldr	r3, [sp, #16]
 80066c8:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80066cc:	333c      	adds	r3, #60	@ 0x3c
 80066ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066d2:	2306      	movs	r3, #6
    minus_20_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UGWJ));
 80066d4:	9804      	ldr	r0, [sp, #16]
 80066d6:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80066da:	a958      	add	r1, sp, #352	@ 0x160
 80066dc:	f011 fdfc 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066e0:	9904      	ldr	r1, [sp, #16]
 80066e2:	f889 5089 	strb.w	r5, [r9, #137]	@ 0x89
 80066e6:	4630      	mov	r0, r6
 80066e8:	f00e f970 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_25.setXY(69, 160);
 80066ec:	9805      	ldr	r0, [sp, #20]
        color = newColor;
 80066ee:	4f6a      	ldr	r7, [pc, #424]	@ (8006898 <_ZN18GameScreenViewBaseC1Ev+0x1864>)
 80066f0:	22a0      	movs	r2, #160	@ 0xa0
 80066f2:	2145      	movs	r1, #69	@ 0x45
 80066f4:	f7fc f9cb 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80066f8:	4b68      	ldr	r3, [pc, #416]	@ (800689c <_ZN18GameScreenViewBaseC1Ev+0x1868>)
        boundingArea = calculateBoundingArea();
 80066fa:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 80066fc:	f8c9 30dc 	str.w	r3, [r9, #220]	@ 0xdc
        boundingArea = calculateBoundingArea();
 8006700:	4640      	mov	r0, r8
        linespace = space;
 8006702:	f8a9 50e0 	strh.w	r5, [r9, #224]	@ 0xe0
        boundingArea = calculateBoundingArea();
 8006706:	f011 fb3f 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800670a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800670e:	9b05      	ldr	r3, [sp, #20]
 8006710:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006714:	333c      	adds	r3, #60	@ 0x3c
 8006716:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800671a:	f04f 0305 	mov.w	r3, #5
    minus_25.setTypedText(touchgfx::TypedText(T___SINGLEUSE_92IF));
 800671e:	9805      	ldr	r0, [sp, #20]
 8006720:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006724:	a958      	add	r1, sp, #352	@ 0x160
 8006726:	f011 fdd7 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800672a:	9905      	ldr	r1, [sp, #20]
 800672c:	f889 50d1 	strb.w	r5, [r9, #209]	@ 0xd1
 8006730:	4630      	mov	r0, r6
 8006732:	f00e f94b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_25_1.setXY(137, 129);
 8006736:	9806      	ldr	r0, [sp, #24]
 8006738:	2281      	movs	r2, #129	@ 0x81
 800673a:	2189      	movs	r1, #137	@ 0x89
 800673c:	f7fc f9a7 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006740:	4b57      	ldr	r3, [pc, #348]	@ (80068a0 <_ZN18GameScreenViewBaseC1Ev+0x186c>)
        boundingArea = calculateBoundingArea();
 8006742:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8006744:	f8c9 3124 	str.w	r3, [r9, #292]	@ 0x124
        boundingArea = calculateBoundingArea();
 8006748:	4640      	mov	r0, r8
        linespace = space;
 800674a:	f8a9 5128 	strh.w	r5, [r9, #296]	@ 0x128
        boundingArea = calculateBoundingArea();
 800674e:	f011 fb1b 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006752:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006756:	9b06      	ldr	r3, [sp, #24]
 8006758:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800675c:	333c      	adds	r3, #60	@ 0x3c
 800675e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006762:	2304      	movs	r3, #4
    minus_25_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8UBD));
 8006764:	9806      	ldr	r0, [sp, #24]
 8006766:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800676a:	a958      	add	r1, sp, #352	@ 0x160
 800676c:	f011 fdb4 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006770:	9906      	ldr	r1, [sp, #24]
 8006772:	f889 5119 	strb.w	r5, [r9, #281]	@ 0x119
 8006776:	4630      	mov	r0, r6
 8006778:	f00e f928 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_40.setXY(49, 79);
 800677c:	9807      	ldr	r0, [sp, #28]
 800677e:	224f      	movs	r2, #79	@ 0x4f
 8006780:	2131      	movs	r1, #49	@ 0x31
 8006782:	f7fc f984 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006786:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 8006788:	f8c9 716c 	str.w	r7, [r9, #364]	@ 0x16c
        boundingArea = calculateBoundingArea();
 800678c:	4640      	mov	r0, r8
        linespace = space;
 800678e:	f8a9 5170 	strh.w	r5, [r9, #368]	@ 0x170
        boundingArea = calculateBoundingArea();
 8006792:	f011 faf9 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006796:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800679a:	9b07      	ldr	r3, [sp, #28]
 800679c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80067a0:	333c      	adds	r3, #60	@ 0x3c
 80067a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067a6:	2303      	movs	r3, #3
    minus_40.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YRWP));
 80067a8:	9807      	ldr	r0, [sp, #28]
 80067aa:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80067ae:	a958      	add	r1, sp, #352	@ 0x160
 80067b0:	f011 fd92 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067b4:	9907      	ldr	r1, [sp, #28]
 80067b6:	f889 5161 	strb.w	r5, [r9, #353]	@ 0x161
 80067ba:	4630      	mov	r0, r6
 80067bc:	f00e f906 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_40_1.setXY(169, 72);
 80067c0:	9808      	ldr	r0, [sp, #32]
 80067c2:	2248      	movs	r2, #72	@ 0x48
 80067c4:	21a9      	movs	r1, #169	@ 0xa9
 80067c6:	f7fc f962 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80067ca:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 80067cc:	f8c9 71b4 	str.w	r7, [r9, #436]	@ 0x1b4
        boundingArea = calculateBoundingArea();
 80067d0:	4640      	mov	r0, r8
        linespace = space;
 80067d2:	f8a9 51b8 	strh.w	r5, [r9, #440]	@ 0x1b8
        boundingArea = calculateBoundingArea();
 80067d6:	f011 fad7 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067da:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067de:	9b08      	ldr	r3, [sp, #32]
 80067e0:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80067e4:	333c      	adds	r3, #60	@ 0x3c
 80067e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067ea:	2302      	movs	r3, #2
    minus_40_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7X4W));
 80067ec:	9808      	ldr	r0, [sp, #32]
 80067ee:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80067f2:	a958      	add	r1, sp, #352	@ 0x160
 80067f4:	f011 fd70 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067f8:	9908      	ldr	r1, [sp, #32]
 80067fa:	f889 51a9 	strb.w	r5, [r9, #425]	@ 0x1a9
 80067fe:	4630      	mov	r0, r6
 8006800:	f00e f8e4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006804:	f5a7 6780 	sub.w	r7, r7, #1024	@ 0x400
    minus_100.setXY(14, 125);
 8006808:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800680a:	227d      	movs	r2, #125	@ 0x7d
 800680c:	210e      	movs	r1, #14
 800680e:	f7fc f93e 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006812:	9909      	ldr	r1, [sp, #36]	@ 0x24
        color = newColor;
 8006814:	f8c9 71fc 	str.w	r7, [r9, #508]	@ 0x1fc
        boundingArea = calculateBoundingArea();
 8006818:	4640      	mov	r0, r8
        linespace = space;
 800681a:	f8a9 5200 	strh.w	r5, [r9, #512]	@ 0x200
        boundingArea = calculateBoundingArea();
 800681e:	f011 fab3 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006822:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006826:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006828:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800682c:	333c      	adds	r3, #60	@ 0x3c
 800682e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006832:	2301      	movs	r3, #1
    minus_100.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5C1E));
 8006834:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006836:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800683a:	a958      	add	r1, sp, #352	@ 0x160
 800683c:	f011 fd4c 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006840:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8006842:	f889 51f1 	strb.w	r5, [r9, #497]	@ 0x1f1
 8006846:	4630      	mov	r0, r6
 8006848:	f00e f8c0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_100_1.setXY(150, 125);
 800684c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800684e:	227d      	movs	r2, #125	@ 0x7d
 8006850:	2196      	movs	r1, #150	@ 0x96
 8006852:	f7fc f91c 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8006856:	990a      	ldr	r1, [sp, #40]	@ 0x28
        color = newColor;
 8006858:	f8c9 7244 	str.w	r7, [r9, #580]	@ 0x244
        boundingArea = calculateBoundingArea();
 800685c:	4640      	mov	r0, r8
        linespace = space;
 800685e:	f8a9 5248 	strh.w	r5, [r9, #584]	@ 0x248
        boundingArea = calculateBoundingArea();
 8006862:	f011 fa91 	bl	8017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006866:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800686a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800686c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006870:	333c      	adds	r3, #60	@ 0x3c
 8006872:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_100_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M86E));
 8006876:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006878:	f8ad 5164 	strh.w	r5, [sp, #356]	@ 0x164
 800687c:	a958      	add	r1, sp, #352	@ 0x160
 800687e:	f011 fd2b 	bl	80182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006882:	4630      	mov	r0, r6
 8006884:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006886:	f889 5239 	strb.w	r5, [r9, #569]	@ 0x239
 800688a:	f00e f89f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800688e:	4620      	mov	r0, r4
 8006890:	b05b      	add	sp, #364	@ 0x16c
 8006892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006896:	bf00      	nop
 8006898:	fffff200 	.word	0xfffff200
 800689c:	ffeaf525 	.word	0xffeaf525
 80068a0:	ffd9c723 	.word	0xffd9c723

080068a4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80068a4:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80068a6:	4770      	bx	lr

080068a8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80068a8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80068aa:	4770      	bx	lr

080068ac <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80068ac:	4770      	bx	lr

080068ae <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80068ae:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 80068b0:	880b      	ldrh	r3, [r1, #0]
{
 80068b2:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80068b4:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 80068b6:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80068b8:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 80068ba:	b29b      	uxth	r3, r3
    return pixels + offset;
 80068bc:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 80068c0:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 80068c4:	4418      	add	r0, r3
 80068c6:	bd10      	pop	{r4, pc}

080068c8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80068c8:	b510      	push	{r4, lr}
 80068ca:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 80068cc:	b1ba      	cbz	r2, 80068fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80068ce:	7b10      	ldrb	r0, [r2, #12]
 80068d0:	b168      	cbz	r0, 80068ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80068d2:	7b53      	ldrb	r3, [r2, #13]
 80068d4:	7ad2      	ldrb	r2, [r2, #11]
 80068d6:	021b      	lsls	r3, r3, #8
 80068d8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80068dc:	431a      	orrs	r2, r3
 80068de:	6a23      	ldr	r3, [r4, #32]
 80068e0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 80068e4:	881a      	ldrh	r2, [r3, #0]
 80068e6:	428a      	cmp	r2, r1
 80068e8:	d102      	bne.n	80068f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80068ea:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 80068ee:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80068f0:	d805      	bhi.n	80068fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80068f2:	3801      	subs	r0, #1
 80068f4:	b280      	uxth	r0, r0
 80068f6:	3304      	adds	r3, #4
 80068f8:	2800      	cmp	r0, #0
 80068fa:	d1f3      	bne.n	80068e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80068fc:	e7f7      	b.n	80068ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80068fe:	2000      	movs	r0, #0
 8006900:	e7f5      	b.n	80068ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006902 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006902:	b510      	push	{r4, lr}
 8006904:	212c      	movs	r1, #44	@ 0x2c
 8006906:	4604      	mov	r4, r0
 8006908:	f026 fc75 	bl	802d1f6 <_ZdlPvj>
 800690c:	4620      	mov	r0, r4
 800690e:	bd10      	pop	{r4, pc}

08006910 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006910:	b530      	push	{r4, r5, lr}
 8006912:	b08b      	sub	sp, #44	@ 0x2c
 8006914:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006916:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800691a:	9508      	str	r5, [sp, #32]
 800691c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8006920:	9507      	str	r5, [sp, #28]
 8006922:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8006926:	9506      	str	r5, [sp, #24]
 8006928:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 800692c:	9505      	str	r5, [sp, #20]
 800692e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8006932:	9504      	str	r5, [sp, #16]
 8006934:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8006938:	9503      	str	r5, [sp, #12]
 800693a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 800693e:	9502      	str	r5, [sp, #8]
 8006940:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8006944:	9501      	str	r5, [sp, #4]
 8006946:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800694a:	9500      	str	r5, [sp, #0]
 800694c:	f015 ffcc 	bl	801c8e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8006950:	4b06      	ldr	r3, [pc, #24]	@ (800696c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8006952:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006954:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8006956:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006958:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800695a:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 800695c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800695e:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8006960:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8006962:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8006964:	4620      	mov	r0, r4
 8006966:	b00b      	add	sp, #44	@ 0x2c
 8006968:	bd30      	pop	{r4, r5, pc}
 800696a:	bf00      	nop
 800696c:	080313e0 	.word	0x080313e0

08006970 <_ZN8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006970:	4770      	bx	lr

08006972 <_ZN22MainMenuScreenViewBaseD1Ev>:
}

MainMenuScreenViewBase::~MainMenuScreenViewBase()
{

}
 8006972:	4770      	bx	lr

08006974 <_ZN22MainMenuScreenViewBase11setupScreenEv>:

void MainMenuScreenViewBase::setupScreen()
{

}
 8006974:	4770      	bx	lr

08006976 <_ZN8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006976:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006978:	68c2      	ldr	r2, [r0, #12]
 800697a:	6844      	ldr	r4, [r0, #4]
 800697c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800697e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006980:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006984:	07d2      	lsls	r2, r2, #31
 8006986:	bf48      	it	mi
 8006988:	5962      	ldrmi	r2, [r4, r5]
 800698a:	689b      	ldr	r3, [r3, #8]
    }
 800698c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800698e:	bf48      	it	mi
 8006990:	58d3      	ldrmi	r3, [r2, r3]
 8006992:	4718      	bx	r3

08006994 <_ZNK8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8006994:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8006996:	6840      	ldr	r0, [r0, #4]
 8006998:	b130      	cbz	r0, 80069a8 <_ZNK8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800699a:	689a      	ldr	r2, [r3, #8]
 800699c:	b91a      	cbnz	r2, 80069a6 <_ZNK8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 800699e:	68d8      	ldr	r0, [r3, #12]
 80069a0:	f000 0001 	and.w	r0, r0, #1
 80069a4:	4770      	bx	lr
 80069a6:	2001      	movs	r0, #1
    }
 80069a8:	4770      	bx	lr

080069aa <_ZN8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80069aa:	b510      	push	{r4, lr}
 80069ac:	2110      	movs	r1, #16
 80069ae:	4604      	mov	r4, r0
 80069b0:	f026 fc21 	bl	802d1f6 <_ZdlPvj>
 80069b4:	4620      	mov	r0, r4
 80069b6:	bd10      	pop	{r4, pc}

080069b8 <_ZN22MainMenuScreenViewBaseD0Ev>:
MainMenuScreenViewBase::~MainMenuScreenViewBase()
 80069b8:	b510      	push	{r4, lr}
}
 80069ba:	f44f 7112 	mov.w	r1, #584	@ 0x248
MainMenuScreenViewBase::~MainMenuScreenViewBase()
 80069be:	4604      	mov	r4, r0
}
 80069c0:	f026 fc19 	bl	802d1f6 <_ZdlPvj>
 80069c4:	4620      	mov	r0, r4
 80069c6:	bd10      	pop	{r4, pc}

080069c8 <_ZN22MainMenuScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainMenuScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 80069c8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &SELECT)
 80069ca:	f500 73e0 	add.w	r3, r0, #448	@ 0x1c0
 80069ce:	4299      	cmp	r1, r3
{
 80069d0:	4604      	mov	r4, r0
 80069d2:	460d      	mov	r5, r1
    if (&src == &SELECT)
 80069d4:	d103      	bne.n	80069de <_ZN22MainMenuScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~MainMenuScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80069d6:	f014 f97d 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Select
        //When SELECT clicked change screen to Character
        //Go to Character with no screen transition
        application().gotoCharacterScreenNoTransition();
 80069da:	f7fd f953 	bl	8003c84 <_ZN23FrontendApplicationBase31gotoCharacterScreenNoTransitionEv>
    }
    if (&src == &PLAY)
 80069de:	f504 74a4 	add.w	r4, r4, #328	@ 0x148
 80069e2:	42a5      	cmp	r5, r4
 80069e4:	d105      	bne.n	80069f2 <_ZN22MainMenuScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 80069e6:	f014 f975 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //GameScreen
        //When PLAY clicked change screen to GameScreen
        //Go to GameScreen with no screen transition
        application().gotoGameScreenScreenNoTransition();
    }
}
 80069ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoGameScreenScreenNoTransition();
 80069ee:	f7fd b929 	b.w	8003c44 <_ZN23FrontendApplicationBase32gotoGameScreenScreenNoTransitionEv>
}
 80069f2:	bd38      	pop	{r3, r4, r5, pc}

080069f4 <_ZN22MainMenuScreenViewBaseC1Ev>:
MainMenuScreenViewBase::MainMenuScreenViewBase() :
 80069f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069f8:	4604      	mov	r4, r0
 80069fa:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &MainMenuScreenViewBase::flexButtonCallbackHandler)
 80069fc:	46a2      	mov	sl, r4
 80069fe:	2500      	movs	r5, #0
 8006a00:	f016 f98e 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8006a04:	4b95      	ldr	r3, [pc, #596]	@ (8006c5c <_ZN22MainMenuScreenViewBaseC1Ev+0x268>)
 8006a06:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006a08:	f84a 3b40 	str.w	r3, [sl], #64
 8006a0c:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8006a10:	4650      	mov	r0, sl
 8006a12:	f7fc f85d 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8006a16:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8006a1a:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 8006a1e:	a907      	add	r1, sp, #28
 8006a20:	4648      	mov	r0, r9
 8006a22:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8006a26:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006a2a:	f010 fea9 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006a2e:	a907      	add	r1, sp, #28
 8006a30:	4640      	mov	r0, r8
 8006a32:	f104 06f0 	add.w	r6, r4, #240	@ 0xf0
 8006a36:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006a3a:	f010 fea1 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006a3e:	a907      	add	r1, sp, #28
 8006a40:	4638      	mov	r0, r7
 8006a42:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006a46:	f010 fe9b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006a4a:	a907      	add	r1, sp, #28
 8006a4c:	4630      	mov	r0, r6
 8006a4e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006a52:	f010 fe95 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006a56:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8006a5a:	a907      	add	r1, sp, #28
 8006a5c:	4618      	mov	r0, r3
 8006a5e:	9303      	str	r3, [sp, #12]
 8006a60:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006a64:	f010 fe8c 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006a68:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8006a6c:	4618      	mov	r0, r3
 8006a6e:	9304      	str	r3, [sp, #16]
 8006a70:	f7fc f84a 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006a74:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 8006a78:	4618      	mov	r0, r3
 8006a7a:	9305      	str	r3, [sp, #20]
 8006a7c:	f7fc f844 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006a80:	4b77      	ldr	r3, [pc, #476]	@ (8006c60 <_ZN22MainMenuScreenViewBaseC1Ev+0x26c>)
 8006a82:	e9c4 348e 	strd	r3, r4, [r4, #568]	@ 0x238
 8006a86:	4b77      	ldr	r3, [pc, #476]	@ (8006c64 <_ZN22MainMenuScreenViewBaseC1Ev+0x270>)
 8006a88:	e9c4 3590 	strd	r3, r5, [r4, #576]	@ 0x240
    __background.setPosition(0, 0, 240, 320);
 8006a8c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006a90:	462a      	mov	r2, r5
 8006a92:	9300      	str	r3, [sp, #0]
 8006a94:	4629      	mov	r1, r5
 8006a96:	4650      	mov	r0, sl
 8006a98:	23f0      	movs	r3, #240	@ 0xf0
 8006a9a:	f7fc f805 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a9e:	f104 0b04 	add.w	fp, r4, #4
 8006aa2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8006aa6:	66a3      	str	r3, [r4, #104]	@ 0x68
 8006aa8:	4651      	mov	r1, sl
 8006aaa:	4658      	mov	r0, fp
 8006aac:	f00d ff8e 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ab0:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 8006ab2:	a907      	add	r1, sp, #28
 8006ab4:	4648      	mov	r0, r9
 8006ab6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006aba:	f011 fcfd 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8006abe:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006ac2:	462a      	mov	r2, r5
 8006ac4:	9300      	str	r3, [sp, #0]
 8006ac6:	4629      	mov	r1, r5
 8006ac8:	23f0      	movs	r3, #240	@ 0xf0
 8006aca:	4648      	mov	r0, r9
 8006acc:	f7fb ffec 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006ad0:	4629      	mov	r1, r5
 8006ad2:	4648      	mov	r0, r9
 8006ad4:	f010 fe0f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006ad8:	4649      	mov	r1, r9
 8006ada:	4658      	mov	r0, fp
 8006adc:	f00d ff76 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ae0:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 8006ae2:	a907      	add	r1, sp, #28
 8006ae4:	4640      	mov	r0, r8
 8006ae6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006aea:	f011 fce5 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 8006aee:	2370      	movs	r3, #112	@ 0x70
 8006af0:	220e      	movs	r2, #14
 8006af2:	9300      	str	r3, [sp, #0]
 8006af4:	4640      	mov	r0, r8
 8006af6:	239e      	movs	r3, #158	@ 0x9e
 8006af8:	2129      	movs	r1, #41	@ 0x29
 8006afa:	f7fb ffd5 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006afe:	4629      	mov	r1, r5
 8006b00:	4640      	mov	r0, r8
 8006b02:	f010 fdf8 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006b06:	4641      	mov	r1, r8
 8006b08:	4658      	mov	r0, fp
 8006b0a:	f00d ff5f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b0e:	2349      	movs	r3, #73	@ 0x49
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA_ID));
 8006b10:	a907      	add	r1, sp, #28
 8006b12:	4638      	mov	r0, r7
 8006b14:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006b18:	f011 fcce 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(56, 145, 129, 64);
 8006b1c:	2340      	movs	r3, #64	@ 0x40
 8006b1e:	2291      	movs	r2, #145	@ 0x91
 8006b20:	9300      	str	r3, [sp, #0]
 8006b22:	4638      	mov	r0, r7
 8006b24:	2381      	movs	r3, #129	@ 0x81
 8006b26:	2138      	movs	r1, #56	@ 0x38
 8006b28:	f7fb ffbe 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006b2c:	4629      	mov	r1, r5
 8006b2e:	4638      	mov	r0, r7
 8006b30:	f010 fde1 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006b34:	4639      	mov	r1, r7
 8006b36:	4658      	mov	r0, fp
 8006b38:	f00d ff48 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b3c:	233c      	movs	r3, #60	@ 0x3c
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8006b3e:	a907      	add	r1, sp, #28
 8006b40:	4630      	mov	r0, r6
 8006b42:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006b46:	f011 fcb7 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 8006b4a:	2341      	movs	r3, #65	@ 0x41
 8006b4c:	22db      	movs	r2, #219	@ 0xdb
 8006b4e:	9300      	str	r3, [sp, #0]
 8006b50:	4630      	mov	r0, r6
 8006b52:	237c      	movs	r3, #124	@ 0x7c
 8006b54:	2139      	movs	r1, #57	@ 0x39
 8006b56:	f7fb ffa7 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006b5a:	4629      	mov	r1, r5
 8006b5c:	4630      	mov	r0, r6
 8006b5e:	f010 fdca 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006b62:	4631      	mov	r1, r6
 8006b64:	4658      	mov	r0, fp
 8006b66:	f00d ff31 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 8006b6a:	9803      	ldr	r0, [sp, #12]
        down = colorPressed;
 8006b6c:	f8df a104 	ldr.w	sl, [pc, #260]	@ 8006c74 <_ZN22MainMenuScreenViewBaseC1Ev+0x280>
 8006b70:	2357      	movs	r3, #87	@ 0x57
 8006b72:	a907      	add	r1, sp, #28
 8006b74:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006b78:	f011 fc9e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 8006b7c:	2324      	movs	r3, #36	@ 0x24
 8006b7e:	f44f 728c 	mov.w	r2, #280	@ 0x118
 8006b82:	9803      	ldr	r0, [sp, #12]
 8006b84:	9300      	str	r3, [sp, #0]
 8006b86:	21b8      	movs	r1, #184	@ 0xb8
 8006b88:	2337      	movs	r3, #55	@ 0x37
 8006b8a:	f7fb ff8d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006b8e:	9803      	ldr	r0, [sp, #12]
 8006b90:	4629      	mov	r1, r5
 8006b92:	f010 fdb0 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 8006b96:	2636      	movs	r6, #54	@ 0x36
 8006b98:	9903      	ldr	r1, [sp, #12]
 8006b9a:	4658      	mov	r0, fp
 8006b9c:	f00d ff16 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ba0:	462a      	mov	r2, r5
 8006ba2:	4629      	mov	r1, r5
 8006ba4:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 8006ba8:	9600      	str	r6, [sp, #0]
 8006baa:	2366      	movs	r3, #102	@ 0x66
 8006bac:	f7fb ff7c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8006bb0:	4a2d      	ldr	r2, [pc, #180]	@ (8006c68 <_ZN22MainMenuScreenViewBaseC1Ev+0x274>)
 8006bb2:	492e      	ldr	r1, [pc, #184]	@ (8006c6c <_ZN22MainMenuScreenViewBaseC1Ev+0x278>)
        down = colorPressed;
 8006bb4:	4b2e      	ldr	r3, [pc, #184]	@ (8006c70 <_ZN22MainMenuScreenViewBaseC1Ev+0x27c>)
        handlePressedUpdated();
 8006bb6:	f8d4 7148 	ldr.w	r7, [r4, #328]	@ 0x148
 8006bba:	9804      	ldr	r0, [sp, #16]
 8006bbc:	f04f 0905 	mov.w	r9, #5
        borderDown = borderColorPressed;
 8006bc0:	e9c4 216e 	strd	r2, r1, [r4, #440]	@ 0x1b8
        down = colorPressed;
 8006bc4:	e9c4 a36c 	strd	sl, r3, [r4, #432]	@ 0x1b0
        alpha = newAlpha;
 8006bc8:	f04f 0806 	mov.w	r8, #6
 8006bcc:	f8a4 91ac 	strh.w	r9, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 8006bd0:	f7fb fec2 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
 8006bd4:	f884 8175 	strb.w	r8, [r4, #373]	@ 0x175
        handleAlphaUpdated();
 8006bd8:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8006bdc:	9804      	ldr	r0, [sp, #16]
    PLAY.setAction(flexButtonCallback);
 8006bde:	f504 770e 	add.w	r7, r4, #568	@ 0x238
 8006be2:	4798      	blx	r3
    PLAY.setPosition(69, 224, 102, 54);
 8006be4:	9804      	ldr	r0, [sp, #16]
        action = &callback;
 8006be6:	f8c4 7178 	str.w	r7, [r4, #376]	@ 0x178
 8006bea:	2366      	movs	r3, #102	@ 0x66
 8006bec:	22e0      	movs	r2, #224	@ 0xe0
 8006bee:	9600      	str	r6, [sp, #0]
 8006bf0:	2145      	movs	r1, #69	@ 0x45
 8006bf2:	f7fb ff59 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bf6:	9904      	ldr	r1, [sp, #16]
 8006bf8:	4658      	mov	r0, fp
 8006bfa:	f00d fee7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8006bfe:	462a      	mov	r2, r5
 8006c00:	4629      	mov	r1, r5
 8006c02:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 8006c06:	9600      	str	r6, [sp, #0]
 8006c08:	2366      	movs	r3, #102	@ 0x66
 8006c0a:	f7fb ff4d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderUp = borderColorReleased;
 8006c0e:	4a16      	ldr	r2, [pc, #88]	@ (8006c68 <_ZN22MainMenuScreenViewBaseC1Ev+0x274>)
 8006c10:	4b17      	ldr	r3, [pc, #92]	@ (8006c70 <_ZN22MainMenuScreenViewBaseC1Ev+0x27c>)
        borderDown = borderColorPressed;
 8006c12:	4916      	ldr	r1, [pc, #88]	@ (8006c6c <_ZN22MainMenuScreenViewBaseC1Ev+0x278>)
 8006c14:	f8c4 1234 	str.w	r1, [r4, #564]	@ 0x234
        borderUp = borderColorReleased;
 8006c18:	e9c4 328b 	strd	r3, r2, [r4, #556]	@ 0x22c
        handlePressedUpdated();
 8006c1c:	f8d4 51c0 	ldr.w	r5, [r4, #448]	@ 0x1c0
 8006c20:	9805      	ldr	r0, [sp, #20]
 8006c22:	f8a4 9224 	strh.w	r9, [r4, #548]	@ 0x224
        up = colorReleased;
 8006c26:	f8c4 a228 	str.w	sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 8006c2a:	f7fb fe95 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8006c2e:	f884 81ed 	strb.w	r8, [r4, #493]	@ 0x1ed
        handleAlphaUpdated();
 8006c32:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8006c36:	9805      	ldr	r0, [sp, #20]
 8006c38:	4798      	blx	r3
    SELECT.setPosition(68, 150, 102, 54);
 8006c3a:	9805      	ldr	r0, [sp, #20]
        action = &callback;
 8006c3c:	f8c4 71f0 	str.w	r7, [r4, #496]	@ 0x1f0
 8006c40:	2366      	movs	r3, #102	@ 0x66
 8006c42:	2296      	movs	r2, #150	@ 0x96
 8006c44:	9600      	str	r6, [sp, #0]
 8006c46:	2144      	movs	r1, #68	@ 0x44
 8006c48:	f7fb ff2e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c4c:	4658      	mov	r0, fp
 8006c4e:	9905      	ldr	r1, [sp, #20]
 8006c50:	f00d febc 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c54:	4620      	mov	r0, r4
 8006c56:	b009      	add	sp, #36	@ 0x24
 8006c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c5c:	08031460 	.word	0x08031460
 8006c60:	08031448 	.word	0x08031448
 8006c64:	080069c9 	.word	0x080069c9
 8006c68:	ff003366 	.word	0xff003366
 8006c6c:	ff336699 	.word	0xff336699
 8006c70:	ff0099cc 	.word	0xff0099cc
 8006c74:	ff006699 	.word	0xff006699

08006c78 <_ZN25NarutoGameScreen2ViewBaseD1Ev>:
}

NarutoGameScreen2ViewBase::~NarutoGameScreen2ViewBase()
{

}
 8006c78:	4770      	bx	lr

08006c7a <_ZN25NarutoGameScreen2ViewBase11setupScreenEv>:

void NarutoGameScreen2ViewBase::setupScreen()
{

}
 8006c7a:	4770      	bx	lr

08006c7c <_ZN25NarutoGameScreen2ViewBaseD0Ev>:
NarutoGameScreen2ViewBase::~NarutoGameScreen2ViewBase()
 8006c7c:	b510      	push	{r4, lr}
}
 8006c7e:	f640 2164 	movw	r1, #2660	@ 0xa64
NarutoGameScreen2ViewBase::~NarutoGameScreen2ViewBase()
 8006c82:	4604      	mov	r4, r0
}
 8006c84:	f026 fab7 	bl	802d1f6 <_ZdlPvj>
 8006c88:	4620      	mov	r0, r4
 8006c8a:	bd10      	pop	{r4, pc}

08006c8c <_ZN25NarutoGameScreen2ViewBaseC1Ev>:
NarutoGameScreen2ViewBase::NarutoGameScreen2ViewBase()
 8006c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c90:	4604      	mov	r4, r0
 8006c92:	b0bb      	sub	sp, #236	@ 0xec
 8006c94:	46a2      	mov	sl, r4
 8006c96:	2500      	movs	r5, #0
 8006c98:	f016 f842 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8006c9c:	4bd0      	ldr	r3, [pc, #832]	@ (8006fe0 <_ZN25NarutoGameScreen2ViewBaseC1Ev+0x354>)
 8006c9e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006ca0:	f84a 3b40 	str.w	r3, [sl], #64
 8006ca4:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8006ca8:	4650      	mov	r0, sl
 8006caa:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8006cae:	f7fb ff0f 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8006cb2:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8006cb6:	a939      	add	r1, sp, #228	@ 0xe4
 8006cb8:	4648      	mov	r0, r9
 8006cba:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8006cbe:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006cc2:	f010 fd5d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006cc6:	a939      	add	r1, sp, #228	@ 0xe4
 8006cc8:	4640      	mov	r0, r8
 8006cca:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006cce:	f010 fd57 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006cd2:	a939      	add	r1, sp, #228	@ 0xe4
 8006cd4:	4638      	mov	r0, r7
 8006cd6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006cda:	f010 fd51 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006cde:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8006ce2:	a939      	add	r1, sp, #228	@ 0xe4
 8006ce4:	4618      	mov	r0, r3
 8006ce6:	9302      	str	r3, [sp, #8]
 8006ce8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006cec:	f010 fd48 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006cf0:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8006cf4:	a939      	add	r1, sp, #228	@ 0xe4
 8006cf6:	4618      	mov	r0, r3
 8006cf8:	9303      	str	r3, [sp, #12]
 8006cfa:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006cfe:	f010 fd3f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d02:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8006d06:	a939      	add	r1, sp, #228	@ 0xe4
 8006d08:	4618      	mov	r0, r3
 8006d0a:	9304      	str	r3, [sp, #16]
 8006d0c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d10:	f010 fd36 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d14:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8006d18:	a939      	add	r1, sp, #228	@ 0xe4
 8006d1a:	4618      	mov	r0, r3
 8006d1c:	9305      	str	r3, [sp, #20]
 8006d1e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d22:	f010 fd2d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d26:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 8006d2a:	a939      	add	r1, sp, #228	@ 0xe4
 8006d2c:	4618      	mov	r0, r3
 8006d2e:	9306      	str	r3, [sp, #24]
 8006d30:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d34:	f010 fd24 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d38:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8006d3c:	a939      	add	r1, sp, #228	@ 0xe4
 8006d3e:	4618      	mov	r0, r3
 8006d40:	9307      	str	r3, [sp, #28]
 8006d42:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d46:	f010 fd1b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d4a:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 8006d4e:	a939      	add	r1, sp, #228	@ 0xe4
 8006d50:	4618      	mov	r0, r3
 8006d52:	9308      	str	r3, [sp, #32]
 8006d54:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d58:	f010 fd12 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d5c:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8006d60:	a939      	add	r1, sp, #228	@ 0xe4
 8006d62:	4618      	mov	r0, r3
 8006d64:	9309      	str	r3, [sp, #36]	@ 0x24
 8006d66:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d6a:	f010 fd09 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d6e:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 8006d72:	a939      	add	r1, sp, #228	@ 0xe4
 8006d74:	4618      	mov	r0, r3
 8006d76:	930a      	str	r3, [sp, #40]	@ 0x28
 8006d78:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d7c:	f010 fd00 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d80:	f504 731f 	add.w	r3, r4, #636	@ 0x27c
 8006d84:	a939      	add	r1, sp, #228	@ 0xe4
 8006d86:	4618      	mov	r0, r3
 8006d88:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006d8a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006d8e:	f010 fcf7 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d92:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 8006d96:	a939      	add	r1, sp, #228	@ 0xe4
 8006d98:	4618      	mov	r0, r3
 8006d9a:	930c      	str	r3, [sp, #48]	@ 0x30
 8006d9c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006da0:	f010 fcee 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006da4:	f504 7335 	add.w	r3, r4, #724	@ 0x2d4
 8006da8:	a939      	add	r1, sp, #228	@ 0xe4
 8006daa:	4618      	mov	r0, r3
 8006dac:	930d      	str	r3, [sp, #52]	@ 0x34
 8006dae:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006db2:	f010 fce5 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006db6:	f504 7340 	add.w	r3, r4, #768	@ 0x300
 8006dba:	a939      	add	r1, sp, #228	@ 0xe4
 8006dbc:	4618      	mov	r0, r3
 8006dbe:	930e      	str	r3, [sp, #56]	@ 0x38
 8006dc0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006dc4:	f010 fcdc 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006dc8:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 8006dcc:	a939      	add	r1, sp, #228	@ 0xe4
 8006dce:	4618      	mov	r0, r3
 8006dd0:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006dd2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006dd6:	f010 fcd3 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006dda:	f504 7356 	add.w	r3, r4, #856	@ 0x358
 8006dde:	a939      	add	r1, sp, #228	@ 0xe4
 8006de0:	4618      	mov	r0, r3
 8006de2:	9310      	str	r3, [sp, #64]	@ 0x40
 8006de4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006de8:	f010 fcca 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006dec:	f504 7361 	add.w	r3, r4, #900	@ 0x384
 8006df0:	a939      	add	r1, sp, #228	@ 0xe4
 8006df2:	4618      	mov	r0, r3
 8006df4:	9311      	str	r3, [sp, #68]	@ 0x44
 8006df6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006dfa:	f010 fcc1 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006dfe:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 8006e02:	a939      	add	r1, sp, #228	@ 0xe4
 8006e04:	4618      	mov	r0, r3
 8006e06:	9312      	str	r3, [sp, #72]	@ 0x48
 8006e08:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e0c:	f010 fcb8 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e10:	f504 7377 	add.w	r3, r4, #988	@ 0x3dc
 8006e14:	a939      	add	r1, sp, #228	@ 0xe4
 8006e16:	4618      	mov	r0, r3
 8006e18:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006e1a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e1e:	f010 fcaf 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e22:	f504 6381 	add.w	r3, r4, #1032	@ 0x408
 8006e26:	a939      	add	r1, sp, #228	@ 0xe4
 8006e28:	4618      	mov	r0, r3
 8006e2a:	9314      	str	r3, [sp, #80]	@ 0x50
 8006e2c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e30:	f010 fca6 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e34:	f204 4334 	addw	r3, r4, #1076	@ 0x434
 8006e38:	a939      	add	r1, sp, #228	@ 0xe4
 8006e3a:	4618      	mov	r0, r3
 8006e3c:	9315      	str	r3, [sp, #84]	@ 0x54
 8006e3e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e42:	f010 fc9d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e46:	f504 638c 	add.w	r3, r4, #1120	@ 0x460
 8006e4a:	a939      	add	r1, sp, #228	@ 0xe4
 8006e4c:	4618      	mov	r0, r3
 8006e4e:	9316      	str	r3, [sp, #88]	@ 0x58
 8006e50:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e54:	f010 fc94 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e58:	f204 438c 	addw	r3, r4, #1164	@ 0x48c
 8006e5c:	a939      	add	r1, sp, #228	@ 0xe4
 8006e5e:	4618      	mov	r0, r3
 8006e60:	9317      	str	r3, [sp, #92]	@ 0x5c
 8006e62:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e66:	f010 fc8b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e6a:	f504 6397 	add.w	r3, r4, #1208	@ 0x4b8
 8006e6e:	a939      	add	r1, sp, #228	@ 0xe4
 8006e70:	4618      	mov	r0, r3
 8006e72:	9318      	str	r3, [sp, #96]	@ 0x60
 8006e74:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e78:	f010 fc82 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e7c:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 8006e80:	a939      	add	r1, sp, #228	@ 0xe4
 8006e82:	4618      	mov	r0, r3
 8006e84:	9319      	str	r3, [sp, #100]	@ 0x64
 8006e86:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e8a:	f010 fc79 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006e8e:	f504 63a2 	add.w	r3, r4, #1296	@ 0x510
 8006e92:	a939      	add	r1, sp, #228	@ 0xe4
 8006e94:	4618      	mov	r0, r3
 8006e96:	931a      	str	r3, [sp, #104]	@ 0x68
 8006e98:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006e9c:	f010 fc70 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006ea0:	f204 533c 	addw	r3, r4, #1340	@ 0x53c
 8006ea4:	f504 6bad 	add.w	fp, r4, #1384	@ 0x568
 8006ea8:	a939      	add	r1, sp, #228	@ 0xe4
 8006eaa:	4618      	mov	r0, r3
 8006eac:	931b      	str	r3, [sp, #108]	@ 0x6c
 8006eae:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006eb2:	f010 fc65 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006eb6:	a939      	add	r1, sp, #228	@ 0xe4
 8006eb8:	4658      	mov	r0, fp
 8006eba:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006ebe:	f010 fc5f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006ec2:	f204 5394 	addw	r3, r4, #1428	@ 0x594
 8006ec6:	a939      	add	r1, sp, #228	@ 0xe4
 8006ec8:	4618      	mov	r0, r3
 8006eca:	931c      	str	r3, [sp, #112]	@ 0x70
 8006ecc:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006ed0:	f010 fc56 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006ed4:	f504 63b8 	add.w	r3, r4, #1472	@ 0x5c0
 8006ed8:	a939      	add	r1, sp, #228	@ 0xe4
 8006eda:	4618      	mov	r0, r3
 8006edc:	931d      	str	r3, [sp, #116]	@ 0x74
 8006ede:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006ee2:	f010 fc4d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006ee6:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
 8006eea:	a939      	add	r1, sp, #228	@ 0xe4
 8006eec:	4618      	mov	r0, r3
 8006eee:	931e      	str	r3, [sp, #120]	@ 0x78
 8006ef0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006ef4:	f010 fc44 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006ef8:	f504 63c3 	add.w	r3, r4, #1560	@ 0x618
 8006efc:	a939      	add	r1, sp, #228	@ 0xe4
 8006efe:	4618      	mov	r0, r3
 8006f00:	931f      	str	r3, [sp, #124]	@ 0x7c
 8006f02:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f06:	f010 fc3b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f0a:	f204 6344 	addw	r3, r4, #1604	@ 0x644
 8006f0e:	a939      	add	r1, sp, #228	@ 0xe4
 8006f10:	4618      	mov	r0, r3
 8006f12:	9320      	str	r3, [sp, #128]	@ 0x80
 8006f14:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f18:	f010 fc32 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f1c:	f504 63ce 	add.w	r3, r4, #1648	@ 0x670
 8006f20:	a939      	add	r1, sp, #228	@ 0xe4
 8006f22:	4618      	mov	r0, r3
 8006f24:	9321      	str	r3, [sp, #132]	@ 0x84
 8006f26:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f2a:	f010 fc29 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f2e:	f204 639c 	addw	r3, r4, #1692	@ 0x69c
 8006f32:	a939      	add	r1, sp, #228	@ 0xe4
 8006f34:	4618      	mov	r0, r3
 8006f36:	9322      	str	r3, [sp, #136]	@ 0x88
 8006f38:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f3c:	f010 fc20 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f40:	f504 63d9 	add.w	r3, r4, #1736	@ 0x6c8
 8006f44:	a939      	add	r1, sp, #228	@ 0xe4
 8006f46:	4618      	mov	r0, r3
 8006f48:	9323      	str	r3, [sp, #140]	@ 0x8c
 8006f4a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f4e:	f010 fc17 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f52:	f204 63f4 	addw	r3, r4, #1780	@ 0x6f4
 8006f56:	a939      	add	r1, sp, #228	@ 0xe4
 8006f58:	4618      	mov	r0, r3
 8006f5a:	9324      	str	r3, [sp, #144]	@ 0x90
 8006f5c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f60:	f010 fc0e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f64:	f504 63e4 	add.w	r3, r4, #1824	@ 0x720
 8006f68:	a939      	add	r1, sp, #228	@ 0xe4
 8006f6a:	4618      	mov	r0, r3
 8006f6c:	9325      	str	r3, [sp, #148]	@ 0x94
 8006f6e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f72:	f010 fc05 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f76:	f204 734c 	addw	r3, r4, #1868	@ 0x74c
 8006f7a:	a939      	add	r1, sp, #228	@ 0xe4
 8006f7c:	4618      	mov	r0, r3
 8006f7e:	9326      	str	r3, [sp, #152]	@ 0x98
 8006f80:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f84:	f010 fbfc 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f88:	f504 63ef 	add.w	r3, r4, #1912	@ 0x778
 8006f8c:	a939      	add	r1, sp, #228	@ 0xe4
 8006f8e:	4618      	mov	r0, r3
 8006f90:	9327      	str	r3, [sp, #156]	@ 0x9c
 8006f92:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006f96:	f010 fbf3 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006f9a:	f204 73a4 	addw	r3, r4, #1956	@ 0x7a4
 8006f9e:	a939      	add	r1, sp, #228	@ 0xe4
 8006fa0:	4618      	mov	r0, r3
 8006fa2:	9328      	str	r3, [sp, #160]	@ 0xa0
 8006fa4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006fa8:	f010 fbea 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006fac:	f504 63fa 	add.w	r3, r4, #2000	@ 0x7d0
 8006fb0:	a939      	add	r1, sp, #228	@ 0xe4
 8006fb2:	4618      	mov	r0, r3
 8006fb4:	9329      	str	r3, [sp, #164]	@ 0xa4
 8006fb6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006fba:	f010 fbe1 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006fbe:	f204 73fc 	addw	r3, r4, #2044	@ 0x7fc
 8006fc2:	a939      	add	r1, sp, #228	@ 0xe4
 8006fc4:	4618      	mov	r0, r3
 8006fc6:	932a      	str	r3, [sp, #168]	@ 0xa8
 8006fc8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006fcc:	f010 fbd8 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006fd0:	f604 0328 	addw	r3, r4, #2088	@ 0x828
 8006fd4:	a939      	add	r1, sp, #228	@ 0xe4
 8006fd6:	4618      	mov	r0, r3
 8006fd8:	932b      	str	r3, [sp, #172]	@ 0xac
 8006fda:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006fde:	e001      	b.n	8006fe4 <_ZN25NarutoGameScreen2ViewBaseC1Ev+0x358>
 8006fe0:	08031494 	.word	0x08031494
 8006fe4:	f010 fbcc 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006fe8:	f604 0354 	addw	r3, r4, #2132	@ 0x854
 8006fec:	4618      	mov	r0, r3
 8006fee:	9336      	str	r3, [sp, #216]	@ 0xd8
 8006ff0:	f7fb fd6e 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8006ff4:	f504 6308 	add.w	r3, r4, #2176	@ 0x880
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	9337      	str	r3, [sp, #220]	@ 0xdc
 8006ffc:	f7fb fd68 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8007000:	f604 03ac 	addw	r3, r4, #2220	@ 0x8ac
 8007004:	a939      	add	r1, sp, #228	@ 0xe4
 8007006:	4618      	mov	r0, r3
 8007008:	932c      	str	r3, [sp, #176]	@ 0xb0
 800700a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800700e:	f010 fbb7 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007012:	f604 03d8 	addw	r3, r4, #2264	@ 0x8d8
 8007016:	a939      	add	r1, sp, #228	@ 0xe4
 8007018:	4618      	mov	r0, r3
 800701a:	932d      	str	r3, [sp, #180]	@ 0xb4
 800701c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007020:	f010 fbae 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007024:	f604 1304 	addw	r3, r4, #2308	@ 0x904
 8007028:	a939      	add	r1, sp, #228	@ 0xe4
 800702a:	4618      	mov	r0, r3
 800702c:	932e      	str	r3, [sp, #184]	@ 0xb8
 800702e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007032:	f010 fba5 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007036:	f504 6313 	add.w	r3, r4, #2352	@ 0x930
 800703a:	a939      	add	r1, sp, #228	@ 0xe4
 800703c:	4618      	mov	r0, r3
 800703e:	932f      	str	r3, [sp, #188]	@ 0xbc
 8007040:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007044:	f010 fb9c 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007048:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 800704c:	a939      	add	r1, sp, #228	@ 0xe4
 800704e:	4618      	mov	r0, r3
 8007050:	9330      	str	r3, [sp, #192]	@ 0xc0
 8007052:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007056:	f010 fb93 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800705a:	f604 1388 	addw	r3, r4, #2440	@ 0x988
 800705e:	a939      	add	r1, sp, #228	@ 0xe4
 8007060:	4618      	mov	r0, r3
 8007062:	9331      	str	r3, [sp, #196]	@ 0xc4
 8007064:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007068:	f010 fb8a 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800706c:	f604 13b4 	addw	r3, r4, #2484	@ 0x9b4
 8007070:	a939      	add	r1, sp, #228	@ 0xe4
 8007072:	4618      	mov	r0, r3
 8007074:	9332      	str	r3, [sp, #200]	@ 0xc8
 8007076:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800707a:	f010 fb81 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800707e:	f504 631e 	add.w	r3, r4, #2528	@ 0x9e0
 8007082:	a939      	add	r1, sp, #228	@ 0xe4
 8007084:	4618      	mov	r0, r3
 8007086:	9333      	str	r3, [sp, #204]	@ 0xcc
 8007088:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800708c:	f010 fb78 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007090:	f604 230c 	addw	r3, r4, #2572	@ 0xa0c
 8007094:	a939      	add	r1, sp, #228	@ 0xe4
 8007096:	4618      	mov	r0, r3
 8007098:	9334      	str	r3, [sp, #208]	@ 0xd0
 800709a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800709e:	f010 fb6f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80070a2:	f604 2338 	addw	r3, r4, #2616	@ 0xa38
 80070a6:	a939      	add	r1, sp, #228	@ 0xe4
 80070a8:	4618      	mov	r0, r3
 80070aa:	9335      	str	r3, [sp, #212]	@ 0xd4
 80070ac:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80070b0:	f010 fb66 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 80070b4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80070b8:	462a      	mov	r2, r5
 80070ba:	9300      	str	r3, [sp, #0]
 80070bc:	4629      	mov	r1, r5
 80070be:	4650      	mov	r0, sl
 80070c0:	23f0      	movs	r3, #240	@ 0xf0
 80070c2:	1d26      	adds	r6, r4, #4
 80070c4:	f7fb fcf0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070c8:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80070cc:	66a3      	str	r3, [r4, #104]	@ 0x68
 80070ce:	4651      	mov	r1, sl
 80070d0:	4630      	mov	r0, r6
 80070d2:	f00d fc7b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80070d6:	f04f 0352 	mov.w	r3, #82	@ 0x52
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_STAGE1_ID));
 80070da:	a939      	add	r1, sp, #228	@ 0xe4
 80070dc:	4648      	mov	r0, r9
 80070de:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80070e2:	f011 f9e9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 80070e6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80070ea:	462a      	mov	r2, r5
 80070ec:	9300      	str	r3, [sp, #0]
 80070ee:	4629      	mov	r1, r5
 80070f0:	23f0      	movs	r3, #240	@ 0xf0
 80070f2:	4648      	mov	r0, r9
 80070f4:	f7fb fcd8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80070f8:	4629      	mov	r1, r5
 80070fa:	4648      	mov	r0, r9
 80070fc:	f010 fafb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007100:	4649      	mov	r1, r9
 8007102:	4630      	mov	r0, r6
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 8007104:	f04f 091d 	mov.w	r9, #29
 8007108:	f00d fc60 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800710c:	2301      	movs	r3, #1
    BITMAP_HP_100_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR1_ID));
 800710e:	a939      	add	r1, sp, #228	@ 0xe4
 8007110:	4640      	mov	r0, r8
 8007112:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007116:	f011 f9cf 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 800711a:	2206      	movs	r2, #6
 800711c:	2369      	movs	r3, #105	@ 0x69
 800711e:	f8cd 9000 	str.w	r9, [sp]
 8007122:	4640      	mov	r0, r8
 8007124:	2105      	movs	r1, #5
 8007126:	f7fb fcbf 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800712a:	4629      	mov	r1, r5
 800712c:	4640      	mov	r0, r8
 800712e:	f010 fae2 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007132:	4641      	mov	r1, r8
 8007134:	4630      	mov	r0, r6
 8007136:	f00d fc49 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800713a:	2303      	movs	r3, #3
    BITMAP_HP_10_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR11_ID));
 800713c:	a939      	add	r1, sp, #228	@ 0xe4
 800713e:	4638      	mov	r0, r7
 8007140:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007144:	f011 f9b8 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID.setPosition(5, 6, 105, 29);
 8007148:	2206      	movs	r2, #6
 800714a:	2369      	movs	r3, #105	@ 0x69
 800714c:	f8cd 9000 	str.w	r9, [sp]
 8007150:	4638      	mov	r0, r7
 8007152:	2105      	movs	r1, #5
 8007154:	f7fb fca8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007158:	4629      	mov	r1, r5
 800715a:	4638      	mov	r0, r7
 800715c:	f010 facb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007160:	4639      	mov	r1, r7
 8007162:	4630      	mov	r0, r6
 8007164:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 8007168:	f00d fc30 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR12_ID));
 800716c:	9802      	ldr	r0, [sp, #8]
 800716e:	2304      	movs	r3, #4
 8007170:	a939      	add	r1, sp, #228	@ 0xe4
 8007172:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007176:	f011 f99f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID.setPosition(5, 6, 105, 29);
 800717a:	2206      	movs	r2, #6
 800717c:	2369      	movs	r3, #105	@ 0x69
 800717e:	9802      	ldr	r0, [sp, #8]
 8007180:	f8cd 9000 	str.w	r9, [sp]
 8007184:	2105      	movs	r1, #5
 8007186:	f7fb fc8f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800718a:	9802      	ldr	r0, [sp, #8]
 800718c:	4629      	mov	r1, r5
 800718e:	f010 fab2 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007192:	9902      	ldr	r1, [sp, #8]
 8007194:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8007198:	4630      	mov	r0, r6
 800719a:	f00d fc17 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR10_ID));
 800719e:	9803      	ldr	r0, [sp, #12]
 80071a0:	2302      	movs	r3, #2
 80071a2:	a939      	add	r1, sp, #228	@ 0xe4
 80071a4:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80071a8:	f011 f986 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID.setPosition(5, 6, 105, 29);
 80071ac:	2206      	movs	r2, #6
 80071ae:	2369      	movs	r3, #105	@ 0x69
 80071b0:	9803      	ldr	r0, [sp, #12]
 80071b2:	f8cd 9000 	str.w	r9, [sp]
 80071b6:	2105      	movs	r1, #5
 80071b8:	f7fb fc76 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80071bc:	9803      	ldr	r0, [sp, #12]
 80071be:	4629      	mov	r1, r5
 80071c0:	f010 fa99 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80071c4:	9903      	ldr	r1, [sp, #12]
 80071c6:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 80071ca:	4630      	mov	r0, r6
 80071cc:	f00d fbfe 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR9_ID));
 80071d0:	9804      	ldr	r0, [sp, #16]
 80071d2:	230c      	movs	r3, #12
 80071d4:	a939      	add	r1, sp, #228	@ 0xe4
 80071d6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80071da:	f011 f96d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID.setPosition(5, 6, 105, 29);
 80071de:	2206      	movs	r2, #6
 80071e0:	2369      	movs	r3, #105	@ 0x69
 80071e2:	9804      	ldr	r0, [sp, #16]
 80071e4:	f8cd 9000 	str.w	r9, [sp]
 80071e8:	2105      	movs	r1, #5
 80071ea:	f7fb fc5d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80071ee:	9804      	ldr	r0, [sp, #16]
 80071f0:	4629      	mov	r1, r5
 80071f2:	f010 fa80 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80071f6:	9904      	ldr	r1, [sp, #16]
 80071f8:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 80071fc:	4630      	mov	r0, r6
 80071fe:	f00d fbe5 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR8_ID));
 8007202:	9805      	ldr	r0, [sp, #20]
 8007204:	230b      	movs	r3, #11
 8007206:	a939      	add	r1, sp, #228	@ 0xe4
 8007208:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800720c:	f011 f954 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID.setPosition(5, 6, 105, 29);
 8007210:	2206      	movs	r2, #6
 8007212:	2369      	movs	r3, #105	@ 0x69
 8007214:	9805      	ldr	r0, [sp, #20]
 8007216:	f8cd 9000 	str.w	r9, [sp]
 800721a:	2105      	movs	r1, #5
 800721c:	f7fb fc44 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007220:	9805      	ldr	r0, [sp, #20]
 8007222:	4629      	mov	r1, r5
 8007224:	f010 fa67 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007228:	9905      	ldr	r1, [sp, #20]
 800722a:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 800722e:	4630      	mov	r0, r6
 8007230:	f00d fbcc 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR7_ID));
 8007234:	9806      	ldr	r0, [sp, #24]
 8007236:	230a      	movs	r3, #10
 8007238:	a939      	add	r1, sp, #228	@ 0xe4
 800723a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800723e:	f011 f93b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID.setPosition(5, 6, 105, 29);
 8007242:	2206      	movs	r2, #6
 8007244:	2369      	movs	r3, #105	@ 0x69
 8007246:	9806      	ldr	r0, [sp, #24]
 8007248:	f8cd 9000 	str.w	r9, [sp]
 800724c:	2105      	movs	r1, #5
 800724e:	f7fb fc2b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007252:	9806      	ldr	r0, [sp, #24]
 8007254:	4629      	mov	r1, r5
 8007256:	f010 fa4e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800725a:	9906      	ldr	r1, [sp, #24]
 800725c:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8007260:	4630      	mov	r0, r6
 8007262:	f00d fbb3 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR6_ID));
 8007266:	9807      	ldr	r0, [sp, #28]
 8007268:	2309      	movs	r3, #9
 800726a:	a939      	add	r1, sp, #228	@ 0xe4
 800726c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007270:	f011 f922 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID.setPosition(5, 6, 105, 29);
 8007274:	2206      	movs	r2, #6
 8007276:	2369      	movs	r3, #105	@ 0x69
 8007278:	9807      	ldr	r0, [sp, #28]
 800727a:	f8cd 9000 	str.w	r9, [sp]
 800727e:	2105      	movs	r1, #5
 8007280:	f7fb fc12 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007284:	9807      	ldr	r0, [sp, #28]
 8007286:	4629      	mov	r1, r5
 8007288:	f010 fa35 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800728c:	9907      	ldr	r1, [sp, #28]
 800728e:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 8007292:	4630      	mov	r0, r6
 8007294:	f00d fb9a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR5_ID));
 8007298:	9808      	ldr	r0, [sp, #32]
 800729a:	2308      	movs	r3, #8
 800729c:	a939      	add	r1, sp, #228	@ 0xe4
 800729e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80072a2:	f011 f909 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID.setPosition(5, 6, 105, 29);
 80072a6:	2206      	movs	r2, #6
 80072a8:	2369      	movs	r3, #105	@ 0x69
 80072aa:	9808      	ldr	r0, [sp, #32]
 80072ac:	f8cd 9000 	str.w	r9, [sp]
 80072b0:	2105      	movs	r1, #5
 80072b2:	f7fb fbf9 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80072b6:	9808      	ldr	r0, [sp, #32]
 80072b8:	4629      	mov	r1, r5
 80072ba:	f010 fa1c 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80072be:	9908      	ldr	r1, [sp, #32]
 80072c0:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 80072c4:	4630      	mov	r0, r6
 80072c6:	f00d fb81 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR4_ID));
 80072ca:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80072cc:	2307      	movs	r3, #7
 80072ce:	a939      	add	r1, sp, #228	@ 0xe4
 80072d0:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80072d4:	f011 f8f0 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID.setPosition(5, 6, 105, 29);
 80072d8:	2369      	movs	r3, #105	@ 0x69
 80072da:	2206      	movs	r2, #6
 80072dc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80072de:	f8cd 9000 	str.w	r9, [sp]
 80072e2:	2105      	movs	r1, #5
 80072e4:	f7fb fbe0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80072e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80072ea:	4629      	mov	r1, r5
 80072ec:	f010 fa03 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80072f0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80072f2:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 80072f6:	4630      	mov	r0, r6
 80072f8:	2706      	movs	r7, #6
 80072fa:	f00d fb67 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR3_ID));
 80072fe:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8007300:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 8007304:	a939      	add	r1, sp, #228	@ 0xe4
 8007306:	f011 f8d7 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID.setPosition(5, 6, 105, 29);
 800730a:	463a      	mov	r2, r7
 800730c:	2369      	movs	r3, #105	@ 0x69
 800730e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8007310:	f8cd 9000 	str.w	r9, [sp]
 8007314:	2105      	movs	r1, #5
 8007316:	f7fb fbc7 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800731a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800731c:	4629      	mov	r1, r5
 800731e:	f010 f9ea 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007322:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8007324:	f884 5275 	strb.w	r5, [r4, #629]	@ 0x275
 8007328:	4630      	mov	r0, r6
 800732a:	f00d fb4f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 800732e:	f04f 0a43 	mov.w	sl, #67	@ 0x43
    BITMAP_HP_130_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUBOSS_ID));
 8007332:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8007334:	f04f 0330 	mov.w	r3, #48	@ 0x30
 8007338:	a939      	add	r1, sp, #228	@ 0xe4
 800733a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800733e:	f011 f8bb 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 8007342:	f06f 0208 	mvn.w	r2, #8
 8007346:	2366      	movs	r3, #102	@ 0x66
 8007348:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800734a:	f8cd a000 	str.w	sl, [sp]
 800734e:	2181      	movs	r1, #129	@ 0x81
 8007350:	f7fb fbaa 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_130_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007354:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8007356:	4629      	mov	r1, r5
 8007358:	f010 f9cd 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800735c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800735e:	4630      	mov	r0, r6
 8007360:	f00d fb34 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_120_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_2_ID));
 8007364:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8007366:	2331      	movs	r3, #49	@ 0x31
 8007368:	a939      	add	r1, sp, #228	@ 0xe4
 800736a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800736e:	f011 f8a3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_120_ID_1.setPosition(129, -9, 102, 67);
 8007372:	f06f 0208 	mvn.w	r2, #8
 8007376:	2366      	movs	r3, #102	@ 0x66
 8007378:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800737a:	f8cd a000 	str.w	sl, [sp]
 800737e:	2181      	movs	r1, #129	@ 0x81
 8007380:	f7fb fb92 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_120_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007384:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8007386:	4629      	mov	r1, r5
 8007388:	f010 f9b5 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800738c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800738e:	f884 52cd 	strb.w	r5, [r4, #717]	@ 0x2cd
 8007392:	4630      	mov	r0, r6
 8007394:	f00d fb1a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_110_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_3_ID));
 8007398:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800739a:	2332      	movs	r3, #50	@ 0x32
 800739c:	a939      	add	r1, sp, #228	@ 0xe4
 800739e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80073a2:	f011 f889 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_110_ID_1.setPosition(129, -9, 102, 67);
 80073a6:	f06f 0208 	mvn.w	r2, #8
 80073aa:	2366      	movs	r3, #102	@ 0x66
 80073ac:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80073ae:	f8cd a000 	str.w	sl, [sp]
 80073b2:	2181      	movs	r1, #129	@ 0x81
 80073b4:	f7fb fb78 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_110_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80073b8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80073ba:	4629      	mov	r1, r5
 80073bc:	f010 f99b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80073c0:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80073c2:	f884 52f9 	strb.w	r5, [r4, #761]	@ 0x2f9
 80073c6:	4630      	mov	r0, r6
 80073c8:	f00d fb00 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_100_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BAR2_ID));
 80073cc:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80073ce:	2305      	movs	r3, #5
 80073d0:	a939      	add	r1, sp, #228	@ 0xe4
 80073d2:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80073d6:	f011 f86f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID_1.setPosition(126, 6, 105, 29);
 80073da:	463a      	mov	r2, r7
 80073dc:	2369      	movs	r3, #105	@ 0x69
 80073de:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80073e0:	f8cd 9000 	str.w	r9, [sp]
 80073e4:	217e      	movs	r1, #126	@ 0x7e
 80073e6:	f7fb fb5f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80073ea:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80073ec:	4629      	mov	r1, r5
 80073ee:	f010 f982 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80073f2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80073f4:	f884 5325 	strb.w	r5, [r4, #805]	@ 0x325
 80073f8:	4630      	mov	r0, r6
 80073fa:	f00d fae7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH9_ID));
 80073fe:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8007400:	2316      	movs	r3, #22
 8007402:	a939      	add	r1, sp, #228	@ 0xe4
 8007404:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007408:	f011 f856 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID_1.setPosition(126, 6, 105, 29);
 800740c:	463a      	mov	r2, r7
 800740e:	2369      	movs	r3, #105	@ 0x69
 8007410:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8007412:	f8cd 9000 	str.w	r9, [sp]
 8007416:	217e      	movs	r1, #126	@ 0x7e
 8007418:	f7fb fb46 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800741c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800741e:	4629      	mov	r1, r5
 8007420:	f010 f969 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007424:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8007426:	f884 5351 	strb.w	r5, [r4, #849]	@ 0x351
 800742a:	4630      	mov	r0, r6
 800742c:	f00d face 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH8_ID));
 8007430:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8007432:	2315      	movs	r3, #21
 8007434:	a939      	add	r1, sp, #228	@ 0xe4
 8007436:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800743a:	f011 f83d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID_1.setPosition(126, 6, 105, 29);
 800743e:	463a      	mov	r2, r7
 8007440:	2369      	movs	r3, #105	@ 0x69
 8007442:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8007444:	f8cd 9000 	str.w	r9, [sp]
 8007448:	217e      	movs	r1, #126	@ 0x7e
 800744a:	f7fb fb2d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800744e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8007450:	4629      	mov	r1, r5
 8007452:	f010 f950 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007456:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8007458:	f884 537d 	strb.w	r5, [r4, #893]	@ 0x37d
 800745c:	4630      	mov	r0, r6
 800745e:	f00d fab5 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH7_ID));
 8007462:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8007464:	2314      	movs	r3, #20
 8007466:	a939      	add	r1, sp, #228	@ 0xe4
 8007468:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800746c:	f011 f824 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID_1.setPosition(126, 6, 105, 29);
 8007470:	463a      	mov	r2, r7
 8007472:	2369      	movs	r3, #105	@ 0x69
 8007474:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8007476:	f8cd 9000 	str.w	r9, [sp]
 800747a:	217e      	movs	r1, #126	@ 0x7e
 800747c:	f7fb fb14 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007480:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8007482:	4629      	mov	r1, r5
 8007484:	f010 f937 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007488:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800748a:	f884 53a9 	strb.w	r5, [r4, #937]	@ 0x3a9
 800748e:	4630      	mov	r0, r6
 8007490:	f00d fa9c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH6_ID));
 8007494:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8007496:	2313      	movs	r3, #19
 8007498:	a939      	add	r1, sp, #228	@ 0xe4
 800749a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800749e:	f011 f80b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID_1.setPosition(126, 6, 105, 29);
 80074a2:	463a      	mov	r2, r7
 80074a4:	2369      	movs	r3, #105	@ 0x69
 80074a6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80074a8:	f8cd 9000 	str.w	r9, [sp]
 80074ac:	217e      	movs	r1, #126	@ 0x7e
 80074ae:	f7fb fafb 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80074b2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80074b4:	4629      	mov	r1, r5
 80074b6:	f010 f91e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80074ba:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80074bc:	f884 53d5 	strb.w	r5, [r4, #981]	@ 0x3d5
 80074c0:	4630      	mov	r0, r6
 80074c2:	f00d fa83 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH5_ID));
 80074c6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80074c8:	f04f 0312 	mov.w	r3, #18
 80074cc:	a939      	add	r1, sp, #228	@ 0xe4
 80074ce:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80074d2:	f010 fff1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID_1.setPosition(126, 6, 105, 29);
 80074d6:	463a      	mov	r2, r7
 80074d8:	2369      	movs	r3, #105	@ 0x69
 80074da:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80074dc:	f8cd 9000 	str.w	r9, [sp]
 80074e0:	217e      	movs	r1, #126	@ 0x7e
 80074e2:	f7fb fae1 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80074e6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80074e8:	4629      	mov	r1, r5
 80074ea:	f010 f904 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80074ee:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80074f0:	f884 5401 	strb.w	r5, [r4, #1025]	@ 0x401
 80074f4:	4630      	mov	r0, r6
 80074f6:	f00d fa69 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH4_ID));
 80074fa:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80074fc:	2311      	movs	r3, #17
 80074fe:	a939      	add	r1, sp, #228	@ 0xe4
 8007500:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007504:	f010 ffd8 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID_1.setPosition(126, 6, 105, 29);
 8007508:	463a      	mov	r2, r7
 800750a:	2369      	movs	r3, #105	@ 0x69
 800750c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800750e:	f8cd 9000 	str.w	r9, [sp]
 8007512:	217e      	movs	r1, #126	@ 0x7e
 8007514:	f7fb fac8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007518:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800751a:	4629      	mov	r1, r5
 800751c:	f010 f8eb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007520:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8007522:	f884 542d 	strb.w	r5, [r4, #1069]	@ 0x42d
 8007526:	4630      	mov	r0, r6
 8007528:	f00d fa50 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH3_ID));
 800752c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800752e:	2310      	movs	r3, #16
 8007530:	a939      	add	r1, sp, #228	@ 0xe4
 8007532:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007536:	f010 ffbf 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID_1.setPosition(126, 6, 105, 29);
 800753a:	463a      	mov	r2, r7
 800753c:	2369      	movs	r3, #105	@ 0x69
 800753e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8007540:	f8cd 9000 	str.w	r9, [sp]
 8007544:	217e      	movs	r1, #126	@ 0x7e
 8007546:	f7fb faaf 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800754a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800754c:	4629      	mov	r1, r5
 800754e:	f010 f8d2 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007552:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8007554:	f884 5459 	strb.w	r5, [r4, #1113]	@ 0x459
 8007558:	4630      	mov	r0, r6
 800755a:	f00d fa37 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH2_ID));
 800755e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8007560:	f04f 030f 	mov.w	r3, #15
 8007564:	a939      	add	r1, sp, #228	@ 0xe4
 8007566:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800756a:	f010 ffa5 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID_1.setPosition(126, 6, 105, 29);
 800756e:	463a      	mov	r2, r7
 8007570:	2369      	movs	r3, #105	@ 0x69
 8007572:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8007574:	f8cd 9000 	str.w	r9, [sp]
 8007578:	217e      	movs	r1, #126	@ 0x7e
 800757a:	f7fb fa95 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800757e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8007580:	4629      	mov	r1, r5
 8007582:	f010 f8b8 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007586:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8007588:	f884 5485 	strb.w	r5, [r4, #1157]	@ 0x485
 800758c:	4630      	mov	r0, r6
 800758e:	f00d fa1d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_10_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH1_ID));
 8007592:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8007594:	f04f 030e 	mov.w	r3, #14
 8007598:	a939      	add	r1, sp, #228	@ 0xe4
 800759a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800759e:	f010 ff8b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID_1.setPosition(126, 6, 105, 29);
 80075a2:	463a      	mov	r2, r7
 80075a4:	2369      	movs	r3, #105	@ 0x69
 80075a6:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80075a8:	f8cd 9000 	str.w	r9, [sp]
 80075ac:	217e      	movs	r1, #126	@ 0x7e
 80075ae:	f7fb fa7b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80075b2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80075b4:	4629      	mov	r1, r5
 80075b6:	f010 f89e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80075ba:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80075bc:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 80075c0:	4630      	mov	r0, r6
 80075c2:	f00d fa03 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH0_ID));
 80075c6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80075c8:	230d      	movs	r3, #13
 80075ca:	a939      	add	r1, sp, #228	@ 0xe4
 80075cc:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80075d0:	f010 ff72 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID_1.setPosition(126, 6, 105, 29);
 80075d4:	463a      	mov	r2, r7
 80075d6:	2369      	movs	r3, #105	@ 0x69
 80075d8:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80075da:	f8cd 9000 	str.w	r9, [sp]
 80075de:	217e      	movs	r1, #126	@ 0x7e
 80075e0:	f7fb fa62 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80075e4:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80075e6:	4629      	mov	r1, r5
 80075e8:	f010 f885 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80075ec:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80075ee:	f884 54dd 	strb.w	r5, [r4, #1245]	@ 0x4dd
 80075f2:	4630      	mov	r0, r6
 80075f4:	f00d f9ea 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire1.setBitmap(touchgfx::Bitmap(BITMAP_FIRE1_ID));
 80075f8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80075fa:	2328      	movs	r3, #40	@ 0x28
 80075fc:	a939      	add	r1, sp, #228	@ 0xe4
 80075fe:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007602:	f010 ff59 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire1.setPosition(82, 154, 85, 87);
 8007606:	2357      	movs	r3, #87	@ 0x57
 8007608:	229a      	movs	r2, #154	@ 0x9a
 800760a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800760c:	9300      	str	r3, [sp, #0]
 800760e:	2152      	movs	r1, #82	@ 0x52
 8007610:	2355      	movs	r3, #85	@ 0x55
 8007612:	f7fb fa49 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007616:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8007618:	4629      	mov	r1, r5
 800761a:	f010 f86c 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800761e:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8007620:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 8007624:	4630      	mov	r0, r6
 8007626:	f00d f9d1 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire2.setBitmap(touchgfx::Bitmap(BITMAP_FIRE2_ID));
 800762a:	981a      	ldr	r0, [sp, #104]	@ 0x68
 800762c:	2329      	movs	r3, #41	@ 0x29
 800762e:	a939      	add	r1, sp, #228	@ 0xe4
 8007630:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007634:	f010 ff40 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire2.setPosition(-19, 43, 129, 209);
 8007638:	23d1      	movs	r3, #209	@ 0xd1
 800763a:	222b      	movs	r2, #43	@ 0x2b
 800763c:	981a      	ldr	r0, [sp, #104]	@ 0x68
 800763e:	9300      	str	r3, [sp, #0]
 8007640:	f06f 0112 	mvn.w	r1, #18
 8007644:	2381      	movs	r3, #129	@ 0x81
 8007646:	f7fb fa2f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800764a:	981a      	ldr	r0, [sp, #104]	@ 0x68
 800764c:	4629      	mov	r1, r5
 800764e:	f010 f852 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007652:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8007654:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 8007658:	4630      	mov	r0, r6
 800765a:	f00d f9b7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_lose.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_LOSE_ID));
 800765e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8007660:	2324      	movs	r3, #36	@ 0x24
 8007662:	a939      	add	r1, sp, #228	@ 0xe4
 8007664:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007668:	f010 ff26 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_lose.setPosition(100, 137, 147, 115);
 800766c:	2373      	movs	r3, #115	@ 0x73
 800766e:	2289      	movs	r2, #137	@ 0x89
 8007670:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8007672:	9300      	str	r3, [sp, #0]
 8007674:	2164      	movs	r1, #100	@ 0x64
 8007676:	2393      	movs	r3, #147	@ 0x93
 8007678:	f7fb fa16 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800767c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800767e:	4629      	mov	r1, r5
 8007680:	f010 f839 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007684:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8007686:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800768a:	4630      	mov	r0, r6
 800768c:	2720      	movs	r7, #32
 800768e:	f00d f99d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_win.setPosition(94, 62, 146, 172);
 8007692:	f04f 09ac 	mov.w	r9, #172	@ 0xac
    bleach_win.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 8007696:	a939      	add	r1, sp, #228	@ 0xe4
 8007698:	4658      	mov	r0, fp
 800769a:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 800769e:	f010 ff0b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_win.setPosition(94, 62, 146, 172);
 80076a2:	2392      	movs	r3, #146	@ 0x92
 80076a4:	223e      	movs	r2, #62	@ 0x3e
 80076a6:	f8cd 9000 	str.w	r9, [sp]
 80076aa:	4658      	mov	r0, fp
 80076ac:	215e      	movs	r1, #94	@ 0x5e
 80076ae:	f7fb f9fb 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80076b2:	4629      	mov	r1, r5
 80076b4:	4658      	mov	r0, fp
 80076b6:	f010 f81e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80076ba:	4659      	mov	r1, fp
 80076bc:	4630      	mov	r0, r6
 80076be:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 80076c2:	f00d f983 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80076c6:	f04f 0b26 	mov.w	fp, #38	@ 0x26
    bleach_spe_fire.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_FIRE_ID));
 80076ca:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80076cc:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 80076d0:	a939      	add	r1, sp, #228	@ 0xe4
 80076d2:	f010 fef1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe_fire.setPosition(-11, 80, 186, 190);
 80076d6:	23be      	movs	r3, #190	@ 0xbe
 80076d8:	2250      	movs	r2, #80	@ 0x50
 80076da:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80076dc:	9300      	str	r3, [sp, #0]
 80076de:	f06f 010a 	mvn.w	r1, #10
 80076e2:	23ba      	movs	r3, #186	@ 0xba
 80076e4:	f7fb f9e0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe_fire.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80076e8:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80076ea:	4629      	mov	r1, r5
 80076ec:	f010 f803 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80076f0:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80076f2:	f884 55b9 	strb.w	r5, [r4, #1465]	@ 0x5b9
 80076f6:	4630      	mov	r0, r6
 80076f8:	f04f 0825 	mov.w	r8, #37	@ 0x25
 80076fc:	f00d f966 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_ID));
 8007700:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8007702:	f8ad 80e4 	strh.w	r8, [sp, #228]	@ 0xe4
 8007706:	a939      	add	r1, sp, #228	@ 0xe4
 8007708:	f010 fed6 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe.setPosition(126, 48, 117, 130);
 800770c:	2382      	movs	r3, #130	@ 0x82
 800770e:	2230      	movs	r2, #48	@ 0x30
 8007710:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8007712:	9300      	str	r3, [sp, #0]
 8007714:	217e      	movs	r1, #126	@ 0x7e
 8007716:	2375      	movs	r3, #117	@ 0x75
 8007718:	f7fb f9c6 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800771c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 800771e:	4629      	mov	r1, r5
 8007720:	f00f ffe9 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007724:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8007726:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800772a:	4630      	mov	r0, r6
 800772c:	f00d f94e 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_def.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_DEF_ID));
 8007730:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8007732:	2323      	movs	r3, #35	@ 0x23
 8007734:	a939      	add	r1, sp, #228	@ 0xe4
 8007736:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800773a:	f010 febd 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_def.setPosition(100, 62, 140, 179);
 800773e:	23b3      	movs	r3, #179	@ 0xb3
 8007740:	223e      	movs	r2, #62	@ 0x3e
 8007742:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8007744:	9300      	str	r3, [sp, #0]
 8007746:	2164      	movs	r1, #100	@ 0x64
 8007748:	238c      	movs	r3, #140	@ 0x8c
 800774a:	f7fb f9ad 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800774e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8007750:	4629      	mov	r1, r5
 8007752:	f00f ffd0 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007756:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8007758:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800775c:	4630      	mov	r0, r6
 800775e:	f00d f935 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_atk.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ATK_ID));
 8007762:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8007764:	2321      	movs	r3, #33	@ 0x21
 8007766:	a939      	add	r1, sp, #228	@ 0xe4
 8007768:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800776c:	f010 fea4 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_atk.setPosition(94, 62, 152, 172);
 8007770:	2398      	movs	r3, #152	@ 0x98
 8007772:	223e      	movs	r2, #62	@ 0x3e
 8007774:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8007776:	f8cd 9000 	str.w	r9, [sp]
 800777a:	215e      	movs	r1, #94	@ 0x5e
 800777c:	f7fb f994 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007780:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8007782:	4629      	mov	r1, r5
 8007784:	f00f ffb7 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007788:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 800778a:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800778e:	4630      	mov	r0, r6
 8007790:	f00d f91c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 8007794:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8007796:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 800779a:	a939      	add	r1, sp, #228	@ 0xe4
 800779c:	f010 fe8c 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(100, 62, 146, 172);
 80077a0:	223e      	movs	r2, #62	@ 0x3e
 80077a2:	2392      	movs	r3, #146	@ 0x92
 80077a4:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80077a6:	f8cd 9000 	str.w	r9, [sp]
 80077aa:	2164      	movs	r1, #100	@ 0x64
 80077ac:	f7fb f97c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80077b0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80077b2:	4629      	mov	r1, r5
 80077b4:	f00f ff9f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80077b8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80077ba:	4630      	mov	r0, r6
 80077bc:	f00d f906 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(15, 148, 67, 85);
 80077c0:	f04f 0955 	mov.w	r9, #85	@ 0x55
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 80077c4:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80077c6:	2333      	movs	r3, #51	@ 0x33
 80077c8:	a939      	add	r1, sp, #228	@ 0xe4
 80077ca:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80077ce:	f010 fe73 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(15, 148, 67, 85);
 80077d2:	4653      	mov	r3, sl
 80077d4:	2294      	movs	r2, #148	@ 0x94
 80077d6:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80077d8:	f8cd 9000 	str.w	r9, [sp]
 80077dc:	210f      	movs	r1, #15
 80077de:	f7fb f963 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80077e2:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80077e4:	4629      	mov	r1, r5
 80077e6:	f00f ff86 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80077ea:	9921      	ldr	r1, [sp, #132]	@ 0x84
 80077ec:	4630      	mov	r0, r6
 80077ee:	f00d f8ed 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_win.setPosition(18, 138, 70, 96);
 80077f2:	f04f 0a60 	mov.w	sl, #96	@ 0x60
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_WIN_ID));
 80077f6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80077f8:	2338      	movs	r3, #56	@ 0x38
 80077fa:	a939      	add	r1, sp, #228	@ 0xe4
 80077fc:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007800:	f010 fe5a 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_win.setPosition(18, 138, 70, 96);
 8007804:	228a      	movs	r2, #138	@ 0x8a
 8007806:	2346      	movs	r3, #70	@ 0x46
 8007808:	9822      	ldr	r0, [sp, #136]	@ 0x88
 800780a:	f8cd a000 	str.w	sl, [sp]
 800780e:	2112      	movs	r1, #18
 8007810:	f7fb f94a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007814:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8007816:	4629      	mov	r1, r5
 8007818:	f00f ff6d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800781c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 800781e:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 8007822:	4630      	mov	r0, r6
 8007824:	f00d f8d2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_lose.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DIE_ID));
 8007828:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 800782a:	2336      	movs	r3, #54	@ 0x36
 800782c:	a939      	add	r1, sp, #228	@ 0xe4
 800782e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007832:	f010 fe41 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_lose.setPosition(23, 167, 71, 85);
 8007836:	22a7      	movs	r2, #167	@ 0xa7
 8007838:	2347      	movs	r3, #71	@ 0x47
 800783a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 800783c:	f8cd 9000 	str.w	r9, [sp]
 8007840:	2117      	movs	r1, #23
 8007842:	f7fb f931 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007846:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8007848:	4629      	mov	r1, r5
 800784a:	f00f ff54 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800784e:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8007850:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 8007854:	4630      	mov	r0, r6
 8007856:	f00d f8b9 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_SPE_ID));
 800785a:	9824      	ldr	r0, [sp, #144]	@ 0x90
 800785c:	2337      	movs	r3, #55	@ 0x37
 800785e:	a939      	add	r1, sp, #228	@ 0xe4
 8007860:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007864:	f010 fe28 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(38, 130, 72, 104);
 8007868:	2368      	movs	r3, #104	@ 0x68
 800786a:	2282      	movs	r2, #130	@ 0x82
 800786c:	9824      	ldr	r0, [sp, #144]	@ 0x90
 800786e:	9300      	str	r3, [sp, #0]
 8007870:	4659      	mov	r1, fp
 8007872:	2348      	movs	r3, #72	@ 0x48
 8007874:	f7fb f918 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007878:	9824      	ldr	r0, [sp, #144]	@ 0x90
 800787a:	4629      	mov	r1, r5
 800787c:	f00f ff3b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007880:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8007882:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 8007886:	4630      	mov	r0, r6
 8007888:	f00d f8a0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DEF_ID));
 800788c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 800788e:	2335      	movs	r3, #53	@ 0x35
 8007890:	a939      	add	r1, sp, #228	@ 0xe4
 8007892:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007896:	f010 fe0f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(15, 142, 67, 85);
 800789a:	228e      	movs	r2, #142	@ 0x8e
 800789c:	2343      	movs	r3, #67	@ 0x43
 800789e:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80078a0:	f8cd 9000 	str.w	r9, [sp]
 80078a4:	210f      	movs	r1, #15
 80078a6:	f7fb f8ff 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80078aa:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80078ac:	4629      	mov	r1, r5
 80078ae:	f00f ff22 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80078b2:	9925      	ldr	r1, [sp, #148]	@ 0x94
 80078b4:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 80078b8:	4630      	mov	r0, r6
 80078ba:	f00d f887 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_ATK_ID));
 80078be:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80078c0:	2334      	movs	r3, #52	@ 0x34
 80078c2:	a939      	add	r1, sp, #228	@ 0xe4
 80078c4:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80078c8:	f010 fdf6 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(38, 137, 72, 96);
 80078cc:	2348      	movs	r3, #72	@ 0x48
 80078ce:	2289      	movs	r2, #137	@ 0x89
 80078d0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80078d2:	f8cd a000 	str.w	sl, [sp]
 80078d6:	4659      	mov	r1, fp
 80078d8:	f7fb f8e6 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80078dc:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80078de:	f8df a34c 	ldr.w	sl, [pc, #844]	@ 8007c2c <_ZN25NarutoGameScreen2ViewBaseC1Ev+0xfa0>
 80078e2:	4629      	mov	r1, r5
 80078e4:	f00f ff07 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80078e8:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80078ea:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 80078ee:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 80078f0:	f04f 092e 	mov.w	r9, #46	@ 0x2e
 80078f4:	f00d f86a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 80078f8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80078fa:	f8ad 50e4 	strh.w	r5, [sp, #228]	@ 0xe4
 80078fe:	a939      	add	r1, sp, #228	@ 0xe4
 8007900:	f010 fdda 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 8007904:	464b      	mov	r3, r9
 8007906:	22f2      	movs	r2, #242	@ 0xf2
 8007908:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 800790a:	f8cd 9000 	str.w	r9, [sp]
 800790e:	2140      	movs	r1, #64	@ 0x40
 8007910:	f7fb f8ca 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007914:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8007916:	4629      	mov	r1, r5
 8007918:	f00f feed 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800791c:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 800791e:	f884 579d 	strb.w	r5, [r4, #1949]	@ 0x79d
 8007922:	4630      	mov	r0, r6
 8007924:	f00d f852 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8007928:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 800792a:	231f      	movs	r3, #31
 800792c:	a939      	add	r1, sp, #228	@ 0xe4
 800792e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007932:	f010 fdc1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 8007936:	464b      	mov	r3, r9
 8007938:	22f2      	movs	r2, #242	@ 0xf2
 800793a:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 800793c:	f8cd 9000 	str.w	r9, [sp]
 8007940:	217c      	movs	r1, #124	@ 0x7c
 8007942:	f7fb f8b1 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007946:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8007948:	4629      	mov	r1, r5
 800794a:	f00f fed4 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800794e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8007950:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 8007954:	4630      	mov	r0, r6
 8007956:	f00d f839 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 800795a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 800795c:	234c      	movs	r3, #76	@ 0x4c
 800795e:	a939      	add	r1, sp, #228	@ 0xe4
 8007960:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007964:	f010 fda8 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 8007968:	464b      	mov	r3, r9
 800796a:	22f2      	movs	r2, #242	@ 0xf2
 800796c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 800796e:	f8cd 9000 	str.w	r9, [sp]
 8007972:	21b8      	movs	r1, #184	@ 0xb8
 8007974:	f7fb f898 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007978:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 800797a:	4629      	mov	r1, r5
 800797c:	f00f febb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007980:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8007982:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5
 8007986:	4630      	mov	r0, r6
 8007988:	f00d f820 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 800798c:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 800798e:	f04f 033a 	mov.w	r3, #58	@ 0x3a
 8007992:	a939      	add	r1, sp, #228	@ 0xe4
 8007994:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007998:	f010 fd8e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 800799c:	464b      	mov	r3, r9
 800799e:	22f1      	movs	r2, #241	@ 0xf1
 80079a0:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80079a2:	f8cd 9000 	str.w	r9, [sp]
 80079a6:	2102      	movs	r1, #2
 80079a8:	f7fb f87e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80079ac:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80079ae:	4629      	mov	r1, r5
 80079b0:	f00f fea1 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80079b4:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80079b6:	f884 5821 	strb.w	r5, [r4, #2081]	@ 0x821
 80079ba:	4630      	mov	r0, r6
 80079bc:	f00d f806 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 80079c0:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80079c2:	2339      	movs	r3, #57	@ 0x39
 80079c4:	a939      	add	r1, sp, #228	@ 0xe4
 80079c6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80079ca:	f010 fd75 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 80079ce:	464b      	mov	r3, r9
 80079d0:	22f1      	movs	r2, #241	@ 0xf1
 80079d2:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80079d4:	f8cd 9000 	str.w	r9, [sp]
 80079d8:	2102      	movs	r1, #2
 80079da:	f7fb f865 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80079de:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80079e0:	4629      	mov	r1, r5
 80079e2:	f00f fe88 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    chakra_box1.setPosition(14, 43, 86, 5);
 80079e6:	f04f 0905 	mov.w	r9, #5
 80079ea:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80079ec:	4630      	mov	r0, r6
 80079ee:	f00c ffed 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80079f2:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 80079f4:	f8cd 9000 	str.w	r9, [sp]
 80079f8:	2356      	movs	r3, #86	@ 0x56
 80079fa:	222b      	movs	r2, #43	@ 0x2b
 80079fc:	210e      	movs	r1, #14
 80079fe:	f7fb f853 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a02:	9936      	ldr	r1, [sp, #216]	@ 0xd8
 8007a04:	f8c4 a87c 	str.w	sl, [r4, #2172]	@ 0x87c
 8007a08:	4630      	mov	r0, r6
 8007a0a:	f00c ffdf 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakra_box2.setPosition(135, 43, 86, 5);
 8007a0e:	222b      	movs	r2, #43	@ 0x2b
 8007a10:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8007a12:	f8cd 9000 	str.w	r9, [sp]
 8007a16:	2356      	movs	r3, #86	@ 0x56
 8007a18:	2187      	movs	r1, #135	@ 0x87
 8007a1a:	f7fb f845 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a1e:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 8007a20:	f8c4 a8a8 	str.w	sl, [r4, #2216]	@ 0x8a8
 8007a24:	4630      	mov	r0, r6
 8007a26:	f00c ffd1 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gameover.setPosition(65, 6, 110, 157);
 8007a2a:	f04f 099d 	mov.w	r9, #157	@ 0x9d
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 8007a2e:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8007a30:	232a      	movs	r3, #42	@ 0x2a
 8007a32:	a939      	add	r1, sp, #228	@ 0xe4
 8007a34:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007a38:	f010 fd3e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.setPosition(65, 6, 110, 157);
 8007a3c:	2206      	movs	r2, #6
 8007a3e:	236e      	movs	r3, #110	@ 0x6e
 8007a40:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8007a42:	f8cd 9000 	str.w	r9, [sp]
 8007a46:	2141      	movs	r1, #65	@ 0x41
 8007a48:	f7fb f82e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    gameover.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007a4c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8007a4e:	4629      	mov	r1, r5
 8007a50:	f00f fe51 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007a54:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8007a56:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 8007a5a:	4630      	mov	r0, r6
 8007a5c:	f00c ffb6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    win.setBitmap(touchgfx::Bitmap(BITMAP_YOUWIN_ID));
 8007a60:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8007a62:	2359      	movs	r3, #89	@ 0x59
 8007a64:	a939      	add	r1, sp, #228	@ 0xe4
 8007a66:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007a6a:	f010 fd25 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    win.setPosition(65, 6, 110, 157);
 8007a6e:	236e      	movs	r3, #110	@ 0x6e
 8007a70:	2206      	movs	r2, #6
 8007a72:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8007a74:	f8cd 9000 	str.w	r9, [sp]
 8007a78:	2141      	movs	r1, #65	@ 0x41
 8007a7a:	f7fb f815 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007a7e:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8007a80:	4629      	mov	r1, r5
 8007a82:	f00f fe38 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007a86:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8007a88:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 8007a8c:	4630      	mov	r0, r6
 8007a8e:	f00c ff9d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007a92:	f04f 0958 	mov.w	r9, #88	@ 0x58
    x2dame_2.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8007a96:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8007a98:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007a9c:	a939      	add	r1, sp, #228	@ 0xe4
 8007a9e:	f010 fd0b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_2.setPosition(199, 61, 32, 37);
 8007aa2:	463b      	mov	r3, r7
 8007aa4:	223d      	movs	r2, #61	@ 0x3d
 8007aa6:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8007aa8:	f8cd 8000 	str.w	r8, [sp]
 8007aac:	21c7      	movs	r1, #199	@ 0xc7
 8007aae:	f7fa fffb 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007ab2:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8007ab4:	4629      	mov	r1, r5
 8007ab6:	f00f fe1e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007aba:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 8007abc:	f884 5929 	strb.w	r5, [r4, #2345]	@ 0x929
 8007ac0:	4630      	mov	r0, r6
 8007ac2:	f00c ff83 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_1.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8007ac6:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8007ac8:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007acc:	a939      	add	r1, sp, #228	@ 0xe4
 8007ace:	f010 fcf3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_1.setPosition(7, 61, 32, 37);
 8007ad2:	463b      	mov	r3, r7
 8007ad4:	223d      	movs	r2, #61	@ 0x3d
 8007ad6:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8007ad8:	f8cd 8000 	str.w	r8, [sp]
 8007adc:	2107      	movs	r1, #7
 8007ade:	f7fa ffe3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007ae2:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8007ae4:	4629      	mov	r1, r5
 8007ae6:	f00f fe06 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007aea:	992f      	ldr	r1, [sp, #188]	@ 0xbc
 8007aec:	f884 5955 	strb.w	r5, [r4, #2389]	@ 0x955
 8007af0:	4630      	mov	r0, r6
 8007af2:	f00c ff6b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007af6:	f04f 092c 	mov.w	r9, #44	@ 0x2c
    healthplus_1.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8007afa:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8007afc:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007b00:	a939      	add	r1, sp, #228	@ 0xe4
 8007b02:	f010 fcd9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_1.setPosition(9, 61, 32, 37);
 8007b06:	463b      	mov	r3, r7
 8007b08:	223d      	movs	r2, #61	@ 0x3d
 8007b0a:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8007b0c:	f8cd 8000 	str.w	r8, [sp]
 8007b10:	2109      	movs	r1, #9
 8007b12:	f7fa ffc9 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007b16:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8007b18:	4629      	mov	r1, r5
 8007b1a:	f00f fdec 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007b1e:	9930      	ldr	r1, [sp, #192]	@ 0xc0
 8007b20:	f884 5981 	strb.w	r5, [r4, #2433]	@ 0x981
 8007b24:	4630      	mov	r0, r6
 8007b26:	f00c ff51 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007b2a:	f04f 0a1e 	mov.w	sl, #30
    chakragain_1.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 8007b2e:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8007b30:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8007b34:	a939      	add	r1, sp, #228	@ 0xe4
 8007b36:	f010 fcbf 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_1.setPosition(9, 61, 32, 37);
 8007b3a:	463b      	mov	r3, r7
 8007b3c:	223d      	movs	r2, #61	@ 0x3d
 8007b3e:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8007b40:	f8cd 8000 	str.w	r8, [sp]
 8007b44:	2109      	movs	r1, #9
 8007b46:	f7fa ffaf 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007b4a:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8007b4c:	4629      	mov	r1, r5
 8007b4e:	f00f fdd2 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007b52:	9931      	ldr	r1, [sp, #196]	@ 0xc4
 8007b54:	f884 59ad 	strb.w	r5, [r4, #2477]	@ 0x9ad
 8007b58:	4630      	mov	r0, r6
 8007b5a:	f00c ff37 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007b5e:	f04f 0b4b 	mov.w	fp, #75	@ 0x4b
    sheild_1.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 8007b62:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8007b64:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 8007b68:	a939      	add	r1, sp, #228	@ 0xe4
 8007b6a:	f010 fca5 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_1.setPosition(8, 59, 32, 37);
 8007b6e:	463b      	mov	r3, r7
 8007b70:	223b      	movs	r2, #59	@ 0x3b
 8007b72:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8007b74:	f8cd 8000 	str.w	r8, [sp]
 8007b78:	2108      	movs	r1, #8
 8007b7a:	f7fa ff95 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007b7e:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8007b80:	4629      	mov	r1, r5
 8007b82:	f00f fdb8 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007b86:	9932      	ldr	r1, [sp, #200]	@ 0xc8
 8007b88:	f884 59d9 	strb.w	r5, [r4, #2521]	@ 0x9d9
 8007b8c:	4630      	mov	r0, r6
 8007b8e:	f00c ff1d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sheild_2.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 8007b92:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8007b94:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 8007b98:	a939      	add	r1, sp, #228	@ 0xe4
 8007b9a:	f010 fc8d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_2.setPosition(199, 58, 32, 37);
 8007b9e:	463b      	mov	r3, r7
 8007ba0:	223a      	movs	r2, #58	@ 0x3a
 8007ba2:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8007ba4:	f8cd 8000 	str.w	r8, [sp]
 8007ba8:	21c7      	movs	r1, #199	@ 0xc7
 8007baa:	f7fa ff7d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007bae:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8007bb0:	4629      	mov	r1, r5
 8007bb2:	f00f fda0 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007bb6:	9933      	ldr	r1, [sp, #204]	@ 0xcc
 8007bb8:	f884 5a05 	strb.w	r5, [r4, #2565]	@ 0xa05
 8007bbc:	4630      	mov	r0, r6
 8007bbe:	f00c ff05 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakragain_2.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 8007bc2:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8007bc4:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8007bc8:	a939      	add	r1, sp, #228	@ 0xe4
 8007bca:	f010 fc75 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_2.setPosition(199, 61, 32, 37);
 8007bce:	463b      	mov	r3, r7
 8007bd0:	223d      	movs	r2, #61	@ 0x3d
 8007bd2:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8007bd4:	f8cd 8000 	str.w	r8, [sp]
 8007bd8:	21c7      	movs	r1, #199	@ 0xc7
 8007bda:	f7fa ff65 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007bde:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8007be0:	4629      	mov	r1, r5
 8007be2:	f00f fd88 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007be6:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 8007be8:	f884 5a31 	strb.w	r5, [r4, #2609]	@ 0xa31
 8007bec:	4630      	mov	r0, r6
 8007bee:	f00c feed 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    healthplus_2.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8007bf2:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8007bf4:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007bf8:	a939      	add	r1, sp, #228	@ 0xe4
 8007bfa:	f010 fc5d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_2.setPosition(199, 61, 32, 37);
 8007bfe:	463b      	mov	r3, r7
 8007c00:	223d      	movs	r2, #61	@ 0x3d
 8007c02:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8007c04:	f8cd 8000 	str.w	r8, [sp]
 8007c08:	21c7      	movs	r1, #199	@ 0xc7
 8007c0a:	f7fa ff4d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007c0e:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8007c10:	4629      	mov	r1, r5
 8007c12:	f00f fd70 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007c16:	4630      	mov	r0, r6
 8007c18:	9935      	ldr	r1, [sp, #212]	@ 0xd4
 8007c1a:	f884 5a5d 	strb.w	r5, [r4, #2653]	@ 0xa5d
 8007c1e:	f00c fed5 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007c22:	4620      	mov	r0, r4
 8007c24:	b03b      	add	sp, #236	@ 0xec
 8007c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c2a:	bf00      	nop
 8007c2c:	ff0066ff 	.word	0xff0066ff

08007c30 <_ZN8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007c30:	4770      	bx	lr

08007c32 <_ZN25RewardFinalScreenViewBaseD1Ev>:
}

RewardFinalScreenViewBase::~RewardFinalScreenViewBase()
{

}
 8007c32:	4770      	bx	lr

08007c34 <_ZN25RewardFinalScreenViewBase11setupScreenEv>:

void RewardFinalScreenViewBase::setupScreen()
{

}
 8007c34:	4770      	bx	lr

08007c36 <_ZN8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007c36:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007c38:	68c2      	ldr	r2, [r0, #12]
 8007c3a:	6844      	ldr	r4, [r0, #4]
 8007c3c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007c3e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007c40:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007c44:	07d2      	lsls	r2, r2, #31
 8007c46:	bf48      	it	mi
 8007c48:	5962      	ldrmi	r2, [r4, r5]
 8007c4a:	689b      	ldr	r3, [r3, #8]
    }
 8007c4c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007c4e:	bf48      	it	mi
 8007c50:	58d3      	ldrmi	r3, [r2, r3]
 8007c52:	4718      	bx	r3

08007c54 <_ZNK8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8007c54:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8007c56:	6840      	ldr	r0, [r0, #4]
 8007c58:	b130      	cbz	r0, 8007c68 <_ZNK8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8007c5a:	689a      	ldr	r2, [r3, #8]
 8007c5c:	b91a      	cbnz	r2, 8007c66 <_ZNK8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8007c5e:	68d8      	ldr	r0, [r3, #12]
 8007c60:	f000 0001 	and.w	r0, r0, #1
 8007c64:	4770      	bx	lr
 8007c66:	2001      	movs	r0, #1
    }
 8007c68:	4770      	bx	lr

08007c6a <_ZN8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007c6a:	b510      	push	{r4, lr}
 8007c6c:	2110      	movs	r1, #16
 8007c6e:	4604      	mov	r4, r0
 8007c70:	f025 fac1 	bl	802d1f6 <_ZdlPvj>
 8007c74:	4620      	mov	r0, r4
 8007c76:	bd10      	pop	{r4, pc}

08007c78 <_ZN25RewardFinalScreenViewBaseD0Ev>:
RewardFinalScreenViewBase::~RewardFinalScreenViewBase()
 8007c78:	b510      	push	{r4, lr}
}
 8007c7a:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
RewardFinalScreenViewBase::~RewardFinalScreenViewBase()
 8007c7e:	4604      	mov	r4, r0
}
 8007c80:	f025 fab9 	bl	802d1f6 <_ZdlPvj>
 8007c84:	4620      	mov	r0, r4
 8007c86:	bd10      	pop	{r4, pc}

08007c88 <_ZN25RewardFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void RewardFinalScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &REWARD)
 8007c88:	30c4      	adds	r0, #196	@ 0xc4
 8007c8a:	4288      	cmp	r0, r1
{
 8007c8c:	b508      	push	{r3, lr}
    if (&src == &REWARD)
 8007c8e:	d105      	bne.n	8007c9c <_ZN25RewardFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~RewardFinalScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007c90:	f013 f820 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //BackHome
        //When REWARD clicked change screen to SakuraFinalScreen
        //Go to SakuraFinalScreen with no screen transition
        application().gotoSakuraFinalScreenScreenNoTransition();
    }
}
 8007c94:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraFinalScreenScreenNoTransition();
 8007c98:	f7fc b864 	b.w	8003d64 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>
}
 8007c9c:	bd08      	pop	{r3, pc}
	...

08007ca0 <_ZN25RewardFinalScreenViewBaseC1Ev>:
RewardFinalScreenViewBase::RewardFinalScreenViewBase() :
 8007ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ca4:	4604      	mov	r4, r0
 8007ca6:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &RewardFinalScreenViewBase::flexButtonCallbackHandler)
 8007ca8:	46a2      	mov	sl, r4
 8007caa:	2500      	movs	r5, #0
 8007cac:	f015 f838 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8007cb0:	4b9a      	ldr	r3, [pc, #616]	@ (8007f1c <_ZN25RewardFinalScreenViewBaseC1Ev+0x27c>)
 8007cb2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8007cb4:	f84a 3b40 	str.w	r3, [sl], #64
 8007cb8:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8007cbc:	4650      	mov	r0, sl
 8007cbe:	f7fa ff07 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8007cc2:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8007cc6:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8007cca:	a907      	add	r1, sp, #28
 8007ccc:	4648      	mov	r0, r9
 8007cce:	f8ad 601c 	strh.w	r6, [sp, #28]
 8007cd2:	f00f fd55 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007cd6:	a907      	add	r1, sp, #28
 8007cd8:	4640      	mov	r0, r8
 8007cda:	f8ad 601c 	strh.w	r6, [sp, #28]
 8007cde:	f00f fd4f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 8007ce2:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8007ce6:	f8a4 30f0 	strh.w	r3, [r4, #240]	@ 0xf0
        touchable = touch;
 8007cea:	f240 1301 	movw	r3, #257	@ 0x101
 8007cee:	f8a4 30e8 	strh.w	r3, [r4, #232]	@ 0xe8
        : T(), up(), down()
 8007cf2:	4b8b      	ldr	r3, [pc, #556]	@ (8007f20 <_ZN25RewardFinalScreenViewBaseC1Ev+0x280>)
 8007cf4:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
        : Box(), borderColor(0), borderSize(0)
 8007cf8:	f104 03f8 	add.w	r3, r4, #248	@ 0xf8
        : x(0), y(0), width(0), height(0)
 8007cfc:	e9c4 5532 	strd	r5, r5, [r4, #200]	@ 0xc8
 8007d00:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
          nextSibling(0),
 8007d04:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
          cachedAbsX(0),
 8007d08:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
 8007d0c:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
 8007d10:	f8c4 50f4 	str.w	r5, [r4, #244]	@ 0xf4
 8007d14:	4618      	mov	r0, r3
 8007d16:	9305      	str	r3, [sp, #20]
 8007d18:	f7fa feda 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8007d1c:	4b81      	ldr	r3, [pc, #516]	@ (8007f24 <_ZN25RewardFinalScreenViewBaseC1Ev+0x284>)
 8007d1e:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
        borderBox.setXY(0, 0);
 8007d22:	462a      	mov	r2, r5
 8007d24:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8007d28:	9805      	ldr	r0, [sp, #20]
        : color(col)
 8007d2a:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 8007d2e:	4629      	mov	r1, r5
        : color(0)
 8007d30:	e9c4 554b 	strd	r5, r5, [r4, #300]	@ 0x12c
 8007d34:	e9c4 554d 	strd	r5, r5, [r4, #308]	@ 0x134
 8007d38:	f8a4 5128 	strh.w	r5, [r4, #296]	@ 0x128
 8007d3c:	f7fa fea7 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8007d40:	9905      	ldr	r1, [sp, #20]
 8007d42:	4638      	mov	r0, r7
 8007d44:	f00c fe42 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007d48:	f504 739e 	add.w	r3, r4, #316	@ 0x13c
 8007d4c:	a907      	add	r1, sp, #28
 8007d4e:	4618      	mov	r0, r3
 8007d50:	9303      	str	r3, [sp, #12]
 8007d52:	f8ad 601c 	strh.w	r6, [sp, #28]
 8007d56:	f00f fd13 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007d5a:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
 8007d5e:	f504 7bca 	add.w	fp, r4, #404	@ 0x194
 8007d62:	a907      	add	r1, sp, #28
 8007d64:	4618      	mov	r0, r3
 8007d66:	9304      	str	r3, [sp, #16]
 8007d68:	f8ad 601c 	strh.w	r6, [sp, #28]
 8007d6c:	f00f fd08 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007d70:	a907      	add	r1, sp, #28
 8007d72:	4658      	mov	r0, fp
 8007d74:	f8ad 601c 	strh.w	r6, [sp, #28]
 8007d78:	f00f fd02 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007d7c:	4b6a      	ldr	r3, [pc, #424]	@ (8007f28 <_ZN25RewardFinalScreenViewBaseC1Ev+0x288>)
 8007d7e:	e9c4 3470 	strd	r3, r4, [r4, #448]	@ 0x1c0
 8007d82:	4b6a      	ldr	r3, [pc, #424]	@ (8007f2c <_ZN25RewardFinalScreenViewBaseC1Ev+0x28c>)
 8007d84:	e9c4 3572 	strd	r3, r5, [r4, #456]	@ 0x1c8
    __background.setPosition(0, 0, 240, 320);
 8007d88:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8007d8c:	462a      	mov	r2, r5
 8007d8e:	9300      	str	r3, [sp, #0]
 8007d90:	4629      	mov	r1, r5
 8007d92:	4650      	mov	r0, sl
 8007d94:	23f0      	movs	r3, #240	@ 0xf0
 8007d96:	f7fa fe87 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d9a:	1d26      	adds	r6, r4, #4
 8007d9c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8007da0:	66a3      	str	r3, [r4, #104]	@ 0x68
 8007da2:	4651      	mov	r1, sl
 8007da4:	4630      	mov	r0, r6
 8007da6:	f00c fe11 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007daa:	2340      	movs	r3, #64	@ 0x40
    background.setBitmap(touchgfx::Bitmap(BITMAP_REWARD3_ID));
 8007dac:	a907      	add	r1, sp, #28
 8007dae:	4648      	mov	r0, r9
 8007db0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007db4:	f010 fb80 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, -6, 240, 334);
 8007db8:	f44f 73a7 	mov.w	r3, #334	@ 0x14e
 8007dbc:	f06f 0205 	mvn.w	r2, #5
 8007dc0:	9300      	str	r3, [sp, #0]
 8007dc2:	4629      	mov	r1, r5
 8007dc4:	23f0      	movs	r3, #240	@ 0xf0
 8007dc6:	4648      	mov	r0, r9
 8007dc8:	f7fa fe6e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007dcc:	4629      	mov	r1, r5
 8007dce:	4648      	mov	r0, r9
 8007dd0:	f00f fc91 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007dd4:	4649      	mov	r1, r9
 8007dd6:	4630      	mov	r0, r6
 8007dd8:	f00c fdf8 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007ddc:	f04f 092d 	mov.w	r9, #45	@ 0x2d
    home.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ID));
 8007de0:	a907      	add	r1, sp, #28
 8007de2:	4640      	mov	r0, r8
 8007de4:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007de8:	f010 fb66 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    home.setPosition(187, 278, 59, 42);
 8007dec:	232a      	movs	r3, #42	@ 0x2a
 8007dee:	f44f 728b 	mov.w	r2, #278	@ 0x116
 8007df2:	9300      	str	r3, [sp, #0]
 8007df4:	4640      	mov	r0, r8
 8007df6:	233b      	movs	r3, #59	@ 0x3b
 8007df8:	21bb      	movs	r1, #187	@ 0xbb
 8007dfa:	f7fa fe55 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    home.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007dfe:	4629      	mov	r1, r5
 8007e00:	4640      	mov	r0, r8
 8007e02:	f00f fc78 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007e06:	4641      	mov	r1, r8
 8007e08:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 8007e0a:	f04f 082f 	mov.w	r8, #47	@ 0x2f
 8007e0e:	f00c fddd 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e12:	462a      	mov	r2, r5
 8007e14:	4629      	mov	r1, r5
 8007e16:	9805      	ldr	r0, [sp, #20]
 8007e18:	f8cd 8000 	str.w	r8, [sp]
 8007e1c:	232c      	movs	r3, #44	@ 0x2c
 8007e1e:	f7fa fe43 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8007e22:	2305      	movs	r3, #5
 8007e24:	f8a4 3128 	strh.w	r3, [r4, #296]	@ 0x128
        up = colorReleased;
 8007e28:	4b41      	ldr	r3, [pc, #260]	@ (8007f30 <_ZN25RewardFinalScreenViewBaseC1Ev+0x290>)
 8007e2a:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
        down = colorPressed;
 8007e2e:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8007e32:	3333      	adds	r3, #51	@ 0x33
 8007e34:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        borderUp = borderColorReleased;
 8007e38:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8007e3c:	3b66      	subs	r3, #102	@ 0x66
 8007e3e:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
        borderDown = borderColorPressed;
 8007e42:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8007e46:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8007e4a:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
        handlePressedUpdated();
 8007e4e:	4638      	mov	r0, r7
 8007e50:	f8d4 a0c4 	ldr.w	sl, [r4, #196]	@ 0xc4
 8007e54:	f7fa fd80 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8007e58:	230a      	movs	r3, #10
 8007e5a:	f884 30f1 	strb.w	r3, [r4, #241]	@ 0xf1
        handleAlphaUpdated();
 8007e5e:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 8007e62:	4638      	mov	r0, r7
 8007e64:	4798      	blx	r3
    REWARD.setAction(flexButtonCallback);
 8007e66:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
        action = &callback;
 8007e6a:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
    REWARD.setPosition(194, 273, 44, 47);
 8007e6e:	f240 1211 	movw	r2, #273	@ 0x111
 8007e72:	232c      	movs	r3, #44	@ 0x2c
 8007e74:	4638      	mov	r0, r7
 8007e76:	f8cd 8000 	str.w	r8, [sp]
 8007e7a:	21c2      	movs	r1, #194	@ 0xc2
 8007e7c:	f7fa fe14 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007e80:	4639      	mov	r1, r7
 8007e82:	4630      	mov	r0, r6
 8007e84:	f00c fda2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sword.setBitmap(touchgfx::Bitmap(BITMAP_SWORD_ID));
 8007e88:	9803      	ldr	r0, [sp, #12]
 8007e8a:	2354      	movs	r3, #84	@ 0x54
 8007e8c:	a907      	add	r1, sp, #28
 8007e8e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007e92:	f010 fb11 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sword.setPosition(25, 30, 61, 78);
 8007e96:	234e      	movs	r3, #78	@ 0x4e
 8007e98:	221e      	movs	r2, #30
 8007e9a:	9803      	ldr	r0, [sp, #12]
 8007e9c:	9300      	str	r3, [sp, #0]
 8007e9e:	2119      	movs	r1, #25
 8007ea0:	233d      	movs	r3, #61	@ 0x3d
 8007ea2:	f7fa fe01 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sword.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007ea6:	9803      	ldr	r0, [sp, #12]
 8007ea8:	4629      	mov	r1, r5
 8007eaa:	f00f fc24 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007eae:	9903      	ldr	r1, [sp, #12]
 8007eb0:	4630      	mov	r0, r6
 8007eb2:	f00c fd8b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dragontrophy.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_CUP_ID));
 8007eb6:	9804      	ldr	r0, [sp, #16]
 8007eb8:	2322      	movs	r3, #34	@ 0x22
 8007eba:	a907      	add	r1, sp, #28
 8007ebc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007ec0:	f010 fafa 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    dragontrophy.setPosition(82, 45, 82, 63);
 8007ec4:	233f      	movs	r3, #63	@ 0x3f
 8007ec6:	9300      	str	r3, [sp, #0]
 8007ec8:	2352      	movs	r3, #82	@ 0x52
 8007eca:	464a      	mov	r2, r9
 8007ecc:	4619      	mov	r1, r3
 8007ece:	9804      	ldr	r0, [sp, #16]
 8007ed0:	f7fa fdea 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    dragontrophy.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007ed4:	9804      	ldr	r0, [sp, #16]
 8007ed6:	4629      	mov	r1, r5
 8007ed8:	f00f fc0d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007edc:	9904      	ldr	r1, [sp, #16]
 8007ede:	4630      	mov	r0, r6
 8007ee0:	f00c fd74 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007ee4:	232b      	movs	r3, #43	@ 0x2b
    dragontrophy_1.setBitmap(touchgfx::Bitmap(BITMAP_HEAD_ID));
 8007ee6:	a907      	add	r1, sp, #28
 8007ee8:	4658      	mov	r0, fp
 8007eea:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007eee:	f010 fae3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    dragontrophy_1.setPosition(164, 30, 59, 85);
 8007ef2:	2355      	movs	r3, #85	@ 0x55
 8007ef4:	221e      	movs	r2, #30
 8007ef6:	9300      	str	r3, [sp, #0]
 8007ef8:	4658      	mov	r0, fp
 8007efa:	233b      	movs	r3, #59	@ 0x3b
 8007efc:	21a4      	movs	r1, #164	@ 0xa4
 8007efe:	f7fa fdd3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    dragontrophy_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007f02:	4629      	mov	r1, r5
 8007f04:	4658      	mov	r0, fp
 8007f06:	f00f fbf6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007f0a:	4630      	mov	r0, r6
 8007f0c:	4659      	mov	r1, fp
 8007f0e:	f00c fd5d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007f12:	4620      	mov	r0, r4
 8007f14:	b009      	add	sp, #36	@ 0x24
 8007f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f1a:	bf00      	nop
 8007f1c:	080314e0 	.word	0x080314e0
 8007f20:	080309ec 	.word	0x080309ec
 8007f24:	080323dc 	.word	0x080323dc
 8007f28:	080314c8 	.word	0x080314c8
 8007f2c:	08007c89 	.word	0x08007c89
 8007f30:	ff006699 	.word	0xff006699

08007f34 <_ZN8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f34:	4770      	bx	lr

08007f36 <_ZN20RewardScreenViewBaseD1Ev>:
}

RewardScreenViewBase::~RewardScreenViewBase()
{

}
 8007f36:	4770      	bx	lr

08007f38 <_ZN20RewardScreenViewBase11setupScreenEv>:

void RewardScreenViewBase::setupScreen()
{

}
 8007f38:	4770      	bx	lr

08007f3a <_ZN8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007f3a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f3c:	68c2      	ldr	r2, [r0, #12]
 8007f3e:	6844      	ldr	r4, [r0, #4]
 8007f40:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007f42:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007f44:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007f48:	07d2      	lsls	r2, r2, #31
 8007f4a:	bf48      	it	mi
 8007f4c:	5962      	ldrmi	r2, [r4, r5]
 8007f4e:	689b      	ldr	r3, [r3, #8]
    }
 8007f50:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f52:	bf48      	it	mi
 8007f54:	58d3      	ldrmi	r3, [r2, r3]
 8007f56:	4718      	bx	r3

08007f58 <_ZNK8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8007f58:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8007f5a:	6840      	ldr	r0, [r0, #4]
 8007f5c:	b130      	cbz	r0, 8007f6c <_ZNK8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8007f5e:	689a      	ldr	r2, [r3, #8]
 8007f60:	b91a      	cbnz	r2, 8007f6a <_ZNK8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8007f62:	68d8      	ldr	r0, [r3, #12]
 8007f64:	f000 0001 	and.w	r0, r0, #1
 8007f68:	4770      	bx	lr
 8007f6a:	2001      	movs	r0, #1
    }
 8007f6c:	4770      	bx	lr

08007f6e <_ZN8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f6e:	b510      	push	{r4, lr}
 8007f70:	2110      	movs	r1, #16
 8007f72:	4604      	mov	r4, r0
 8007f74:	f025 f93f 	bl	802d1f6 <_ZdlPvj>
 8007f78:	4620      	mov	r0, r4
 8007f7a:	bd10      	pop	{r4, pc}

08007f7c <_ZN20RewardScreenViewBaseD0Ev>:
RewardScreenViewBase::~RewardScreenViewBase()
 8007f7c:	b510      	push	{r4, lr}
}
 8007f7e:	f44f 71bc 	mov.w	r1, #376	@ 0x178
RewardScreenViewBase::~RewardScreenViewBase()
 8007f82:	4604      	mov	r4, r0
}
 8007f84:	f025 f937 	bl	802d1f6 <_ZdlPvj>
 8007f88:	4620      	mov	r0, r4
 8007f8a:	bd10      	pop	{r4, pc}

08007f8c <_ZN20RewardScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void RewardScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &REWARD)
 8007f8c:	30c4      	adds	r0, #196	@ 0xc4
 8007f8e:	4288      	cmp	r0, r1
{
 8007f90:	b508      	push	{r3, lr}
    if (&src == &REWARD)
 8007f92:	d105      	bne.n	8007fa0 <_ZN20RewardScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~RewardScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007f94:	f012 fe9e 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //BackHome
        //When REWARD clicked change screen to SakuraMainScreen
        //Go to SakuraMainScreen with no screen transition
        application().gotoSakuraMainScreenScreenNoTransition();
    }
}
 8007f98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraMainScreenScreenNoTransition();
 8007f9c:	f7fb bea2 	b.w	8003ce4 <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv>
}
 8007fa0:	bd08      	pop	{r3, pc}
	...

08007fa4 <_ZN20RewardScreenViewBaseC1Ev>:
RewardScreenViewBase::RewardScreenViewBase() :
 8007fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fa8:	4604      	mov	r4, r0
 8007faa:	b087      	sub	sp, #28
    flexButtonCallback(this, &RewardScreenViewBase::flexButtonCallbackHandler)
 8007fac:	46a3      	mov	fp, r4
 8007fae:	2500      	movs	r5, #0
 8007fb0:	f014 feb6 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8007fb4:	4b79      	ldr	r3, [pc, #484]	@ (800819c <_ZN20RewardScreenViewBaseC1Ev+0x1f8>)
 8007fb6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8007fb8:	f84b 3b40 	str.w	r3, [fp], #64
 8007fbc:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8007fc0:	4658      	mov	r0, fp
 8007fc2:	f7fa fd85 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8007fc6:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8007fca:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8007fce:	a905      	add	r1, sp, #20
 8007fd0:	4650      	mov	r0, sl
 8007fd2:	f8ad 6014 	strh.w	r6, [sp, #20]
 8007fd6:	f00f fbd3 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007fda:	a905      	add	r1, sp, #20
 8007fdc:	4648      	mov	r0, r9
 8007fde:	f8ad 6014 	strh.w	r6, [sp, #20]
 8007fe2:	f00f fbcd 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 8007fe6:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8007fea:	f8a4 30f0 	strh.w	r3, [r4, #240]	@ 0xf0
        touchable = touch;
 8007fee:	f240 1301 	movw	r3, #257	@ 0x101
 8007ff2:	f8a4 30e8 	strh.w	r3, [r4, #232]	@ 0xe8
        : T(), up(), down()
 8007ff6:	4b6a      	ldr	r3, [pc, #424]	@ (80081a0 <_ZN20RewardScreenViewBaseC1Ev+0x1fc>)
 8007ff8:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
        : Box(), borderColor(0), borderSize(0)
 8007ffc:	f104 03f8 	add.w	r3, r4, #248	@ 0xf8
        : x(0), y(0), width(0), height(0)
 8008000:	e9c4 5532 	strd	r5, r5, [r4, #200]	@ 0xc8
 8008004:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
          nextSibling(0),
 8008008:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
          cachedAbsX(0),
 800800c:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
 8008010:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
 8008014:	f8c4 50f4 	str.w	r5, [r4, #244]	@ 0xf4
 8008018:	4618      	mov	r0, r3
 800801a:	9303      	str	r3, [sp, #12]
 800801c:	f7fa fd58 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8008020:	4b60      	ldr	r3, [pc, #384]	@ (80081a4 <_ZN20RewardScreenViewBaseC1Ev+0x200>)
 8008022:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
 8008026:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
        borderBox.setXY(0, 0);
 800802a:	462a      	mov	r2, r5
 800802c:	9803      	ldr	r0, [sp, #12]
        : color(col)
 800802e:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 8008032:	4629      	mov	r1, r5
        : color(0)
 8008034:	e9c4 554b 	strd	r5, r5, [r4, #300]	@ 0x12c
 8008038:	e9c4 554d 	strd	r5, r5, [r4, #308]	@ 0x134
 800803c:	f8a4 5128 	strh.w	r5, [r4, #296]	@ 0x128
 8008040:	f7fa fd25 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 8008044:	f504 779e 	add.w	r7, r4, #316	@ 0x13c
        T::add(borderBox);
 8008048:	9903      	ldr	r1, [sp, #12]
 800804a:	4640      	mov	r0, r8
 800804c:	f00c fcbe 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008050:	a905      	add	r1, sp, #20
 8008052:	4638      	mov	r0, r7
 8008054:	f8ad 6014 	strh.w	r6, [sp, #20]
 8008058:	f00f fb92 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 800805c:	4b52      	ldr	r3, [pc, #328]	@ (80081a8 <_ZN20RewardScreenViewBaseC1Ev+0x204>)
 800805e:	e9c4 345a 	strd	r3, r4, [r4, #360]	@ 0x168
 8008062:	4b52      	ldr	r3, [pc, #328]	@ (80081ac <_ZN20RewardScreenViewBaseC1Ev+0x208>)
 8008064:	e9c4 355c 	strd	r3, r5, [r4, #368]	@ 0x170
    __background.setPosition(0, 0, 240, 320);
 8008068:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800806c:	462a      	mov	r2, r5
 800806e:	9300      	str	r3, [sp, #0]
 8008070:	4629      	mov	r1, r5
 8008072:	4658      	mov	r0, fp
 8008074:	23f0      	movs	r3, #240	@ 0xf0
 8008076:	f7fa fd17 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800807a:	1d26      	adds	r6, r4, #4
 800807c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8008080:	66a3      	str	r3, [r4, #104]	@ 0x68
 8008082:	4659      	mov	r1, fp
 8008084:	4630      	mov	r0, r6
 8008086:	f00c fca1 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800808a:	233e      	movs	r3, #62	@ 0x3e
    background.setBitmap(touchgfx::Bitmap(BITMAP_REWARD_ID));
 800808c:	a905      	add	r1, sp, #20
 800808e:	4650      	mov	r0, sl
 8008090:	f8ad 3014 	strh.w	r3, [sp, #20]
 8008094:	f010 fa10 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, -6, 240, 334);
 8008098:	f44f 73a7 	mov.w	r3, #334	@ 0x14e
 800809c:	f06f 0205 	mvn.w	r2, #5
 80080a0:	9300      	str	r3, [sp, #0]
 80080a2:	4629      	mov	r1, r5
 80080a4:	23f0      	movs	r3, #240	@ 0xf0
 80080a6:	4650      	mov	r0, sl
 80080a8:	f7fa fcfe 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80080ac:	4629      	mov	r1, r5
 80080ae:	4650      	mov	r0, sl
 80080b0:	f00f fb21 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80080b4:	4651      	mov	r1, sl
 80080b6:	4630      	mov	r0, r6
 80080b8:	f00c fc88 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80080bc:	232d      	movs	r3, #45	@ 0x2d
    home.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ID));
 80080be:	a905      	add	r1, sp, #20
 80080c0:	4648      	mov	r0, r9
 80080c2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80080c6:	f010 f9f7 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    home.setPosition(187, 278, 59, 42);
 80080ca:	232a      	movs	r3, #42	@ 0x2a
 80080cc:	f44f 728b 	mov.w	r2, #278	@ 0x116
 80080d0:	9300      	str	r3, [sp, #0]
 80080d2:	4648      	mov	r0, r9
 80080d4:	233b      	movs	r3, #59	@ 0x3b
 80080d6:	21bb      	movs	r1, #187	@ 0xbb
 80080d8:	f7fa fce6 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    home.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80080dc:	4629      	mov	r1, r5
 80080de:	4648      	mov	r0, r9
 80080e0:	f00f fb09 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80080e4:	4649      	mov	r1, r9
 80080e6:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 80080e8:	f04f 092f 	mov.w	r9, #47	@ 0x2f
 80080ec:	f00c fc6e 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80080f0:	462a      	mov	r2, r5
 80080f2:	4629      	mov	r1, r5
 80080f4:	9803      	ldr	r0, [sp, #12]
 80080f6:	f8cd 9000 	str.w	r9, [sp]
 80080fa:	232c      	movs	r3, #44	@ 0x2c
 80080fc:	f7fa fcd4 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8008100:	2305      	movs	r3, #5
 8008102:	f8a4 3128 	strh.w	r3, [r4, #296]	@ 0x128
        up = colorReleased;
 8008106:	4b2a      	ldr	r3, [pc, #168]	@ (80081b0 <_ZN20RewardScreenViewBaseC1Ev+0x20c>)
 8008108:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
        down = colorPressed;
 800810c:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8008110:	3333      	adds	r3, #51	@ 0x33
 8008112:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        borderUp = borderColorReleased;
 8008116:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 800811a:	3b66      	subs	r3, #102	@ 0x66
 800811c:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
        borderDown = borderColorPressed;
 8008120:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8008124:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8008128:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
        handlePressedUpdated();
 800812c:	4640      	mov	r0, r8
 800812e:	f8d4 a0c4 	ldr.w	sl, [r4, #196]	@ 0xc4
 8008132:	f7fa fc11 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8008136:	230a      	movs	r3, #10
 8008138:	f884 30f1 	strb.w	r3, [r4, #241]	@ 0xf1
        handleAlphaUpdated();
 800813c:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 8008140:	4640      	mov	r0, r8
 8008142:	4798      	blx	r3
    REWARD.setAction(flexButtonCallback);
 8008144:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
        action = &callback;
 8008148:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
    REWARD.setPosition(194, 273, 44, 47);
 800814c:	f240 1211 	movw	r2, #273	@ 0x111
 8008150:	232c      	movs	r3, #44	@ 0x2c
 8008152:	4640      	mov	r0, r8
 8008154:	f8cd 9000 	str.w	r9, [sp]
 8008158:	21c2      	movs	r1, #194	@ 0xc2
 800815a:	f7fa fca5 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800815e:	4641      	mov	r1, r8
 8008160:	4630      	mov	r0, r6
 8008162:	f00c fc33 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008166:	2354      	movs	r3, #84	@ 0x54
    sword.setBitmap(touchgfx::Bitmap(BITMAP_SWORD_ID));
 8008168:	a905      	add	r1, sp, #20
 800816a:	4638      	mov	r0, r7
 800816c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8008170:	f010 f9a2 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sword.setPosition(25, 30, 61, 78);
 8008174:	234e      	movs	r3, #78	@ 0x4e
 8008176:	221e      	movs	r2, #30
 8008178:	9300      	str	r3, [sp, #0]
 800817a:	4638      	mov	r0, r7
 800817c:	233d      	movs	r3, #61	@ 0x3d
 800817e:	2119      	movs	r1, #25
 8008180:	f7fa fc92 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sword.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008184:	4629      	mov	r1, r5
 8008186:	4638      	mov	r0, r7
 8008188:	f00f fab5 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800818c:	4630      	mov	r0, r6
 800818e:	4639      	mov	r1, r7
 8008190:	f00c fc1c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008194:	4620      	mov	r0, r4
 8008196:	b007      	add	sp, #28
 8008198:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800819c:	0803152c 	.word	0x0803152c
 80081a0:	080309ec 	.word	0x080309ec
 80081a4:	080323dc 	.word	0x080323dc
 80081a8:	08031514 	.word	0x08031514
 80081ac:	08007f8d 	.word	0x08007f8d
 80081b0:	ff006699 	.word	0xff006699

080081b4 <_ZN8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081b4:	4770      	bx	lr

080081b6 <_ZN25SakuraFinalScreenViewBaseD1Ev>:
}

SakuraFinalScreenViewBase::~SakuraFinalScreenViewBase()
{

}
 80081b6:	4770      	bx	lr

080081b8 <_ZN25SakuraFinalScreenViewBase11setupScreenEv>:

void SakuraFinalScreenViewBase::setupScreen()
{

}
 80081b8:	4770      	bx	lr

080081ba <_ZN8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80081ba:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081bc:	68c2      	ldr	r2, [r0, #12]
 80081be:	6844      	ldr	r4, [r0, #4]
 80081c0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80081c2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80081c4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80081c8:	07d2      	lsls	r2, r2, #31
 80081ca:	bf48      	it	mi
 80081cc:	5962      	ldrmi	r2, [r4, r5]
 80081ce:	689b      	ldr	r3, [r3, #8]
    }
 80081d0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081d2:	bf48      	it	mi
 80081d4:	58d3      	ldrmi	r3, [r2, r3]
 80081d6:	4718      	bx	r3

080081d8 <_ZNK8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80081d8:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80081da:	6840      	ldr	r0, [r0, #4]
 80081dc:	b130      	cbz	r0, 80081ec <_ZNK8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80081de:	689a      	ldr	r2, [r3, #8]
 80081e0:	b91a      	cbnz	r2, 80081ea <_ZNK8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80081e2:	68d8      	ldr	r0, [r3, #12]
 80081e4:	f000 0001 	and.w	r0, r0, #1
 80081e8:	4770      	bx	lr
 80081ea:	2001      	movs	r0, #1
    }
 80081ec:	4770      	bx	lr

080081ee <_ZN8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081ee:	b510      	push	{r4, lr}
 80081f0:	2110      	movs	r1, #16
 80081f2:	4604      	mov	r4, r0
 80081f4:	f024 ffff 	bl	802d1f6 <_ZdlPvj>
 80081f8:	4620      	mov	r0, r4
 80081fa:	bd10      	pop	{r4, pc}

080081fc <_ZN25SakuraFinalScreenViewBaseD0Ev>:
SakuraFinalScreenViewBase::~SakuraFinalScreenViewBase()
 80081fc:	b510      	push	{r4, lr}
}
 80081fe:	f44f 7112 	mov.w	r1, #584	@ 0x248
SakuraFinalScreenViewBase::~SakuraFinalScreenViewBase()
 8008202:	4604      	mov	r4, r0
}
 8008204:	f024 fff7 	bl	802d1f6 <_ZdlPvj>
 8008208:	4620      	mov	r0, r4
 800820a:	bd10      	pop	{r4, pc}

0800820c <_ZN25SakuraFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SakuraFinalScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800820c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &reward1)
 800820e:	f500 73a4 	add.w	r3, r0, #328	@ 0x148
 8008212:	4299      	cmp	r1, r3
{
 8008214:	4604      	mov	r4, r0
 8008216:	460d      	mov	r5, r1
    if (&src == &reward1)
 8008218:	d103      	bne.n	8008222 <_ZN25SakuraFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~SakuraFinalScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800821a:	f012 fd5b 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //REWARD
        //When reward1 clicked change screen to RewardFinalScreen
        //Go to RewardFinalScreen with no screen transition
        application().gotoRewardFinalScreenScreenNoTransition();
 800821e:	f7fb fdb1 	bl	8003d84 <_ZN23FrontendApplicationBase39gotoRewardFinalScreenScreenNoTransitionEv>
    }
    if (&src == &SELECT)
 8008222:	f504 74e0 	add.w	r4, r4, #448	@ 0x1c0
 8008226:	42a5      	cmp	r5, r4
 8008228:	d105      	bne.n	8008236 <_ZN25SakuraFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 800822a:	f012 fd53 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //SELECT
        //When SELECT clicked change screen to Character_Final
        //Go to Character_Final with no screen transition
        application().gotoCharacter_FinalScreenNoTransition();
    }
}
 800822e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCharacter_FinalScreenNoTransition();
 8008232:	f7fb bdb7 	b.w	8003da4 <_ZN23FrontendApplicationBase37gotoCharacter_FinalScreenNoTransitionEv>
}
 8008236:	bd38      	pop	{r3, r4, r5, pc}

08008238 <_ZN25SakuraFinalScreenViewBaseC1Ev>:
SakuraFinalScreenViewBase::SakuraFinalScreenViewBase() :
 8008238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800823c:	4604      	mov	r4, r0
 800823e:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &SakuraFinalScreenViewBase::flexButtonCallbackHandler)
 8008240:	46a2      	mov	sl, r4
 8008242:	2600      	movs	r6, #0
 8008244:	f014 fd6c 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8008248:	4b98      	ldr	r3, [pc, #608]	@ (80084ac <_ZN25SakuraFinalScreenViewBaseC1Ev+0x274>)
 800824a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 800824c:	f84a 3b40 	str.w	r3, [sl], #64
 8008250:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8008254:	4650      	mov	r0, sl
 8008256:	f7fa fc3b 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 800825a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800825e:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 8008262:	a907      	add	r1, sp, #28
 8008264:	4648      	mov	r0, r9
 8008266:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 800826a:	f8ad b01c 	strh.w	fp, [sp, #28]
 800826e:	f00f fa87 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008272:	a907      	add	r1, sp, #28
 8008274:	4640      	mov	r0, r8
 8008276:	f8ad b01c 	strh.w	fp, [sp, #28]
 800827a:	f00f fa81 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800827e:	a907      	add	r1, sp, #28
 8008280:	4638      	mov	r0, r7
 8008282:	f8ad b01c 	strh.w	fp, [sp, #28]
 8008286:	f00f fa7b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800828a:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800828e:	f504 758e 	add.w	r5, r4, #284	@ 0x11c
 8008292:	a907      	add	r1, sp, #28
 8008294:	4618      	mov	r0, r3
 8008296:	9303      	str	r3, [sp, #12]
 8008298:	f8ad b01c 	strh.w	fp, [sp, #28]
 800829c:	f00f fa70 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80082a0:	a907      	add	r1, sp, #28
 80082a2:	4628      	mov	r0, r5
 80082a4:	f8ad b01c 	strh.w	fp, [sp, #28]
 80082a8:	f00f fa6a 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80082ac:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 80082b0:	4618      	mov	r0, r3
 80082b2:	9304      	str	r3, [sp, #16]
 80082b4:	f7fa fc28 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80082b8:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 80082bc:	4618      	mov	r0, r3
 80082be:	9305      	str	r3, [sp, #20]
 80082c0:	f7fa fc22 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80082c4:	4b7a      	ldr	r3, [pc, #488]	@ (80084b0 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x278>)
 80082c6:	e9c4 348e 	strd	r3, r4, [r4, #568]	@ 0x238
 80082ca:	4b7a      	ldr	r3, [pc, #488]	@ (80084b4 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x27c>)
 80082cc:	e9c4 3690 	strd	r3, r6, [r4, #576]	@ 0x240
    __background.setPosition(0, 0, 240, 320);
 80082d0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80082d4:	4632      	mov	r2, r6
 80082d6:	9300      	str	r3, [sp, #0]
 80082d8:	4631      	mov	r1, r6
 80082da:	4650      	mov	r0, sl
 80082dc:	23f0      	movs	r3, #240	@ 0xf0
 80082de:	f7fa fbe3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80082e2:	f104 0b04 	add.w	fp, r4, #4
 80082e6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80082ea:	66a3      	str	r3, [r4, #104]	@ 0x68
 80082ec:	4651      	mov	r1, sl
 80082ee:	4658      	mov	r0, fp
 80082f0:	f00c fb6c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80082f4:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 80082f6:	a907      	add	r1, sp, #28
 80082f8:	4648      	mov	r0, r9
 80082fa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80082fe:	f010 f8db 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8008302:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008306:	4632      	mov	r2, r6
 8008308:	9300      	str	r3, [sp, #0]
 800830a:	4631      	mov	r1, r6
 800830c:	23f0      	movs	r3, #240	@ 0xf0
 800830e:	4648      	mov	r0, r9
 8008310:	f7fa fbca 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008314:	4631      	mov	r1, r6
 8008316:	4648      	mov	r0, r9
 8008318:	f00f f9ed 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800831c:	4649      	mov	r1, r9
 800831e:	4658      	mov	r0, fp
 8008320:	f00c fb54 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008324:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 8008326:	a907      	add	r1, sp, #28
 8008328:	4640      	mov	r0, r8
 800832a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800832e:	f010 f8c3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 8008332:	2370      	movs	r3, #112	@ 0x70
 8008334:	220e      	movs	r2, #14
 8008336:	9300      	str	r3, [sp, #0]
 8008338:	4640      	mov	r0, r8
 800833a:	239e      	movs	r3, #158	@ 0x9e
 800833c:	2129      	movs	r1, #41	@ 0x29
 800833e:	f7fa fbb3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008342:	4631      	mov	r1, r6
 8008344:	4640      	mov	r0, r8
 8008346:	f00f f9d6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800834a:	4641      	mov	r1, r8
 800834c:	4658      	mov	r0, fp
 800834e:	f00c fb3d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008352:	2349      	movs	r3, #73	@ 0x49
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA_ID));
 8008354:	a907      	add	r1, sp, #28
 8008356:	4638      	mov	r0, r7
 8008358:	f8ad 301c 	strh.w	r3, [sp, #28]
 800835c:	f010 f8ac 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(56, 145, 129, 64);
 8008360:	2340      	movs	r3, #64	@ 0x40
 8008362:	2291      	movs	r2, #145	@ 0x91
 8008364:	9300      	str	r3, [sp, #0]
 8008366:	4638      	mov	r0, r7
 8008368:	2381      	movs	r3, #129	@ 0x81
 800836a:	2138      	movs	r1, #56	@ 0x38
 800836c:	f7fa fb9c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008370:	4631      	mov	r1, r6
 8008372:	4638      	mov	r0, r7
 8008374:	f00f f9bf 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008378:	4639      	mov	r1, r7
 800837a:	4658      	mov	r0, fp
 800837c:	f00c fb26 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    play_img.setPosition(57, 219, 124, 65);
 8008380:	f04f 0841 	mov.w	r8, #65	@ 0x41
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8008384:	9803      	ldr	r0, [sp, #12]
        down = colorPressed;
 8008386:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 80084c4 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x28c>
 800838a:	233c      	movs	r3, #60	@ 0x3c
 800838c:	a907      	add	r1, sp, #28
 800838e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8008392:	f010 f891 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 8008396:	22db      	movs	r2, #219	@ 0xdb
 8008398:	237c      	movs	r3, #124	@ 0x7c
 800839a:	9803      	ldr	r0, [sp, #12]
 800839c:	f8cd 8000 	str.w	r8, [sp]
 80083a0:	2139      	movs	r1, #57	@ 0x39
 80083a2:	f7fa fb81 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80083a6:	9803      	ldr	r0, [sp, #12]
 80083a8:	4631      	mov	r1, r6
 80083aa:	f00f f9a4 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80083ae:	9903      	ldr	r1, [sp, #12]
 80083b0:	4658      	mov	r0, fp
 80083b2:	f00c fb0b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80083b6:	2357      	movs	r3, #87	@ 0x57
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 80083b8:	a907      	add	r1, sp, #28
 80083ba:	4628      	mov	r0, r5
 80083bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80083c0:	f010 f87a 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 80083c4:	2324      	movs	r3, #36	@ 0x24
 80083c6:	f44f 728c 	mov.w	r2, #280	@ 0x118
 80083ca:	9300      	str	r3, [sp, #0]
 80083cc:	4628      	mov	r0, r5
 80083ce:	2337      	movs	r3, #55	@ 0x37
 80083d0:	21b8      	movs	r1, #184	@ 0xb8
 80083d2:	f7fa fb69 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80083d6:	4631      	mov	r1, r6
 80083d8:	4628      	mov	r0, r5
 80083da:	f00f f98c 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 80083de:	2728      	movs	r7, #40	@ 0x28
 80083e0:	4629      	mov	r1, r5
 80083e2:	4658      	mov	r0, fp
 80083e4:	f00c faf2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80083e8:	9700      	str	r7, [sp, #0]
 80083ea:	4632      	mov	r2, r6
 80083ec:	4631      	mov	r1, r6
 80083ee:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 80083f2:	233a      	movs	r3, #58	@ 0x3a
 80083f4:	f7fa fb58 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 80083f8:	4a2f      	ldr	r2, [pc, #188]	@ (80084b8 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x280>)
 80083fa:	4930      	ldr	r1, [pc, #192]	@ (80084bc <_ZN25SakuraFinalScreenViewBaseC1Ev+0x284>)
        down = colorPressed;
 80083fc:	4b30      	ldr	r3, [pc, #192]	@ (80084c0 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x288>)
        handlePressedUpdated();
 80083fe:	9804      	ldr	r0, [sp, #16]
 8008400:	f8d4 5148 	ldr.w	r5, [r4, #328]	@ 0x148
 8008404:	f04f 0905 	mov.w	r9, #5
        borderDown = borderColorPressed;
 8008408:	e9c4 216e 	strd	r2, r1, [r4, #440]	@ 0x1b8
        down = colorPressed;
 800840c:	e9c4 a36c 	strd	sl, r3, [r4, #432]	@ 0x1b0
 8008410:	f8a4 91ac 	strh.w	r9, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 8008414:	f7fa faa0 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8008418:	f04f 0006 	mov.w	r0, #6
 800841c:	f884 0175 	strb.w	r0, [r4, #373]	@ 0x175
        handleAlphaUpdated();
 8008420:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8008424:	9804      	ldr	r0, [sp, #16]
    reward1.setAction(flexButtonCallback);
 8008426:	f504 750e 	add.w	r5, r4, #568	@ 0x238
 800842a:	4798      	blx	r3
    reward1.setPosition(181, 280, 58, 40);
 800842c:	9804      	ldr	r0, [sp, #16]
        action = &callback;
 800842e:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8008432:	233a      	movs	r3, #58	@ 0x3a
 8008434:	9700      	str	r7, [sp, #0]
 8008436:	f44f 728c 	mov.w	r2, #280	@ 0x118
 800843a:	21b5      	movs	r1, #181	@ 0xb5
 800843c:	f7fa fb34 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8008440:	2732      	movs	r7, #50	@ 0x32
 8008442:	9904      	ldr	r1, [sp, #16]
 8008444:	4658      	mov	r0, fp
 8008446:	f00c fac1 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800844a:	4632      	mov	r2, r6
 800844c:	4631      	mov	r1, r6
 800844e:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 8008452:	9700      	str	r7, [sp, #0]
 8008454:	236e      	movs	r3, #110	@ 0x6e
 8008456:	f7fa fb27 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderUp = borderColorReleased;
 800845a:	4a17      	ldr	r2, [pc, #92]	@ (80084b8 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x280>)
 800845c:	4b18      	ldr	r3, [pc, #96]	@ (80084c0 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x288>)
        borderDown = borderColorPressed;
 800845e:	4917      	ldr	r1, [pc, #92]	@ (80084bc <_ZN25SakuraFinalScreenViewBaseC1Ev+0x284>)
 8008460:	f8c4 1234 	str.w	r1, [r4, #564]	@ 0x234
        borderUp = borderColorReleased;
 8008464:	e9c4 328b 	strd	r3, r2, [r4, #556]	@ 0x22c
        handlePressedUpdated();
 8008468:	9805      	ldr	r0, [sp, #20]
 800846a:	f8a4 9224 	strh.w	r9, [r4, #548]	@ 0x224
        up = colorReleased;
 800846e:	f8c4 a228 	str.w	sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 8008472:	f8d4 91c0 	ldr.w	r9, [r4, #448]	@ 0x1c0
 8008476:	f7fa fa6f 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 800847a:	f04f 0006 	mov.w	r0, #6
 800847e:	f884 01ed 	strb.w	r0, [r4, #493]	@ 0x1ed
        handleAlphaUpdated();
 8008482:	f8d9 3090 	ldr.w	r3, [r9, #144]	@ 0x90
 8008486:	9805      	ldr	r0, [sp, #20]
 8008488:	4798      	blx	r3
    SELECT.setPosition(65, 152, 110, 50);
 800848a:	9805      	ldr	r0, [sp, #20]
        action = &callback;
 800848c:	f8c4 51f0 	str.w	r5, [r4, #496]	@ 0x1f0
 8008490:	236e      	movs	r3, #110	@ 0x6e
 8008492:	2298      	movs	r2, #152	@ 0x98
 8008494:	4641      	mov	r1, r8
 8008496:	9700      	str	r7, [sp, #0]
 8008498:	f7fa fb06 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800849c:	4658      	mov	r0, fp
 800849e:	9905      	ldr	r1, [sp, #20]
 80084a0:	f00c fa94 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80084a4:	4620      	mov	r0, r4
 80084a6:	b009      	add	sp, #36	@ 0x24
 80084a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084ac:	08031578 	.word	0x08031578
 80084b0:	08031560 	.word	0x08031560
 80084b4:	0800820d 	.word	0x0800820d
 80084b8:	ff003366 	.word	0xff003366
 80084bc:	ff336699 	.word	0xff336699
 80084c0:	ff0099cc 	.word	0xff0099cc
 80084c4:	ff006699 	.word	0xff006699

080084c8 <_ZN24SakuraGameScreenViewBaseD1Ev>:
}

SakuraGameScreenViewBase::~SakuraGameScreenViewBase()
{

}
 80084c8:	4770      	bx	lr

080084ca <_ZN24SakuraGameScreenViewBase11setupScreenEv>:

void SakuraGameScreenViewBase::setupScreen()
{

}
 80084ca:	4770      	bx	lr

080084cc <_ZN24SakuraGameScreenViewBaseD0Ev>:
SakuraGameScreenViewBase::~SakuraGameScreenViewBase()
 80084cc:	b510      	push	{r4, lr}
}
 80084ce:	f640 2164 	movw	r1, #2660	@ 0xa64
SakuraGameScreenViewBase::~SakuraGameScreenViewBase()
 80084d2:	4604      	mov	r4, r0
}
 80084d4:	f024 fe8f 	bl	802d1f6 <_ZdlPvj>
 80084d8:	4620      	mov	r0, r4
 80084da:	bd10      	pop	{r4, pc}

080084dc <_ZN24SakuraGameScreenViewBaseC1Ev>:
SakuraGameScreenViewBase::SakuraGameScreenViewBase()
 80084dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80084e0:	4604      	mov	r4, r0
 80084e2:	b0bb      	sub	sp, #236	@ 0xec
 80084e4:	46a2      	mov	sl, r4
 80084e6:	2500      	movs	r5, #0
 80084e8:	f014 fc1a 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 80084ec:	4bd0      	ldr	r3, [pc, #832]	@ (8008830 <_ZN24SakuraGameScreenViewBaseC1Ev+0x354>)
 80084ee:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80084f0:	f84a 3b40 	str.w	r3, [sl], #64
 80084f4:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 80084f8:	4650      	mov	r0, sl
 80084fa:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80084fe:	f7fa fae7 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8008502:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8008506:	a939      	add	r1, sp, #228	@ 0xe4
 8008508:	4648      	mov	r0, r9
 800850a:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 800850e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008512:	f00f f935 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008516:	a939      	add	r1, sp, #228	@ 0xe4
 8008518:	4640      	mov	r0, r8
 800851a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800851e:	f00f f92f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008522:	a939      	add	r1, sp, #228	@ 0xe4
 8008524:	4638      	mov	r0, r7
 8008526:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800852a:	f00f f929 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800852e:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8008532:	a939      	add	r1, sp, #228	@ 0xe4
 8008534:	4618      	mov	r0, r3
 8008536:	9302      	str	r3, [sp, #8]
 8008538:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800853c:	f00f f920 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008540:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8008544:	a939      	add	r1, sp, #228	@ 0xe4
 8008546:	4618      	mov	r0, r3
 8008548:	9303      	str	r3, [sp, #12]
 800854a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800854e:	f00f f917 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008552:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8008556:	a939      	add	r1, sp, #228	@ 0xe4
 8008558:	4618      	mov	r0, r3
 800855a:	9304      	str	r3, [sp, #16]
 800855c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008560:	f00f f90e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008564:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8008568:	a939      	add	r1, sp, #228	@ 0xe4
 800856a:	4618      	mov	r0, r3
 800856c:	9305      	str	r3, [sp, #20]
 800856e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008572:	f00f f905 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008576:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 800857a:	a939      	add	r1, sp, #228	@ 0xe4
 800857c:	4618      	mov	r0, r3
 800857e:	9306      	str	r3, [sp, #24]
 8008580:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008584:	f00f f8fc 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008588:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 800858c:	a939      	add	r1, sp, #228	@ 0xe4
 800858e:	4618      	mov	r0, r3
 8008590:	9307      	str	r3, [sp, #28]
 8008592:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008596:	f00f f8f3 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800859a:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 800859e:	a939      	add	r1, sp, #228	@ 0xe4
 80085a0:	4618      	mov	r0, r3
 80085a2:	9308      	str	r3, [sp, #32]
 80085a4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80085a8:	f00f f8ea 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80085ac:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 80085b0:	a939      	add	r1, sp, #228	@ 0xe4
 80085b2:	4618      	mov	r0, r3
 80085b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80085b6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80085ba:	f00f f8e1 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80085be:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 80085c2:	a939      	add	r1, sp, #228	@ 0xe4
 80085c4:	4618      	mov	r0, r3
 80085c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80085c8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80085cc:	f00f f8d8 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80085d0:	f504 731f 	add.w	r3, r4, #636	@ 0x27c
 80085d4:	a939      	add	r1, sp, #228	@ 0xe4
 80085d6:	4618      	mov	r0, r3
 80085d8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80085da:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80085de:	f00f f8cf 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80085e2:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 80085e6:	a939      	add	r1, sp, #228	@ 0xe4
 80085e8:	4618      	mov	r0, r3
 80085ea:	930c      	str	r3, [sp, #48]	@ 0x30
 80085ec:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80085f0:	f00f f8c6 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80085f4:	f504 7335 	add.w	r3, r4, #724	@ 0x2d4
 80085f8:	a939      	add	r1, sp, #228	@ 0xe4
 80085fa:	4618      	mov	r0, r3
 80085fc:	930d      	str	r3, [sp, #52]	@ 0x34
 80085fe:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008602:	f00f f8bd 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008606:	f504 7340 	add.w	r3, r4, #768	@ 0x300
 800860a:	a939      	add	r1, sp, #228	@ 0xe4
 800860c:	4618      	mov	r0, r3
 800860e:	930e      	str	r3, [sp, #56]	@ 0x38
 8008610:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008614:	f00f f8b4 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008618:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 800861c:	a939      	add	r1, sp, #228	@ 0xe4
 800861e:	4618      	mov	r0, r3
 8008620:	930f      	str	r3, [sp, #60]	@ 0x3c
 8008622:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008626:	f00f f8ab 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800862a:	f504 7356 	add.w	r3, r4, #856	@ 0x358
 800862e:	a939      	add	r1, sp, #228	@ 0xe4
 8008630:	4618      	mov	r0, r3
 8008632:	9310      	str	r3, [sp, #64]	@ 0x40
 8008634:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008638:	f00f f8a2 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800863c:	f504 7361 	add.w	r3, r4, #900	@ 0x384
 8008640:	a939      	add	r1, sp, #228	@ 0xe4
 8008642:	4618      	mov	r0, r3
 8008644:	9311      	str	r3, [sp, #68]	@ 0x44
 8008646:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800864a:	f00f f899 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800864e:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 8008652:	a939      	add	r1, sp, #228	@ 0xe4
 8008654:	4618      	mov	r0, r3
 8008656:	9312      	str	r3, [sp, #72]	@ 0x48
 8008658:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800865c:	f00f f890 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008660:	f504 7377 	add.w	r3, r4, #988	@ 0x3dc
 8008664:	a939      	add	r1, sp, #228	@ 0xe4
 8008666:	4618      	mov	r0, r3
 8008668:	9313      	str	r3, [sp, #76]	@ 0x4c
 800866a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800866e:	f00f f887 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008672:	f504 6381 	add.w	r3, r4, #1032	@ 0x408
 8008676:	a939      	add	r1, sp, #228	@ 0xe4
 8008678:	4618      	mov	r0, r3
 800867a:	9314      	str	r3, [sp, #80]	@ 0x50
 800867c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008680:	f00f f87e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008684:	f204 4334 	addw	r3, r4, #1076	@ 0x434
 8008688:	f504 6b8c 	add.w	fp, r4, #1120	@ 0x460
 800868c:	a939      	add	r1, sp, #228	@ 0xe4
 800868e:	4618      	mov	r0, r3
 8008690:	9315      	str	r3, [sp, #84]	@ 0x54
 8008692:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008696:	f00f f873 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800869a:	a939      	add	r1, sp, #228	@ 0xe4
 800869c:	4658      	mov	r0, fp
 800869e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80086a2:	f00f f86d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80086a6:	f204 438c 	addw	r3, r4, #1164	@ 0x48c
 80086aa:	a939      	add	r1, sp, #228	@ 0xe4
 80086ac:	4618      	mov	r0, r3
 80086ae:	9316      	str	r3, [sp, #88]	@ 0x58
 80086b0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80086b4:	f00f f864 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80086b8:	f504 6397 	add.w	r3, r4, #1208	@ 0x4b8
 80086bc:	a939      	add	r1, sp, #228	@ 0xe4
 80086be:	4618      	mov	r0, r3
 80086c0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80086c2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80086c6:	f00f f85b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80086ca:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 80086ce:	a939      	add	r1, sp, #228	@ 0xe4
 80086d0:	4618      	mov	r0, r3
 80086d2:	9318      	str	r3, [sp, #96]	@ 0x60
 80086d4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80086d8:	f00f f852 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80086dc:	f504 63a2 	add.w	r3, r4, #1296	@ 0x510
 80086e0:	a939      	add	r1, sp, #228	@ 0xe4
 80086e2:	4618      	mov	r0, r3
 80086e4:	9319      	str	r3, [sp, #100]	@ 0x64
 80086e6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80086ea:	f00f f849 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80086ee:	f204 533c 	addw	r3, r4, #1340	@ 0x53c
 80086f2:	a939      	add	r1, sp, #228	@ 0xe4
 80086f4:	4618      	mov	r0, r3
 80086f6:	931a      	str	r3, [sp, #104]	@ 0x68
 80086f8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80086fc:	f00f f840 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008700:	f504 63ad 	add.w	r3, r4, #1384	@ 0x568
 8008704:	a939      	add	r1, sp, #228	@ 0xe4
 8008706:	4618      	mov	r0, r3
 8008708:	931b      	str	r3, [sp, #108]	@ 0x6c
 800870a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800870e:	f00f f837 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008712:	f204 5394 	addw	r3, r4, #1428	@ 0x594
 8008716:	a939      	add	r1, sp, #228	@ 0xe4
 8008718:	4618      	mov	r0, r3
 800871a:	931c      	str	r3, [sp, #112]	@ 0x70
 800871c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008720:	f00f f82e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008724:	f504 63b8 	add.w	r3, r4, #1472	@ 0x5c0
 8008728:	a939      	add	r1, sp, #228	@ 0xe4
 800872a:	4618      	mov	r0, r3
 800872c:	931d      	str	r3, [sp, #116]	@ 0x74
 800872e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008732:	f00f f825 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008736:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
 800873a:	a939      	add	r1, sp, #228	@ 0xe4
 800873c:	4618      	mov	r0, r3
 800873e:	931e      	str	r3, [sp, #120]	@ 0x78
 8008740:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008744:	f00f f81c 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008748:	f504 63c3 	add.w	r3, r4, #1560	@ 0x618
 800874c:	a939      	add	r1, sp, #228	@ 0xe4
 800874e:	4618      	mov	r0, r3
 8008750:	931f      	str	r3, [sp, #124]	@ 0x7c
 8008752:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008756:	f00f f813 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800875a:	f204 6344 	addw	r3, r4, #1604	@ 0x644
 800875e:	a939      	add	r1, sp, #228	@ 0xe4
 8008760:	4618      	mov	r0, r3
 8008762:	9320      	str	r3, [sp, #128]	@ 0x80
 8008764:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008768:	f00f f80a 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800876c:	f504 63ce 	add.w	r3, r4, #1648	@ 0x670
 8008770:	a939      	add	r1, sp, #228	@ 0xe4
 8008772:	4618      	mov	r0, r3
 8008774:	9321      	str	r3, [sp, #132]	@ 0x84
 8008776:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800877a:	f00f f801 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800877e:	f204 639c 	addw	r3, r4, #1692	@ 0x69c
 8008782:	a939      	add	r1, sp, #228	@ 0xe4
 8008784:	4618      	mov	r0, r3
 8008786:	9322      	str	r3, [sp, #136]	@ 0x88
 8008788:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800878c:	f00e fff8 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008790:	f504 63d9 	add.w	r3, r4, #1736	@ 0x6c8
 8008794:	a939      	add	r1, sp, #228	@ 0xe4
 8008796:	4618      	mov	r0, r3
 8008798:	9323      	str	r3, [sp, #140]	@ 0x8c
 800879a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800879e:	f00e ffef 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80087a2:	f204 63f4 	addw	r3, r4, #1780	@ 0x6f4
 80087a6:	a939      	add	r1, sp, #228	@ 0xe4
 80087a8:	4618      	mov	r0, r3
 80087aa:	9324      	str	r3, [sp, #144]	@ 0x90
 80087ac:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80087b0:	f00e ffe6 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80087b4:	f504 63e4 	add.w	r3, r4, #1824	@ 0x720
 80087b8:	a939      	add	r1, sp, #228	@ 0xe4
 80087ba:	4618      	mov	r0, r3
 80087bc:	9325      	str	r3, [sp, #148]	@ 0x94
 80087be:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80087c2:	f00e ffdd 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80087c6:	f204 734c 	addw	r3, r4, #1868	@ 0x74c
 80087ca:	a939      	add	r1, sp, #228	@ 0xe4
 80087cc:	4618      	mov	r0, r3
 80087ce:	9326      	str	r3, [sp, #152]	@ 0x98
 80087d0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80087d4:	f00e ffd4 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80087d8:	f504 63ef 	add.w	r3, r4, #1912	@ 0x778
 80087dc:	a939      	add	r1, sp, #228	@ 0xe4
 80087de:	4618      	mov	r0, r3
 80087e0:	9327      	str	r3, [sp, #156]	@ 0x9c
 80087e2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80087e6:	f00e ffcb 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80087ea:	f204 73a4 	addw	r3, r4, #1956	@ 0x7a4
 80087ee:	a939      	add	r1, sp, #228	@ 0xe4
 80087f0:	4618      	mov	r0, r3
 80087f2:	9328      	str	r3, [sp, #160]	@ 0xa0
 80087f4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80087f8:	f00e ffc2 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80087fc:	f504 63fa 	add.w	r3, r4, #2000	@ 0x7d0
 8008800:	a939      	add	r1, sp, #228	@ 0xe4
 8008802:	4618      	mov	r0, r3
 8008804:	9329      	str	r3, [sp, #164]	@ 0xa4
 8008806:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800880a:	f00e ffb9 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800880e:	f204 73fc 	addw	r3, r4, #2044	@ 0x7fc
 8008812:	a939      	add	r1, sp, #228	@ 0xe4
 8008814:	4618      	mov	r0, r3
 8008816:	932a      	str	r3, [sp, #168]	@ 0xa8
 8008818:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800881c:	f00e ffb0 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008820:	f604 0328 	addw	r3, r4, #2088	@ 0x828
 8008824:	a939      	add	r1, sp, #228	@ 0xe4
 8008826:	4618      	mov	r0, r3
 8008828:	932b      	str	r3, [sp, #172]	@ 0xac
 800882a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800882e:	e001      	b.n	8008834 <_ZN24SakuraGameScreenViewBaseC1Ev+0x358>
 8008830:	080315ac 	.word	0x080315ac
 8008834:	f00e ffa4 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008838:	f604 0354 	addw	r3, r4, #2132	@ 0x854
 800883c:	4618      	mov	r0, r3
 800883e:	9336      	str	r3, [sp, #216]	@ 0xd8
 8008840:	f7fa f946 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8008844:	f504 6308 	add.w	r3, r4, #2176	@ 0x880
 8008848:	4618      	mov	r0, r3
 800884a:	9337      	str	r3, [sp, #220]	@ 0xdc
 800884c:	f7fa f940 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8008850:	f604 03ac 	addw	r3, r4, #2220	@ 0x8ac
 8008854:	a939      	add	r1, sp, #228	@ 0xe4
 8008856:	4618      	mov	r0, r3
 8008858:	932c      	str	r3, [sp, #176]	@ 0xb0
 800885a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800885e:	f00e ff8f 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008862:	f604 03d8 	addw	r3, r4, #2264	@ 0x8d8
 8008866:	a939      	add	r1, sp, #228	@ 0xe4
 8008868:	4618      	mov	r0, r3
 800886a:	932d      	str	r3, [sp, #180]	@ 0xb4
 800886c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008870:	f00e ff86 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008874:	f604 1304 	addw	r3, r4, #2308	@ 0x904
 8008878:	a939      	add	r1, sp, #228	@ 0xe4
 800887a:	4618      	mov	r0, r3
 800887c:	932e      	str	r3, [sp, #184]	@ 0xb8
 800887e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008882:	f00e ff7d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008886:	f504 6313 	add.w	r3, r4, #2352	@ 0x930
 800888a:	a939      	add	r1, sp, #228	@ 0xe4
 800888c:	4618      	mov	r0, r3
 800888e:	932f      	str	r3, [sp, #188]	@ 0xbc
 8008890:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008894:	f00e ff74 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008898:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 800889c:	a939      	add	r1, sp, #228	@ 0xe4
 800889e:	4618      	mov	r0, r3
 80088a0:	9330      	str	r3, [sp, #192]	@ 0xc0
 80088a2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088a6:	f00e ff6b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088aa:	f604 1388 	addw	r3, r4, #2440	@ 0x988
 80088ae:	a939      	add	r1, sp, #228	@ 0xe4
 80088b0:	4618      	mov	r0, r3
 80088b2:	9331      	str	r3, [sp, #196]	@ 0xc4
 80088b4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088b8:	f00e ff62 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088bc:	f604 13b4 	addw	r3, r4, #2484	@ 0x9b4
 80088c0:	a939      	add	r1, sp, #228	@ 0xe4
 80088c2:	4618      	mov	r0, r3
 80088c4:	9332      	str	r3, [sp, #200]	@ 0xc8
 80088c6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088ca:	f00e ff59 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088ce:	f504 631e 	add.w	r3, r4, #2528	@ 0x9e0
 80088d2:	a939      	add	r1, sp, #228	@ 0xe4
 80088d4:	4618      	mov	r0, r3
 80088d6:	9333      	str	r3, [sp, #204]	@ 0xcc
 80088d8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088dc:	f00e ff50 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088e0:	f604 230c 	addw	r3, r4, #2572	@ 0xa0c
 80088e4:	a939      	add	r1, sp, #228	@ 0xe4
 80088e6:	4618      	mov	r0, r3
 80088e8:	9334      	str	r3, [sp, #208]	@ 0xd0
 80088ea:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088ee:	f00e ff47 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088f2:	f604 2338 	addw	r3, r4, #2616	@ 0xa38
 80088f6:	a939      	add	r1, sp, #228	@ 0xe4
 80088f8:	4618      	mov	r0, r3
 80088fa:	9335      	str	r3, [sp, #212]	@ 0xd4
 80088fc:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008900:	f00e ff3e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 8008904:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008908:	462a      	mov	r2, r5
 800890a:	9300      	str	r3, [sp, #0]
 800890c:	4629      	mov	r1, r5
 800890e:	4650      	mov	r0, sl
 8008910:	23f0      	movs	r3, #240	@ 0xf0
 8008912:	1d26      	adds	r6, r4, #4
 8008914:	f7fa f8c8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008918:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800891c:	66a3      	str	r3, [r4, #104]	@ 0x68
 800891e:	4651      	mov	r1, sl
 8008920:	4630      	mov	r0, r6
 8008922:	f00c f853 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008926:	f04f 0352 	mov.w	r3, #82	@ 0x52
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_STAGE1_ID));
 800892a:	a939      	add	r1, sp, #228	@ 0xe4
 800892c:	4648      	mov	r0, r9
 800892e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008932:	f00f fdc1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 8008936:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800893a:	462a      	mov	r2, r5
 800893c:	9300      	str	r3, [sp, #0]
 800893e:	4629      	mov	r1, r5
 8008940:	23f0      	movs	r3, #240	@ 0xf0
 8008942:	4648      	mov	r0, r9
 8008944:	f7fa f8b0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008948:	4629      	mov	r1, r5
 800894a:	4648      	mov	r0, r9
 800894c:	f00e fed3 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008950:	4649      	mov	r1, r9
 8008952:	4630      	mov	r0, r6
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 8008954:	f04f 091d 	mov.w	r9, #29
 8008958:	f00c f838 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800895c:	2301      	movs	r3, #1
    BITMAP_HP_100_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR1_ID));
 800895e:	a939      	add	r1, sp, #228	@ 0xe4
 8008960:	4640      	mov	r0, r8
 8008962:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008966:	f00f fda7 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 800896a:	2206      	movs	r2, #6
 800896c:	2369      	movs	r3, #105	@ 0x69
 800896e:	f8cd 9000 	str.w	r9, [sp]
 8008972:	4640      	mov	r0, r8
 8008974:	2105      	movs	r1, #5
 8008976:	f7fa f897 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800897a:	4629      	mov	r1, r5
 800897c:	4640      	mov	r0, r8
 800897e:	f00e feba 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008982:	4641      	mov	r1, r8
 8008984:	4630      	mov	r0, r6
 8008986:	f00c f821 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800898a:	2303      	movs	r3, #3
    BITMAP_HP_10_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR11_ID));
 800898c:	a939      	add	r1, sp, #228	@ 0xe4
 800898e:	4638      	mov	r0, r7
 8008990:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008994:	f00f fd90 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID.setPosition(5, 6, 105, 29);
 8008998:	2206      	movs	r2, #6
 800899a:	2369      	movs	r3, #105	@ 0x69
 800899c:	f8cd 9000 	str.w	r9, [sp]
 80089a0:	4638      	mov	r0, r7
 80089a2:	2105      	movs	r1, #5
 80089a4:	f7fa f880 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80089a8:	4629      	mov	r1, r5
 80089aa:	4638      	mov	r0, r7
 80089ac:	f00e fea3 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80089b0:	4639      	mov	r1, r7
 80089b2:	4630      	mov	r0, r6
        visible = vis;
 80089b4:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 80089b8:	f00c f808 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR12_ID));
 80089bc:	9802      	ldr	r0, [sp, #8]
 80089be:	2304      	movs	r3, #4
 80089c0:	a939      	add	r1, sp, #228	@ 0xe4
 80089c2:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80089c6:	f00f fd77 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID.setPosition(5, 6, 105, 29);
 80089ca:	2206      	movs	r2, #6
 80089cc:	2369      	movs	r3, #105	@ 0x69
 80089ce:	9802      	ldr	r0, [sp, #8]
 80089d0:	f8cd 9000 	str.w	r9, [sp]
 80089d4:	2105      	movs	r1, #5
 80089d6:	f7fa f867 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80089da:	9802      	ldr	r0, [sp, #8]
 80089dc:	4629      	mov	r1, r5
 80089de:	f00e fe8a 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80089e2:	9902      	ldr	r1, [sp, #8]
 80089e4:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 80089e8:	4630      	mov	r0, r6
 80089ea:	f00b ffef 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR10_ID));
 80089ee:	9803      	ldr	r0, [sp, #12]
 80089f0:	2302      	movs	r3, #2
 80089f2:	a939      	add	r1, sp, #228	@ 0xe4
 80089f4:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80089f8:	f00f fd5e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID.setPosition(5, 6, 105, 29);
 80089fc:	2206      	movs	r2, #6
 80089fe:	2369      	movs	r3, #105	@ 0x69
 8008a00:	9803      	ldr	r0, [sp, #12]
 8008a02:	f8cd 9000 	str.w	r9, [sp]
 8008a06:	2105      	movs	r1, #5
 8008a08:	f7fa f84e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008a0c:	9803      	ldr	r0, [sp, #12]
 8008a0e:	4629      	mov	r1, r5
 8008a10:	f00e fe71 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008a14:	9903      	ldr	r1, [sp, #12]
 8008a16:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 8008a1a:	4630      	mov	r0, r6
 8008a1c:	f00b ffd6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR9_ID));
 8008a20:	9804      	ldr	r0, [sp, #16]
 8008a22:	230c      	movs	r3, #12
 8008a24:	a939      	add	r1, sp, #228	@ 0xe4
 8008a26:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008a2a:	f00f fd45 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID.setPosition(5, 6, 105, 29);
 8008a2e:	2206      	movs	r2, #6
 8008a30:	2369      	movs	r3, #105	@ 0x69
 8008a32:	9804      	ldr	r0, [sp, #16]
 8008a34:	f8cd 9000 	str.w	r9, [sp]
 8008a38:	2105      	movs	r1, #5
 8008a3a:	f7fa f835 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008a3e:	9804      	ldr	r0, [sp, #16]
 8008a40:	4629      	mov	r1, r5
 8008a42:	f00e fe58 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008a46:	9904      	ldr	r1, [sp, #16]
 8008a48:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 8008a4c:	4630      	mov	r0, r6
 8008a4e:	f00b ffbd 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR8_ID));
 8008a52:	9805      	ldr	r0, [sp, #20]
 8008a54:	230b      	movs	r3, #11
 8008a56:	a939      	add	r1, sp, #228	@ 0xe4
 8008a58:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008a5c:	f00f fd2c 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID.setPosition(5, 6, 105, 29);
 8008a60:	2206      	movs	r2, #6
 8008a62:	2369      	movs	r3, #105	@ 0x69
 8008a64:	9805      	ldr	r0, [sp, #20]
 8008a66:	f8cd 9000 	str.w	r9, [sp]
 8008a6a:	2105      	movs	r1, #5
 8008a6c:	f7fa f81c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008a70:	9805      	ldr	r0, [sp, #20]
 8008a72:	4629      	mov	r1, r5
 8008a74:	f00e fe3f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008a78:	9905      	ldr	r1, [sp, #20]
 8008a7a:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 8008a7e:	4630      	mov	r0, r6
 8008a80:	f00b ffa4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR7_ID));
 8008a84:	9806      	ldr	r0, [sp, #24]
 8008a86:	230a      	movs	r3, #10
 8008a88:	a939      	add	r1, sp, #228	@ 0xe4
 8008a8a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008a8e:	f00f fd13 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID.setPosition(5, 6, 105, 29);
 8008a92:	2206      	movs	r2, #6
 8008a94:	2369      	movs	r3, #105	@ 0x69
 8008a96:	9806      	ldr	r0, [sp, #24]
 8008a98:	f8cd 9000 	str.w	r9, [sp]
 8008a9c:	2105      	movs	r1, #5
 8008a9e:	f7fa f803 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008aa2:	9806      	ldr	r0, [sp, #24]
 8008aa4:	4629      	mov	r1, r5
 8008aa6:	f00e fe26 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008aaa:	9906      	ldr	r1, [sp, #24]
 8008aac:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8008ab0:	4630      	mov	r0, r6
 8008ab2:	f00b ff8b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR6_ID));
 8008ab6:	9807      	ldr	r0, [sp, #28]
 8008ab8:	2309      	movs	r3, #9
 8008aba:	a939      	add	r1, sp, #228	@ 0xe4
 8008abc:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008ac0:	f00f fcfa 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID.setPosition(5, 6, 105, 29);
 8008ac4:	2206      	movs	r2, #6
 8008ac6:	2369      	movs	r3, #105	@ 0x69
 8008ac8:	9807      	ldr	r0, [sp, #28]
 8008aca:	f8cd 9000 	str.w	r9, [sp]
 8008ace:	2105      	movs	r1, #5
 8008ad0:	f7f9 ffea 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008ad4:	9807      	ldr	r0, [sp, #28]
 8008ad6:	4629      	mov	r1, r5
 8008ad8:	f00e fe0d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008adc:	9907      	ldr	r1, [sp, #28]
 8008ade:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 8008ae2:	4630      	mov	r0, r6
 8008ae4:	f00b ff72 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR5_ID));
 8008ae8:	9808      	ldr	r0, [sp, #32]
 8008aea:	2308      	movs	r3, #8
 8008aec:	a939      	add	r1, sp, #228	@ 0xe4
 8008aee:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008af2:	f00f fce1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID.setPosition(5, 6, 105, 29);
 8008af6:	2206      	movs	r2, #6
 8008af8:	2369      	movs	r3, #105	@ 0x69
 8008afa:	9808      	ldr	r0, [sp, #32]
 8008afc:	f8cd 9000 	str.w	r9, [sp]
 8008b00:	2105      	movs	r1, #5
 8008b02:	f7f9 ffd1 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008b06:	9808      	ldr	r0, [sp, #32]
 8008b08:	4629      	mov	r1, r5
 8008b0a:	f00e fdf4 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008b0e:	9908      	ldr	r1, [sp, #32]
 8008b10:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 8008b14:	4630      	mov	r0, r6
 8008b16:	f00b ff59 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR4_ID));
 8008b1a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008b1c:	2307      	movs	r3, #7
 8008b1e:	a939      	add	r1, sp, #228	@ 0xe4
 8008b20:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008b24:	f00f fcc8 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID.setPosition(5, 6, 105, 29);
 8008b28:	2369      	movs	r3, #105	@ 0x69
 8008b2a:	2206      	movs	r2, #6
 8008b2c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008b2e:	f8cd 9000 	str.w	r9, [sp]
 8008b32:	2105      	movs	r1, #5
 8008b34:	f7f9 ffb8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008b38:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008b3a:	4629      	mov	r1, r5
 8008b3c:	f00e fddb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008b40:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8008b42:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 8008b46:	4630      	mov	r0, r6
 8008b48:	2706      	movs	r7, #6
 8008b4a:	f00b ff3f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR3_ID));
 8008b4e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8008b50:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 8008b54:	a939      	add	r1, sp, #228	@ 0xe4
 8008b56:	f00f fcaf 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID.setPosition(5, 6, 105, 29);
 8008b5a:	463a      	mov	r2, r7
 8008b5c:	2369      	movs	r3, #105	@ 0x69
 8008b5e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8008b60:	f8cd 9000 	str.w	r9, [sp]
 8008b64:	2105      	movs	r1, #5
 8008b66:	f7f9 ff9f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008b6a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8008b6c:	4629      	mov	r1, r5
 8008b6e:	f00e fdc2 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008b72:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8008b74:	f884 5275 	strb.w	r5, [r4, #629]	@ 0x275
 8008b78:	4630      	mov	r0, r6
 8008b7a:	f00b ff27 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 8008b7e:	f04f 0a43 	mov.w	sl, #67	@ 0x43
    BITMAP_HP_130_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUBOSS_ID));
 8008b82:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8008b84:	f04f 0330 	mov.w	r3, #48	@ 0x30
 8008b88:	a939      	add	r1, sp, #228	@ 0xe4
 8008b8a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008b8e:	f00f fc93 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 8008b92:	f06f 0208 	mvn.w	r2, #8
 8008b96:	2366      	movs	r3, #102	@ 0x66
 8008b98:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8008b9a:	f8cd a000 	str.w	sl, [sp]
 8008b9e:	2181      	movs	r1, #129	@ 0x81
 8008ba0:	f7f9 ff82 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_130_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008ba4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8008ba6:	4629      	mov	r1, r5
 8008ba8:	f00e fda5 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008bac:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8008bae:	4630      	mov	r0, r6
 8008bb0:	f00b ff0c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_120_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_2_ID));
 8008bb4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8008bb6:	2331      	movs	r3, #49	@ 0x31
 8008bb8:	a939      	add	r1, sp, #228	@ 0xe4
 8008bba:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008bbe:	f00f fc7b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_120_ID_1.setPosition(129, -9, 102, 67);
 8008bc2:	f06f 0208 	mvn.w	r2, #8
 8008bc6:	2366      	movs	r3, #102	@ 0x66
 8008bc8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8008bca:	f8cd a000 	str.w	sl, [sp]
 8008bce:	2181      	movs	r1, #129	@ 0x81
 8008bd0:	f7f9 ff6a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_120_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008bd4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8008bd6:	4629      	mov	r1, r5
 8008bd8:	f00e fd8d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008bdc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8008bde:	f884 52cd 	strb.w	r5, [r4, #717]	@ 0x2cd
 8008be2:	4630      	mov	r0, r6
 8008be4:	f00b fef2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_110_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_3_ID));
 8008be8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008bea:	2332      	movs	r3, #50	@ 0x32
 8008bec:	a939      	add	r1, sp, #228	@ 0xe4
 8008bee:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008bf2:	f00f fc61 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_110_ID_1.setPosition(129, -9, 102, 67);
 8008bf6:	f06f 0208 	mvn.w	r2, #8
 8008bfa:	2366      	movs	r3, #102	@ 0x66
 8008bfc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008bfe:	f8cd a000 	str.w	sl, [sp]
 8008c02:	2181      	movs	r1, #129	@ 0x81
 8008c04:	f7f9 ff50 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_110_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008c08:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008c0a:	4629      	mov	r1, r5
 8008c0c:	f00e fd73 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008c10:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8008c12:	f884 52f9 	strb.w	r5, [r4, #761]	@ 0x2f9
 8008c16:	4630      	mov	r0, r6
 8008c18:	f00b fed8 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_100_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BAR2_ID));
 8008c1c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008c1e:	2305      	movs	r3, #5
 8008c20:	a939      	add	r1, sp, #228	@ 0xe4
 8008c22:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008c26:	f00f fc47 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID_1.setPosition(126, 6, 105, 29);
 8008c2a:	463a      	mov	r2, r7
 8008c2c:	2369      	movs	r3, #105	@ 0x69
 8008c2e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008c30:	f8cd 9000 	str.w	r9, [sp]
 8008c34:	217e      	movs	r1, #126	@ 0x7e
 8008c36:	f7f9 ff37 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008c3a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008c3c:	4629      	mov	r1, r5
 8008c3e:	f00e fd5a 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008c42:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8008c44:	f884 5325 	strb.w	r5, [r4, #805]	@ 0x325
 8008c48:	4630      	mov	r0, r6
 8008c4a:	f00b febf 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH9_ID));
 8008c4e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8008c50:	2316      	movs	r3, #22
 8008c52:	a939      	add	r1, sp, #228	@ 0xe4
 8008c54:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008c58:	f00f fc2e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID_1.setPosition(126, 6, 105, 29);
 8008c5c:	463a      	mov	r2, r7
 8008c5e:	2369      	movs	r3, #105	@ 0x69
 8008c60:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8008c62:	f8cd 9000 	str.w	r9, [sp]
 8008c66:	217e      	movs	r1, #126	@ 0x7e
 8008c68:	f7f9 ff1e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008c6c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8008c6e:	4629      	mov	r1, r5
 8008c70:	f00e fd41 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008c74:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8008c76:	f884 5351 	strb.w	r5, [r4, #849]	@ 0x351
 8008c7a:	4630      	mov	r0, r6
 8008c7c:	f00b fea6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH8_ID));
 8008c80:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008c82:	2315      	movs	r3, #21
 8008c84:	a939      	add	r1, sp, #228	@ 0xe4
 8008c86:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008c8a:	f00f fc15 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID_1.setPosition(126, 6, 105, 29);
 8008c8e:	463a      	mov	r2, r7
 8008c90:	2369      	movs	r3, #105	@ 0x69
 8008c92:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008c94:	f8cd 9000 	str.w	r9, [sp]
 8008c98:	217e      	movs	r1, #126	@ 0x7e
 8008c9a:	f7f9 ff05 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008c9e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008ca0:	4629      	mov	r1, r5
 8008ca2:	f00e fd28 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008ca6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8008ca8:	f884 537d 	strb.w	r5, [r4, #893]	@ 0x37d
 8008cac:	4630      	mov	r0, r6
 8008cae:	f00b fe8d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH7_ID));
 8008cb2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8008cb4:	2314      	movs	r3, #20
 8008cb6:	a939      	add	r1, sp, #228	@ 0xe4
 8008cb8:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008cbc:	f00f fbfc 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID_1.setPosition(126, 6, 105, 29);
 8008cc0:	463a      	mov	r2, r7
 8008cc2:	2369      	movs	r3, #105	@ 0x69
 8008cc4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8008cc6:	f8cd 9000 	str.w	r9, [sp]
 8008cca:	217e      	movs	r1, #126	@ 0x7e
 8008ccc:	f7f9 feec 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008cd0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8008cd2:	4629      	mov	r1, r5
 8008cd4:	f00e fd0f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008cd8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8008cda:	f884 53a9 	strb.w	r5, [r4, #937]	@ 0x3a9
 8008cde:	4630      	mov	r0, r6
 8008ce0:	f00b fe74 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH6_ID));
 8008ce4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8008ce6:	2313      	movs	r3, #19
 8008ce8:	a939      	add	r1, sp, #228	@ 0xe4
 8008cea:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008cee:	f00f fbe3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID_1.setPosition(126, 6, 105, 29);
 8008cf2:	463a      	mov	r2, r7
 8008cf4:	2369      	movs	r3, #105	@ 0x69
 8008cf6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8008cf8:	f8cd 9000 	str.w	r9, [sp]
 8008cfc:	217e      	movs	r1, #126	@ 0x7e
 8008cfe:	f7f9 fed3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008d02:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8008d04:	4629      	mov	r1, r5
 8008d06:	f00e fcf6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008d0a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8008d0c:	f884 53d5 	strb.w	r5, [r4, #981]	@ 0x3d5
 8008d10:	4630      	mov	r0, r6
 8008d12:	f00b fe5b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH5_ID));
 8008d16:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8008d18:	f04f 0312 	mov.w	r3, #18
 8008d1c:	a939      	add	r1, sp, #228	@ 0xe4
 8008d1e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008d22:	f00f fbc9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID_1.setPosition(126, 6, 105, 29);
 8008d26:	463a      	mov	r2, r7
 8008d28:	2369      	movs	r3, #105	@ 0x69
 8008d2a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8008d2c:	f8cd 9000 	str.w	r9, [sp]
 8008d30:	217e      	movs	r1, #126	@ 0x7e
 8008d32:	f7f9 feb9 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008d36:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8008d38:	4629      	mov	r1, r5
 8008d3a:	f00e fcdc 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008d3e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8008d40:	f884 5401 	strb.w	r5, [r4, #1025]	@ 0x401
 8008d44:	4630      	mov	r0, r6
 8008d46:	f00b fe41 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH4_ID));
 8008d4a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8008d4c:	2311      	movs	r3, #17
 8008d4e:	a939      	add	r1, sp, #228	@ 0xe4
 8008d50:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008d54:	f00f fbb0 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID_1.setPosition(126, 6, 105, 29);
 8008d58:	463a      	mov	r2, r7
 8008d5a:	2369      	movs	r3, #105	@ 0x69
 8008d5c:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8008d5e:	f8cd 9000 	str.w	r9, [sp]
 8008d62:	217e      	movs	r1, #126	@ 0x7e
 8008d64:	f7f9 fea0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008d68:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8008d6a:	4629      	mov	r1, r5
 8008d6c:	f00e fcc3 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008d70:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8008d72:	f884 542d 	strb.w	r5, [r4, #1069]	@ 0x42d
 8008d76:	4630      	mov	r0, r6
 8008d78:	f00b fe28 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH3_ID));
 8008d7c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8008d7e:	2310      	movs	r3, #16
 8008d80:	a939      	add	r1, sp, #228	@ 0xe4
 8008d82:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008d86:	f00f fb97 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID_1.setPosition(126, 6, 105, 29);
 8008d8a:	463a      	mov	r2, r7
 8008d8c:	2369      	movs	r3, #105	@ 0x69
 8008d8e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8008d90:	f8cd 9000 	str.w	r9, [sp]
 8008d94:	217e      	movs	r1, #126	@ 0x7e
 8008d96:	f7f9 fe87 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008d9a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8008d9c:	4629      	mov	r1, r5
 8008d9e:	f00e fcaa 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008da2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8008da4:	f884 5459 	strb.w	r5, [r4, #1113]	@ 0x459
 8008da8:	4630      	mov	r0, r6
 8008daa:	f00b fe0f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008dae:	f04f 030f 	mov.w	r3, #15
    BITMAP_HP_20_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH2_ID));
 8008db2:	a939      	add	r1, sp, #228	@ 0xe4
 8008db4:	4658      	mov	r0, fp
 8008db6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008dba:	f00f fb7d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID_1.setPosition(126, 6, 105, 29);
 8008dbe:	463a      	mov	r2, r7
 8008dc0:	2369      	movs	r3, #105	@ 0x69
 8008dc2:	f8cd 9000 	str.w	r9, [sp]
 8008dc6:	4658      	mov	r0, fp
 8008dc8:	217e      	movs	r1, #126	@ 0x7e
 8008dca:	f7f9 fe6d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008dce:	4629      	mov	r1, r5
 8008dd0:	4658      	mov	r0, fp
 8008dd2:	f00e fc90 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008dd6:	4659      	mov	r1, fp
 8008dd8:	4630      	mov	r0, r6
 8008dda:	f884 5485 	strb.w	r5, [r4, #1157]	@ 0x485
 8008dde:	f00b fdf5 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008de2:	f04f 0b0e 	mov.w	fp, #14
    BITMAP_HP_10_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH1_ID));
 8008de6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8008de8:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 8008dec:	a939      	add	r1, sp, #228	@ 0xe4
 8008dee:	f00f fb63 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID_1.setPosition(126, 6, 105, 29);
 8008df2:	463a      	mov	r2, r7
 8008df4:	2369      	movs	r3, #105	@ 0x69
 8008df6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8008df8:	f8cd 9000 	str.w	r9, [sp]
 8008dfc:	217e      	movs	r1, #126	@ 0x7e
 8008dfe:	f7f9 fe53 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008e02:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8008e04:	4629      	mov	r1, r5
 8008e06:	f00e fc76 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008e0a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8008e0c:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 8008e10:	4630      	mov	r0, r6
 8008e12:	f00b fddb 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH0_ID));
 8008e16:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8008e18:	230d      	movs	r3, #13
 8008e1a:	a939      	add	r1, sp, #228	@ 0xe4
 8008e1c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008e20:	f00f fb4a 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID_1.setPosition(126, 6, 105, 29);
 8008e24:	463a      	mov	r2, r7
 8008e26:	2369      	movs	r3, #105	@ 0x69
 8008e28:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8008e2a:	f8cd 9000 	str.w	r9, [sp]
 8008e2e:	217e      	movs	r1, #126	@ 0x7e
 8008e30:	f7f9 fe3a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008e34:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8008e36:	4629      	mov	r1, r5
 8008e38:	f00e fc5d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008e3c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8008e3e:	f884 54dd 	strb.w	r5, [r4, #1245]	@ 0x4dd
 8008e42:	4630      	mov	r0, r6
 8008e44:	f00b fdc2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire1.setBitmap(touchgfx::Bitmap(BITMAP_FIRE1_ID));
 8008e48:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8008e4a:	2328      	movs	r3, #40	@ 0x28
 8008e4c:	a939      	add	r1, sp, #228	@ 0xe4
 8008e4e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008e52:	f00f fb31 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire1.setPosition(82, 154, 85, 87);
 8008e56:	2357      	movs	r3, #87	@ 0x57
 8008e58:	229a      	movs	r2, #154	@ 0x9a
 8008e5a:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8008e5c:	9300      	str	r3, [sp, #0]
 8008e5e:	2152      	movs	r1, #82	@ 0x52
 8008e60:	2355      	movs	r3, #85	@ 0x55
 8008e62:	f7f9 fe21 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008e66:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8008e68:	4629      	mov	r1, r5
 8008e6a:	f00e fc44 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008e6e:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8008e70:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 8008e74:	4630      	mov	r0, r6
 8008e76:	f00b fda9 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire2.setBitmap(touchgfx::Bitmap(BITMAP_FIRE2_ID));
 8008e7a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8008e7c:	2329      	movs	r3, #41	@ 0x29
 8008e7e:	a939      	add	r1, sp, #228	@ 0xe4
 8008e80:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008e84:	f00f fb18 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire2.setPosition(-19, 43, 129, 209);
 8008e88:	23d1      	movs	r3, #209	@ 0xd1
 8008e8a:	222b      	movs	r2, #43	@ 0x2b
 8008e8c:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8008e8e:	9300      	str	r3, [sp, #0]
 8008e90:	f06f 0112 	mvn.w	r1, #18
 8008e94:	2381      	movs	r3, #129	@ 0x81
 8008e96:	f7f9 fe07 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008e9a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8008e9c:	4629      	mov	r1, r5
 8008e9e:	f00e fc2a 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008ea2:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8008ea4:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 8008ea8:	4630      	mov	r0, r6
 8008eaa:	f00b fd8f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_lose.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_LOSE_ID));
 8008eae:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8008eb0:	2324      	movs	r3, #36	@ 0x24
 8008eb2:	a939      	add	r1, sp, #228	@ 0xe4
 8008eb4:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008eb8:	f00f fafe 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_lose.setPosition(100, 137, 147, 115);
 8008ebc:	2373      	movs	r3, #115	@ 0x73
 8008ebe:	2289      	movs	r2, #137	@ 0x89
 8008ec0:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8008ec2:	9300      	str	r3, [sp, #0]
 8008ec4:	2164      	movs	r1, #100	@ 0x64
 8008ec6:	2393      	movs	r3, #147	@ 0x93
 8008ec8:	f7f9 fdee 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008ecc:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8008ece:	4629      	mov	r1, r5
 8008ed0:	f00e fc11 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008ed4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8008ed6:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 8008eda:	4630      	mov	r0, r6
 8008edc:	2720      	movs	r7, #32
 8008ede:	f00b fd75 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_win.setPosition(94, 62, 146, 172);
 8008ee2:	f04f 09ac 	mov.w	r9, #172	@ 0xac
    bleach_win.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 8008ee6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8008ee8:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 8008eec:	a939      	add	r1, sp, #228	@ 0xe4
 8008eee:	f00f fae3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_win.setPosition(94, 62, 146, 172);
 8008ef2:	223e      	movs	r2, #62	@ 0x3e
 8008ef4:	2392      	movs	r3, #146	@ 0x92
 8008ef6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8008ef8:	f8cd 9000 	str.w	r9, [sp]
 8008efc:	215e      	movs	r1, #94	@ 0x5e
 8008efe:	f7f9 fdd3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008f02:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8008f04:	4629      	mov	r1, r5
 8008f06:	f00e fbf6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008f0a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8008f0c:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 8008f10:	4630      	mov	r0, r6
 8008f12:	f00b fd5b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe_fire.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_FIRE_ID));
 8008f16:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8008f18:	f04f 0326 	mov.w	r3, #38	@ 0x26
 8008f1c:	a939      	add	r1, sp, #228	@ 0xe4
 8008f1e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008f22:	f00f fac9 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe_fire.setPosition(-11, 80, 186, 190);
 8008f26:	23be      	movs	r3, #190	@ 0xbe
 8008f28:	2250      	movs	r2, #80	@ 0x50
 8008f2a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8008f2c:	9300      	str	r3, [sp, #0]
 8008f2e:	f06f 010a 	mvn.w	r1, #10
 8008f32:	23ba      	movs	r3, #186	@ 0xba
 8008f34:	f7f9 fdb8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe_fire.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008f38:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8008f3a:	4629      	mov	r1, r5
 8008f3c:	f00e fbdb 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008f40:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8008f42:	f884 55b9 	strb.w	r5, [r4, #1465]	@ 0x5b9
 8008f46:	4630      	mov	r0, r6
 8008f48:	f04f 0825 	mov.w	r8, #37	@ 0x25
 8008f4c:	f00b fd3e 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_ID));
 8008f50:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8008f52:	f8ad 80e4 	strh.w	r8, [sp, #228]	@ 0xe4
 8008f56:	a939      	add	r1, sp, #228	@ 0xe4
 8008f58:	f00f faae 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe.setPosition(126, 48, 117, 130);
 8008f5c:	2382      	movs	r3, #130	@ 0x82
 8008f5e:	2230      	movs	r2, #48	@ 0x30
 8008f60:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8008f62:	9300      	str	r3, [sp, #0]
 8008f64:	217e      	movs	r1, #126	@ 0x7e
 8008f66:	2375      	movs	r3, #117	@ 0x75
 8008f68:	f7f9 fd9e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008f6c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8008f6e:	4629      	mov	r1, r5
 8008f70:	f00e fbc1 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008f74:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8008f76:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 8008f7a:	4630      	mov	r0, r6
 8008f7c:	f00b fd26 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_def.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_DEF_ID));
 8008f80:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8008f82:	2323      	movs	r3, #35	@ 0x23
 8008f84:	a939      	add	r1, sp, #228	@ 0xe4
 8008f86:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008f8a:	f00f fa95 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_def.setPosition(100, 62, 140, 179);
 8008f8e:	23b3      	movs	r3, #179	@ 0xb3
 8008f90:	223e      	movs	r2, #62	@ 0x3e
 8008f92:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8008f94:	9300      	str	r3, [sp, #0]
 8008f96:	2164      	movs	r1, #100	@ 0x64
 8008f98:	238c      	movs	r3, #140	@ 0x8c
 8008f9a:	f7f9 fd85 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008f9e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8008fa0:	4629      	mov	r1, r5
 8008fa2:	f00e fba8 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008fa6:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8008fa8:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 8008fac:	4630      	mov	r0, r6
 8008fae:	f00b fd0d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_atk.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ATK_ID));
 8008fb2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8008fb4:	2321      	movs	r3, #33	@ 0x21
 8008fb6:	a939      	add	r1, sp, #228	@ 0xe4
 8008fb8:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008fbc:	f00f fa7c 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_atk.setPosition(94, 62, 152, 172);
 8008fc0:	2398      	movs	r3, #152	@ 0x98
 8008fc2:	223e      	movs	r2, #62	@ 0x3e
 8008fc4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8008fc6:	f8cd 9000 	str.w	r9, [sp]
 8008fca:	215e      	movs	r1, #94	@ 0x5e
 8008fcc:	f7f9 fd6c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008fd0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8008fd2:	4629      	mov	r1, r5
 8008fd4:	f00e fb8f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008fd8:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8008fda:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 8008fde:	4630      	mov	r0, r6
 8008fe0:	f00b fcf4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 8008fe4:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8008fe6:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 8008fea:	a939      	add	r1, sp, #228	@ 0xe4
 8008fec:	f00f fa64 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(100, 62, 146, 172);
 8008ff0:	2392      	movs	r3, #146	@ 0x92
 8008ff2:	223e      	movs	r2, #62	@ 0x3e
 8008ff4:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8008ff6:	f8cd 9000 	str.w	r9, [sp]
 8008ffa:	2164      	movs	r1, #100	@ 0x64
 8008ffc:	f7f9 fd54 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009000:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8009002:	4629      	mov	r1, r5
 8009004:	f00e fb77 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009008:	9920      	ldr	r1, [sp, #128]	@ 0x80
 800900a:	4630      	mov	r0, r6
 800900c:	f00b fcde 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009010:	f04f 0942 	mov.w	r9, #66	@ 0x42
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 8009014:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8009016:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 800901a:	a939      	add	r1, sp, #228	@ 0xe4
 800901c:	f00f fa4c 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(15, 148, 67, 85);
 8009020:	2355      	movs	r3, #85	@ 0x55
 8009022:	2294      	movs	r2, #148	@ 0x94
 8009024:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8009026:	9300      	str	r3, [sp, #0]
 8009028:	210f      	movs	r1, #15
 800902a:	4653      	mov	r3, sl
 800902c:	f7f9 fd3c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009030:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8009032:	4629      	mov	r1, r5
 8009034:	f00e fb5f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009038:	9921      	ldr	r1, [sp, #132]	@ 0x84
 800903a:	4630      	mov	r0, r6
 800903c:	f00b fcc6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009040:	f04f 0a48 	mov.w	sl, #72	@ 0x48
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_WIN_ID));
 8009044:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8009046:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 800904a:	a939      	add	r1, sp, #228	@ 0xe4
 800904c:	f00f fa34 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_win.setPosition(18, 145, 61, 91);
 8009050:	235b      	movs	r3, #91	@ 0x5b
 8009052:	2291      	movs	r2, #145	@ 0x91
 8009054:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8009056:	9300      	str	r3, [sp, #0]
 8009058:	2112      	movs	r1, #18
 800905a:	233d      	movs	r3, #61	@ 0x3d
 800905c:	f7f9 fd24 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009060:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8009062:	4629      	mov	r1, r5
 8009064:	f00e fb47 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009068:	9922      	ldr	r1, [sp, #136]	@ 0x88
 800906a:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800906e:	4630      	mov	r0, r6
 8009070:	f00b fcac 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_lose.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_LOSE_ID));
 8009074:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8009076:	2346      	movs	r3, #70	@ 0x46
 8009078:	a939      	add	r1, sp, #228	@ 0xe4
 800907a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800907e:	f00f fa1b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_lose.setPosition(23, 197, 71, 55);
 8009082:	2337      	movs	r3, #55	@ 0x37
 8009084:	22c5      	movs	r2, #197	@ 0xc5
 8009086:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8009088:	9300      	str	r3, [sp, #0]
 800908a:	2117      	movs	r1, #23
 800908c:	2347      	movs	r3, #71	@ 0x47
 800908e:	f7f9 fd0b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009092:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8009094:	4629      	mov	r1, r5
 8009096:	f00e fb2e 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800909a:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 800909c:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 80090a0:	4630      	mov	r0, r6
 80090a2:	f00b fc93 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_SPE_ID));
 80090a6:	9824      	ldr	r0, [sp, #144]	@ 0x90
 80090a8:	2347      	movs	r3, #71	@ 0x47
 80090aa:	a939      	add	r1, sp, #228	@ 0xe4
 80090ac:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80090b0:	f00f fa02 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(14, 138, 72, 104);
 80090b4:	2368      	movs	r3, #104	@ 0x68
 80090b6:	228a      	movs	r2, #138	@ 0x8a
 80090b8:	9824      	ldr	r0, [sp, #144]	@ 0x90
 80090ba:	9300      	str	r3, [sp, #0]
 80090bc:	4659      	mov	r1, fp
 80090be:	4653      	mov	r3, sl
 80090c0:	f7f9 fcf2 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80090c4:	9824      	ldr	r0, [sp, #144]	@ 0x90
 80090c6:	f8df a3b0 	ldr.w	sl, [pc, #944]	@ 8009478 <_ZN24SakuraGameScreenViewBaseC1Ev+0xf9c>
 80090ca:	4629      	mov	r1, r5
 80090cc:	f00e fb13 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80090d0:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80090d2:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 80090d6:	4630      	mov	r0, r6
 80090d8:	f00b fc78 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_DEF_ID));
 80090dc:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80090de:	2344      	movs	r3, #68	@ 0x44
 80090e0:	a939      	add	r1, sp, #228	@ 0xe4
 80090e2:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80090e6:	f00f f9e7 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(22, 154, 52, 73);
 80090ea:	2349      	movs	r3, #73	@ 0x49
 80090ec:	229a      	movs	r2, #154	@ 0x9a
 80090ee:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80090f0:	9300      	str	r3, [sp, #0]
 80090f2:	2116      	movs	r1, #22
 80090f4:	2334      	movs	r3, #52	@ 0x34
 80090f6:	f7f9 fcd7 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80090fa:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80090fc:	4629      	mov	r1, r5
 80090fe:	f00e fafa 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009102:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8009104:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 8009108:	4630      	mov	r0, r6
 800910a:	f00b fc5f 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ATK_ID));
 800910e:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8009110:	2343      	movs	r3, #67	@ 0x43
 8009112:	a939      	add	r1, sp, #228	@ 0xe4
 8009114:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009118:	f00f f9ce 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(38, 160, 88, 66);
 800911c:	2358      	movs	r3, #88	@ 0x58
 800911e:	22a0      	movs	r2, #160	@ 0xa0
 8009120:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8009122:	f8cd 9000 	str.w	r9, [sp]
 8009126:	2126      	movs	r1, #38	@ 0x26
 8009128:	f7f9 fcbe 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800912c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 800912e:	4629      	mov	r1, r5
 8009130:	f00e fae1 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009134:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8009136:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800913a:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 800913c:	f04f 092e 	mov.w	r9, #46	@ 0x2e
 8009140:	f00b fc44 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 8009144:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8009146:	f8ad 50e4 	strh.w	r5, [sp, #228]	@ 0xe4
 800914a:	a939      	add	r1, sp, #228	@ 0xe4
 800914c:	f00f f9b4 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 8009150:	464b      	mov	r3, r9
 8009152:	22f2      	movs	r2, #242	@ 0xf2
 8009154:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8009156:	f8cd 9000 	str.w	r9, [sp]
 800915a:	2140      	movs	r1, #64	@ 0x40
 800915c:	f7f9 fca4 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009160:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8009162:	4629      	mov	r1, r5
 8009164:	f00e fac7 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009168:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 800916a:	f884 579d 	strb.w	r5, [r4, #1949]	@ 0x79d
 800916e:	4630      	mov	r0, r6
 8009170:	f00b fc2c 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8009174:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8009176:	231f      	movs	r3, #31
 8009178:	a939      	add	r1, sp, #228	@ 0xe4
 800917a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800917e:	f00f f99b 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 8009182:	464b      	mov	r3, r9
 8009184:	22f2      	movs	r2, #242	@ 0xf2
 8009186:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8009188:	f8cd 9000 	str.w	r9, [sp]
 800918c:	217c      	movs	r1, #124	@ 0x7c
 800918e:	f7f9 fc8b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009192:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8009194:	4629      	mov	r1, r5
 8009196:	f00e faae 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800919a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 800919c:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 80091a0:	4630      	mov	r0, r6
 80091a2:	f00b fc13 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 80091a6:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80091a8:	234c      	movs	r3, #76	@ 0x4c
 80091aa:	a939      	add	r1, sp, #228	@ 0xe4
 80091ac:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80091b0:	f00f f982 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 80091b4:	464b      	mov	r3, r9
 80091b6:	22f2      	movs	r2, #242	@ 0xf2
 80091b8:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80091ba:	f8cd 9000 	str.w	r9, [sp]
 80091be:	21b8      	movs	r1, #184	@ 0xb8
 80091c0:	f7f9 fc72 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80091c4:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80091c6:	4629      	mov	r1, r5
 80091c8:	f00e fa95 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80091cc:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 80091ce:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5
 80091d2:	4630      	mov	r0, r6
 80091d4:	f00b fbfa 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 80091d8:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80091da:	f04f 033a 	mov.w	r3, #58	@ 0x3a
 80091de:	a939      	add	r1, sp, #228	@ 0xe4
 80091e0:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80091e4:	f00f f968 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 80091e8:	464b      	mov	r3, r9
 80091ea:	22f1      	movs	r2, #241	@ 0xf1
 80091ec:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80091ee:	f8cd 9000 	str.w	r9, [sp]
 80091f2:	2102      	movs	r1, #2
 80091f4:	f7f9 fc58 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80091f8:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80091fa:	4629      	mov	r1, r5
 80091fc:	f00e fa7b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009200:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8009202:	f884 5821 	strb.w	r5, [r4, #2081]	@ 0x821
 8009206:	4630      	mov	r0, r6
 8009208:	f00b fbe0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 800920c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 800920e:	2339      	movs	r3, #57	@ 0x39
 8009210:	a939      	add	r1, sp, #228	@ 0xe4
 8009212:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009216:	f00f f94f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 800921a:	464b      	mov	r3, r9
 800921c:	22f1      	movs	r2, #241	@ 0xf1
 800921e:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8009220:	f8cd 9000 	str.w	r9, [sp]
 8009224:	2102      	movs	r1, #2
 8009226:	f7f9 fc3f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800922a:	982b      	ldr	r0, [sp, #172]	@ 0xac
 800922c:	4629      	mov	r1, r5
 800922e:	f00e fa62 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    chakra_box1.setPosition(14, 43, 86, 5);
 8009232:	f04f 0905 	mov.w	r9, #5
 8009236:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8009238:	4630      	mov	r0, r6
 800923a:	f00b fbc7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800923e:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 8009240:	f8cd 9000 	str.w	r9, [sp]
 8009244:	2356      	movs	r3, #86	@ 0x56
 8009246:	222b      	movs	r2, #43	@ 0x2b
 8009248:	4659      	mov	r1, fp
 800924a:	f7f9 fc2d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800924e:	9936      	ldr	r1, [sp, #216]	@ 0xd8
 8009250:	f8c4 a87c 	str.w	sl, [r4, #2172]	@ 0x87c
 8009254:	4630      	mov	r0, r6
 8009256:	f00b fbb9 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakra_box2.setPosition(135, 43, 86, 5);
 800925a:	222b      	movs	r2, #43	@ 0x2b
 800925c:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 800925e:	f8cd 9000 	str.w	r9, [sp]
 8009262:	2356      	movs	r3, #86	@ 0x56
 8009264:	2187      	movs	r1, #135	@ 0x87
 8009266:	f7f9 fc1f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800926a:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 800926c:	f8c4 a8a8 	str.w	sl, [r4, #2216]	@ 0x8a8
 8009270:	4630      	mov	r0, r6
 8009272:	f00b fbab 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gameover.setPosition(65, 6, 110, 157);
 8009276:	f04f 099d 	mov.w	r9, #157	@ 0x9d
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 800927a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800927c:	232a      	movs	r3, #42	@ 0x2a
 800927e:	a939      	add	r1, sp, #228	@ 0xe4
 8009280:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009284:	f00f f918 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.setPosition(65, 6, 110, 157);
 8009288:	2206      	movs	r2, #6
 800928a:	236e      	movs	r3, #110	@ 0x6e
 800928c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800928e:	f8cd 9000 	str.w	r9, [sp]
 8009292:	2141      	movs	r1, #65	@ 0x41
 8009294:	f7f9 fc08 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    gameover.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009298:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800929a:	4629      	mov	r1, r5
 800929c:	f00e fa2b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80092a0:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 80092a2:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 80092a6:	4630      	mov	r0, r6
 80092a8:	f00b fb90 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    win.setBitmap(touchgfx::Bitmap(BITMAP_YOUWIN_ID));
 80092ac:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80092ae:	2359      	movs	r3, #89	@ 0x59
 80092b0:	a939      	add	r1, sp, #228	@ 0xe4
 80092b2:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80092b6:	f00f f8ff 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    win.setPosition(65, 6, 110, 157);
 80092ba:	236e      	movs	r3, #110	@ 0x6e
 80092bc:	2206      	movs	r2, #6
 80092be:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80092c0:	f8cd 9000 	str.w	r9, [sp]
 80092c4:	2141      	movs	r1, #65	@ 0x41
 80092c6:	f7f9 fbef 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80092ca:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80092cc:	4629      	mov	r1, r5
 80092ce:	f00e fa12 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80092d2:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80092d4:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 80092d8:	4630      	mov	r0, r6
 80092da:	f00b fb77 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80092de:	f04f 0958 	mov.w	r9, #88	@ 0x58
    x2dame_2.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 80092e2:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 80092e4:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 80092e8:	a939      	add	r1, sp, #228	@ 0xe4
 80092ea:	f00f f8e5 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_2.setPosition(199, 61, 32, 37);
 80092ee:	463b      	mov	r3, r7
 80092f0:	223d      	movs	r2, #61	@ 0x3d
 80092f2:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 80092f4:	f8cd 8000 	str.w	r8, [sp]
 80092f8:	21c7      	movs	r1, #199	@ 0xc7
 80092fa:	f7f9 fbd5 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80092fe:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8009300:	4629      	mov	r1, r5
 8009302:	f00e f9f8 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009306:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 8009308:	f884 5929 	strb.w	r5, [r4, #2345]	@ 0x929
 800930c:	4630      	mov	r0, r6
 800930e:	f00b fb5d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_1.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8009312:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8009314:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8009318:	a939      	add	r1, sp, #228	@ 0xe4
 800931a:	f00f f8cd 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_1.setPosition(7, 61, 32, 37);
 800931e:	463b      	mov	r3, r7
 8009320:	223d      	movs	r2, #61	@ 0x3d
 8009322:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8009324:	f8cd 8000 	str.w	r8, [sp]
 8009328:	2107      	movs	r1, #7
 800932a:	f7f9 fbbd 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800932e:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8009330:	4629      	mov	r1, r5
 8009332:	f00e f9e0 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009336:	992f      	ldr	r1, [sp, #188]	@ 0xbc
 8009338:	f884 5955 	strb.w	r5, [r4, #2389]	@ 0x955
 800933c:	4630      	mov	r0, r6
 800933e:	f00b fb45 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009342:	f04f 092c 	mov.w	r9, #44	@ 0x2c
    healthplus_1.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8009346:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8009348:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 800934c:	a939      	add	r1, sp, #228	@ 0xe4
 800934e:	f00f f8b3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_1.setPosition(9, 61, 32, 37);
 8009352:	463b      	mov	r3, r7
 8009354:	223d      	movs	r2, #61	@ 0x3d
 8009356:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8009358:	f8cd 8000 	str.w	r8, [sp]
 800935c:	2109      	movs	r1, #9
 800935e:	f7f9 fba3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009362:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8009364:	4629      	mov	r1, r5
 8009366:	f00e f9c6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800936a:	9930      	ldr	r1, [sp, #192]	@ 0xc0
 800936c:	f884 5981 	strb.w	r5, [r4, #2433]	@ 0x981
 8009370:	4630      	mov	r0, r6
 8009372:	f00b fb2b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009376:	f04f 0a1e 	mov.w	sl, #30
    chakragain_1.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 800937a:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 800937c:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8009380:	a939      	add	r1, sp, #228	@ 0xe4
 8009382:	f00f f899 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_1.setPosition(9, 61, 32, 37);
 8009386:	463b      	mov	r3, r7
 8009388:	223d      	movs	r2, #61	@ 0x3d
 800938a:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 800938c:	f8cd 8000 	str.w	r8, [sp]
 8009390:	2109      	movs	r1, #9
 8009392:	f7f9 fb89 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009396:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8009398:	4629      	mov	r1, r5
 800939a:	f00e f9ac 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800939e:	9931      	ldr	r1, [sp, #196]	@ 0xc4
 80093a0:	f884 59ad 	strb.w	r5, [r4, #2477]	@ 0x9ad
 80093a4:	4630      	mov	r0, r6
 80093a6:	f00b fb11 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80093aa:	f04f 0b4b 	mov.w	fp, #75	@ 0x4b
    sheild_1.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 80093ae:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 80093b0:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 80093b4:	a939      	add	r1, sp, #228	@ 0xe4
 80093b6:	f00f f87f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_1.setPosition(8, 59, 32, 37);
 80093ba:	463b      	mov	r3, r7
 80093bc:	223b      	movs	r2, #59	@ 0x3b
 80093be:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 80093c0:	f8cd 8000 	str.w	r8, [sp]
 80093c4:	2108      	movs	r1, #8
 80093c6:	f7f9 fb6f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80093ca:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 80093cc:	4629      	mov	r1, r5
 80093ce:	f00e f992 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80093d2:	9932      	ldr	r1, [sp, #200]	@ 0xc8
 80093d4:	f884 59d9 	strb.w	r5, [r4, #2521]	@ 0x9d9
 80093d8:	4630      	mov	r0, r6
 80093da:	f00b faf7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sheild_2.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 80093de:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 80093e0:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 80093e4:	a939      	add	r1, sp, #228	@ 0xe4
 80093e6:	f00f f867 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_2.setPosition(199, 58, 32, 37);
 80093ea:	463b      	mov	r3, r7
 80093ec:	223a      	movs	r2, #58	@ 0x3a
 80093ee:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 80093f0:	f8cd 8000 	str.w	r8, [sp]
 80093f4:	21c7      	movs	r1, #199	@ 0xc7
 80093f6:	f7f9 fb57 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80093fa:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 80093fc:	4629      	mov	r1, r5
 80093fe:	f00e f97a 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009402:	9933      	ldr	r1, [sp, #204]	@ 0xcc
 8009404:	f884 5a05 	strb.w	r5, [r4, #2565]	@ 0xa05
 8009408:	4630      	mov	r0, r6
 800940a:	f00b fadf 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakragain_2.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 800940e:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8009410:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8009414:	a939      	add	r1, sp, #228	@ 0xe4
 8009416:	f00f f84f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_2.setPosition(199, 61, 32, 37);
 800941a:	463b      	mov	r3, r7
 800941c:	223d      	movs	r2, #61	@ 0x3d
 800941e:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8009420:	f8cd 8000 	str.w	r8, [sp]
 8009424:	21c7      	movs	r1, #199	@ 0xc7
 8009426:	f7f9 fb3f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800942a:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 800942c:	4629      	mov	r1, r5
 800942e:	f00e f962 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009432:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 8009434:	f884 5a31 	strb.w	r5, [r4, #2609]	@ 0xa31
 8009438:	4630      	mov	r0, r6
 800943a:	f00b fac7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    healthplus_2.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 800943e:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8009440:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8009444:	a939      	add	r1, sp, #228	@ 0xe4
 8009446:	f00f f837 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_2.setPosition(199, 61, 32, 37);
 800944a:	463b      	mov	r3, r7
 800944c:	223d      	movs	r2, #61	@ 0x3d
 800944e:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8009450:	f8cd 8000 	str.w	r8, [sp]
 8009454:	21c7      	movs	r1, #199	@ 0xc7
 8009456:	f7f9 fb27 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800945a:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 800945c:	4629      	mov	r1, r5
 800945e:	f00e f94a 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009462:	4630      	mov	r0, r6
 8009464:	9935      	ldr	r1, [sp, #212]	@ 0xd4
 8009466:	f884 5a5d 	strb.w	r5, [r4, #2653]	@ 0xa5d
 800946a:	f00b faaf 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800946e:	4620      	mov	r0, r4
 8009470:	b03b      	add	sp, #236	@ 0xec
 8009472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009476:	bf00      	nop
 8009478:	ff0066ff 	.word	0xff0066ff

0800947c <_ZN8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800947c:	4770      	bx	lr

0800947e <_ZN24SakuraMainScreenViewBaseD1Ev>:
}

SakuraMainScreenViewBase::~SakuraMainScreenViewBase()
{

}
 800947e:	4770      	bx	lr

08009480 <_ZN24SakuraMainScreenViewBase11setupScreenEv>:

void SakuraMainScreenViewBase::setupScreen()
{

}
 8009480:	4770      	bx	lr

08009482 <_ZN8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009482:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009484:	68c2      	ldr	r2, [r0, #12]
 8009486:	6844      	ldr	r4, [r0, #4]
 8009488:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800948a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800948c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009490:	07d2      	lsls	r2, r2, #31
 8009492:	bf48      	it	mi
 8009494:	5962      	ldrmi	r2, [r4, r5]
 8009496:	689b      	ldr	r3, [r3, #8]
    }
 8009498:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800949a:	bf48      	it	mi
 800949c:	58d3      	ldrmi	r3, [r2, r3]
 800949e:	4718      	bx	r3

080094a0 <_ZNK8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80094a0:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80094a2:	6840      	ldr	r0, [r0, #4]
 80094a4:	b130      	cbz	r0, 80094b4 <_ZNK8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80094a6:	689a      	ldr	r2, [r3, #8]
 80094a8:	b91a      	cbnz	r2, 80094b2 <_ZNK8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80094aa:	68d8      	ldr	r0, [r3, #12]
 80094ac:	f000 0001 	and.w	r0, r0, #1
 80094b0:	4770      	bx	lr
 80094b2:	2001      	movs	r0, #1
    }
 80094b4:	4770      	bx	lr

080094b6 <_ZN8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80094b6:	b510      	push	{r4, lr}
 80094b8:	2110      	movs	r1, #16
 80094ba:	4604      	mov	r4, r0
 80094bc:	f023 fe9b 	bl	802d1f6 <_ZdlPvj>
 80094c0:	4620      	mov	r0, r4
 80094c2:	bd10      	pop	{r4, pc}

080094c4 <_ZN24SakuraMainScreenViewBaseD0Ev>:
SakuraMainScreenViewBase::~SakuraMainScreenViewBase()
 80094c4:	b510      	push	{r4, lr}
}
 80094c6:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
SakuraMainScreenViewBase::~SakuraMainScreenViewBase()
 80094ca:	4604      	mov	r4, r0
}
 80094cc:	f023 fe93 	bl	802d1f6 <_ZdlPvj>
 80094d0:	4620      	mov	r0, r4
 80094d2:	bd10      	pop	{r4, pc}

080094d4 <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SakuraMainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 80094d4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &SELECT_1)
 80094d6:	f500 730e 	add.w	r3, r0, #568	@ 0x238
 80094da:	4299      	cmp	r1, r3
{
 80094dc:	4604      	mov	r4, r0
 80094de:	460d      	mov	r5, r1
    if (&src == &SELECT_1)
 80094e0:	d103      	bne.n	80094ea <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~SakuraMainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80094e2:	f011 fbf7 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Select
        //When SELECT_1 clicked change screen to Character_2
        //Go to Character_2 with no screen transition
        application().gotoCharacter_2ScreenNoTransition();
 80094e6:	f7fa fbdd 	bl	8003ca4 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>
    }
    if (&src == &PLAY)
 80094ea:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 80094ee:	429d      	cmp	r5, r3
 80094f0:	d103      	bne.n	80094fa <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 80094f2:	f011 fbef 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //GameScreen
        //When PLAY clicked change screen to SakuraGameScreen
        //Go to SakuraGameScreen with no screen transition
        application().gotoSakuraGameScreenScreenNoTransition();
 80094f6:	f7fa fc05 	bl	8003d04 <_ZN23FrontendApplicationBase38gotoSakuraGameScreenScreenNoTransitionEv>
    }
    if (&src == &REWARD)
 80094fa:	f504 74a4 	add.w	r4, r4, #328	@ 0x148
 80094fe:	42a5      	cmp	r5, r4
 8009500:	d105      	bne.n	800950e <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
 8009502:	f011 fbe7 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //REWARD
        //When REWARD clicked change screen to RewardScreen
        //Go to RewardScreen with no screen transition
        application().gotoRewardScreenScreenNoTransition();
    }
}
 8009506:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoRewardScreenScreenNoTransition();
 800950a:	f7fa bbdb 	b.w	8003cc4 <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv>
}
 800950e:	bd38      	pop	{r3, r4, r5, pc}

08009510 <_ZN24SakuraMainScreenViewBaseC1Ev>:
SakuraMainScreenViewBase::SakuraMainScreenViewBase() :
 8009510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009514:	4604      	mov	r4, r0
 8009516:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &SakuraMainScreenViewBase::flexButtonCallbackHandler)
 8009518:	46a2      	mov	sl, r4
 800951a:	2500      	movs	r5, #0
 800951c:	f013 fc00 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8009520:	4ba9      	ldr	r3, [pc, #676]	@ (80097c8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2b8>)
 8009522:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8009524:	f84a 3b40 	str.w	r3, [sl], #64
 8009528:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 800952c:	4650      	mov	r0, sl
 800952e:	f7f9 facf 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8009532:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8009536:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 800953a:	a907      	add	r1, sp, #28
 800953c:	4648      	mov	r0, r9
 800953e:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8009542:	f8ad b01c 	strh.w	fp, [sp, #28]
 8009546:	f00e f91b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800954a:	a907      	add	r1, sp, #28
 800954c:	4640      	mov	r0, r8
 800954e:	f104 06f0 	add.w	r6, r4, #240	@ 0xf0
 8009552:	f8ad b01c 	strh.w	fp, [sp, #28]
 8009556:	f00e f913 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800955a:	a907      	add	r1, sp, #28
 800955c:	4638      	mov	r0, r7
 800955e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8009562:	f00e f90d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009566:	a907      	add	r1, sp, #28
 8009568:	4630      	mov	r0, r6
 800956a:	f8ad b01c 	strh.w	fp, [sp, #28]
 800956e:	f00e f907 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009572:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8009576:	a907      	add	r1, sp, #28
 8009578:	4618      	mov	r0, r3
 800957a:	9302      	str	r3, [sp, #8]
 800957c:	f8ad b01c 	strh.w	fp, [sp, #28]
 8009580:	f00e f8fe 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009584:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8009588:	4618      	mov	r0, r3
 800958a:	9303      	str	r3, [sp, #12]
 800958c:	f7f9 fabc 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8009590:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 8009594:	4618      	mov	r0, r3
 8009596:	9304      	str	r3, [sp, #16]
 8009598:	f7f9 fab6 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800959c:	f504 730e 	add.w	r3, r4, #568	@ 0x238
 80095a0:	4618      	mov	r0, r3
 80095a2:	9305      	str	r3, [sp, #20]
 80095a4:	f7f9 fab0 	bl	8002b08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80095a8:	4b88      	ldr	r3, [pc, #544]	@ (80097cc <_ZN24SakuraMainScreenViewBaseC1Ev+0x2bc>)
 80095aa:	e9c4 34ac 	strd	r3, r4, [r4, #688]	@ 0x2b0
 80095ae:	4b88      	ldr	r3, [pc, #544]	@ (80097d0 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c0>)
 80095b0:	e9c4 35ae 	strd	r3, r5, [r4, #696]	@ 0x2b8
    __background.setPosition(0, 0, 240, 320);
 80095b4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80095b8:	462a      	mov	r2, r5
 80095ba:	9300      	str	r3, [sp, #0]
 80095bc:	4629      	mov	r1, r5
 80095be:	4650      	mov	r0, sl
 80095c0:	23f0      	movs	r3, #240	@ 0xf0
 80095c2:	f104 0b04 	add.w	fp, r4, #4
 80095c6:	f7f9 fa6f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80095ca:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80095ce:	66a3      	str	r3, [r4, #104]	@ 0x68
 80095d0:	4651      	mov	r1, sl
 80095d2:	4658      	mov	r0, fp
 80095d4:	f00b f9fa 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80095d8:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 80095da:	a907      	add	r1, sp, #28
 80095dc:	4648      	mov	r0, r9
 80095de:	f8ad 301c 	strh.w	r3, [sp, #28]
 80095e2:	f00e ff69 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 80095e6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80095ea:	462a      	mov	r2, r5
 80095ec:	9300      	str	r3, [sp, #0]
 80095ee:	4629      	mov	r1, r5
 80095f0:	23f0      	movs	r3, #240	@ 0xf0
 80095f2:	4648      	mov	r0, r9
 80095f4:	f7f9 fa58 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80095f8:	4629      	mov	r1, r5
 80095fa:	4648      	mov	r0, r9
 80095fc:	f00e f87b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009600:	4649      	mov	r1, r9
 8009602:	4658      	mov	r0, fp
 8009604:	f00b f9e2 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009608:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 800960a:	a907      	add	r1, sp, #28
 800960c:	4640      	mov	r0, r8
 800960e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009612:	f00e ff51 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 8009616:	2370      	movs	r3, #112	@ 0x70
 8009618:	220e      	movs	r2, #14
 800961a:	9300      	str	r3, [sp, #0]
 800961c:	4640      	mov	r0, r8
 800961e:	239e      	movs	r3, #158	@ 0x9e
 8009620:	2129      	movs	r1, #41	@ 0x29
 8009622:	f7f9 fa41 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009626:	4629      	mov	r1, r5
 8009628:	4640      	mov	r0, r8
 800962a:	f00e f864 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800962e:	4641      	mov	r1, r8
 8009630:	4658      	mov	r0, fp
 8009632:	f00b f9cb 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009636:	2349      	movs	r3, #73	@ 0x49
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA_ID));
 8009638:	a907      	add	r1, sp, #28
 800963a:	4638      	mov	r0, r7
 800963c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009640:	f00e ff3a 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(56, 145, 129, 64);
 8009644:	2340      	movs	r3, #64	@ 0x40
 8009646:	2291      	movs	r2, #145	@ 0x91
 8009648:	9300      	str	r3, [sp, #0]
 800964a:	4638      	mov	r0, r7
 800964c:	2381      	movs	r3, #129	@ 0x81
 800964e:	2138      	movs	r1, #56	@ 0x38
 8009650:	f7f9 fa2a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009654:	4629      	mov	r1, r5
 8009656:	4638      	mov	r0, r7
 8009658:	f00e f84d 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800965c:	4639      	mov	r1, r7
 800965e:	4658      	mov	r0, fp
 8009660:	f00b f9b4 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009664:	233c      	movs	r3, #60	@ 0x3c
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8009666:	a907      	add	r1, sp, #28
 8009668:	4630      	mov	r0, r6
 800966a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800966e:	f00e ff23 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 8009672:	2341      	movs	r3, #65	@ 0x41
 8009674:	22db      	movs	r2, #219	@ 0xdb
 8009676:	9300      	str	r3, [sp, #0]
 8009678:	4630      	mov	r0, r6
 800967a:	237c      	movs	r3, #124	@ 0x7c
 800967c:	2139      	movs	r1, #57	@ 0x39
 800967e:	f7f9 fa13 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009682:	4629      	mov	r1, r5
 8009684:	4630      	mov	r0, r6
 8009686:	f00e f836 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800968a:	4631      	mov	r1, r6
 800968c:	4658      	mov	r0, fp
 800968e:	f00b f99d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 8009692:	9802      	ldr	r0, [sp, #8]
        down = colorPressed;
 8009694:	4f4f      	ldr	r7, [pc, #316]	@ (80097d4 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c4>)
 8009696:	f8df a148 	ldr.w	sl, [pc, #328]	@ 80097e0 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2d0>
 800969a:	2357      	movs	r3, #87	@ 0x57
 800969c:	a907      	add	r1, sp, #28
 800969e:	f8ad 301c 	strh.w	r3, [sp, #28]
 80096a2:	f00e ff09 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 80096a6:	2324      	movs	r3, #36	@ 0x24
 80096a8:	f44f 728c 	mov.w	r2, #280	@ 0x118
 80096ac:	9802      	ldr	r0, [sp, #8]
 80096ae:	9300      	str	r3, [sp, #0]
 80096b0:	21b8      	movs	r1, #184	@ 0xb8
 80096b2:	2337      	movs	r3, #55	@ 0x37
 80096b4:	f7f9 f9f8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80096b8:	9802      	ldr	r0, [sp, #8]
 80096ba:	4629      	mov	r1, r5
 80096bc:	f00e f81b 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 80096c0:	f04f 092c 	mov.w	r9, #44	@ 0x2c
 80096c4:	9902      	ldr	r1, [sp, #8]
 80096c6:	4658      	mov	r0, fp
 80096c8:	f00b f980 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80096cc:	4629      	mov	r1, r5
 80096ce:	f8cd 9000 	str.w	r9, [sp]
 80096d2:	462a      	mov	r2, r5
 80096d4:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 80096d8:	2337      	movs	r3, #55	@ 0x37
 80096da:	f7f9 f9e5 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 80096de:	4b3e      	ldr	r3, [pc, #248]	@ (80097d8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c8>)
 80096e0:	4a3e      	ldr	r2, [pc, #248]	@ (80097dc <_ZN24SakuraMainScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 80096e2:	9803      	ldr	r0, [sp, #12]
 80096e4:	f04f 0805 	mov.w	r8, #5
        borderDown = borderColorPressed;
 80096e8:	e9c4 326e 	strd	r3, r2, [r4, #440]	@ 0x1b8
        down = colorPressed;
 80096ec:	e9c4 7a6c 	strd	r7, sl, [r4, #432]	@ 0x1b0
 80096f0:	f8a4 81ac 	strh.w	r8, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 80096f4:	f7f9 f930 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    REWARD.setAction(flexButtonCallback);
 80096f8:	f504 762c 	add.w	r6, r4, #688	@ 0x2b0
    REWARD.setAlpha(6);
 80096fc:	9803      	ldr	r0, [sp, #12]
 80096fe:	2106      	movs	r1, #6
 8009700:	f7f9 f9fc 	bl	8002afc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    REWARD.setPosition(184, 276, 55, 44);
 8009704:	9803      	ldr	r0, [sp, #12]
 8009706:	f8c4 6178 	str.w	r6, [r4, #376]	@ 0x178
 800970a:	2337      	movs	r3, #55	@ 0x37
 800970c:	f8cd 9000 	str.w	r9, [sp]
 8009710:	f44f 728a 	mov.w	r2, #276	@ 0x114
 8009714:	21b8      	movs	r1, #184	@ 0xb8
 8009716:	f7f9 f9c7 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 800971a:	f04f 0936 	mov.w	r9, #54	@ 0x36
 800971e:	9903      	ldr	r1, [sp, #12]
 8009720:	4658      	mov	r0, fp
 8009722:	f00b f953 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009726:	4629      	mov	r1, r5
 8009728:	462a      	mov	r2, r5
 800972a:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 800972e:	f8cd 9000 	str.w	r9, [sp]
 8009732:	2366      	movs	r3, #102	@ 0x66
 8009734:	f7f9 f9b8 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8009738:	4b27      	ldr	r3, [pc, #156]	@ (80097d8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c8>)
 800973a:	4a28      	ldr	r2, [pc, #160]	@ (80097dc <_ZN24SakuraMainScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 800973c:	9804      	ldr	r0, [sp, #16]
 800973e:	f8a4 8224 	strh.w	r8, [r4, #548]	@ 0x224
        borderDown = borderColorPressed;
 8009742:	e9c4 328c 	strd	r3, r2, [r4, #560]	@ 0x230
        down = colorPressed;
 8009746:	e9c4 7a8a 	strd	r7, sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 800974a:	f7f9 f905 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    PLAY.setAlpha(6);
 800974e:	9804      	ldr	r0, [sp, #16]
 8009750:	2106      	movs	r1, #6
 8009752:	f7f9 f9d3 	bl	8002afc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    PLAY.setPosition(69, 224, 102, 54);
 8009756:	9804      	ldr	r0, [sp, #16]
 8009758:	f8c4 61f0 	str.w	r6, [r4, #496]	@ 0x1f0
 800975c:	2366      	movs	r3, #102	@ 0x66
 800975e:	22e0      	movs	r2, #224	@ 0xe0
 8009760:	f8cd 9000 	str.w	r9, [sp]
 8009764:	2145      	movs	r1, #69	@ 0x45
 8009766:	f7f9 f99f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800976a:	9904      	ldr	r1, [sp, #16]
 800976c:	4658      	mov	r0, fp
 800976e:	f00b f92d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8009772:	4629      	mov	r1, r5
 8009774:	462a      	mov	r2, r5
 8009776:	f504 701b 	add.w	r0, r4, #620	@ 0x26c
 800977a:	f8cd 9000 	str.w	r9, [sp]
 800977e:	2366      	movs	r3, #102	@ 0x66
 8009780:	f7f9 f992 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8009784:	4b14      	ldr	r3, [pc, #80]	@ (80097d8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c8>)
 8009786:	4a15      	ldr	r2, [pc, #84]	@ (80097dc <_ZN24SakuraMainScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 8009788:	9805      	ldr	r0, [sp, #20]
 800978a:	f8a4 829c 	strh.w	r8, [r4, #668]	@ 0x29c
        borderDown = borderColorPressed;
 800978e:	e9c4 32aa 	strd	r3, r2, [r4, #680]	@ 0x2a8
        down = colorPressed;
 8009792:	e9c4 7aa8 	strd	r7, sl, [r4, #672]	@ 0x2a0
        handlePressedUpdated();
 8009796:	f7f9 f8df 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    SELECT_1.setAlpha(6);
 800979a:	9805      	ldr	r0, [sp, #20]
 800979c:	2106      	movs	r1, #6
 800979e:	f7f9 f9ad 	bl	8002afc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    SELECT_1.setPosition(68, 160, 102, 54);
 80097a2:	9805      	ldr	r0, [sp, #20]
 80097a4:	f8c4 6268 	str.w	r6, [r4, #616]	@ 0x268
 80097a8:	2366      	movs	r3, #102	@ 0x66
 80097aa:	22a0      	movs	r2, #160	@ 0xa0
 80097ac:	f8cd 9000 	str.w	r9, [sp]
 80097b0:	2144      	movs	r1, #68	@ 0x44
 80097b2:	f7f9 f979 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80097b6:	4658      	mov	r0, fp
 80097b8:	9905      	ldr	r1, [sp, #20]
 80097ba:	f00b f907 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80097be:	4620      	mov	r0, r4
 80097c0:	b009      	add	sp, #36	@ 0x24
 80097c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80097c6:	bf00      	nop
 80097c8:	080315f8 	.word	0x080315f8
 80097cc:	080315e0 	.word	0x080315e0
 80097d0:	080094d5 	.word	0x080094d5
 80097d4:	ff006699 	.word	0xff006699
 80097d8:	ff003366 	.word	0xff003366
 80097dc:	ff336699 	.word	0xff336699
 80097e0:	ff0099cc 	.word	0xff0099cc

080097e4 <_ZN8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80097e4:	4770      	bx	lr

080097e6 <_ZN14SpongeViewBaseD1Ev>:
}

SpongeViewBase::~SpongeViewBase()
{

}
 80097e6:	4770      	bx	lr

080097e8 <_ZN14SpongeViewBase11setupScreenEv>:

void SpongeViewBase::setupScreen()
{

}
 80097e8:	4770      	bx	lr

080097ea <_ZN8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80097ea:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80097ec:	68c2      	ldr	r2, [r0, #12]
 80097ee:	6844      	ldr	r4, [r0, #4]
 80097f0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80097f2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80097f4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80097f8:	07d2      	lsls	r2, r2, #31
 80097fa:	bf48      	it	mi
 80097fc:	5962      	ldrmi	r2, [r4, r5]
 80097fe:	689b      	ldr	r3, [r3, #8]
    }
 8009800:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009802:	bf48      	it	mi
 8009804:	58d3      	ldrmi	r3, [r2, r3]
 8009806:	4718      	bx	r3

08009808 <_ZNK8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8009808:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800980a:	6840      	ldr	r0, [r0, #4]
 800980c:	b130      	cbz	r0, 800981c <_ZNK8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800980e:	689a      	ldr	r2, [r3, #8]
 8009810:	b91a      	cbnz	r2, 800981a <_ZNK8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8009812:	68d8      	ldr	r0, [r3, #12]
 8009814:	f000 0001 	and.w	r0, r0, #1
 8009818:	4770      	bx	lr
 800981a:	2001      	movs	r0, #1
    }
 800981c:	4770      	bx	lr

0800981e <_ZN8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800981e:	b510      	push	{r4, lr}
 8009820:	2110      	movs	r1, #16
 8009822:	4604      	mov	r4, r0
 8009824:	f023 fce7 	bl	802d1f6 <_ZdlPvj>
 8009828:	4620      	mov	r0, r4
 800982a:	bd10      	pop	{r4, pc}

0800982c <_ZN14SpongeViewBaseD0Ev>:
SpongeViewBase::~SpongeViewBase()
 800982c:	b510      	push	{r4, lr}
}
 800982e:	f44f 714c 	mov.w	r1, #816	@ 0x330
SpongeViewBase::~SpongeViewBase()
 8009832:	4604      	mov	r4, r0
}
 8009834:	f023 fcdf 	bl	802d1f6 <_ZdlPvj>
 8009838:	4620      	mov	r0, r4
 800983a:	bd10      	pop	{r4, pc}

0800983c <_ZN14SpongeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SpongeViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &REWARD)
 800983c:	f500 702a 	add.w	r0, r0, #680	@ 0x2a8
 8009840:	4288      	cmp	r0, r1
{
 8009842:	b508      	push	{r3, lr}
    if (&src == &REWARD)
 8009844:	d105      	bne.n	8009852 <_ZN14SpongeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~SpongeViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009846:	f011 fa45 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
        //Home
        //When REWARD clicked change screen to SakuraFinalScreen
        //Go to SakuraFinalScreen with no screen transition
        application().gotoSakuraFinalScreenScreenNoTransition();
    }
}
 800984a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraFinalScreenScreenNoTransition();
 800984e:	f7fa ba89 	b.w	8003d64 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>
}
 8009852:	bd08      	pop	{r3, pc}

08009854 <_ZN14SpongeViewBaseC1Ev>:
SpongeViewBase::SpongeViewBase() :
 8009854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009858:	4604      	mov	r4, r0
 800985a:	b091      	sub	sp, #68	@ 0x44
    flexButtonCallback(this, &SpongeViewBase::flexButtonCallbackHandler)
 800985c:	46a2      	mov	sl, r4
 800985e:	2500      	movs	r5, #0
 8009860:	f013 fa5e 	bl	801cd20 <_ZN8touchgfx6ScreenC1Ev>
 8009864:	4bd7      	ldr	r3, [pc, #860]	@ (8009bc4 <_ZN14SpongeViewBaseC1Ev+0x370>)
 8009866:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8009868:	f84a 3b40 	str.w	r3, [sl], #64
 800986c:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8009870:	4650      	mov	r0, sl
 8009872:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8009876:	f7f9 f92b 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 800987a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800987e:	a90f      	add	r1, sp, #60	@ 0x3c
 8009880:	4648      	mov	r0, r9
 8009882:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8009886:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 800988a:	f00d ff79 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800988e:	a90f      	add	r1, sp, #60	@ 0x3c
 8009890:	4640      	mov	r0, r8
 8009892:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009896:	f00d ff73 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800989a:	a90f      	add	r1, sp, #60	@ 0x3c
 800989c:	4638      	mov	r0, r7
 800989e:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 80098a2:	f00d ff6d 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80098a6:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 80098aa:	a90f      	add	r1, sp, #60	@ 0x3c
 80098ac:	4618      	mov	r0, r3
 80098ae:	9303      	str	r3, [sp, #12]
 80098b0:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 80098b4:	f00d ff64 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80098b8:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80098bc:	a90f      	add	r1, sp, #60	@ 0x3c
 80098be:	4618      	mov	r0, r3
 80098c0:	9304      	str	r3, [sp, #16]
 80098c2:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 80098c6:	f00d ff5b 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80098ca:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 80098ce:	a90f      	add	r1, sp, #60	@ 0x3c
 80098d0:	4618      	mov	r0, r3
 80098d2:	9305      	str	r3, [sp, #20]
 80098d4:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 80098d8:	f00d ff52 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80098dc:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 80098e0:	a90f      	add	r1, sp, #60	@ 0x3c
 80098e2:	4618      	mov	r0, r3
 80098e4:	9306      	str	r3, [sp, #24]
 80098e6:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 80098ea:	f00d ff49 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80098ee:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80098f2:	a90f      	add	r1, sp, #60	@ 0x3c
 80098f4:	4618      	mov	r0, r3
 80098f6:	9307      	str	r3, [sp, #28]
 80098f8:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 80098fc:	f00d ff40 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009900:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8009904:	a90f      	add	r1, sp, #60	@ 0x3c
 8009906:	4618      	mov	r0, r3
 8009908:	9308      	str	r3, [sp, #32]
 800990a:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 800990e:	f00d ff37 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009912:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 8009916:	a90f      	add	r1, sp, #60	@ 0x3c
 8009918:	4618      	mov	r0, r3
 800991a:	9309      	str	r3, [sp, #36]	@ 0x24
 800991c:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009920:	f00d ff2e 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009924:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8009928:	a90f      	add	r1, sp, #60	@ 0x3c
 800992a:	4618      	mov	r0, r3
 800992c:	930a      	str	r3, [sp, #40]	@ 0x28
 800992e:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009932:	f00d ff25 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009936:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 800993a:	f504 7b1f 	add.w	fp, r4, #636	@ 0x27c
 800993e:	a90f      	add	r1, sp, #60	@ 0x3c
 8009940:	4618      	mov	r0, r3
 8009942:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009944:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009948:	f00d ff1a 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800994c:	a90f      	add	r1, sp, #60	@ 0x3c
 800994e:	4658      	mov	r0, fp
 8009950:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009954:	f00d ff14 	bl	8017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009958:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 800995c:	930c      	str	r3, [sp, #48]	@ 0x30
        : pressed(false), alpha(255), action(0)
 800995e:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8009962:	f8a4 32d4 	strh.w	r3, [r4, #724]	@ 0x2d4
        touchable = touch;
 8009966:	f240 1301 	movw	r3, #257	@ 0x101
 800996a:	f8a4 32cc 	strh.w	r3, [r4, #716]	@ 0x2cc
        : T(), up(), down()
 800996e:	4b96      	ldr	r3, [pc, #600]	@ (8009bc8 <_ZN14SpongeViewBaseC1Ev+0x374>)
 8009970:	f8c4 32a8 	str.w	r3, [r4, #680]	@ 0x2a8
        : Box(), borderColor(0), borderSize(0)
 8009974:	f504 7337 	add.w	r3, r4, #732	@ 0x2dc
        : x(0), y(0), width(0), height(0)
 8009978:	e9c4 55ab 	strd	r5, r5, [r4, #684]	@ 0x2ac
 800997c:	e9c4 55ad 	strd	r5, r5, [r4, #692]	@ 0x2b4
          nextSibling(0),
 8009980:	e9c4 55af 	strd	r5, r5, [r4, #700]	@ 0x2bc
          cachedAbsX(0),
 8009984:	e9c4 55b1 	strd	r5, r5, [r4, #708]	@ 0x2c4
 8009988:	f8c4 52d0 	str.w	r5, [r4, #720]	@ 0x2d0
 800998c:	f8c4 52d8 	str.w	r5, [r4, #728]	@ 0x2d8
 8009990:	4618      	mov	r0, r3
 8009992:	930d      	str	r3, [sp, #52]	@ 0x34
 8009994:	f7f9 f89c 	bl	8002ad0 <_ZN8touchgfx3BoxC1Ev>
 8009998:	4b8c      	ldr	r3, [pc, #560]	@ (8009bcc <_ZN14SpongeViewBaseC1Ev+0x378>)
 800999a:	f8c4 32dc 	str.w	r3, [r4, #732]	@ 0x2dc
        borderBox.setXY(0, 0);
 800999e:	462a      	mov	r2, r5
 80099a0:	980d      	ldr	r0, [sp, #52]	@ 0x34
        : color(col)
 80099a2:	f8c4 5308 	str.w	r5, [r4, #776]	@ 0x308
 80099a6:	4629      	mov	r1, r5
        : color(0)
 80099a8:	e9c4 55c4 	strd	r5, r5, [r4, #784]	@ 0x310
 80099ac:	e9c4 55c6 	strd	r5, r5, [r4, #792]	@ 0x318
 80099b0:	f8a4 530c 	strh.w	r5, [r4, #780]	@ 0x30c
 80099b4:	f7f9 f86b 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80099b8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80099bc:	f00b f806 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 80099c0:	4b83      	ldr	r3, [pc, #524]	@ (8009bd0 <_ZN14SpongeViewBaseC1Ev+0x37c>)
 80099c2:	e9c4 34c8 	strd	r3, r4, [r4, #800]	@ 0x320
 80099c6:	4b83      	ldr	r3, [pc, #524]	@ (8009bd4 <_ZN14SpongeViewBaseC1Ev+0x380>)
 80099c8:	e9c4 35ca 	strd	r3, r5, [r4, #808]	@ 0x328
    __background.setPosition(0, 0, 240, 320);
 80099cc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80099d0:	462a      	mov	r2, r5
 80099d2:	9300      	str	r3, [sp, #0]
 80099d4:	4629      	mov	r1, r5
 80099d6:	4650      	mov	r0, sl
 80099d8:	23f0      	movs	r3, #240	@ 0xf0
 80099da:	1d26      	adds	r6, r4, #4
 80099dc:	f7f9 f864 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80099e0:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80099e4:	66a3      	str	r3, [r4, #104]	@ 0x68
 80099e6:	4651      	mov	r1, sl
 80099e8:	4630      	mov	r0, r6
 80099ea:	f00a ffef 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80099ee:	2356      	movs	r3, #86	@ 0x56
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_TRAIN_ID));
 80099f0:	a90f      	add	r1, sp, #60	@ 0x3c
 80099f2:	4648      	mov	r0, r9
 80099f4:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 80099f8:	f00e fd5e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 80099fc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009a00:	462a      	mov	r2, r5
 8009a02:	9300      	str	r3, [sp, #0]
 8009a04:	4629      	mov	r1, r5
 8009a06:	23f0      	movs	r3, #240	@ 0xf0
 8009a08:	4648      	mov	r0, r9
 8009a0a:	f7f9 f84d 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009a0e:	4629      	mov	r1, r5
 8009a10:	4648      	mov	r0, r9
 8009a12:	f00d fe70 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009a16:	4649      	mov	r1, r9
 8009a18:	4630      	mov	r0, r6
 8009a1a:	f00a ffd7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setPosition(131, 118, 120, 103);
 8009a1e:	f04f 0967 	mov.w	r9, #103	@ 0x67
 8009a22:	2327      	movs	r3, #39	@ 0x27
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_DUMMY_ID));
 8009a24:	a90f      	add	r1, sp, #60	@ 0x3c
 8009a26:	4640      	mov	r0, r8
 8009a28:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009a2c:	f00e fd44 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(131, 118, 120, 103);
 8009a30:	2378      	movs	r3, #120	@ 0x78
 8009a32:	2276      	movs	r2, #118	@ 0x76
 8009a34:	4640      	mov	r0, r8
 8009a36:	f8cd 9000 	str.w	r9, [sp]
 8009a3a:	2183      	movs	r1, #131	@ 0x83
 8009a3c:	f7f9 f834 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009a40:	4629      	mov	r1, r5
 8009a42:	4640      	mov	r0, r8
 8009a44:	f00d fe57 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009a48:	4641      	mov	r1, r8
 8009a4a:	4630      	mov	r0, r6
 8009a4c:	f00a ffbe 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a50:	f04f 084e 	mov.w	r8, #78	@ 0x4e
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 8009a54:	a90f      	add	r1, sp, #60	@ 0x3c
 8009a56:	4638      	mov	r0, r7
 8009a58:	f8ad 803c 	strh.w	r8, [sp, #60]	@ 0x3c
 8009a5c:	f00e fd2c 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(8, 118, 80, 103);
 8009a60:	2276      	movs	r2, #118	@ 0x76
 8009a62:	2350      	movs	r3, #80	@ 0x50
 8009a64:	4638      	mov	r0, r7
 8009a66:	f8cd 9000 	str.w	r9, [sp]
 8009a6a:	2108      	movs	r1, #8
 8009a6c:	f7f9 f81c 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009a70:	4629      	mov	r1, r5
 8009a72:	4638      	mov	r0, r7
 8009a74:	f00d fe3f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009a78:	4639      	mov	r1, r7
 8009a7a:	4630      	mov	r0, r6
 8009a7c:	f00a ffa6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_SPE_ID));
 8009a80:	9803      	ldr	r0, [sp, #12]
 8009a82:	2351      	movs	r3, #81	@ 0x51
 8009a84:	a90f      	add	r1, sp, #60	@ 0x3c
 8009a86:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009a8a:	f00e fd15 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(12, 78, 108, 143);
 8009a8e:	238f      	movs	r3, #143	@ 0x8f
 8009a90:	4642      	mov	r2, r8
 8009a92:	9803      	ldr	r0, [sp, #12]
 8009a94:	9300      	str	r3, [sp, #0]
 8009a96:	210c      	movs	r1, #12
 8009a98:	236c      	movs	r3, #108	@ 0x6c
 8009a9a:	f7f9 f805 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009a9e:	9803      	ldr	r0, [sp, #12]
 8009aa0:	4629      	mov	r1, r5
 8009aa2:	f00d fe28 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009aa6:	9903      	ldr	r1, [sp, #12]
        visible = vis;
 8009aa8:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8009aac:	4630      	mov	r0, r6
 8009aae:	f00a ff8d 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe_1.setBitmap(touchgfx::Bitmap(BITMAP_PUNCH_ID));
 8009ab2:	9804      	ldr	r0, [sp, #16]
 8009ab4:	233d      	movs	r3, #61	@ 0x3d
 8009ab6:	a90f      	add	r1, sp, #60	@ 0x3c
 8009ab8:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009abc:	f00e fcfc 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe_1.setPosition(155, 47, 77, 122);
 8009ac0:	237a      	movs	r3, #122	@ 0x7a
 8009ac2:	222f      	movs	r2, #47	@ 0x2f
 8009ac4:	9804      	ldr	r0, [sp, #16]
 8009ac6:	9300      	str	r3, [sp, #0]
 8009ac8:	219b      	movs	r1, #155	@ 0x9b
 8009aca:	234d      	movs	r3, #77	@ 0x4d
 8009acc:	f7f8 ffec 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009ad0:	9804      	ldr	r0, [sp, #16]
 8009ad2:	4629      	mov	r1, r5
 8009ad4:	f00d fe0f 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009ad8:	9904      	ldr	r1, [sp, #16]
 8009ada:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 8009ade:	4630      	mov	r0, r6
 8009ae0:	f00a ff74 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_DEF_ID));
 8009ae4:	9805      	ldr	r0, [sp, #20]
 8009ae6:	2350      	movs	r3, #80	@ 0x50
 8009ae8:	a90f      	add	r1, sp, #60	@ 0x3c
 8009aea:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009aee:	f00e fce3 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(8, 111, 91, 121);
 8009af2:	2379      	movs	r3, #121	@ 0x79
 8009af4:	226f      	movs	r2, #111	@ 0x6f
 8009af6:	9805      	ldr	r0, [sp, #20]
 8009af8:	9300      	str	r3, [sp, #0]
 8009afa:	2108      	movs	r1, #8
 8009afc:	235b      	movs	r3, #91	@ 0x5b
 8009afe:	f7f8 ffd3 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009b02:	9805      	ldr	r0, [sp, #20]
 8009b04:	4629      	mov	r1, r5
 8009b06:	f00d fdf6 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009b0a:	9905      	ldr	r1, [sp, #20]
 8009b0c:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 8009b10:	4630      	mov	r0, r6
 8009b12:	f00a ff5b 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ATK_ID));
 8009b16:	9806      	ldr	r0, [sp, #24]
 8009b18:	234f      	movs	r3, #79	@ 0x4f
 8009b1a:	a90f      	add	r1, sp, #60	@ 0x3c
 8009b1c:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009b20:	f00e fcca 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(8, 118, 184, 115);
 8009b24:	2373      	movs	r3, #115	@ 0x73
 8009b26:	2276      	movs	r2, #118	@ 0x76
 8009b28:	9806      	ldr	r0, [sp, #24]
 8009b2a:	9300      	str	r3, [sp, #0]
 8009b2c:	2108      	movs	r1, #8
 8009b2e:	23b8      	movs	r3, #184	@ 0xb8
 8009b30:	f7f8 ffba 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009b34:	9806      	ldr	r0, [sp, #24]
 8009b36:	4629      	mov	r1, r5
 8009b38:	f00d fddd 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009b3c:	9906      	ldr	r1, [sp, #24]
 8009b3e:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 8009b42:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 8009b44:	272e      	movs	r7, #46	@ 0x2e
 8009b46:	f00a ff41 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 8009b4a:	9807      	ldr	r0, [sp, #28]
 8009b4c:	f8ad 503c 	strh.w	r5, [sp, #60]	@ 0x3c
 8009b50:	a90f      	add	r1, sp, #60	@ 0x3c
 8009b52:	f00e fcb1 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 8009b56:	463b      	mov	r3, r7
 8009b58:	22f2      	movs	r2, #242	@ 0xf2
 8009b5a:	9807      	ldr	r0, [sp, #28]
 8009b5c:	9700      	str	r7, [sp, #0]
 8009b5e:	2140      	movs	r1, #64	@ 0x40
 8009b60:	f7f8 ffa2 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009b64:	9807      	ldr	r0, [sp, #28]
 8009b66:	4629      	mov	r1, r5
 8009b68:	f00d fdc5 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009b6c:	9907      	ldr	r1, [sp, #28]
 8009b6e:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8009b72:	4630      	mov	r0, r6
 8009b74:	f00a ff2a 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8009b78:	9808      	ldr	r0, [sp, #32]
 8009b7a:	231f      	movs	r3, #31
 8009b7c:	a90f      	add	r1, sp, #60	@ 0x3c
 8009b7e:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009b82:	f00e fc99 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 8009b86:	463b      	mov	r3, r7
 8009b88:	22f2      	movs	r2, #242	@ 0xf2
 8009b8a:	9808      	ldr	r0, [sp, #32]
 8009b8c:	9700      	str	r7, [sp, #0]
 8009b8e:	217c      	movs	r1, #124	@ 0x7c
 8009b90:	f7f8 ff8a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009b94:	9808      	ldr	r0, [sp, #32]
 8009b96:	4629      	mov	r1, r5
 8009b98:	f00d fdad 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009b9c:	9908      	ldr	r1, [sp, #32]
 8009b9e:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 8009ba2:	4630      	mov	r0, r6
 8009ba4:	f00a ff12 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 8009ba8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009baa:	234c      	movs	r3, #76	@ 0x4c
 8009bac:	a90f      	add	r1, sp, #60	@ 0x3c
 8009bae:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009bb2:	f00e fc81 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 8009bb6:	463b      	mov	r3, r7
 8009bb8:	22f2      	movs	r2, #242	@ 0xf2
 8009bba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009bbc:	9700      	str	r7, [sp, #0]
 8009bbe:	21b8      	movs	r1, #184	@ 0xb8
 8009bc0:	e00a      	b.n	8009bd8 <_ZN14SpongeViewBaseC1Ev+0x384>
 8009bc2:	bf00      	nop
 8009bc4:	08031644 	.word	0x08031644
 8009bc8:	080309ec 	.word	0x080309ec
 8009bcc:	080323dc 	.word	0x080323dc
 8009bd0:	0803162c 	.word	0x0803162c
 8009bd4:	0800983d 	.word	0x0800983d
 8009bd8:	f7f8 ff66 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009bdc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009bde:	4629      	mov	r1, r5
 8009be0:	f00d fd89 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009be4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009be6:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 8009bea:	4630      	mov	r0, r6
 8009bec:	f00a feee 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 8009bf0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8009bf2:	233a      	movs	r3, #58	@ 0x3a
 8009bf4:	a90f      	add	r1, sp, #60	@ 0x3c
 8009bf6:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009bfa:	f00e fc5d 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 8009bfe:	463b      	mov	r3, r7
 8009c00:	22f1      	movs	r2, #241	@ 0xf1
 8009c02:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8009c04:	9700      	str	r7, [sp, #0]
 8009c06:	2102      	movs	r1, #2
 8009c08:	f7f8 ff4e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009c0c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8009c0e:	4629      	mov	r1, r5
 8009c10:	f00d fd71 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009c14:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8009c16:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 8009c1a:	4630      	mov	r0, r6
 8009c1c:	f00a fed6 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 8009c20:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009c22:	2339      	movs	r3, #57	@ 0x39
 8009c24:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c26:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009c2a:	f00e fc45 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 8009c2e:	463b      	mov	r3, r7
 8009c30:	22f1      	movs	r2, #241	@ 0xf1
 8009c32:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009c34:	9700      	str	r7, [sp, #0]
 8009c36:	2102      	movs	r1, #2
 8009c38:	f7f8 ff36 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009c3c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009c3e:	4629      	mov	r1, r5
 8009c40:	f00d fd59 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009c44:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009c46:	4630      	mov	r0, r6
 8009c48:	f00a fec0 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009c4c:	232d      	movs	r3, #45	@ 0x2d
    home.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ID));
 8009c4e:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c50:	4658      	mov	r0, fp
 8009c52:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009c56:	f00e fc2f 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    home.setPosition(198, 292, 42, 28);
 8009c5a:	231c      	movs	r3, #28
 8009c5c:	f44f 7292 	mov.w	r2, #292	@ 0x124
 8009c60:	9300      	str	r3, [sp, #0]
 8009c62:	4658      	mov	r0, fp
 8009c64:	232a      	movs	r3, #42	@ 0x2a
 8009c66:	21c6      	movs	r1, #198	@ 0xc6
 8009c68:	f7f8 ff1e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
    home.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009c6c:	4629      	mov	r1, r5
 8009c6e:	4658      	mov	r0, fp
 8009c70:	f00d fd41 	bl	80176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 8009c74:	2721      	movs	r7, #33	@ 0x21
 8009c76:	4659      	mov	r1, fp
 8009c78:	4630      	mov	r0, r6
 8009c7a:	f00a fea7 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009c7e:	462a      	mov	r2, r5
 8009c80:	4629      	mov	r1, r5
 8009c82:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009c84:	9700      	str	r7, [sp, #0]
 8009c86:	231b      	movs	r3, #27
 8009c88:	f7f8 ff0e 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8009c8c:	2305      	movs	r3, #5
 8009c8e:	f8a4 330c 	strh.w	r3, [r4, #780]	@ 0x30c
        up = colorReleased;
 8009c92:	4b17      	ldr	r3, [pc, #92]	@ (8009cf0 <_ZN14SpongeViewBaseC1Ev+0x49c>)
 8009c94:	f8c4 3310 	str.w	r3, [r4, #784]	@ 0x310
        down = colorPressed;
 8009c98:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8009c9c:	3333      	adds	r3, #51	@ 0x33
 8009c9e:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
        borderUp = borderColorReleased;
 8009ca2:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8009ca6:	3b66      	subs	r3, #102	@ 0x66
 8009ca8:	f8c4 3318 	str.w	r3, [r4, #792]	@ 0x318
        borderDown = borderColorPressed;
 8009cac:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8009cb0:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
        handlePressedUpdated();
 8009cb4:	980c      	ldr	r0, [sp, #48]	@ 0x30
        borderDown = borderColorPressed;
 8009cb6:	f8c4 331c 	str.w	r3, [r4, #796]	@ 0x31c
        handlePressedUpdated();
 8009cba:	f7f8 fe4d 	bl	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8009cbe:	230a      	movs	r3, #10
 8009cc0:	f884 32d5 	strb.w	r3, [r4, #725]	@ 0x2d5
        alpha = newAlpha;
 8009cc4:	f884 3302 	strb.w	r3, [r4, #770]	@ 0x302
    REWARD.setAction(flexButtonCallback);
 8009cc8:	f504 7348 	add.w	r3, r4, #800	@ 0x320
        action = &callback;
 8009ccc:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
    REWARD.setPosition(205, 287, 27, 33);
 8009cd0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8009cd2:	9700      	str	r7, [sp, #0]
 8009cd4:	231b      	movs	r3, #27
 8009cd6:	f240 121f 	movw	r2, #287	@ 0x11f
 8009cda:	21cd      	movs	r1, #205	@ 0xcd
 8009cdc:	f7f8 fee4 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009ce0:	4630      	mov	r0, r6
 8009ce2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8009ce4:	f00a fe72 	bl	80149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009ce8:	4620      	mov	r0, r4
 8009cea:	b011      	add	sp, #68	@ 0x44
 8009cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009cf0:	ff006699 	.word	0xff006699

08009cf4 <__tcf_0>:

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp()
{
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 1, 14, 14, 0, 0, 4, 1, 0, 0, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009cf4:	4770      	bx	lr
	...

08009cf8 <_Z23getFont_arialbd_14_4bppv>:
{
 8009cf8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 1, 14, 14, 0, 0, 4, 1, 0, 0, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009cfa:	4d16      	ldr	r5, [pc, #88]	@ (8009d54 <_Z23getFont_arialbd_14_4bppv+0x5c>)
 8009cfc:	682c      	ldr	r4, [r5, #0]
 8009cfe:	f014 0401 	ands.w	r4, r4, #1
{
 8009d02:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 1, 14, 14, 0, 0, 4, 1, 0, 0, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009d04:	f3bf 8f5b 	dmb	ish
 8009d08:	d121      	bne.n	8009d4e <_Z23getFont_arialbd_14_4bppv+0x56>
 8009d0a:	4628      	mov	r0, r5
 8009d0c:	f023 fa75 	bl	802d1fa <__cxa_guard_acquire>
 8009d10:	b1e8      	cbz	r0, 8009d4e <_Z23getFont_arialbd_14_4bppv+0x56>
 8009d12:	4b11      	ldr	r3, [pc, #68]	@ (8009d58 <_Z23getFont_arialbd_14_4bppv+0x60>)
 8009d14:	4911      	ldr	r1, [pc, #68]	@ (8009d5c <_Z23getFont_arialbd_14_4bppv+0x64>)
 8009d16:	4812      	ldr	r0, [pc, #72]	@ (8009d60 <_Z23getFont_arialbd_14_4bppv+0x68>)
 8009d18:	940a      	str	r4, [sp, #40]	@ 0x28
 8009d1a:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 8009d1e:	233f      	movs	r3, #63	@ 0x3f
 8009d20:	9309      	str	r3, [sp, #36]	@ 0x24
 8009d22:	4b10      	ldr	r3, [pc, #64]	@ (8009d64 <_Z23getFont_arialbd_14_4bppv+0x6c>)
 8009d24:	9308      	str	r3, [sp, #32]
 8009d26:	4b10      	ldr	r3, [pc, #64]	@ (8009d68 <_Z23getFont_arialbd_14_4bppv+0x70>)
 8009d28:	9405      	str	r4, [sp, #20]
 8009d2a:	2201      	movs	r2, #1
 8009d2c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8009d30:	2304      	movs	r3, #4
 8009d32:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8009d36:	230e      	movs	r3, #14
 8009d38:	9300      	str	r3, [sp, #0]
 8009d3a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8009d3e:	f7fc fde7 	bl	8006910 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009d42:	480a      	ldr	r0, [pc, #40]	@ (8009d6c <_Z23getFont_arialbd_14_4bppv+0x74>)
 8009d44:	f024 f9b2 	bl	802e0ac <atexit>
 8009d48:	4628      	mov	r0, r5
 8009d4a:	f023 fa62 	bl	802d212 <__cxa_guard_release>
    return arialbd_14_4bpp;
}
 8009d4e:	4804      	ldr	r0, [pc, #16]	@ (8009d60 <_Z23getFont_arialbd_14_4bppv+0x68>)
 8009d50:	b00f      	add	sp, #60	@ 0x3c
 8009d52:	bd30      	pop	{r4, r5, pc}
 8009d54:	200029f8 	.word	0x200029f8
 8009d58:	08031670 	.word	0x08031670
 8009d5c:	080334a0 	.word	0x080334a0
 8009d60:	200029fc 	.word	0x200029fc
 8009d64:	080335b4 	.word	0x080335b4
 8009d68:	080335c8 	.word	0x080335c8
 8009d6c:	08009cf5 	.word	0x08009cf5

08009d70 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable arialbd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_arialbd_20_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_20_4bpp()
{
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009d70:	4770      	bx	lr
	...

08009d74 <_Z23getFont_arialbd_20_4bppv>:
{
 8009d74:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009d76:	4d17      	ldr	r5, [pc, #92]	@ (8009dd4 <_Z23getFont_arialbd_20_4bppv+0x60>)
 8009d78:	682c      	ldr	r4, [r5, #0]
 8009d7a:	f014 0401 	ands.w	r4, r4, #1
{
 8009d7e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009d80:	f3bf 8f5b 	dmb	ish
 8009d84:	d122      	bne.n	8009dcc <_Z23getFont_arialbd_20_4bppv+0x58>
 8009d86:	4628      	mov	r0, r5
 8009d88:	f023 fa37 	bl	802d1fa <__cxa_guard_acquire>
 8009d8c:	b1f0      	cbz	r0, 8009dcc <_Z23getFont_arialbd_20_4bppv+0x58>
 8009d8e:	4b12      	ldr	r3, [pc, #72]	@ (8009dd8 <_Z23getFont_arialbd_20_4bppv+0x64>)
 8009d90:	4912      	ldr	r1, [pc, #72]	@ (8009ddc <_Z23getFont_arialbd_20_4bppv+0x68>)
 8009d92:	4813      	ldr	r0, [pc, #76]	@ (8009de0 <_Z23getFont_arialbd_20_4bppv+0x6c>)
 8009d94:	940a      	str	r4, [sp, #40]	@ 0x28
 8009d96:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 8009d9a:	233f      	movs	r3, #63	@ 0x3f
 8009d9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8009d9e:	4b11      	ldr	r3, [pc, #68]	@ (8009de4 <_Z23getFont_arialbd_20_4bppv+0x70>)
 8009da0:	9308      	str	r3, [sp, #32]
 8009da2:	4b11      	ldr	r3, [pc, #68]	@ (8009de8 <_Z23getFont_arialbd_20_4bppv+0x74>)
 8009da4:	9405      	str	r4, [sp, #20]
 8009da6:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8009daa:	2201      	movs	r2, #1
 8009dac:	2304      	movs	r3, #4
 8009dae:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8009db2:	2314      	movs	r3, #20
 8009db4:	9300      	str	r3, [sp, #0]
 8009db6:	220b      	movs	r2, #11
 8009db8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8009dbc:	f7fc fda8 	bl	8006910 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009dc0:	480a      	ldr	r0, [pc, #40]	@ (8009dec <_Z23getFont_arialbd_20_4bppv+0x78>)
 8009dc2:	f024 f973 	bl	802e0ac <atexit>
 8009dc6:	4628      	mov	r0, r5
 8009dc8:	f023 fa23 	bl	802d212 <__cxa_guard_release>
    return arialbd_20_4bpp;
}
 8009dcc:	4804      	ldr	r0, [pc, #16]	@ (8009de0 <_Z23getFont_arialbd_20_4bppv+0x6c>)
 8009dce:	b00f      	add	sp, #60	@ 0x3c
 8009dd0:	bd30      	pop	{r4, r5, pc}
 8009dd2:	bf00      	nop
 8009dd4:	20002a28 	.word	0x20002a28
 8009dd8:	08031670 	.word	0x08031670
 8009ddc:	080334b0 	.word	0x080334b0
 8009de0:	20002a2c 	.word	0x20002a2c
 8009de4:	080335b8 	.word	0x080335b8
 8009de8:	080335cc 	.word	0x080335cc
 8009dec:	08009d71 	.word	0x08009d71

08009df0 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable arialbd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_arialbd_35_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_35_4bpp()
{
    static touchgfx::GeneratedFont arialbd_35_4bpp(glyphs_arialbd_35_4bpp, 5, 35, 35, 0, 0, 4, 1, 0, 0, unicodes_arialbd_35_4bpp, kerning_arialbd_35_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009df0:	4770      	bx	lr
	...

08009df4 <_Z23getFont_arialbd_35_4bppv>:
{
 8009df4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_35_4bpp(glyphs_arialbd_35_4bpp, 5, 35, 35, 0, 0, 4, 1, 0, 0, unicodes_arialbd_35_4bpp, kerning_arialbd_35_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009df6:	4d17      	ldr	r5, [pc, #92]	@ (8009e54 <_Z23getFont_arialbd_35_4bppv+0x60>)
 8009df8:	682c      	ldr	r4, [r5, #0]
 8009dfa:	f014 0401 	ands.w	r4, r4, #1
{
 8009dfe:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_35_4bpp(glyphs_arialbd_35_4bpp, 5, 35, 35, 0, 0, 4, 1, 0, 0, unicodes_arialbd_35_4bpp, kerning_arialbd_35_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 8009e00:	f3bf 8f5b 	dmb	ish
 8009e04:	d122      	bne.n	8009e4c <_Z23getFont_arialbd_35_4bppv+0x58>
 8009e06:	4628      	mov	r0, r5
 8009e08:	f023 f9f7 	bl	802d1fa <__cxa_guard_acquire>
 8009e0c:	b1f0      	cbz	r0, 8009e4c <_Z23getFont_arialbd_35_4bppv+0x58>
 8009e0e:	4b12      	ldr	r3, [pc, #72]	@ (8009e58 <_Z23getFont_arialbd_35_4bppv+0x64>)
 8009e10:	4912      	ldr	r1, [pc, #72]	@ (8009e5c <_Z23getFont_arialbd_35_4bppv+0x68>)
 8009e12:	4813      	ldr	r0, [pc, #76]	@ (8009e60 <_Z23getFont_arialbd_35_4bppv+0x6c>)
 8009e14:	940a      	str	r4, [sp, #40]	@ 0x28
 8009e16:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 8009e1a:	233f      	movs	r3, #63	@ 0x3f
 8009e1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8009e1e:	4b11      	ldr	r3, [pc, #68]	@ (8009e64 <_Z23getFont_arialbd_35_4bppv+0x70>)
 8009e20:	9308      	str	r3, [sp, #32]
 8009e22:	4b11      	ldr	r3, [pc, #68]	@ (8009e68 <_Z23getFont_arialbd_35_4bppv+0x74>)
 8009e24:	9405      	str	r4, [sp, #20]
 8009e26:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8009e2a:	2201      	movs	r2, #1
 8009e2c:	2304      	movs	r3, #4
 8009e2e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8009e32:	2323      	movs	r3, #35	@ 0x23
 8009e34:	9300      	str	r3, [sp, #0]
 8009e36:	2205      	movs	r2, #5
 8009e38:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8009e3c:	f7fc fd68 	bl	8006910 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009e40:	480a      	ldr	r0, [pc, #40]	@ (8009e6c <_Z23getFont_arialbd_35_4bppv+0x78>)
 8009e42:	f024 f933 	bl	802e0ac <atexit>
 8009e46:	4628      	mov	r0, r5
 8009e48:	f023 f9e3 	bl	802d212 <__cxa_guard_release>
    return arialbd_35_4bpp;
}
 8009e4c:	4804      	ldr	r0, [pc, #16]	@ (8009e60 <_Z23getFont_arialbd_35_4bppv+0x6c>)
 8009e4e:	b00f      	add	sp, #60	@ 0x3c
 8009e50:	bd30      	pop	{r4, r5, pc}
 8009e52:	bf00      	nop
 8009e54:	20002a58 	.word	0x20002a58
 8009e58:	08031670 	.word	0x08031670
 8009e5c:	0803354c 	.word	0x0803354c
 8009e60:	20002a5c 	.word	0x20002a5c
 8009e64:	080335bc 	.word	0x080335bc
 8009e68:	080335d0 	.word	0x080335d0
 8009e6c:	08009df1 	.word	0x08009df1

08009e70 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009e70:	4770      	bx	lr
	...

08009e74 <_Z23getFont_verdana_10_4bppv>:
{
 8009e74:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009e76:	4d16      	ldr	r5, [pc, #88]	@ (8009ed0 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8009e78:	682c      	ldr	r4, [r5, #0]
 8009e7a:	f014 0401 	ands.w	r4, r4, #1
{
 8009e7e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009e80:	f3bf 8f5b 	dmb	ish
 8009e84:	d120      	bne.n	8009ec8 <_Z23getFont_verdana_10_4bppv+0x54>
 8009e86:	4628      	mov	r0, r5
 8009e88:	f023 f9b7 	bl	802d1fa <__cxa_guard_acquire>
 8009e8c:	b1e0      	cbz	r0, 8009ec8 <_Z23getFont_verdana_10_4bppv+0x54>
 8009e8e:	233f      	movs	r3, #63	@ 0x3f
 8009e90:	9309      	str	r3, [sp, #36]	@ 0x24
 8009e92:	4b10      	ldr	r3, [pc, #64]	@ (8009ed4 <_Z23getFont_verdana_10_4bppv+0x60>)
 8009e94:	9308      	str	r3, [sp, #32]
 8009e96:	4b10      	ldr	r3, [pc, #64]	@ (8009ed8 <_Z23getFont_verdana_10_4bppv+0x64>)
 8009e98:	4910      	ldr	r1, [pc, #64]	@ (8009edc <_Z23getFont_verdana_10_4bppv+0x68>)
 8009e9a:	4811      	ldr	r0, [pc, #68]	@ (8009ee0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8009e9c:	940a      	str	r4, [sp, #40]	@ 0x28
 8009e9e:	2201      	movs	r2, #1
 8009ea0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8009ea4:	2304      	movs	r3, #4
 8009ea6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8009eaa:	230a      	movs	r3, #10
 8009eac:	9300      	str	r3, [sp, #0]
 8009eae:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8009eb2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8009eb6:	9405      	str	r4, [sp, #20]
 8009eb8:	f7fc fd2a 	bl	8006910 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009ebc:	4809      	ldr	r0, [pc, #36]	@ (8009ee4 <_Z23getFont_verdana_10_4bppv+0x70>)
 8009ebe:	f024 f8f5 	bl	802e0ac <atexit>
 8009ec2:	4628      	mov	r0, r5
 8009ec4:	f023 f9a5 	bl	802d212 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8009ec8:	4805      	ldr	r0, [pc, #20]	@ (8009ee0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8009eca:	b00f      	add	sp, #60	@ 0x3c
 8009ecc:	bd30      	pop	{r4, r5, pc}
 8009ece:	bf00      	nop
 8009ed0:	20002a88 	.word	0x20002a88
 8009ed4:	080335c0 	.word	0x080335c0
 8009ed8:	080335d4 	.word	0x080335d4
 8009edc:	08033594 	.word	0x08033594
 8009ee0:	20002a8c 	.word	0x20002a8c
 8009ee4:	08009e71 	.word	0x08009e71

08009ee8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8009ee8:	4770      	bx	lr
	...

08009eec <_Z23getFont_verdana_20_4bppv>:
{
 8009eec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8009eee:	4d16      	ldr	r5, [pc, #88]	@ (8009f48 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8009ef0:	682c      	ldr	r4, [r5, #0]
 8009ef2:	f014 0401 	ands.w	r4, r4, #1
{
 8009ef6:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8009ef8:	f3bf 8f5b 	dmb	ish
 8009efc:	d120      	bne.n	8009f40 <_Z23getFont_verdana_20_4bppv+0x54>
 8009efe:	4628      	mov	r0, r5
 8009f00:	f023 f97b 	bl	802d1fa <__cxa_guard_acquire>
 8009f04:	b1e0      	cbz	r0, 8009f40 <_Z23getFont_verdana_20_4bppv+0x54>
 8009f06:	233f      	movs	r3, #63	@ 0x3f
 8009f08:	9309      	str	r3, [sp, #36]	@ 0x24
 8009f0a:	4b10      	ldr	r3, [pc, #64]	@ (8009f4c <_Z23getFont_verdana_20_4bppv+0x60>)
 8009f0c:	9308      	str	r3, [sp, #32]
 8009f0e:	4b10      	ldr	r3, [pc, #64]	@ (8009f50 <_Z23getFont_verdana_20_4bppv+0x64>)
 8009f10:	4910      	ldr	r1, [pc, #64]	@ (8009f54 <_Z23getFont_verdana_20_4bppv+0x68>)
 8009f12:	4811      	ldr	r0, [pc, #68]	@ (8009f58 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8009f14:	940a      	str	r4, [sp, #40]	@ 0x28
 8009f16:	2201      	movs	r2, #1
 8009f18:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8009f1c:	2304      	movs	r3, #4
 8009f1e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8009f22:	2314      	movs	r3, #20
 8009f24:	9300      	str	r3, [sp, #0]
 8009f26:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8009f2a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8009f2e:	9405      	str	r4, [sp, #20]
 8009f30:	f7fc fcee 	bl	8006910 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009f34:	4809      	ldr	r0, [pc, #36]	@ (8009f5c <_Z23getFont_verdana_20_4bppv+0x70>)
 8009f36:	f024 f8b9 	bl	802e0ac <atexit>
 8009f3a:	4628      	mov	r0, r5
 8009f3c:	f023 f969 	bl	802d212 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8009f40:	4805      	ldr	r0, [pc, #20]	@ (8009f58 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8009f42:	b00f      	add	sp, #60	@ 0x3c
 8009f44:	bd30      	pop	{r4, r5, pc}
 8009f46:	bf00      	nop
 8009f48:	20002ab8 	.word	0x20002ab8
 8009f4c:	080335c4 	.word	0x080335c4
 8009f50:	080335d8 	.word	0x080335d8
 8009f54:	080335a4 	.word	0x080335a4
 8009f58:	20002abc 	.word	0x20002abc
 8009f5c:	08009ee9 	.word	0x08009ee9

08009f60 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8009f60:	2000      	movs	r0, #0
 8009f62:	4770      	bx	lr

08009f64 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8009f64:	2000      	movs	r0, #0
 8009f66:	4770      	bx	lr

08009f68 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8009f68:	b40e      	push	{r1, r2, r3}
 8009f6a:	b503      	push	{r0, r1, lr}
 8009f6c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8009f6e:	2100      	movs	r1, #0
{
 8009f70:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8009f74:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8009f76:	f011 ff35 	bl	801bde4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8009f7a:	b002      	add	sp, #8
 8009f7c:	f85d eb04 	ldr.w	lr, [sp], #4
 8009f80:	b003      	add	sp, #12
 8009f82:	4770      	bx	lr

08009f84 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8009f84:	b40c      	push	{r2, r3}
 8009f86:	b507      	push	{r0, r1, r2, lr}
 8009f88:	ab04      	add	r3, sp, #16
 8009f8a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8009f8e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8009f90:	f011 ff28 	bl	801bde4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8009f94:	b003      	add	sp, #12
 8009f96:	f85d eb04 	ldr.w	lr, [sp], #4
 8009f9a:	b002      	add	sp, #8
 8009f9c:	4770      	bx	lr
	...

08009fa0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8009fa0:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8009fa2:	b510      	push	{r4, lr}
 8009fa4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8009fa6:	b373      	cbz	r3, 800a006 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8009fa8:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8009faa:	b92b      	cbnz	r3, 8009fb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8009fac:	4b18      	ldr	r3, [pc, #96]	@ (800a010 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8009fae:	4a19      	ldr	r2, [pc, #100]	@ (800a014 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8009fb0:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8009fb2:	4819      	ldr	r0, [pc, #100]	@ (800a018 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8009fb4:	f024 f85c 	bl	802e070 <__assert_func>
            return buffer[pos];
 8009fb8:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8009fba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8009fbe:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8009fc0:	b30b      	cbz	r3, 800a006 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8009fc2:	f013 fdb2 	bl	801db2a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8009fc6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8009fc8:	2b01      	cmp	r3, #1
 8009fca:	d803      	bhi.n	8009fd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8009fcc:	4b13      	ldr	r3, [pc, #76]	@ (800a01c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8009fce:	4a14      	ldr	r2, [pc, #80]	@ (800a020 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8009fd0:	21cb      	movs	r1, #203	@ 0xcb
 8009fd2:	e7ee      	b.n	8009fb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8009fd4:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8009fd6:	1c53      	adds	r3, r2, #1
 8009fd8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8009fda:	2b09      	cmp	r3, #9
 8009fdc:	4619      	mov	r1, r3
 8009fde:	bf88      	it	hi
 8009fe0:	f1a3 010a 	subhi.w	r1, r3, #10
 8009fe4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8009fe8:	f640 103f 	movw	r0, #2367	@ 0x93f
 8009fec:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8009fee:	4281      	cmp	r1, r0
 8009ff0:	d109      	bne.n	800a006 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8009ff2:	2b0a      	cmp	r3, #10
 8009ff4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8009ff8:	bf28      	it	cs
 8009ffa:	2300      	movcs	r3, #0
 8009ffc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a000:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 800a002:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 800a004:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a006:	4620      	mov	r0, r4
}
 800a008:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a00c:	f013 bc90 	b.w	801d930 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a010:	08030458 	.word	0x08030458
 800a014:	08030461 	.word	0x08030461
 800a018:	0803050c 	.word	0x0803050c
 800a01c:	08030556 	.word	0x08030556
 800a020:	08030564 	.word	0x08030564

0800a024 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a024:	f013 bc4b 	b.w	801d8be <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a028 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a028:	b510      	push	{r4, lr}
 800a02a:	b086      	sub	sp, #24
 800a02c:	ac02      	add	r4, sp, #8
 800a02e:	e884 0006 	stmia.w	r4, {r1, r2}
 800a032:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a034:	ab0a      	add	r3, sp, #40	@ 0x28
 800a036:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a038:	9301      	str	r3, [sp, #4]
 800a03a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a03c:	9300      	str	r3, [sp, #0]
 800a03e:	4621      	mov	r1, r4
 800a040:	9b08      	ldr	r3, [sp, #32]
 800a042:	f010 f9c9 	bl	801a3d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a046:	b006      	add	sp, #24
 800a048:	bd10      	pop	{r4, pc}
	...

0800a04c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a04c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a04e:	bb18      	cbnz	r0, 800a098 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a050:	4b12      	ldr	r3, [pc, #72]	@ (800a09c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a052:	4813      	ldr	r0, [pc, #76]	@ (800a0a0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a054:	681c      	ldr	r4, [r3, #0]
 800a056:	4913      	ldr	r1, [pc, #76]	@ (800a0a4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a058:	b1b4      	cbz	r4, 800a088 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a05a:	6822      	ldr	r2, [r4, #0]
 800a05c:	4422      	add	r2, r4
 800a05e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a060:	6862      	ldr	r2, [r4, #4]
 800a062:	4422      	add	r2, r4
 800a064:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a066:	68a2      	ldr	r2, [r4, #8]
 800a068:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a06a:	4b0f      	ldr	r3, [pc, #60]	@ (800a0a8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a06c:	2200      	movs	r2, #0
 800a06e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a070:	f000 f838 	bl	800a0e4 <_ZN17TypedTextDatabase8getFontsEv>
 800a074:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a076:	f000 f833 	bl	800a0e0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a07a:	4b0c      	ldr	r3, [pc, #48]	@ (800a0ac <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a07c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a07e:	4b0c      	ldr	r3, [pc, #48]	@ (800a0b0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a080:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a082:	4b0c      	ldr	r3, [pc, #48]	@ (800a0b4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a084:	8018      	strh	r0, [r3, #0]
    }
}
 800a086:	e007      	b.n	800a098 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a088:	4b0b      	ldr	r3, [pc, #44]	@ (800a0b8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a08a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a08c:	4b0b      	ldr	r3, [pc, #44]	@ (800a0bc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a08e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a090:	4b0b      	ldr	r3, [pc, #44]	@ (800a0c0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a092:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a094:	2c00      	cmp	r4, #0
 800a096:	d1e8      	bne.n	800a06a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a098:	bd38      	pop	{r3, r4, r5, pc}
 800a09a:	bf00      	nop
 800a09c:	20002af4 	.word	0x20002af4
 800a0a0:	20002aec 	.word	0x20002aec
 800a0a4:	20002ae8 	.word	0x20002ae8
 800a0a8:	20002af0 	.word	0x20002af0
 800a0ac:	200138dc 	.word	0x200138dc
 800a0b0:	200138e4 	.word	0x200138e4
 800a0b4:	200138e0 	.word	0x200138e0
 800a0b8:	0803365c 	.word	0x0803365c
 800a0bc:	080335dc 	.word	0x080335dc
 800a0c0:	080336dc 	.word	0x080336dc

0800a0c4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a0c4:	4b04      	ldr	r3, [pc, #16]	@ (800a0d8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a0c6:	681b      	ldr	r3, [r3, #0]
 800a0c8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a0cc:	4b03      	ldr	r3, [pc, #12]	@ (800a0dc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a0ce:	681b      	ldr	r3, [r3, #0]
}
 800a0d0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a0d4:	4770      	bx	lr
 800a0d6:	bf00      	nop
 800a0d8:	20002ae8 	.word	0x20002ae8
 800a0dc:	20002aec 	.word	0x20002aec

0800a0e0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a0e0:	2020      	movs	r0, #32
 800a0e2:	4770      	bx	lr

0800a0e4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a0e4:	4800      	ldr	r0, [pc, #0]	@ (800a0e8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a0e6:	4770      	bx	lr
 800a0e8:	20002af8 	.word	0x20002af8

0800a0ec <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_arialbd_14_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a0ec:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800a0ee:	f7ff fefd 	bl	8009eec <_Z23getFont_verdana_20_4bppv>
};
 800a0f2:	4c07      	ldr	r4, [pc, #28]	@ (800a110 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 800a0f4:	6020      	str	r0, [r4, #0]
    &(getFont_arialbd_20_4bpp()),
 800a0f6:	f7ff fe3d 	bl	8009d74 <_Z23getFont_arialbd_20_4bppv>
};
 800a0fa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a0fc:	f7ff feba 	bl	8009e74 <_Z23getFont_verdana_10_4bppv>
};
 800a100:	60a0      	str	r0, [r4, #8]
    &(getFont_arialbd_35_4bpp()),
 800a102:	f7ff fe77 	bl	8009df4 <_Z23getFont_arialbd_35_4bppv>
};
 800a106:	60e0      	str	r0, [r4, #12]
    &(getFont_arialbd_14_4bpp())
 800a108:	f7ff fdf6 	bl	8009cf8 <_Z23getFont_arialbd_14_4bppv>
};
 800a10c:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 800a10e:	bd10      	pop	{r4, pc}
 800a110:	20002af8 	.word	0x20002af8

0800a114 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 800a114:	b510      	push	{r4, lr}
    pointArray = 0;
 800a116:	2400      	movs	r4, #0
 800a118:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 800a11a:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 800a11c:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 800a11e:	601c      	str	r4, [r3, #0]
}
 800a120:	bd10      	pop	{r4, pc}

0800a122 <_ZN21BackUpScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~BackUpScreenPresenter() {}
 800a122:	4770      	bx	lr

0800a124 <_ZThn4_N21BackUpScreenPresenterD1Ev>:
 800a124:	3804      	subs	r0, #4
 800a126:	4770      	bx	lr

0800a128 <_ZN21BackUpScreenPresenter10deactivateEv>:
}

void BackUpScreenPresenter::activate()
{

}
 800a128:	4770      	bx	lr

0800a12a <_ZN21BackUpScreenPresenterD0Ev>:
 800a12a:	b510      	push	{r4, lr}
 800a12c:	2110      	movs	r1, #16
 800a12e:	4604      	mov	r4, r0
 800a130:	f023 f861 	bl	802d1f6 <_ZdlPvj>
 800a134:	4620      	mov	r0, r4
 800a136:	bd10      	pop	{r4, pc}

0800a138 <_ZThn4_N21BackUpScreenPresenterD0Ev>:
 800a138:	f1a0 0004 	sub.w	r0, r0, #4
 800a13c:	e7f5      	b.n	800a12a <_ZN21BackUpScreenPresenterD0Ev>
	...

0800a140 <_ZN21BackUpScreenPresenterC1ER16BackUpScreenView>:
    ModelListener() : model(0) {}
 800a140:	2200      	movs	r2, #0
 800a142:	6082      	str	r2, [r0, #8]
    : view(v)
 800a144:	4a02      	ldr	r2, [pc, #8]	@ (800a150 <_ZN21BackUpScreenPresenterC1ER16BackUpScreenView+0x10>)
 800a146:	6002      	str	r2, [r0, #0]
 800a148:	3218      	adds	r2, #24
 800a14a:	6042      	str	r2, [r0, #4]
 800a14c:	60c1      	str	r1, [r0, #12]
}
 800a14e:	4770      	bx	lr
 800a150:	08031ad0 	.word	0x08031ad0

0800a154 <_ZN16BackUpScreenView14tearDownScreenEv>:
}

void BackUpScreenView::tearDownScreen()
{
    BackUpScreenViewBase::tearDownScreen();
}
 800a154:	4770      	bx	lr
	...

0800a158 <_ZN16BackUpScreenViewD1Ev>:

class BackUpScreenView : public BackUpScreenViewBase
{
public:
    BackUpScreenView();
    virtual ~BackUpScreenView() {}
 800a158:	b510      	push	{r4, lr}
 800a15a:	4b03      	ldr	r3, [pc, #12]	@ (800a168 <_ZN16BackUpScreenViewD1Ev+0x10>)
 800a15c:	6003      	str	r3, [r0, #0]
 800a15e:	4604      	mov	r4, r0
 800a160:	f7f8 fbf8 	bl	8002954 <_ZN20BackUpScreenViewBaseD1Ev>
 800a164:	4620      	mov	r0, r4
 800a166:	bd10      	pop	{r4, pc}
 800a168:	08031af8 	.word	0x08031af8

0800a16c <_ZN16BackUpScreenViewD0Ev>:
 800a16c:	b510      	push	{r4, lr}
 800a16e:	4604      	mov	r4, r0
 800a170:	f7ff fff2 	bl	800a158 <_ZN16BackUpScreenViewD1Ev>
 800a174:	4620      	mov	r0, r4
 800a176:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
 800a17a:	f023 f83c 	bl	802d1f6 <_ZdlPvj>
 800a17e:	4620      	mov	r0, r4
 800a180:	bd10      	pop	{r4, pc}
	...

0800a184 <_ZN16BackUpScreenViewC1Ev>:
BackUpScreenView::BackUpScreenView()
 800a184:	b510      	push	{r4, lr}
 800a186:	4604      	mov	r4, r0
 800a188:	f7f8 fcf0 	bl	8002b6c <_ZN20BackUpScreenViewBaseC1Ev>
 800a18c:	4b01      	ldr	r3, [pc, #4]	@ (800a194 <_ZN16BackUpScreenViewC1Ev+0x10>)
 800a18e:	6023      	str	r3, [r4, #0]
}
 800a190:	4620      	mov	r0, r4
 800a192:	bd10      	pop	{r4, pc}
 800a194:	08031af8 	.word	0x08031af8

0800a198 <_ZN16BackUpScreenView11setupScreenEv>:
    BackUpScreenViewBase::setupScreen();
 800a198:	f7f8 bbdd 	b.w	8002956 <_ZN20BackUpScreenViewBase11setupScreenEv>

0800a19c <_ZN19Character1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Character1Presenter() {}
 800a19c:	4770      	bx	lr

0800a19e <_ZThn4_N19Character1PresenterD1Ev>:
 800a19e:	3804      	subs	r0, #4
 800a1a0:	4770      	bx	lr

0800a1a2 <_ZN19Character1Presenter10deactivateEv>:
}

void Character1Presenter::activate()
{

}
 800a1a2:	4770      	bx	lr

0800a1a4 <_ZN19Character1PresenterD0Ev>:
 800a1a4:	b510      	push	{r4, lr}
 800a1a6:	2110      	movs	r1, #16
 800a1a8:	4604      	mov	r4, r0
 800a1aa:	f023 f824 	bl	802d1f6 <_ZdlPvj>
 800a1ae:	4620      	mov	r0, r4
 800a1b0:	bd10      	pop	{r4, pc}

0800a1b2 <_ZThn4_N19Character1PresenterD0Ev>:
 800a1b2:	f1a0 0004 	sub.w	r0, r0, #4
 800a1b6:	e7f5      	b.n	800a1a4 <_ZN19Character1PresenterD0Ev>

0800a1b8 <_ZN19Character1PresenterC1ER14Character1View>:
 800a1b8:	2200      	movs	r2, #0
 800a1ba:	6082      	str	r2, [r0, #8]
    : view(v)
 800a1bc:	4a02      	ldr	r2, [pc, #8]	@ (800a1c8 <_ZN19Character1PresenterC1ER14Character1View+0x10>)
 800a1be:	6002      	str	r2, [r0, #0]
 800a1c0:	3218      	adds	r2, #24
 800a1c2:	6042      	str	r2, [r0, #4]
 800a1c4:	60c1      	str	r1, [r0, #12]
}
 800a1c6:	4770      	bx	lr
 800a1c8:	08031b2c 	.word	0x08031b2c

0800a1cc <_ZN14Character1View14tearDownScreenEv>:
}

void Character1View::tearDownScreen()
{
    Character1ViewBase::tearDownScreen();
}
 800a1cc:	4770      	bx	lr
	...

0800a1d0 <_ZN14Character1ViewD1Ev>:

class Character1View : public Character1ViewBase
{
public:
    Character1View();
    virtual ~Character1View() {}
 800a1d0:	b510      	push	{r4, lr}
 800a1d2:	4b03      	ldr	r3, [pc, #12]	@ (800a1e0 <_ZN14Character1ViewD1Ev+0x10>)
 800a1d4:	6003      	str	r3, [r0, #0]
 800a1d6:	4604      	mov	r4, r0
 800a1d8:	f7f8 fe61 	bl	8002e9e <_ZN18Character1ViewBaseD1Ev>
 800a1dc:	4620      	mov	r0, r4
 800a1de:	bd10      	pop	{r4, pc}
 800a1e0:	08031b54 	.word	0x08031b54

0800a1e4 <_ZN14Character1ViewD0Ev>:
 800a1e4:	b510      	push	{r4, lr}
 800a1e6:	4604      	mov	r4, r0
 800a1e8:	f7ff fff2 	bl	800a1d0 <_ZN14Character1ViewD1Ev>
 800a1ec:	4620      	mov	r0, r4
 800a1ee:	f44f 7190 	mov.w	r1, #288	@ 0x120
 800a1f2:	f023 f800 	bl	802d1f6 <_ZdlPvj>
 800a1f6:	4620      	mov	r0, r4
 800a1f8:	bd10      	pop	{r4, pc}
	...

0800a1fc <_ZN14Character1ViewC1Ev>:
Character1View::Character1View()
 800a1fc:	b510      	push	{r4, lr}
 800a1fe:	4604      	mov	r4, r0
 800a200:	f7f8 fe84 	bl	8002f0c <_ZN18Character1ViewBaseC1Ev>
 800a204:	4b01      	ldr	r3, [pc, #4]	@ (800a20c <_ZN14Character1ViewC1Ev+0x10>)
 800a206:	6023      	str	r3, [r4, #0]
}
 800a208:	4620      	mov	r0, r4
 800a20a:	bd10      	pop	{r4, pc}
 800a20c:	08031b54 	.word	0x08031b54

0800a210 <_ZN14Character1View11setupScreenEv>:
    Character1ViewBase::setupScreen();
 800a210:	f7f8 be46 	b.w	8002ea0 <_ZN18Character1ViewBase11setupScreenEv>

0800a214 <_ZN18CharacterPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CharacterPresenter() {}
 800a214:	4770      	bx	lr

0800a216 <_ZThn4_N18CharacterPresenterD1Ev>:
 800a216:	3804      	subs	r0, #4
 800a218:	4770      	bx	lr

0800a21a <_ZN18CharacterPresenter10deactivateEv>:
}

void CharacterPresenter::activate()
{
    // Activation logic here
}
 800a21a:	4770      	bx	lr

0800a21c <_ZN18CharacterPresenterD0Ev>:
 800a21c:	b510      	push	{r4, lr}
 800a21e:	2110      	movs	r1, #16
 800a220:	4604      	mov	r4, r0
 800a222:	f022 ffe8 	bl	802d1f6 <_ZdlPvj>
 800a226:	4620      	mov	r0, r4
 800a228:	bd10      	pop	{r4, pc}

0800a22a <_ZThn4_N18CharacterPresenterD0Ev>:
 800a22a:	f1a0 0004 	sub.w	r0, r0, #4
 800a22e:	e7f5      	b.n	800a21c <_ZN18CharacterPresenterD0Ev>

0800a230 <_ZN18CharacterPresenterC1ER13CharacterView>:
 800a230:	2200      	movs	r2, #0
 800a232:	6082      	str	r2, [r0, #8]
    : view(v)
 800a234:	4a02      	ldr	r2, [pc, #8]	@ (800a240 <_ZN18CharacterPresenterC1ER13CharacterView+0x10>)
 800a236:	6002      	str	r2, [r0, #0]
 800a238:	3218      	adds	r2, #24
 800a23a:	6042      	str	r2, [r0, #4]
 800a23c:	60c1      	str	r1, [r0, #12]
}
 800a23e:	4770      	bx	lr
 800a240:	08031b88 	.word	0x08031b88

0800a244 <_ZN13CharacterView14tearDownScreenEv>:
}

void CharacterView::tearDownScreen()
{
    CharacterViewBase::tearDownScreen();
}
 800a244:	4770      	bx	lr
	...

0800a248 <_ZN13CharacterViewD1Ev>:

class CharacterView : public CharacterViewBase
{
public:
    CharacterView();
    virtual ~CharacterView() {}
 800a248:	b510      	push	{r4, lr}
 800a24a:	4b03      	ldr	r3, [pc, #12]	@ (800a258 <_ZN13CharacterViewD1Ev+0x10>)
 800a24c:	6003      	str	r3, [r0, #0]
 800a24e:	4604      	mov	r4, r0
 800a250:	f7f8 ff21 	bl	8003096 <_ZN17CharacterViewBaseD1Ev>
 800a254:	4620      	mov	r0, r4
 800a256:	bd10      	pop	{r4, pc}
 800a258:	08031bb0 	.word	0x08031bb0

0800a25c <_ZN13CharacterViewD0Ev>:
 800a25c:	b510      	push	{r4, lr}
 800a25e:	4604      	mov	r4, r0
 800a260:	f7ff fff2 	bl	800a248 <_ZN13CharacterViewD1Ev>
 800a264:	4620      	mov	r0, r4
 800a266:	f44f 7116 	mov.w	r1, #600	@ 0x258
 800a26a:	f022 ffc4 	bl	802d1f6 <_ZdlPvj>
 800a26e:	4620      	mov	r0, r4
 800a270:	bd10      	pop	{r4, pc}
	...

0800a274 <_ZN13CharacterViewC1Ev>:
CharacterView::CharacterView() : currentCharacterIndex(NARUTO)
 800a274:	b510      	push	{r4, lr}
 800a276:	4604      	mov	r4, r0
 800a278:	f7f8 ff44 	bl	8003104 <_ZN17CharacterViewBaseC1Ev>
 800a27c:	4b03      	ldr	r3, [pc, #12]	@ (800a28c <_ZN13CharacterViewC1Ev+0x18>)
 800a27e:	6023      	str	r3, [r4, #0]
 800a280:	2300      	movs	r3, #0
 800a282:	f8c4 3254 	str.w	r3, [r4, #596]	@ 0x254
}
 800a286:	4620      	mov	r0, r4
 800a288:	bd10      	pop	{r4, pc}
 800a28a:	bf00      	nop
 800a28c:	08031bb0 	.word	0x08031bb0

0800a290 <_ZN13CharacterView17hideAllCharactersEv>:
 800a290:	2300      	movs	r3, #0
 800a292:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800a296:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800a29a:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 800a29e:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800a2a2:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
    naruto.setVisible(false);
    sponge.setVisible(false);
    sakura.setVisible(false);
    sakura_lock.setVisible(false);
    sponge_lock.setVisible(false);
}
 800a2a6:	4770      	bx	lr

0800a2a8 <_ZN13CharacterView7testLEDEv>:

void CharacterView::testLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800a2a8:	4802      	ldr	r0, [pc, #8]	@ (800a2b4 <_ZN13CharacterView7testLEDEv+0xc>)
 800a2aa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800a2ae:	f006 baa8 	b.w	8010802 <HAL_GPIO_TogglePin>
 800a2b2:	bf00      	nop
 800a2b4:	40021800 	.word	0x40021800

0800a2b8 <_ZN13CharacterView11setupScreenEv>:
{
 800a2b8:	b510      	push	{r4, lr}
 800a2ba:	4604      	mov	r4, r0
    CharacterViewBase::setupScreen();
 800a2bc:	f7f8 feec 	bl	8003098 <_ZN17CharacterViewBase11setupScreenEv>
    hideAllCharacters();
 800a2c0:	4620      	mov	r0, r4
 800a2c2:	f7ff ffe5 	bl	800a290 <_ZN13CharacterView17hideAllCharactersEv>
 800a2c6:	2301      	movs	r3, #1
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 800a2c8:	1d20      	adds	r0, r4, #4
 800a2ca:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 800a2ce:	f011 feb3 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    testLED();
 800a2d2:	4620      	mov	r0, r4
}
 800a2d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    testLED();
 800a2d8:	f7ff bfe6 	b.w	800a2a8 <_ZN13CharacterView7testLEDEv>

0800a2dc <_ZN13CharacterView16leftArrowClickedEv>:
{
 800a2dc:	b510      	push	{r4, lr}
 800a2de:	4604      	mov	r4, r0
    testLED();
 800a2e0:	f7ff ffe2 	bl	800a2a8 <_ZN13CharacterView7testLEDEv>
    currentCharacterIndex--;
 800a2e4:	f8d4 2254 	ldr.w	r2, [r4, #596]	@ 0x254
        currentCharacterIndex = CHARACTER_COUNT - 1;
 800a2e8:	3a01      	subs	r2, #1
 800a2ea:	bf48      	it	mi
 800a2ec:	2202      	movmi	r2, #2
 800a2ee:	f8c4 2254 	str.w	r2, [r4, #596]	@ 0x254
    hideAllCharacters();
 800a2f2:	4620      	mov	r0, r4
 800a2f4:	f7ff ffcc 	bl	800a290 <_ZN13CharacterView17hideAllCharactersEv>
    switch (currentCharacterIndex) {
 800a2f8:	2a01      	cmp	r2, #1
 800a2fa:	d00a      	beq.n	800a312 <_ZN13CharacterView16leftArrowClickedEv+0x36>
 800a2fc:	2a02      	cmp	r2, #2
 800a2fe:	d011      	beq.n	800a324 <_ZN13CharacterView16leftArrowClickedEv+0x48>
 800a300:	b912      	cbnz	r2, 800a308 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
 800a302:	2301      	movs	r3, #1
 800a304:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 800a308:	1d20      	adds	r0, r4, #4
}
 800a30a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a30e:	f011 be93 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (sakuraUnlocked) {
 800a312:	4b09      	ldr	r3, [pc, #36]	@ (800a338 <_ZN13CharacterView16leftArrowClickedEv+0x5c>)
 800a314:	781b      	ldrb	r3, [r3, #0]
 800a316:	b113      	cbz	r3, 800a31e <_ZN13CharacterView16leftArrowClickedEv+0x42>
 800a318:	f884 2115 	strb.w	r2, [r4, #277]	@ 0x115
    }
 800a31c:	e7f4      	b.n	800a308 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
        visible = vis;
 800a31e:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
    }
 800a322:	e7f1      	b.n	800a308 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
            if (spongeUnlocked) {
 800a324:	4b05      	ldr	r3, [pc, #20]	@ (800a33c <_ZN13CharacterView16leftArrowClickedEv+0x60>)
 800a326:	781a      	ldrb	r2, [r3, #0]
 800a328:	2301      	movs	r3, #1
 800a32a:	b112      	cbz	r2, 800a332 <_ZN13CharacterView16leftArrowClickedEv+0x56>
        visible = vis;
 800a32c:	f884 30e9 	strb.w	r3, [r4, #233]	@ 0xe9
    }
 800a330:	e7ea      	b.n	800a308 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
        visible = vis;
 800a332:	f884 316d 	strb.w	r3, [r4, #365]	@ 0x16d
    }
 800a336:	e7e7      	b.n	800a308 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
 800a338:	20002b11 	.word	0x20002b11
 800a33c:	20002b10 	.word	0x20002b10

0800a340 <_ZN13CharacterView17rightArrowClickedEv>:
{
 800a340:	b510      	push	{r4, lr}
 800a342:	4604      	mov	r4, r0
    testLED();
 800a344:	f7ff ffb0 	bl	800a2a8 <_ZN13CharacterView7testLEDEv>
    currentCharacterIndex++;
 800a348:	f8d4 2254 	ldr.w	r2, [r4, #596]	@ 0x254
 800a34c:	3201      	adds	r2, #1
        currentCharacterIndex = 0;
 800a34e:	2a03      	cmp	r2, #3
 800a350:	bfa8      	it	ge
 800a352:	2200      	movge	r2, #0
 800a354:	f8c4 2254 	str.w	r2, [r4, #596]	@ 0x254
    hideAllCharacters();
 800a358:	4620      	mov	r0, r4
 800a35a:	f7ff ff99 	bl	800a290 <_ZN13CharacterView17hideAllCharactersEv>
    switch (currentCharacterIndex) {
 800a35e:	2a01      	cmp	r2, #1
 800a360:	d00a      	beq.n	800a378 <_ZN13CharacterView17rightArrowClickedEv+0x38>
 800a362:	2a02      	cmp	r2, #2
 800a364:	d011      	beq.n	800a38a <_ZN13CharacterView17rightArrowClickedEv+0x4a>
 800a366:	b912      	cbnz	r2, 800a36e <_ZN13CharacterView17rightArrowClickedEv+0x2e>
        visible = vis;
 800a368:	2301      	movs	r3, #1
 800a36a:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 800a36e:	1d20      	adds	r0, r4, #4
}
 800a370:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a374:	f011 be60 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (sakuraUnlocked) {
 800a378:	4b09      	ldr	r3, [pc, #36]	@ (800a3a0 <_ZN13CharacterView17rightArrowClickedEv+0x60>)
 800a37a:	781b      	ldrb	r3, [r3, #0]
 800a37c:	b113      	cbz	r3, 800a384 <_ZN13CharacterView17rightArrowClickedEv+0x44>
 800a37e:	f884 2115 	strb.w	r2, [r4, #277]	@ 0x115
    }
 800a382:	e7f4      	b.n	800a36e <_ZN13CharacterView17rightArrowClickedEv+0x2e>
        visible = vis;
 800a384:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
    }
 800a388:	e7f1      	b.n	800a36e <_ZN13CharacterView17rightArrowClickedEv+0x2e>
            if (spongeUnlocked) {
 800a38a:	4b06      	ldr	r3, [pc, #24]	@ (800a3a4 <_ZN13CharacterView17rightArrowClickedEv+0x64>)
 800a38c:	781a      	ldrb	r2, [r3, #0]
 800a38e:	2301      	movs	r3, #1
 800a390:	b112      	cbz	r2, 800a398 <_ZN13CharacterView17rightArrowClickedEv+0x58>
        visible = vis;
 800a392:	f884 30e9 	strb.w	r3, [r4, #233]	@ 0xe9
    }
 800a396:	e7ea      	b.n	800a36e <_ZN13CharacterView17rightArrowClickedEv+0x2e>
        visible = vis;
 800a398:	f884 316d 	strb.w	r3, [r4, #365]	@ 0x16d
    }
 800a39c:	e7e7      	b.n	800a36e <_ZN13CharacterView17rightArrowClickedEv+0x2e>
 800a39e:	bf00      	nop
 800a3a0:	20002b11 	.word	0x20002b11
 800a3a4:	20002b10 	.word	0x20002b10

0800a3a8 <_ZN13CharacterView10testUnlockEv>:
void CharacterView::testUnlock()
{
    // Test function: Touch giữa màn hình để unlock characters
    static int unlockStep = 0;

    switch (unlockStep) {
 800a3a8:	4a20      	ldr	r2, [pc, #128]	@ (800a42c <_ZN13CharacterView10testUnlockEv+0x84>)
 800a3aa:	4921      	ldr	r1, [pc, #132]	@ (800a430 <_ZN13CharacterView10testUnlockEv+0x88>)
 800a3ac:	6813      	ldr	r3, [r2, #0]
 800a3ae:	2b01      	cmp	r3, #1
{
 800a3b0:	b510      	push	{r4, lr}
 800a3b2:	4c20      	ldr	r4, [pc, #128]	@ (800a434 <_ZN13CharacterView10testUnlockEv+0x8c>)
    switch (unlockStep) {
 800a3b4:	d016      	beq.n	800a3e4 <_ZN13CharacterView10testUnlockEv+0x3c>
 800a3b6:	2b02      	cmp	r3, #2
 800a3b8:	d017      	beq.n	800a3ea <_ZN13CharacterView10testUnlockEv+0x42>
 800a3ba:	b913      	cbnz	r3, 800a3c2 <_ZN13CharacterView10testUnlockEv+0x1a>
    void leftArrowClicked();
    void rightArrowClicked();

public:
    // Static methods to unlock characters (call from GameScreen)
    static void unlockSakura() { sakuraUnlocked = true; }
 800a3bc:	2301      	movs	r3, #1
 800a3be:	7023      	strb	r3, [r4, #0]
            unlockStep = 1;
            break;
        case 1:
            // Second touch: unlock Sponge
            unlockSponge();
            unlockStep = 2;
 800a3c0:	6013      	str	r3, [r2, #0]
            currentCharacterIndex = NARUTO;
            break;
    }

    // Update display after unlock change
    hideAllCharacters();
 800a3c2:	f7ff ff65 	bl	800a290 <_ZN13CharacterView17hideAllCharactersEv>

    // Show current character if unlocked
    if (currentCharacterIndex == NARUTO) {
 800a3c6:	f8d0 3254 	ldr.w	r3, [r0, #596]	@ 0x254
        naruto.setVisible(true);
    } else if (currentCharacterIndex == SAKURA && sakuraUnlocked) {
 800a3ca:	7822      	ldrb	r2, [r4, #0]
        sakura.setVisible(true);
    } else if (currentCharacterIndex == SPONGE && spongeUnlocked) {
 800a3cc:	7809      	ldrb	r1, [r1, #0]
    if (currentCharacterIndex == NARUTO) {
 800a3ce:	b323      	cbz	r3, 800a41a <_ZN13CharacterView10testUnlockEv+0x72>
    } else if (currentCharacterIndex == SAKURA && sakuraUnlocked) {
 800a3d0:	2b01      	cmp	r3, #1
 800a3d2:	d111      	bne.n	800a3f8 <_ZN13CharacterView10testUnlockEv+0x50>
 800a3d4:	b1f2      	cbz	r2, 800a414 <_ZN13CharacterView10testUnlockEv+0x6c>
        visible = vis;
 800a3d6:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
        naruto.setVisible(true);
    }

    // Always show lock images for locked characters
    if (!sakuraUnlocked) sakura_lock.setVisible(true);
    if (!spongeUnlocked) sponge_lock.setVisible(true);
 800a3da:	b9b1      	cbnz	r1, 800a40a <_ZN13CharacterView10testUnlockEv+0x62>
 800a3dc:	2301      	movs	r3, #1
 800a3de:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
    }
 800a3e2:	e012      	b.n	800a40a <_ZN13CharacterView10testUnlockEv+0x62>
    static void unlockSponge() { spongeUnlocked = true; }
 800a3e4:	700b      	strb	r3, [r1, #0]
            unlockStep = 2;
 800a3e6:	2302      	movs	r3, #2
 800a3e8:	e7ea      	b.n	800a3c0 <_ZN13CharacterView10testUnlockEv+0x18>
    static void resetProgress() { sakuraUnlocked = false; spongeUnlocked = false; }
 800a3ea:	2300      	movs	r3, #0
 800a3ec:	7023      	strb	r3, [r4, #0]
 800a3ee:	700b      	strb	r3, [r1, #0]
            unlockStep = 0;
 800a3f0:	6013      	str	r3, [r2, #0]
            currentCharacterIndex = NARUTO;
 800a3f2:	f8c0 3254 	str.w	r3, [r0, #596]	@ 0x254
            break;
 800a3f6:	e7e4      	b.n	800a3c2 <_ZN13CharacterView10testUnlockEv+0x1a>
    } else if (currentCharacterIndex == SPONGE && spongeUnlocked) {
 800a3f8:	2b02      	cmp	r3, #2
 800a3fa:	d10b      	bne.n	800a414 <_ZN13CharacterView10testUnlockEv+0x6c>
 800a3fc:	b151      	cbz	r1, 800a414 <_ZN13CharacterView10testUnlockEv+0x6c>
        visible = vis;
 800a3fe:	2301      	movs	r3, #1
 800a400:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
    if (!sakuraUnlocked) sakura_lock.setVisible(true);
 800a404:	b90a      	cbnz	r2, 800a40a <_ZN13CharacterView10testUnlockEv+0x62>
 800a406:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141

    invalidate();
}
 800a40a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a40e:	3004      	adds	r0, #4
 800a410:	f011 be12 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        currentCharacterIndex = NARUTO;
 800a414:	2300      	movs	r3, #0
 800a416:	f8c0 3254 	str.w	r3, [r0, #596]	@ 0x254
 800a41a:	2301      	movs	r3, #1
 800a41c:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
    if (!sakuraUnlocked) sakura_lock.setVisible(true);
 800a420:	2a00      	cmp	r2, #0
 800a422:	d1da      	bne.n	800a3da <_ZN13CharacterView10testUnlockEv+0x32>
 800a424:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
    }
 800a428:	e7d7      	b.n	800a3da <_ZN13CharacterView10testUnlockEv+0x32>
 800a42a:	bf00      	nop
 800a42c:	20002b0c 	.word	0x20002b0c
 800a430:	20002b10 	.word	0x20002b10
 800a434:	20002b11 	.word	0x20002b11

0800a438 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800a438:	b538      	push	{r3, r4, r5, lr}
 800a43a:	460d      	mov	r5, r1
 800a43c:	4604      	mov	r4, r0
    testLED();
 800a43e:	f7ff ff33 	bl	800a2a8 <_ZN13CharacterView7testLEDEv>
    if (clickX >= 80 && clickX <= 160 && clickY >= 250 && clickY <= 300) {
 800a442:	88ea      	ldrh	r2, [r5, #6]
        return clickY;
 800a444:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800a448:	f1a2 0150 	sub.w	r1, r2, #80	@ 0x50
 800a44c:	2950      	cmp	r1, #80	@ 0x50
 800a44e:	d808      	bhi.n	800a462 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x2a>
 800a450:	3bfa      	subs	r3, #250	@ 0xfa
 800a452:	b29b      	uxth	r3, r3
 800a454:	2b32      	cmp	r3, #50	@ 0x32
 800a456:	d81c      	bhi.n	800a492 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
        testUnlock();
 800a458:	4620      	mov	r0, r4
}
 800a45a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        testUnlock();
 800a45e:	f7ff bfa3 	b.w	800a3a8 <_ZN13CharacterView10testUnlockEv>
    if (clickX >= 197 && clickX <= 239 && clickY >= 135 && clickY <= 189)
 800a462:	f1a2 01c5 	sub.w	r1, r2, #197	@ 0xc5
 800a466:	292a      	cmp	r1, #42	@ 0x2a
 800a468:	d808      	bhi.n	800a47c <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x44>
 800a46a:	3b87      	subs	r3, #135	@ 0x87
 800a46c:	b29b      	uxth	r3, r3
 800a46e:	2b36      	cmp	r3, #54	@ 0x36
 800a470:	d80f      	bhi.n	800a492 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
        rightArrowClicked();
 800a472:	4620      	mov	r0, r4
}
 800a474:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        rightArrowClicked();
 800a478:	f7ff bf62 	b.w	800a340 <_ZN13CharacterView17rightArrowClickedEv>
    if (clickX >= 0 && clickX <= 42 && clickY >= 135 && clickY <= 189)
 800a47c:	2a2a      	cmp	r2, #42	@ 0x2a
 800a47e:	d808      	bhi.n	800a492 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
 800a480:	3b87      	subs	r3, #135	@ 0x87
 800a482:	b29b      	uxth	r3, r3
 800a484:	2b36      	cmp	r3, #54	@ 0x36
 800a486:	d804      	bhi.n	800a492 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
        leftArrowClicked();
 800a488:	4620      	mov	r0, r4
}
 800a48a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        leftArrowClicked();
 800a48e:	f7ff bf25 	b.w	800a2dc <_ZN13CharacterView16leftArrowClickedEv>
    CharacterViewBase::handleClickEvent(evt);
 800a492:	4629      	mov	r1, r5
 800a494:	4620      	mov	r0, r4
}
 800a496:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    CharacterViewBase::handleClickEvent(evt);
 800a49a:	f012 bb2b 	b.w	801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>

0800a49e <_ZN20Character_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Character_2Presenter() {}
 800a49e:	4770      	bx	lr

0800a4a0 <_ZThn4_N20Character_2PresenterD1Ev>:
 800a4a0:	3804      	subs	r0, #4
 800a4a2:	4770      	bx	lr

0800a4a4 <_ZN20Character_2Presenter10deactivateEv>:
}

void Character_2Presenter::activate()
{

}
 800a4a4:	4770      	bx	lr

0800a4a6 <_ZN20Character_2PresenterD0Ev>:
 800a4a6:	b510      	push	{r4, lr}
 800a4a8:	2110      	movs	r1, #16
 800a4aa:	4604      	mov	r4, r0
 800a4ac:	f022 fea3 	bl	802d1f6 <_ZdlPvj>
 800a4b0:	4620      	mov	r0, r4
 800a4b2:	bd10      	pop	{r4, pc}

0800a4b4 <_ZThn4_N20Character_2PresenterD0Ev>:
 800a4b4:	f1a0 0004 	sub.w	r0, r0, #4
 800a4b8:	e7f5      	b.n	800a4a6 <_ZN20Character_2PresenterD0Ev>
	...

0800a4bc <_ZN20Character_2PresenterC1ER15Character_2View>:
 800a4bc:	2200      	movs	r2, #0
 800a4be:	6082      	str	r2, [r0, #8]
    : view(v)
 800a4c0:	4a02      	ldr	r2, [pc, #8]	@ (800a4cc <_ZN20Character_2PresenterC1ER15Character_2View+0x10>)
 800a4c2:	6002      	str	r2, [r0, #0]
 800a4c4:	3218      	adds	r2, #24
 800a4c6:	6042      	str	r2, [r0, #4]
 800a4c8:	60c1      	str	r1, [r0, #12]
}
 800a4ca:	4770      	bx	lr
 800a4cc:	08031be4 	.word	0x08031be4

0800a4d0 <_ZN15Character_2View14tearDownScreenEv>:
}

void Character_2View::tearDownScreen()
{
    Character_2ViewBase::tearDownScreen();
}
 800a4d0:	4770      	bx	lr
	...

0800a4d4 <_ZN15Character_2ViewD1Ev>:

class Character_2View : public Character_2ViewBase
{
public:
    Character_2View();
    virtual ~Character_2View() {}
 800a4d4:	b510      	push	{r4, lr}
 800a4d6:	4b03      	ldr	r3, [pc, #12]	@ (800a4e4 <_ZN15Character_2ViewD1Ev+0x10>)
 800a4d8:	6003      	str	r3, [r0, #0]
 800a4da:	4604      	mov	r4, r0
 800a4dc:	f7f8 ffb3 	bl	8003446 <_ZN19Character_2ViewBaseD1Ev>
 800a4e0:	4620      	mov	r0, r4
 800a4e2:	bd10      	pop	{r4, pc}
 800a4e4:	08031c0c 	.word	0x08031c0c

0800a4e8 <_ZN15Character_2ViewD0Ev>:
 800a4e8:	b510      	push	{r4, lr}
 800a4ea:	4604      	mov	r4, r0
 800a4ec:	f7ff fff2 	bl	800a4d4 <_ZN15Character_2ViewD1Ev>
 800a4f0:	4620      	mov	r0, r4
 800a4f2:	f44f 711e 	mov.w	r1, #632	@ 0x278
 800a4f6:	f022 fe7e 	bl	802d1f6 <_ZdlPvj>
 800a4fa:	4620      	mov	r0, r4
 800a4fc:	bd10      	pop	{r4, pc}
	...

0800a500 <_ZN15Character_2ViewC1Ev>:
Character_2View::Character_2View() : currentCharacterIndex(NARUTO)
 800a500:	b510      	push	{r4, lr}
 800a502:	4604      	mov	r4, r0
 800a504:	f7f8 ffe0 	bl	80034c8 <_ZN19Character_2ViewBaseC1Ev>
 800a508:	4b03      	ldr	r3, [pc, #12]	@ (800a518 <_ZN15Character_2ViewC1Ev+0x18>)
 800a50a:	6023      	str	r3, [r4, #0]
 800a50c:	2300      	movs	r3, #0
 800a50e:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
}
 800a512:	4620      	mov	r0, r4
 800a514:	bd10      	pop	{r4, pc}
 800a516:	bf00      	nop
 800a518:	08031c0c 	.word	0x08031c0c

0800a51c <_ZN15Character_2View7testLEDEv>:
    narutobutton.invalidate();
}

void Character_2View::testLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800a51c:	4802      	ldr	r0, [pc, #8]	@ (800a528 <_ZN15Character_2View7testLEDEv+0xc>)
 800a51e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800a522:	f006 b96e 	b.w	8010802 <HAL_GPIO_TogglePin>
 800a526:	bf00      	nop
 800a528:	40021800 	.word	0x40021800

0800a52c <_ZN15Character_2View17hideAllCharactersEv>:
{
 800a52c:	b510      	push	{r4, lr}
        visible = vis;
 800a52e:	2300      	movs	r3, #0
 800a530:	4604      	mov	r4, r0
 800a532:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800a536:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 800a53a:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
    naruto.invalidate();
 800a53e:	3098      	adds	r0, #152	@ 0x98
 800a540:	f011 fd7a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sakura.invalidate();
 800a544:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800a548:	f011 fd76 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sponge.invalidate();
 800a54c:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
}
 800a550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sponge.invalidate();
 800a554:	f011 bd70 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800a558 <_ZN15Character_2View14hideAllButtonsEv>:
{
 800a558:	b510      	push	{r4, lr}
        touchable = touch;
 800a55a:	2300      	movs	r3, #0
 800a55c:	4604      	mov	r4, r0
 800a55e:	f8a0 3198 	strh.w	r3, [r0, #408]	@ 0x198
 800a562:	f8a0 3210 	strh.w	r3, [r0, #528]	@ 0x210
    sakurabutton.invalidate();
 800a566:	f500 70ba 	add.w	r0, r0, #372	@ 0x174
 800a56a:	f011 fd65 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    narutobutton.invalidate();
 800a56e:	f504 70f6 	add.w	r0, r4, #492	@ 0x1ec
}
 800a572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    narutobutton.invalidate();
 800a576:	f011 bd5f 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800a57a <_ZN15Character_2View11setupScreenEv>:
{
 800a57a:	b510      	push	{r4, lr}
 800a57c:	4604      	mov	r4, r0
    Character_2ViewBase::setupScreen();
 800a57e:	f7f8 ff63 	bl	8003448 <_ZN19Character_2ViewBase11setupScreenEv>
    currentCharacterIndex = NARUTO;
 800a582:	2300      	movs	r3, #0
 800a584:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
    hideAllCharacters();
 800a588:	4620      	mov	r0, r4
 800a58a:	f7ff ffcf 	bl	800a52c <_ZN15Character_2View17hideAllCharactersEv>
    hideAllButtons();
 800a58e:	4620      	mov	r0, r4
 800a590:	f7ff ffe2 	bl	800a558 <_ZN15Character_2View14hideAllButtonsEv>
        visible = vis;
 800a594:	2301      	movs	r3, #1
 800a596:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
        touchable = touch;
 800a59a:	f240 1301 	movw	r3, #257	@ 0x101
 800a59e:	1d20      	adds	r0, r4, #4
 800a5a0:	f8a4 3210 	strh.w	r3, [r4, #528]	@ 0x210
 800a5a4:	f011 fd48 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    testLED(); // Confirm setup
 800a5a8:	4620      	mov	r0, r4
}
 800a5aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    testLED(); // Confirm setup
 800a5ae:	f7ff bfb5 	b.w	800a51c <_ZN15Character_2View7testLEDEv>

0800a5b2 <_ZN15Character_2View20showCurrentCharacterEv>:
{
 800a5b2:	b510      	push	{r4, lr}
 800a5b4:	4604      	mov	r4, r0
    hideAllCharacters();
 800a5b6:	f7ff ffb9 	bl	800a52c <_ZN15Character_2View17hideAllCharactersEv>
    hideAllButtons();
 800a5ba:	4620      	mov	r0, r4
 800a5bc:	f7ff ffcc 	bl	800a558 <_ZN15Character_2View14hideAllButtonsEv>
    switch (currentCharacterIndex) {
 800a5c0:	f8d4 3274 	ldr.w	r3, [r4, #628]	@ 0x274
 800a5c4:	2b01      	cmp	r3, #1
 800a5c6:	d00e      	beq.n	800a5e6 <_ZN15Character_2View20showCurrentCharacterEv+0x34>
 800a5c8:	2b02      	cmp	r3, #2
 800a5ca:	d013      	beq.n	800a5f4 <_ZN15Character_2View20showCurrentCharacterEv+0x42>
 800a5cc:	b933      	cbnz	r3, 800a5dc <_ZN15Character_2View20showCurrentCharacterEv+0x2a>
        visible = vis;
 800a5ce:	2301      	movs	r3, #1
 800a5d0:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
        touchable = touch;
 800a5d4:	f240 1301 	movw	r3, #257	@ 0x101
 800a5d8:	f8a4 3210 	strh.w	r3, [r4, #528]	@ 0x210
 800a5dc:	1d20      	adds	r0, r4, #4
}
 800a5de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5e2:	f011 bd29 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        visible = vis;
 800a5e6:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        touchable = touch;
 800a5ea:	f240 1301 	movw	r3, #257	@ 0x101
 800a5ee:	f8a4 3198 	strh.w	r3, [r4, #408]	@ 0x198
    }
 800a5f2:	e7f3      	b.n	800a5dc <_ZN15Character_2View20showCurrentCharacterEv+0x2a>
        visible = vis;
 800a5f4:	2301      	movs	r3, #1
 800a5f6:	f884 30e9 	strb.w	r3, [r4, #233]	@ 0xe9
    }
 800a5fa:	e7ef      	b.n	800a5dc <_ZN15Character_2View20showCurrentCharacterEv+0x2a>

0800a5fc <_ZN15Character_2View16leftArrowClickedEv>:
{
 800a5fc:	b510      	push	{r4, lr}
 800a5fe:	4604      	mov	r4, r0
    testLED();
 800a600:	f7ff ff8c 	bl	800a51c <_ZN15Character_2View7testLEDEv>
    currentCharacterIndex--;
 800a604:	f8d4 3274 	ldr.w	r3, [r4, #628]	@ 0x274
        currentCharacterIndex = CHARACTER_COUNT - 1;
 800a608:	3b01      	subs	r3, #1
 800a60a:	bf48      	it	mi
 800a60c:	2302      	movmi	r3, #2
 800a60e:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
    showCurrentCharacter();
 800a612:	4620      	mov	r0, r4
}
 800a614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    showCurrentCharacter();
 800a618:	f7ff bfcb 	b.w	800a5b2 <_ZN15Character_2View20showCurrentCharacterEv>

0800a61c <_ZN15Character_2View17rightArrowClickedEv>:
{
 800a61c:	b510      	push	{r4, lr}
 800a61e:	4604      	mov	r4, r0
    testLED();
 800a620:	f7ff ff7c 	bl	800a51c <_ZN15Character_2View7testLEDEv>
    currentCharacterIndex++;
 800a624:	f8d4 3274 	ldr.w	r3, [r4, #628]	@ 0x274
 800a628:	3301      	adds	r3, #1
        currentCharacterIndex = 0;
 800a62a:	2b03      	cmp	r3, #3
 800a62c:	bfa8      	it	ge
 800a62e:	2300      	movge	r3, #0
 800a630:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
    showCurrentCharacter();
 800a634:	4620      	mov	r0, r4
}
 800a636:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    showCurrentCharacter();
 800a63a:	f7ff bfba 	b.w	800a5b2 <_ZN15Character_2View20showCurrentCharacterEv>

0800a63e <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800a63e:	b538      	push	{r3, r4, r5, lr}
 800a640:	460d      	mov	r5, r1
 800a642:	4604      	mov	r4, r0
    testLED();
 800a644:	f7ff ff6a 	bl	800a51c <_ZN15Character_2View7testLEDEv>
    if (clickX >= 197 && clickX <= 239 && clickY >= 135 && clickY <= 189)
 800a648:	88ea      	ldrh	r2, [r5, #6]
 800a64a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800a64e:	f1a2 01c5 	sub.w	r1, r2, #197	@ 0xc5
 800a652:	292a      	cmp	r1, #42	@ 0x2a
 800a654:	d808      	bhi.n	800a668 <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x2a>
 800a656:	3b87      	subs	r3, #135	@ 0x87
 800a658:	b29b      	uxth	r3, r3
 800a65a:	2b36      	cmp	r3, #54	@ 0x36
 800a65c:	d80f      	bhi.n	800a67e <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x40>
        rightArrowClicked();
 800a65e:	4620      	mov	r0, r4
}
 800a660:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        rightArrowClicked();
 800a664:	f7ff bfda 	b.w	800a61c <_ZN15Character_2View17rightArrowClickedEv>
    if (clickX >= 0 && clickX <= 42 && clickY >= 135 && clickY <= 189)
 800a668:	2a2a      	cmp	r2, #42	@ 0x2a
 800a66a:	d808      	bhi.n	800a67e <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x40>
 800a66c:	3b87      	subs	r3, #135	@ 0x87
 800a66e:	b29b      	uxth	r3, r3
 800a670:	2b36      	cmp	r3, #54	@ 0x36
 800a672:	d804      	bhi.n	800a67e <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x40>
        leftArrowClicked();
 800a674:	4620      	mov	r0, r4
}
 800a676:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        leftArrowClicked();
 800a67a:	f7ff bfbf 	b.w	800a5fc <_ZN15Character_2View16leftArrowClickedEv>
    Character_2ViewBase::handleClickEvent(evt);
 800a67e:	4629      	mov	r1, r5
 800a680:	4620      	mov	r0, r4
}
 800a682:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    Character_2ViewBase::handleClickEvent(evt);
 800a686:	f012 ba35 	b.w	801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>

0800a68a <_ZN24Character_FinalPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Character_FinalPresenter() {}
 800a68a:	4770      	bx	lr

0800a68c <_ZThn4_N24Character_FinalPresenterD1Ev>:
 800a68c:	3804      	subs	r0, #4
 800a68e:	4770      	bx	lr

0800a690 <_ZN24Character_FinalPresenter10deactivateEv>:
}

void Character_FinalPresenter::activate()
{

}
 800a690:	4770      	bx	lr

0800a692 <_ZN24Character_FinalPresenterD0Ev>:
 800a692:	b510      	push	{r4, lr}
 800a694:	2110      	movs	r1, #16
 800a696:	4604      	mov	r4, r0
 800a698:	f022 fdad 	bl	802d1f6 <_ZdlPvj>
 800a69c:	4620      	mov	r0, r4
 800a69e:	bd10      	pop	{r4, pc}

0800a6a0 <_ZThn4_N24Character_FinalPresenterD0Ev>:
 800a6a0:	f1a0 0004 	sub.w	r0, r0, #4
 800a6a4:	e7f5      	b.n	800a692 <_ZN24Character_FinalPresenterD0Ev>
	...

0800a6a8 <_ZN24Character_FinalPresenterC1ER19Character_FinalView>:
 800a6a8:	2200      	movs	r2, #0
 800a6aa:	6082      	str	r2, [r0, #8]
    : view(v)
 800a6ac:	4a02      	ldr	r2, [pc, #8]	@ (800a6b8 <_ZN24Character_FinalPresenterC1ER19Character_FinalView+0x10>)
 800a6ae:	6002      	str	r2, [r0, #0]
 800a6b0:	3218      	adds	r2, #24
 800a6b2:	6042      	str	r2, [r0, #4]
 800a6b4:	60c1      	str	r1, [r0, #12]
}
 800a6b6:	4770      	bx	lr
 800a6b8:	08031c40 	.word	0x08031c40

0800a6bc <_ZN19Character_FinalView14tearDownScreenEv>:
}

void Character_FinalView::tearDownScreen()
{
    Character_FinalViewBase::tearDownScreen();
}
 800a6bc:	4770      	bx	lr
	...

0800a6c0 <_ZN19Character_FinalViewD1Ev>:

class Character_FinalView : public Character_FinalViewBase
{
public:
    Character_FinalView();
    virtual ~Character_FinalView() {}
 800a6c0:	b510      	push	{r4, lr}
 800a6c2:	4b03      	ldr	r3, [pc, #12]	@ (800a6d0 <_ZN19Character_FinalViewD1Ev+0x10>)
 800a6c4:	6003      	str	r3, [r0, #0]
 800a6c6:	4604      	mov	r4, r0
 800a6c8:	f7f9 f861 	bl	800378e <_ZN23Character_FinalViewBaseD1Ev>
 800a6cc:	4620      	mov	r0, r4
 800a6ce:	bd10      	pop	{r4, pc}
 800a6d0:	08031c68 	.word	0x08031c68

0800a6d4 <_ZN19Character_FinalViewD0Ev>:
 800a6d4:	b510      	push	{r4, lr}
 800a6d6:	4604      	mov	r4, r0
 800a6d8:	f7ff fff2 	bl	800a6c0 <_ZN19Character_FinalViewD1Ev>
 800a6dc:	4620      	mov	r0, r4
 800a6de:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
 800a6e2:	f022 fd88 	bl	802d1f6 <_ZdlPvj>
 800a6e6:	4620      	mov	r0, r4
 800a6e8:	bd10      	pop	{r4, pc}
	...

0800a6ec <_ZN19Character_FinalViewC1Ev>:
Character_FinalView::Character_FinalView()
 800a6ec:	b510      	push	{r4, lr}
 800a6ee:	4604      	mov	r4, r0
 800a6f0:	f7f9 f884 	bl	80037fc <_ZN23Character_FinalViewBaseC1Ev>
 800a6f4:	4b01      	ldr	r3, [pc, #4]	@ (800a6fc <_ZN19Character_FinalViewC1Ev+0x10>)
 800a6f6:	6023      	str	r3, [r4, #0]
}
 800a6f8:	4620      	mov	r0, r4
 800a6fa:	bd10      	pop	{r4, pc}
 800a6fc:	08031c68 	.word	0x08031c68

0800a700 <_ZN19Character_FinalView11setupScreenEv>:
    Character_FinalViewBase::setupScreen();
 800a700:	f7f9 b846 	b.w	8003790 <_ZN23Character_FinalViewBase11setupScreenEv>

0800a704 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a704:	4770      	bx	lr

0800a706 <_ZN19FrontendApplicationD0Ev>:
 800a706:	b510      	push	{r4, lr}
 800a708:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800a70c:	4604      	mov	r4, r0
 800a70e:	f022 fd72 	bl	802d1f6 <_ZdlPvj>
 800a712:	4620      	mov	r0, r4
 800a714:	bd10      	pop	{r4, pc}

0800a716 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a716:	b510      	push	{r4, lr}
 800a718:	4604      	mov	r4, r0
    {
        model.tick();
 800a71a:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 800a71e:	f001 ff7e 	bl	800c61e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a722:	4620      	mov	r0, r4
    }
 800a724:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800a728:	f010 bb56 	b.w	801add8 <_ZN8touchgfx11Application15handleTickEventEv>

0800a72c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a72c:	b510      	push	{r4, lr}
 800a72e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800a730:	f7f9 fa44 	bl	8003bbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a734:	4b01      	ldr	r3, [pc, #4]	@ (800a73c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800a736:	6023      	str	r3, [r4, #0]
{

}
 800a738:	4620      	mov	r0, r4
 800a73a:	bd10      	pop	{r4, pc}
 800a73c:	08031c9c 	.word	0x08031c9c

0800a740 <_ZN19GameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreenPresenter() {}
 800a740:	4770      	bx	lr

0800a742 <_ZThn4_N19GameScreenPresenterD1Ev>:
 800a742:	3804      	subs	r0, #4
 800a744:	4770      	bx	lr

0800a746 <_ZN19GameScreenPresenter10deactivateEv>:
}

void GameScreenPresenter::activate()
{

}
 800a746:	4770      	bx	lr

0800a748 <_ZN19GameScreenPresenterD0Ev>:
 800a748:	b510      	push	{r4, lr}
 800a74a:	2110      	movs	r1, #16
 800a74c:	4604      	mov	r4, r0
 800a74e:	f022 fd52 	bl	802d1f6 <_ZdlPvj>
 800a752:	4620      	mov	r0, r4
 800a754:	bd10      	pop	{r4, pc}

0800a756 <_ZThn4_N19GameScreenPresenterD0Ev>:
 800a756:	f1a0 0004 	sub.w	r0, r0, #4
 800a75a:	e7f5      	b.n	800a748 <_ZN19GameScreenPresenterD0Ev>

0800a75c <_ZN19GameScreenPresenterC1ER14GameScreenView>:
 800a75c:	2200      	movs	r2, #0
 800a75e:	6082      	str	r2, [r0, #8]
    : view(v)
 800a760:	4a02      	ldr	r2, [pc, #8]	@ (800a76c <_ZN19GameScreenPresenterC1ER14GameScreenView+0x10>)
 800a762:	6002      	str	r2, [r0, #0]
 800a764:	3218      	adds	r2, #24
 800a766:	6042      	str	r2, [r0, #4]
 800a768:	60c1      	str	r1, [r0, #12]
}
 800a76a:	4770      	bx	lr
 800a76c:	08031cf0 	.word	0x08031cf0

0800a770 <_ZN14GameScreenView12checkGameEndEv>:
}

void GameScreenView::tearDownScreen()
{
    GameScreenViewBase::tearDownScreen();
}
 800a770:	4770      	bx	lr
	...

0800a774 <_ZN14GameScreenViewD1Ev>:

class GameScreenView : public GameScreenViewBase
{
public:
    GameScreenView();
    virtual ~GameScreenView() {}
 800a774:	b510      	push	{r4, lr}
 800a776:	4b03      	ldr	r3, [pc, #12]	@ (800a784 <_ZN14GameScreenViewD1Ev+0x10>)
 800a778:	6003      	str	r3, [r0, #0]
 800a77a:	4604      	mov	r4, r0
 800a77c:	f7fa fc2e 	bl	8004fdc <_ZN18GameScreenViewBaseD1Ev>
 800a780:	4620      	mov	r0, r4
 800a782:	bd10      	pop	{r4, pc}
 800a784:	08031d18 	.word	0x08031d18

0800a788 <_ZN14GameScreenViewD0Ev>:
 800a788:	b510      	push	{r4, lr}
 800a78a:	4604      	mov	r4, r0
 800a78c:	f7ff fff2 	bl	800a774 <_ZN14GameScreenViewD1Ev>
 800a790:	4620      	mov	r0, r4
 800a792:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800a796:	f022 fd2e 	bl	802d1f6 <_ZdlPvj>
 800a79a:	4620      	mov	r0, r4
 800a79c:	bd10      	pop	{r4, pc}
	...

0800a7a0 <_ZN14GameScreenView15calculateDamageEibbb.part.0>:

    return min + (mixed % (max - min + 1));
}

// Cập nhật calculateDamage function để hỗ trợ power-ups
int GameScreenView::calculateDamage(int baseDamage, bool isDefending, bool hasDoubleAttack, bool hasShield)
 800a7a0:	b570      	push	{r4, r5, r6, lr}
 800a7a2:	4604      	mov	r4, r0
 800a7a4:	460e      	mov	r6, r1
    }

    int finalDamage = baseDamage;

    // Apply double damage first
    if (hasDoubleAttack) {
 800a7a6:	4615      	mov	r5, r2
 800a7a8:	b13a      	cbz	r2, 800a7ba <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x1a>
        finalDamage = (int)(baseDamage * 2.5); // x2.5 như yêu cầu
 800a7aa:	f7f5 ffed 	bl	8000788 <__aeabi_i2d>
 800a7ae:	4b09      	ldr	r3, [pc, #36]	@ (800a7d4 <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x34>)
 800a7b0:	2200      	movs	r2, #0
 800a7b2:	f7f5 fd6d 	bl	8000290 <__aeabi_dmul>
 800a7b6:	f7f6 f851 	bl	800085c <__aeabi_d2iz>
    }

    // Apply defense reduction
    if (isDefending) {
 800a7ba:	b13e      	cbz	r6, 800a7cc <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2c>
        if (finalDamage == 40 || (hasDoubleAttack && baseDamage == 40)) {
 800a7bc:	2828      	cmp	r0, #40	@ 0x28
 800a7be:	d006      	beq.n	800a7ce <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2e>
 800a7c0:	b10d      	cbz	r5, 800a7c6 <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x26>
 800a7c2:	2c28      	cmp	r4, #40	@ 0x28
 800a7c4:	d003      	beq.n	800a7ce <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2e>
            // Special attack khi bị defend: giảm xuống 25 damage
            finalDamage = 25;
        } else {
            // Đòn thường khi bị defend: giảm 50%
            finalDamage = finalDamage / 2;
 800a7c6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800a7ca:	1040      	asrs	r0, r0, #1
        }
    }

    return finalDamage;
}
 800a7cc:	bd70      	pop	{r4, r5, r6, pc}
            finalDamage = 25;
 800a7ce:	2019      	movs	r0, #25
 800a7d0:	e7fc      	b.n	800a7cc <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2c>
 800a7d2:	bf00      	nop
 800a7d4:	40040000 	.word	0x40040000

0800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>:
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800a7d8:	4802      	ldr	r0, [pc, #8]	@ (800a7e4 <_ZN14GameScreenView9toggleLEDEv.constprop.0+0xc>)
 800a7da:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800a7de:	f006 b810 	b.w	8010802 <HAL_GPIO_TogglePin>
 800a7e2:	bf00      	nop
 800a7e4:	40021800 	.word	0x40021800

0800a7e8 <_ZNK8touchgfx4Rect9intersectEss>:
     *
     * @return true if point lies inside rectangle.
     */
    bool intersect(int16_t otherX, int16_t otherY) const
    {
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800a7e8:	f9b0 3000 	ldrsh.w	r3, [r0]
 800a7ec:	428b      	cmp	r3, r1
    bool intersect(int16_t otherX, int16_t otherY) const
 800a7ee:	b510      	push	{r4, lr}
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800a7f0:	dc10      	bgt.n	800a814 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
        return x + width;
 800a7f2:	8884      	ldrh	r4, [r0, #4]
 800a7f4:	4423      	add	r3, r4
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800a7f6:	b21b      	sxth	r3, r3
 800a7f8:	4299      	cmp	r1, r3
 800a7fa:	da0b      	bge.n	800a814 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800a7fc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800a800:	4293      	cmp	r3, r2
 800a802:	dc07      	bgt.n	800a814 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
        return y + height;
 800a804:	88c1      	ldrh	r1, [r0, #6]
 800a806:	440b      	add	r3, r1
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800a808:	b21b      	sxth	r3, r3
 800a80a:	429a      	cmp	r2, r3
 800a80c:	bfac      	ite	ge
 800a80e:	2000      	movge	r0, #0
 800a810:	2001      	movlt	r0, #1
    }
 800a812:	bd10      	pop	{r4, pc}
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800a814:	2000      	movs	r0, #0
 800a816:	e7fc      	b.n	800a812 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800a818 <_ZN14GameScreenViewC1Ev>:
GameScreenView::GameScreenView()
 800a818:	b510      	push	{r4, lr}
 800a81a:	4604      	mov	r4, r0
 800a81c:	f7fa fc0a 	bl	8005034 <_ZN18GameScreenViewBaseC1Ev>
 800a820:	4b0d      	ldr	r3, [pc, #52]	@ (800a858 <_ZN14GameScreenViewC1Ev+0x40>)
 800a822:	6023      	str	r3, [r4, #0]
    resetTimer = 0;
 800a824:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800a828:	2200      	movs	r2, #0
    randomSeed = 12345; // Khởi tạo seed cho random
 800a82a:	f243 0139 	movw	r1, #12345	@ 0x3039
    resetTimer = 0;
 800a82e:	f8c3 2278 	str.w	r2, [r3, #632]	@ 0x278
    resetTimerActive = false;
 800a832:	f883 227c 	strb.w	r2, [r3, #636]	@ 0x27c
    randomSeed = 12345; // Khởi tạo seed cho random
 800a836:	f8c3 12bc 	str.w	r1, [r3, #700]	@ 0x2bc
    damageDisplayTimer = 0;
 800a83a:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
    damageDisplayActive = false;
 800a83e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    currentDamageAmount = 0;
 800a842:	f8c3 22a0 	str.w	r2, [r3, #672]	@ 0x2a0
    isPlayerDamage = false;
 800a846:	f883 22a4 	strb.w	r2, [r3, #676]	@ 0x2a4
    damageTextAIStartY = 141;    // Default Y position for AI damage
 800a84a:	2163      	movs	r1, #99	@ 0x63
 800a84c:	228d      	movs	r2, #141	@ 0x8d
 800a84e:	e9c3 12ad 	strd	r1, r2, [r3, #692]	@ 0x2b4
}
 800a852:	4620      	mov	r0, r4
 800a854:	bd10      	pop	{r4, pc}
 800a856:	bf00      	nop
 800a858:	08031d18 	.word	0x08031d18

0800a85c <_ZN14GameScreenView8initGPIOEv>:
{
 800a85c:	b570      	push	{r4, r5, r6, lr}
 800a85e:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800a860:	2400      	movs	r4, #0
 800a862:	4b0f      	ldr	r3, [pc, #60]	@ (800a8a0 <_ZN14GameScreenView8initGPIOEv+0x44>)
 800a864:	9400      	str	r4, [sp, #0]
 800a866:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800a868:	4d0e      	ldr	r5, [pc, #56]	@ (800a8a4 <_ZN14GameScreenView8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800a86a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800a86e:	631a      	str	r2, [r3, #48]	@ 0x30
 800a870:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800a872:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800a874:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a878:	9300      	str	r3, [sp, #0]
 800a87a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800a87c:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800a880:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800a882:	a901      	add	r1, sp, #4
 800a884:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800a886:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800a88a:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800a88e:	f005 fec9 	bl	8010624 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800a892:	4622      	mov	r2, r4
 800a894:	4631      	mov	r1, r6
 800a896:	4628      	mov	r0, r5
 800a898:	f005 ffae 	bl	80107f8 <HAL_GPIO_WritePin>
}
 800a89c:	b006      	add	sp, #24
 800a89e:	bd70      	pop	{r4, r5, r6, pc}
 800a8a0:	40023800 	.word	0x40023800
 800a8a4:	40021800 	.word	0x40021800

0800a8a8 <_ZN14GameScreenView14debugGameStateEv>:
    if (gameEnded) {
 800a8a8:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
{
 800a8ac:	b538      	push	{r3, r4, r5, lr}
    if (gameEnded) {
 800a8ae:	f890 3265 	ldrb.w	r3, [r0, #613]	@ 0x265
 800a8b2:	b12b      	cbz	r3, 800a8c0 <_ZN14GameScreenView14debugGameStateEv+0x18>
 800a8b4:	240a      	movs	r4, #10
            toggleLED();
 800a8b6:	f7ff ff8f 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800a8ba:	3c01      	subs	r4, #1
 800a8bc:	d1fb      	bne.n	800a8b6 <_ZN14GameScreenView14debugGameStateEv+0xe>
}
 800a8be:	bd38      	pop	{r3, r4, r5, pc}
        if (playerPowerUpActive && aiPowerUpActive) {
 800a8c0:	f890 2294 	ldrb.w	r2, [r0, #660]	@ 0x294
 800a8c4:	f890 3295 	ldrb.w	r3, [r0, #661]	@ 0x295
 800a8c8:	b152      	cbz	r2, 800a8e0 <_ZN14GameScreenView14debugGameStateEv+0x38>
            blinkCount = 2; // Chỉ player có
 800a8ca:	2b00      	cmp	r3, #0
 800a8cc:	bf14      	ite	ne
 800a8ce:	2504      	movne	r5, #4
 800a8d0:	2502      	moveq	r5, #2
        for (int i = 0; i < blinkCount; i++) {
 800a8d2:	2400      	movs	r4, #0
 800a8d4:	3401      	adds	r4, #1
            toggleLED();
 800a8d6:	f7ff ff7f 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < blinkCount; i++) {
 800a8da:	42a5      	cmp	r5, r4
 800a8dc:	d1fa      	bne.n	800a8d4 <_ZN14GameScreenView14debugGameStateEv+0x2c>
 800a8de:	e7ee      	b.n	800a8be <_ZN14GameScreenView14debugGameStateEv+0x16>
        int blinkCount = 1; // Default: no power-ups
 800a8e0:	2b00      	cmp	r3, #0
 800a8e2:	bf14      	ite	ne
 800a8e4:	2503      	movne	r5, #3
 800a8e6:	2501      	moveq	r5, #1
 800a8e8:	e7f3      	b.n	800a8d2 <_ZN14GameScreenView14debugGameStateEv+0x2a>
	...

0800a8ec <_ZN14GameScreenView20generateRandomNumberEii>:
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800a8ec:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
{
 800a8f0:	b530      	push	{r4, r5, lr}
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800a8f2:	4b0e      	ldr	r3, [pc, #56]	@ (800a92c <_ZN14GameScreenView20generateRandomNumberEii+0x40>)
 800a8f4:	f8d0 42bc 	ldr.w	r4, [r0, #700]	@ 0x2bc
 800a8f8:	4d0d      	ldr	r5, [pc, #52]	@ (800a930 <_ZN14GameScreenView20generateRandomNumberEii+0x44>)
 800a8fa:	fb05 3304 	mla	r3, r5, r4, r3
 800a8fe:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800a902:	f8c0 32bc 	str.w	r3, [r0, #700]	@ 0x2bc
    mixed *= 0x85ebca6b;
 800a906:	480b      	ldr	r0, [pc, #44]	@ (800a934 <_ZN14GameScreenView20generateRandomNumberEii+0x48>)
    mixed ^= mixed >> 16;
 800a908:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    mixed *= 0x85ebca6b;
 800a90c:	4343      	muls	r3, r0
    mixed *= 0xc2b2ae35;
 800a90e:	480a      	ldr	r0, [pc, #40]	@ (800a938 <_ZN14GameScreenView20generateRandomNumberEii+0x4c>)
    mixed ^= mixed >> 13;
 800a910:	ea83 3353 	eor.w	r3, r3, r3, lsr #13
    mixed *= 0xc2b2ae35;
 800a914:	4343      	muls	r3, r0
    return min + (mixed % (max - min + 1));
 800a916:	1a52      	subs	r2, r2, r1
    mixed ^= mixed >> 16;
 800a918:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    return min + (mixed % (max - min + 1));
 800a91c:	3201      	adds	r2, #1
 800a91e:	fbb3 f0f2 	udiv	r0, r3, r2
 800a922:	fb02 3010 	mls	r0, r2, r0, r3
}
 800a926:	4408      	add	r0, r1
 800a928:	bd30      	pop	{r4, r5, pc}
 800a92a:	bf00      	nop
 800a92c:	3c6ef35f 	.word	0x3c6ef35f
 800a930:	0019660d 	.word	0x0019660d
 800a934:	85ebca6b 	.word	0x85ebca6b
 800a938:	c2b2ae35 	.word	0xc2b2ae35

0800a93c <_ZN14GameScreenView14hideDamageTextEv>:
{
 800a93c:	b570      	push	{r4, r5, r6, lr}
        visible = vis;
 800a93e:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
 800a942:	2500      	movs	r5, #0
 800a944:	4604      	mov	r4, r0
 800a946:	f880 5981 	strb.w	r5, [r0, #2433]	@ 0x981
 800a94a:	f880 5a11 	strb.w	r5, [r0, #2577]	@ 0xa11
 800a94e:	f880 5aa1 	strb.w	r5, [r0, #2721]	@ 0xaa1
 800a952:	f880 5b31 	strb.w	r5, [r0, #2865]	@ 0xb31
 800a956:	f880 5bc1 	strb.w	r5, [r0, #3009]	@ 0xbc1
 800a95a:	f880 5c51 	strb.w	r5, [r0, #3153]	@ 0xc51
 800a95e:	f880 5ce1 	strb.w	r5, [r0, #3297]	@ 0xce1
 800a962:	f880 5d71 	strb.w	r5, [r0, #3441]	@ 0xd71
 800a966:	f880 5e01 	strb.w	r5, [r0, #3585]	@ 0xe01
 800a96a:	f880 5e91 	strb.w	r5, [r0, #3729]	@ 0xe91
 800a96e:	f880 5f21 	strb.w	r5, [r0, #3873]	@ 0xf21
 800a972:	f880 5fb1 	strb.w	r5, [r0, #4017]	@ 0xfb1
 800a976:	f886 5041 	strb.w	r5, [r6, #65]	@ 0x41
 800a97a:	f886 50d1 	strb.w	r5, [r6, #209]	@ 0xd1
 800a97e:	f886 5161 	strb.w	r5, [r6, #353]	@ 0x161
 800a982:	f886 51f1 	strb.w	r5, [r6, #497]	@ 0x1f1
    minus_0.invalidate(); minus_1.invalidate(); minus_3.invalidate();
 800a986:	f600 105c 	addw	r0, r0, #2396	@ 0x95c
 800a98a:	f880 506d 	strb.w	r5, [r0, #109]	@ 0x6d
 800a98e:	f880 50fd 	strb.w	r5, [r0, #253]	@ 0xfd
 800a992:	f880 518d 	strb.w	r5, [r0, #397]	@ 0x18d
 800a996:	f880 521d 	strb.w	r5, [r0, #541]	@ 0x21d
 800a99a:	f880 52ad 	strb.w	r5, [r0, #685]	@ 0x2ad
 800a99e:	f880 533d 	strb.w	r5, [r0, #829]	@ 0x33d
 800a9a2:	f880 53cd 	strb.w	r5, [r0, #973]	@ 0x3cd
 800a9a6:	f880 545d 	strb.w	r5, [r0, #1117]	@ 0x45d
 800a9aa:	f880 54ed 	strb.w	r5, [r0, #1261]	@ 0x4ed
 800a9ae:	f880 557d 	strb.w	r5, [r0, #1405]	@ 0x57d
 800a9b2:	f880 560d 	strb.w	r5, [r0, #1549]	@ 0x60d
 800a9b6:	f880 569d 	strb.w	r5, [r0, #1693]	@ 0x69d
 800a9ba:	f886 5089 	strb.w	r5, [r6, #137]	@ 0x89
 800a9be:	f886 5119 	strb.w	r5, [r6, #281]	@ 0x119
 800a9c2:	f886 51a9 	strb.w	r5, [r6, #425]	@ 0x1a9
 800a9c6:	f886 5239 	strb.w	r5, [r6, #569]	@ 0x239
 800a9ca:	f011 fb35 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9ce:	f604 10ec 	addw	r0, r4, #2540	@ 0x9ec
 800a9d2:	f011 fb31 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9d6:	f604 207c 	addw	r0, r4, #2684	@ 0xa7c
 800a9da:	f011 fb2d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_4.invalidate(); minus_5.invalidate(); minus_6.invalidate();
 800a9de:	f604 300c 	addw	r0, r4, #2828	@ 0xb0c
 800a9e2:	f011 fb29 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9e6:	f604 309c 	addw	r0, r4, #2972	@ 0xb9c
 800a9ea:	f011 fb25 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9ee:	f604 402c 	addw	r0, r4, #3116	@ 0xc2c
 800a9f2:	f011 fb21 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_7.invalidate(); minus_8.invalidate(); minus_10.invalidate();
 800a9f6:	f604 40bc 	addw	r0, r4, #3260	@ 0xcbc
 800a9fa:	f011 fb1d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9fe:	f604 504c 	addw	r0, r4, #3404	@ 0xd4c
 800aa02:	f011 fb19 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa06:	f604 50dc 	addw	r0, r4, #3548	@ 0xddc
 800aa0a:	f011 fb15 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_12.invalidate(); minus_15.invalidate(); minus_17.invalidate();
 800aa0e:	f604 606c 	addw	r0, r4, #3692	@ 0xe6c
 800aa12:	f011 fb11 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa16:	f604 60fc 	addw	r0, r4, #3836	@ 0xefc
 800aa1a:	f011 fb0d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa1e:	f604 708c 	addw	r0, r4, #3980	@ 0xf8c
 800aa22:	f011 fb09 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_20.invalidate(); minus_25.invalidate(); minus_40.invalidate();
 800aa26:	4630      	mov	r0, r6
 800aa28:	301c      	adds	r0, #28
 800aa2a:	f011 fb05 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa2e:	f504 5085 	add.w	r0, r4, #4256	@ 0x10a0
 800aa32:	300c      	adds	r0, #12
 800aa34:	f011 fb00 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa38:	f504 5089 	add.w	r0, r4, #4384	@ 0x1120
 800aa3c:	301c      	adds	r0, #28
 800aa3e:	f011 fafb 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_100.invalidate();
 800aa42:	f504 508e 	add.w	r0, r4, #4544	@ 0x11c0
 800aa46:	300c      	adds	r0, #12
 800aa48:	f011 faf6 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_0_1.invalidate(); minus_1_1.invalidate(); minus_3_1.invalidate();
 800aa4c:	f604 10a4 	addw	r0, r4, #2468	@ 0x9a4
 800aa50:	f011 faf2 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa54:	f604 2034 	addw	r0, r4, #2612	@ 0xa34
 800aa58:	f011 faee 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa5c:	f604 20c4 	addw	r0, r4, #2756	@ 0xac4
 800aa60:	f011 faea 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_4_1.invalidate(); minus_5_1.invalidate(); minus_6_1.invalidate();
 800aa64:	f604 3054 	addw	r0, r4, #2900	@ 0xb54
 800aa68:	f011 fae6 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa6c:	f604 30e4 	addw	r0, r4, #3044	@ 0xbe4
 800aa70:	f011 fae2 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa74:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 800aa78:	f011 fade 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_7_1.invalidate(); minus_8_1.invalidate(); minus_10_1.invalidate();
 800aa7c:	f604 5004 	addw	r0, r4, #3332	@ 0xd04
 800aa80:	f011 fada 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa84:	f604 5094 	addw	r0, r4, #3476	@ 0xd94
 800aa88:	f011 fad6 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa8c:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800aa90:	f011 fad2 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_12_1.invalidate(); minus_15_1.invalidate(); minus_17_1.invalidate();
 800aa94:	f604 60b4 	addw	r0, r4, #3764	@ 0xeb4
 800aa98:	f011 face 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aa9c:	f604 7044 	addw	r0, r4, #3908	@ 0xf44
 800aaa0:	f011 faca 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aaa4:	f604 70d4 	addw	r0, r4, #4052	@ 0xfd4
 800aaa8:	f011 fac6 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_20_1.invalidate(); minus_25_1.invalidate(); minus_40_1.invalidate();
 800aaac:	f504 5083 	add.w	r0, r4, #4192	@ 0x1060
 800aab0:	3004      	adds	r0, #4
 800aab2:	f011 fac1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aab6:	f504 5087 	add.w	r0, r4, #4320	@ 0x10e0
 800aaba:	3014      	adds	r0, #20
 800aabc:	f011 fabc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aac0:	f504 508c 	add.w	r0, r4, #4480	@ 0x1180
 800aac4:	3004      	adds	r0, #4
 800aac6:	f011 fab7 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_100_1.invalidate();
 800aaca:	f504 5090 	add.w	r0, r4, #4608	@ 0x1200
 800aace:	3014      	adds	r0, #20
 800aad0:	f011 fab2 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    currentAIDamage = 0;
 800aad4:	e9c6 55aa 	strd	r5, r5, [r6, #680]	@ 0x2a8
    damageDisplayActive = false;
 800aad8:	f886 529c 	strb.w	r5, [r6, #668]	@ 0x29c
    damageDisplayTimer = 0;
 800aadc:	f8c6 5298 	str.w	r5, [r6, #664]	@ 0x298
    playerDamageActive = false;
 800aae0:	f8a6 52b0 	strh.w	r5, [r6, #688]	@ 0x2b0
}
 800aae4:	bd70      	pop	{r4, r5, r6, pc}

0800aae6 <_ZN14GameScreenView14showDamageTextEii>:
{
 800aae6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aae8:	460e      	mov	r6, r1
 800aaea:	4617      	mov	r7, r2
 800aaec:	4604      	mov	r4, r0
    hideDamageText();
 800aaee:	f7ff ff25 	bl	800a93c <_ZN14GameScreenView14hideDamageTextEv>
    currentPlayerDamage = playerDamage;
 800aaf2:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
    playerDamageActive = (playerDamage > 0);
 800aaf6:	2e00      	cmp	r6, #0
 800aaf8:	bfd4      	ite	le
 800aafa:	2300      	movle	r3, #0
 800aafc:	2301      	movgt	r3, #1
    aiDamageActive = (aiDamage > 0);
 800aafe:	2f00      	cmp	r7, #0
    playerDamageActive = (playerDamage > 0);
 800ab00:	f885 32b0 	strb.w	r3, [r5, #688]	@ 0x2b0
    aiDamageActive = (aiDamage > 0);
 800ab04:	bfd4      	ite	le
 800ab06:	2300      	movle	r3, #0
 800ab08:	2301      	movgt	r3, #1
    if (playerDamage > 0) {
 800ab0a:	2e00      	cmp	r6, #0
    currentAIDamage = aiDamage;
 800ab0c:	e9c5 67aa 	strd	r6, r7, [r5, #680]	@ 0x2a8
    aiDamageActive = (aiDamage > 0);
 800ab10:	f885 32b1 	strb.w	r3, [r5, #689]	@ 0x2b1
    if (playerDamage > 0) {
 800ab14:	dd36      	ble.n	800ab84 <_ZN14GameScreenView14showDamageTextEii+0x9e>
        switch(playerDamage) {
 800ab16:	2e28      	cmp	r6, #40	@ 0x28
 800ab18:	f04f 0301 	mov.w	r3, #1
 800ab1c:	dc1a      	bgt.n	800ab54 <_ZN14GameScreenView14showDamageTextEii+0x6e>
 800ab1e:	1e71      	subs	r1, r6, #1
 800ab20:	22ff      	movs	r2, #255	@ 0xff
 800ab22:	2927      	cmp	r1, #39	@ 0x27
 800ab24:	f200 80b3 	bhi.w	800ac8e <_ZN14GameScreenView14showDamageTextEii+0x1a8>
 800ab28:	e8df f001 	tbb	[pc, r1]
 800ab2c:	6a632222 	.word	0x6a632222
 800ab30:	867f7871 	.word	0x867f7871
 800ab34:	8db1cfb1 	.word	0x8db1cfb1
 800ab38:	b194b1b1 	.word	0xb194b1b1
 800ab3c:	c8b1b19b 	.word	0xc8b1b19b
 800ab40:	b1b1b1b1 	.word	0xb1b1b1b1
 800ab44:	b1b1b1a2 	.word	0xb1b1b1a2
 800ab48:	b1b1b1b1 	.word	0xb1b1b1b1
 800ab4c:	b1b1b1b1 	.word	0xb1b1b1b1
 800ab50:	a9b1b1b1 	.word	0xa9b1b1b1
 800ab54:	2e64      	cmp	r6, #100	@ 0x64
 800ab56:	d002      	beq.n	800ab5e <_ZN14GameScreenView14showDamageTextEii+0x78>
                if (playerDamage >= 90) {
 800ab58:	2e59      	cmp	r6, #89	@ 0x59
 800ab5a:	f340 809a 	ble.w	800ac92 <_ZN14GameScreenView14showDamageTextEii+0x1ac>
 800ab5e:	f885 31f1 	strb.w	r3, [r5, #497]	@ 0x1f1
        alpha = newAlpha;
 800ab62:	23ff      	movs	r3, #255	@ 0xff
 800ab64:	f885 3202 	strb.w	r3, [r5, #514]	@ 0x202
                    minus_100.invalidate();
 800ab68:	f504 508e 	add.w	r0, r4, #4544	@ 0x11c0
                    minus_25.invalidate();
 800ab6c:	300c      	adds	r0, #12
 800ab6e:	e005      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ab70:	f884 3a11 	strb.w	r3, [r4, #2577]	@ 0xa11
 800ab74:	f884 2a22 	strb.w	r2, [r4, #2594]	@ 0xa22
                minus_1.invalidate();
 800ab78:	f604 10ec 	addw	r0, r4, #2540	@ 0x9ec
                    minus_10.invalidate();
 800ab7c:	f011 fa5c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800ab80:	f7ff fe2a 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    if (aiDamage > 0) {
 800ab84:	2f00      	cmp	r7, #0
 800ab86:	f340 80c0 	ble.w	800ad0a <_ZN14GameScreenView14showDamageTextEii+0x224>
        switch(aiDamage) {
 800ab8a:	2f28      	cmp	r7, #40	@ 0x28
 800ab8c:	f04f 0301 	mov.w	r3, #1
 800ab90:	f300 80a2 	bgt.w	800acd8 <_ZN14GameScreenView14showDamageTextEii+0x1f2>
 800ab94:	1e79      	subs	r1, r7, #1
 800ab96:	22ff      	movs	r2, #255	@ 0xff
 800ab98:	2927      	cmp	r1, #39	@ 0x27
 800ab9a:	f200 811b 	bhi.w	800add4 <_ZN14GameScreenView14showDamageTextEii+0x2ee>
 800ab9e:	e8df f011 	tbh	[pc, r1, lsl #1]
 800aba2:	00a8      	.short	0x00a8
 800aba4:	00cc00a8 	.word	0x00cc00a8
 800aba8:	00da00d3 	.word	0x00da00d3
 800abac:	00e800e1 	.word	0x00e800e1
 800abb0:	011900ef 	.word	0x011900ef
 800abb4:	01190137 	.word	0x01190137
 800abb8:	011900f6 	.word	0x011900f6
 800abbc:	00fd0119 	.word	0x00fd0119
 800abc0:	01040119 	.word	0x01040119
 800abc4:	01190119 	.word	0x01190119
 800abc8:	01190130 	.word	0x01190130
 800abcc:	01190119 	.word	0x01190119
 800abd0:	010a0119 	.word	0x010a0119
 800abd4:	01190119 	.word	0x01190119
 800abd8:	01190119 	.word	0x01190119
 800abdc:	01190119 	.word	0x01190119
 800abe0:	01190119 	.word	0x01190119
 800abe4:	01190119 	.word	0x01190119
 800abe8:	01190119 	.word	0x01190119
 800abec:	01190119 	.word	0x01190119
 800abf0:	0111      	.short	0x0111
 800abf2:	f884 3aa1 	strb.w	r3, [r4, #2721]	@ 0xaa1
 800abf6:	f884 2ab2 	strb.w	r2, [r4, #2738]	@ 0xab2
                minus_3.invalidate();
 800abfa:	f604 207c 	addw	r0, r4, #2684	@ 0xa7c
 800abfe:	e7bd      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac00:	f884 3b31 	strb.w	r3, [r4, #2865]	@ 0xb31
 800ac04:	f884 2b42 	strb.w	r2, [r4, #2882]	@ 0xb42
                minus_4.invalidate();
 800ac08:	f604 300c 	addw	r0, r4, #2828	@ 0xb0c
 800ac0c:	e7b6      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac0e:	f884 3bc1 	strb.w	r3, [r4, #3009]	@ 0xbc1
 800ac12:	f884 2bd2 	strb.w	r2, [r4, #3026]	@ 0xbd2
                minus_5.invalidate();
 800ac16:	f604 309c 	addw	r0, r4, #2972	@ 0xb9c
 800ac1a:	e7af      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac1c:	f884 3c51 	strb.w	r3, [r4, #3153]	@ 0xc51
 800ac20:	f884 2c62 	strb.w	r2, [r4, #3170]	@ 0xc62
                minus_6.invalidate();
 800ac24:	f604 402c 	addw	r0, r4, #3116	@ 0xc2c
 800ac28:	e7a8      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac2a:	f884 3ce1 	strb.w	r3, [r4, #3297]	@ 0xce1
 800ac2e:	f884 2cf2 	strb.w	r2, [r4, #3314]	@ 0xcf2
                minus_7.invalidate();
 800ac32:	f604 40bc 	addw	r0, r4, #3260	@ 0xcbc
 800ac36:	e7a1      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac38:	f884 3d71 	strb.w	r3, [r4, #3441]	@ 0xd71
 800ac3c:	f884 2d82 	strb.w	r2, [r4, #3458]	@ 0xd82
                minus_8.invalidate();
 800ac40:	f604 504c 	addw	r0, r4, #3404	@ 0xd4c
 800ac44:	e79a      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac46:	f884 3e91 	strb.w	r3, [r4, #3729]	@ 0xe91
 800ac4a:	f884 2ea2 	strb.w	r2, [r4, #3746]	@ 0xea2
                minus_12.invalidate();
 800ac4e:	f604 606c 	addw	r0, r4, #3692	@ 0xe6c
 800ac52:	e793      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac54:	f884 3f21 	strb.w	r3, [r4, #3873]	@ 0xf21
 800ac58:	f884 2f32 	strb.w	r2, [r4, #3890]	@ 0xf32
                minus_15.invalidate();
 800ac5c:	f604 60fc 	addw	r0, r4, #3836	@ 0xefc
 800ac60:	e78c      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac62:	f884 3fb1 	strb.w	r3, [r4, #4017]	@ 0xfb1
 800ac66:	f884 2fc2 	strb.w	r2, [r4, #4034]	@ 0xfc2
                minus_17.invalidate();
 800ac6a:	f604 708c 	addw	r0, r4, #3980	@ 0xf8c
 800ac6e:	e785      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ac70:	f885 30d1 	strb.w	r3, [r5, #209]	@ 0xd1
 800ac74:	f885 20e2 	strb.w	r2, [r5, #226]	@ 0xe2
                    minus_25.invalidate();
 800ac78:	f504 5085 	add.w	r0, r4, #4256	@ 0x10a0
 800ac7c:	e776      	b.n	800ab6c <_ZN14GameScreenView14showDamageTextEii+0x86>
 800ac7e:	f885 3161 	strb.w	r3, [r5, #353]	@ 0x161
 800ac82:	f885 2172 	strb.w	r2, [r5, #370]	@ 0x172
                    minus_40.invalidate();
 800ac86:	f504 5089 	add.w	r0, r4, #4384	@ 0x1120
                    minus_20.invalidate();
 800ac8a:	301c      	adds	r0, #28
 800ac8c:	e776      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
                } else if (playerDamage >= 35) {
 800ac8e:	2e22      	cmp	r6, #34	@ 0x22
 800ac90:	dd06      	ble.n	800aca0 <_ZN14GameScreenView14showDamageTextEii+0x1ba>
 800ac92:	2301      	movs	r3, #1
 800ac94:	f885 3161 	strb.w	r3, [r5, #353]	@ 0x161
 800ac98:	23ff      	movs	r3, #255	@ 0xff
 800ac9a:	f885 3172 	strb.w	r3, [r5, #370]	@ 0x172
 800ac9e:	e7f2      	b.n	800ac86 <_ZN14GameScreenView14showDamageTextEii+0x1a0>
                } else if (playerDamage >= 22) {
 800aca0:	2e15      	cmp	r6, #21
 800aca2:	f04f 0301 	mov.w	r3, #1
 800aca6:	dd05      	ble.n	800acb4 <_ZN14GameScreenView14showDamageTextEii+0x1ce>
 800aca8:	f885 30d1 	strb.w	r3, [r5, #209]	@ 0xd1
 800acac:	23ff      	movs	r3, #255	@ 0xff
 800acae:	f885 30e2 	strb.w	r3, [r5, #226]	@ 0xe2
 800acb2:	e7e1      	b.n	800ac78 <_ZN14GameScreenView14showDamageTextEii+0x192>
                } else if (playerDamage >= 18) {
 800acb4:	2e11      	cmp	r6, #17
 800acb6:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 800acba:	dd06      	ble.n	800acca <_ZN14GameScreenView14showDamageTextEii+0x1e4>
 800acbc:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
 800acc0:	f885 2052 	strb.w	r2, [r5, #82]	@ 0x52
                    minus_20.invalidate();
 800acc4:	f504 5080 	add.w	r0, r4, #4096	@ 0x1000
 800acc8:	e7df      	b.n	800ac8a <_ZN14GameScreenView14showDamageTextEii+0x1a4>
 800acca:	f884 3e01 	strb.w	r3, [r4, #3585]	@ 0xe01
 800acce:	f884 2e12 	strb.w	r2, [r4, #3602]	@ 0xe12
                    minus_10.invalidate();
 800acd2:	f604 50dc 	addw	r0, r4, #3548	@ 0xddc
 800acd6:	e751      	b.n	800ab7c <_ZN14GameScreenView14showDamageTextEii+0x96>
        switch(aiDamage) {
 800acd8:	2f64      	cmp	r7, #100	@ 0x64
 800acda:	d001      	beq.n	800ace0 <_ZN14GameScreenView14showDamageTextEii+0x1fa>
                if (aiDamage >= 90) {
 800acdc:	2f59      	cmp	r7, #89	@ 0x59
 800acde:	dd7b      	ble.n	800add8 <_ZN14GameScreenView14showDamageTextEii+0x2f2>
 800ace0:	f885 3239 	strb.w	r3, [r5, #569]	@ 0x239
 800ace4:	23ff      	movs	r3, #255	@ 0xff
 800ace6:	f885 324a 	strb.w	r3, [r5, #586]	@ 0x24a
                    minus_100_1.invalidate();
 800acea:	f504 5090 	add.w	r0, r4, #4608	@ 0x1200
                    minus_25_1.invalidate();
 800acee:	3014      	adds	r0, #20
 800acf0:	e005      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800acf2:	f884 3a59 	strb.w	r3, [r4, #2649]	@ 0xa59
 800acf6:	f884 2a6a 	strb.w	r2, [r4, #2666]	@ 0xa6a
                minus_1_1.invalidate();
 800acfa:	f604 2034 	addw	r0, r4, #2612	@ 0xa34
                    minus_10_1.invalidate();
 800acfe:	f011 f99b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800ad02:	f7ff fd69 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800ad06:	f7ff fd67 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    if (playerDamage > 0 || aiDamage > 0) {
 800ad0a:	2e00      	cmp	r6, #0
 800ad0c:	dc02      	bgt.n	800ad14 <_ZN14GameScreenView14showDamageTextEii+0x22e>
 800ad0e:	2f00      	cmp	r7, #0
 800ad10:	f340 8085 	ble.w	800ae1e <_ZN14GameScreenView14showDamageTextEii+0x338>
        damageDisplayTimer = 0;
 800ad14:	2300      	movs	r3, #0
 800ad16:	f8c5 3298 	str.w	r3, [r5, #664]	@ 0x298
        if (playerDamage > 0 && aiDamage > 0) {
 800ad1a:	2e00      	cmp	r6, #0
        damageDisplayActive = true;
 800ad1c:	f04f 0301 	mov.w	r3, #1
 800ad20:	f885 329c 	strb.w	r3, [r5, #668]	@ 0x29c
        if (playerDamage > 0 && aiDamage > 0) {
 800ad24:	dd7b      	ble.n	800ae1e <_ZN14GameScreenView14showDamageTextEii+0x338>
 800ad26:	2f00      	cmp	r7, #0
 800ad28:	dd79      	ble.n	800ae1e <_ZN14GameScreenView14showDamageTextEii+0x338>
            toggleLED();
 800ad2a:	f7ff fd55 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
            toggleLED();
 800ad2e:	f7ff fd53 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
}
 800ad32:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            toggleLED();
 800ad36:	f7ff bd4f 	b.w	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800ad3a:	f884 3ae9 	strb.w	r3, [r4, #2793]	@ 0xae9
 800ad3e:	f884 2afa 	strb.w	r2, [r4, #2810]	@ 0xafa
                minus_3_1.invalidate();
 800ad42:	f604 20c4 	addw	r0, r4, #2756	@ 0xac4
 800ad46:	e7da      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800ad48:	f884 3b79 	strb.w	r3, [r4, #2937]	@ 0xb79
 800ad4c:	f884 2b8a 	strb.w	r2, [r4, #2954]	@ 0xb8a
                minus_4_1.invalidate();
 800ad50:	f604 3054 	addw	r0, r4, #2900	@ 0xb54
 800ad54:	e7d3      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800ad56:	f884 3c09 	strb.w	r3, [r4, #3081]	@ 0xc09
 800ad5a:	f884 2c1a 	strb.w	r2, [r4, #3098]	@ 0xc1a
                minus_5_1.invalidate();
 800ad5e:	f604 30e4 	addw	r0, r4, #3044	@ 0xbe4
 800ad62:	e7cc      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800ad64:	f884 3c99 	strb.w	r3, [r4, #3225]	@ 0xc99
 800ad68:	f884 2caa 	strb.w	r2, [r4, #3242]	@ 0xcaa
                minus_6_1.invalidate();
 800ad6c:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 800ad70:	e7c5      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800ad72:	f884 3d29 	strb.w	r3, [r4, #3369]	@ 0xd29
 800ad76:	f884 2d3a 	strb.w	r2, [r4, #3386]	@ 0xd3a
                minus_7_1.invalidate();
 800ad7a:	f604 5004 	addw	r0, r4, #3332	@ 0xd04
 800ad7e:	e7be      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800ad80:	f884 3db9 	strb.w	r3, [r4, #3513]	@ 0xdb9
 800ad84:	f884 2dca 	strb.w	r2, [r4, #3530]	@ 0xdca
                minus_8_1.invalidate();
 800ad88:	f604 5094 	addw	r0, r4, #3476	@ 0xd94
 800ad8c:	e7b7      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800ad8e:	f884 3ed9 	strb.w	r3, [r4, #3801]	@ 0xed9
 800ad92:	f884 2eea 	strb.w	r2, [r4, #3818]	@ 0xeea
                minus_12_1.invalidate();
 800ad96:	f604 60b4 	addw	r0, r4, #3764	@ 0xeb4
 800ad9a:	e7b0      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800ad9c:	f884 3f69 	strb.w	r3, [r4, #3945]	@ 0xf69
 800ada0:	f884 2f7a 	strb.w	r2, [r4, #3962]	@ 0xf7a
                minus_15_1.invalidate();
 800ada4:	f604 7044 	addw	r0, r4, #3908	@ 0xf44
 800ada8:	e7a9      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800adaa:	f884 3ff9 	strb.w	r3, [r4, #4089]	@ 0xff9
                minus_17_1.invalidate();
 800adae:	f604 70d4 	addw	r0, r4, #4052	@ 0xfd4
 800adb2:	72aa      	strb	r2, [r5, #10]
 800adb4:	e7a3      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
 800adb6:	f885 3119 	strb.w	r3, [r5, #281]	@ 0x119
 800adba:	f885 212a 	strb.w	r2, [r5, #298]	@ 0x12a
                    minus_25_1.invalidate();
 800adbe:	f504 5087 	add.w	r0, r4, #4320	@ 0x10e0
 800adc2:	e794      	b.n	800acee <_ZN14GameScreenView14showDamageTextEii+0x208>
 800adc4:	f885 31a9 	strb.w	r3, [r5, #425]	@ 0x1a9
 800adc8:	f885 21ba 	strb.w	r2, [r5, #442]	@ 0x1ba
                    minus_40_1.invalidate();
 800adcc:	f504 508c 	add.w	r0, r4, #4480	@ 0x1180
                    minus_20_1.invalidate();
 800add0:	3004      	adds	r0, #4
 800add2:	e794      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
                } else if (aiDamage >= 35) {
 800add4:	2f22      	cmp	r7, #34	@ 0x22
 800add6:	dd06      	ble.n	800ade6 <_ZN14GameScreenView14showDamageTextEii+0x300>
 800add8:	2301      	movs	r3, #1
 800adda:	f885 31a9 	strb.w	r3, [r5, #425]	@ 0x1a9
 800adde:	23ff      	movs	r3, #255	@ 0xff
 800ade0:	f885 31ba 	strb.w	r3, [r5, #442]	@ 0x1ba
 800ade4:	e7f2      	b.n	800adcc <_ZN14GameScreenView14showDamageTextEii+0x2e6>
                } else if (aiDamage >= 22) {
 800ade6:	2f15      	cmp	r7, #21
 800ade8:	f04f 0301 	mov.w	r3, #1
 800adec:	dd05      	ble.n	800adfa <_ZN14GameScreenView14showDamageTextEii+0x314>
 800adee:	f885 3119 	strb.w	r3, [r5, #281]	@ 0x119
 800adf2:	23ff      	movs	r3, #255	@ 0xff
 800adf4:	f885 312a 	strb.w	r3, [r5, #298]	@ 0x12a
 800adf8:	e7e1      	b.n	800adbe <_ZN14GameScreenView14showDamageTextEii+0x2d8>
                } else if (aiDamage >= 18) {
 800adfa:	2f11      	cmp	r7, #17
 800adfc:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 800ae00:	dd06      	ble.n	800ae10 <_ZN14GameScreenView14showDamageTextEii+0x32a>
 800ae02:	f885 3089 	strb.w	r3, [r5, #137]	@ 0x89
 800ae06:	f885 209a 	strb.w	r2, [r5, #154]	@ 0x9a
                    minus_20_1.invalidate();
 800ae0a:	f504 5083 	add.w	r0, r4, #4192	@ 0x1060
 800ae0e:	e7df      	b.n	800add0 <_ZN14GameScreenView14showDamageTextEii+0x2ea>
 800ae10:	f884 3e49 	strb.w	r3, [r4, #3657]	@ 0xe49
 800ae14:	f884 2e5a 	strb.w	r2, [r4, #3674]	@ 0xe5a
                    minus_10_1.invalidate();
 800ae18:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800ae1c:	e76f      	b.n	800acfe <_ZN14GameScreenView14showDamageTextEii+0x218>
}
 800ae1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ae20 <_ZN14GameScreenView19updateDamageDisplayEv>:
{
 800ae20:	b570      	push	{r4, r5, r6, lr}
    if (!damageDisplayActive) return;
 800ae22:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
{
 800ae26:	4604      	mov	r4, r0
    if (!damageDisplayActive) return;
 800ae28:	f896 329c 	ldrb.w	r3, [r6, #668]	@ 0x29c
 800ae2c:	2b00      	cmp	r3, #0
 800ae2e:	f000 8124 	beq.w	800b07a <_ZN14GameScreenView19updateDamageDisplayEv+0x25a>
    damageDisplayTimer += 16; // TouchGFX tick ~16ms
 800ae32:	f8d6 3298 	ldr.w	r3, [r6, #664]	@ 0x298
    float progress = (float)damageDisplayTimer / DAMAGE_DISPLAY_TIME_MS;
 800ae36:	eddf 6a91 	vldr	s13, [pc, #580]	@ 800b07c <_ZN14GameScreenView19updateDamageDisplayEv+0x25c>
    damageDisplayTimer += 16; // TouchGFX tick ~16ms
 800ae3a:	3310      	adds	r3, #16
    float progress = (float)damageDisplayTimer / DAMAGE_DISPLAY_TIME_MS;
 800ae3c:	ee07 3a90 	vmov	s15, r3
 800ae40:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    damageDisplayTimer += 16; // TouchGFX tick ~16ms
 800ae44:	f8c6 3298 	str.w	r3, [r6, #664]	@ 0x298
    float progress = (float)damageDisplayTimer / DAMAGE_DISPLAY_TIME_MS;
 800ae48:	eec7 7a26 	vdiv.f32	s15, s14, s13
    if (progress > 1.0f) progress = 1.0f;
 800ae4c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ae50:	eef4 7a47 	vcmp.f32	s15, s14
 800ae54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae58:	bfc8      	it	gt
 800ae5a:	eef0 7a47 	vmovgt.f32	s15, s14
    int alpha = 255 - (int)(progress * 255);
 800ae5e:	ed9f 7a88 	vldr	s14, [pc, #544]	@ 800b080 <_ZN14GameScreenView19updateDamageDisplayEv+0x260>
 800ae62:	ee67 7a87 	vmul.f32	s15, s15, s14
 800ae66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ae6a:	ee17 3a90 	vmov	r3, s15
 800ae6e:	f1c3 05ff 	rsb	r5, r3, #255	@ 0xff
    if (playerDamageActive && currentPlayerDamage > 0) {
 800ae72:	f896 32b0 	ldrb.w	r3, [r6, #688]	@ 0x2b0
    if (alpha < 0) alpha = 0;
 800ae76:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
    if (playerDamageActive && currentPlayerDamage > 0) {
 800ae7a:	b37b      	cbz	r3, 800aedc <_ZN14GameScreenView19updateDamageDisplayEv+0xbc>
 800ae7c:	f8d6 22a8 	ldr.w	r2, [r6, #680]	@ 0x2a8
 800ae80:	2a00      	cmp	r2, #0
 800ae82:	dd2b      	ble.n	800aedc <_ZN14GameScreenView19updateDamageDisplayEv+0xbc>
        switch(currentPlayerDamage) {
 800ae84:	2a28      	cmp	r2, #40	@ 0x28
            case 2: minus_1.setAlpha(alpha); minus_1.invalidate(); break;
 800ae86:	b2eb      	uxtb	r3, r5
        switch(currentPlayerDamage) {
 800ae88:	dc18      	bgt.n	800aebc <_ZN14GameScreenView19updateDamageDisplayEv+0x9c>
 800ae8a:	1e51      	subs	r1, r2, #1
 800ae8c:	2927      	cmp	r1, #39	@ 0x27
 800ae8e:	d877      	bhi.n	800af80 <_ZN14GameScreenView19updateDamageDisplayEv+0x160>
 800ae90:	e8df f001 	tbb	[pc, r1]
 800ae94:	4e491e1e 	.word	0x4e491e1e
 800ae98:	625d5853 	.word	0x625d5853
 800ae9c:	67768c76 	.word	0x67768c76
 800aea0:	766c7676 	.word	0x766c7676
 800aea4:	87767671 	.word	0x87767671
 800aea8:	76767676 	.word	0x76767676
 800aeac:	76767680 	.word	0x76767680
 800aeb0:	76767676 	.word	0x76767676
 800aeb4:	76767676 	.word	0x76767676
 800aeb8:	78767676 	.word	0x78767676
 800aebc:	2a64      	cmp	r2, #100	@ 0x64
 800aebe:	d001      	beq.n	800aec4 <_ZN14GameScreenView19updateDamageDisplayEv+0xa4>
                if (currentPlayerDamage >= 90) {
 800aec0:	2a59      	cmp	r2, #89	@ 0x59
 800aec2:	dd5f      	ble.n	800af84 <_ZN14GameScreenView19updateDamageDisplayEv+0x164>
 800aec4:	f886 3202 	strb.w	r3, [r6, #514]	@ 0x202
                    minus_100.setAlpha(alpha); minus_100.invalidate();
 800aec8:	f504 508e 	add.w	r0, r4, #4544	@ 0x11c0
                    minus_25.setAlpha(alpha); minus_25.invalidate();
 800aecc:	300c      	adds	r0, #12
 800aece:	e003      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800aed0:	f884 3a22 	strb.w	r3, [r4, #2594]	@ 0xa22
            case 2: minus_1.setAlpha(alpha); minus_1.invalidate(); break;
 800aed4:	f604 10ec 	addw	r0, r4, #2540	@ 0x9ec
                    minus_10.setAlpha(alpha); minus_10.invalidate();
 800aed8:	f011 f8ae 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiDamageActive && currentAIDamage > 0) {
 800aedc:	f896 32b1 	ldrb.w	r3, [r6, #689]	@ 0x2b1
 800aee0:	2b00      	cmp	r3, #0
 800aee2:	d078      	beq.n	800afd6 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b6>
 800aee4:	f8d6 22ac 	ldr.w	r2, [r6, #684]	@ 0x2ac
 800aee8:	2a00      	cmp	r2, #0
 800aeea:	dd74      	ble.n	800afd6 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b6>
        switch(currentAIDamage) {
 800aeec:	2a28      	cmp	r2, #40	@ 0x28
            case 2: minus_1.setAlpha(alpha); minus_1.invalidate(); break;
 800aeee:	b2eb      	uxtb	r3, r5
        switch(currentAIDamage) {
 800aef0:	dc61      	bgt.n	800afb6 <_ZN14GameScreenView19updateDamageDisplayEv+0x196>
 800aef2:	1e51      	subs	r1, r2, #1
 800aef4:	2927      	cmp	r1, #39	@ 0x27
 800aef6:	f200 80a5 	bhi.w	800b044 <_ZN14GameScreenView19updateDamageDisplayEv+0x224>
 800aefa:	e8df f001 	tbb	[pc, r1]
 800aefe:	6666      	.short	0x6666
 800af00:	86817c77 	.word	0x86817c77
 800af04:	b9a3908b 	.word	0xb9a3908b
 800af08:	a3a395a3 	.word	0xa3a395a3
 800af0c:	a39fa39a 	.word	0xa39fa39a
 800af10:	a3a3b4a3 	.word	0xa3a3b4a3
 800af14:	a3ada3a3 	.word	0xa3ada3a3
 800af18:	a3a3a3a3 	.word	0xa3a3a3a3
 800af1c:	a3a3a3a3 	.word	0xa3a3a3a3
 800af20:	a3a3a3a3 	.word	0xa3a3a3a3
 800af24:	a5a3      	.short	0xa5a3
 800af26:	f884 3ab2 	strb.w	r3, [r4, #2738]	@ 0xab2
            case 3: minus_3.setAlpha(alpha); minus_3.invalidate(); break;
 800af2a:	f604 207c 	addw	r0, r4, #2684	@ 0xa7c
 800af2e:	e7d3      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af30:	f884 3b42 	strb.w	r3, [r4, #2882]	@ 0xb42
            case 4: minus_4.setAlpha(alpha); minus_4.invalidate(); break;
 800af34:	f604 300c 	addw	r0, r4, #2828	@ 0xb0c
 800af38:	e7ce      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af3a:	f884 3bd2 	strb.w	r3, [r4, #3026]	@ 0xbd2
            case 5: minus_5.setAlpha(alpha); minus_5.invalidate(); break;
 800af3e:	f604 309c 	addw	r0, r4, #2972	@ 0xb9c
 800af42:	e7c9      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af44:	f884 3c62 	strb.w	r3, [r4, #3170]	@ 0xc62
            case 6: minus_6.setAlpha(alpha); minus_6.invalidate(); break;
 800af48:	f604 402c 	addw	r0, r4, #3116	@ 0xc2c
 800af4c:	e7c4      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af4e:	f884 3cf2 	strb.w	r3, [r4, #3314]	@ 0xcf2
            case 7: minus_7.setAlpha(alpha); minus_7.invalidate(); break;
 800af52:	f604 40bc 	addw	r0, r4, #3260	@ 0xcbc
 800af56:	e7bf      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af58:	f884 3d82 	strb.w	r3, [r4, #3458]	@ 0xd82
            case 8: minus_8.setAlpha(alpha); minus_8.invalidate(); break;
 800af5c:	f604 504c 	addw	r0, r4, #3404	@ 0xd4c
 800af60:	e7ba      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af62:	f884 3ea2 	strb.w	r3, [r4, #3746]	@ 0xea2
            case 12: minus_12.setAlpha(alpha); minus_12.invalidate(); break;
 800af66:	f604 606c 	addw	r0, r4, #3692	@ 0xe6c
 800af6a:	e7b5      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af6c:	f884 3f32 	strb.w	r3, [r4, #3890]	@ 0xf32
            case 15: minus_15.setAlpha(alpha); minus_15.invalidate(); break;
 800af70:	f604 60fc 	addw	r0, r4, #3836	@ 0xefc
 800af74:	e7b0      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800af76:	f884 3fc2 	strb.w	r3, [r4, #4034]	@ 0xfc2
            case 17: minus_17.setAlpha(alpha); minus_17.invalidate(); break;
 800af7a:	f604 708c 	addw	r0, r4, #3980	@ 0xf8c
 800af7e:	e7ab      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
                } else if (currentPlayerDamage >= 35) {
 800af80:	2a22      	cmp	r2, #34	@ 0x22
 800af82:	dd05      	ble.n	800af90 <_ZN14GameScreenView19updateDamageDisplayEv+0x170>
 800af84:	f886 3172 	strb.w	r3, [r6, #370]	@ 0x172
                    minus_40.setAlpha(alpha); minus_40.invalidate();
 800af88:	f504 5089 	add.w	r0, r4, #4384	@ 0x1120
                    minus_20.setAlpha(alpha); minus_20.invalidate();
 800af8c:	301c      	adds	r0, #28
 800af8e:	e7a3      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
                } else if (currentPlayerDamage >= 22) {
 800af90:	2a15      	cmp	r2, #21
 800af92:	dd04      	ble.n	800af9e <_ZN14GameScreenView19updateDamageDisplayEv+0x17e>
 800af94:	f886 30e2 	strb.w	r3, [r6, #226]	@ 0xe2
                    minus_25.setAlpha(alpha); minus_25.invalidate();
 800af98:	f504 5085 	add.w	r0, r4, #4256	@ 0x10a0
 800af9c:	e796      	b.n	800aecc <_ZN14GameScreenView19updateDamageDisplayEv+0xac>
                } else if (currentPlayerDamage >= 18) {
 800af9e:	2a11      	cmp	r2, #17
 800afa0:	dd04      	ble.n	800afac <_ZN14GameScreenView19updateDamageDisplayEv+0x18c>
 800afa2:	f886 3052 	strb.w	r3, [r6, #82]	@ 0x52
                    minus_20.setAlpha(alpha); minus_20.invalidate();
 800afa6:	f504 5080 	add.w	r0, r4, #4096	@ 0x1000
 800afaa:	e7ef      	b.n	800af8c <_ZN14GameScreenView19updateDamageDisplayEv+0x16c>
 800afac:	f884 3e12 	strb.w	r3, [r4, #3602]	@ 0xe12
                    minus_10.setAlpha(alpha); minus_10.invalidate();
 800afb0:	f604 50dc 	addw	r0, r4, #3548	@ 0xddc
 800afb4:	e790      	b.n	800aed8 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
        switch(currentAIDamage) {
 800afb6:	2a64      	cmp	r2, #100	@ 0x64
 800afb8:	d001      	beq.n	800afbe <_ZN14GameScreenView19updateDamageDisplayEv+0x19e>
                if (currentAIDamage >= 90) {
 800afba:	2a59      	cmp	r2, #89	@ 0x59
 800afbc:	dd44      	ble.n	800b048 <_ZN14GameScreenView19updateDamageDisplayEv+0x228>
 800afbe:	f886 324a 	strb.w	r3, [r6, #586]	@ 0x24a
                    minus_100_1.setAlpha(alpha); minus_100_1.invalidate();
 800afc2:	f504 5090 	add.w	r0, r4, #4608	@ 0x1200
                    minus_25_1.setAlpha(alpha); minus_25_1.invalidate();
 800afc6:	3014      	adds	r0, #20
 800afc8:	e003      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800afca:	f884 3a6a 	strb.w	r3, [r4, #2666]	@ 0xa6a
            case 2: minus_1_1.setAlpha(alpha); minus_1_1.invalidate(); break;
 800afce:	f604 2034 	addw	r0, r4, #2612	@ 0xa34
                    minus_10_1.setAlpha(alpha); minus_10_1.invalidate();
 800afd2:	f011 f831 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (damageDisplayTimer >= DAMAGE_DISPLAY_TIME_MS) {
 800afd6:	f8d6 2298 	ldr.w	r2, [r6, #664]	@ 0x298
 800afda:	f240 53db 	movw	r3, #1499	@ 0x5db
 800afde:	429a      	cmp	r2, r3
 800afe0:	dd4b      	ble.n	800b07a <_ZN14GameScreenView19updateDamageDisplayEv+0x25a>
        hideDamageText();
 800afe2:	4620      	mov	r0, r4
}
 800afe4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        hideDamageText();
 800afe8:	f7ff bca8 	b.w	800a93c <_ZN14GameScreenView14hideDamageTextEv>
 800afec:	f884 3afa 	strb.w	r3, [r4, #2810]	@ 0xafa
            case 3: minus_3_1.setAlpha(alpha); minus_3_1.invalidate(); break;
 800aff0:	f604 20c4 	addw	r0, r4, #2756	@ 0xac4
 800aff4:	e7ed      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800aff6:	f884 3b8a 	strb.w	r3, [r4, #2954]	@ 0xb8a
            case 4: minus_4_1.setAlpha(alpha); minus_4_1.invalidate(); break;
 800affa:	f604 3054 	addw	r0, r4, #2900	@ 0xb54
 800affe:	e7e8      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b000:	f884 3c1a 	strb.w	r3, [r4, #3098]	@ 0xc1a
            case 5: minus_5_1.setAlpha(alpha); minus_5_1.invalidate(); break;
 800b004:	f604 30e4 	addw	r0, r4, #3044	@ 0xbe4
 800b008:	e7e3      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b00a:	f884 3caa 	strb.w	r3, [r4, #3242]	@ 0xcaa
            case 6: minus_6_1.setAlpha(alpha); minus_6_1.invalidate(); break;
 800b00e:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 800b012:	e7de      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b014:	f884 3d3a 	strb.w	r3, [r4, #3386]	@ 0xd3a
            case 7: minus_7_1.setAlpha(alpha); minus_7_1.invalidate(); break;
 800b018:	f604 5004 	addw	r0, r4, #3332	@ 0xd04
 800b01c:	e7d9      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b01e:	f884 3dca 	strb.w	r3, [r4, #3530]	@ 0xdca
            case 8: minus_8_1.setAlpha(alpha); minus_8_1.invalidate(); break;
 800b022:	f604 5094 	addw	r0, r4, #3476	@ 0xd94
 800b026:	e7d4      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b028:	f884 3eea 	strb.w	r3, [r4, #3818]	@ 0xeea
            case 12: minus_12_1.setAlpha(alpha); minus_12_1.invalidate(); break;
 800b02c:	f604 60b4 	addw	r0, r4, #3764	@ 0xeb4
 800b030:	e7cf      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b032:	f884 3f7a 	strb.w	r3, [r4, #3962]	@ 0xf7a
            case 15: minus_15_1.setAlpha(alpha); minus_15_1.invalidate(); break;
 800b036:	f604 7044 	addw	r0, r4, #3908	@ 0xf44
 800b03a:	e7ca      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b03c:	72b3      	strb	r3, [r6, #10]
            case 17: minus_17_1.setAlpha(alpha); minus_17_1.invalidate(); break;
 800b03e:	f604 70d4 	addw	r0, r4, #4052	@ 0xfd4
 800b042:	e7c6      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
                } else if (currentAIDamage >= 35) {
 800b044:	2a22      	cmp	r2, #34	@ 0x22
 800b046:	dd05      	ble.n	800b054 <_ZN14GameScreenView19updateDamageDisplayEv+0x234>
 800b048:	f886 31ba 	strb.w	r3, [r6, #442]	@ 0x1ba
                    minus_40_1.setAlpha(alpha); minus_40_1.invalidate();
 800b04c:	f504 508c 	add.w	r0, r4, #4480	@ 0x1180
                    minus_20_1.setAlpha(alpha); minus_20_1.invalidate();
 800b050:	3004      	adds	r0, #4
 800b052:	e7be      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
                } else if (currentAIDamage >= 22) {
 800b054:	2a15      	cmp	r2, #21
 800b056:	dd04      	ble.n	800b062 <_ZN14GameScreenView19updateDamageDisplayEv+0x242>
 800b058:	f886 312a 	strb.w	r3, [r6, #298]	@ 0x12a
                    minus_25_1.setAlpha(alpha); minus_25_1.invalidate();
 800b05c:	f504 5087 	add.w	r0, r4, #4320	@ 0x10e0
 800b060:	e7b1      	b.n	800afc6 <_ZN14GameScreenView19updateDamageDisplayEv+0x1a6>
                } else if (currentAIDamage >= 18) {
 800b062:	2a11      	cmp	r2, #17
 800b064:	dd04      	ble.n	800b070 <_ZN14GameScreenView19updateDamageDisplayEv+0x250>
 800b066:	f886 309a 	strb.w	r3, [r6, #154]	@ 0x9a
                    minus_20_1.setAlpha(alpha); minus_20_1.invalidate();
 800b06a:	f504 5083 	add.w	r0, r4, #4192	@ 0x1060
 800b06e:	e7ef      	b.n	800b050 <_ZN14GameScreenView19updateDamageDisplayEv+0x230>
 800b070:	f884 3e5a 	strb.w	r3, [r4, #3674]	@ 0xe5a
                    minus_10_1.setAlpha(alpha); minus_10_1.invalidate();
 800b074:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800b078:	e7ab      	b.n	800afd2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
}
 800b07a:	bd70      	pop	{r4, r5, r6, pc}
 800b07c:	44bb8000 	.word	0x44bb8000
 800b080:	437f0000 	.word	0x437f0000

0800b084 <_ZN14GameScreenView17hideActionButtonsEv>:
{
 800b084:	b538      	push	{r3, r4, r5, lr}
 800b086:	2301      	movs	r3, #1
 800b088:	2500      	movs	r5, #0
 800b08a:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800b08e:	4604      	mov	r4, r0
 800b090:	f880 5695 	strb.w	r5, [r0, #1685]	@ 0x695
 800b094:	f880 56c1 	strb.w	r5, [r0, #1729]	@ 0x6c1
 800b098:	f880 56ed 	strb.w	r5, [r0, #1773]	@ 0x6ed
 800b09c:	f880 5719 	strb.w	r5, [r0, #1817]	@ 0x719
    btn_attack.invalidate();
 800b0a0:	f500 60ce 	add.w	r0, r0, #1648	@ 0x670
 800b0a4:	f010 ffc8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800b0a8:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800b0ac:	f010 ffc4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800b0b0:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800b0b4:	f010 ffc0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800b0b8:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800b0bc:	f010 ffbc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800b0c0:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    menuOpen = false;
 800b0c4:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
    btn_arrow2.invalidate();
 800b0c8:	f010 ffb6 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = false;
 800b0cc:	f884 5264 	strb.w	r5, [r4, #612]	@ 0x264
}
 800b0d0:	bd38      	pop	{r3, r4, r5, pc}

0800b0d2 <_ZN14GameScreenView17showActionButtonsEv>:
{
 800b0d2:	b538      	push	{r3, r4, r5, lr}
 800b0d4:	2300      	movs	r3, #0
 800b0d6:	2501      	movs	r5, #1
 800b0d8:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800b0dc:	4604      	mov	r4, r0
 800b0de:	f880 5695 	strb.w	r5, [r0, #1685]	@ 0x695
 800b0e2:	f880 56c1 	strb.w	r5, [r0, #1729]	@ 0x6c1
 800b0e6:	f880 56ed 	strb.w	r5, [r0, #1773]	@ 0x6ed
 800b0ea:	f880 5719 	strb.w	r5, [r0, #1817]	@ 0x719
    btn_attack.invalidate();
 800b0ee:	f500 60ce 	add.w	r0, r0, #1648	@ 0x670
 800b0f2:	f010 ffa1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800b0f6:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800b0fa:	f010 ff9d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800b0fe:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800b102:	f010 ff99 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800b106:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800b10a:	f010 ff95 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800b10e:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    menuOpen = true;
 800b112:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
    btn_arrow2.invalidate();
 800b116:	f010 ff8f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = true;
 800b11a:	f884 5264 	strb.w	r5, [r4, #612]	@ 0x264
}
 800b11e:	bd38      	pop	{r3, r4, r5, pc}

0800b120 <_ZN14GameScreenView16toggleActionMenuEv>:
{
 800b120:	b508      	push	{r3, lr}
    if (menuOpen) {
 800b122:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800b126:	f893 3264 	ldrb.w	r3, [r3, #612]	@ 0x264
 800b12a:	b12b      	cbz	r3, 800b138 <_ZN14GameScreenView16toggleActionMenuEv+0x18>
        hideActionButtons();
 800b12c:	f7ff ffaa 	bl	800b084 <_ZN14GameScreenView17hideActionButtonsEv>
}
 800b130:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    toggleLED();
 800b134:	f7ff bb50 	b.w	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        showActionButtons();
 800b138:	f7ff ffcb 	bl	800b0d2 <_ZN14GameScreenView17showActionButtonsEv>
 800b13c:	e7f8      	b.n	800b130 <_ZN14GameScreenView16toggleActionMenuEv+0x10>

0800b13e <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>:
{
 800b13e:	b510      	push	{r4, lr}
 800b140:	2300      	movs	r3, #0
 800b142:	4604      	mov	r4, r0
 800b144:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800b148:	f880 3879 	strb.w	r3, [r0, #2169]	@ 0x879
 800b14c:	f880 38a5 	strb.w	r3, [r0, #2213]	@ 0x8a5
 800b150:	f880 38d1 	strb.w	r3, [r0, #2257]	@ 0x8d1
    x2dame_1.invalidate();
 800b154:	f600 0028 	addw	r0, r0, #2088	@ 0x828
 800b158:	f010 ff6e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_1.invalidate();
 800b15c:	f604 0054 	addw	r0, r4, #2132	@ 0x854
 800b160:	f010 ff6a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_1.invalidate();
 800b164:	f504 6008 	add.w	r0, r4, #2176	@ 0x880
 800b168:	f010 ff66 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_1.invalidate();
 800b16c:	f604 00ac 	addw	r0, r4, #2220	@ 0x8ac
}
 800b170:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_1.invalidate();
 800b174:	f010 bf60 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b178 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>:
{
 800b178:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b17a:	4604      	mov	r4, r0
    hideAllPlayerPowerUps();
 800b17c:	f7ff ffdf 	bl	800b13e <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>
    if (!playerPowerUpActive) return;
 800b180:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800b184:	f893 2294 	ldrb.w	r2, [r3, #660]	@ 0x294
 800b188:	2a00      	cmp	r2, #0
 800b18a:	d053      	beq.n	800b234 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0xbc>
    switch (playerPowerUpType) {
 800b18c:	f8d3 328c 	ldr.w	r3, [r3, #652]	@ 0x28c
 800b190:	3b01      	subs	r3, #1
 800b192:	2b03      	cmp	r3, #3
 800b194:	d80a      	bhi.n	800b1ac <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x34>
 800b196:	e8df f003 	tbb	[pc, r3]
 800b19a:	0f02      	.short	0x0f02
 800b19c:	3c26      	.short	0x3c26
 800b19e:	2301      	movs	r3, #1
 800b1a0:	f884 384d 	strb.w	r3, [r4, #2125]	@ 0x84d
            x2dame_1.invalidate();
 800b1a4:	f604 0028 	addw	r0, r4, #2088	@ 0x828
            sheild_1.invalidate();
 800b1a8:	f010 ff46 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b1ac:	1d20      	adds	r0, r4, #4
}
 800b1ae:	b002      	add	sp, #8
 800b1b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1b4:	f010 bf40 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800b1b8:	23ff      	movs	r3, #255	@ 0xff
 800b1ba:	f884 387c 	strb.w	r3, [r4, #2172]	@ 0x87c
 800b1be:	2601      	movs	r6, #1
            healthplus_1.setPosition(9, 61, 32, 37);
 800b1c0:	f604 0554 	addw	r5, r4, #2132	@ 0x854
 800b1c4:	2325      	movs	r3, #37	@ 0x25
 800b1c6:	f884 6879 	strb.w	r6, [r4, #2169]	@ 0x879
 800b1ca:	223d      	movs	r2, #61	@ 0x3d
 800b1cc:	9300      	str	r3, [sp, #0]
 800b1ce:	2109      	movs	r1, #9
 800b1d0:	2320      	movs	r3, #32
 800b1d2:	4628      	mov	r0, r5
 800b1d4:	f7f7 fc68 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
            healthplus_1.invalidate();
 800b1d8:	4628      	mov	r0, r5
 800b1da:	f010 ff2d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b1de:	f884 6879 	strb.w	r6, [r4, #2169]	@ 0x879
            sheild_1.invalidate();
 800b1e2:	4628      	mov	r0, r5
 800b1e4:	e7e0      	b.n	800b1a8 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x30>
 800b1e6:	23ff      	movs	r3, #255	@ 0xff
 800b1e8:	f884 38a8 	strb.w	r3, [r4, #2216]	@ 0x8a8
 800b1ec:	2601      	movs	r6, #1
            chakragain_1.setPosition(9, 61, 32, 37);
 800b1ee:	f504 6508 	add.w	r5, r4, #2176	@ 0x880
 800b1f2:	2325      	movs	r3, #37	@ 0x25
 800b1f4:	f884 68a5 	strb.w	r6, [r4, #2213]	@ 0x8a5
 800b1f8:	223d      	movs	r2, #61	@ 0x3d
 800b1fa:	9300      	str	r3, [sp, #0]
 800b1fc:	2109      	movs	r1, #9
 800b1fe:	2320      	movs	r3, #32
 800b200:	4628      	mov	r0, r5
 800b202:	f7f7 fc51 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
            chakragain_1.invalidate();
 800b206:	4628      	mov	r0, r5
 800b208:	f010 ff16 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b20c:	f884 68a5 	strb.w	r6, [r4, #2213]	@ 0x8a5
            chakragain_1.invalidate();
 800b210:	e7e7      	b.n	800b1e2 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x6a>
 800b212:	2301      	movs	r3, #1
 800b214:	f884 38d1 	strb.w	r3, [r4, #2257]	@ 0x8d1
 800b218:	23ff      	movs	r3, #255	@ 0xff
 800b21a:	f884 38d4 	strb.w	r3, [r4, #2260]	@ 0x8d4
            sheild_1.setPosition(8, 59, 32, 37);
 800b21e:	f604 05ac 	addw	r5, r4, #2220	@ 0x8ac
 800b222:	2325      	movs	r3, #37	@ 0x25
 800b224:	9300      	str	r3, [sp, #0]
 800b226:	223b      	movs	r2, #59	@ 0x3b
 800b228:	2320      	movs	r3, #32
 800b22a:	2108      	movs	r1, #8
 800b22c:	4628      	mov	r0, r5
 800b22e:	f7f7 fc3b 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b232:	e7d6      	b.n	800b1e2 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x6a>
}
 800b234:	b002      	add	sp, #8
 800b236:	bd70      	pop	{r4, r5, r6, pc}

0800b238 <_ZN14GameScreenView17hideAllAIPowerUpsEv>:
{
 800b238:	b510      	push	{r4, lr}
 800b23a:	2300      	movs	r3, #0
 800b23c:	4604      	mov	r4, r0
 800b23e:	f880 3821 	strb.w	r3, [r0, #2081]	@ 0x821
 800b242:	f880 3955 	strb.w	r3, [r0, #2389]	@ 0x955
 800b246:	f880 3929 	strb.w	r3, [r0, #2345]	@ 0x929
 800b24a:	f880 38fd 	strb.w	r3, [r0, #2301]	@ 0x8fd
    x2dame_2.invalidate();
 800b24e:	f200 70fc 	addw	r0, r0, #2044	@ 0x7fc
 800b252:	f010 fef1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_2.invalidate();
 800b256:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
 800b25a:	f010 feed 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_2.invalidate();
 800b25e:	f604 1004 	addw	r0, r4, #2308	@ 0x904
 800b262:	f010 fee9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_2.invalidate();
 800b266:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
}
 800b26a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_2.invalidate();
 800b26e:	f010 bee3 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b272 <_ZN14GameScreenView22updateAIPowerUpDisplayEv>:
{
 800b272:	b510      	push	{r4, lr}
 800b274:	4604      	mov	r4, r0
    hideAllAIPowerUps();
 800b276:	f7ff ffdf 	bl	800b238 <_ZN14GameScreenView17hideAllAIPowerUpsEv>
    if (!aiPowerUpActive) {
 800b27a:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800b27e:	f893 2295 	ldrb.w	r2, [r3, #661]	@ 0x295
 800b282:	b33a      	cbz	r2, 800b2d4 <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x62>
    switch (aiPowerUpType) {
 800b284:	f8d3 3290 	ldr.w	r3, [r3, #656]	@ 0x290
 800b288:	3b01      	subs	r3, #1
 800b28a:	2b03      	cmp	r3, #3
 800b28c:	d822      	bhi.n	800b2d4 <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x62>
 800b28e:	e8df f003 	tbb	[pc, r3]
 800b292:	0c02      	.short	0x0c02
 800b294:	1a13      	.short	0x1a13
        touchable = touch;
 800b296:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b29a:	f8a4 3820 	strh.w	r3, [r4, #2080]	@ 0x820
            x2dame_2.invalidate();
 800b29e:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
}
 800b2a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            sheild_2.invalidate();
 800b2a6:	f010 bec7 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b2aa:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b2ae:	f8a4 3954 	strh.w	r3, [r4, #2388]	@ 0x954
            healthplus_2.invalidate();
 800b2b2:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
 800b2b6:	e7f4      	b.n	800b2a2 <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x30>
 800b2b8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b2bc:	f8a4 3928 	strh.w	r3, [r4, #2344]	@ 0x928
            chakragain_2.invalidate();
 800b2c0:	f604 1004 	addw	r0, r4, #2308	@ 0x904
 800b2c4:	e7ed      	b.n	800b2a2 <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x30>
 800b2c6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b2ca:	f8a4 38fc 	strh.w	r3, [r4, #2300]	@ 0x8fc
            sheild_2.invalidate();
 800b2ce:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800b2d2:	e7e6      	b.n	800b2a2 <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x30>
}
 800b2d4:	bd10      	pop	{r4, pc}

0800b2d6 <_ZN14GameScreenView16resetNarutoStateEv>:
        visible = vis;
 800b2d6:	2300      	movs	r3, #0
}

// ==================== CHARACTER STATE FUNCTIONS ====================

void GameScreenView::resetNarutoState()
{
 800b2d8:	b510      	push	{r4, lr}
 800b2da:	f880 3669 	strb.w	r3, [r0, #1641]	@ 0x669
 800b2de:	f880 363d 	strb.w	r3, [r0, #1597]	@ 0x63d
 800b2e2:	f880 3611 	strb.w	r3, [r0, #1553]	@ 0x611
 800b2e6:	f880 35e5 	strb.w	r3, [r0, #1509]	@ 0x5e5
 800b2ea:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
    naruto_spe.setVisible(false);
    naruto_lose.setVisible(false);
    naruto_win.setVisible(false);

    // Hiển thị lại naruto bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (playerHP > 0 && !gameEnded) {
 800b2ee:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
{
 800b2f2:	4604      	mov	r4, r0
    if (playerHP > 0 && !gameEnded) {
 800b2f4:	f8d3 225c 	ldr.w	r2, [r3, #604]	@ 0x25c
 800b2f8:	2a00      	cmp	r2, #0
 800b2fa:	dd05      	ble.n	800b308 <_ZN14GameScreenView16resetNarutoStateEv+0x32>
 800b2fc:	f893 3265 	ldrb.w	r3, [r3, #613]	@ 0x265
 800b300:	b913      	cbnz	r3, 800b308 <_ZN14GameScreenView16resetNarutoStateEv+0x32>
 800b302:	2301      	movs	r3, #1
 800b304:	f880 358d 	strb.w	r3, [r0, #1421]	@ 0x58d
        naruto.setVisible(true);
    }

    // Invalidate tất cả
    naruto_atk.invalidate();
 800b308:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800b30c:	f010 fe94 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800b310:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800b314:	f010 fe90 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800b318:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800b31c:	f010 fe8c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800b320:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800b324:	f010 fe88 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800b328:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800b32c:	f010 fe84 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800b330:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
}
 800b334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800b338:	f010 be7e 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b33c <_ZN14GameScreenView16resetBleachStateEv>:
 800b33c:	2300      	movs	r3, #0

void GameScreenView::resetBleachState()
{
 800b33e:	b510      	push	{r4, lr}
 800b340:	f880 3561 	strb.w	r3, [r0, #1377]	@ 0x561
 800b344:	f880 3535 	strb.w	r3, [r0, #1333]	@ 0x535
 800b348:	f880 3509 	strb.w	r3, [r0, #1289]	@ 0x509
 800b34c:	f880 34dd 	strb.w	r3, [r0, #1245]	@ 0x4dd
 800b350:	f880 34b1 	strb.w	r3, [r0, #1201]	@ 0x4b1
    bleach_spe.setVisible(false);
    bleach_lose.setVisible(false);
    bleach_win.setVisible(false);

    // Hiển thị lại bleach bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (aiHP > 0 && !gameEnded) {
 800b354:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
{
 800b358:	4604      	mov	r4, r0
    if (aiHP > 0 && !gameEnded) {
 800b35a:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 800b35e:	2a00      	cmp	r2, #0
 800b360:	dd05      	ble.n	800b36e <_ZN14GameScreenView16resetBleachStateEv+0x32>
 800b362:	f893 3265 	ldrb.w	r3, [r3, #613]	@ 0x265
 800b366:	b913      	cbnz	r3, 800b36e <_ZN14GameScreenView16resetBleachStateEv+0x32>
 800b368:	2301      	movs	r3, #1
 800b36a:	f880 3485 	strb.w	r3, [r0, #1157]	@ 0x485
        bleach.setVisible(true);
    }

    // Invalidate tất cả
    bleach_atk.invalidate();
 800b36e:	f204 503c 	addw	r0, r4, #1340	@ 0x53c
 800b372:	f010 fe61 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800b376:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800b37a:	f010 fe5d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();
 800b37e:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
 800b382:	f010 fe59 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800b386:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800b38a:	f010 fe55 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800b38e:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800b392:	f010 fe51 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800b396:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
}
 800b39a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach.invalidate();
 800b39e:	f010 be4b 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b3a2 <_ZN14GameScreenView22hideAllPlayerHPWidgetsEv>:
 800b3a2:	2300      	movs	r3, #0
            break;
    }
}

void GameScreenView::hideAllPlayerHPWidgets()
{
 800b3a4:	b510      	push	{r4, lr}
 800b3a6:	4604      	mov	r4, r0
 800b3a8:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800b3ac:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800b3b0:	f880 3249 	strb.w	r3, [r0, #585]	@ 0x249
 800b3b4:	f880 321d 	strb.w	r3, [r0, #541]	@ 0x21d
 800b3b8:	f880 31f1 	strb.w	r3, [r0, #497]	@ 0x1f1
 800b3bc:	f880 31c5 	strb.w	r3, [r0, #453]	@ 0x1c5
 800b3c0:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800b3c4:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800b3c8:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800b3cc:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800b3d0:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
    BITMAP_HP_20_ID.setVisible(false);
    BITMAP_HP_10_ID.setVisible(false);
    BITMAP_HP_0_ID.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID.invalidate();
 800b3d4:	3098      	adds	r0, #152	@ 0x98
 800b3d6:	f010 fe2f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID.invalidate();
 800b3da:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800b3de:	f010 fe2b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID.invalidate();
 800b3e2:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800b3e6:	f010 fe27 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID.invalidate();
 800b3ea:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800b3ee:	f010 fe23 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID.invalidate();
 800b3f2:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800b3f6:	f010 fe1f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID.invalidate();
 800b3fa:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800b3fe:	f010 fe1b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID.invalidate();
 800b402:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800b406:	f010 fe17 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID.invalidate();
 800b40a:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800b40e:	f010 fe13 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID.invalidate();
 800b412:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800b416:	f010 fe0f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID.invalidate();
 800b41a:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800b41e:	f010 fe0b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID.invalidate();
 800b422:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
}
 800b426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID.invalidate();
 800b42a:	f010 be05 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b42e <_ZN14GameScreenView18hideAllAIHPWidgetsEv>:
 800b42e:	2300      	movs	r3, #0

void GameScreenView::hideAllAIHPWidgets()
{
 800b430:	b510      	push	{r4, lr}
 800b432:	4604      	mov	r4, r0
 800b434:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800b438:	f880 32cd 	strb.w	r3, [r0, #717]	@ 0x2cd
 800b43c:	f880 32f9 	strb.w	r3, [r0, #761]	@ 0x2f9
 800b440:	f880 3325 	strb.w	r3, [r0, #805]	@ 0x325
 800b444:	f880 3351 	strb.w	r3, [r0, #849]	@ 0x351
 800b448:	f880 337d 	strb.w	r3, [r0, #893]	@ 0x37d
 800b44c:	f880 33a9 	strb.w	r3, [r0, #937]	@ 0x3a9
 800b450:	f880 33d5 	strb.w	r3, [r0, #981]	@ 0x3d5
 800b454:	f880 3401 	strb.w	r3, [r0, #1025]	@ 0x401
 800b458:	f880 342d 	strb.w	r3, [r0, #1069]	@ 0x42d
 800b45c:	f880 3459 	strb.w	r3, [r0, #1113]	@ 0x459
    BITMAP_HP_20_ID_1.setVisible(false);
    BITMAP_HP_10_ID_1.setVisible(false);
    BITMAP_HP_0_ID_1.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID_1.invalidate();
 800b460:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800b464:	f010 fde8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID_1.invalidate();
 800b468:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800b46c:	f010 fde4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID_1.invalidate();
 800b470:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800b474:	f010 fde0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID_1.invalidate();
 800b478:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800b47c:	f010 fddc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID_1.invalidate();
 800b480:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800b484:	f010 fdd8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID_1.invalidate();
 800b488:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800b48c:	f010 fdd4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID_1.invalidate();
 800b490:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800b494:	f010 fdd0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID_1.invalidate();
 800b498:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800b49c:	f010 fdcc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID_1.invalidate();
 800b4a0:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800b4a4:	f010 fdc8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID_1.invalidate();
 800b4a8:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800b4ac:	f010 fdc4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID_1.invalidate();
 800b4b0:	f204 4034 	addw	r0, r4, #1076	@ 0x434
}
 800b4b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID_1.invalidate();
 800b4b8:	f010 bdbe 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b4bc <_ZN14GameScreenView25updatePlayerChakraDisplayEv>:
// ==================== CHAKRA SYSTEM ====================

void GameScreenView::updatePlayerChakraDisplay()
{
    // Đảm bảo chakra level không bị âm
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800b4bc:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800b4c0:	b513      	push	{r0, r1, r4, lr}
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800b4c2:	f8d2 1268 	ldr.w	r1, [r2, #616]	@ 0x268
 800b4c6:	2900      	cmp	r1, #0
{
 800b4c8:	4603      	mov	r3, r0
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800b4ca:	da0f      	bge.n	800b4ec <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x30>
 800b4cc:	2100      	movs	r1, #0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800b4ce:	f8c2 1268 	str.w	r1, [r2, #616]	@ 0x268

    // Xử lý đặc biệt khi chakra = 0
    if (playerChakraLevel == 0) {
 800b4d2:	f8d2 2268 	ldr.w	r2, [r2, #616]	@ 0x268
 800b4d6:	f203 744c 	addw	r4, r3, #1868	@ 0x74c
 800b4da:	b95a      	cbnz	r2, 800b4f4 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x38>
 800b4dc:	f883 2771 	strb.w	r2, [r3, #1905]	@ 0x771
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của player
    chakra_box1.setPosition(14, 43, currentWidth, 5);
    chakra_box1.invalidate();
 800b4e0:	4620      	mov	r0, r4
}
 800b4e2:	b002      	add	sp, #8
 800b4e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box1.invalidate();
 800b4e8:	f010 bda6 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800b4ec:	2964      	cmp	r1, #100	@ 0x64
 800b4ee:	ddf0      	ble.n	800b4d2 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x16>
 800b4f0:	2164      	movs	r1, #100	@ 0x64
 800b4f2:	e7ec      	b.n	800b4ce <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x12>
 800b4f4:	2101      	movs	r1, #1
 800b4f6:	f883 1771 	strb.w	r1, [r3, #1905]	@ 0x771
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800b4fa:	2356      	movs	r3, #86	@ 0x56
 800b4fc:	435a      	muls	r2, r3
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b4fe:	2a63      	cmp	r2, #99	@ 0x63
 800b500:	dd0f      	ble.n	800b522 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x66>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800b502:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800b506:	428a      	cmp	r2, r1
 800b508:	dc02      	bgt.n	800b510 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x54>
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800b50a:	2364      	movs	r3, #100	@ 0x64
 800b50c:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box1.setPosition(14, 43, currentWidth, 5);
 800b510:	2205      	movs	r2, #5
 800b512:	9200      	str	r2, [sp, #0]
 800b514:	b21b      	sxth	r3, r3
 800b516:	222b      	movs	r2, #43	@ 0x2b
 800b518:	210e      	movs	r1, #14
 800b51a:	4620      	mov	r0, r4
 800b51c:	f7f7 fac4 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b520:	e7de      	b.n	800b4e0 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x24>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b522:	460b      	mov	r3, r1
 800b524:	e7f4      	b.n	800b510 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x54>

0800b526 <_ZN14GameScreenView21updateAIChakraDisplayEv>:

void GameScreenView::updateAIChakraDisplay()
{
    // Đảm bảo AI chakra level không bị âm
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800b526:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800b52a:	b513      	push	{r0, r1, r4, lr}
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800b52c:	f8d2 126c 	ldr.w	r1, [r2, #620]	@ 0x26c
 800b530:	2900      	cmp	r1, #0
{
 800b532:	4603      	mov	r3, r0
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800b534:	da0f      	bge.n	800b556 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x30>
 800b536:	2100      	movs	r1, #0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800b538:	f8c2 126c 	str.w	r1, [r2, #620]	@ 0x26c

    // Xử lý đặc biệt khi chakra = 0
    if (aiChakraLevel == 0) {
 800b53c:	f8d2 226c 	ldr.w	r2, [r2, #620]	@ 0x26c
 800b540:	f503 64ef 	add.w	r4, r3, #1912	@ 0x778
 800b544:	b95a      	cbnz	r2, 800b55e <_ZN14GameScreenView21updateAIChakraDisplayEv+0x38>
 800b546:	f883 279d 	strb.w	r2, [r3, #1949]	@ 0x79d
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của AI
    chakra_box2.setPosition(135, 43, currentWidth, 5);
    chakra_box2.invalidate();
 800b54a:	4620      	mov	r0, r4
}
 800b54c:	b002      	add	sp, #8
 800b54e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box2.invalidate();
 800b552:	f010 bd71 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800b556:	2964      	cmp	r1, #100	@ 0x64
 800b558:	ddf0      	ble.n	800b53c <_ZN14GameScreenView21updateAIChakraDisplayEv+0x16>
 800b55a:	2164      	movs	r1, #100	@ 0x64
 800b55c:	e7ec      	b.n	800b538 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x12>
 800b55e:	2101      	movs	r1, #1
 800b560:	f883 179d 	strb.w	r1, [r3, #1949]	@ 0x79d
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800b564:	2356      	movs	r3, #86	@ 0x56
 800b566:	435a      	muls	r2, r3
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b568:	2a63      	cmp	r2, #99	@ 0x63
 800b56a:	dd0f      	ble.n	800b58c <_ZN14GameScreenView21updateAIChakraDisplayEv+0x66>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800b56c:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800b570:	428a      	cmp	r2, r1
 800b572:	dc02      	bgt.n	800b57a <_ZN14GameScreenView21updateAIChakraDisplayEv+0x54>
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800b574:	2364      	movs	r3, #100	@ 0x64
 800b576:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box2.setPosition(135, 43, currentWidth, 5);
 800b57a:	2205      	movs	r2, #5
 800b57c:	9200      	str	r2, [sp, #0]
 800b57e:	b21b      	sxth	r3, r3
 800b580:	222b      	movs	r2, #43	@ 0x2b
 800b582:	2187      	movs	r1, #135	@ 0x87
 800b584:	4620      	mov	r0, r4
 800b586:	f7f7 fa8f 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b58a:	e7de      	b.n	800b54a <_ZN14GameScreenView21updateAIChakraDisplayEv+0x24>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b58c:	460b      	mov	r3, r1
 800b58e:	e7f4      	b.n	800b57a <_ZN14GameScreenView21updateAIChakraDisplayEv+0x54>

0800b590 <_ZN14GameScreenView7endGameEb>:
    // Logic game end giờ được xử lý trong updatePlayerHPDisplay() và updateAIHPDisplay()
    return;
}

void GameScreenView::endGame(bool playerWon)
{
 800b590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    gameEnded = true;
 800b594:	f500 5880 	add.w	r8, r0, #4096	@ 0x1000
{
 800b598:	4604      	mov	r4, r0
    gameEnded = true;
 800b59a:	2601      	movs	r6, #1
 800b59c:	2500      	movs	r5, #0

    // ===== LƯU KẾT QUẢ GAME CHO ROUTING =====
    playerWonGame = playerWon;
 800b59e:	f888 1266 	strb.w	r1, [r8, #614]	@ 0x266
    gameEnded = true;
 800b5a2:	f888 6265 	strb.w	r6, [r8, #613]	@ 0x265
{
 800b5a6:	460f      	mov	r7, r1

    // Hide menu actions immediately
    hideActionButtons();
 800b5a8:	f7ff fd6c 	bl	800b084 <_ZN14GameScreenView17hideActionButtonsEv>
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800b5ac:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800b5b0:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800b5b4:	f010 fd40 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons when game ends
    hideAllPlayerPowerUps();
 800b5b8:	4620      	mov	r0, r4
 800b5ba:	f7ff fdc0 	bl	800b13e <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps();
 800b5be:	4620      	mov	r0, r4
 800b5c0:	f7ff fe3a 	bl	800b238 <_ZN14GameScreenView17hideAllAIPowerUpsEv>
    hideDamageText();
 800b5c4:	4620      	mov	r0, r4
 800b5c6:	f7ff f9b9 	bl	800a93c <_ZN14GameScreenView14hideDamageTextEv>
 800b5ca:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800b5ce:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800b5d2:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800b5d6:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800b5da:	f884 5485 	strb.w	r5, [r4, #1157]	@ 0x485
 800b5de:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800b5e2:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 800b5e6:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 800b5ea:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 800b5ee:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5

    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    if (playerWon) {
 800b5f2:	2f00      	cmp	r7, #0
 800b5f4:	d047      	beq.n	800b686 <_ZN14GameScreenView7endGameEb+0xf6>
        // ===== PLAYER THẮNG - WILL GO TO BACKUPSCREEN =====

        // LED signal for character unlock
        for (int i = 0; i < 8; i++) {
            toggleLED();
 800b5f6:	f7ff f8ef 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b5fa:	f7ff f8ed 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b5fe:	f7ff f8eb 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b602:	f7ff f8e9 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b606:	f7ff f8e7 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b60a:	f7ff f8e5 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b60e:	f7ff f8e3 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b612:	f7ff f8e1 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>

        naruto_win.setVisible(true);
        bleach_lose.setVisible(true);
        win.setVisible(true);

        naruto_win.invalidate();
 800b616:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800b61a:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800b61e:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 800b622:	f884 65b9 	strb.w	r6, [r4, #1465]	@ 0x5b9
 800b626:	f884 64dd 	strb.w	r6, [r4, #1245]	@ 0x4dd
 800b62a:	f884 67f5 	strb.w	r6, [r4, #2037]	@ 0x7f5
 800b62e:	f010 fd03 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_lose.invalidate();
 800b632:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800b636:	f010 fcff 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        win.invalidate();
 800b63a:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800b63e:	f010 fcfb 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

        // LED blink rapidly for victory
        for (int i = 0; i < 6; i++) {
            toggleLED();
 800b642:	f7ff f8c9 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b646:	f7ff f8c7 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b64a:	f7ff f8c5 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b64e:	f7ff f8c3 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        // LED stays on for defeat
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);

        // Debug: 5 slow blinks = MainMenuScreen route
        for (int i = 0; i < 5; i++) {
            toggleLED();
 800b652:	f7ff f8c1 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        }
    }

    // ===== BẮT ĐẦU AUTO RETURN TIMER (6 GIÂY) =====
    autoReturnTimer = 0;
    autoReturnTimerActive = true;
 800b656:	2401      	movs	r4, #1
            toggleLED();
 800b658:	f7ff f8be 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b65c:	f7ff f8bc 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b660:	f7ff f8ba 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b664:	f7ff f8b8 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    autoReturnTimer = 0;
 800b668:	2300      	movs	r3, #0
 800b66a:	f8c8 3280 	str.w	r3, [r8, #640]	@ 0x280
    autoReturnTimerActive = true;
 800b66e:	f888 4284 	strb.w	r4, [r8, #644]	@ 0x284

    // Debug: LED signal that timer has started
    toggleLED();
 800b672:	f7ff f8b1 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800b676:	f7ff f8af 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800b67a:	f7ff f8ad 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>

    // Ensure gameEnded = true is set
    gameEnded = true;
 800b67e:	f888 4265 	strb.w	r4, [r8, #613]	@ 0x265
}
 800b682:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        naruto_lose.invalidate();
 800b686:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800b68a:	f884 75b9 	strb.w	r7, [r4, #1465]	@ 0x5b9
 800b68e:	f884 74dd 	strb.w	r7, [r4, #1245]	@ 0x4dd
 800b692:	f884 65e5 	strb.w	r6, [r4, #1509]	@ 0x5e5
 800b696:	f884 64b1 	strb.w	r6, [r4, #1201]	@ 0x4b1
 800b69a:	f884 67c9 	strb.w	r6, [r4, #1993]	@ 0x7c9
 800b69e:	f010 fccb 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_win.invalidate();
 800b6a2:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800b6a6:	f010 fcc7 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        gameover.invalidate();
 800b6aa:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800b6ae:	f010 fcc3 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800b6b2:	4803      	ldr	r0, [pc, #12]	@ (800b6c0 <_ZN14GameScreenView7endGameEb+0x130>)
 800b6b4:	4632      	mov	r2, r6
 800b6b6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800b6ba:	f005 f89d 	bl	80107f8 <HAL_GPIO_WritePin>
 800b6be:	e7c8      	b.n	800b652 <_ZN14GameScreenView7endGameEb+0xc2>
 800b6c0:	40021800 	.word	0x40021800

0800b6c4 <_ZN14GameScreenView21updatePlayerHPDisplayEv>:
{
 800b6c4:	b570      	push	{r4, r5, r6, lr}
 800b6c6:	4604      	mov	r4, r0
    int roundedHP = (playerHP / 10) * 10;
 800b6c8:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
    hideAllPlayerHPWidgets();
 800b6cc:	f7ff fe69 	bl	800b3a2 <_ZN14GameScreenView22hideAllPlayerHPWidgetsEv>
    int roundedHP = (playerHP / 10) * 10;
 800b6d0:	f8d5 325c 	ldr.w	r3, [r5, #604]	@ 0x25c
    if (playerHP == 0 || roundedHP == 0) {
 800b6d4:	2b09      	cmp	r3, #9
 800b6d6:	dc15      	bgt.n	800b704 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x40>
 800b6d8:	2301      	movs	r3, #1
 800b6da:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        BITMAP_HP_0_ID.invalidate();
 800b6de:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800b6e2:	f010 fca9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b6e6:	260a      	movs	r6, #10
            toggleLED();
 800b6e8:	f7ff f876 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800b6ec:	3e01      	subs	r6, #1
 800b6ee:	d1fb      	bne.n	800b6e8 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x24>
        if (!gameEnded) {
 800b6f0:	f895 3265 	ldrb.w	r3, [r5, #613]	@ 0x265
 800b6f4:	2b00      	cmp	r3, #0
 800b6f6:	d172      	bne.n	800b7de <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x11a>
            endGame(false); // Player thua
 800b6f8:	4620      	mov	r0, r4
 800b6fa:	2100      	movs	r1, #0
}
 800b6fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            endGame(false); // Player thua
 800b700:	f7ff bf46 	b.w	800b590 <_ZN14GameScreenView7endGameEb>
    int roundedHP = (playerHP / 10) * 10;
 800b704:	220a      	movs	r2, #10
 800b706:	fb93 f1f2 	sdiv	r1, r3, r2
 800b70a:	4351      	muls	r1, r2
    switch (roundedHP) {
 800b70c:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800b710:	2a09      	cmp	r2, #9
 800b712:	d94a      	bls.n	800b7aa <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xe6>
 800b714:	293c      	cmp	r1, #60	@ 0x3c
 800b716:	f04f 0201 	mov.w	r2, #1
 800b71a:	dc20      	bgt.n	800b75e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x9a>
 800b71c:	f1a3 001e 	sub.w	r0, r3, #30
 800b720:	2809      	cmp	r0, #9
 800b722:	d94d      	bls.n	800b7c0 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xfc>
 800b724:	291e      	cmp	r1, #30
 800b726:	dc0e      	bgt.n	800b746 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x82>
 800b728:	f1a3 010a 	sub.w	r1, r3, #10
 800b72c:	2909      	cmp	r1, #9
 800b72e:	d951      	bls.n	800b7d4 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x110>
 800b730:	3b14      	subs	r3, #20
 800b732:	2b09      	cmp	r3, #9
 800b734:	d949      	bls.n	800b7ca <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x106>
 800b736:	2301      	movs	r3, #1
 800b738:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
            BITMAP_HP_0_ID.invalidate();
 800b73c:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800b740:	f010 fc7a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800b744:	e7d4      	b.n	800b6f0 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x2c>
    switch (roundedHP) {
 800b746:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800b74a:	2909      	cmp	r1, #9
 800b74c:	d933      	bls.n	800b7b6 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xf2>
 800b74e:	3b32      	subs	r3, #50	@ 0x32
 800b750:	2b09      	cmp	r3, #9
 800b752:	d8f0      	bhi.n	800b736 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x72>
 800b754:	f884 21c5 	strb.w	r2, [r4, #453]	@ 0x1c5
            BITMAP_HP_50_ID.invalidate();
 800b758:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800b75c:	e017      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
    switch (roundedHP) {
 800b75e:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800b762:	2809      	cmp	r0, #9
 800b764:	d917      	bls.n	800b796 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xd2>
 800b766:	295a      	cmp	r1, #90	@ 0x5a
 800b768:	dc0b      	bgt.n	800b782 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xbe>
 800b76a:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800b76e:	2909      	cmp	r1, #9
 800b770:	d916      	bls.n	800b7a0 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xdc>
 800b772:	3b50      	subs	r3, #80	@ 0x50
 800b774:	2b09      	cmp	r3, #9
 800b776:	d8de      	bhi.n	800b736 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x72>
 800b778:	f884 2249 	strb.w	r2, [r4, #585]	@ 0x249
            BITMAP_HP_80_ID.invalidate();
 800b77c:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800b780:	e005      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
    switch (roundedHP) {
 800b782:	2963      	cmp	r1, #99	@ 0x63
 800b784:	ddd7      	ble.n	800b736 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x72>
 800b786:	f884 20bd 	strb.w	r2, [r4, #189]	@ 0xbd
            BITMAP_HP_100_ID.invalidate();
 800b78a:	f104 0098 	add.w	r0, r4, #152	@ 0x98
}
 800b78e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            BITMAP_HP_10_ID.invalidate();
 800b792:	f010 bc51 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b796:	f884 2275 	strb.w	r2, [r4, #629]	@ 0x275
            BITMAP_HP_90_ID.invalidate();
 800b79a:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800b79e:	e7f6      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800b7a0:	f884 221d 	strb.w	r2, [r4, #541]	@ 0x21d
            BITMAP_HP_70_ID.invalidate();
 800b7a4:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800b7a8:	e7f1      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800b7aa:	2301      	movs	r3, #1
 800b7ac:	f884 31f1 	strb.w	r3, [r4, #497]	@ 0x1f1
            BITMAP_HP_60_ID.invalidate();
 800b7b0:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800b7b4:	e7eb      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800b7b6:	f884 2199 	strb.w	r2, [r4, #409]	@ 0x199
            BITMAP_HP_40_ID.invalidate();
 800b7ba:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800b7be:	e7e6      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800b7c0:	f884 216d 	strb.w	r2, [r4, #365]	@ 0x16d
            BITMAP_HP_30_ID.invalidate();
 800b7c4:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800b7c8:	e7e1      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800b7ca:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
            BITMAP_HP_20_ID.invalidate();
 800b7ce:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800b7d2:	e7dc      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800b7d4:	f884 20e9 	strb.w	r2, [r4, #233]	@ 0xe9
            BITMAP_HP_10_ID.invalidate();
 800b7d8:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800b7dc:	e7d7      	b.n	800b78e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
}
 800b7de:	bd70      	pop	{r4, r5, r6, pc}

0800b7e0 <_ZN14GameScreenView12playerDefendEv>:
{
 800b7e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b7e2:	4605      	mov	r5, r0
 800b7e4:	2600      	movs	r6, #0
 800b7e6:	2701      	movs	r7, #1
    resetNarutoState();
 800b7e8:	f7ff fd75 	bl	800b2d6 <_ZN14GameScreenView16resetNarutoStateEv>
    playerDefending = true;
 800b7ec:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
    naruto_def.invalidate();
 800b7f0:	f505 60c3 	add.w	r0, r5, #1560	@ 0x618
 800b7f4:	f885 658d 	strb.w	r6, [r5, #1421]	@ 0x58d
 800b7f8:	f885 763d 	strb.w	r7, [r5, #1597]	@ 0x63d
 800b7fc:	f010 fc1c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800b800:	f505 60ad 	add.w	r0, r5, #1384	@ 0x568
 800b804:	f010 fc18 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(2, 5);
 800b808:	2205      	movs	r2, #5
 800b80a:	2102      	movs	r1, #2
    playerDefending = true;
 800b80c:	f884 7270 	strb.w	r7, [r4, #624]	@ 0x270
    int healAmount = generateRandomNumber(2, 5);
 800b810:	4628      	mov	r0, r5
 800b812:	f7ff f86b 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    playerHP += healAmount;
 800b816:	f8d4 325c 	ldr.w	r3, [r4, #604]	@ 0x25c
 800b81a:	4403      	add	r3, r0
    if (playerHP > 100) playerHP = 100;
 800b81c:	2b64      	cmp	r3, #100	@ 0x64
 800b81e:	bfa8      	it	ge
 800b820:	2364      	movge	r3, #100	@ 0x64
 800b822:	f8c4 325c 	str.w	r3, [r4, #604]	@ 0x25c
    playerChakraLevel += generateRandomNumber(8, 15);
 800b826:	220f      	movs	r2, #15
 800b828:	2108      	movs	r1, #8
 800b82a:	4628      	mov	r0, r5
 800b82c:	f7ff f85e 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800b830:	f8d4 3268 	ldr.w	r3, [r4, #616]	@ 0x268
 800b834:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800b836:	2b64      	cmp	r3, #100	@ 0x64
 800b838:	bfa8      	it	ge
 800b83a:	2364      	movge	r3, #100	@ 0x64
 800b83c:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
    showDamageText(0, 0);
 800b840:	4632      	mov	r2, r6
 800b842:	4631      	mov	r1, r6
 800b844:	4628      	mov	r0, r5
 800b846:	f7ff f94e 	bl	800aae6 <_ZN14GameScreenView14showDamageTextEii>
    if (playerPowerUpActive && playerPowerUpType == 1) {
 800b84a:	f894 3294 	ldrb.w	r3, [r4, #660]	@ 0x294
 800b84e:	b153      	cbz	r3, 800b866 <_ZN14GameScreenView12playerDefendEv+0x86>
 800b850:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800b854:	42bb      	cmp	r3, r7
 800b856:	d106      	bne.n	800b866 <_ZN14GameScreenView12playerDefendEv+0x86>
        playerPowerUpActive = false;
 800b858:	f884 6294 	strb.w	r6, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800b85c:	f8c4 628c 	str.w	r6, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800b860:	4628      	mov	r0, r5
 800b862:	f7ff fc89 	bl	800b178 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800b866:	4628      	mov	r0, r5
 800b868:	f7ff ff2c 	bl	800b6c4 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800b86c:	4628      	mov	r0, r5
 800b86e:	f7ff fe25 	bl	800b4bc <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800b872:	f7fe ffb1 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800b876:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800b878:	2200      	movs	r2, #0
    playerActionDone = true;
 800b87a:	f884 3296 	strb.w	r3, [r4, #662]	@ 0x296
    playerSpecialUsed = false;
 800b87e:	f884 2272 	strb.w	r2, [r4, #626]	@ 0x272
    resetTimer = 0;
 800b882:	f8c4 2278 	str.w	r2, [r4, #632]	@ 0x278
    resetTimerActive = true;
 800b886:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
}
 800b88a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b88c <_ZN14GameScreenView8aiAttackEv>:
{
 800b88c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    if (gameEnded) return;
 800b890:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800b894:	4605      	mov	r5, r0
    if (gameEnded) return;
 800b896:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800b89a:	2e00      	cmp	r6, #0
 800b89c:	d166      	bne.n	800b96c <_ZN14GameScreenView8aiAttackEv+0xe0>
    resetBleachState();
 800b89e:	f7ff fd4d 	bl	800b33c <_ZN14GameScreenView16resetBleachStateEv>
 800b8a2:	2301      	movs	r3, #1
 800b8a4:	f885 3561 	strb.w	r3, [r5, #1377]	@ 0x561
    bleach_atk.invalidate();
 800b8a8:	f205 503c 	addw	r0, r5, #1340	@ 0x53c
 800b8ac:	f885 6485 	strb.w	r6, [r5, #1157]	@ 0x485
 800b8b0:	f010 fbc2 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800b8b4:	f505 608c 	add.w	r0, r5, #1120	@ 0x460
 800b8b8:	f010 fbbe 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800b8bc:	2208      	movs	r2, #8
 800b8be:	2103      	movs	r1, #3
 800b8c0:	4628      	mov	r0, r5
 800b8c2:	f7ff f813 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    bool hasDoubleAttack = (aiPowerUpActive && aiPowerUpType == 1);
 800b8c6:	f894 7295 	ldrb.w	r7, [r4, #661]	@ 0x295
 800b8ca:	b127      	cbz	r7, 800b8d6 <_ZN14GameScreenView8aiAttackEv+0x4a>
 800b8cc:	f8d4 7290 	ldr.w	r7, [r4, #656]	@ 0x290
 800b8d0:	1e7b      	subs	r3, r7, #1
 800b8d2:	425f      	negs	r7, r3
 800b8d4:	415f      	adcs	r7, r3
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800b8d6:	f894 8294 	ldrb.w	r8, [r4, #660]	@ 0x294
 800b8da:	f1b8 0f00 	cmp.w	r8, #0
 800b8de:	d003      	beq.n	800b8e8 <_ZN14GameScreenView8aiAttackEv+0x5c>
 800b8e0:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800b8e4:	2b04      	cmp	r3, #4
 800b8e6:	d043      	beq.n	800b970 <_ZN14GameScreenView8aiAttackEv+0xe4>
    if (hasShield) {
 800b8e8:	f894 1270 	ldrb.w	r1, [r4, #624]	@ 0x270
 800b8ec:	463a      	mov	r2, r7
 800b8ee:	f7fe ff57 	bl	800a7a0 <_ZN14GameScreenView15calculateDamageEibbb.part.0>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800b8f2:	f04f 0800 	mov.w	r8, #0
 800b8f6:	4606      	mov	r6, r0
    playerHP -= actualDamage;
 800b8f8:	f8d4 325c 	ldr.w	r3, [r4, #604]	@ 0x25c
 800b8fc:	1b9b      	subs	r3, r3, r6
    if (playerHP < 0) playerHP = 0;
 800b8fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b902:	f8c4 325c 	str.w	r3, [r4, #604]	@ 0x25c
    showDamageText(actualDamage, 0);
 800b906:	2200      	movs	r2, #0
 800b908:	4631      	mov	r1, r6
 800b90a:	4628      	mov	r0, r5
 800b90c:	f7ff f8eb 	bl	800aae6 <_ZN14GameScreenView14showDamageTextEii>
    aiChakraLevel += generateRandomNumber(5, 10);
 800b910:	220a      	movs	r2, #10
 800b912:	2105      	movs	r1, #5
 800b914:	4628      	mov	r0, r5
 800b916:	f7fe ffe9 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800b91a:	f8d4 326c 	ldr.w	r3, [r4, #620]	@ 0x26c
 800b91e:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800b920:	2b64      	cmp	r3, #100	@ 0x64
 800b922:	bfa8      	it	ge
 800b924:	2364      	movge	r3, #100	@ 0x64
 800b926:	f8c4 326c 	str.w	r3, [r4, #620]	@ 0x26c
    if (hasDoubleAttack) {
 800b92a:	b15f      	cbz	r7, 800b944 <_ZN14GameScreenView8aiAttackEv+0xb8>
        aiPowerUpActive = false;
 800b92c:	2300      	movs	r3, #0
 800b92e:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800b932:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800b936:	4628      	mov	r0, r5
 800b938:	f7ff fc9b 	bl	800b272 <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
        toggleLED();
 800b93c:	f7fe ff4c 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800b940:	f7fe ff4a 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    if (playerHasShield && actualDamage == 0) {
 800b944:	f1b8 0f00 	cmp.w	r8, #0
 800b948:	d007      	beq.n	800b95a <_ZN14GameScreenView8aiAttackEv+0xce>
 800b94a:	b936      	cbnz	r6, 800b95a <_ZN14GameScreenView8aiAttackEv+0xce>
        playerPowerUpActive = false;
 800b94c:	f884 6294 	strb.w	r6, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800b950:	f8c4 628c 	str.w	r6, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800b954:	4628      	mov	r0, r5
 800b956:	f7ff fc0f 	bl	800b178 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800b95a:	4628      	mov	r0, r5
 800b95c:	f7ff feb2 	bl	800b6c4 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    updateAIChakraDisplay();
 800b960:	4628      	mov	r0, r5
 800b962:	f7ff fde0 	bl	800b526 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    aiActionDone = true;
 800b966:	2301      	movs	r3, #1
 800b968:	f884 3297 	strb.w	r3, [r4, #663]	@ 0x297
}
 800b96c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return 0; // Shield chặn hoàn toàn
 800b970:	2600      	movs	r6, #0
 800b972:	e7c1      	b.n	800b8f8 <_ZN14GameScreenView8aiAttackEv+0x6c>

0800b974 <_ZN14GameScreenView9aiSpecialEv>:
{
 800b974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (aiChakraLevel < 100 || gameEnded) {
 800b976:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800b97a:	4605      	mov	r5, r0
    if (aiChakraLevel < 100 || gameEnded) {
 800b97c:	f8d4 326c 	ldr.w	r3, [r4, #620]	@ 0x26c
 800b980:	2b63      	cmp	r3, #99	@ 0x63
 800b982:	dd3f      	ble.n	800ba04 <_ZN14GameScreenView9aiSpecialEv+0x90>
 800b984:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800b988:	bbe6      	cbnz	r6, 800ba04 <_ZN14GameScreenView9aiSpecialEv+0x90>
    resetBleachState();
 800b98a:	f7ff fcd7 	bl	800b33c <_ZN14GameScreenView16resetBleachStateEv>
 800b98e:	2301      	movs	r3, #1
 800b990:	f885 3509 	strb.w	r3, [r5, #1289]	@ 0x509
    bleach_spe.invalidate();
 800b994:	f205 40e4 	addw	r0, r5, #1252	@ 0x4e4
 800b998:	f885 6485 	strb.w	r6, [r5, #1157]	@ 0x485
 800b99c:	f010 fb4c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800b9a0:	f505 608c 	add.w	r0, r5, #1120	@ 0x460
 800b9a4:	f010 fb48 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800b9a8:	f894 7294 	ldrb.w	r7, [r4, #660]	@ 0x294
 800b9ac:	b11f      	cbz	r7, 800b9b6 <_ZN14GameScreenView9aiSpecialEv+0x42>
 800b9ae:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800b9b2:	2b04      	cmp	r3, #4
 800b9b4:	d003      	beq.n	800b9be <_ZN14GameScreenView9aiSpecialEv+0x4a>
    int actualDamage = calculateSpecialDamage(baseDamage, playerDefending, playerHasShield);
 800b9b6:	f894 7270 	ldrb.w	r7, [r4, #624]	@ 0x270
    if (isDefending) {
 800b9ba:	bb27      	cbnz	r7, 800ba06 <_ZN14GameScreenView9aiSpecialEv+0x92>
    int finalDamage = baseDamage; // SPECIAL KHÔNG ĐƯỢC DOUBLE DAMAGE
 800b9bc:	2628      	movs	r6, #40	@ 0x28
    playerHP -= actualDamage;
 800b9be:	f8d4 325c 	ldr.w	r3, [r4, #604]	@ 0x25c
 800b9c2:	1b9b      	subs	r3, r3, r6
    if (playerHP < 0) playerHP = 0;
 800b9c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b9c8:	f8c4 325c 	str.w	r3, [r4, #604]	@ 0x25c
    showDamageText(actualDamage, 0);
 800b9cc:	2200      	movs	r2, #0
 800b9ce:	4631      	mov	r1, r6
 800b9d0:	4628      	mov	r0, r5
 800b9d2:	f7ff f888 	bl	800aae6 <_ZN14GameScreenView14showDamageTextEii>
    aiChakraLevel = 0;
 800b9d6:	2300      	movs	r3, #0
 800b9d8:	f8c4 326c 	str.w	r3, [r4, #620]	@ 0x26c
    if (playerHasShield && actualDamage == 0) {
 800b9dc:	b13f      	cbz	r7, 800b9ee <_ZN14GameScreenView9aiSpecialEv+0x7a>
 800b9de:	b936      	cbnz	r6, 800b9ee <_ZN14GameScreenView9aiSpecialEv+0x7a>
        playerPowerUpActive = false;
 800b9e0:	f884 6294 	strb.w	r6, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800b9e4:	f8c4 628c 	str.w	r6, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800b9e8:	4628      	mov	r0, r5
 800b9ea:	f7ff fbc5 	bl	800b178 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    updateAIChakraDisplay();
 800b9ee:	4628      	mov	r0, r5
 800b9f0:	f7ff fd99 	bl	800b526 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    updatePlayerHPDisplay();
 800b9f4:	4628      	mov	r0, r5
 800b9f6:	f7ff fe65 	bl	800b6c4 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    aiActionDone = true;
 800b9fa:	2301      	movs	r3, #1
 800b9fc:	f884 3297 	strb.w	r3, [r4, #663]	@ 0x297
    aiSpecialUsed = true; // KHÔNG có power-up sau special
 800ba00:	f884 3273 	strb.w	r3, [r4, #627]	@ 0x273
}
 800ba04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800ba06:	2700      	movs	r7, #0
        finalDamage = 25;
 800ba08:	2619      	movs	r6, #25
 800ba0a:	e7d8      	b.n	800b9be <_ZN14GameScreenView9aiSpecialEv+0x4a>

0800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>:
{
 800ba0c:	b538      	push	{r3, r4, r5, lr}
 800ba0e:	4604      	mov	r4, r0
    int roundedHP = (aiHP / 10) * 10;
 800ba10:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
    hideAllAIHPWidgets();
 800ba14:	f7ff fd0b 	bl	800b42e <_ZN14GameScreenView18hideAllAIHPWidgetsEv>
    int roundedHP = (aiHP / 10) * 10;
 800ba18:	f8d5 3260 	ldr.w	r3, [r5, #608]	@ 0x260
    if (aiHP == 0 || roundedHP == 0) {
 800ba1c:	2b09      	cmp	r3, #9
 800ba1e:	dc10      	bgt.n	800ba42 <_ZN14GameScreenView17updateAIHPDisplayEv+0x36>
 800ba20:	2301      	movs	r3, #1
 800ba22:	f884 3459 	strb.w	r3, [r4, #1113]	@ 0x459
        BITMAP_HP_0_ID_1.invalidate();
 800ba26:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800ba2a:	f010 fb05 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        if (!gameEnded) {
 800ba2e:	f895 3265 	ldrb.w	r3, [r5, #613]	@ 0x265
 800ba32:	2b00      	cmp	r3, #0
 800ba34:	d16a      	bne.n	800bb0c <_ZN14GameScreenView17updateAIHPDisplayEv+0x100>
            endGame(true); // Player thắng
 800ba36:	4620      	mov	r0, r4
 800ba38:	2101      	movs	r1, #1
}
 800ba3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(true); // Player thắng
 800ba3e:	f7ff bda7 	b.w	800b590 <_ZN14GameScreenView7endGameEb>
    int roundedHP = (aiHP / 10) * 10;
 800ba42:	220a      	movs	r2, #10
 800ba44:	fb93 f1f2 	sdiv	r1, r3, r2
 800ba48:	4351      	muls	r1, r2
    switch (roundedHP) {
 800ba4a:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800ba4e:	2a09      	cmp	r2, #9
 800ba50:	d947      	bls.n	800bae2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xd6>
 800ba52:	293c      	cmp	r1, #60	@ 0x3c
 800ba54:	f04f 0201 	mov.w	r2, #1
 800ba58:	dc1d      	bgt.n	800ba96 <_ZN14GameScreenView17updateAIHPDisplayEv+0x8a>
 800ba5a:	f1a3 001e 	sub.w	r0, r3, #30
 800ba5e:	2809      	cmp	r0, #9
 800ba60:	d94a      	bls.n	800baf8 <_ZN14GameScreenView17updateAIHPDisplayEv+0xec>
 800ba62:	291e      	cmp	r1, #30
 800ba64:	dc0b      	bgt.n	800ba7e <_ZN14GameScreenView17updateAIHPDisplayEv+0x72>
 800ba66:	f1a3 010a 	sub.w	r1, r3, #10
 800ba6a:	2909      	cmp	r1, #9
 800ba6c:	d949      	bls.n	800bb02 <_ZN14GameScreenView17updateAIHPDisplayEv+0xf6>
 800ba6e:	3b14      	subs	r3, #20
 800ba70:	2b09      	cmp	r3, #9
 800ba72:	d8d5      	bhi.n	800ba20 <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800ba74:	f884 2401 	strb.w	r2, [r4, #1025]	@ 0x401
            BITMAP_HP_20_ID_1.invalidate();
 800ba78:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800ba7c:	e023      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
    switch (roundedHP) {
 800ba7e:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800ba82:	2909      	cmp	r1, #9
 800ba84:	d933      	bls.n	800baee <_ZN14GameScreenView17updateAIHPDisplayEv+0xe2>
 800ba86:	3b32      	subs	r3, #50	@ 0x32
 800ba88:	2b09      	cmp	r3, #9
 800ba8a:	d8c9      	bhi.n	800ba20 <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800ba8c:	f884 237d 	strb.w	r2, [r4, #893]	@ 0x37d
            BITMAP_HP_50_ID_1.invalidate();
 800ba90:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800ba94:	e017      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
    switch (roundedHP) {
 800ba96:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800ba9a:	2809      	cmp	r0, #9
 800ba9c:	d917      	bls.n	800bace <_ZN14GameScreenView17updateAIHPDisplayEv+0xc2>
 800ba9e:	295a      	cmp	r1, #90	@ 0x5a
 800baa0:	dc0b      	bgt.n	800baba <_ZN14GameScreenView17updateAIHPDisplayEv+0xae>
 800baa2:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800baa6:	2909      	cmp	r1, #9
 800baa8:	d916      	bls.n	800bad8 <_ZN14GameScreenView17updateAIHPDisplayEv+0xcc>
 800baaa:	3b50      	subs	r3, #80	@ 0x50
 800baac:	2b09      	cmp	r3, #9
 800baae:	d8b7      	bhi.n	800ba20 <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800bab0:	f884 22f9 	strb.w	r2, [r4, #761]	@ 0x2f9
            BITMAP_HP_80_ID_1.invalidate();
 800bab4:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800bab8:	e005      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
    switch (roundedHP) {
 800baba:	2963      	cmp	r1, #99	@ 0x63
 800babc:	ddb0      	ble.n	800ba20 <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800babe:	f884 22a1 	strb.w	r2, [r4, #673]	@ 0x2a1
            BITMAP_HP_100_ID_1.invalidate();
 800bac2:	f504 701f 	add.w	r0, r4, #636	@ 0x27c
}
 800bac6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID_1.invalidate();
 800baca:	f010 bab5 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800bace:	f884 22cd 	strb.w	r2, [r4, #717]	@ 0x2cd
            BITMAP_HP_90_ID_1.invalidate();
 800bad2:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800bad6:	e7f6      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800bad8:	f884 2325 	strb.w	r2, [r4, #805]	@ 0x325
            BITMAP_HP_70_ID_1.invalidate();
 800badc:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800bae0:	e7f1      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800bae2:	2301      	movs	r3, #1
 800bae4:	f884 3351 	strb.w	r3, [r4, #849]	@ 0x351
            BITMAP_HP_60_ID_1.invalidate();
 800bae8:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800baec:	e7eb      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800baee:	f884 23a9 	strb.w	r2, [r4, #937]	@ 0x3a9
            BITMAP_HP_40_ID_1.invalidate();
 800baf2:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800baf6:	e7e6      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800baf8:	f884 23d5 	strb.w	r2, [r4, #981]	@ 0x3d5
            BITMAP_HP_30_ID_1.invalidate();
 800bafc:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800bb00:	e7e1      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800bb02:	f884 242d 	strb.w	r2, [r4, #1069]	@ 0x42d
            BITMAP_HP_10_ID_1.invalidate();
 800bb06:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800bb0a:	e7dc      	b.n	800bac6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
}
 800bb0c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800bb10 <_ZN14GameScreenView11setupScreenEv>:
{
 800bb10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb12:	4606      	mov	r6, r0
    GameScreenViewBase::setupScreen();
 800bb14:	f7f9 fa63 	bl	8004fde <_ZN18GameScreenViewBase11setupScreenEv>
    initGPIO();
 800bb18:	4630      	mov	r0, r6
 800bb1a:	f7fe fe9f 	bl	800a85c <_ZN14GameScreenView8initGPIOEv>
    randomSeed = HAL_GetTick();
 800bb1e:	f004 fc0b 	bl	8010338 <HAL_GetTick>
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800bb22:	492e      	ldr	r1, [pc, #184]	@ (800bbdc <_ZN14GameScreenView11setupScreenEv+0xcc>)
 800bb24:	4b2e      	ldr	r3, [pc, #184]	@ (800bbe0 <_ZN14GameScreenView11setupScreenEv+0xd0>)
    if (randomSeed == 0) randomSeed = 12345;
 800bb26:	f243 0239 	movw	r2, #12345	@ 0x3039
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800bb2a:	f506 5480 	add.w	r4, r6, #4096	@ 0x1000
    if (randomSeed == 0) randomSeed = 12345;
 800bb2e:	2800      	cmp	r0, #0
 800bb30:	bf18      	it	ne
 800bb32:	4602      	movne	r2, r0
    menuOpen = false;
 800bb34:	2500      	movs	r5, #0
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800bb36:	fb01 3302 	mla	r3, r1, r2, r3
    playerHP = 100;
 800bb3a:	2764      	movs	r7, #100	@ 0x64
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800bb3c:	f8c4 32bc 	str.w	r3, [r4, #700]	@ 0x2bc
    hideDamageText();
 800bb40:	4630      	mov	r0, r6
    aiHP = 100;
 800bb42:	e9c4 7797 	strd	r7, r7, [r4, #604]	@ 0x25c
    aiChakraLevel = 0;
 800bb46:	e9c4 559a 	strd	r5, r5, [r4, #616]	@ 0x268
    playerPowerUpType = 0;
 800bb4a:	e9c4 55a2 	strd	r5, r5, [r4, #648]	@ 0x288
    playerPowerUpActive = false;
 800bb4e:	e9c4 55a4 	strd	r5, r5, [r4, #656]	@ 0x290
    menuOpen = false;
 800bb52:	f8a4 5264 	strh.w	r5, [r4, #612]	@ 0x264
    playerWonGame = false;
 800bb56:	f884 5266 	strb.w	r5, [r4, #614]	@ 0x266
    playerDefending = false;
 800bb5a:	f8c4 5270 	str.w	r5, [r4, #624]	@ 0x270
    hideDamageText();
 800bb5e:	f7fe feed 	bl	800a93c <_ZN14GameScreenView14hideDamageTextEv>
    damageTextAIStartY = 141;
 800bb62:	2263      	movs	r2, #99	@ 0x63
 800bb64:	238d      	movs	r3, #141	@ 0x8d
 800bb66:	e9c4 23ad 	strd	r2, r3, [r4, #692]	@ 0x2b4
    damageDisplayTimer = 0;
 800bb6a:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
    damageDisplayActive = false;
 800bb6e:	f884 529c 	strb.w	r5, [r4, #668]	@ 0x29c
    currentDamageAmount = 0;
 800bb72:	f8c4 52a0 	str.w	r5, [r4, #672]	@ 0x2a0
    isPlayerDamage = false;
 800bb76:	f884 52a4 	strb.w	r5, [r4, #676]	@ 0x2a4
    int personalityRoll = generateRandomNumber(1, 100);
 800bb7a:	463a      	mov	r2, r7
 800bb7c:	2101      	movs	r1, #1
 800bb7e:	4630      	mov	r0, r6
 800bb80:	f7fe feb4 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    if (personalityRoll <= 70) {
 800bb84:	2846      	cmp	r0, #70	@ 0x46
 800bb86:	dd03      	ble.n	800bb90 <_ZN14GameScreenView11setupScreenEv+0x80>
    } else if (personalityRoll <= 90) {
 800bb88:	285b      	cmp	r0, #91	@ 0x5b
 800bb8a:	bfb4      	ite	lt
 800bb8c:	460d      	movlt	r5, r1
 800bb8e:	2502      	movge	r5, #2
    resetTimer = 0;
 800bb90:	2300      	movs	r3, #0
 800bb92:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
    resetTimerActive = false;
 800bb96:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
    autoReturnTimer = 0;
 800bb9a:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
    autoReturnTimerActive = false;
 800bb9e:	f884 3284 	strb.w	r3, [r4, #644]	@ 0x284
    hideAllPlayerPowerUps();
 800bba2:	4630      	mov	r0, r6
        aiPersonality = 0; // Aggressive
 800bba4:	f8c4 5274 	str.w	r5, [r4, #628]	@ 0x274
    hideAllPlayerPowerUps();
 800bba8:	f7ff fac9 	bl	800b13e <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps();
 800bbac:	4630      	mov	r0, r6
 800bbae:	f7ff fb43 	bl	800b238 <_ZN14GameScreenView17hideAllAIPowerUpsEv>
    updatePlayerHPDisplay();
 800bbb2:	4630      	mov	r0, r6
 800bbb4:	f7ff fd86 	bl	800b6c4 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    updateAIHPDisplay();
 800bbb8:	4630      	mov	r0, r6
 800bbba:	f7ff ff27 	bl	800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>
    updatePlayerChakraDisplay();
 800bbbe:	4630      	mov	r0, r6
 800bbc0:	f7ff fc7c 	bl	800b4bc <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    updateAIChakraDisplay();
 800bbc4:	4630      	mov	r0, r6
 800bbc6:	f7ff fcae 	bl	800b526 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    resetNarutoState();
 800bbca:	4630      	mov	r0, r6
 800bbcc:	f7ff fb83 	bl	800b2d6 <_ZN14GameScreenView16resetNarutoStateEv>
    resetBleachState();
 800bbd0:	4630      	mov	r0, r6
}
 800bbd2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    resetBleachState();
 800bbd6:	f7ff bbb1 	b.w	800b33c <_ZN14GameScreenView16resetBleachStateEv>
 800bbda:	bf00      	nop
 800bbdc:	0019660d 	.word	0x0019660d
 800bbe0:	3c6ef35f 	.word	0x3c6ef35f

0800bbe4 <_ZN14GameScreenView19applyInstantPowerUpEbi>:
    switch (type) {
 800bbe4:	2a02      	cmp	r2, #2
 800bbe6:	d002      	beq.n	800bbee <_ZN14GameScreenView19applyInstantPowerUpEbi+0xa>
 800bbe8:	2a03      	cmp	r2, #3
 800bbea:	d017      	beq.n	800bc1c <_ZN14GameScreenView19applyInstantPowerUpEbi+0x38>
 800bbec:	4770      	bx	lr
            if (isPlayer) {
 800bbee:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800bbf2:	b149      	cbz	r1, 800bc08 <_ZN14GameScreenView19applyInstantPowerUpEbi+0x24>
                playerHP += 5; // GIẢM TỪ 10 XUỐNG 5
 800bbf4:	f8d3 225c 	ldr.w	r2, [r3, #604]	@ 0x25c
 800bbf8:	3205      	adds	r2, #5
                if (playerHP > 100) playerHP = 100;
 800bbfa:	2a64      	cmp	r2, #100	@ 0x64
 800bbfc:	bfa8      	it	ge
 800bbfe:	2264      	movge	r2, #100	@ 0x64
 800bc00:	f8c3 225c 	str.w	r2, [r3, #604]	@ 0x25c
                updatePlayerHPDisplay();
 800bc04:	f7ff bd5e 	b.w	800b6c4 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
                aiHP += 5; // GIẢM TỪ 10 XUỐNG 5
 800bc08:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 800bc0c:	3205      	adds	r2, #5
                if (aiHP > 100) aiHP = 100;
 800bc0e:	2a64      	cmp	r2, #100	@ 0x64
 800bc10:	bfa8      	it	ge
 800bc12:	2264      	movge	r2, #100	@ 0x64
 800bc14:	f8c3 2260 	str.w	r2, [r3, #608]	@ 0x260
                updateAIHPDisplay();
 800bc18:	f7ff bef8 	b.w	800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>
            if (isPlayer) {
 800bc1c:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800bc20:	b149      	cbz	r1, 800bc36 <_ZN14GameScreenView19applyInstantPowerUpEbi+0x52>
                playerChakraLevel += 15; // GIẢM TỪ 20 XUỐNG 15
 800bc22:	f8d3 2268 	ldr.w	r2, [r3, #616]	@ 0x268
 800bc26:	320f      	adds	r2, #15
                if (playerChakraLevel > 100) playerChakraLevel = 100;
 800bc28:	2a64      	cmp	r2, #100	@ 0x64
 800bc2a:	bfa8      	it	ge
 800bc2c:	2264      	movge	r2, #100	@ 0x64
 800bc2e:	f8c3 2268 	str.w	r2, [r3, #616]	@ 0x268
                updatePlayerChakraDisplay();
 800bc32:	f7ff bc43 	b.w	800b4bc <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
                aiChakraLevel += 15; // GIẢM TỪ 20 XUỐNG 15
 800bc36:	f8d3 226c 	ldr.w	r2, [r3, #620]	@ 0x26c
 800bc3a:	320f      	adds	r2, #15
                if (aiChakraLevel > 100) aiChakraLevel = 100;
 800bc3c:	2a64      	cmp	r2, #100	@ 0x64
 800bc3e:	bfa8      	it	ge
 800bc40:	2264      	movge	r2, #100	@ 0x64
 800bc42:	f8c3 226c 	str.w	r2, [r3, #620]	@ 0x26c
                updateAIChakraDisplay();
 800bc46:	f7ff bc6e 	b.w	800b526 <_ZN14GameScreenView21updateAIChakraDisplayEv>

0800bc4a <_ZN14GameScreenView18giveRandomPowerUpsEv>:
{
 800bc4a:	b570      	push	{r4, r5, r6, lr}
 800bc4c:	4604      	mov	r4, r0
        toggleLED();
 800bc4e:	f7fe fdc3 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800bc52:	f7fe fdc1 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800bc56:	f7fe fdbf 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    int playerRoll = generateRandomNumber(1, 100);
 800bc5a:	2264      	movs	r2, #100	@ 0x64
 800bc5c:	2101      	movs	r1, #1
 800bc5e:	4620      	mov	r0, r4
 800bc60:	f7fe fe44 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    if (playerRoll >= 1 && playerRoll <= 35) {
 800bc64:	1e43      	subs	r3, r0, #1
 800bc66:	2b22      	cmp	r3, #34	@ 0x22
 800bc68:	d935      	bls.n	800bcd6 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x8c>
    } else if (playerRoll >= 36 && playerRoll <= 65) {
 800bc6a:	f1a0 0324 	sub.w	r3, r0, #36	@ 0x24
 800bc6e:	2b1d      	cmp	r3, #29
 800bc70:	d933      	bls.n	800bcda <_ZN14GameScreenView18giveRandomPowerUpsEv+0x90>
    } else if (playerRoll >= 66 && playerRoll <= 85) {
 800bc72:	3842      	subs	r0, #66	@ 0x42
        newPlayerPowerUp = 2; // 20% - Heal
 800bc74:	2813      	cmp	r0, #19
 800bc76:	bf8c      	ite	hi
 800bc78:	2203      	movhi	r2, #3
 800bc7a:	2202      	movls	r2, #2
    playerPowerUpType = newPlayerPowerUp;
 800bc7c:	f504 5680 	add.w	r6, r4, #4096	@ 0x1000
    playerPowerUpActive = true;
 800bc80:	2501      	movs	r5, #1
    playerPowerUpType = newPlayerPowerUp;
 800bc82:	f8c6 228c 	str.w	r2, [r6, #652]	@ 0x28c
    applyInstantPowerUp(true, playerPowerUpType);
 800bc86:	4629      	mov	r1, r5
 800bc88:	4620      	mov	r0, r4
    playerPowerUpActive = true;
 800bc8a:	f886 5294 	strb.w	r5, [r6, #660]	@ 0x294
    applyInstantPowerUp(true, playerPowerUpType);
 800bc8e:	f7ff ffa9 	bl	800bbe4 <_ZN14GameScreenView19applyInstantPowerUpEbi>
    updatePlayerPowerUpDisplay();
 800bc92:	4620      	mov	r0, r4
 800bc94:	f7ff fa70 	bl	800b178 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    int aiRoll = generateRandomNumber(1, 100);
 800bc98:	2264      	movs	r2, #100	@ 0x64
 800bc9a:	4629      	mov	r1, r5
 800bc9c:	4620      	mov	r0, r4
 800bc9e:	f7fe fe25 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    if (aiRoll >= 1 && aiRoll <= 35) {
 800bca2:	1e43      	subs	r3, r0, #1
 800bca4:	2b22      	cmp	r3, #34	@ 0x22
 800bca6:	d91a      	bls.n	800bcde <_ZN14GameScreenView18giveRandomPowerUpsEv+0x94>
    } else if (aiRoll >= 36 && aiRoll <= 65) {
 800bca8:	f1a0 0324 	sub.w	r3, r0, #36	@ 0x24
 800bcac:	2b1d      	cmp	r3, #29
 800bcae:	d918      	bls.n	800bce2 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x98>
    } else if (aiRoll >= 66 && aiRoll <= 85) {
 800bcb0:	3842      	subs	r0, #66	@ 0x42
        newAIPowerUp = 2; // 20% - Heal
 800bcb2:	2813      	cmp	r0, #19
 800bcb4:	bf8c      	ite	hi
 800bcb6:	2203      	movhi	r2, #3
 800bcb8:	2202      	movls	r2, #2
    aiPowerUpActive = true;
 800bcba:	2301      	movs	r3, #1
    applyInstantPowerUp(false, aiPowerUpType);
 800bcbc:	4620      	mov	r0, r4
    aiPowerUpType = newAIPowerUp;
 800bcbe:	f8c6 2290 	str.w	r2, [r6, #656]	@ 0x290
    aiPowerUpActive = true;
 800bcc2:	f886 3295 	strb.w	r3, [r6, #661]	@ 0x295
    applyInstantPowerUp(false, aiPowerUpType);
 800bcc6:	2100      	movs	r1, #0
 800bcc8:	f7ff ff8c 	bl	800bbe4 <_ZN14GameScreenView19applyInstantPowerUpEbi>
    updateAIPowerUpDisplay();
 800bccc:	4620      	mov	r0, r4
}
 800bcce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    updateAIPowerUpDisplay();
 800bcd2:	f7ff bace 	b.w	800b272 <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
        newPlayerPowerUp = 4; // 35% - Shield (HIGHEST)
 800bcd6:	2204      	movs	r2, #4
 800bcd8:	e7d0      	b.n	800bc7c <_ZN14GameScreenView18giveRandomPowerUpsEv+0x32>
        newPlayerPowerUp = 1; // 30% - Double Damage
 800bcda:	460a      	mov	r2, r1
 800bcdc:	e7ce      	b.n	800bc7c <_ZN14GameScreenView18giveRandomPowerUpsEv+0x32>
        newAIPowerUp = 4; // 35% - Shield
 800bcde:	2204      	movs	r2, #4
 800bce0:	e7eb      	b.n	800bcba <_ZN14GameScreenView18giveRandomPowerUpsEv+0x70>
        newAIPowerUp = 1; // 30% - Double Damage
 800bce2:	462a      	mov	r2, r5
 800bce4:	e7e9      	b.n	800bcba <_ZN14GameScreenView18giveRandomPowerUpsEv+0x70>

0800bce6 <_ZN14GameScreenView17checkTurnCompleteEv.part.0>:
void GameScreenView::checkTurnComplete()
 800bce6:	b538      	push	{r3, r4, r5, lr}
        turnCounter++;
 800bce8:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
void GameScreenView::checkTurnComplete()
 800bcec:	4605      	mov	r5, r0
        turnCounter++;
 800bcee:	f8d4 3288 	ldr.w	r3, [r4, #648]	@ 0x288
 800bcf2:	3301      	adds	r3, #1
 800bcf4:	f8c4 3288 	str.w	r3, [r4, #648]	@ 0x288
        toggleLED();
 800bcf8:	f7fe fd6e 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        if (!playerSpecialUsed && !aiSpecialUsed) {
 800bcfc:	f894 3272 	ldrb.w	r3, [r4, #626]	@ 0x272
 800bd00:	b963      	cbnz	r3, 800bd1c <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x36>
 800bd02:	f894 3273 	ldrb.w	r3, [r4, #627]	@ 0x273
 800bd06:	b94b      	cbnz	r3, 800bd1c <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x36>
            int powerUpChance = generateRandomNumber(1, 100);
 800bd08:	2264      	movs	r2, #100	@ 0x64
 800bd0a:	2101      	movs	r1, #1
 800bd0c:	4628      	mov	r0, r5
 800bd0e:	f7fe fded 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
            if (powerUpChance <= 20) {
 800bd12:	2814      	cmp	r0, #20
 800bd14:	dc02      	bgt.n	800bd1c <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x36>
                giveRandomPowerUps();
 800bd16:	4628      	mov	r0, r5
 800bd18:	f7ff ff97 	bl	800bc4a <_ZN14GameScreenView18giveRandomPowerUpsEv>
        if (playerPowerUpActive && (playerPowerUpType == 2 || playerPowerUpType == 3 || playerPowerUpType == 4)) {
 800bd1c:	f894 3294 	ldrb.w	r3, [r4, #660]	@ 0x294
 800bd20:	b163      	cbz	r3, 800bd3c <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x56>
 800bd22:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800bd26:	3b02      	subs	r3, #2
 800bd28:	2b02      	cmp	r3, #2
 800bd2a:	d807      	bhi.n	800bd3c <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x56>
        playerPowerUpActive = false;
 800bd2c:	2300      	movs	r3, #0
 800bd2e:	f884 3294 	strb.w	r3, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800bd32:	f8c4 328c 	str.w	r3, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800bd36:	4628      	mov	r0, r5
 800bd38:	f7ff fa1e 	bl	800b178 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
        if (aiPowerUpActive && (aiPowerUpType == 2 || aiPowerUpType == 3 || aiPowerUpType == 4)) {
 800bd3c:	f894 3295 	ldrb.w	r3, [r4, #661]	@ 0x295
 800bd40:	b163      	cbz	r3, 800bd5c <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x76>
 800bd42:	f8d4 3290 	ldr.w	r3, [r4, #656]	@ 0x290
 800bd46:	3b02      	subs	r3, #2
 800bd48:	2b02      	cmp	r3, #2
 800bd4a:	d807      	bhi.n	800bd5c <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x76>
        aiPowerUpActive = false;
 800bd4c:	2300      	movs	r3, #0
 800bd4e:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800bd52:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800bd56:	4628      	mov	r0, r5
 800bd58:	f7ff fa8b 	bl	800b272 <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
        playerActionDone = false;
 800bd5c:	2300      	movs	r3, #0
 800bd5e:	f8a4 3296 	strh.w	r3, [r4, #662]	@ 0x296
        playerSpecialUsed = false;
 800bd62:	f8a4 3272 	strh.w	r3, [r4, #626]	@ 0x272
}
 800bd66:	bd38      	pop	{r3, r4, r5, pc}

0800bd68 <_ZN14GameScreenView17checkTurnCompleteEv>:
    if (playerActionDone && aiActionDone) {
 800bd68:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800bd6c:	f893 2296 	ldrb.w	r2, [r3, #662]	@ 0x296
 800bd70:	b122      	cbz	r2, 800bd7c <_ZN14GameScreenView17checkTurnCompleteEv+0x14>
 800bd72:	f893 3297 	ldrb.w	r3, [r3, #663]	@ 0x297
 800bd76:	b10b      	cbz	r3, 800bd7c <_ZN14GameScreenView17checkTurnCompleteEv+0x14>
 800bd78:	f7ff bfb5 	b.w	800bce6 <_ZN14GameScreenView17checkTurnCompleteEv.part.0>
}
 800bd7c:	4770      	bx	lr
	...

0800bd80 <_ZN14GameScreenView15handleTickEventEv>:
{
 800bd80:	b570      	push	{r4, r5, r6, lr}
    if (!gameEnded) {
 800bd82:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800bd86:	4605      	mov	r5, r0
    if (!gameEnded) {
 800bd88:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800bd8c:	b9ee      	cbnz	r6, 800bdca <_ZN14GameScreenView15handleTickEventEv+0x4a>
        if (resetTimerActive)
 800bd8e:	f894 327c 	ldrb.w	r3, [r4, #636]	@ 0x27c
 800bd92:	b1ab      	cbz	r3, 800bdc0 <_ZN14GameScreenView15handleTickEventEv+0x40>
            resetTimer += 16;
 800bd94:	f8d4 3278 	ldr.w	r3, [r4, #632]	@ 0x278
 800bd98:	3310      	adds	r3, #16
            if (resetTimer >= RESET_TIME_MS)
 800bd9a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
            resetTimer += 16;
 800bd9e:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
            if (resetTimer >= RESET_TIME_MS)
 800bda2:	db0d      	blt.n	800bdc0 <_ZN14GameScreenView15handleTickEventEv+0x40>
                resetNarutoState();
 800bda4:	f7ff fa97 	bl	800b2d6 <_ZN14GameScreenView16resetNarutoStateEv>
                resetBleachState();
 800bda8:	4628      	mov	r0, r5
 800bdaa:	f7ff fac7 	bl	800b33c <_ZN14GameScreenView16resetBleachStateEv>
                resetTimerActive = false;
 800bdae:	f884 627c 	strb.w	r6, [r4, #636]	@ 0x27c
                resetTimer = 0;
 800bdb2:	f8c4 6278 	str.w	r6, [r4, #632]	@ 0x278
                playerDefending = false;
 800bdb6:	f8a4 6270 	strh.w	r6, [r4, #624]	@ 0x270
                checkTurnComplete();
 800bdba:	4628      	mov	r0, r5
 800bdbc:	f7ff ffd4 	bl	800bd68 <_ZN14GameScreenView17checkTurnCompleteEv>
        updateDamageDisplay();
 800bdc0:	4628      	mov	r0, r5
}
 800bdc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        updateDamageDisplay();
 800bdc6:	f7ff b82b 	b.w	800ae20 <_ZN14GameScreenView19updateDamageDisplayEv>
        if (autoReturnTimerActive) {
 800bdca:	f894 3284 	ldrb.w	r3, [r4, #644]	@ 0x284
 800bdce:	b1eb      	cbz	r3, 800be0c <_ZN14GameScreenView15handleTickEventEv+0x8c>
            autoReturnTimer += 16; // TouchGFX tick ~16ms
 800bdd0:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800bdd4:	f241 726f 	movw	r2, #5999	@ 0x176f
            autoReturnTimer += 16; // TouchGFX tick ~16ms
 800bdd8:	3310      	adds	r3, #16
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800bdda:	4293      	cmp	r3, r2
            autoReturnTimer += 16; // TouchGFX tick ~16ms
 800bddc:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800bde0:	dd14      	ble.n	800be0c <_ZN14GameScreenView15handleTickEventEv+0x8c>
                HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800bde2:	480b      	ldr	r0, [pc, #44]	@ (800be10 <_ZN14GameScreenView15handleTickEventEv+0x90>)
 800bde4:	2200      	movs	r2, #0
 800bde6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800bdea:	f004 fd05 	bl	80107f8 <HAL_GPIO_WritePin>
                if (playerWonGame) {
 800bdee:	f894 3266 	ldrb.w	r3, [r4, #614]	@ 0x266
 800bdf2:	b12b      	cbz	r3, 800be00 <_ZN14GameScreenView15handleTickEventEv+0x80>
    virtual ~GameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800bdf4:	f00e ff6e 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800bdf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    application().gotoBackUpScreenScreenNoTransition();
 800bdfc:	f7f7 bf32 	b.w	8003c64 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
 800be00:	f00e ff68 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800be04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    application().gotoMainMenuScreenScreenNoTransition();
 800be08:	f7f7 bf0c 	b.w	8003c24 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>
}
 800be0c:	bd70      	pop	{r4, r5, r6, pc}
 800be0e:	bf00      	nop
 800be10:	40021800 	.word	0x40021800

0800be14 <_ZN14GameScreenView12playerAttackEv>:
{
 800be14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be18:	4605      	mov	r5, r0
    resetNarutoState();
 800be1a:	f7ff fa5c 	bl	800b2d6 <_ZN14GameScreenView16resetNarutoStateEv>
 800be1e:	2300      	movs	r3, #0
 800be20:	f885 358d 	strb.w	r3, [r5, #1421]	@ 0x58d
 800be24:	2301      	movs	r3, #1
 800be26:	f885 3669 	strb.w	r3, [r5, #1641]	@ 0x669
    naruto_atk.invalidate();
 800be2a:	f205 6044 	addw	r0, r5, #1604	@ 0x644
 800be2e:	f010 f903 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800be32:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
    naruto.invalidate();
 800be36:	f505 60ad 	add.w	r0, r5, #1384	@ 0x568
 800be3a:	f010 f8fd 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800be3e:	2208      	movs	r2, #8
 800be40:	2103      	movs	r1, #3
 800be42:	4628      	mov	r0, r5
 800be44:	f7fe fd52 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800be48:	f894 7294 	ldrb.w	r7, [r4, #660]	@ 0x294
 800be4c:	b127      	cbz	r7, 800be58 <_ZN14GameScreenView12playerAttackEv+0x44>
 800be4e:	f8d4 728c 	ldr.w	r7, [r4, #652]	@ 0x28c
 800be52:	1e7b      	subs	r3, r7, #1
 800be54:	425f      	negs	r7, r3
 800be56:	415f      	adcs	r7, r3
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800be58:	f894 8295 	ldrb.w	r8, [r4, #661]	@ 0x295
 800be5c:	f1b8 0f00 	cmp.w	r8, #0
 800be60:	d003      	beq.n	800be6a <_ZN14GameScreenView12playerAttackEv+0x56>
 800be62:	f8d4 3290 	ldr.w	r3, [r4, #656]	@ 0x290
 800be66:	2b04      	cmp	r3, #4
 800be68:	d048      	beq.n	800befc <_ZN14GameScreenView12playerAttackEv+0xe8>
    if (hasShield) {
 800be6a:	f894 1271 	ldrb.w	r1, [r4, #625]	@ 0x271
 800be6e:	463a      	mov	r2, r7
 800be70:	f7fe fc96 	bl	800a7a0 <_ZN14GameScreenView15calculateDamageEibbb.part.0>
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800be74:	f04f 0800 	mov.w	r8, #0
 800be78:	4606      	mov	r6, r0
    aiHP -= actualDamage;
 800be7a:	f8d4 3260 	ldr.w	r3, [r4, #608]	@ 0x260
 800be7e:	1b9b      	subs	r3, r3, r6
    if (aiHP < 0) aiHP = 0;
 800be80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800be84:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
    showDamageText(0, actualDamage);
 800be88:	4632      	mov	r2, r6
 800be8a:	2100      	movs	r1, #0
 800be8c:	4628      	mov	r0, r5
 800be8e:	f7fe fe2a 	bl	800aae6 <_ZN14GameScreenView14showDamageTextEii>
    playerChakraLevel += generateRandomNumber(5, 10);
 800be92:	220a      	movs	r2, #10
 800be94:	2105      	movs	r1, #5
 800be96:	4628      	mov	r0, r5
 800be98:	f7fe fd28 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800be9c:	f8d4 3268 	ldr.w	r3, [r4, #616]	@ 0x268
 800bea0:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800bea2:	2b64      	cmp	r3, #100	@ 0x64
 800bea4:	bfa8      	it	ge
 800bea6:	2364      	movge	r3, #100	@ 0x64
 800bea8:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
    if (hasDoubleAttack) {
 800beac:	b13f      	cbz	r7, 800bebe <_ZN14GameScreenView12playerAttackEv+0xaa>
        playerPowerUpActive = false;
 800beae:	2300      	movs	r3, #0
 800beb0:	f884 3294 	strb.w	r3, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800beb4:	f8c4 328c 	str.w	r3, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800beb8:	4628      	mov	r0, r5
 800beba:	f7ff f95d 	bl	800b178 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    if (aiHasShield && actualDamage == 0) {
 800bebe:	f1b8 0f00 	cmp.w	r8, #0
 800bec2:	d007      	beq.n	800bed4 <_ZN14GameScreenView12playerAttackEv+0xc0>
 800bec4:	b936      	cbnz	r6, 800bed4 <_ZN14GameScreenView12playerAttackEv+0xc0>
        aiPowerUpActive = false;
 800bec6:	f884 6295 	strb.w	r6, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800beca:	f8c4 6290 	str.w	r6, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800bece:	4628      	mov	r0, r5
 800bed0:	f7ff f9cf 	bl	800b272 <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
    updateAIHPDisplay();
 800bed4:	4628      	mov	r0, r5
 800bed6:	f7ff fd99 	bl	800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>
    updatePlayerChakraDisplay();
 800beda:	4628      	mov	r0, r5
 800bedc:	f7ff faee 	bl	800b4bc <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800bee0:	f7fe fc7a 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800bee4:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800bee6:	2200      	movs	r2, #0
    playerActionDone = true;
 800bee8:	f884 3296 	strb.w	r3, [r4, #662]	@ 0x296
    playerSpecialUsed = false;
 800beec:	f884 2272 	strb.w	r2, [r4, #626]	@ 0x272
    resetTimer = 0;
 800bef0:	f8c4 2278 	str.w	r2, [r4, #632]	@ 0x278
    resetTimerActive = true;
 800bef4:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
}
 800bef8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return 0; // Shield chặn hoàn toàn
 800befc:	2600      	movs	r6, #0
 800befe:	e7bc      	b.n	800be7a <_ZN14GameScreenView12playerAttackEv+0x66>

0800bf00 <_ZN14GameScreenView13playerSpecialEv>:
{
 800bf00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (gameEnded || playerChakraLevel < 100) return;
 800bf02:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800bf06:	4605      	mov	r5, r0
    if (gameEnded || playerChakraLevel < 100) return;
 800bf08:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800bf0c:	2e00      	cmp	r6, #0
 800bf0e:	d155      	bne.n	800bfbc <_ZN14GameScreenView13playerSpecialEv+0xbc>
 800bf10:	f8d4 3268 	ldr.w	r3, [r4, #616]	@ 0x268
 800bf14:	2b63      	cmp	r3, #99	@ 0x63
 800bf16:	dd51      	ble.n	800bfbc <_ZN14GameScreenView13playerSpecialEv+0xbc>
    resetNarutoState();
 800bf18:	f7ff f9dd 	bl	800b2d6 <_ZN14GameScreenView16resetNarutoStateEv>
 800bf1c:	2301      	movs	r3, #1
 800bf1e:	f885 3611 	strb.w	r3, [r5, #1553]	@ 0x611
    naruto_spe.invalidate();
 800bf22:	f205 50ec 	addw	r0, r5, #1516	@ 0x5ec
 800bf26:	f885 658d 	strb.w	r6, [r5, #1421]	@ 0x58d
 800bf2a:	f010 f885 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800bf2e:	f505 60ad 	add.w	r0, r5, #1384	@ 0x568
 800bf32:	f010 f881 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800bf36:	f894 7295 	ldrb.w	r7, [r4, #661]	@ 0x295
 800bf3a:	b11f      	cbz	r7, 800bf44 <_ZN14GameScreenView13playerSpecialEv+0x44>
 800bf3c:	f8d4 3290 	ldr.w	r3, [r4, #656]	@ 0x290
 800bf40:	2b04      	cmp	r3, #4
 800bf42:	d003      	beq.n	800bf4c <_ZN14GameScreenView13playerSpecialEv+0x4c>
    int actualDamage = calculateSpecialDamage(baseDamage, aiDefending, aiHasShield);
 800bf44:	f894 7271 	ldrb.w	r7, [r4, #625]	@ 0x271
    if (isDefending) {
 800bf48:	bbcf      	cbnz	r7, 800bfbe <_ZN14GameScreenView13playerSpecialEv+0xbe>
    int finalDamage = baseDamage; // SPECIAL KHÔNG ĐƯỢC DOUBLE DAMAGE
 800bf4a:	2628      	movs	r6, #40	@ 0x28
    aiHP -= actualDamage;
 800bf4c:	f8d4 3260 	ldr.w	r3, [r4, #608]	@ 0x260
 800bf50:	1b9b      	subs	r3, r3, r6
    if (aiHP < 0) aiHP = 0;
 800bf52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800bf56:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
    showDamageText(0, actualDamage);
 800bf5a:	4632      	mov	r2, r6
 800bf5c:	2100      	movs	r1, #0
 800bf5e:	4628      	mov	r0, r5
 800bf60:	f7fe fdc1 	bl	800aae6 <_ZN14GameScreenView14showDamageTextEii>
    playerChakraLevel = 0;
 800bf64:	2300      	movs	r3, #0
 800bf66:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
    if (aiHasShield && actualDamage == 0) {
 800bf6a:	b13f      	cbz	r7, 800bf7c <_ZN14GameScreenView13playerSpecialEv+0x7c>
 800bf6c:	b936      	cbnz	r6, 800bf7c <_ZN14GameScreenView13playerSpecialEv+0x7c>
        aiPowerUpActive = false;
 800bf6e:	f884 6295 	strb.w	r6, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800bf72:	f8c4 6290 	str.w	r6, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800bf76:	4628      	mov	r0, r5
 800bf78:	f7ff f97b 	bl	800b272 <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
    updatePlayerChakraDisplay();
 800bf7c:	4628      	mov	r0, r5
 800bf7e:	f7ff fa9d 	bl	800b4bc <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    updateAIHPDisplay();
 800bf82:	4628      	mov	r0, r5
 800bf84:	f7ff fd42 	bl	800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>
    if (aiHP <= 0) {
 800bf88:	f8d4 3260 	ldr.w	r3, [r4, #608]	@ 0x260
    playerActionDone = true;
 800bf8c:	2601      	movs	r6, #1
    if (aiHP <= 0) {
 800bf8e:	2b00      	cmp	r3, #0
    playerActionDone = true;
 800bf90:	f884 6296 	strb.w	r6, [r4, #662]	@ 0x296
    playerSpecialUsed = true; // KHÔNG có power-up sau special
 800bf94:	f884 6272 	strb.w	r6, [r4, #626]	@ 0x272
    if (aiHP <= 0) {
 800bf98:	dc08      	bgt.n	800bfac <_ZN14GameScreenView13playerSpecialEv+0xac>
        toggleLED();
 800bf9a:	f7fe fc1d 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        if (!gameEnded) {
 800bf9e:	f894 3265 	ldrb.w	r3, [r4, #613]	@ 0x265
 800bfa2:	b91b      	cbnz	r3, 800bfac <_ZN14GameScreenView13playerSpecialEv+0xac>
            endGame(true);
 800bfa4:	4631      	mov	r1, r6
 800bfa6:	4628      	mov	r0, r5
 800bfa8:	f7ff faf2 	bl	800b590 <_ZN14GameScreenView7endGameEb>
    toggleLED();
 800bfac:	f7fe fc14 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    resetTimer = 0;
 800bfb0:	2300      	movs	r3, #0
 800bfb2:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
    resetTimerActive = true;
 800bfb6:	2301      	movs	r3, #1
 800bfb8:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
}
 800bfbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800bfbe:	2700      	movs	r7, #0
        finalDamage = 25;
 800bfc0:	2619      	movs	r6, #25
 800bfc2:	e7c3      	b.n	800bf4c <_ZN14GameScreenView13playerSpecialEv+0x4c>

0800bfc4 <_ZN14GameScreenView8aiDefendEv>:
{
 800bfc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (gameEnded) return;
 800bfc6:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 800bfca:	4604      	mov	r4, r0
    if (gameEnded) return;
 800bfcc:	f895 6265 	ldrb.w	r6, [r5, #613]	@ 0x265
 800bfd0:	2e00      	cmp	r6, #0
 800bfd2:	d146      	bne.n	800c062 <_ZN14GameScreenView8aiDefendEv+0x9e>
 800bfd4:	2701      	movs	r7, #1
    resetBleachState();
 800bfd6:	f7ff f9b1 	bl	800b33c <_ZN14GameScreenView16resetBleachStateEv>
    bleach_def.invalidate();
 800bfda:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800bfde:	f884 6485 	strb.w	r6, [r4, #1157]	@ 0x485
 800bfe2:	f884 7535 	strb.w	r7, [r4, #1333]	@ 0x535
 800bfe6:	f010 f827 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800bfea:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800bfee:	f010 f823 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(2, 5);
 800bff2:	2205      	movs	r2, #5
 800bff4:	2102      	movs	r1, #2
    aiDefending = true;
 800bff6:	f885 7271 	strb.w	r7, [r5, #625]	@ 0x271
    int healAmount = generateRandomNumber(2, 5);
 800bffa:	4620      	mov	r0, r4
 800bffc:	f7fe fc76 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    aiHP += healAmount;
 800c000:	f8d5 3260 	ldr.w	r3, [r5, #608]	@ 0x260
 800c004:	4403      	add	r3, r0
    if (aiHP > 100) aiHP = 100;
 800c006:	2b64      	cmp	r3, #100	@ 0x64
 800c008:	bfa8      	it	ge
 800c00a:	2364      	movge	r3, #100	@ 0x64
 800c00c:	f8c5 3260 	str.w	r3, [r5, #608]	@ 0x260
    aiChakraLevel += generateRandomNumber(8, 15);
 800c010:	220f      	movs	r2, #15
 800c012:	2108      	movs	r1, #8
 800c014:	4620      	mov	r0, r4
 800c016:	f7fe fc69 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800c01a:	f8d5 326c 	ldr.w	r3, [r5, #620]	@ 0x26c
 800c01e:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800c020:	2b64      	cmp	r3, #100	@ 0x64
 800c022:	bfa8      	it	ge
 800c024:	2364      	movge	r3, #100	@ 0x64
 800c026:	f8c5 326c 	str.w	r3, [r5, #620]	@ 0x26c
    showDamageText(0, 0);
 800c02a:	4632      	mov	r2, r6
 800c02c:	4631      	mov	r1, r6
 800c02e:	4620      	mov	r0, r4
 800c030:	f7fe fd59 	bl	800aae6 <_ZN14GameScreenView14showDamageTextEii>
    if (aiPowerUpActive && aiPowerUpType == 1) {
 800c034:	f895 3295 	ldrb.w	r3, [r5, #661]	@ 0x295
 800c038:	b153      	cbz	r3, 800c050 <_ZN14GameScreenView8aiDefendEv+0x8c>
 800c03a:	f8d5 3290 	ldr.w	r3, [r5, #656]	@ 0x290
 800c03e:	42bb      	cmp	r3, r7
 800c040:	d106      	bne.n	800c050 <_ZN14GameScreenView8aiDefendEv+0x8c>
        aiPowerUpActive = false;
 800c042:	f885 6295 	strb.w	r6, [r5, #661]	@ 0x295
        aiPowerUpType = 0;
 800c046:	f8c5 6290 	str.w	r6, [r5, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800c04a:	4620      	mov	r0, r4
 800c04c:	f7ff f911 	bl	800b272 <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
    updateAIHPDisplay();
 800c050:	4620      	mov	r0, r4
 800c052:	f7ff fcdb 	bl	800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>
    updateAIChakraDisplay();
 800c056:	4620      	mov	r0, r4
 800c058:	f7ff fa65 	bl	800b526 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    aiActionDone = true;
 800c05c:	2301      	movs	r3, #1
 800c05e:	f885 3297 	strb.w	r3, [r5, #663]	@ 0x297
}
 800c062:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c064 <_ZN14GameScreenView15performAIActionEv>:
{
 800c064:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded || aiHP <= 0) {
 800c066:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
{
 800c06a:	4605      	mov	r5, r0
    if (gameEnded || aiHP <= 0) {
 800c06c:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c070:	2b00      	cmp	r3, #0
 800c072:	f040 80d9 	bne.w	800c228 <_ZN14GameScreenView15performAIActionEv+0x1c4>
 800c076:	f8d6 3260 	ldr.w	r3, [r6, #608]	@ 0x260
 800c07a:	2b00      	cmp	r3, #0
 800c07c:	f340 80d4 	ble.w	800c228 <_ZN14GameScreenView15performAIActionEv+0x1c4>
    if (playerHP <= 0) {
 800c080:	f8d6 225c 	ldr.w	r2, [r6, #604]	@ 0x25c
 800c084:	2a00      	cmp	r2, #0
 800c086:	f340 80cf 	ble.w	800c228 <_ZN14GameScreenView15performAIActionEv+0x1c4>
    if (aiPowerUpActive) {
 800c08a:	f896 1295 	ldrb.w	r1, [r6, #661]	@ 0x295
 800c08e:	b129      	cbz	r1, 800c09c <_ZN14GameScreenView15performAIActionEv+0x38>
        switch(aiPowerUpType) {
 800c090:	f8d6 1290 	ldr.w	r1, [r6, #656]	@ 0x290
 800c094:	2901      	cmp	r1, #1
 800c096:	d024      	beq.n	800c0e2 <_ZN14GameScreenView15performAIActionEv+0x7e>
 800c098:	2904      	cmp	r1, #4
 800c09a:	d03c      	beq.n	800c116 <_ZN14GameScreenView15performAIActionEv+0xb2>
        bool playerCanSpecial = (playerChakraLevel >= 100);
 800c09c:	f8d6 0268 	ldr.w	r0, [r6, #616]	@ 0x268
        switch(aiPersonality)
 800c0a0:	f8d6 1274 	ldr.w	r1, [r6, #628]	@ 0x274
        int baseDefendBonus = 0;
 800c0a4:	2863      	cmp	r0, #99	@ 0x63
 800c0a6:	bfcc      	ite	gt
 800c0a8:	2419      	movgt	r4, #25
 800c0aa:	2400      	movle	r4, #0
        switch(aiPersonality)
 800c0ac:	2901      	cmp	r1, #1
 800c0ae:	d061      	beq.n	800c174 <_ZN14GameScreenView15performAIActionEv+0x110>
 800c0b0:	2902      	cmp	r1, #2
 800c0b2:	f000 8094 	beq.w	800c1de <_ZN14GameScreenView15performAIActionEv+0x17a>
 800c0b6:	bb49      	cbnz	r1, 800c10c <_ZN14GameScreenView15performAIActionEv+0xa8>
                if (aiChakraLevel >= 100) {
 800c0b8:	f8d6 126c 	ldr.w	r1, [r6, #620]	@ 0x26c
 800c0bc:	2963      	cmp	r1, #99	@ 0x63
 800c0be:	dd46      	ble.n	800c14e <_ZN14GameScreenView15performAIActionEv+0xea>
                    if (aiHPPercent >= 80) {
 800c0c0:	2b4f      	cmp	r3, #79	@ 0x4f
 800c0c2:	dd3b      	ble.n	800c13c <_ZN14GameScreenView15performAIActionEv+0xd8>
                        defendChance = 50 + baseDefendBonus;
 800c0c4:	3432      	adds	r4, #50	@ 0x32
                    if (playerHPPercent <= 25) {
 800c0c6:	2a19      	cmp	r2, #25
                        defendChance -= 10;
 800c0c8:	bfd8      	it	le
 800c0ca:	3c0a      	suble	r4, #10
                    int roll = generateRandomNumber(1, 100);
 800c0cc:	2264      	movs	r2, #100	@ 0x64
 800c0ce:	2101      	movs	r1, #1
 800c0d0:	4628      	mov	r0, r5
 800c0d2:	f7fe fc0b 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                    if (defendChance > 70) defendChance = 70;
 800c0d6:	2c46      	cmp	r4, #70	@ 0x46
 800c0d8:	bfa8      	it	ge
 800c0da:	2446      	movge	r4, #70	@ 0x46
                    if (roll <= defendChance) {
 800c0dc:	4284      	cmp	r4, r0
 800c0de:	da0c      	bge.n	800c0fa <_ZN14GameScreenView15performAIActionEv+0x96>
 800c0e0:	e023      	b.n	800c12a <_ZN14GameScreenView15performAIActionEv+0xc6>
                if (aiChakraLevel >= 100) {
 800c0e2:	f8d6 326c 	ldr.w	r3, [r6, #620]	@ 0x26c
 800c0e6:	2b63      	cmp	r3, #99	@ 0x63
                    int roll = generateRandomNumber(1, 100);
 800c0e8:	f04f 0264 	mov.w	r2, #100	@ 0x64
                if (aiChakraLevel >= 100) {
 800c0ec:	dd0a      	ble.n	800c104 <_ZN14GameScreenView15performAIActionEv+0xa0>
                    int roll = generateRandomNumber(1, 100);
 800c0ee:	f7fe fbfd 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                    if (roll <= 80) {
 800c0f2:	2850      	cmp	r0, #80	@ 0x50
 800c0f4:	dd0a      	ble.n	800c10c <_ZN14GameScreenView15performAIActionEv+0xa8>
                    } else if (roll <= 90) {
 800c0f6:	285a      	cmp	r0, #90	@ 0x5a
 800c0f8:	dd17      	ble.n	800c12a <_ZN14GameScreenView15performAIActionEv+0xc6>
            if (!gameEnded && aiHP > 0) aiDefend();
 800c0fa:	4628      	mov	r0, r5
}
 800c0fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && aiHP > 0) aiDefend();
 800c100:	f7ff bf60 	b.w	800bfc4 <_ZN14GameScreenView8aiDefendEv>
                    if (generateRandomNumber(1, 100) <= 90) {
 800c104:	f7fe fbf2 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800c108:	285a      	cmp	r0, #90	@ 0x5a
 800c10a:	dcf6      	bgt.n	800c0fa <_ZN14GameScreenView15performAIActionEv+0x96>
            if (!gameEnded && aiHP > 0) aiAttack();
 800c10c:	4628      	mov	r0, r5
}
 800c10e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && aiHP > 0) aiAttack();
 800c112:	f7ff bbbb 	b.w	800b88c <_ZN14GameScreenView8aiAttackEv>
                if (aiChakraLevel >= 100) {
 800c116:	f8d6 326c 	ldr.w	r3, [r6, #620]	@ 0x26c
 800c11a:	2b63      	cmp	r3, #99	@ 0x63
 800c11c:	ddf6      	ble.n	800c10c <_ZN14GameScreenView15performAIActionEv+0xa8>
                    if (generateRandomNumber(1, 100) <= 50) {
 800c11e:	2264      	movs	r2, #100	@ 0x64
 800c120:	2101      	movs	r1, #1
 800c122:	f7fe fbe3 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800c126:	2832      	cmp	r0, #50	@ 0x32
 800c128:	dcf0      	bgt.n	800c10c <_ZN14GameScreenView15performAIActionEv+0xa8>
            if (!gameEnded && aiHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800c12a:	f8d6 326c 	ldr.w	r3, [r6, #620]	@ 0x26c
 800c12e:	2b63      	cmp	r3, #99	@ 0x63
 800c130:	dd7a      	ble.n	800c228 <_ZN14GameScreenView15performAIActionEv+0x1c4>
 800c132:	4628      	mov	r0, r5
}
 800c134:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && aiHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800c138:	f7ff bc1c 	b.w	800b974 <_ZN14GameScreenView9aiSpecialEv>
                    } else if (aiHPPercent >= 60) {
 800c13c:	2b3b      	cmp	r3, #59	@ 0x3b
 800c13e:	dd01      	ble.n	800c144 <_ZN14GameScreenView15performAIActionEv+0xe0>
                        defendChance = 40 + baseDefendBonus;
 800c140:	3428      	adds	r4, #40	@ 0x28
                        specialChance = 60 - (baseDefendBonus / 2);
 800c142:	e7c0      	b.n	800c0c6 <_ZN14GameScreenView15performAIActionEv+0x62>
                    } else if (aiHPPercent >= 30) {
 800c144:	2b1d      	cmp	r3, #29
                        defendChance = 30 + baseDefendBonus;
 800c146:	bfcc      	ite	gt
 800c148:	341e      	addgt	r4, #30
                        defendChance = 20 + baseDefendBonus;
 800c14a:	3414      	addle	r4, #20
                        specialChance = 80 - (baseDefendBonus / 2);
 800c14c:	e7bb      	b.n	800c0c6 <_ZN14GameScreenView15performAIActionEv+0x62>
                    if (aiHPPercent >= 70) {
 800c14e:	2b45      	cmp	r3, #69	@ 0x45
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c150:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800c154:	f04f 0101 	mov.w	r1, #1
 800c158:	4628      	mov	r0, r5
                    if (aiHPPercent >= 70) {
 800c15a:	dd03      	ble.n	800c164 <_ZN14GameScreenView15performAIActionEv+0x100>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c15c:	f7fe fbc6 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 30 + baseDefendBonus;
 800c160:	341e      	adds	r4, #30
 800c162:	e004      	b.n	800c16e <_ZN14GameScreenView15performAIActionEv+0x10a>
                    } else if (aiHPPercent >= 40) {
 800c164:	2b27      	cmp	r3, #39	@ 0x27
 800c166:	ddf9      	ble.n	800c15c <_ZN14GameScreenView15performAIActionEv+0xf8>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c168:	f7fe fbc0 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 50 + baseDefendBonus;
 800c16c:	3432      	adds	r4, #50	@ 0x32
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c16e:	42a0      	cmp	r0, r4
 800c170:	ddc3      	ble.n	800c0fa <_ZN14GameScreenView15performAIActionEv+0x96>
 800c172:	e7cb      	b.n	800c10c <_ZN14GameScreenView15performAIActionEv+0xa8>
                if (aiChakraLevel >= 100) {
 800c174:	f8d6 026c 	ldr.w	r0, [r6, #620]	@ 0x26c
 800c178:	2863      	cmp	r0, #99	@ 0x63
 800c17a:	dd17      	ble.n	800c1ac <_ZN14GameScreenView15performAIActionEv+0x148>
                    if (aiHPPercent >= 80) {
 800c17c:	2b4f      	cmp	r3, #79	@ 0x4f
 800c17e:	dd0c      	ble.n	800c19a <_ZN14GameScreenView15performAIActionEv+0x136>
                        defendChance = 70 + baseDefendBonus;
 800c180:	3446      	adds	r4, #70	@ 0x46
                    if (playerHPPercent <= 20) {
 800c182:	2a14      	cmp	r2, #20
                        defendChance -= 5;
 800c184:	bfd8      	it	le
 800c186:	3c05      	suble	r4, #5
                    int roll = generateRandomNumber(1, 100);
 800c188:	2264      	movs	r2, #100	@ 0x64
 800c18a:	2101      	movs	r1, #1
 800c18c:	4628      	mov	r0, r5
 800c18e:	f7fe fbad 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                    if (defendChance > 85) defendChance = 85;
 800c192:	2c55      	cmp	r4, #85	@ 0x55
 800c194:	bfa8      	it	ge
 800c196:	2455      	movge	r4, #85	@ 0x55
 800c198:	e7a0      	b.n	800c0dc <_ZN14GameScreenView15performAIActionEv+0x78>
                    } else if (aiHPPercent >= 50) {
 800c19a:	2b31      	cmp	r3, #49	@ 0x31
 800c19c:	dd01      	ble.n	800c1a2 <_ZN14GameScreenView15performAIActionEv+0x13e>
                        defendChance = 60 + baseDefendBonus;
 800c19e:	343c      	adds	r4, #60	@ 0x3c
                        specialChance = 40 - (baseDefendBonus / 2);
 800c1a0:	e7ef      	b.n	800c182 <_ZN14GameScreenView15performAIActionEv+0x11e>
                    } else if (aiHPPercent >= 25) {
 800c1a2:	2b18      	cmp	r3, #24
                        defendChance = 45 + baseDefendBonus;
 800c1a4:	bfcc      	ite	gt
 800c1a6:	342d      	addgt	r4, #45	@ 0x2d
                        defendChance = 30 + baseDefendBonus;
 800c1a8:	341e      	addle	r4, #30
                        specialChance = 70 - (baseDefendBonus / 2);
 800c1aa:	e7ea      	b.n	800c182 <_ZN14GameScreenView15performAIActionEv+0x11e>
                    if (aiHPPercent >= 60) {
 800c1ac:	2b3b      	cmp	r3, #59	@ 0x3b
 800c1ae:	dd09      	ble.n	800c1c4 <_ZN14GameScreenView15performAIActionEv+0x160>
                        int defendChance = 80 + baseDefendBonus;
 800c1b0:	2c0f      	cmp	r4, #15
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c1b2:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800c1b6:	4628      	mov	r0, r5
                        int defendChance = 80 + baseDefendBonus;
 800c1b8:	bfcc      	ite	gt
 800c1ba:	245f      	movgt	r4, #95	@ 0x5f
 800c1bc:	2450      	movle	r4, #80	@ 0x50
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c1be:	f7fe fb95 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800c1c2:	e7d4      	b.n	800c16e <_ZN14GameScreenView15performAIActionEv+0x10a>
                    } else if (aiHPPercent >= 30) {
 800c1c4:	2b1d      	cmp	r3, #29
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c1c6:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800c1ca:	4628      	mov	r0, r5
                    } else if (aiHPPercent >= 30) {
 800c1cc:	dd03      	ble.n	800c1d6 <_ZN14GameScreenView15performAIActionEv+0x172>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c1ce:	f7fe fb8d 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 65 + baseDefendBonus;
 800c1d2:	3441      	adds	r4, #65	@ 0x41
 800c1d4:	e7cb      	b.n	800c16e <_ZN14GameScreenView15performAIActionEv+0x10a>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c1d6:	f7fe fb89 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 40 + baseDefendBonus;
 800c1da:	3428      	adds	r4, #40	@ 0x28
 800c1dc:	e7c7      	b.n	800c16e <_ZN14GameScreenView15performAIActionEv+0x10a>
                if (aiChakraLevel >= 100) {
 800c1de:	f8d6 226c 	ldr.w	r2, [r6, #620]	@ 0x26c
 800c1e2:	2a63      	cmp	r2, #99	@ 0x63
 800c1e4:	dd07      	ble.n	800c1f6 <_ZN14GameScreenView15performAIActionEv+0x192>
                    int roll = generateRandomNumber(1, 100);
 800c1e6:	2101      	movs	r1, #1
 800c1e8:	2264      	movs	r2, #100	@ 0x64
 800c1ea:	4628      	mov	r0, r5
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800c1ec:	410c      	asrs	r4, r1
                    int roll = generateRandomNumber(1, 100);
 800c1ee:	f7fe fb7d 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800c1f2:	342d      	adds	r4, #45	@ 0x2d
 800c1f4:	e772      	b.n	800c0dc <_ZN14GameScreenView15performAIActionEv+0x78>
                    if (aiHPPercent >= 70) {
 800c1f6:	2b45      	cmp	r3, #69	@ 0x45
 800c1f8:	dd07      	ble.n	800c20a <_ZN14GameScreenView15performAIActionEv+0x1a6>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c1fa:	2101      	movs	r1, #1
 800c1fc:	2264      	movs	r2, #100	@ 0x64
 800c1fe:	4628      	mov	r0, r5
                        int defendChance = 60 + (baseDefendBonus / 2);
 800c200:	410c      	asrs	r4, r1
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c202:	f7fe fb73 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 60 + (baseDefendBonus / 2);
 800c206:	343c      	adds	r4, #60	@ 0x3c
 800c208:	e7b1      	b.n	800c16e <_ZN14GameScreenView15performAIActionEv+0x10a>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800c20a:	2863      	cmp	r0, #99	@ 0x63
 800c20c:	dc0d      	bgt.n	800c22a <_ZN14GameScreenView15performAIActionEv+0x1c6>
                            action = generateRandomNumber(1, 2);
 800c20e:	2202      	movs	r2, #2
 800c210:	2101      	movs	r1, #1
 800c212:	4628      	mov	r0, r5
 800c214:	f7fe fb6a 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
    switch(action)
 800c218:	2802      	cmp	r0, #2
 800c21a:	f43f af6e 	beq.w	800c0fa <_ZN14GameScreenView15performAIActionEv+0x96>
 800c21e:	2803      	cmp	r0, #3
 800c220:	d083      	beq.n	800c12a <_ZN14GameScreenView15performAIActionEv+0xc6>
 800c222:	2801      	cmp	r0, #1
 800c224:	f43f af72 	beq.w	800c10c <_ZN14GameScreenView15performAIActionEv+0xa8>
}
 800c228:	bd70      	pop	{r4, r5, r6, pc}
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800c22a:	2264      	movs	r2, #100	@ 0x64
 800c22c:	2101      	movs	r1, #1
 800c22e:	4628      	mov	r0, r5
 800c230:	f7fe fb5c 	bl	800a8ec <_ZN14GameScreenView20generateRandomNumberEii>
 800c234:	281e      	cmp	r0, #30
 800c236:	f77f af60 	ble.w	800c0fa <_ZN14GameScreenView15performAIActionEv+0x96>
 800c23a:	e7e8      	b.n	800c20e <_ZN14GameScreenView15performAIActionEv+0x1aa>

0800c23c <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800c23c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    if (evt.getType() == ClickEvent::PRESSED)
 800c240:	790b      	ldrb	r3, [r1, #4]
{
 800c242:	b08b      	sub	sp, #44	@ 0x2c
 800c244:	4605      	mov	r5, r0
 800c246:	460c      	mov	r4, r1
    if (evt.getType() == ClickEvent::PRESSED)
 800c248:	2b00      	cmp	r3, #0
 800c24a:	f040 819d 	bne.w	800c588 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
        if (!gameEnded) {
 800c24e:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
        return clickX;
 800c252:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c256:	f896 7265 	ldrb.w	r7, [r6, #613]	@ 0x265
 800c25a:	2f00      	cmp	r7, #0
 800c25c:	d17f      	bne.n	800c35e <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x122>
                                   evt.getY() >= 140 && evt.getY() <= 280);
 800c25e:	3ba0      	subs	r3, #160	@ 0xa0
 800c260:	b29b      	uxth	r3, r3
 800c262:	2b50      	cmp	r3, #80	@ 0x50
 800c264:	d806      	bhi.n	800c274 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x38>
            bool clickedOnBleach = (evt.getX() >= 160 && evt.getX() <= 240 &&
 800c266:	890f      	ldrh	r7, [r1, #8]
 800c268:	3f8c      	subs	r7, #140	@ 0x8c
 800c26a:	b2bf      	uxth	r7, r7
 800c26c:	2f8c      	cmp	r7, #140	@ 0x8c
 800c26e:	bf8c      	ite	hi
 800c270:	2700      	movhi	r7, #0
 800c272:	2701      	movls	r7, #1
            if (bleach.isVisible() && bleach.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c274:	f895 3485 	ldrb.w	r3, [r5, #1157]	@ 0x485
 800c278:	b16b      	cbz	r3, 800c296 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
 800c27a:	f505 618c 	add.w	r1, r5, #1120	@ 0x460
 800c27e:	a808      	add	r0, sp, #32
 800c280:	f00f ff76 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c284:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c288:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c28c:	a808      	add	r0, sp, #32
 800c28e:	f7fe faab 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c292:	4680      	mov	r8, r0
 800c294:	b908      	cbnz	r0, 800c29a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x5e>
            bool clickedOnBleachSprite = false;
 800c296:	f04f 0800 	mov.w	r8, #0
            if (bleach_atk.isVisible() && bleach_atk.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c29a:	f895 3561 	ldrb.w	r3, [r5, #1377]	@ 0x561
 800c29e:	bb63      	cbnz	r3, 800c2fa <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
            bool clickedOnBleachSprite = false;
 800c2a0:	46c1      	mov	r9, r8
            if (bleach_def.isVisible() && bleach_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c2a2:	f895 3535 	ldrb.w	r3, [r5, #1333]	@ 0x535
 800c2a6:	2b00      	cmp	r3, #0
 800c2a8:	d137      	bne.n	800c31a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xde>
            bool clickedOnBleachSprite = false;
 800c2aa:	46c8      	mov	r8, r9
            if (bleach_spe.isVisible() && bleach_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c2ac:	f895 3509 	ldrb.w	r3, [r5, #1289]	@ 0x509
 800c2b0:	2b00      	cmp	r3, #0
 800c2b2:	d142      	bne.n	800c33a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xfe>
            if (clickedOnBleach || clickedOnBleachSprite) {
 800c2b4:	2f00      	cmp	r7, #0
 800c2b6:	d04f      	beq.n	800c358 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x11c>
            bool clickedOnBleachSprite = false;
 800c2b8:	2414      	movs	r4, #20
                    toggleLED();
 800c2ba:	f7fe fa8d 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
                for (int i = 0; i < 20; i++) {
 800c2be:	3c01      	subs	r4, #1
 800c2c0:	d1fb      	bne.n	800c2ba <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x7e>
                showDamageText(0, 999); // Show massive damage to AI
 800c2c2:	4621      	mov	r1, r4
 800c2c4:	f240 32e7 	movw	r2, #999	@ 0x3e7
                aiHP = 0;
 800c2c8:	f8c6 4260 	str.w	r4, [r6, #608]	@ 0x260
                showDamageText(0, 999); // Show massive damage to AI
 800c2cc:	4628      	mov	r0, r5
 800c2ce:	f7fe fc0a 	bl	800aae6 <_ZN14GameScreenView14showDamageTextEii>
                resetNarutoState();
 800c2d2:	4628      	mov	r0, r5
 800c2d4:	f7fe ffff 	bl	800b2d6 <_ZN14GameScreenView16resetNarutoStateEv>
                resetBleachState();
 800c2d8:	4628      	mov	r0, r5
 800c2da:	f7ff f82f 	bl	800b33c <_ZN14GameScreenView16resetBleachStateEv>
                updateAIHPDisplay();
 800c2de:	4628      	mov	r0, r5
 800c2e0:	f7ff fb94 	bl	800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>
 800c2e4:	2419      	movs	r4, #25
                    toggleLED();
 800c2e6:	f7fe fa77 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
                for (int i = 0; i < 25; i++) {
 800c2ea:	3c01      	subs	r4, #1
 800c2ec:	d1fb      	bne.n	800c2e6 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xaa>
                hideActionButtons();
 800c2ee:	4628      	mov	r0, r5
}
 800c2f0:	b00b      	add	sp, #44	@ 0x2c
 800c2f2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                hideActionButtons();
 800c2f6:	f7fe bec5 	b.w	800b084 <_ZN14GameScreenView17hideActionButtonsEv>
            if (bleach_atk.isVisible() && bleach_atk.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c2fa:	f205 513c 	addw	r1, r5, #1340	@ 0x53c
 800c2fe:	a808      	add	r0, sp, #32
 800c300:	f00f ff36 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c304:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c308:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c30c:	a808      	add	r0, sp, #32
 800c30e:	f7fe fa6b 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c312:	4681      	mov	r9, r0
 800c314:	2800      	cmp	r0, #0
 800c316:	d0c3      	beq.n	800c2a0 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x64>
 800c318:	e7c3      	b.n	800c2a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x66>
            if (bleach_def.isVisible() && bleach_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c31a:	f505 61a2 	add.w	r1, r5, #1296	@ 0x510
 800c31e:	a808      	add	r0, sp, #32
 800c320:	f00f ff26 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c324:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c328:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c32c:	a808      	add	r0, sp, #32
 800c32e:	f7fe fa5b 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c332:	4680      	mov	r8, r0
 800c334:	2800      	cmp	r0, #0
 800c336:	d0b8      	beq.n	800c2aa <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x6e>
 800c338:	e7b8      	b.n	800c2ac <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x70>
            if (bleach_spe.isVisible() && bleach_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c33a:	f205 41e4 	addw	r1, r5, #1252	@ 0x4e4
 800c33e:	a808      	add	r0, sp, #32
 800c340:	f00f ff16 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c344:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c348:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c34c:	a808      	add	r0, sp, #32
 800c34e:	f7fe fa4b 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c352:	2800      	cmp	r0, #0
 800c354:	d0ae      	beq.n	800c2b4 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x78>
 800c356:	e7af      	b.n	800c2b8 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x7c>
            if (clickedOnBleach || clickedOnBleachSprite) {
 800c358:	f1b8 0f00 	cmp.w	r8, #0
 800c35c:	d1ac      	bne.n	800c2b8 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x7c>
 800c35e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
        if (evt.getX() < 50 && evt.getY() < 50) {
 800c362:	2b31      	cmp	r3, #49	@ 0x31
 800c364:	dc0d      	bgt.n	800c382 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x146>
        return clickY;
 800c366:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c36a:	2b31      	cmp	r3, #49	@ 0x31
 800c36c:	f300 8087 	bgt.w	800c47e <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x242>
            aiHP = 0;
 800c370:	2300      	movs	r3, #0
            updateAIHPDisplay();
 800c372:	4628      	mov	r0, r5
            aiHP = 0;
 800c374:	f8c6 3260 	str.w	r3, [r6, #608]	@ 0x260
}
 800c378:	b00b      	add	sp, #44	@ 0x2c
 800c37a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            updateAIHPDisplay();
 800c37e:	f7ff bb45 	b.w	800ba0c <_ZN14GameScreenView17updateAIHPDisplayEv>
        if (evt.getX() > 190 && evt.getY() < 50) {
 800c382:	2bbe      	cmp	r3, #190	@ 0xbe
 800c384:	dc6e      	bgt.n	800c464 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x228>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800c386:	3b65      	subs	r3, #101	@ 0x65
 800c388:	b29b      	uxth	r3, r3
 800c38a:	2b26      	cmp	r3, #38	@ 0x26
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800c38c:	f896 2265 	ldrb.w	r2, [r6, #613]	@ 0x265
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800c390:	f240 808d 	bls.w	800c4ae <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x272>
        if (gameEnded) {
 800c394:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c398:	2b00      	cmp	r3, #0
 800c39a:	d04f      	beq.n	800c43c <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x200>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c39c:	f505 61ce 	add.w	r1, r5, #1648	@ 0x670
 800c3a0:	4668      	mov	r0, sp
 800c3a2:	f00f fee5 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c3a6:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c3aa:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c3ae:	4668      	mov	r0, sp
 800c3b0:	f7fe fa1a 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c3b4:	2800      	cmp	r0, #0
 800c3b6:	f040 80ee 	bne.w	800c596 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c3ba:	f205 619c 	addw	r1, r5, #1692	@ 0x69c
 800c3be:	a802      	add	r0, sp, #8
 800c3c0:	f00f fed6 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c3c4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c3c8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c3cc:	a802      	add	r0, sp, #8
 800c3ce:	f7fe fa0b 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c3d2:	2800      	cmp	r0, #0
 800c3d4:	f040 80df 	bne.w	800c596 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c3d8:	f505 61d9 	add.w	r1, r5, #1736	@ 0x6c8
 800c3dc:	a804      	add	r0, sp, #16
 800c3de:	f00f fec7 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c3e2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c3e6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c3ea:	a804      	add	r0, sp, #16
 800c3ec:	f7fe f9fc 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c3f0:	2800      	cmp	r0, #0
 800c3f2:	f040 80d0 	bne.w	800c596 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c3f6:	f505 61e4 	add.w	r1, r5, #1824	@ 0x720
 800c3fa:	a806      	add	r0, sp, #24
 800c3fc:	f00f feb8 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c400:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c404:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c408:	a806      	add	r0, sp, #24
 800c40a:	f7fe f9ed 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c40e:	2800      	cmp	r0, #0
 800c410:	f040 80c1 	bne.w	800c596 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c414:	f205 61f4 	addw	r1, r5, #1780	@ 0x6f4
 800c418:	a808      	add	r0, sp, #32
 800c41a:	f00f fea9 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c41e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c422:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c426:	a808      	add	r0, sp, #32
 800c428:	f7fe f9de 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c42c:	2800      	cmp	r0, #0
 800c42e:	f040 80b2 	bne.w	800c596 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
        if (!gameEnded) {
 800c432:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c436:	2b00      	cmp	r3, #0
 800c438:	f040 80a6 	bne.w	800c588 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
            if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c43c:	f505 61e4 	add.w	r1, r5, #1824	@ 0x720
 800c440:	a808      	add	r0, sp, #32
 800c442:	f00f fe95 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c446:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c44a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c44e:	a808      	add	r0, sp, #32
 800c450:	f7fe f9ca 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c454:	2800      	cmp	r0, #0
 800c456:	d046      	beq.n	800c4e6 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2aa>
                toggleActionMenu();
 800c458:	4628      	mov	r0, r5
}
 800c45a:	b00b      	add	sp, #44	@ 0x2c
 800c45c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                toggleActionMenu();
 800c460:	f7fe be5e 	b.w	800b120 <_ZN14GameScreenView16toggleActionMenuEv>
 800c464:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
        if (evt.getX() > 190 && evt.getY() < 50) {
 800c468:	2b31      	cmp	r3, #49	@ 0x31
 800c46a:	dc11      	bgt.n	800c490 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x254>
            playerHP = 0;
 800c46c:	2300      	movs	r3, #0
            updatePlayerHPDisplay();
 800c46e:	4628      	mov	r0, r5
            playerHP = 0;
 800c470:	f8c6 325c 	str.w	r3, [r6, #604]	@ 0x25c
}
 800c474:	b00b      	add	sp, #44	@ 0x2c
 800c476:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            updatePlayerHPDisplay();
 800c47a:	f7ff b923 	b.w	800b6c4 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
        if (evt.getX() < 50 && evt.getY() > 270) {
 800c47e:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
 800c482:	dd87      	ble.n	800c394 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x158>
            debugGameState();
 800c484:	4628      	mov	r0, r5
}
 800c486:	b00b      	add	sp, #44	@ 0x2c
 800c488:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            debugGameState();
 800c48c:	f7fe ba0c 	b.w	800a8a8 <_ZN14GameScreenView14debugGameStateEv>
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800c490:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
 800c494:	f77f af7e 	ble.w	800c394 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x158>
 800c498:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c49c:	2b00      	cmp	r3, #0
 800c49e:	f47f af7d 	bne.w	800c39c <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x160>
            giveRandomPowerUps();
 800c4a2:	4628      	mov	r0, r5
}
 800c4a4:	b00b      	add	sp, #44	@ 0x2c
 800c4a6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            giveRandomPowerUps();
 800c4aa:	f7ff bbce 	b.w	800bc4a <_ZN14GameScreenView18giveRandomPowerUpsEv>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800c4ae:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c4b2:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
 800c4b6:	f77f af6d 	ble.w	800c394 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x158>
 800c4ba:	2a00      	cmp	r2, #0
 800c4bc:	f47f af6e 	bne.w	800c39c <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x160>
            for (int i = 0; i < turnCounter + 1; i++) {
 800c4c0:	4614      	mov	r4, r2
 800c4c2:	f8d6 3288 	ldr.w	r3, [r6, #648]	@ 0x288
 800c4c6:	42a3      	cmp	r3, r4
 800c4c8:	da09      	bge.n	800c4de <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2a2>
            playerActionDone = true;
 800c4ca:	f240 1301 	movw	r3, #257	@ 0x101
 800c4ce:	4628      	mov	r0, r5
 800c4d0:	f8a6 3296 	strh.w	r3, [r6, #662]	@ 0x296
}
 800c4d4:	b00b      	add	sp, #44	@ 0x2c
 800c4d6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4da:	f7ff bc04 	b.w	800bce6 <_ZN14GameScreenView17checkTurnCompleteEv.part.0>
                toggleLED();
 800c4de:	f7fe f97b 	bl	800a7d8 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
            for (int i = 0; i < turnCounter + 1; i++) {
 800c4e2:	3401      	adds	r4, #1
 800c4e4:	e7ed      	b.n	800c4c2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x286>
            if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c4e6:	f205 61f4 	addw	r1, r5, #1780	@ 0x6f4
 800c4ea:	a808      	add	r0, sp, #32
 800c4ec:	f00f fe40 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c4f0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c4f4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c4f8:	a808      	add	r0, sp, #32
 800c4fa:	f7fe f975 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c4fe:	2800      	cmp	r0, #0
 800c500:	d1aa      	bne.n	800c458 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x21c>
            if (menuOpen) {
 800c502:	f896 3264 	ldrb.w	r3, [r6, #612]	@ 0x264
 800c506:	2b00      	cmp	r3, #0
 800c508:	d03e      	beq.n	800c588 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
                if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c50a:	f505 61ce 	add.w	r1, r5, #1648	@ 0x670
 800c50e:	a808      	add	r0, sp, #32
 800c510:	f00f fe2e 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c514:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c518:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c51c:	a808      	add	r0, sp, #32
 800c51e:	f7fe f963 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c522:	b158      	cbz	r0, 800c53c <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x300>
                    playerAttack();
 800c524:	4628      	mov	r0, r5
 800c526:	f7ff fc75 	bl	800be14 <_ZN14GameScreenView12playerAttackEv>
                    if (!gameEnded) performAIAction();
 800c52a:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c52e:	bb93      	cbnz	r3, 800c596 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
 800c530:	4628      	mov	r0, r5
}
 800c532:	b00b      	add	sp, #44	@ 0x2c
 800c534:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                    if (!gameEnded) performAIAction();
 800c538:	f7ff bd94 	b.w	800c064 <_ZN14GameScreenView15performAIActionEv>
                else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c53c:	f205 619c 	addw	r1, r5, #1692	@ 0x69c
 800c540:	a808      	add	r0, sp, #32
 800c542:	f00f fe15 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c546:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c54a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c54e:	a808      	add	r0, sp, #32
 800c550:	f7fe f94a 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c554:	b118      	cbz	r0, 800c55e <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x322>
                    playerDefend();
 800c556:	4628      	mov	r0, r5
 800c558:	f7ff f942 	bl	800b7e0 <_ZN14GameScreenView12playerDefendEv>
                    if (!gameEnded) performAIAction();
 800c55c:	e7e5      	b.n	800c52a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2ee>
                else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c55e:	f505 61d9 	add.w	r1, r5, #1736	@ 0x6c8
 800c562:	a808      	add	r0, sp, #32
 800c564:	f00f fe04 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c568:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c56c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c570:	a808      	add	r0, sp, #32
 800c572:	f7fe f939 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800c576:	b138      	cbz	r0, 800c588 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
                    if (playerChakraLevel >= 100) {
 800c578:	f8d6 3268 	ldr.w	r3, [r6, #616]	@ 0x268
 800c57c:	2b63      	cmp	r3, #99	@ 0x63
 800c57e:	dd0a      	ble.n	800c596 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                        playerSpecial();
 800c580:	4628      	mov	r0, r5
 800c582:	f7ff fcbd 	bl	800bf00 <_ZN14GameScreenView13playerSpecialEv>
                        if (!gameEnded) performAIAction();
 800c586:	e7d0      	b.n	800c52a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2ee>
    GameScreenViewBase::handleClickEvent(evt);
 800c588:	4621      	mov	r1, r4
 800c58a:	4628      	mov	r0, r5
}
 800c58c:	b00b      	add	sp, #44	@ 0x2c
 800c58e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
    GameScreenViewBase::handleClickEvent(evt);
 800c592:	f010 baaf 	b.w	801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
}
 800c596:	b00b      	add	sp, #44	@ 0x2c
 800c598:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c59c <_ZN14GameScreenView15handleDragEventERKN8touchgfx9DragEventE>:
    GameScreenViewBase::handleDragEvent(evt);
 800c59c:	f010 bafe 	b.w	801cb9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>

0800c5a0 <_ZN23MainMenuScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainMenuScreenPresenter() {}
 800c5a0:	4770      	bx	lr

0800c5a2 <_ZThn4_N23MainMenuScreenPresenterD1Ev>:
 800c5a2:	3804      	subs	r0, #4
 800c5a4:	4770      	bx	lr

0800c5a6 <_ZN23MainMenuScreenPresenter10deactivateEv>:
}

void MainMenuScreenPresenter::activate()
{

}
 800c5a6:	4770      	bx	lr

0800c5a8 <_ZN23MainMenuScreenPresenterD0Ev>:
 800c5a8:	b510      	push	{r4, lr}
 800c5aa:	2110      	movs	r1, #16
 800c5ac:	4604      	mov	r4, r0
 800c5ae:	f020 fe22 	bl	802d1f6 <_ZdlPvj>
 800c5b2:	4620      	mov	r0, r4
 800c5b4:	bd10      	pop	{r4, pc}

0800c5b6 <_ZThn4_N23MainMenuScreenPresenterD0Ev>:
 800c5b6:	f1a0 0004 	sub.w	r0, r0, #4
 800c5ba:	e7f5      	b.n	800c5a8 <_ZN23MainMenuScreenPresenterD0Ev>

0800c5bc <_ZN23MainMenuScreenPresenterC1ER18MainMenuScreenView>:
 800c5bc:	2200      	movs	r2, #0
 800c5be:	6082      	str	r2, [r0, #8]
    : view(v)
 800c5c0:	4a02      	ldr	r2, [pc, #8]	@ (800c5cc <_ZN23MainMenuScreenPresenterC1ER18MainMenuScreenView+0x10>)
 800c5c2:	6002      	str	r2, [r0, #0]
 800c5c4:	3218      	adds	r2, #24
 800c5c6:	6042      	str	r2, [r0, #4]
 800c5c8:	60c1      	str	r1, [r0, #12]
}
 800c5ca:	4770      	bx	lr
 800c5cc:	08031d4c 	.word	0x08031d4c

0800c5d0 <_ZN18MainMenuScreenView14tearDownScreenEv>:
}

void MainMenuScreenView::tearDownScreen()
{
    MainMenuScreenViewBase::tearDownScreen();
}
 800c5d0:	4770      	bx	lr
	...

0800c5d4 <_ZN18MainMenuScreenViewD1Ev>:

class MainMenuScreenView : public MainMenuScreenViewBase
{
public:
    MainMenuScreenView();
    virtual ~MainMenuScreenView() {}
 800c5d4:	b510      	push	{r4, lr}
 800c5d6:	4b03      	ldr	r3, [pc, #12]	@ (800c5e4 <_ZN18MainMenuScreenViewD1Ev+0x10>)
 800c5d8:	6003      	str	r3, [r0, #0]
 800c5da:	4604      	mov	r4, r0
 800c5dc:	f7fa f9c9 	bl	8006972 <_ZN22MainMenuScreenViewBaseD1Ev>
 800c5e0:	4620      	mov	r0, r4
 800c5e2:	bd10      	pop	{r4, pc}
 800c5e4:	08031d74 	.word	0x08031d74

0800c5e8 <_ZN18MainMenuScreenViewD0Ev>:
 800c5e8:	b510      	push	{r4, lr}
 800c5ea:	4604      	mov	r4, r0
 800c5ec:	f7ff fff2 	bl	800c5d4 <_ZN18MainMenuScreenViewD1Ev>
 800c5f0:	4620      	mov	r0, r4
 800c5f2:	f44f 7112 	mov.w	r1, #584	@ 0x248
 800c5f6:	f020 fdfe 	bl	802d1f6 <_ZdlPvj>
 800c5fa:	4620      	mov	r0, r4
 800c5fc:	bd10      	pop	{r4, pc}
	...

0800c600 <_ZN18MainMenuScreenViewC1Ev>:
MainMenuScreenView::MainMenuScreenView()
 800c600:	b510      	push	{r4, lr}
 800c602:	4604      	mov	r4, r0
 800c604:	f7fa f9f6 	bl	80069f4 <_ZN22MainMenuScreenViewBaseC1Ev>
 800c608:	4b01      	ldr	r3, [pc, #4]	@ (800c610 <_ZN18MainMenuScreenViewC1Ev+0x10>)
 800c60a:	6023      	str	r3, [r4, #0]
}
 800c60c:	4620      	mov	r0, r4
 800c60e:	bd10      	pop	{r4, pc}
 800c610:	08031d74 	.word	0x08031d74

0800c614 <_ZN18MainMenuScreenView11setupScreenEv>:
    MainMenuScreenViewBase::setupScreen();
 800c614:	f7fa b9ae 	b.w	8006974 <_ZN22MainMenuScreenViewBase11setupScreenEv>

0800c618 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800c618:	2200      	movs	r2, #0
 800c61a:	6002      	str	r2, [r0, #0]
{

}
 800c61c:	4770      	bx	lr

0800c61e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800c61e:	4770      	bx	lr

0800c620 <_ZN26NarutoGameScreen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~NarutoGameScreen2Presenter() {}
 800c620:	4770      	bx	lr

0800c622 <_ZThn4_N26NarutoGameScreen2PresenterD1Ev>:
 800c622:	3804      	subs	r0, #4
 800c624:	4770      	bx	lr

0800c626 <_ZN26NarutoGameScreen2Presenter10deactivateEv>:
}

void NarutoGameScreen2Presenter::activate()
{

}
 800c626:	4770      	bx	lr

0800c628 <_ZN26NarutoGameScreen2PresenterD0Ev>:
 800c628:	b510      	push	{r4, lr}
 800c62a:	2110      	movs	r1, #16
 800c62c:	4604      	mov	r4, r0
 800c62e:	f020 fde2 	bl	802d1f6 <_ZdlPvj>
 800c632:	4620      	mov	r0, r4
 800c634:	bd10      	pop	{r4, pc}

0800c636 <_ZThn4_N26NarutoGameScreen2PresenterD0Ev>:
 800c636:	f1a0 0004 	sub.w	r0, r0, #4
 800c63a:	e7f5      	b.n	800c628 <_ZN26NarutoGameScreen2PresenterD0Ev>

0800c63c <_ZN26NarutoGameScreen2PresenterC1ER21NarutoGameScreen2View>:
 800c63c:	2200      	movs	r2, #0
 800c63e:	6082      	str	r2, [r0, #8]
    : view(v)
 800c640:	4a02      	ldr	r2, [pc, #8]	@ (800c64c <_ZN26NarutoGameScreen2PresenterC1ER21NarutoGameScreen2View+0x10>)
 800c642:	6002      	str	r2, [r0, #0]
 800c644:	3218      	adds	r2, #24
 800c646:	6042      	str	r2, [r0, #4]
 800c648:	60c1      	str	r1, [r0, #12]
}
 800c64a:	4770      	bx	lr
 800c64c:	08031da8 	.word	0x08031da8

0800c650 <_ZN21NarutoGameScreen2View12checkGameEndEv>:
}

void NarutoGameScreen2View::tearDownScreen()
{
	NarutoGameScreen2ViewBase::tearDownScreen();
}
 800c650:	4770      	bx	lr
	...

0800c654 <_ZN21NarutoGameScreen2ViewD1Ev>:

class NarutoGameScreen2View : public NarutoGameScreen2ViewBase
{
public:
    NarutoGameScreen2View();
    virtual ~NarutoGameScreen2View() {}
 800c654:	b510      	push	{r4, lr}
 800c656:	4b03      	ldr	r3, [pc, #12]	@ (800c664 <_ZN21NarutoGameScreen2ViewD1Ev+0x10>)
 800c658:	6003      	str	r3, [r0, #0]
 800c65a:	4604      	mov	r4, r0
 800c65c:	f7fa fb0c 	bl	8006c78 <_ZN25NarutoGameScreen2ViewBaseD1Ev>
 800c660:	4620      	mov	r0, r4
 800c662:	bd10      	pop	{r4, pc}
 800c664:	08031dd0 	.word	0x08031dd0

0800c668 <_ZN21NarutoGameScreen2ViewD0Ev>:
 800c668:	b510      	push	{r4, lr}
 800c66a:	4604      	mov	r4, r0
 800c66c:	f7ff fff2 	bl	800c654 <_ZN21NarutoGameScreen2ViewD1Ev>
 800c670:	4620      	mov	r0, r4
 800c672:	f44f 612d 	mov.w	r1, #2768	@ 0xad0
 800c676:	f020 fdbe 	bl	802d1f6 <_ZdlPvj>
 800c67a:	4620      	mov	r0, r4
 800c67c:	bd10      	pop	{r4, pc}
	...

0800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>:
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
}

void NarutoGameScreen2View::toggleLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800c680:	4802      	ldr	r0, [pc, #8]	@ (800c68c <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0+0xc>)
 800c682:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800c686:	f004 b8bc 	b.w	8010802 <HAL_GPIO_TogglePin>
 800c68a:	bf00      	nop
 800c68c:	40021800 	.word	0x40021800

0800c690 <_ZN21NarutoGameScreen2ViewC1Ev>:
NarutoGameScreen2View::NarutoGameScreen2View()
 800c690:	b510      	push	{r4, lr}
 800c692:	4604      	mov	r4, r0
 800c694:	f7fa fafa 	bl	8006c8c <_ZN25NarutoGameScreen2ViewBaseC1Ev>
    randomSeed = 12345;
 800c698:	f243 0239 	movw	r2, #12345	@ 0x3039
NarutoGameScreen2View::NarutoGameScreen2View()
 800c69c:	4b12      	ldr	r3, [pc, #72]	@ (800c6e8 <_ZN21NarutoGameScreen2ViewC1Ev+0x58>)
    randomSeed = 12345;
 800c69e:	f8c4 2ac4 	str.w	r2, [r4, #2756]	@ 0xac4
    bossPhase = 1;
 800c6a2:	2201      	movs	r2, #1
NarutoGameScreen2View::NarutoGameScreen2View()
 800c6a4:	6023      	str	r3, [r4, #0]
    bossPhase = 1;
 800c6a6:	f8c4 2a6c 	str.w	r2, [r4, #2668]	@ 0xa6c
    resetTimer = 0;
 800c6aa:	2300      	movs	r3, #0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800c6ac:	2282      	movs	r2, #130	@ 0x82
    resetTimer = 0;
 800c6ae:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800c6b2:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
    fireAnimationTimer = 0;
 800c6b6:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800c6ba:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800c6be:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800c6c2:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800c6c6:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800c6ca:	f8c4 2a70 	str.w	r2, [r4, #2672]	@ 0xa70
    bossCurrentHP = 130;
 800c6ce:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    rageMode = false;
 800c6d2:	f884 3a78 	strb.w	r3, [r4, #2680]	@ 0xa78
    rageModeTimer = 0;
 800c6d6:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
    easterEggActivated = false;
 800c6da:	f884 3ac8 	strb.w	r3, [r4, #2760]	@ 0xac8
     easterEggTimer = 0;
 800c6de:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
}
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	bd10      	pop	{r4, pc}
 800c6e6:	bf00      	nop
 800c6e8:	08031dd0 	.word	0x08031dd0

0800c6ec <_ZN21NarutoGameScreen2View8initGPIOEv>:
{
 800c6ec:	b570      	push	{r4, r5, r6, lr}
 800c6ee:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800c6f0:	2400      	movs	r4, #0
 800c6f2:	4b0f      	ldr	r3, [pc, #60]	@ (800c730 <_ZN21NarutoGameScreen2View8initGPIOEv+0x44>)
 800c6f4:	9400      	str	r4, [sp, #0]
 800c6f6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800c6f8:	4d0e      	ldr	r5, [pc, #56]	@ (800c734 <_ZN21NarutoGameScreen2View8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800c6fa:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800c6fe:	631a      	str	r2, [r3, #48]	@ 0x30
 800c700:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800c702:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800c704:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800c708:	9300      	str	r3, [sp, #0]
 800c70a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800c70c:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800c710:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800c712:	a901      	add	r1, sp, #4
 800c714:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800c716:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800c71a:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800c71e:	f003 ff81 	bl	8010624 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800c722:	4622      	mov	r2, r4
 800c724:	4631      	mov	r1, r6
 800c726:	4628      	mov	r0, r5
 800c728:	f004 f866 	bl	80107f8 <HAL_GPIO_WritePin>
}
 800c72c:	b006      	add	sp, #24
 800c72e:	bd70      	pop	{r4, r5, r6, pc}
 800c730:	40023800 	.word	0x40023800
 800c734:	40021800 	.word	0x40021800

0800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>:
}

// ==================== UTILITY FUNCTIONS ====================

int NarutoGameScreen2View::generateRandomNumber(int min, int max)
{
 800c738:	b530      	push	{r4, r5, lr}
    // IMPROVED LINEAR CONGRUENTIAL GENERATOR
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800c73a:	4b0e      	ldr	r3, [pc, #56]	@ (800c774 <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x3c>)
 800c73c:	f8d0 4ac4 	ldr.w	r4, [r0, #2756]	@ 0xac4
 800c740:	4d0d      	ldr	r5, [pc, #52]	@ (800c778 <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x40>)
 800c742:	fb05 3304 	mla	r3, r5, r4, r3
 800c746:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800c74a:	f8c0 3ac4 	str.w	r3, [r0, #2756]	@ 0xac4

    // Additional mixing to improve distribution
    uint32_t mixed = randomSeed;
    mixed ^= mixed >> 16;
    mixed *= 0x85ebca6b;
 800c74e:	480b      	ldr	r0, [pc, #44]	@ (800c77c <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x44>)
    mixed ^= mixed >> 16;
 800c750:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    mixed *= 0x85ebca6b;
 800c754:	4343      	muls	r3, r0
    mixed ^= mixed >> 13;
    mixed *= 0xc2b2ae35;
 800c756:	480a      	ldr	r0, [pc, #40]	@ (800c780 <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x48>)
    mixed ^= mixed >> 13;
 800c758:	ea83 3353 	eor.w	r3, r3, r3, lsr #13
    mixed *= 0xc2b2ae35;
 800c75c:	4343      	muls	r3, r0
    mixed ^= mixed >> 16;

    return min + (mixed % (max - min + 1));
 800c75e:	1a52      	subs	r2, r2, r1
    mixed ^= mixed >> 16;
 800c760:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    return min + (mixed % (max - min + 1));
 800c764:	3201      	adds	r2, #1
 800c766:	fbb3 f0f2 	udiv	r0, r3, r2
 800c76a:	fb02 3010 	mls	r0, r2, r0, r3
}
 800c76e:	4408      	add	r0, r1
 800c770:	bd30      	pop	{r4, r5, pc}
 800c772:	bf00      	nop
 800c774:	3c6ef35f 	.word	0x3c6ef35f
 800c778:	0019660d 	.word	0x0019660d
 800c77c:	85ebca6b 	.word	0x85ebca6b
 800c780:	c2b2ae35 	.word	0xc2b2ae35

0800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>:
{
 800c784:	b510      	push	{r4, lr}
 800c786:	2300      	movs	r3, #0
 800c788:	4604      	mov	r4, r0
 800c78a:	f880 3509 	strb.w	r3, [r0, #1289]	@ 0x509
 800c78e:	f880 3535 	strb.w	r3, [r0, #1333]	@ 0x535
 800c792:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
    fire1.invalidate();
 800c796:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800c79a:	f00f fc4d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    fire2.invalidate();
 800c79e:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800c7a2:	f00f fc49 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe_fire.invalidate();
 800c7a6:	f204 5094 	addw	r0, r4, #1428	@ 0x594
}
 800c7aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach_spe_fire.invalidate();
 800c7ae:	f00f bc43 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800c7b2 <_ZN21NarutoGameScreen2View24startAttackFireAnimationEv>:
{
 800c7b2:	b510      	push	{r4, lr}
 800c7b4:	4604      	mov	r4, r0
    hideAllFireEffects();
 800c7b6:	f7ff ffe5 	bl	800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    fireAnimationTimer = 0;
 800c7ba:	2300      	movs	r3, #0
 800c7bc:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800c7c0:	2301      	movs	r3, #1
 800c7c2:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 1; // Bắt đầu với fire1
 800c7c6:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
 800c7ca:	f884 3509 	strb.w	r3, [r4, #1289]	@ 0x509
    fire1.invalidate();
 800c7ce:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
 800c7d2:	f00f fc31 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800c7d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    toggleLED();
 800c7da:	f7ff bf51 	b.w	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

0800c7de <_ZN21NarutoGameScreen2View25startSpecialFireAnimationEv>:
{
 800c7de:	b510      	push	{r4, lr}
 800c7e0:	4604      	mov	r4, r0
    hideAllFireEffects();
 800c7e2:	f7ff ffcf 	bl	800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    fireAnimationActive = true;
 800c7e6:	2301      	movs	r3, #1
    fireAnimationTimer = 0;
 800c7e8:	2200      	movs	r2, #0
    fireAnimationState = 3; // Special fire blink
 800c7ea:	2103      	movs	r1, #3
    fireAnimationTimer = 0;
 800c7ec:	f8c4 2ab0 	str.w	r2, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800c7f0:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 3; // Special fire blink
 800c7f4:	f8c4 1ab8 	str.w	r1, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800c7f8:	f8c4 2abc 	str.w	r2, [r4, #2748]	@ 0xabc
    specialFireToggle = true; // Bắt đầu với visible
 800c7fc:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
 800c800:	f884 35b9 	strb.w	r3, [r4, #1465]	@ 0x5b9
    bleach_spe_fire.invalidate();
 800c804:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800c808:	f00f fc16 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800c80c:	f7ff ff38 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800c810:	f7ff ff36 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800c814:	f7ff ff34 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800c818:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        toggleLED();
 800c81c:	f7ff bf30 	b.w	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

0800c820 <_ZN21NarutoGameScreen2View19updateFireAnimationEv>:
{
 800c820:	b538      	push	{r3, r4, r5, lr}
    if (!fireAnimationActive) return;
 800c822:	f890 3ab4 	ldrb.w	r3, [r0, #2740]	@ 0xab4
{
 800c826:	4604      	mov	r4, r0
    if (!fireAnimationActive) return;
 800c828:	2b00      	cmp	r3, #0
 800c82a:	f000 8085 	beq.w	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800c82e:	f8d0 3ab0 	ldr.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800c832:	f8d0 2ab8 	ldr.w	r2, [r0, #2744]	@ 0xab8
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800c836:	3310      	adds	r3, #16
    switch (fireAnimationState) {
 800c838:	2a02      	cmp	r2, #2
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800c83a:	f8c0 3ab0 	str.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800c83e:	d01c      	beq.n	800c87a <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x5a>
 800c840:	2a03      	cmp	r2, #3
 800c842:	d032      	beq.n	800c8aa <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x8a>
 800c844:	2a01      	cmp	r2, #1
 800c846:	d177      	bne.n	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800c848:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800c84c:	db74      	blt.n	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800c84e:	2500      	movs	r5, #0
 800c850:	f880 2535 	strb.w	r2, [r0, #1333]	@ 0x535
 800c854:	f880 5509 	strb.w	r5, [r0, #1289]	@ 0x509
                fire1.invalidate();
 800c858:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800c85c:	f00f fbec 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                fire2.invalidate();
 800c860:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800c864:	f00f fbe8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationState = 2;
 800c868:	2302      	movs	r3, #2
 800c86a:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800c86e:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
}
 800c872:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                        toggleLED();
 800c876:	f7ff bf03 	b.w	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800c87a:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800c87e:	db5b      	blt.n	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
                hideAllFireEffects();
 800c880:	f7ff ff80 	bl	800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
                fireAnimationActive = false;
 800c884:	2300      	movs	r3, #0
 800c886:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800c88a:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800c88e:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                if (!gameEnded && bossCurrentHP > 0) {
 800c892:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800c896:	2b00      	cmp	r3, #0
 800c898:	d14e      	bne.n	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800c89a:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800c89e:	2b00      	cmp	r3, #0
 800c8a0:	dd4a      	ble.n	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800c8a2:	2301      	movs	r3, #1
 800c8a4:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    toggleLED(); // Debug: animation complete
 800c8a8:	e7e3      	b.n	800c872 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x52>
            if (fireAnimationTimer >= FIRE_LOOP_INTERVAL) {
 800c8aa:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 800c8ae:	db16      	blt.n	800c8de <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0xbe>
                specialFireToggle = !specialFireToggle;
 800c8b0:	f890 3ac0 	ldrb.w	r3, [r0, #2752]	@ 0xac0
 800c8b4:	f083 0301 	eor.w	r3, r3, #1
 800c8b8:	f880 3ac0 	strb.w	r3, [r0, #2752]	@ 0xac0
 800c8bc:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
                bleach_spe_fire.invalidate();
 800c8c0:	f200 5094 	addw	r0, r0, #1428	@ 0x594
 800c8c4:	f00f fbb8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationTimer = 0;
 800c8c8:	2300      	movs	r3, #0
 800c8ca:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                fireLoopCounter += FIRE_LOOP_INTERVAL;
 800c8ce:	f8d4 3abc 	ldr.w	r3, [r4, #2748]	@ 0xabc
 800c8d2:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800c8d6:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
                toggleLED();
 800c8da:	f7ff fed1 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            if (fireLoopCounter >= 3000) { // 3000ms = 3 giây
 800c8de:	f8d4 2abc 	ldr.w	r2, [r4, #2748]	@ 0xabc
 800c8e2:	f640 33b7 	movw	r3, #2999	@ 0xbb7
 800c8e6:	429a      	cmp	r2, r3
 800c8e8:	dd26      	ble.n	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800c8ea:	2500      	movs	r5, #0
                hideAllFireEffects();
 800c8ec:	4620      	mov	r0, r4
 800c8ee:	f7ff ff49 	bl	800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
 800c8f2:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
                bleach_spe.invalidate();
 800c8f6:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800c8fa:	f00f fb9d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                if (!gameEnded && bossCurrentHP > 0) {
 800c8fe:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
                fireAnimationActive = false;
 800c902:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800c906:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800c90a:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
                fireLoopCounter = 0;
 800c90e:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
                if (!gameEnded && bossCurrentHP > 0) {
 800c912:	b98b      	cbnz	r3, 800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800c914:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800c918:	42ab      	cmp	r3, r5
 800c91a:	dd0d      	ble.n	800c938 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800c91c:	2301      	movs	r3, #1
 800c91e:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    aiSpecialUsed = true;
 800c922:	f884 3a8b 	strb.w	r3, [r4, #2699]	@ 0xa8b
                        toggleLED();
 800c926:	f7ff feab 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800c92a:	f7ff fea9 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800c92e:	f7ff fea7 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800c932:	f7ff fea5 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800c936:	e79c      	b.n	800c872 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x52>
}
 800c938:	bd38      	pop	{r3, r4, r5, pc}

0800c93a <_ZN21NarutoGameScreen2View17hideActionButtonsEv>:
{
 800c93a:	b538      	push	{r3, r4, r5, lr}
 800c93c:	2301      	movs	r3, #1
 800c93e:	2500      	movs	r5, #0
 800c940:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800c944:	4604      	mov	r4, r0
 800c946:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800c94a:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800c94e:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800c952:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800c956:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800c95a:	f00f fb6d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800c95e:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800c962:	f00f fb69 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800c966:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800c96a:	f00f fb65 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800c96e:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800c972:	f00f fb61 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800c976:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800c97a:	f00f fb5d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = false;
 800c97e:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800c982:	bd38      	pop	{r3, r4, r5, pc}

0800c984 <_ZN21NarutoGameScreen2View17showActionButtonsEv>:
{
 800c984:	b538      	push	{r3, r4, r5, lr}
 800c986:	2300      	movs	r3, #0
 800c988:	2501      	movs	r5, #1
 800c98a:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800c98e:	4604      	mov	r4, r0
 800c990:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800c994:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800c998:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800c99c:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800c9a0:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800c9a4:	f00f fb48 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800c9a8:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800c9ac:	f00f fb44 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800c9b0:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800c9b4:	f00f fb40 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800c9b8:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800c9bc:	f00f fb3c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800c9c0:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800c9c4:	f00f fb38 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = true;
 800c9c8:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800c9cc:	bd38      	pop	{r3, r4, r5, pc}

0800c9ce <_ZN21NarutoGameScreen2View16toggleActionMenuEv>:
{
 800c9ce:	b508      	push	{r3, lr}
    if (menuOpen) {
 800c9d0:	f890 3a68 	ldrb.w	r3, [r0, #2664]	@ 0xa68
 800c9d4:	b12b      	cbz	r3, 800c9e2 <_ZN21NarutoGameScreen2View16toggleActionMenuEv+0x14>
        hideActionButtons();
 800c9d6:	f7ff ffb0 	bl	800c93a <_ZN21NarutoGameScreen2View17hideActionButtonsEv>
}
 800c9da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    toggleLED();
 800c9de:	f7ff be4f 	b.w	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        showActionButtons();
 800c9e2:	f7ff ffcf 	bl	800c984 <_ZN21NarutoGameScreen2View17showActionButtonsEv>
 800c9e6:	e7f8      	b.n	800c9da <_ZN21NarutoGameScreen2View16toggleActionMenuEv+0xc>

0800c9e8 <_ZN21NarutoGameScreen2View20hideAllBossHPWidgetsEv>:
 800c9e8:	2300      	movs	r3, #0
{
 800c9ea:	b510      	push	{r4, lr}
 800c9ec:	4604      	mov	r4, r0
 800c9ee:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800c9f2:	f880 32cd 	strb.w	r3, [r0, #717]	@ 0x2cd
 800c9f6:	f880 32f9 	strb.w	r3, [r0, #761]	@ 0x2f9
 800c9fa:	f880 3325 	strb.w	r3, [r0, #805]	@ 0x325
 800c9fe:	f880 3351 	strb.w	r3, [r0, #849]	@ 0x351
 800ca02:	f880 337d 	strb.w	r3, [r0, #893]	@ 0x37d
 800ca06:	f880 33a9 	strb.w	r3, [r0, #937]	@ 0x3a9
 800ca0a:	f880 33d5 	strb.w	r3, [r0, #981]	@ 0x3d5
 800ca0e:	f880 3401 	strb.w	r3, [r0, #1025]	@ 0x401
 800ca12:	f880 342d 	strb.w	r3, [r0, #1069]	@ 0x42d
 800ca16:	f880 3459 	strb.w	r3, [r0, #1113]	@ 0x459
 800ca1a:	f880 3485 	strb.w	r3, [r0, #1157]	@ 0x485
 800ca1e:	f880 34b1 	strb.w	r3, [r0, #1201]	@ 0x4b1
 800ca22:	f880 34dd 	strb.w	r3, [r0, #1245]	@ 0x4dd
    BITMAP_HP_130_ID_1.invalidate();
 800ca26:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800ca2a:	f00f fb05 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_120_ID_1.invalidate();
 800ca2e:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800ca32:	f00f fb01 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_110_ID_1.invalidate();
 800ca36:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800ca3a:	f00f fafd 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_100_ID_1.invalidate();
 800ca3e:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800ca42:	f00f faf9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID_1.invalidate();
 800ca46:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800ca4a:	f00f faf5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID_1.invalidate();
 800ca4e:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800ca52:	f00f faf1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID_1.invalidate();
 800ca56:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800ca5a:	f00f faed 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID_1.invalidate();
 800ca5e:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800ca62:	f00f fae9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID_1.invalidate();
 800ca66:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800ca6a:	f00f fae5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID_1.invalidate();
 800ca6e:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800ca72:	f00f fae1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID_1.invalidate();
 800ca76:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800ca7a:	f00f fadd 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID_1.invalidate();
 800ca7e:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800ca82:	f00f fad9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID_1.invalidate();
 800ca86:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800ca8a:	f00f fad5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID_1.invalidate();
 800ca8e:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
}
 800ca92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID_1.invalidate();
 800ca96:	f00f bacf 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ca9a <_ZN21NarutoGameScreen2View18forceBossHPVisibleEv>:
{
 800ca9a:	b508      	push	{r3, lr}
    if (bossCurrentHP >= 125) { // Boss bắt đầu với 130 HP
 800ca9c:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800caa0:	2b7c      	cmp	r3, #124	@ 0x7c
 800caa2:	dd15      	ble.n	800cad0 <_ZN21NarutoGameScreen2View18forceBossHPVisibleEv+0x36>
 800caa4:	2301      	movs	r3, #1
 800caa6:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800caaa:	23ff      	movs	r3, #255	@ 0xff
 800caac:	f880 32a4 	strb.w	r3, [r0, #676]	@ 0x2a4
        BITMAP_HP_130_ID_1.invalidate();
 800cab0:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800cab4:	f00f fac0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800cab8:	f7ff fde2 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        toggleLED();
 800cabc:	f7ff fde0 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        toggleLED();
 800cac0:	f7ff fdde 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        toggleLED();
 800cac4:	f7ff fddc 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800cac8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        toggleLED();
 800cacc:	f7ff bdd8 	b.w	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800cad0:	bd08      	pop	{r3, pc}

0800cad2 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>:
{
 800cad2:	b510      	push	{r4, lr}
 800cad4:	2300      	movs	r3, #0
 800cad6:	4604      	mov	r4, r0
 800cad8:	f880 3955 	strb.w	r3, [r0, #2389]	@ 0x955
 800cadc:	f880 3981 	strb.w	r3, [r0, #2433]	@ 0x981
 800cae0:	f880 39ad 	strb.w	r3, [r0, #2477]	@ 0x9ad
 800cae4:	f880 39d9 	strb.w	r3, [r0, #2521]	@ 0x9d9
    x2dame_1.invalidate();
 800cae8:	f500 6013 	add.w	r0, r0, #2352	@ 0x930
 800caec:	f00f faa4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_1.invalidate();
 800caf0:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 800caf4:	f00f faa0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_1.invalidate();
 800caf8:	f604 1088 	addw	r0, r4, #2440	@ 0x988
 800cafc:	f00f fa9c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_1.invalidate();
 800cb00:	f604 10b4 	addw	r0, r4, #2484	@ 0x9b4
}
 800cb04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_1.invalidate();
 800cb08:	f00f ba96 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cb0c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>:
{
 800cb0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cb0e:	4604      	mov	r4, r0
    hideAllPlayerPowerUps();
 800cb10:	f7ff ffdf 	bl	800cad2 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
    if (!playerPowerUpActive) return;
 800cb14:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800cb18:	2b00      	cmp	r3, #0
 800cb1a:	d053      	beq.n	800cbc4 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0xb8>
    switch (playerPowerUpType) {
 800cb1c:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800cb20:	3b01      	subs	r3, #1
 800cb22:	2b03      	cmp	r3, #3
 800cb24:	d80a      	bhi.n	800cb3c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x30>
 800cb26:	e8df f003 	tbb	[pc, r3]
 800cb2a:	0f02      	.short	0x0f02
 800cb2c:	3c26      	.short	0x3c26
 800cb2e:	2301      	movs	r3, #1
 800cb30:	f884 3955 	strb.w	r3, [r4, #2389]	@ 0x955
            x2dame_1.invalidate();
 800cb34:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
            sheild_1.invalidate();
 800cb38:	f00f fa7e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800cb3c:	1d20      	adds	r0, r4, #4
}
 800cb3e:	b002      	add	sp, #8
 800cb40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb44:	f00f ba78 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800cb48:	23ff      	movs	r3, #255	@ 0xff
 800cb4a:	f884 3984 	strb.w	r3, [r4, #2436]	@ 0x984
 800cb4e:	2601      	movs	r6, #1
            healthplus_1.setPosition(9, 61, 32, 37);
 800cb50:	f604 155c 	addw	r5, r4, #2396	@ 0x95c
 800cb54:	2325      	movs	r3, #37	@ 0x25
 800cb56:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
 800cb5a:	223d      	movs	r2, #61	@ 0x3d
 800cb5c:	9300      	str	r3, [sp, #0]
 800cb5e:	2109      	movs	r1, #9
 800cb60:	2320      	movs	r3, #32
 800cb62:	4628      	mov	r0, r5
 800cb64:	f7f5 ffa0 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
            healthplus_1.invalidate();
 800cb68:	4628      	mov	r0, r5
 800cb6a:	f00f fa65 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800cb6e:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
            sheild_1.invalidate();
 800cb72:	4628      	mov	r0, r5
 800cb74:	e7e0      	b.n	800cb38 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x2c>
 800cb76:	23ff      	movs	r3, #255	@ 0xff
 800cb78:	f884 39b0 	strb.w	r3, [r4, #2480]	@ 0x9b0
 800cb7c:	2601      	movs	r6, #1
            chakragain_1.setPosition(9, 61, 32, 37);
 800cb7e:	f604 1588 	addw	r5, r4, #2440	@ 0x988
 800cb82:	2325      	movs	r3, #37	@ 0x25
 800cb84:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
 800cb88:	223d      	movs	r2, #61	@ 0x3d
 800cb8a:	9300      	str	r3, [sp, #0]
 800cb8c:	2109      	movs	r1, #9
 800cb8e:	2320      	movs	r3, #32
 800cb90:	4628      	mov	r0, r5
 800cb92:	f7f5 ff89 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
            chakragain_1.invalidate();
 800cb96:	4628      	mov	r0, r5
 800cb98:	f00f fa4e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800cb9c:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
            chakragain_1.invalidate();
 800cba0:	e7e7      	b.n	800cb72 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x66>
 800cba2:	2301      	movs	r3, #1
 800cba4:	f884 39d9 	strb.w	r3, [r4, #2521]	@ 0x9d9
 800cba8:	23ff      	movs	r3, #255	@ 0xff
 800cbaa:	f884 39dc 	strb.w	r3, [r4, #2524]	@ 0x9dc
            sheild_1.setPosition(8, 59, 32, 37);
 800cbae:	f604 15b4 	addw	r5, r4, #2484	@ 0x9b4
 800cbb2:	2325      	movs	r3, #37	@ 0x25
 800cbb4:	9300      	str	r3, [sp, #0]
 800cbb6:	223b      	movs	r2, #59	@ 0x3b
 800cbb8:	2320      	movs	r3, #32
 800cbba:	2108      	movs	r1, #8
 800cbbc:	4628      	mov	r0, r5
 800cbbe:	f7f5 ff73 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cbc2:	e7d6      	b.n	800cb72 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x66>
}
 800cbc4:	b002      	add	sp, #8
 800cbc6:	bd70      	pop	{r4, r5, r6, pc}

0800cbc8 <_ZN21NarutoGameScreen2View17hideAllAIPowerUpsEv>:
{
 800cbc8:	b510      	push	{r4, lr}
 800cbca:	2300      	movs	r3, #0
 800cbcc:	4604      	mov	r4, r0
 800cbce:	f880 3929 	strb.w	r3, [r0, #2345]	@ 0x929
 800cbd2:	f880 3a5d 	strb.w	r3, [r0, #2653]	@ 0xa5d
 800cbd6:	f880 3a31 	strb.w	r3, [r0, #2609]	@ 0xa31
 800cbda:	f880 3a05 	strb.w	r3, [r0, #2565]	@ 0xa05
    x2dame_2.invalidate();
 800cbde:	f600 1004 	addw	r0, r0, #2308	@ 0x904
 800cbe2:	f00f fa29 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_2.invalidate();
 800cbe6:	f604 2038 	addw	r0, r4, #2616	@ 0xa38
 800cbea:	f00f fa25 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_2.invalidate();
 800cbee:	f604 200c 	addw	r0, r4, #2572	@ 0xa0c
 800cbf2:	f00f fa21 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_2.invalidate();
 800cbf6:	f504 601e 	add.w	r0, r4, #2528	@ 0x9e0
}
 800cbfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_2.invalidate();
 800cbfe:	f00f ba1b 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cc02 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>:
 800cc02:	2300      	movs	r3, #0
}

// ==================== CHARACTER STATE FUNCTIONS ====================

void NarutoGameScreen2View::resetNarutoState()
{
 800cc04:	b510      	push	{r4, lr}
 800cc06:	f880 3771 	strb.w	r3, [r0, #1905]	@ 0x771
 800cc0a:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800cc0e:	f880 3719 	strb.w	r3, [r0, #1817]	@ 0x719
 800cc12:	f880 36ed 	strb.w	r3, [r0, #1773]	@ 0x6ed
 800cc16:	f880 36c1 	strb.w	r3, [r0, #1729]	@ 0x6c1
    naruto_spe.setVisible(false);
    naruto_lose.setVisible(false);
    naruto_win.setVisible(false);

    // Hiển thị lại naruto bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (playerHP > 0 && !gameEnded) {
 800cc1a:	f8d0 3a64 	ldr.w	r3, [r0, #2660]	@ 0xa64
 800cc1e:	2b00      	cmp	r3, #0
{
 800cc20:	4604      	mov	r4, r0
    if (playerHP > 0 && !gameEnded) {
 800cc22:	dd05      	ble.n	800cc30 <_ZN21NarutoGameScreen2View16resetNarutoStateEv+0x2e>
 800cc24:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800cc28:	b913      	cbnz	r3, 800cc30 <_ZN21NarutoGameScreen2View16resetNarutoStateEv+0x2e>
 800cc2a:	2301      	movs	r3, #1
 800cc2c:	f880 3695 	strb.w	r3, [r0, #1685]	@ 0x695
        naruto.setVisible(true);
    }

    // Invalidate tất cả
    naruto_atk.invalidate();
 800cc30:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800cc34:	f00f fa00 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800cc38:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800cc3c:	f00f f9fc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800cc40:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800cc44:	f00f f9f8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800cc48:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800cc4c:	f00f f9f4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800cc50:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800cc54:	f00f f9f0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800cc58:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
}
 800cc5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800cc60:	f00f b9ea 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cc64 <_ZN21NarutoGameScreen2View16resetBleachStateEv>:
 800cc64:	2300      	movs	r3, #0

void NarutoGameScreen2View::resetBleachState()
{
 800cc66:	b510      	push	{r4, lr}
 800cc68:	f880 363d 	strb.w	r3, [r0, #1597]	@ 0x63d
 800cc6c:	f880 3611 	strb.w	r3, [r0, #1553]	@ 0x611
 800cc70:	f880 35e5 	strb.w	r3, [r0, #1509]	@ 0x5e5
 800cc74:	f880 3561 	strb.w	r3, [r0, #1377]	@ 0x561
 800cc78:	f880 358d 	strb.w	r3, [r0, #1421]	@ 0x58d
    bleach_spe.setVisible(false);
    bleach_lose.setVisible(false);
    bleach_win.setVisible(false);

    // SỬA: THAY aiHP THÀNH bossCurrentHP
    if (bossCurrentHP > 0 && !gameEnded) {
 800cc7c:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800cc80:	2b00      	cmp	r3, #0
{
 800cc82:	4604      	mov	r4, r0
    if (bossCurrentHP > 0 && !gameEnded) {
 800cc84:	dd05      	ble.n	800cc92 <_ZN21NarutoGameScreen2View16resetBleachStateEv+0x2e>
 800cc86:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800cc8a:	b913      	cbnz	r3, 800cc92 <_ZN21NarutoGameScreen2View16resetBleachStateEv+0x2e>
 800cc8c:	2301      	movs	r3, #1
 800cc8e:	f880 3669 	strb.w	r3, [r0, #1641]	@ 0x669
        bleach.setVisible(true);
    }

    // Invalidate tất cả
    bleach_atk.invalidate();
 800cc92:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800cc96:	f00f f9cf 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800cc9a:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800cc9e:	f00f f9cb 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();
 800cca2:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800cca6:	f00f f9c7 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800ccaa:	f204 503c 	addw	r0, r4, #1340	@ 0x53c
 800ccae:	f00f f9c3 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800ccb2:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800ccb6:	f00f f9bf 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800ccba:	f204 6044 	addw	r0, r4, #1604	@ 0x644
}
 800ccbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach.invalidate();
 800ccc2:	f00f b9b9 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ccc6 <_ZN21NarutoGameScreen2View22hideAllPlayerHPWidgetsEv>:
 800ccc6:	2300      	movs	r3, #0
            break;
    }
}

void NarutoGameScreen2View::hideAllPlayerHPWidgets()
{
 800ccc8:	b510      	push	{r4, lr}
 800ccca:	4604      	mov	r4, r0
 800cccc:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800ccd0:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800ccd4:	f880 3249 	strb.w	r3, [r0, #585]	@ 0x249
 800ccd8:	f880 321d 	strb.w	r3, [r0, #541]	@ 0x21d
 800ccdc:	f880 31f1 	strb.w	r3, [r0, #497]	@ 0x1f1
 800cce0:	f880 31c5 	strb.w	r3, [r0, #453]	@ 0x1c5
 800cce4:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800cce8:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800ccec:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800ccf0:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800ccf4:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
    BITMAP_HP_20_ID.setVisible(false);
    BITMAP_HP_10_ID.setVisible(false);
    BITMAP_HP_0_ID.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID.invalidate();
 800ccf8:	3098      	adds	r0, #152	@ 0x98
 800ccfa:	f00f f99d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID.invalidate();
 800ccfe:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800cd02:	f00f f999 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID.invalidate();
 800cd06:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800cd0a:	f00f f995 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID.invalidate();
 800cd0e:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800cd12:	f00f f991 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID.invalidate();
 800cd16:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800cd1a:	f00f f98d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID.invalidate();
 800cd1e:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800cd22:	f00f f989 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID.invalidate();
 800cd26:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800cd2a:	f00f f985 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID.invalidate();
 800cd2e:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800cd32:	f00f f981 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID.invalidate();
 800cd36:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800cd3a:	f00f f97d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID.invalidate();
 800cd3e:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800cd42:	f00f f979 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID.invalidate();
 800cd46:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
}
 800cd4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID.invalidate();
 800cd4e:	f00f b973 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cd52 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>:
// ==================== CHAKRA SYSTEM ====================

void NarutoGameScreen2View::updatePlayerChakraDisplay()
{
    // Đảm bảo chakra level không bị âm
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800cd52:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800cd56:	2b00      	cmp	r3, #0
{
 800cd58:	b513      	push	{r0, r1, r4, lr}
 800cd5a:	4602      	mov	r2, r0
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800cd5c:	da0f      	bge.n	800cd7e <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x2c>
 800cd5e:	2300      	movs	r3, #0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800cd60:	f8c2 3a80 	str.w	r3, [r2, #2688]	@ 0xa80

    // Xử lý đặc biệt khi chakra = 0
    if (playerChakraLevel == 0) {
 800cd64:	f8d2 1a80 	ldr.w	r1, [r2, #2688]	@ 0xa80
 800cd68:	f602 0454 	addw	r4, r2, #2132	@ 0x854
 800cd6c:	b959      	cbnz	r1, 800cd86 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x34>
 800cd6e:	f882 1879 	strb.w	r1, [r2, #2169]	@ 0x879
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của player
    chakra_box1.setPosition(14, 43, currentWidth, 5);
    chakra_box1.invalidate();
 800cd72:	4620      	mov	r0, r4
}
 800cd74:	b002      	add	sp, #8
 800cd76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box1.invalidate();
 800cd7a:	f00f b95d 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800cd7e:	2b64      	cmp	r3, #100	@ 0x64
 800cd80:	ddf0      	ble.n	800cd64 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x12>
 800cd82:	2364      	movs	r3, #100	@ 0x64
 800cd84:	e7ec      	b.n	800cd60 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0xe>
 800cd86:	2001      	movs	r0, #1
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800cd88:	2356      	movs	r3, #86	@ 0x56
 800cd8a:	f882 0879 	strb.w	r0, [r2, #2169]	@ 0x879
 800cd8e:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800cd92:	2a63      	cmp	r2, #99	@ 0x63
 800cd94:	dd0f      	ble.n	800cdb6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800cd96:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800cd9a:	428a      	cmp	r2, r1
 800cd9c:	dc02      	bgt.n	800cda4 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x52>
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800cd9e:	2364      	movs	r3, #100	@ 0x64
 800cda0:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box1.setPosition(14, 43, currentWidth, 5);
 800cda4:	2205      	movs	r2, #5
 800cda6:	9200      	str	r2, [sp, #0]
 800cda8:	b21b      	sxth	r3, r3
 800cdaa:	222b      	movs	r2, #43	@ 0x2b
 800cdac:	210e      	movs	r1, #14
 800cdae:	4620      	mov	r0, r4
 800cdb0:	f7f5 fe7a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cdb4:	e7dd      	b.n	800cd72 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800cdb6:	4603      	mov	r3, r0
 800cdb8:	e7f4      	b.n	800cda4 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x52>

0800cdba <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>:

void NarutoGameScreen2View::updateAIChakraDisplay()
{
    // Đảm bảo AI chakra level không bị âm
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800cdba:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800cdbe:	2b00      	cmp	r3, #0
{
 800cdc0:	b513      	push	{r0, r1, r4, lr}
 800cdc2:	4602      	mov	r2, r0
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800cdc4:	da0f      	bge.n	800cde6 <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x2c>
 800cdc6:	2300      	movs	r3, #0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800cdc8:	f8c2 3a84 	str.w	r3, [r2, #2692]	@ 0xa84

    // Xử lý đặc biệt khi chakra = 0
    if (aiChakraLevel == 0) {
 800cdcc:	f8d2 1a84 	ldr.w	r1, [r2, #2692]	@ 0xa84
 800cdd0:	f502 6408 	add.w	r4, r2, #2176	@ 0x880
 800cdd4:	b959      	cbnz	r1, 800cdee <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x34>
 800cdd6:	f882 18a5 	strb.w	r1, [r2, #2213]	@ 0x8a5
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của AI
    chakra_box2.setPosition(135, 43, currentWidth, 5);
    chakra_box2.invalidate();
 800cdda:	4620      	mov	r0, r4
}
 800cddc:	b002      	add	sp, #8
 800cdde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box2.invalidate();
 800cde2:	f00f b929 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800cde6:	2b64      	cmp	r3, #100	@ 0x64
 800cde8:	ddf0      	ble.n	800cdcc <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x12>
 800cdea:	2364      	movs	r3, #100	@ 0x64
 800cdec:	e7ec      	b.n	800cdc8 <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0xe>
 800cdee:	2001      	movs	r0, #1
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800cdf0:	2356      	movs	r3, #86	@ 0x56
 800cdf2:	f882 08a5 	strb.w	r0, [r2, #2213]	@ 0x8a5
 800cdf6:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800cdfa:	2a63      	cmp	r2, #99	@ 0x63
 800cdfc:	dd0f      	ble.n	800ce1e <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800cdfe:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800ce02:	428a      	cmp	r2, r1
 800ce04:	dc02      	bgt.n	800ce0c <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x52>
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800ce06:	2364      	movs	r3, #100	@ 0x64
 800ce08:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box2.setPosition(135, 43, currentWidth, 5);
 800ce0c:	2205      	movs	r2, #5
 800ce0e:	9200      	str	r2, [sp, #0]
 800ce10:	b21b      	sxth	r3, r3
 800ce12:	222b      	movs	r2, #43	@ 0x2b
 800ce14:	2187      	movs	r1, #135	@ 0x87
 800ce16:	4620      	mov	r0, r4
 800ce18:	f7f5 fe46 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800ce1c:	e7dd      	b.n	800cdda <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800ce1e:	4603      	mov	r3, r0
 800ce20:	e7f4      	b.n	800ce0c <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x52>
	...

0800ce24 <_ZN21NarutoGameScreen2View7endGameEb>:
    // Logic game end giờ được xử lý trong updatePlayerHPDisplay() và updateAIHPDisplay()
    return;
}

void NarutoGameScreen2View::endGame(bool playerWon)
{
 800ce24:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce28:	4604      	mov	r4, r0
    gameEnded = true;
 800ce2a:	2601      	movs	r6, #1
 800ce2c:	2500      	movs	r5, #0
 800ce2e:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69
{
 800ce32:	460f      	mov	r7, r1

    // Hide menu actions immediately
    hideActionButtons();
 800ce34:	f7ff fd81 	bl	800c93a <_ZN21NarutoGameScreen2View17hideActionButtonsEv>
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800ce38:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800ce3c:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
 800ce40:	f00f f8fa 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons when game ends
    hideAllPlayerPowerUps();
 800ce44:	4620      	mov	r0, r4
 800ce46:	f7ff fe44 	bl	800cad2 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
    fireAnimationTimer = 0;
    resetTimerActive = false;
    resetTimer = 0;

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800ce4a:	4620      	mov	r0, r4
    fireAnimationActive = false;
 800ce4c:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800ce50:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    resetTimerActive = false;
 800ce54:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    resetTimer = 0;
 800ce58:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    hideAllFireEffects();
 800ce5c:	f7ff fc92 	bl	800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL TO FORCE REFRESH =====
    naruto.invalidate();
 800ce60:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800ce64:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800ce68:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800ce6c:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800ce70:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800ce74:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800ce78:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800ce7c:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800ce80:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800ce84:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800ce88:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800ce8c:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800ce90:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800ce94:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800ce98:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 800ce9c:	f00f f8cc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800cea0:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800cea4:	f00f f8c8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800cea8:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800ceac:	f00f f8c4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
    naruto_lose.invalidate();
 800ceb0:	f504 69d9 	add.w	r9, r4, #1736	@ 0x6c8
    naruto_spe.invalidate();
 800ceb4:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800ceb8:	f00f f8be 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800cebc:	f204 6b9c 	addw	fp, r4, #1692	@ 0x69c
    naruto_lose.invalidate();
 800cec0:	4648      	mov	r0, r9
 800cec2:	f00f f8b9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800cec6:	4658      	mov	r0, fp
 800cec8:	f00f f8b6 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800cecc:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800ced0:	f00f f8b2 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800ced4:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800ced8:	f00f f8ae 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800cedc:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800cee0:	f00f f8aa 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800cee4:	f204 5a3c 	addw	sl, r4, #1340	@ 0x53c
    bleach_spe.invalidate();  // QUAN TRỌNG
 800cee8:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800ceec:	f00f f8a4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800cef0:	f504 68ad 	add.w	r8, r4, #1384	@ 0x568
    bleach_lose.invalidate();
 800cef4:	4650      	mov	r0, sl
 800cef6:	f00f f89f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800cefa:	4640      	mov	r0, r8
 800cefc:	f00f f89c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    if (playerWon) {
 800cf00:	b3cf      	cbz	r7, 800cf76 <_ZN21NarutoGameScreen2View7endGameEb+0x152>
        // LED signal for character unlock
        for (int i = 0; i < 8; i++) {
            toggleLED();
 800cf02:	f7ff fbbd 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf06:	f7ff fbbb 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf0a:	f7ff fbb9 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf0e:	f7ff fbb7 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf12:	f7ff fbb5 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf16:	f7ff fbb3 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf1a:	f7ff fbb1 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf1e:	f7ff fbaf 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        naruto_win.setVisible(true);
        bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
        win.setVisible(true);

        // FORCE REFRESH ONLY NEEDED SPRITES
        naruto_win.invalidate();
 800cf22:	4658      	mov	r0, fp
 800cf24:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800cf28:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800cf2c:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
 800cf30:	f00f f882 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_lose.invalidate();
 800cf34:	4650      	mov	r0, sl
 800cf36:	f00f f87f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        win.invalidate();
 800cf3a:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800cf3e:	f00f f87b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

        // LED blink rapidly for victory
        for (int i = 0; i < 6; i++) {
            toggleLED();
 800cf42:	f7ff fb9d 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf46:	f7ff fb9b 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf4a:	f7ff fb99 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf4e:	f7ff fb97 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf52:	f7ff fb95 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cf56:	f7ff fb93 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        application().gotoBackUpScreenScreenNoTransition();
        return;
    }

    // ===== CHỈ KHI PLAYER THẮNG MỚI CÓ AUTO RETURN TIMER =====
    autoReturnTimer = 0;
 800cf5a:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = true;
 800cf5e:	f884 6a9c 	strb.w	r6, [r4, #2716]	@ 0xa9c

    // Debug: LED signal that timer has started (chỉ khi player thắng)
    toggleLED();
 800cf62:	f7ff fb8d 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
 800cf66:	f7ff fb8b 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
 800cf6a:	f7ff fb89 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

    // Ensure gameEnded = true is set
    gameEnded = true;
 800cf6e:	f884 6a69 	strb.w	r6, [r4, #2665]	@ 0xa69
}
 800cf72:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        naruto_lose.invalidate();
 800cf76:	4648      	mov	r0, r9
 800cf78:	f884 66ed 	strb.w	r6, [r4, #1773]	@ 0x6ed
 800cf7c:	f884 658d 	strb.w	r6, [r4, #1421]	@ 0x58d
 800cf80:	f884 68d1 	strb.w	r6, [r4, #2257]	@ 0x8d1
 800cf84:	f00f f858 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_win.invalidate();
 800cf88:	4640      	mov	r0, r8
 800cf8a:	f00f f855 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        gameover.invalidate();
 800cf8e:	f604 00ac 	addw	r0, r4, #2220	@ 0x8ac
 800cf92:	f00f f851 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800cf96:	4632      	mov	r2, r6
 800cf98:	4808      	ldr	r0, [pc, #32]	@ (800cfbc <_ZN21NarutoGameScreen2View7endGameEb+0x198>)
 800cf9a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800cf9e:	f003 fc2b 	bl	80107f8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800cfa2:	463a      	mov	r2, r7
 800cfa4:	4805      	ldr	r0, [pc, #20]	@ (800cfbc <_ZN21NarutoGameScreen2View7endGameEb+0x198>)
 800cfa6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800cfaa:	f003 fc25 	bl	80107f8 <HAL_GPIO_WritePin>
    virtual ~NarutoGameScreen2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800cfae:	f00d fe91 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800cfb2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
        application().gotoBackUpScreenScreenNoTransition();
 800cfb6:	f7f6 be55 	b.w	8003c64 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
 800cfba:	bf00      	nop
 800cfbc:	40021800 	.word	0x40021800

0800cfc0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>:
{
 800cfc0:	b538      	push	{r3, r4, r5, lr}
 800cfc2:	4604      	mov	r4, r0
    hideAllPlayerHPWidgets();
 800cfc4:	f7ff fe7f 	bl	800ccc6 <_ZN21NarutoGameScreen2View22hideAllPlayerHPWidgetsEv>
    int roundedHP = (playerHP / 10) * 10;
 800cfc8:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
    if (playerHP == 0 || roundedHP == 0) {
 800cfcc:	2b09      	cmp	r3, #9
 800cfce:	dc15      	bgt.n	800cffc <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x3c>
 800cfd0:	2301      	movs	r3, #1
 800cfd2:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        BITMAP_HP_0_ID.invalidate();
 800cfd6:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800cfda:	f00f f82d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800cfde:	250a      	movs	r5, #10
            toggleLED();
 800cfe0:	f7ff fb4e 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800cfe4:	3d01      	subs	r5, #1
 800cfe6:	d1fb      	bne.n	800cfe0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x20>
        if (!gameEnded) {
 800cfe8:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800cfec:	2b00      	cmp	r3, #0
 800cfee:	d172      	bne.n	800d0d6 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x116>
            endGame(false); // Player thua
 800cff0:	4620      	mov	r0, r4
 800cff2:	2100      	movs	r1, #0
}
 800cff4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(false); // Player thua
 800cff8:	f7ff bf14 	b.w	800ce24 <_ZN21NarutoGameScreen2View7endGameEb>
    int roundedHP = (playerHP / 10) * 10;
 800cffc:	220a      	movs	r2, #10
 800cffe:	fb93 f1f2 	sdiv	r1, r3, r2
 800d002:	4351      	muls	r1, r2
    switch (roundedHP) {
 800d004:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800d008:	2a09      	cmp	r2, #9
 800d00a:	d94a      	bls.n	800d0a2 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xe2>
 800d00c:	293c      	cmp	r1, #60	@ 0x3c
 800d00e:	f04f 0201 	mov.w	r2, #1
 800d012:	dc20      	bgt.n	800d056 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x96>
 800d014:	f1a3 001e 	sub.w	r0, r3, #30
 800d018:	2809      	cmp	r0, #9
 800d01a:	d94d      	bls.n	800d0b8 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xf8>
 800d01c:	291e      	cmp	r1, #30
 800d01e:	dc0e      	bgt.n	800d03e <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x7e>
 800d020:	f1a3 010a 	sub.w	r1, r3, #10
 800d024:	2909      	cmp	r1, #9
 800d026:	d951      	bls.n	800d0cc <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x10c>
 800d028:	3b14      	subs	r3, #20
 800d02a:	2b09      	cmp	r3, #9
 800d02c:	d949      	bls.n	800d0c2 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x102>
 800d02e:	2301      	movs	r3, #1
 800d030:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
            BITMAP_HP_0_ID.invalidate();
 800d034:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800d038:	f00e fffe 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800d03c:	e7d4      	b.n	800cfe8 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x28>
    switch (roundedHP) {
 800d03e:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800d042:	2909      	cmp	r1, #9
 800d044:	d933      	bls.n	800d0ae <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xee>
 800d046:	3b32      	subs	r3, #50	@ 0x32
 800d048:	2b09      	cmp	r3, #9
 800d04a:	d8f0      	bhi.n	800d02e <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x6e>
 800d04c:	f884 21c5 	strb.w	r2, [r4, #453]	@ 0x1c5
            BITMAP_HP_50_ID.invalidate();
 800d050:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800d054:	e017      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800d056:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800d05a:	2809      	cmp	r0, #9
 800d05c:	d917      	bls.n	800d08e <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xce>
 800d05e:	295a      	cmp	r1, #90	@ 0x5a
 800d060:	dc0b      	bgt.n	800d07a <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xba>
 800d062:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800d066:	2909      	cmp	r1, #9
 800d068:	d916      	bls.n	800d098 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xd8>
 800d06a:	3b50      	subs	r3, #80	@ 0x50
 800d06c:	2b09      	cmp	r3, #9
 800d06e:	d8de      	bhi.n	800d02e <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x6e>
 800d070:	f884 2249 	strb.w	r2, [r4, #585]	@ 0x249
            BITMAP_HP_80_ID.invalidate();
 800d074:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800d078:	e005      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800d07a:	2963      	cmp	r1, #99	@ 0x63
 800d07c:	ddd7      	ble.n	800d02e <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x6e>
 800d07e:	f884 20bd 	strb.w	r2, [r4, #189]	@ 0xbd
            BITMAP_HP_100_ID.invalidate();
 800d082:	f104 0098 	add.w	r0, r4, #152	@ 0x98
}
 800d086:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID.invalidate();
 800d08a:	f00e bfd5 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d08e:	f884 2275 	strb.w	r2, [r4, #629]	@ 0x275
            BITMAP_HP_90_ID.invalidate();
 800d092:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800d096:	e7f6      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d098:	f884 221d 	strb.w	r2, [r4, #541]	@ 0x21d
            BITMAP_HP_70_ID.invalidate();
 800d09c:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800d0a0:	e7f1      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d0a2:	2301      	movs	r3, #1
 800d0a4:	f884 31f1 	strb.w	r3, [r4, #497]	@ 0x1f1
            BITMAP_HP_60_ID.invalidate();
 800d0a8:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800d0ac:	e7eb      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d0ae:	f884 2199 	strb.w	r2, [r4, #409]	@ 0x199
            BITMAP_HP_40_ID.invalidate();
 800d0b2:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800d0b6:	e7e6      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d0b8:	f884 216d 	strb.w	r2, [r4, #365]	@ 0x16d
            BITMAP_HP_30_ID.invalidate();
 800d0bc:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800d0c0:	e7e1      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d0c2:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
            BITMAP_HP_20_ID.invalidate();
 800d0c6:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800d0ca:	e7dc      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d0cc:	f884 20e9 	strb.w	r2, [r4, #233]	@ 0xe9
            BITMAP_HP_10_ID.invalidate();
 800d0d0:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800d0d4:	e7d7      	b.n	800d086 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
}
 800d0d6:	bd38      	pop	{r3, r4, r5, pc}

0800d0d8 <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi>:
    if (!isPlayer) return; // Boss không có power-up
 800d0d8:	b1c1      	cbz	r1, 800d10c <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi+0x34>
    switch (type) {
 800d0da:	2a02      	cmp	r2, #2
 800d0dc:	d002      	beq.n	800d0e4 <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi+0xc>
 800d0de:	2a03      	cmp	r2, #3
 800d0e0:	d00a      	beq.n	800d0f8 <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi+0x20>
 800d0e2:	4770      	bx	lr
            playerHP += 8; // TĂNG TỪ 5 LÊN 8
 800d0e4:	f8d0 2a64 	ldr.w	r2, [r0, #2660]	@ 0xa64
 800d0e8:	3208      	adds	r2, #8
            if (playerHP > 100) playerHP = 100;
 800d0ea:	2a64      	cmp	r2, #100	@ 0x64
 800d0ec:	bfa8      	it	ge
 800d0ee:	2264      	movge	r2, #100	@ 0x64
 800d0f0:	f8c0 2a64 	str.w	r2, [r0, #2660]	@ 0xa64
            updatePlayerHPDisplay();
 800d0f4:	f7ff bf64 	b.w	800cfc0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
            playerChakraLevel += 20; // TĂNG TỪ 15 LÊN 20
 800d0f8:	f8d0 2a80 	ldr.w	r2, [r0, #2688]	@ 0xa80
 800d0fc:	3214      	adds	r2, #20
            if (playerChakraLevel > 100) playerChakraLevel = 100;
 800d0fe:	2a64      	cmp	r2, #100	@ 0x64
 800d100:	bfa8      	it	ge
 800d102:	2264      	movge	r2, #100	@ 0x64
 800d104:	f8c0 2a80 	str.w	r2, [r0, #2688]	@ 0xa80
            updatePlayerChakraDisplay();
 800d108:	f7ff be23 	b.w	800cd52 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
}
 800d10c:	4770      	bx	lr

0800d10e <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv>:
{
 800d10e:	b510      	push	{r4, lr}
 800d110:	4604      	mov	r4, r0
        toggleLED();
 800d112:	f7ff fab5 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d116:	f7ff fab3 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d11a:	f7ff fab1 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    int playerRoll = generateRandomNumber(1, 100);
 800d11e:	2264      	movs	r2, #100	@ 0x64
 800d120:	2101      	movs	r1, #1
 800d122:	4620      	mov	r0, r4
 800d124:	f7ff fb08 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    if (playerRoll >= 1 && playerRoll <= 30) {
 800d128:	1e43      	subs	r3, r0, #1
 800d12a:	2b1d      	cmp	r3, #29
 800d12c:	d915      	bls.n	800d15a <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x4c>
    } else if (playerRoll >= 31 && playerRoll <= 55) {
 800d12e:	f1a0 031f 	sub.w	r3, r0, #31
 800d132:	2b18      	cmp	r3, #24
 800d134:	d913      	bls.n	800d15e <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x50>
    } else if (playerRoll >= 56 && playerRoll <= 80) {
 800d136:	3838      	subs	r0, #56	@ 0x38
        newPlayerPowerUp = 2; // 25% - Heal (ENHANCED)
 800d138:	2818      	cmp	r0, #24
 800d13a:	bf8c      	ite	hi
 800d13c:	2203      	movhi	r2, #3
 800d13e:	2202      	movls	r2, #2
    playerPowerUpActive = true;
 800d140:	2101      	movs	r1, #1
    applyInstantPowerUp(true, playerPowerUpType);
 800d142:	4620      	mov	r0, r4
    playerPowerUpType = newPlayerPowerUp;
 800d144:	f8c4 2aa4 	str.w	r2, [r4, #2724]	@ 0xaa4
    playerPowerUpActive = true;
 800d148:	f884 1aac 	strb.w	r1, [r4, #2732]	@ 0xaac
    applyInstantPowerUp(true, playerPowerUpType);
 800d14c:	f7ff ffc4 	bl	800d0d8 <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi>
    updatePlayerPowerUpDisplay();
 800d150:	4620      	mov	r0, r4
}
 800d152:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updatePlayerPowerUpDisplay();
 800d156:	f7ff bcd9 	b.w	800cb0c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
        newPlayerPowerUp = 4; // 30% - Shield
 800d15a:	2204      	movs	r2, #4
 800d15c:	e7f0      	b.n	800d140 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x32>
        newPlayerPowerUp = 1; // 25% - Double Damage
 800d15e:	460a      	mov	r2, r1
 800d160:	e7ee      	b.n	800d140 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x32>

0800d162 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0>:
        turnCounter++;
 800d162:	f8d0 3aa0 	ldr.w	r3, [r0, #2720]	@ 0xaa0
void NarutoGameScreen2View::checkTurnComplete()
 800d166:	b510      	push	{r4, lr}
        turnCounter++;
 800d168:	3301      	adds	r3, #1
void NarutoGameScreen2View::checkTurnComplete()
 800d16a:	4604      	mov	r4, r0
        turnCounter++;
 800d16c:	f8c0 3aa0 	str.w	r3, [r0, #2720]	@ 0xaa0
        toggleLED();
 800d170:	f7ff fa86 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        if (!playerSpecialUsed && !aiSpecialUsed) {
 800d174:	f894 3a8a 	ldrb.w	r3, [r4, #2698]	@ 0xa8a
 800d178:	b963      	cbnz	r3, 800d194 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x32>
 800d17a:	f894 3a8b 	ldrb.w	r3, [r4, #2699]	@ 0xa8b
 800d17e:	b94b      	cbnz	r3, 800d194 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x32>
            int powerUpChance = generateRandomNumber(1, 100);
 800d180:	2264      	movs	r2, #100	@ 0x64
 800d182:	2101      	movs	r1, #1
 800d184:	4620      	mov	r0, r4
 800d186:	f7ff fad7 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
            if (powerUpChance <= 25) {
 800d18a:	2819      	cmp	r0, #25
 800d18c:	dc02      	bgt.n	800d194 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x32>
                givePlayerPowerUp(); // Chỉ player nhận power-up
 800d18e:	4620      	mov	r0, r4
 800d190:	f7ff ffbd 	bl	800d10e <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv>
        if (playerPowerUpActive && (playerPowerUpType == 2 || playerPowerUpType == 3 || playerPowerUpType == 4)) {
 800d194:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800d198:	b163      	cbz	r3, 800d1b4 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x52>
 800d19a:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800d19e:	3b02      	subs	r3, #2
 800d1a0:	2b02      	cmp	r3, #2
 800d1a2:	d807      	bhi.n	800d1b4 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x52>
        playerPowerUpActive = false;
 800d1a4:	2300      	movs	r3, #0
 800d1a6:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d1aa:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d1ae:	4620      	mov	r0, r4
 800d1b0:	f7ff fcac 	bl	800cb0c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
        playerActionDone = false;
 800d1b4:	2300      	movs	r3, #0
 800d1b6:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
        playerSpecialUsed = false;
 800d1ba:	f8a4 3a8a 	strh.w	r3, [r4, #2698]	@ 0xa8a
}
 800d1be:	bd10      	pop	{r4, pc}

0800d1c0 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv>:
    if (playerActionDone && aiActionDone) {
 800d1c0:	f890 2aae 	ldrb.w	r2, [r0, #2734]	@ 0xaae
 800d1c4:	b122      	cbz	r2, 800d1d0 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv+0x10>
 800d1c6:	f890 3aaf 	ldrb.w	r3, [r0, #2735]	@ 0xaaf
 800d1ca:	b10b      	cbz	r3, 800d1d0 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv+0x10>
 800d1cc:	f7ff bfc9 	b.w	800d162 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0>
}
 800d1d0:	4770      	bx	lr

0800d1d2 <_ZN21NarutoGameScreen2View12playerDefendEv>:
{
 800d1d2:	b570      	push	{r4, r5, r6, lr}
 800d1d4:	4604      	mov	r4, r0
 800d1d6:	2601      	movs	r6, #1
 800d1d8:	2500      	movs	r5, #0
    resetNarutoState();
 800d1da:	f7ff fd12 	bl	800cc02 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
    naruto_def.invalidate();
 800d1de:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800d1e2:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800d1e6:	f884 6745 	strb.w	r6, [r4, #1861]	@ 0x745
 800d1ea:	f00e ff25 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800d1ee:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800d1f2:	f00e ff21 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800d1f6:	2207      	movs	r2, #7
 800d1f8:	2103      	movs	r1, #3
    playerDefending = true;
 800d1fa:	f884 6a88 	strb.w	r6, [r4, #2696]	@ 0xa88
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800d1fe:	4620      	mov	r0, r4
 800d200:	f7ff fa9a 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    playerHP += healAmount;
 800d204:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800d208:	4403      	add	r3, r0
    if (playerHP > 100) playerHP = 100;
 800d20a:	2b64      	cmp	r3, #100	@ 0x64
 800d20c:	bfa8      	it	ge
 800d20e:	2364      	movge	r3, #100	@ 0x64
 800d210:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    playerChakraLevel += generateRandomNumber(10, 18); // TĂNG TỪ 8-15 LÊN 10-18
 800d214:	2212      	movs	r2, #18
 800d216:	210a      	movs	r1, #10
 800d218:	4620      	mov	r0, r4
 800d21a:	f7ff fa8d 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800d21e:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800d222:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800d224:	2b64      	cmp	r3, #100	@ 0x64
 800d226:	bfa8      	it	ge
 800d228:	2364      	movge	r3, #100	@ 0x64
 800d22a:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (playerPowerUpActive && playerPowerUpType == 1) {
 800d22e:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800d232:	b153      	cbz	r3, 800d24a <_ZN21NarutoGameScreen2View12playerDefendEv+0x78>
 800d234:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800d238:	42b3      	cmp	r3, r6
 800d23a:	d106      	bne.n	800d24a <_ZN21NarutoGameScreen2View12playerDefendEv+0x78>
        playerPowerUpActive = false;
 800d23c:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d240:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d244:	4620      	mov	r0, r4
 800d246:	f7ff fc61 	bl	800cb0c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800d24a:	4620      	mov	r0, r4
 800d24c:	f7ff feb8 	bl	800cfc0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800d250:	4620      	mov	r0, r4
 800d252:	f7ff fd7e 	bl	800cd52 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
    toggleLED();
 800d256:	f7ff fa13 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800d25a:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800d25c:	2200      	movs	r2, #0
    playerActionDone = true;
 800d25e:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800d262:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800d266:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d26a:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d26e:	bd70      	pop	{r4, r5, r6, pc}

0800d270 <_ZN21NarutoGameScreen2View8aiAttackEv>:
{
 800d270:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded) return;
 800d272:	f890 6a69 	ldrb.w	r6, [r0, #2665]	@ 0xa69
{
 800d276:	4604      	mov	r4, r0
    if (gameEnded) return;
 800d278:	2e00      	cmp	r6, #0
 800d27a:	d157      	bne.n	800d32c <_ZN21NarutoGameScreen2View8aiAttackEv+0xbc>
    resetBleachState();
 800d27c:	f7ff fcf2 	bl	800cc64 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
 800d280:	2301      	movs	r3, #1
 800d282:	f884 363d 	strb.w	r3, [r4, #1597]	@ 0x63d
    bleach_atk.invalidate();
 800d286:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800d28a:	f884 6669 	strb.w	r6, [r4, #1641]	@ 0x669
 800d28e:	f00e fed3 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800d292:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d296:	f00e fecf 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800d29a:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
 800d29e:	2b03      	cmp	r3, #3
 800d2a0:	d045      	beq.n	800d32e <_ZN21NarutoGameScreen2View8aiAttackEv+0xbe>
 800d2a2:	2b04      	cmp	r3, #4
 800d2a4:	d046      	beq.n	800d334 <_ZN21NarutoGameScreen2View8aiAttackEv+0xc4>
 800d2a6:	2b02      	cmp	r3, #2
            baseDamage = generateRandomNumber(4, 10);
 800d2a8:	bf19      	ittee	ne
 800d2aa:	220a      	movne	r2, #10
 800d2ac:	2104      	movne	r1, #4
            baseDamage = generateRandomNumber(6, 12);
 800d2ae:	220c      	moveq	r2, #12
 800d2b0:	2106      	moveq	r1, #6
            baseDamage = generateRandomNumber(10, 18);
 800d2b2:	4620      	mov	r0, r4
 800d2b4:	f7ff fa40 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d2b8:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
            baseDamage = generateRandomNumber(10, 18);
 800d2bc:	4605      	mov	r5, r0
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d2be:	b11b      	cbz	r3, 800d2c8 <_ZN21NarutoGameScreen2View8aiAttackEv+0x58>
 800d2c0:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800d2c4:	2a04      	cmp	r2, #4
 800d2c6:	d038      	beq.n	800d33a <_ZN21NarutoGameScreen2View8aiAttackEv+0xca>
    int actualDamage = calculateDamage(baseDamage, playerDefending, false, playerHasShield);
 800d2c8:	f894 3a88 	ldrb.w	r3, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800d2cc:	b3c3      	cbz	r3, 800d340 <_ZN21NarutoGameScreen2View8aiAttackEv+0xd0>
        if (finalDamage < 1) finalDamage = 1;
 800d2ce:	2d01      	cmp	r5, #1
 800d2d0:	dd38      	ble.n	800d344 <_ZN21NarutoGameScreen2View8aiAttackEv+0xd4>
        finalDamage = finalDamage / 2;
 800d2d2:	106d      	asrs	r5, r5, #1
    playerHP -= actualDamage;
 800d2d4:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800d2d8:	1b5b      	subs	r3, r3, r5
    if (playerHP < 0) playerHP = 0;
 800d2da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d2de:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    int chakraGain = generateRandomNumber(4, 8); // GIẢM TỪ 8-15 XUỐNG 4-8
 800d2e2:	2208      	movs	r2, #8
 800d2e4:	2104      	movs	r1, #4
 800d2e6:	4620      	mov	r0, r4
 800d2e8:	f7ff fa26 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    aiChakraLevel += chakraGain;
 800d2ec:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800d2f0:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800d2f2:	2b64      	cmp	r3, #100	@ 0x64
 800d2f4:	bfa8      	it	ge
 800d2f6:	2364      	movge	r3, #100	@ 0x64
 800d2f8:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800d2fc:	b13e      	cbz	r6, 800d30e <_ZN21NarutoGameScreen2View8aiAttackEv+0x9e>
 800d2fe:	b935      	cbnz	r5, 800d30e <_ZN21NarutoGameScreen2View8aiAttackEv+0x9e>
        playerPowerUpActive = false;
 800d300:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d304:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d308:	4620      	mov	r0, r4
 800d30a:	f7ff fbff 	bl	800cb0c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800d30e:	4620      	mov	r0, r4
 800d310:	f7ff fe56 	bl	800cfc0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    updateAIChakraDisplay();
 800d314:	4620      	mov	r0, r4
 800d316:	f7ff fd50 	bl	800cdba <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    startAttackFireAnimation();
 800d31a:	4620      	mov	r0, r4
 800d31c:	f7ff fa49 	bl	800c7b2 <_ZN21NarutoGameScreen2View24startAttackFireAnimationEv>
    resetTimer = 0;
 800d320:	2300      	movs	r3, #0
 800d322:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d326:	2301      	movs	r3, #1
 800d328:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d32c:	bd70      	pop	{r4, r5, r6, pc}
            baseDamage = generateRandomNumber(8, 15);
 800d32e:	220f      	movs	r2, #15
 800d330:	2108      	movs	r1, #8
 800d332:	e7be      	b.n	800d2b2 <_ZN21NarutoGameScreen2View8aiAttackEv+0x42>
            baseDamage = generateRandomNumber(10, 18);
 800d334:	2212      	movs	r2, #18
 800d336:	210a      	movs	r1, #10
 800d338:	e7bb      	b.n	800d2b2 <_ZN21NarutoGameScreen2View8aiAttackEv+0x42>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d33a:	461e      	mov	r6, r3
        return 0; // Shield chặn hoàn toàn
 800d33c:	2500      	movs	r5, #0
 800d33e:	e7c9      	b.n	800d2d4 <_ZN21NarutoGameScreen2View8aiAttackEv+0x64>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d340:	461e      	mov	r6, r3
 800d342:	e7c7      	b.n	800d2d4 <_ZN21NarutoGameScreen2View8aiAttackEv+0x64>
        if (finalDamage < 1) finalDamage = 1;
 800d344:	2501      	movs	r5, #1
 800d346:	e7c5      	b.n	800d2d4 <_ZN21NarutoGameScreen2View8aiAttackEv+0x64>

0800d348 <_ZN21NarutoGameScreen2View9aiSpecialEv>:
{
 800d348:	b538      	push	{r3, r4, r5, lr}
    if (rageMode && bossPhase >= 3) {
 800d34a:	f890 3a78 	ldrb.w	r3, [r0, #2680]	@ 0xa78
{
 800d34e:	4604      	mov	r4, r0
    if (rageMode && bossPhase >= 3) {
 800d350:	2b00      	cmp	r3, #0
 800d352:	d04a      	beq.n	800d3ea <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa2>
 800d354:	f8d0 3a6c 	ldr.w	r3, [r0, #2668]	@ 0xa6c
    int requiredChakra = 100;
 800d358:	2b02      	cmp	r3, #2
 800d35a:	bfcc      	ite	gt
 800d35c:	2350      	movgt	r3, #80	@ 0x50
 800d35e:	2364      	movle	r3, #100	@ 0x64
    if (aiChakraLevel < requiredChakra || gameEnded) {
 800d360:	f8d4 2a84 	ldr.w	r2, [r4, #2692]	@ 0xa84
 800d364:	429a      	cmp	r2, r3
 800d366:	db3f      	blt.n	800d3e8 <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa0>
 800d368:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800d36c:	bbe5      	cbnz	r5, 800d3e8 <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa0>
    resetBleachState();
 800d36e:	4620      	mov	r0, r4
 800d370:	f7ff fc78 	bl	800cc64 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
 800d374:	2301      	movs	r3, #1
 800d376:	f884 35e5 	strb.w	r3, [r4, #1509]	@ 0x5e5
    bleach_spe.invalidate();
 800d37a:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800d37e:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800d382:	f00e fe59 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800d386:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d38a:	f00e fe55 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d38e:	f894 2aac 	ldrb.w	r2, [r4, #2732]	@ 0xaac
 800d392:	b11a      	cbz	r2, 800d39c <_ZN21NarutoGameScreen2View9aiSpecialEv+0x54>
 800d394:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800d398:	2b04      	cmp	r3, #4
 800d39a:	d003      	beq.n	800d3a4 <_ZN21NarutoGameScreen2View9aiSpecialEv+0x5c>
    int actualDamage = calculateSpecialDamage(specialDamage, playerDefending, playerHasShield);
 800d39c:	f894 2a88 	ldrb.w	r2, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800d3a0:	bb2a      	cbnz	r2, 800d3ee <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa6>
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800d3a2:	2546      	movs	r5, #70	@ 0x46
    playerHP -= actualDamage;
 800d3a4:	f8d4 1a64 	ldr.w	r1, [r4, #2660]	@ 0xa64
 800d3a8:	1b49      	subs	r1, r1, r5
    if (playerHP < 0) playerHP = 0;
 800d3aa:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 800d3ae:	f8c4 1a64 	str.w	r1, [r4, #2660]	@ 0xa64
    aiChakraLevel = 0;
 800d3b2:	2100      	movs	r1, #0
 800d3b4:	f8c4 1a84 	str.w	r1, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800d3b8:	b13a      	cbz	r2, 800d3ca <_ZN21NarutoGameScreen2View9aiSpecialEv+0x82>
 800d3ba:	b935      	cbnz	r5, 800d3ca <_ZN21NarutoGameScreen2View9aiSpecialEv+0x82>
        playerPowerUpActive = false;
 800d3bc:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d3c0:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d3c4:	4620      	mov	r0, r4
 800d3c6:	f7ff fba1 	bl	800cb0c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updateAIChakraDisplay();
 800d3ca:	4620      	mov	r0, r4
 800d3cc:	f7ff fcf5 	bl	800cdba <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    updatePlayerHPDisplay();
 800d3d0:	4620      	mov	r0, r4
 800d3d2:	f7ff fdf5 	bl	800cfc0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    startSpecialFireAnimation();
 800d3d6:	4620      	mov	r0, r4
 800d3d8:	f7ff fa01 	bl	800c7de <_ZN21NarutoGameScreen2View25startSpecialFireAnimationEv>
    resetTimer = 0;
 800d3dc:	2300      	movs	r3, #0
 800d3de:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d3e2:	2301      	movs	r3, #1
 800d3e4:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d3e8:	bd38      	pop	{r3, r4, r5, pc}
    int requiredChakra = 100;
 800d3ea:	2364      	movs	r3, #100	@ 0x64
 800d3ec:	e7b8      	b.n	800d360 <_ZN21NarutoGameScreen2View9aiSpecialEv+0x18>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d3ee:	2200      	movs	r2, #0
        finalDamage = finalDamage / 2; // 70 / 2 = 35
 800d3f0:	2523      	movs	r5, #35	@ 0x23
 800d3f2:	e7d7      	b.n	800d3a4 <_ZN21NarutoGameScreen2View9aiSpecialEv+0x5c>

0800d3f4 <_ZN21NarutoGameScreen2View17activateEasterEggEv>:

void NarutoGameScreen2View::activateEasterEgg()
{
 800d3f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Set flag
    easterEggActivated = true;
    easterEggTimer = 0;
 800d3f6:	2500      	movs	r5, #0
    easterEggActivated = true;
 800d3f8:	2601      	movs	r6, #1
{
 800d3fa:	4604      	mov	r4, r0
    easterEggTimer = 0;
 800d3fc:	f8c0 5acc 	str.w	r5, [r0, #2764]	@ 0xacc
    gameEnded = true; // Kết thúc game ngay lập tức

    // FORCE STOP ALL ANIMATIONS
    fireAnimationActive = false;
 800d400:	f880 5ab4 	strb.w	r5, [r0, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800d404:	f8c0 5ab0 	str.w	r5, [r0, #2736]	@ 0xab0
    resetTimerActive = false;
 800d408:	f880 5a94 	strb.w	r5, [r0, #2708]	@ 0xa94
    resetTimer = 0;
 800d40c:	f8c0 5a90 	str.w	r5, [r0, #2704]	@ 0xa90
    easterEggActivated = true;
 800d410:	f880 6ac8 	strb.w	r6, [r0, #2760]	@ 0xac8
    gameEnded = true; // Kết thúc game ngay lập tức
 800d414:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800d418:	f7ff f9b4 	bl	800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>

    // Hide menu actions immediately
    hideActionButtons();
 800d41c:	4620      	mov	r0, r4
 800d41e:	f7ff fa8c 	bl	800c93a <_ZN21NarutoGameScreen2View17hideActionButtonsEv>
 800d422:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800d426:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800d42a:	f00e fe05 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons
    hideAllPlayerPowerUps();
 800d42e:	4620      	mov	r0, r4
 800d430:	f7ff fb4f 	bl	800cad2 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
 800d434:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800d438:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800d43c:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800d440:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800d444:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800d448:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800d44c:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800d450:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800d454:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800d458:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800d45c:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800d460:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800d464:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800d468:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL =====
    naruto.invalidate();
 800d46c:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800d470:	f00e fde2 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800d474:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800d478:	f00e fdde 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800d47c:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800d480:	f00e fdda 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800d484:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    naruto_lose.invalidate();
    naruto_win.invalidate();
 800d488:	f204 679c 	addw	r7, r4, #1692	@ 0x69c
    naruto_spe.invalidate();
 800d48c:	f00e fdd4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800d490:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800d494:	f00e fdd0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800d498:	4638      	mov	r0, r7
 800d49a:	f00e fdcd 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800d49e:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d4a2:	f00e fdc9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800d4a6:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800d4aa:	f00e fdc5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800d4ae:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800d4b2:	f204 553c 	addw	r5, r4, #1340	@ 0x53c
    bleach_def.invalidate();
 800d4b6:	f00e fdbf 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
 800d4ba:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800d4be:	f00e fdbb 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800d4c2:	4628      	mov	r0, r5
 800d4c4:	f00e fdb8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800d4c8:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800d4cc:	f00e fdb4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d4d0:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800d4d4:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800d4d8:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
    // ===== CHỈ HIỂN THỊ SPRITE CẦN THIẾT =====
    naruto_win.setVisible(true);
    bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
    win.setVisible(true);

    naruto_win.invalidate();
 800d4dc:	4638      	mov	r0, r7
 800d4de:	f00e fdab 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800d4e2:	4628      	mov	r0, r5
 800d4e4:	f00e fda8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    win.invalidate();
 800d4e8:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800d4ec:	f00e fda4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d4f0:	240f      	movs	r4, #15

    // ===== EASTER EGG LED PATTERN =====
    for (int i = 0; i < 15; i++) {
        toggleLED(); // 15 LED blinks để báo hiệu Easter Egg
 800d4f2:	f7ff f8c5 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    for (int i = 0; i < 15; i++) {
 800d4f6:	3c01      	subs	r4, #1
 800d4f8:	d1fb      	bne.n	800d4f2 <_ZN21NarutoGameScreen2View17activateEasterEggEv+0xfe>
    }

    // Debug: LED signal that Easter Egg activated
    toggleLED();
 800d4fa:	f7ff f8c1 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
 800d4fe:	f7ff f8bf 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
}
 800d502:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    toggleLED();
 800d506:	f7ff b8bb 	b.w	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

0800d50a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>:

void NarutoGameScreen2View::updateBossHPDisplay()
{
 800d50a:	b538      	push	{r3, r4, r5, lr}
 800d50c:	4604      	mov	r4, r0
    // Hide all boss HP widgets first
    hideAllBossHPWidgets();
 800d50e:	f7ff fa6b 	bl	800c9e8 <_ZN21NarutoGameScreen2View20hideAllBossHPWidgetsEv>

    // ===== HỆ THỐNG HP ĐỐN GIẢN - GIỐNG GAMESCREEN NHƯNG BẮT ĐẦU TỪ 130 =====
    // Làm tròn xuống bội số 10 (giống GameScreenView)
    int roundedHP = (bossCurrentHP / 10) * 10;
 800d512:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    if (roundedHP < 0) roundedHP = 0;
    if (roundedHP > 130) roundedHP = 130;

    // DEBUG: Force test khi Boss HP = 0
    if (bossCurrentHP == 0 || roundedHP == 0) {
 800d516:	2b09      	cmp	r3, #9
 800d518:	dc16      	bgt.n	800d548 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x3e>
 800d51a:	2301      	movs	r3, #1
 800d51c:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
        // FORCE HIỂN THỊ HP_0_ID_1
        BITMAP_HP_0_ID_1.setVisible(true);
        BITMAP_HP_0_ID_1.invalidate();
 800d520:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800d524:	f00e fd88 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d528:	250a      	movs	r5, #10

        // DEBUG: LED blink nhiều lần
        for (int i = 0; i < 10; i++) {
            toggleLED();
 800d52a:	f7ff f8a9 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800d52e:	3d01      	subs	r5, #1
 800d530:	d1fb      	bne.n	800d52a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x20>
        }

        // FORCE END GAME
        if (!gameEnded) {
 800d532:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800d536:	2b00      	cmp	r3, #0
 800d538:	f040 808d 	bne.w	800d656 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x14c>
            endGame(true); // Player thắng
 800d53c:	4620      	mov	r0, r4
 800d53e:	2101      	movs	r1, #1
            if (!gameEnded) {
                endGame(true); // Player thắng
            }
            break;
    }
}
 800d540:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(true); // Player thắng
 800d544:	f7ff bc6e 	b.w	800ce24 <_ZN21NarutoGameScreen2View7endGameEb>
    int roundedHP = (bossCurrentHP / 10) * 10;
 800d548:	220a      	movs	r2, #10
 800d54a:	fb93 f1f2 	sdiv	r1, r3, r2
 800d54e:	4351      	muls	r1, r2
    switch (roundedHP) {
 800d550:	f1a3 0246 	sub.w	r2, r3, #70	@ 0x46
 800d554:	2a09      	cmp	r2, #9
 800d556:	d95f      	bls.n	800d618 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x10e>
 800d558:	2946      	cmp	r1, #70	@ 0x46
 800d55a:	f04f 0201 	mov.w	r2, #1
 800d55e:	dc24      	bgt.n	800d5aa <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xa0>
 800d560:	f1a3 0028 	sub.w	r0, r3, #40	@ 0x28
 800d564:	2809      	cmp	r0, #9
 800d566:	d962      	bls.n	800d62e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x124>
 800d568:	2928      	cmp	r1, #40	@ 0x28
 800d56a:	dc12      	bgt.n	800d592 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x88>
 800d56c:	f1a3 0114 	sub.w	r1, r3, #20
 800d570:	2909      	cmp	r1, #9
 800d572:	d966      	bls.n	800d642 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x138>
 800d574:	f1a3 011e 	sub.w	r1, r3, #30
 800d578:	2909      	cmp	r1, #9
 800d57a:	d95d      	bls.n	800d638 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x12e>
 800d57c:	3b0a      	subs	r3, #10
 800d57e:	2b09      	cmp	r3, #9
 800d580:	d964      	bls.n	800d64c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x142>
 800d582:	2301      	movs	r3, #1
 800d584:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
            BITMAP_HP_0_ID_1.invalidate();
 800d588:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800d58c:	f00e fd54 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800d590:	e7cf      	b.n	800d532 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x28>
    switch (roundedHP) {
 800d592:	f1a3 0132 	sub.w	r1, r3, #50	@ 0x32
 800d596:	2909      	cmp	r1, #9
 800d598:	d944      	bls.n	800d624 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x11a>
 800d59a:	3b3c      	subs	r3, #60	@ 0x3c
 800d59c:	2b09      	cmp	r3, #9
 800d59e:	d8f0      	bhi.n	800d582 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x78>
 800d5a0:	f884 23d5 	strb.w	r2, [r4, #981]	@ 0x3d5
            BITMAP_HP_60_ID_1.invalidate();
 800d5a4:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800d5a8:	e01e      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800d5aa:	f1a3 006e 	sub.w	r0, r3, #110	@ 0x6e
 800d5ae:	2809      	cmp	r0, #9
 800d5b0:	d923      	bls.n	800d5fa <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xf0>
 800d5b2:	296e      	cmp	r1, #110	@ 0x6e
 800d5b4:	dc0f      	bgt.n	800d5d6 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xcc>
 800d5b6:	f1a3 015a 	sub.w	r1, r3, #90	@ 0x5a
 800d5ba:	2909      	cmp	r1, #9
 800d5bc:	d927      	bls.n	800d60e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x104>
 800d5be:	f1a3 0164 	sub.w	r1, r3, #100	@ 0x64
 800d5c2:	2909      	cmp	r1, #9
 800d5c4:	d91e      	bls.n	800d604 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xfa>
 800d5c6:	3b50      	subs	r3, #80	@ 0x50
 800d5c8:	2b09      	cmp	r3, #9
 800d5ca:	d8da      	bhi.n	800d582 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x78>
 800d5cc:	f884 237d 	strb.w	r2, [r4, #893]	@ 0x37d
            BITMAP_HP_80_ID_1.invalidate();
 800d5d0:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800d5d4:	e008      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800d5d6:	3b78      	subs	r3, #120	@ 0x78
 800d5d8:	2b09      	cmp	r3, #9
 800d5da:	d909      	bls.n	800d5f0 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xe6>
 800d5dc:	2981      	cmp	r1, #129	@ 0x81
 800d5de:	ddd0      	ble.n	800d582 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x78>
 800d5e0:	f884 22a1 	strb.w	r2, [r4, #673]	@ 0x2a1
            BITMAP_HP_130_ID_1.invalidate();
 800d5e4:	f504 701f 	add.w	r0, r4, #636	@ 0x27c
}
 800d5e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID_1.invalidate();
 800d5ec:	f00e bd24 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d5f0:	f884 22cd 	strb.w	r2, [r4, #717]	@ 0x2cd
            BITMAP_HP_120_ID_1.invalidate();
 800d5f4:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800d5f8:	e7f6      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d5fa:	f884 22f9 	strb.w	r2, [r4, #761]	@ 0x2f9
            BITMAP_HP_110_ID_1.invalidate();
 800d5fe:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800d602:	e7f1      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d604:	f884 2325 	strb.w	r2, [r4, #805]	@ 0x325
            BITMAP_HP_100_ID_1.invalidate();
 800d608:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800d60c:	e7ec      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d60e:	f884 2351 	strb.w	r2, [r4, #849]	@ 0x351
            BITMAP_HP_90_ID_1.invalidate();
 800d612:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800d616:	e7e7      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d618:	2301      	movs	r3, #1
 800d61a:	f884 33a9 	strb.w	r3, [r4, #937]	@ 0x3a9
            BITMAP_HP_70_ID_1.invalidate();
 800d61e:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800d622:	e7e1      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d624:	f884 2401 	strb.w	r2, [r4, #1025]	@ 0x401
            BITMAP_HP_50_ID_1.invalidate();
 800d628:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800d62c:	e7dc      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d62e:	f884 242d 	strb.w	r2, [r4, #1069]	@ 0x42d
            BITMAP_HP_40_ID_1.invalidate();
 800d632:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800d636:	e7d7      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d638:	f884 2459 	strb.w	r2, [r4, #1113]	@ 0x459
            BITMAP_HP_30_ID_1.invalidate();
 800d63c:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800d640:	e7d2      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d642:	f884 2485 	strb.w	r2, [r4, #1157]	@ 0x485
            BITMAP_HP_20_ID_1.invalidate();
 800d646:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800d64a:	e7cd      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d64c:	f884 24b1 	strb.w	r2, [r4, #1201]	@ 0x4b1
            BITMAP_HP_10_ID_1.invalidate();
 800d650:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800d654:	e7c8      	b.n	800d5e8 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
}
 800d656:	bd38      	pop	{r3, r4, r5, pc}

0800d658 <_ZN21NarutoGameScreen2View11setupScreenEv>:
{
 800d658:	b538      	push	{r3, r4, r5, lr}
 800d65a:	4604      	mov	r4, r0
	NarutoGameScreen2ViewBase::setupScreen();
 800d65c:	f7f9 fb0d 	bl	8006c7a <_ZN25NarutoGameScreen2ViewBase11setupScreenEv>
    initGPIO();
 800d660:	4620      	mov	r0, r4
 800d662:	f7ff f843 	bl	800c6ec <_ZN21NarutoGameScreen2View8initGPIOEv>
    randomSeed = HAL_GetTick();
 800d666:	f002 fe67 	bl	8010338 <HAL_GetTick>
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800d66a:	4930      	ldr	r1, [pc, #192]	@ (800d72c <_ZN21NarutoGameScreen2View11setupScreenEv+0xd4>)
 800d66c:	4b30      	ldr	r3, [pc, #192]	@ (800d730 <_ZN21NarutoGameScreen2View11setupScreenEv+0xd8>)
    if (randomSeed == 0) randomSeed = 12345;
 800d66e:	f243 0239 	movw	r2, #12345	@ 0x3039
 800d672:	2800      	cmp	r0, #0
 800d674:	bf18      	it	ne
 800d676:	4602      	movne	r2, r0
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800d678:	fb01 3302 	mla	r3, r1, r2, r3
 800d67c:	f8c4 3ac4 	str.w	r3, [r4, #2756]	@ 0xac4
    bossCurrentHP = bossMaxHP; // Boss bắt đầu với 130 HP
 800d680:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800d684:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
    playerHP = 100;
 800d688:	2364      	movs	r3, #100	@ 0x64
    menuOpen = false;
 800d68a:	2500      	movs	r5, #0
    playerHP = 100;
 800d68c:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    bossPhase = 1;
 800d690:	2301      	movs	r3, #1
 800d692:	f8c4 3a6c 	str.w	r3, [r4, #2668]	@ 0xa6c
    hideAllPlayerPowerUps();
 800d696:	4620      	mov	r0, r4
    menuOpen = false;
 800d698:	f8a4 5a68 	strh.w	r5, [r4, #2664]	@ 0xa68
    rageMode = false;
 800d69c:	f884 5a78 	strb.w	r5, [r4, #2680]	@ 0xa78
    turnCounter = 0;
 800d6a0:	f8c4 5aa0 	str.w	r5, [r4, #2720]	@ 0xaa0
    playerPowerUpType = 0;
 800d6a4:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
    aiPowerUpType = 0; // Boss không có power-up
 800d6a8:	f8c4 5aa8 	str.w	r5, [r4, #2728]	@ 0xaa8
    playerPowerUpActive = false;
 800d6ac:	f8c4 5aac 	str.w	r5, [r4, #2732]	@ 0xaac
    rageModeTimer = 0;
 800d6b0:	f8c4 5a7c 	str.w	r5, [r4, #2684]	@ 0xa7c
    playerChakraLevel = 0;
 800d6b4:	f8c4 5a80 	str.w	r5, [r4, #2688]	@ 0xa80
    aiChakraLevel = 0;
 800d6b8:	f8c4 5a84 	str.w	r5, [r4, #2692]	@ 0xa84
    playerDefending = false;
 800d6bc:	f8c4 5a88 	str.w	r5, [r4, #2696]	@ 0xa88
    aiPersonality = 0; // 3 = Adaptive Boss Mode
 800d6c0:	f8c4 5a8c 	str.w	r5, [r4, #2700]	@ 0xa8c
    resetTimer = 0;
 800d6c4:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800d6c8:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    autoReturnTimer = 0;
 800d6cc:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = false;
 800d6d0:	f884 5a9c 	strb.w	r5, [r4, #2716]	@ 0xa9c
    hideAllPlayerPowerUps();
 800d6d4:	f7ff f9fd 	bl	800cad2 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps(); // Boss không có power-up nhưng vẫn hide để đảm bảo
 800d6d8:	4620      	mov	r0, r4
 800d6da:	f7ff fa75 	bl	800cbc8 <_ZN21NarutoGameScreen2View17hideAllAIPowerUpsEv>
    updatePlayerHPDisplay();
 800d6de:	4620      	mov	r0, r4
 800d6e0:	f7ff fc6e 	bl	800cfc0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm mới cho boss
 800d6e4:	4620      	mov	r0, r4
 800d6e6:	f7ff ff10 	bl	800d50a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800d6ea:	4620      	mov	r0, r4
 800d6ec:	f7ff fb31 	bl	800cd52 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
    updateAIChakraDisplay();
 800d6f0:	4620      	mov	r0, r4
 800d6f2:	f7ff fb62 	bl	800cdba <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    resetNarutoState();
 800d6f6:	4620      	mov	r0, r4
 800d6f8:	f7ff fa83 	bl	800cc02 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
    resetBleachState();
 800d6fc:	4620      	mov	r0, r4
 800d6fe:	f7ff fab1 	bl	800cc64 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
    hideAllFireEffects();
 800d702:	4620      	mov	r0, r4
    fireAnimationTimer = 0;
 800d704:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800d708:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800d70c:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800d710:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800d714:	f884 5ac0 	strb.w	r5, [r4, #2752]	@ 0xac0
    hideAllFireEffects();
 800d718:	f7ff f834 	bl	800c784 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    forceBossHPVisible();
 800d71c:	4620      	mov	r0, r4
 800d71e:	f7ff f9bc 	bl	800ca9a <_ZN21NarutoGameScreen2View18forceBossHPVisibleEv>
    easterEggActivated = false;
 800d722:	f884 5ac8 	strb.w	r5, [r4, #2760]	@ 0xac8
        easterEggTimer = 0;
 800d726:	f8c4 5acc 	str.w	r5, [r4, #2764]	@ 0xacc
}
 800d72a:	bd38      	pop	{r3, r4, r5, pc}
 800d72c:	0019660d 	.word	0x0019660d
 800d730:	3c6ef35f 	.word	0x3c6ef35f

0800d734 <_ZN21NarutoGameScreen2View15handleTickEventEv>:
{
 800d734:	b538      	push	{r3, r4, r5, lr}
    if (frameCounter < 10 && !gameEnded) {
 800d736:	4d39      	ldr	r5, [pc, #228]	@ (800d81c <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe8>)
 800d738:	682b      	ldr	r3, [r5, #0]
 800d73a:	2b09      	cmp	r3, #9
{
 800d73c:	4604      	mov	r4, r0
    if (frameCounter < 10 && !gameEnded) {
 800d73e:	dc0f      	bgt.n	800d760 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x2c>
 800d740:	f890 2a69 	ldrb.w	r2, [r0, #2665]	@ 0xa69
 800d744:	b962      	cbnz	r2, 800d760 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x2c>
        frameCounter++;
 800d746:	3301      	adds	r3, #1
 800d748:	602b      	str	r3, [r5, #0]
        updateBossHPDisplay();
 800d74a:	f7ff fede 	bl	800d50a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
        if (frameCounter == 5) {
 800d74e:	682b      	ldr	r3, [r5, #0]
 800d750:	2b05      	cmp	r3, #5
 800d752:	d105      	bne.n	800d760 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x2c>
            toggleLED();
 800d754:	f7fe ff94 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            toggleLED();
 800d758:	f7fe ff92 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            toggleLED();
 800d75c:	f7fe ff90 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    if (easterEggActivated) {
 800d760:	f894 2ac8 	ldrb.w	r2, [r4, #2760]	@ 0xac8
 800d764:	b1a2      	cbz	r2, 800d790 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x5c>
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800d766:	f8d4 3acc 	ldr.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800d76a:	f640 32b7 	movw	r2, #2999	@ 0xbb7
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800d76e:	3310      	adds	r3, #16
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800d770:	4293      	cmp	r3, r2
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800d772:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800d776:	dd4f      	ble.n	800d818 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe4>
            HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800d778:	4829      	ldr	r0, [pc, #164]	@ (800d820 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xec>)
 800d77a:	2200      	movs	r2, #0
 800d77c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800d780:	f003 f83a 	bl	80107f8 <HAL_GPIO_WritePin>
 800d784:	f00d faa6 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800d788:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            application().gotoCharacter1ScreenNoTransition();
 800d78c:	f7f6 bada 	b.w	8003d44 <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv>
    if (!gameEnded) {
 800d790:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800d794:	bb4d      	cbnz	r5, 800d7ea <_ZN21NarutoGameScreen2View15handleTickEventEv+0xb6>
        if (resetTimerActive) {
 800d796:	f894 3a94 	ldrb.w	r3, [r4, #2708]	@ 0xa94
 800d79a:	b1cb      	cbz	r3, 800d7d0 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x9c>
            resetTimer += 16;
 800d79c:	f8d4 3a90 	ldr.w	r3, [r4, #2704]	@ 0xa90
 800d7a0:	3310      	adds	r3, #16
            if (resetTimer >= RESET_TIME_MS) {
 800d7a2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
            resetTimer += 16;
 800d7a6:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
            if (resetTimer >= RESET_TIME_MS) {
 800d7aa:	db11      	blt.n	800d7d0 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x9c>
                resetNarutoState();
 800d7ac:	4620      	mov	r0, r4
 800d7ae:	f7ff fa28 	bl	800cc02 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
                resetBleachState();
 800d7b2:	4620      	mov	r0, r4
 800d7b4:	f7ff fa56 	bl	800cc64 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
                if (!fireAnimationActive) {
 800d7b8:	f894 3ab4 	ldrb.w	r3, [r4, #2740]	@ 0xab4
                resetTimerActive = false;
 800d7bc:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
                resetTimer = 0;
 800d7c0:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
                playerDefending = false;
 800d7c4:	f8a4 5a88 	strh.w	r5, [r4, #2696]	@ 0xa88
                if (!fireAnimationActive) {
 800d7c8:	b913      	cbnz	r3, 800d7d0 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x9c>
                    checkTurnComplete();
 800d7ca:	4620      	mov	r0, r4
 800d7cc:	f7ff fcf8 	bl	800d1c0 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv>
        if (rageMode) {
 800d7d0:	f894 3a78 	ldrb.w	r3, [r4, #2680]	@ 0xa78
 800d7d4:	b123      	cbz	r3, 800d7e0 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xac>
            rageModeTimer += 16;
 800d7d6:	f8d4 3a7c 	ldr.w	r3, [r4, #2684]	@ 0xa7c
 800d7da:	3310      	adds	r3, #16
 800d7dc:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
        updateFireAnimation();
 800d7e0:	4620      	mov	r0, r4
}
 800d7e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        updateFireAnimation();
 800d7e6:	f7ff b81b 	b.w	800c820 <_ZN21NarutoGameScreen2View19updateFireAnimationEv>
        if (autoReturnTimerActive) {
 800d7ea:	f894 3a9c 	ldrb.w	r3, [r4, #2716]	@ 0xa9c
 800d7ee:	b19b      	cbz	r3, 800d818 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe4>
            autoReturnTimer += 16;
 800d7f0:	f8d4 3a98 	ldr.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800d7f4:	f241 716f 	movw	r1, #5999	@ 0x176f
            autoReturnTimer += 16;
 800d7f8:	3310      	adds	r3, #16
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800d7fa:	428b      	cmp	r3, r1
            autoReturnTimer += 16;
 800d7fc:	f8c4 3a98 	str.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800d800:	dd0a      	ble.n	800d818 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe4>
                HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800d802:	4807      	ldr	r0, [pc, #28]	@ (800d820 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xec>)
 800d804:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800d808:	f002 fff6 	bl	80107f8 <HAL_GPIO_WritePin>
 800d80c:	f00d fa62 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800d810:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                application().gotoBackUpScreenScreenNoTransition();
 800d814:	f7f6 ba26 	b.w	8003c64 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
}
 800d818:	bd38      	pop	{r3, r4, r5, pc}
 800d81a:	bf00      	nop
 800d81c:	20002b14 	.word	0x20002b14
 800d820:	40021800 	.word	0x40021800

0800d824 <_ZN21NarutoGameScreen2View12playerAttackEv>:
{
 800d824:	b570      	push	{r4, r5, r6, lr}
 800d826:	4604      	mov	r4, r0
    resetNarutoState();
 800d828:	f7ff f9eb 	bl	800cc02 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
 800d82c:	2300      	movs	r3, #0
 800d82e:	f884 3695 	strb.w	r3, [r4, #1685]	@ 0x695
 800d832:	2301      	movs	r3, #1
 800d834:	f884 3771 	strb.w	r3, [r4, #1905]	@ 0x771
    naruto_atk.invalidate();
 800d838:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800d83c:	f00e fbfc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800d840:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800d844:	f00e fbf8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800d848:	2208      	movs	r2, #8
 800d84a:	2103      	movs	r1, #3
 800d84c:	4620      	mov	r0, r4
 800d84e:	f7fe ff73 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800d852:	f894 5aac 	ldrb.w	r5, [r4, #2732]	@ 0xaac
 800d856:	f894 6a89 	ldrb.w	r6, [r4, #2697]	@ 0xa89
    int baseDamage = generateRandomNumber(3, 8);
 800d85a:	4603      	mov	r3, r0
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800d85c:	2d00      	cmp	r5, #0
 800d85e:	d041      	beq.n	800d8e4 <_ZN21NarutoGameScreen2View12playerAttackEv+0xc0>
 800d860:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800d864:	2a01      	cmp	r2, #1
 800d866:	d13d      	bne.n	800d8e4 <_ZN21NarutoGameScreen2View12playerAttackEv+0xc0>
        finalDamage = (int)(baseDamage * 2.5); // x2.5 như yêu cầu
 800d868:	f7f2 ff8e 	bl	8000788 <__aeabi_i2d>
 800d86c:	4b1e      	ldr	r3, [pc, #120]	@ (800d8e8 <_ZN21NarutoGameScreen2View12playerAttackEv+0xc4>)
 800d86e:	2200      	movs	r2, #0
 800d870:	f7f2 fd0e 	bl	8000290 <__aeabi_dmul>
 800d874:	f7f2 fff2 	bl	800085c <__aeabi_d2iz>
 800d878:	4603      	mov	r3, r0
    if (isDefending) {
 800d87a:	b11e      	cbz	r6, 800d884 <_ZN21NarutoGameScreen2View12playerAttackEv+0x60>
        if (finalDamage < 1) finalDamage = 1;
 800d87c:	2b01      	cmp	r3, #1
        finalDamage = finalDamage / 2;
 800d87e:	bfcc      	ite	gt
 800d880:	105b      	asrgt	r3, r3, #1
        if (finalDamage < 1) finalDamage = 1;
 800d882:	2301      	movle	r3, #1
    bossCurrentHP -= actualDamage;
 800d884:	f8d4 2a74 	ldr.w	r2, [r4, #2676]	@ 0xa74
 800d888:	1ad2      	subs	r2, r2, r3
    if (bossCurrentHP < 0) bossCurrentHP = 0;
 800d88a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800d88e:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    playerChakraLevel += generateRandomNumber(5, 10);
 800d892:	2105      	movs	r1, #5
 800d894:	220a      	movs	r2, #10
 800d896:	4620      	mov	r0, r4
 800d898:	f7fe ff4e 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800d89c:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800d8a0:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800d8a2:	2b64      	cmp	r3, #100	@ 0x64
 800d8a4:	bfa8      	it	ge
 800d8a6:	2364      	movge	r3, #100	@ 0x64
 800d8a8:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (hasDoubleAttack) {
 800d8ac:	b13d      	cbz	r5, 800d8be <_ZN21NarutoGameScreen2View12playerAttackEv+0x9a>
        playerPowerUpActive = false;
 800d8ae:	2300      	movs	r3, #0
 800d8b0:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d8b4:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d8b8:	4620      	mov	r0, r4
 800d8ba:	f7ff f927 	bl	800cb0c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm boss mới
 800d8be:	4620      	mov	r0, r4
 800d8c0:	f7ff fe23 	bl	800d50a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800d8c4:	4620      	mov	r0, r4
 800d8c6:	f7ff fa44 	bl	800cd52 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
    toggleLED();
 800d8ca:	f7fe fed9 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800d8ce:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800d8d0:	2200      	movs	r2, #0
    playerActionDone = true;
 800d8d2:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800d8d6:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800d8da:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d8de:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d8e2:	bd70      	pop	{r4, r5, r6, pc}
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800d8e4:	2500      	movs	r5, #0
 800d8e6:	e7c8      	b.n	800d87a <_ZN21NarutoGameScreen2View12playerAttackEv+0x56>
 800d8e8:	40040000 	.word	0x40040000

0800d8ec <_ZN21NarutoGameScreen2View13playerSpecialEv>:
{
 800d8ec:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded || playerChakraLevel < 100) return;
 800d8ee:	f890 6a69 	ldrb.w	r6, [r0, #2665]	@ 0xa69
{
 800d8f2:	4604      	mov	r4, r0
    if (gameEnded || playerChakraLevel < 100) return;
 800d8f4:	2e00      	cmp	r6, #0
 800d8f6:	d14a      	bne.n	800d98e <_ZN21NarutoGameScreen2View13playerSpecialEv+0xa2>
 800d8f8:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800d8fc:	2b63      	cmp	r3, #99	@ 0x63
 800d8fe:	dd46      	ble.n	800d98e <_ZN21NarutoGameScreen2View13playerSpecialEv+0xa2>
 800d900:	2501      	movs	r5, #1
    resetNarutoState();
 800d902:	f7ff f97e 	bl	800cc02 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
    naruto_spe.invalidate();
 800d906:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800d90a:	f884 6695 	strb.w	r6, [r4, #1685]	@ 0x695
 800d90e:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800d912:	f00e fb91 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800d916:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800d91a:	f00e fb8d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (isDefending) {
 800d91e:	f894 3a89 	ldrb.w	r3, [r4, #2697]	@ 0xa89
    playerChakraLevel = 0;
 800d922:	f8c4 6a80 	str.w	r6, [r4, #2688]	@ 0xa80
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800d926:	2b00      	cmp	r3, #0
    bossCurrentHP -= actualDamage;
 800d928:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800d92c:	bf14      	ite	ne
 800d92e:	2214      	movne	r2, #20
 800d930:	2228      	moveq	r2, #40	@ 0x28
    bossCurrentHP -= actualDamage;
 800d932:	1a9b      	subs	r3, r3, r2
    if (bossCurrentHP < 0) bossCurrentHP = 0;
 800d934:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d938:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
    updateBossHPDisplay();
 800d93c:	4620      	mov	r0, r4
 800d93e:	f7ff fde4 	bl	800d50a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800d942:	4620      	mov	r0, r4
 800d944:	f7ff fa05 	bl	800cd52 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
        toggleLED(); // 6 LED blinks để báo hiệu special damage
 800d948:	f7fe fe9a 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d94c:	f7fe fe98 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d950:	f7fe fe96 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d954:	f7fe fe94 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d958:	f7fe fe92 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d95c:	f7fe fe90 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    if (bossCurrentHP <= 0) {
 800d960:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    playerActionDone = true;
 800d964:	f884 5aae 	strb.w	r5, [r4, #2734]	@ 0xaae
    if (bossCurrentHP <= 0) {
 800d968:	2b00      	cmp	r3, #0
    playerSpecialUsed = true; // Đánh dấu đã dùng special (không có power-up generation)
 800d96a:	f884 5a8a 	strb.w	r5, [r4, #2698]	@ 0xa8a
    if (bossCurrentHP <= 0) {
 800d96e:	dc06      	bgt.n	800d97e <_ZN21NarutoGameScreen2View13playerSpecialEv+0x92>
        if (!gameEnded) {
 800d970:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800d974:	b91b      	cbnz	r3, 800d97e <_ZN21NarutoGameScreen2View13playerSpecialEv+0x92>
            endGame(true); // Player thắng
 800d976:	4629      	mov	r1, r5
 800d978:	4620      	mov	r0, r4
 800d97a:	f7ff fa53 	bl	800ce24 <_ZN21NarutoGameScreen2View7endGameEb>
    toggleLED();
 800d97e:	f7fe fe7f 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    resetTimer = 0;
 800d982:	2300      	movs	r3, #0
 800d984:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d988:	2301      	movs	r3, #1
 800d98a:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d98e:	bd70      	pop	{r4, r5, r6, pc}

0800d990 <_ZN21NarutoGameScreen2View8aiDefendEv>:
{
 800d990:	b538      	push	{r3, r4, r5, lr}
    if (gameEnded) return;
 800d992:	f890 5a69 	ldrb.w	r5, [r0, #2665]	@ 0xa69
{
 800d996:	4604      	mov	r4, r0
    if (gameEnded) return;
 800d998:	2d00      	cmp	r5, #0
 800d99a:	d140      	bne.n	800da1e <_ZN21NarutoGameScreen2View8aiDefendEv+0x8e>
    resetBleachState();
 800d99c:	f7ff f962 	bl	800cc64 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
 800d9a0:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800d9a4:	2501      	movs	r5, #1
    bleach_def.invalidate();
 800d9a6:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800d9aa:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800d9ae:	f00e fb43 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800d9b2:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d9b6:	f00e fb3f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800d9ba:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
    aiDefending = true;
 800d9be:	f884 5a89 	strb.w	r5, [r4, #2697]	@ 0xa89
    switch(bossPhase) {
 800d9c2:	2b03      	cmp	r3, #3
 800d9c4:	d02c      	beq.n	800da20 <_ZN21NarutoGameScreen2View8aiDefendEv+0x90>
 800d9c6:	2b04      	cmp	r3, #4
 800d9c8:	d02d      	beq.n	800da26 <_ZN21NarutoGameScreen2View8aiDefendEv+0x96>
 800d9ca:	2b02      	cmp	r3, #2
            healAmount = generateRandomNumber(2, 5);
 800d9cc:	bf19      	ittee	ne
 800d9ce:	2205      	movne	r2, #5
 800d9d0:	2102      	movne	r1, #2
            healAmount = generateRandomNumber(3, 6);
 800d9d2:	2206      	moveq	r2, #6
 800d9d4:	2103      	moveq	r1, #3
            healAmount = generateRandomNumber(5, 8);
 800d9d6:	4620      	mov	r0, r4
 800d9d8:	f7fe feae 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    bossCurrentHP += healAmount;
 800d9dc:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800d9e0:	4418      	add	r0, r3
    if (bossCurrentHP > bossMaxHP) bossCurrentHP = bossMaxHP;
 800d9e2:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800d9e6:	4298      	cmp	r0, r3
 800d9e8:	bfd4      	ite	le
 800d9ea:	f8c4 0a74 	strle.w	r0, [r4, #2676]	@ 0xa74
 800d9ee:	f8c4 3a74 	strgt.w	r3, [r4, #2676]	@ 0xa74
    aiChakraLevel += generateRandomNumber(8, 12); // GIẢM TỪ 12-20 XUỐNG 8-12
 800d9f2:	220c      	movs	r2, #12
 800d9f4:	2108      	movs	r1, #8
 800d9f6:	4620      	mov	r0, r4
 800d9f8:	f7fe fe9e 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800d9fc:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800da00:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800da02:	2b64      	cmp	r3, #100	@ 0x64
 800da04:	bfa8      	it	ge
 800da06:	2364      	movge	r3, #100	@ 0x64
 800da08:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    updateBossHPDisplay();
 800da0c:	4620      	mov	r0, r4
 800da0e:	f7ff fd7c 	bl	800d50a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updateAIChakraDisplay();
 800da12:	4620      	mov	r0, r4
 800da14:	f7ff f9d1 	bl	800cdba <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    aiActionDone = true;
 800da18:	2301      	movs	r3, #1
 800da1a:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
}
 800da1e:	bd38      	pop	{r3, r4, r5, pc}
            healAmount = generateRandomNumber(4, 7);
 800da20:	2207      	movs	r2, #7
 800da22:	2104      	movs	r1, #4
 800da24:	e7d7      	b.n	800d9d6 <_ZN21NarutoGameScreen2View8aiDefendEv+0x46>
            healAmount = generateRandomNumber(5, 8);
 800da26:	2208      	movs	r2, #8
 800da28:	2105      	movs	r1, #5
 800da2a:	e7d4      	b.n	800d9d6 <_ZN21NarutoGameScreen2View8aiDefendEv+0x46>

0800da2c <_ZN21NarutoGameScreen2View15performAIActionEv>:
	if (gameEnded || bossCurrentHP <= 0) {
 800da2c:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
{
 800da30:	b570      	push	{r4, r5, r6, lr}
 800da32:	4605      	mov	r5, r0
	if (gameEnded || bossCurrentHP <= 0) {
 800da34:	2b00      	cmp	r3, #0
 800da36:	f040 811f 	bne.w	800dc78 <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
 800da3a:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800da3e:	2b00      	cmp	r3, #0
 800da40:	f340 811a 	ble.w	800dc78 <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
    if (playerHP <= 0) {
 800da44:	f8d0 6a64 	ldr.w	r6, [r0, #2660]	@ 0xa64
 800da48:	2e00      	cmp	r6, #0
 800da4a:	f340 8115 	ble.w	800dc78 <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
    if (aiPowerUpActive) {
 800da4e:	f890 2aad 	ldrb.w	r2, [r0, #2733]	@ 0xaad
 800da52:	b99a      	cbnz	r2, 800da7c <_ZN21NarutoGameScreen2View15performAIActionEv+0x50>
    	int aiHPPercent = (bossCurrentHP * 100) / bossMaxHP;
 800da54:	2264      	movs	r2, #100	@ 0x64
 800da56:	4353      	muls	r3, r2
 800da58:	f8d5 2a70 	ldr.w	r2, [r5, #2672]	@ 0xa70
 800da5c:	fb93 f3f2 	sdiv	r3, r3, r2
        bool playerCanSpecial = (playerChakraLevel >= 100);
 800da60:	f8d5 2a80 	ldr.w	r2, [r5, #2688]	@ 0xa80
        switch(aiPersonality)
 800da64:	f8d5 1a8c 	ldr.w	r1, [r5, #2700]	@ 0xa8c
        int baseDefendBonus = 0;
 800da68:	2a63      	cmp	r2, #99	@ 0x63
 800da6a:	bfcc      	ite	gt
 800da6c:	2419      	movgt	r4, #25
 800da6e:	2400      	movle	r4, #0
        switch(aiPersonality)
 800da70:	2903      	cmp	r1, #3
 800da72:	d813      	bhi.n	800da9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
 800da74:	e8df f001 	tbb	[pc, r1]
 800da78:	c89c6329 	.word	0xc89c6329
        switch(aiPowerUpType) {
 800da7c:	f8d0 1aa8 	ldr.w	r1, [r0, #2728]	@ 0xaa8
 800da80:	2901      	cmp	r1, #1
 800da82:	d010      	beq.n	800daa6 <_ZN21NarutoGameScreen2View15performAIActionEv+0x7a>
 800da84:	2904      	cmp	r1, #4
 800da86:	d1e5      	bne.n	800da54 <_ZN21NarutoGameScreen2View15performAIActionEv+0x28>
                if (aiChakraLevel >= 100) {
 800da88:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800da8c:	2b63      	cmp	r3, #99	@ 0x63
 800da8e:	dd05      	ble.n	800da9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
                    if (generateRandomNumber(1, 100) <= 50) {
 800da90:	2264      	movs	r2, #100	@ 0x64
 800da92:	2101      	movs	r1, #1
                           if (generateRandomNumber(1, 100) <= 50) {
 800da94:	f7fe fe50 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800da98:	2832      	cmp	r0, #50	@ 0x32
 800da9a:	dd2a      	ble.n	800daf2 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800da9c:	4628      	mov	r0, r5
}
 800da9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800daa2:	f7ff bbe5 	b.w	800d270 <_ZN21NarutoGameScreen2View8aiAttackEv>
                if (aiChakraLevel >= 100) {
 800daa6:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800daaa:	2b63      	cmp	r3, #99	@ 0x63
                    int roll = generateRandomNumber(1, 100);
 800daac:	f04f 0264 	mov.w	r2, #100	@ 0x64
                if (aiChakraLevel >= 100) {
 800dab0:	dd06      	ble.n	800dac0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x94>
                    int roll = generateRandomNumber(1, 100);
 800dab2:	f7fe fe41 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    if (roll <= 80) {
 800dab6:	2850      	cmp	r0, #80	@ 0x50
 800dab8:	ddf0      	ble.n	800da9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
                    } else if (roll <= 90) {
 800daba:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 70) {
 800dabc:	dd19      	ble.n	800daf2 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
 800dabe:	e096      	b.n	800dbee <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
                    if (generateRandomNumber(1, 100) <= 90) {
 800dac0:	f7fe fe3a 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dac4:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 60) {
 800dac6:	dde9      	ble.n	800da9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
 800dac8:	e091      	b.n	800dbee <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
                if (aiChakraLevel >= 100) {
 800daca:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800dace:	2a63      	cmp	r2, #99	@ 0x63
 800dad0:	dd22      	ble.n	800db18 <_ZN21NarutoGameScreen2View15performAIActionEv+0xec>
                    if (aiHPPercent >= 80) {
 800dad2:	2b4f      	cmp	r3, #79	@ 0x4f
 800dad4:	dd17      	ble.n	800db06 <_ZN21NarutoGameScreen2View15performAIActionEv+0xda>
                        defendChance = 50 + baseDefendBonus;
 800dad6:	3432      	adds	r4, #50	@ 0x32
                    if (playerHPPercent <= 25) {
 800dad8:	2e19      	cmp	r6, #25
                        defendChance -= 10;
 800dada:	bfd8      	it	le
 800dadc:	3c0a      	suble	r4, #10
                    int roll = generateRandomNumber(1, 100);
 800dade:	2264      	movs	r2, #100	@ 0x64
 800dae0:	2101      	movs	r1, #1
 800dae2:	4628      	mov	r0, r5
 800dae4:	f7fe fe28 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    if (defendChance > 70) defendChance = 70;
 800dae8:	2c46      	cmp	r4, #70	@ 0x46
 800daea:	bfa8      	it	ge
 800daec:	2446      	movge	r4, #70	@ 0x46
                    if (roll <= defendChance) {
 800daee:	4284      	cmp	r4, r0
 800daf0:	da7d      	bge.n	800dbee <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800daf2:	f8d5 3a84 	ldr.w	r3, [r5, #2692]	@ 0xa84
 800daf6:	2b63      	cmp	r3, #99	@ 0x63
 800daf8:	f340 80be 	ble.w	800dc78 <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
 800dafc:	4628      	mov	r0, r5
}
 800dafe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800db02:	f7ff bc21 	b.w	800d348 <_ZN21NarutoGameScreen2View9aiSpecialEv>
                    } else if (aiHPPercent >= 60) {
 800db06:	2b3b      	cmp	r3, #59	@ 0x3b
 800db08:	dd01      	ble.n	800db0e <_ZN21NarutoGameScreen2View15performAIActionEv+0xe2>
                        defendChance = 40 + baseDefendBonus;
 800db0a:	3428      	adds	r4, #40	@ 0x28
                        specialChance = 60 - (baseDefendBonus / 2);
 800db0c:	e7e4      	b.n	800dad8 <_ZN21NarutoGameScreen2View15performAIActionEv+0xac>
                    } else if (aiHPPercent >= 30) {
 800db0e:	2b1d      	cmp	r3, #29
                        defendChance = 30 + baseDefendBonus;
 800db10:	bfcc      	ite	gt
 800db12:	341e      	addgt	r4, #30
                        defendChance = 20 + baseDefendBonus;
 800db14:	3414      	addle	r4, #20
                        specialChance = 80 - (baseDefendBonus / 2);
 800db16:	e7df      	b.n	800dad8 <_ZN21NarutoGameScreen2View15performAIActionEv+0xac>
                    if (aiHPPercent >= 70) {
 800db18:	2b45      	cmp	r3, #69	@ 0x45
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800db1a:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800db1e:	f04f 0101 	mov.w	r1, #1
 800db22:	4628      	mov	r0, r5
                    if (aiHPPercent >= 70) {
 800db24:	dd03      	ble.n	800db2e <_ZN21NarutoGameScreen2View15performAIActionEv+0x102>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800db26:	f7fe fe07 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 30 + baseDefendBonus;
 800db2a:	341e      	adds	r4, #30
 800db2c:	e004      	b.n	800db38 <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 40) {
 800db2e:	2b27      	cmp	r3, #39	@ 0x27
 800db30:	ddf9      	ble.n	800db26 <_ZN21NarutoGameScreen2View15performAIActionEv+0xfa>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800db32:	f7fe fe01 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 50 + baseDefendBonus;
 800db36:	3432      	adds	r4, #50	@ 0x32
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800db38:	42a0      	cmp	r0, r4
                           if (generateRandomNumber(1, 100) <= 60) {
 800db3a:	dd58      	ble.n	800dbee <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
 800db3c:	e7ae      	b.n	800da9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
                if (aiChakraLevel >= 100) {
 800db3e:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800db42:	2a63      	cmp	r2, #99	@ 0x63
 800db44:	dd17      	ble.n	800db76 <_ZN21NarutoGameScreen2View15performAIActionEv+0x14a>
                    if (aiHPPercent >= 80) {
 800db46:	2b4f      	cmp	r3, #79	@ 0x4f
 800db48:	dd0c      	ble.n	800db64 <_ZN21NarutoGameScreen2View15performAIActionEv+0x138>
                        defendChance = 70 + baseDefendBonus;
 800db4a:	3446      	adds	r4, #70	@ 0x46
                    if (playerHPPercent <= 20) {
 800db4c:	2e14      	cmp	r6, #20
                        defendChance -= 5;
 800db4e:	bfd8      	it	le
 800db50:	3c05      	suble	r4, #5
                    int roll = generateRandomNumber(1, 100);
 800db52:	2264      	movs	r2, #100	@ 0x64
 800db54:	2101      	movs	r1, #1
 800db56:	4628      	mov	r0, r5
 800db58:	f7fe fdee 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    if (defendChance > 85) defendChance = 85;
 800db5c:	2c55      	cmp	r4, #85	@ 0x55
 800db5e:	bfa8      	it	ge
 800db60:	2455      	movge	r4, #85	@ 0x55
 800db62:	e7c4      	b.n	800daee <_ZN21NarutoGameScreen2View15performAIActionEv+0xc2>
                    } else if (aiHPPercent >= 50) {
 800db64:	2b31      	cmp	r3, #49	@ 0x31
 800db66:	dd01      	ble.n	800db6c <_ZN21NarutoGameScreen2View15performAIActionEv+0x140>
                        defendChance = 60 + baseDefendBonus;
 800db68:	343c      	adds	r4, #60	@ 0x3c
                        specialChance = 40 - (baseDefendBonus / 2);
 800db6a:	e7ef      	b.n	800db4c <_ZN21NarutoGameScreen2View15performAIActionEv+0x120>
                    } else if (aiHPPercent >= 25) {
 800db6c:	2b18      	cmp	r3, #24
                        defendChance = 45 + baseDefendBonus;
 800db6e:	bfcc      	ite	gt
 800db70:	342d      	addgt	r4, #45	@ 0x2d
                        defendChance = 30 + baseDefendBonus;
 800db72:	341e      	addle	r4, #30
                        specialChance = 70 - (baseDefendBonus / 2);
 800db74:	e7ea      	b.n	800db4c <_ZN21NarutoGameScreen2View15performAIActionEv+0x120>
                    if (aiHPPercent >= 60) {
 800db76:	2b3b      	cmp	r3, #59	@ 0x3b
 800db78:	dd0b      	ble.n	800db92 <_ZN21NarutoGameScreen2View15performAIActionEv+0x166>
                        int defendChance = 80 + baseDefendBonus;
 800db7a:	2c0f      	cmp	r4, #15
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800db7c:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800db80:	f04f 0101 	mov.w	r1, #1
 800db84:	4628      	mov	r0, r5
                        int defendChance = 80 + baseDefendBonus;
 800db86:	bfcc      	ite	gt
 800db88:	245f      	movgt	r4, #95	@ 0x5f
 800db8a:	2450      	movle	r4, #80	@ 0x50
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800db8c:	f7fe fdd4 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800db90:	e7d2      	b.n	800db38 <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 30) {
 800db92:	2b1d      	cmp	r3, #29
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800db94:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800db98:	f04f 0101 	mov.w	r1, #1
 800db9c:	4628      	mov	r0, r5
                    } else if (aiHPPercent >= 30) {
 800db9e:	dd03      	ble.n	800dba8 <_ZN21NarutoGameScreen2View15performAIActionEv+0x17c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800dba0:	f7fe fdca 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 65 + baseDefendBonus;
 800dba4:	3441      	adds	r4, #65	@ 0x41
 800dba6:	e7c7      	b.n	800db38 <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800dba8:	f7fe fdc6 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 40 + baseDefendBonus;
 800dbac:	3428      	adds	r4, #40	@ 0x28
 800dbae:	e7c3      	b.n	800db38 <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                if (aiChakraLevel >= 100) {
 800dbb0:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800dbb4:	2963      	cmp	r1, #99	@ 0x63
 800dbb6:	dd07      	ble.n	800dbc8 <_ZN21NarutoGameScreen2View15performAIActionEv+0x19c>
                    int roll = generateRandomNumber(1, 100);
 800dbb8:	2101      	movs	r1, #1
 800dbba:	2264      	movs	r2, #100	@ 0x64
 800dbbc:	4628      	mov	r0, r5
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800dbbe:	410c      	asrs	r4, r1
                    int roll = generateRandomNumber(1, 100);
 800dbc0:	f7fe fdba 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800dbc4:	342d      	adds	r4, #45	@ 0x2d
 800dbc6:	e792      	b.n	800daee <_ZN21NarutoGameScreen2View15performAIActionEv+0xc2>
                    if (aiHPPercent >= 70) {
 800dbc8:	2b45      	cmp	r3, #69	@ 0x45
 800dbca:	dd07      	ble.n	800dbdc <_ZN21NarutoGameScreen2View15performAIActionEv+0x1b0>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800dbcc:	2101      	movs	r1, #1
 800dbce:	2264      	movs	r2, #100	@ 0x64
 800dbd0:	4628      	mov	r0, r5
                        int defendChance = 60 + (baseDefendBonus / 2);
 800dbd2:	410c      	asrs	r4, r1
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800dbd4:	f7fe fdb0 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 60 + (baseDefendBonus / 2);
 800dbd8:	343c      	adds	r4, #60	@ 0x3c
 800dbda:	e7ad      	b.n	800db38 <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800dbdc:	2a63      	cmp	r2, #99	@ 0x63
 800dbde:	dc0b      	bgt.n	800dbf8 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1cc>
                            action = generateRandomNumber(1, 2);
 800dbe0:	2202      	movs	r2, #2
 800dbe2:	2101      	movs	r1, #1
 800dbe4:	4628      	mov	r0, r5
 800dbe6:	f7fe fda7 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    switch(action)
 800dbea:	2802      	cmp	r0, #2
 800dbec:	d13e      	bne.n	800dc6c <_ZN21NarutoGameScreen2View15performAIActionEv+0x240>
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800dbee:	4628      	mov	r0, r5
}
 800dbf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800dbf4:	f7ff becc 	b.w	800d990 <_ZN21NarutoGameScreen2View8aiDefendEv>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800dbf8:	2264      	movs	r2, #100	@ 0x64
 800dbfa:	2101      	movs	r1, #1
 800dbfc:	4628      	mov	r0, r5
 800dbfe:	f7fe fd9b 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dc02:	281e      	cmp	r0, #30
 800dc04:	ddf3      	ble.n	800dbee <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
 800dc06:	e7eb      	b.n	800dbe0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1b4>
                   if (aiChakraLevel >= 100) {
 800dc08:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800dc0c:	2963      	cmp	r1, #99	@ 0x63
 800dc0e:	dd15      	ble.n	800dc3c <_ZN21NarutoGameScreen2View15performAIActionEv+0x210>
                       if (bossHPPercent <= 30) {
 800dc10:	2b1e      	cmp	r3, #30
 800dc12:	dc06      	bgt.n	800dc22 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1f6>
                           if (generateRandomNumber(1, 100) <= 70) {
 800dc14:	2264      	movs	r2, #100	@ 0x64
 800dc16:	2101      	movs	r1, #1
 800dc18:	4628      	mov	r0, r5
 800dc1a:	f7fe fd8d 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dc1e:	2846      	cmp	r0, #70	@ 0x46
 800dc20:	e74c      	b.n	800dabc <_ZN21NarutoGameScreen2View15performAIActionEv+0x90>
                       } else if (playerCanSpecial) {
 800dc22:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 40) {
 800dc24:	f04f 0101 	mov.w	r1, #1
 800dc28:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800dc2c:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800dc2e:	f77f af31 	ble.w	800da94 <_ZN21NarutoGameScreen2View15performAIActionEv+0x68>
                           if (generateRandomNumber(1, 100) <= 40) {
 800dc32:	f7fe fd81 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dc36:	2828      	cmp	r0, #40	@ 0x28
 800dc38:	ddd9      	ble.n	800dbee <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
 800dc3a:	e75a      	b.n	800daf2 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
                       if (bossHPPercent <= 50) {
 800dc3c:	2b32      	cmp	r3, #50	@ 0x32
 800dc3e:	dc06      	bgt.n	800dc4e <_ZN21NarutoGameScreen2View15performAIActionEv+0x222>
                           if (generateRandomNumber(1, 100) <= 70) {
 800dc40:	2264      	movs	r2, #100	@ 0x64
 800dc42:	2101      	movs	r1, #1
 800dc44:	4628      	mov	r0, r5
 800dc46:	f7fe fd77 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dc4a:	2846      	cmp	r0, #70	@ 0x46
 800dc4c:	e775      	b.n	800db3a <_ZN21NarutoGameScreen2View15performAIActionEv+0x10e>
                       } else if (playerCanSpecial) {
 800dc4e:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 60) {
 800dc50:	f04f 0101 	mov.w	r1, #1
 800dc54:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800dc58:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800dc5a:	dd03      	ble.n	800dc64 <_ZN21NarutoGameScreen2View15performAIActionEv+0x238>
                           if (generateRandomNumber(1, 100) <= 60) {
 800dc5c:	f7fe fd6c 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dc60:	283c      	cmp	r0, #60	@ 0x3c
 800dc62:	e76a      	b.n	800db3a <_ZN21NarutoGameScreen2View15performAIActionEv+0x10e>
                           if (generateRandomNumber(1, 100) <= 60) {
 800dc64:	f7fe fd68 	bl	800c738 <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dc68:	283c      	cmp	r0, #60	@ 0x3c
 800dc6a:	e72c      	b.n	800dac6 <_ZN21NarutoGameScreen2View15performAIActionEv+0x9a>
    switch(action)
 800dc6c:	2803      	cmp	r0, #3
 800dc6e:	f43f af40 	beq.w	800daf2 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
 800dc72:	2801      	cmp	r0, #1
 800dc74:	f43f af12 	beq.w	800da9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
}
 800dc78:	bd70      	pop	{r4, r5, r6, pc}

0800dc7a <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800dc7a:	b530      	push	{r4, r5, lr}
    if (evt.getType() == ClickEvent::PRESSED) {
 800dc7c:	790b      	ldrb	r3, [r1, #4]
{
 800dc7e:	b08b      	sub	sp, #44	@ 0x2c
 800dc80:	4604      	mov	r4, r0
 800dc82:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED) {
 800dc84:	2b00      	cmp	r3, #0
 800dc86:	f040 812b 	bne.w	800dee0 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
    	if (!gameEnded && !easterEggActivated) {
 800dc8a:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
        return clickX;
 800dc8e:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800dc92:	b98b      	cbnz	r3, 800dcb8 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
 800dc94:	f890 1ac8 	ldrb.w	r1, [r0, #2760]	@ 0xac8
 800dc98:	b971      	cbnz	r1, 800dcb8 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	                evt.getY() >= 62 && evt.getY() <= 234) {
 800dc9a:	f1a2 015e 	sub.w	r1, r2, #94	@ 0x5e
 800dc9e:	b289      	uxth	r1, r1
 800dca0:	2992      	cmp	r1, #146	@ 0x92
 800dca2:	d809      	bhi.n	800dcb8 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	            if (evt.getX() >= 94 && evt.getX() <= 240 &&
 800dca4:	8929      	ldrh	r1, [r5, #8]
 800dca6:	393e      	subs	r1, #62	@ 0x3e
 800dca8:	b289      	uxth	r1, r1
 800dcaa:	29ac      	cmp	r1, #172	@ 0xac
 800dcac:	d818      	bhi.n	800dce0 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x66>
}
 800dcae:	b00b      	add	sp, #44	@ 0x2c
 800dcb0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	                activateEasterEgg();
 800dcb4:	f7ff bb9e 	b.w	800d3f4 <_ZN21NarutoGameScreen2View17activateEasterEggEv>
        if (evt.getX() < 50 && evt.getY() < 50) {
 800dcb8:	2a31      	cmp	r2, #49	@ 0x31
 800dcba:	dc11      	bgt.n	800dce0 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x66>
        return clickY;
 800dcbc:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dcc0:	2a31      	cmp	r2, #49	@ 0x31
 800dcc2:	f300 8087 	bgt.w	800ddd4 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x15a>
            bossCurrentHP -= 30;
 800dcc6:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800dcca:	3b1e      	subs	r3, #30
            if (bossCurrentHP < 0) bossCurrentHP = 0;
 800dccc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
            updateBossHPDisplay();
 800dcd0:	4620      	mov	r0, r4
 800dcd2:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
}
 800dcd6:	b00b      	add	sp, #44	@ 0x2c
 800dcd8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updateBossHPDisplay();
 800dcdc:	f7ff bc15 	b.w	800d50a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
        if (evt.getX() > 190 && evt.getY() < 50) {
 800dce0:	2abe      	cmp	r2, #190	@ 0xbe
 800dce2:	dc6a      	bgt.n	800ddba <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x140>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800dce4:	3a65      	subs	r2, #101	@ 0x65
 800dce6:	b292      	uxth	r2, r2
 800dce8:	2a26      	cmp	r2, #38	@ 0x26
 800dcea:	f240 808c 	bls.w	800de06 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x18c>
        if (gameEnded) {
 800dcee:	2b00      	cmp	r3, #0
 800dcf0:	d04f      	beq.n	800dd92 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x118>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dcf2:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800dcf6:	4668      	mov	r0, sp
 800dcf8:	f00e fa3a 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcfc:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dd00:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dd04:	4668      	mov	r0, sp
 800dd06:	f7fc fd6f 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd0a:	2800      	cmp	r0, #0
 800dd0c:	f040 80ef 	bne.w	800deee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd10:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800dd14:	a802      	add	r0, sp, #8
 800dd16:	f00e fa2b 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd1a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dd1e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dd22:	a802      	add	r0, sp, #8
 800dd24:	f7fc fd60 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd28:	2800      	cmp	r0, #0
 800dd2a:	f040 80e0 	bne.w	800deee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd2e:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800dd32:	a804      	add	r0, sp, #16
 800dd34:	f00e fa1c 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd38:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dd3c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dd40:	a804      	add	r0, sp, #16
 800dd42:	f7fc fd51 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd46:	2800      	cmp	r0, #0
 800dd48:	f040 80d1 	bne.w	800deee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd4c:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800dd50:	a806      	add	r0, sp, #24
 800dd52:	f00e fa0d 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd56:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dd5a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dd5e:	a806      	add	r0, sp, #24
 800dd60:	f7fc fd42 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd64:	2800      	cmp	r0, #0
 800dd66:	f040 80c2 	bne.w	800deee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800dd6a:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800dd6e:	a808      	add	r0, sp, #32
 800dd70:	f00e f9fe 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd74:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dd78:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dd7c:	a808      	add	r0, sp, #32
 800dd7e:	f7fc fd33 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800dd82:	2800      	cmp	r0, #0
 800dd84:	f040 80b3 	bne.w	800deee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
        if (!gameEnded) {
 800dd88:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800dd8c:	2b00      	cmp	r3, #0
 800dd8e:	f040 80a7 	bne.w	800dee0 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
            if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800dd92:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800dd96:	a808      	add	r0, sp, #32
 800dd98:	f00e f9ea 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd9c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dda0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dda4:	a808      	add	r0, sp, #32
 800dda6:	f7fc fd1f 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800ddaa:	2800      	cmp	r0, #0
 800ddac:	d047      	beq.n	800de3e <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x1c4>
                toggleActionMenu();
 800ddae:	4620      	mov	r0, r4
}
 800ddb0:	b00b      	add	sp, #44	@ 0x2c
 800ddb2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleActionMenu();
 800ddb6:	f7fe be0a 	b.w	800c9ce <_ZN21NarutoGameScreen2View16toggleActionMenuEv>
 800ddba:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
        if (evt.getX() > 190 && evt.getY() < 50) {
 800ddbe:	2a31      	cmp	r2, #49	@ 0x31
 800ddc0:	dc14      	bgt.n	800ddec <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x172>
            playerHP = 0;
 800ddc2:	2300      	movs	r3, #0
            updatePlayerHPDisplay();
 800ddc4:	4620      	mov	r0, r4
            playerHP = 0;
 800ddc6:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
}
 800ddca:	b00b      	add	sp, #44	@ 0x2c
 800ddcc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updatePlayerHPDisplay();
 800ddd0:	f7ff b8f6 	b.w	800cfc0 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
        if (evt.getX() < 50 && evt.getY() > 270) {
 800ddd4:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800ddd8:	dd89      	ble.n	800dcee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x74>
                toggleLED();
 800ddda:	f7fe fc51 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800ddde:	f7fe fc4f 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800dde2:	b00b      	add	sp, #44	@ 0x2c
 800dde4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleLED();
 800dde8:	f7fe bc4a 	b.w	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800ddec:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800ddf0:	f77f af7d 	ble.w	800dcee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800ddf4:	2b00      	cmp	r3, #0
 800ddf6:	f47f af7c 	bne.w	800dcf2 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800ddfa:	4620      	mov	r0, r4
}
 800ddfc:	b00b      	add	sp, #44	@ 0x2c
 800ddfe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800de02:	f7ff b984 	b.w	800d10e <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800de06:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800de0a:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800de0e:	f77f af6e 	ble.w	800dcee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800de12:	2b00      	cmp	r3, #0
 800de14:	f47f af6d 	bne.w	800dcf2 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            for (int i = 0; i < turnCounter + 1; i++) {
 800de18:	461d      	mov	r5, r3
 800de1a:	f8d4 3aa0 	ldr.w	r3, [r4, #2720]	@ 0xaa0
 800de1e:	42ab      	cmp	r3, r5
 800de20:	da09      	bge.n	800de36 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x1bc>
            playerActionDone = true;
 800de22:	f240 1301 	movw	r3, #257	@ 0x101
 800de26:	4620      	mov	r0, r4
 800de28:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
}
 800de2c:	b00b      	add	sp, #44	@ 0x2c
 800de2e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800de32:	f7ff b996 	b.w	800d162 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0>
                toggleLED();
 800de36:	f7fe fc23 	bl	800c680 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            for (int i = 0; i < turnCounter + 1; i++) {
 800de3a:	3501      	adds	r5, #1
 800de3c:	e7ed      	b.n	800de1a <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x1a0>
            if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800de3e:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800de42:	a808      	add	r0, sp, #32
 800de44:	f00e f994 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de48:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800de4c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800de50:	a808      	add	r0, sp, #32
 800de52:	f7fc fcc9 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800de56:	2800      	cmp	r0, #0
 800de58:	d1a9      	bne.n	800ddae <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x134>
            if (menuOpen) {
 800de5a:	f894 3a68 	ldrb.w	r3, [r4, #2664]	@ 0xa68
 800de5e:	2b00      	cmp	r3, #0
 800de60:	d03e      	beq.n	800dee0 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800de62:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800de66:	a808      	add	r0, sp, #32
 800de68:	f00e f982 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de6c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800de70:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800de74:	a808      	add	r0, sp, #32
 800de76:	f7fc fcb7 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800de7a:	b158      	cbz	r0, 800de94 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x21a>
                    playerAttack();
 800de7c:	4620      	mov	r0, r4
 800de7e:	f7ff fcd1 	bl	800d824 <_ZN21NarutoGameScreen2View12playerAttackEv>
                    if (!gameEnded) performAIAction();
 800de82:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800de86:	bb93      	cbnz	r3, 800deee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
 800de88:	4620      	mov	r0, r4
}
 800de8a:	b00b      	add	sp, #44	@ 0x2c
 800de8c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                    if (!gameEnded) performAIAction();
 800de90:	f7ff bdcc 	b.w	800da2c <_ZN21NarutoGameScreen2View15performAIActionEv>
                else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800de94:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800de98:	a808      	add	r0, sp, #32
 800de9a:	f00e f969 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de9e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dea2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dea6:	a808      	add	r0, sp, #32
 800dea8:	f7fc fc9e 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800deac:	b118      	cbz	r0, 800deb6 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x23c>
                    playerDefend();
 800deae:	4620      	mov	r0, r4
 800deb0:	f7ff f98f 	bl	800d1d2 <_ZN21NarutoGameScreen2View12playerDefendEv>
                    if (!gameEnded) performAIAction();
 800deb4:	e7e5      	b.n	800de82 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x208>
                else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800deb6:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800deba:	a808      	add	r0, sp, #32
 800debc:	f00e f958 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dec0:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dec4:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dec8:	a808      	add	r0, sp, #32
 800deca:	f7fc fc8d 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800dece:	b138      	cbz	r0, 800dee0 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                    if (playerChakraLevel >= 100) {
 800ded0:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800ded4:	2b63      	cmp	r3, #99	@ 0x63
 800ded6:	dd0a      	ble.n	800deee <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                        playerSpecial();
 800ded8:	4620      	mov	r0, r4
 800deda:	f7ff fd07 	bl	800d8ec <_ZN21NarutoGameScreen2View13playerSpecialEv>
                        if (!gameEnded) performAIAction();
 800dede:	e7d0      	b.n	800de82 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x208>
    NarutoGameScreen2ViewBase::handleClickEvent(evt);
 800dee0:	4629      	mov	r1, r5
 800dee2:	4620      	mov	r0, r4
}
 800dee4:	b00b      	add	sp, #44	@ 0x2c
 800dee6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    NarutoGameScreen2ViewBase::handleClickEvent(evt);
 800deea:	f00e be03 	b.w	801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
}
 800deee:	b00b      	add	sp, #44	@ 0x2c
 800def0:	bd30      	pop	{r4, r5, pc}

0800def2 <_ZN21NarutoGameScreen2View15handleDragEventERKN8touchgfx9DragEventE>:
	NarutoGameScreen2ViewBase::handleDragEvent(evt);
 800def2:	f00e be53 	b.w	801cb9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>

0800def6 <_ZN26RewardFinalScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~RewardFinalScreenPresenter() {}
 800def6:	4770      	bx	lr

0800def8 <_ZThn4_N26RewardFinalScreenPresenterD1Ev>:
 800def8:	3804      	subs	r0, #4
 800defa:	4770      	bx	lr

0800defc <_ZN26RewardFinalScreenPresenter10deactivateEv>:
}

void RewardFinalScreenPresenter::activate()
{

}
 800defc:	4770      	bx	lr

0800defe <_ZN26RewardFinalScreenPresenterD0Ev>:
 800defe:	b510      	push	{r4, lr}
 800df00:	2110      	movs	r1, #16
 800df02:	4604      	mov	r4, r0
 800df04:	f01f f977 	bl	802d1f6 <_ZdlPvj>
 800df08:	4620      	mov	r0, r4
 800df0a:	bd10      	pop	{r4, pc}

0800df0c <_ZThn4_N26RewardFinalScreenPresenterD0Ev>:
 800df0c:	f1a0 0004 	sub.w	r0, r0, #4
 800df10:	e7f5      	b.n	800defe <_ZN26RewardFinalScreenPresenterD0Ev>
	...

0800df14 <_ZN26RewardFinalScreenPresenterC1ER21RewardFinalScreenView>:
 800df14:	2200      	movs	r2, #0
 800df16:	6082      	str	r2, [r0, #8]
    : view(v)
 800df18:	4a02      	ldr	r2, [pc, #8]	@ (800df24 <_ZN26RewardFinalScreenPresenterC1ER21RewardFinalScreenView+0x10>)
 800df1a:	6002      	str	r2, [r0, #0]
 800df1c:	3218      	adds	r2, #24
 800df1e:	6042      	str	r2, [r0, #4]
 800df20:	60c1      	str	r1, [r0, #12]
}
 800df22:	4770      	bx	lr
 800df24:	08031e04 	.word	0x08031e04

0800df28 <_ZN21RewardFinalScreenView14tearDownScreenEv>:
}

void RewardFinalScreenView::tearDownScreen()
{
    RewardFinalScreenViewBase::tearDownScreen();
}
 800df28:	4770      	bx	lr
	...

0800df2c <_ZN21RewardFinalScreenViewD1Ev>:

class RewardFinalScreenView : public RewardFinalScreenViewBase
{
public:
    RewardFinalScreenView();
    virtual ~RewardFinalScreenView() {}
 800df2c:	b510      	push	{r4, lr}
 800df2e:	4b03      	ldr	r3, [pc, #12]	@ (800df3c <_ZN21RewardFinalScreenViewD1Ev+0x10>)
 800df30:	6003      	str	r3, [r0, #0]
 800df32:	4604      	mov	r4, r0
 800df34:	f7f9 fe7d 	bl	8007c32 <_ZN25RewardFinalScreenViewBaseD1Ev>
 800df38:	4620      	mov	r0, r4
 800df3a:	bd10      	pop	{r4, pc}
 800df3c:	08031e2c 	.word	0x08031e2c

0800df40 <_ZN21RewardFinalScreenViewD0Ev>:
 800df40:	b510      	push	{r4, lr}
 800df42:	4604      	mov	r4, r0
 800df44:	f7ff fff2 	bl	800df2c <_ZN21RewardFinalScreenViewD1Ev>
 800df48:	4620      	mov	r0, r4
 800df4a:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
 800df4e:	f01f f952 	bl	802d1f6 <_ZdlPvj>
 800df52:	4620      	mov	r0, r4
 800df54:	bd10      	pop	{r4, pc}
	...

0800df58 <_ZN21RewardFinalScreenViewC1Ev>:
RewardFinalScreenView::RewardFinalScreenView()
 800df58:	b510      	push	{r4, lr}
 800df5a:	4604      	mov	r4, r0
 800df5c:	f7f9 fea0 	bl	8007ca0 <_ZN25RewardFinalScreenViewBaseC1Ev>
 800df60:	4b01      	ldr	r3, [pc, #4]	@ (800df68 <_ZN21RewardFinalScreenViewC1Ev+0x10>)
 800df62:	6023      	str	r3, [r4, #0]
}
 800df64:	4620      	mov	r0, r4
 800df66:	bd10      	pop	{r4, pc}
 800df68:	08031e2c 	.word	0x08031e2c

0800df6c <_ZN21RewardFinalScreenView11setupScreenEv>:
    RewardFinalScreenViewBase::setupScreen();
 800df6c:	f7f9 be62 	b.w	8007c34 <_ZN25RewardFinalScreenViewBase11setupScreenEv>

0800df70 <_ZN21RewardScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~RewardScreenPresenter() {}
 800df70:	4770      	bx	lr

0800df72 <_ZThn4_N21RewardScreenPresenterD1Ev>:
 800df72:	3804      	subs	r0, #4
 800df74:	4770      	bx	lr

0800df76 <_ZN21RewardScreenPresenter10deactivateEv>:
}

void RewardScreenPresenter::activate()
{

}
 800df76:	4770      	bx	lr

0800df78 <_ZN21RewardScreenPresenterD0Ev>:
 800df78:	b510      	push	{r4, lr}
 800df7a:	2110      	movs	r1, #16
 800df7c:	4604      	mov	r4, r0
 800df7e:	f01f f93a 	bl	802d1f6 <_ZdlPvj>
 800df82:	4620      	mov	r0, r4
 800df84:	bd10      	pop	{r4, pc}

0800df86 <_ZThn4_N21RewardScreenPresenterD0Ev>:
 800df86:	f1a0 0004 	sub.w	r0, r0, #4
 800df8a:	e7f5      	b.n	800df78 <_ZN21RewardScreenPresenterD0Ev>

0800df8c <_ZN21RewardScreenPresenterC1ER16RewardScreenView>:
 800df8c:	2200      	movs	r2, #0
 800df8e:	6082      	str	r2, [r0, #8]
    : view(v)
 800df90:	4a02      	ldr	r2, [pc, #8]	@ (800df9c <_ZN21RewardScreenPresenterC1ER16RewardScreenView+0x10>)
 800df92:	6002      	str	r2, [r0, #0]
 800df94:	3218      	adds	r2, #24
 800df96:	6042      	str	r2, [r0, #4]
 800df98:	60c1      	str	r1, [r0, #12]
}
 800df9a:	4770      	bx	lr
 800df9c:	08031e60 	.word	0x08031e60

0800dfa0 <_ZN16RewardScreenView14tearDownScreenEv>:
}

void RewardScreenView::tearDownScreen()
{
    RewardScreenViewBase::tearDownScreen();
}
 800dfa0:	4770      	bx	lr
	...

0800dfa4 <_ZN16RewardScreenViewD1Ev>:

class RewardScreenView : public RewardScreenViewBase
{
public:
    RewardScreenView();
    virtual ~RewardScreenView() {}
 800dfa4:	b510      	push	{r4, lr}
 800dfa6:	4b03      	ldr	r3, [pc, #12]	@ (800dfb4 <_ZN16RewardScreenViewD1Ev+0x10>)
 800dfa8:	6003      	str	r3, [r0, #0]
 800dfaa:	4604      	mov	r4, r0
 800dfac:	f7f9 ffc3 	bl	8007f36 <_ZN20RewardScreenViewBaseD1Ev>
 800dfb0:	4620      	mov	r0, r4
 800dfb2:	bd10      	pop	{r4, pc}
 800dfb4:	08031e88 	.word	0x08031e88

0800dfb8 <_ZN16RewardScreenViewD0Ev>:
 800dfb8:	b510      	push	{r4, lr}
 800dfba:	4604      	mov	r4, r0
 800dfbc:	f7ff fff2 	bl	800dfa4 <_ZN16RewardScreenViewD1Ev>
 800dfc0:	4620      	mov	r0, r4
 800dfc2:	f44f 71bc 	mov.w	r1, #376	@ 0x178
 800dfc6:	f01f f916 	bl	802d1f6 <_ZdlPvj>
 800dfca:	4620      	mov	r0, r4
 800dfcc:	bd10      	pop	{r4, pc}
	...

0800dfd0 <_ZN16RewardScreenViewC1Ev>:
RewardScreenView::RewardScreenView()
 800dfd0:	b510      	push	{r4, lr}
 800dfd2:	4604      	mov	r4, r0
 800dfd4:	f7f9 ffe6 	bl	8007fa4 <_ZN20RewardScreenViewBaseC1Ev>
 800dfd8:	4b01      	ldr	r3, [pc, #4]	@ (800dfe0 <_ZN16RewardScreenViewC1Ev+0x10>)
 800dfda:	6023      	str	r3, [r4, #0]
}
 800dfdc:	4620      	mov	r0, r4
 800dfde:	bd10      	pop	{r4, pc}
 800dfe0:	08031e88 	.word	0x08031e88

0800dfe4 <_ZN16RewardScreenView11setupScreenEv>:
    RewardScreenViewBase::setupScreen();
 800dfe4:	f7f9 bfa8 	b.w	8007f38 <_ZN20RewardScreenViewBase11setupScreenEv>

0800dfe8 <_ZN26SakuraFinalScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SakuraFinalScreenPresenter() {}
 800dfe8:	4770      	bx	lr

0800dfea <_ZThn4_N26SakuraFinalScreenPresenterD1Ev>:
 800dfea:	3804      	subs	r0, #4
 800dfec:	4770      	bx	lr

0800dfee <_ZN26SakuraFinalScreenPresenter10deactivateEv>:
}

void SakuraFinalScreenPresenter::activate()
{

}
 800dfee:	4770      	bx	lr

0800dff0 <_ZN26SakuraFinalScreenPresenterD0Ev>:
 800dff0:	b510      	push	{r4, lr}
 800dff2:	2110      	movs	r1, #16
 800dff4:	4604      	mov	r4, r0
 800dff6:	f01f f8fe 	bl	802d1f6 <_ZdlPvj>
 800dffa:	4620      	mov	r0, r4
 800dffc:	bd10      	pop	{r4, pc}

0800dffe <_ZThn4_N26SakuraFinalScreenPresenterD0Ev>:
 800dffe:	f1a0 0004 	sub.w	r0, r0, #4
 800e002:	e7f5      	b.n	800dff0 <_ZN26SakuraFinalScreenPresenterD0Ev>

0800e004 <_ZN26SakuraFinalScreenPresenterC1ER21SakuraFinalScreenView>:
 800e004:	2200      	movs	r2, #0
 800e006:	6082      	str	r2, [r0, #8]
    : view(v)
 800e008:	4a02      	ldr	r2, [pc, #8]	@ (800e014 <_ZN26SakuraFinalScreenPresenterC1ER21SakuraFinalScreenView+0x10>)
 800e00a:	6002      	str	r2, [r0, #0]
 800e00c:	3218      	adds	r2, #24
 800e00e:	6042      	str	r2, [r0, #4]
 800e010:	60c1      	str	r1, [r0, #12]
}
 800e012:	4770      	bx	lr
 800e014:	08031ebc 	.word	0x08031ebc

0800e018 <_ZN21SakuraFinalScreenView14tearDownScreenEv>:
}

void SakuraFinalScreenView::tearDownScreen()
{
    SakuraFinalScreenViewBase::tearDownScreen();
}
 800e018:	4770      	bx	lr
	...

0800e01c <_ZN21SakuraFinalScreenViewD1Ev>:

class SakuraFinalScreenView : public SakuraFinalScreenViewBase
{
public:
    SakuraFinalScreenView();
    virtual ~SakuraFinalScreenView() {}
 800e01c:	b510      	push	{r4, lr}
 800e01e:	4b03      	ldr	r3, [pc, #12]	@ (800e02c <_ZN21SakuraFinalScreenViewD1Ev+0x10>)
 800e020:	6003      	str	r3, [r0, #0]
 800e022:	4604      	mov	r4, r0
 800e024:	f7fa f8c7 	bl	80081b6 <_ZN25SakuraFinalScreenViewBaseD1Ev>
 800e028:	4620      	mov	r0, r4
 800e02a:	bd10      	pop	{r4, pc}
 800e02c:	08031ee4 	.word	0x08031ee4

0800e030 <_ZN21SakuraFinalScreenViewD0Ev>:
 800e030:	b510      	push	{r4, lr}
 800e032:	4604      	mov	r4, r0
 800e034:	f7ff fff2 	bl	800e01c <_ZN21SakuraFinalScreenViewD1Ev>
 800e038:	4620      	mov	r0, r4
 800e03a:	f44f 7112 	mov.w	r1, #584	@ 0x248
 800e03e:	f01f f8da 	bl	802d1f6 <_ZdlPvj>
 800e042:	4620      	mov	r0, r4
 800e044:	bd10      	pop	{r4, pc}
	...

0800e048 <_ZN21SakuraFinalScreenViewC1Ev>:
SakuraFinalScreenView::SakuraFinalScreenView()
 800e048:	b510      	push	{r4, lr}
 800e04a:	4604      	mov	r4, r0
 800e04c:	f7fa f8f4 	bl	8008238 <_ZN25SakuraFinalScreenViewBaseC1Ev>
 800e050:	4b01      	ldr	r3, [pc, #4]	@ (800e058 <_ZN21SakuraFinalScreenViewC1Ev+0x10>)
 800e052:	6023      	str	r3, [r4, #0]
}
 800e054:	4620      	mov	r0, r4
 800e056:	bd10      	pop	{r4, pc}
 800e058:	08031ee4 	.word	0x08031ee4

0800e05c <_ZN21SakuraFinalScreenView11setupScreenEv>:
    SakuraFinalScreenViewBase::setupScreen();
 800e05c:	f7fa b8ac 	b.w	80081b8 <_ZN25SakuraFinalScreenViewBase11setupScreenEv>

0800e060 <_ZN25SakuraGameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SakuraGameScreenPresenter() {}
 800e060:	4770      	bx	lr

0800e062 <_ZThn4_N25SakuraGameScreenPresenterD1Ev>:
 800e062:	3804      	subs	r0, #4
 800e064:	4770      	bx	lr

0800e066 <_ZN25SakuraGameScreenPresenter10deactivateEv>:
}

void SakuraGameScreenPresenter::activate()
{

}
 800e066:	4770      	bx	lr

0800e068 <_ZN25SakuraGameScreenPresenterD0Ev>:
 800e068:	b510      	push	{r4, lr}
 800e06a:	2110      	movs	r1, #16
 800e06c:	4604      	mov	r4, r0
 800e06e:	f01f f8c2 	bl	802d1f6 <_ZdlPvj>
 800e072:	4620      	mov	r0, r4
 800e074:	bd10      	pop	{r4, pc}

0800e076 <_ZThn4_N25SakuraGameScreenPresenterD0Ev>:
 800e076:	f1a0 0004 	sub.w	r0, r0, #4
 800e07a:	e7f5      	b.n	800e068 <_ZN25SakuraGameScreenPresenterD0Ev>

0800e07c <_ZN25SakuraGameScreenPresenterC1ER20SakuraGameScreenView>:
 800e07c:	2200      	movs	r2, #0
 800e07e:	6082      	str	r2, [r0, #8]
    : view(v)
 800e080:	4a02      	ldr	r2, [pc, #8]	@ (800e08c <_ZN25SakuraGameScreenPresenterC1ER20SakuraGameScreenView+0x10>)
 800e082:	6002      	str	r2, [r0, #0]
 800e084:	3218      	adds	r2, #24
 800e086:	6042      	str	r2, [r0, #4]
 800e088:	60c1      	str	r1, [r0, #12]
}
 800e08a:	4770      	bx	lr
 800e08c:	08031f18 	.word	0x08031f18

0800e090 <_ZN20SakuraGameScreenView12checkGameEndEv>:
}

void SakuraGameScreenView::tearDownScreen()
{
    SakuraGameScreenViewBase::tearDownScreen();
}
 800e090:	4770      	bx	lr
	...

0800e094 <_ZN20SakuraGameScreenViewD1Ev>:

class SakuraGameScreenView : public SakuraGameScreenViewBase
{
public:
    SakuraGameScreenView();
    virtual ~SakuraGameScreenView() {}
 800e094:	b510      	push	{r4, lr}
 800e096:	4b03      	ldr	r3, [pc, #12]	@ (800e0a4 <_ZN20SakuraGameScreenViewD1Ev+0x10>)
 800e098:	6003      	str	r3, [r0, #0]
 800e09a:	4604      	mov	r4, r0
 800e09c:	f7fa fa14 	bl	80084c8 <_ZN24SakuraGameScreenViewBaseD1Ev>
 800e0a0:	4620      	mov	r0, r4
 800e0a2:	bd10      	pop	{r4, pc}
 800e0a4:	08031f40 	.word	0x08031f40

0800e0a8 <_ZN20SakuraGameScreenViewD0Ev>:
 800e0a8:	b510      	push	{r4, lr}
 800e0aa:	4604      	mov	r4, r0
 800e0ac:	f7ff fff2 	bl	800e094 <_ZN20SakuraGameScreenViewD1Ev>
 800e0b0:	4620      	mov	r0, r4
 800e0b2:	f44f 612d 	mov.w	r1, #2768	@ 0xad0
 800e0b6:	f01f f89e 	bl	802d1f6 <_ZdlPvj>
 800e0ba:	4620      	mov	r0, r4
 800e0bc:	bd10      	pop	{r4, pc}
	...

0800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>:
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
}

void SakuraGameScreenView::toggleLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800e0c0:	4802      	ldr	r0, [pc, #8]	@ (800e0cc <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0+0xc>)
 800e0c2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800e0c6:	f002 bb9c 	b.w	8010802 <HAL_GPIO_TogglePin>
 800e0ca:	bf00      	nop
 800e0cc:	40021800 	.word	0x40021800

0800e0d0 <_ZN20SakuraGameScreenViewC1Ev>:
SakuraGameScreenView::SakuraGameScreenView()
 800e0d0:	b510      	push	{r4, lr}
 800e0d2:	4604      	mov	r4, r0
 800e0d4:	f7fa fa02 	bl	80084dc <_ZN24SakuraGameScreenViewBaseC1Ev>
    randomSeed = 12345;
 800e0d8:	f243 0239 	movw	r2, #12345	@ 0x3039
SakuraGameScreenView::SakuraGameScreenView()
 800e0dc:	4b12      	ldr	r3, [pc, #72]	@ (800e128 <_ZN20SakuraGameScreenViewC1Ev+0x58>)
    randomSeed = 12345;
 800e0de:	f8c4 2ac4 	str.w	r2, [r4, #2756]	@ 0xac4
    bossPhase = 1;
 800e0e2:	2201      	movs	r2, #1
SakuraGameScreenView::SakuraGameScreenView()
 800e0e4:	6023      	str	r3, [r4, #0]
    bossPhase = 1;
 800e0e6:	f8c4 2a6c 	str.w	r2, [r4, #2668]	@ 0xa6c
    resetTimer = 0;
 800e0ea:	2300      	movs	r3, #0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800e0ec:	2282      	movs	r2, #130	@ 0x82
    resetTimer = 0;
 800e0ee:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800e0f2:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
    fireAnimationTimer = 0;
 800e0f6:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800e0fa:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800e0fe:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800e102:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800e106:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800e10a:	f8c4 2a70 	str.w	r2, [r4, #2672]	@ 0xa70
    bossCurrentHP = 130;
 800e10e:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    rageMode = false;
 800e112:	f884 3a78 	strb.w	r3, [r4, #2680]	@ 0xa78
    rageModeTimer = 0;
 800e116:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
    easterEggActivated = false;
 800e11a:	f884 3ac8 	strb.w	r3, [r4, #2760]	@ 0xac8
     easterEggTimer = 0;
 800e11e:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
}
 800e122:	4620      	mov	r0, r4
 800e124:	bd10      	pop	{r4, pc}
 800e126:	bf00      	nop
 800e128:	08031f40 	.word	0x08031f40

0800e12c <_ZN20SakuraGameScreenView8initGPIOEv>:
{
 800e12c:	b570      	push	{r4, r5, r6, lr}
 800e12e:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800e130:	2400      	movs	r4, #0
 800e132:	4b0f      	ldr	r3, [pc, #60]	@ (800e170 <_ZN20SakuraGameScreenView8initGPIOEv+0x44>)
 800e134:	9400      	str	r4, [sp, #0]
 800e136:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800e138:	4d0e      	ldr	r5, [pc, #56]	@ (800e174 <_ZN20SakuraGameScreenView8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800e13a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800e13e:	631a      	str	r2, [r3, #48]	@ 0x30
 800e140:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800e142:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800e144:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e148:	9300      	str	r3, [sp, #0]
 800e14a:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800e14c:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800e150:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800e152:	a901      	add	r1, sp, #4
 800e154:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800e156:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800e15a:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800e15e:	f002 fa61 	bl	8010624 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800e162:	4622      	mov	r2, r4
 800e164:	4631      	mov	r1, r6
 800e166:	4628      	mov	r0, r5
 800e168:	f002 fb46 	bl	80107f8 <HAL_GPIO_WritePin>
}
 800e16c:	b006      	add	sp, #24
 800e16e:	bd70      	pop	{r4, r5, r6, pc}
 800e170:	40023800 	.word	0x40023800
 800e174:	40021800 	.word	0x40021800

0800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>:
}

// ==================== UTILITY FUNCTIONS ====================

int SakuraGameScreenView::generateRandomNumber(int min, int max)
{
 800e178:	b530      	push	{r4, r5, lr}
    // IMPROVED LINEAR CONGRUENTIAL GENERATOR
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800e17a:	4b0e      	ldr	r3, [pc, #56]	@ (800e1b4 <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x3c>)
 800e17c:	f8d0 4ac4 	ldr.w	r4, [r0, #2756]	@ 0xac4
 800e180:	4d0d      	ldr	r5, [pc, #52]	@ (800e1b8 <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x40>)
 800e182:	fb05 3304 	mla	r3, r5, r4, r3
 800e186:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800e18a:	f8c0 3ac4 	str.w	r3, [r0, #2756]	@ 0xac4

    // Additional mixing to improve distribution
    uint32_t mixed = randomSeed;
    mixed ^= mixed >> 16;
    mixed *= 0x85ebca6b;
 800e18e:	480b      	ldr	r0, [pc, #44]	@ (800e1bc <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x44>)
    mixed ^= mixed >> 16;
 800e190:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    mixed *= 0x85ebca6b;
 800e194:	4343      	muls	r3, r0
    mixed ^= mixed >> 13;
    mixed *= 0xc2b2ae35;
 800e196:	480a      	ldr	r0, [pc, #40]	@ (800e1c0 <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x48>)
    mixed ^= mixed >> 13;
 800e198:	ea83 3353 	eor.w	r3, r3, r3, lsr #13
    mixed *= 0xc2b2ae35;
 800e19c:	4343      	muls	r3, r0
    mixed ^= mixed >> 16;

    return min + (mixed % (max - min + 1));
 800e19e:	1a52      	subs	r2, r2, r1
    mixed ^= mixed >> 16;
 800e1a0:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    return min + (mixed % (max - min + 1));
 800e1a4:	3201      	adds	r2, #1
 800e1a6:	fbb3 f0f2 	udiv	r0, r3, r2
 800e1aa:	fb02 3010 	mls	r0, r2, r0, r3
}
 800e1ae:	4408      	add	r0, r1
 800e1b0:	bd30      	pop	{r4, r5, pc}
 800e1b2:	bf00      	nop
 800e1b4:	3c6ef35f 	.word	0x3c6ef35f
 800e1b8:	0019660d 	.word	0x0019660d
 800e1bc:	85ebca6b 	.word	0x85ebca6b
 800e1c0:	c2b2ae35 	.word	0xc2b2ae35

0800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>:
{
 800e1c4:	b510      	push	{r4, lr}
 800e1c6:	2300      	movs	r3, #0
 800e1c8:	4604      	mov	r4, r0
 800e1ca:	f880 3509 	strb.w	r3, [r0, #1289]	@ 0x509
 800e1ce:	f880 3535 	strb.w	r3, [r0, #1333]	@ 0x535
 800e1d2:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
    fire1.invalidate();
 800e1d6:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800e1da:	f00d ff2d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    fire2.invalidate();
 800e1de:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800e1e2:	f00d ff29 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe_fire.invalidate();
 800e1e6:	f204 5094 	addw	r0, r4, #1428	@ 0x594
}
 800e1ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach_spe_fire.invalidate();
 800e1ee:	f00d bf23 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e1f2 <_ZN20SakuraGameScreenView24startAttackFireAnimationEv>:
{
 800e1f2:	b510      	push	{r4, lr}
 800e1f4:	4604      	mov	r4, r0
    hideAllFireEffects();
 800e1f6:	f7ff ffe5 	bl	800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    fireAnimationTimer = 0;
 800e1fa:	2300      	movs	r3, #0
 800e1fc:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800e200:	2301      	movs	r3, #1
 800e202:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 1; // Bắt đầu với fire1
 800e206:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
 800e20a:	f884 3509 	strb.w	r3, [r4, #1289]	@ 0x509
    fire1.invalidate();
 800e20e:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
 800e212:	f00d ff11 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800e216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    toggleLED();
 800e21a:	f7ff bf51 	b.w	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

0800e21e <_ZN20SakuraGameScreenView25startSpecialFireAnimationEv>:
{
 800e21e:	b510      	push	{r4, lr}
 800e220:	4604      	mov	r4, r0
    hideAllFireEffects();
 800e222:	f7ff ffcf 	bl	800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    fireAnimationActive = true;
 800e226:	2301      	movs	r3, #1
    fireAnimationTimer = 0;
 800e228:	2200      	movs	r2, #0
    fireAnimationState = 3; // Special fire blink
 800e22a:	2103      	movs	r1, #3
    fireAnimationTimer = 0;
 800e22c:	f8c4 2ab0 	str.w	r2, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800e230:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 3; // Special fire blink
 800e234:	f8c4 1ab8 	str.w	r1, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800e238:	f8c4 2abc 	str.w	r2, [r4, #2748]	@ 0xabc
    specialFireToggle = true; // Bắt đầu với visible
 800e23c:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
 800e240:	f884 35b9 	strb.w	r3, [r4, #1465]	@ 0x5b9
    bleach_spe_fire.invalidate();
 800e244:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800e248:	f00d fef6 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800e24c:	f7ff ff38 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e250:	f7ff ff36 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e254:	f7ff ff34 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800e258:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        toggleLED();
 800e25c:	f7ff bf30 	b.w	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

0800e260 <_ZN20SakuraGameScreenView19updateFireAnimationEv>:
{
 800e260:	b538      	push	{r3, r4, r5, lr}
    if (!fireAnimationActive) return;
 800e262:	f890 3ab4 	ldrb.w	r3, [r0, #2740]	@ 0xab4
{
 800e266:	4604      	mov	r4, r0
    if (!fireAnimationActive) return;
 800e268:	2b00      	cmp	r3, #0
 800e26a:	f000 8085 	beq.w	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800e26e:	f8d0 3ab0 	ldr.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800e272:	f8d0 2ab8 	ldr.w	r2, [r0, #2744]	@ 0xab8
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800e276:	3310      	adds	r3, #16
    switch (fireAnimationState) {
 800e278:	2a02      	cmp	r2, #2
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800e27a:	f8c0 3ab0 	str.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800e27e:	d01c      	beq.n	800e2ba <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x5a>
 800e280:	2a03      	cmp	r2, #3
 800e282:	d032      	beq.n	800e2ea <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x8a>
 800e284:	2a01      	cmp	r2, #1
 800e286:	d177      	bne.n	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800e288:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800e28c:	db74      	blt.n	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e28e:	2500      	movs	r5, #0
 800e290:	f880 2535 	strb.w	r2, [r0, #1333]	@ 0x535
 800e294:	f880 5509 	strb.w	r5, [r0, #1289]	@ 0x509
                fire1.invalidate();
 800e298:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800e29c:	f00d fecc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                fire2.invalidate();
 800e2a0:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800e2a4:	f00d fec8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationState = 2;
 800e2a8:	2302      	movs	r3, #2
 800e2aa:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800e2ae:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
}
 800e2b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                        toggleLED();
 800e2b6:	f7ff bf03 	b.w	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800e2ba:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800e2be:	db5b      	blt.n	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
                hideAllFireEffects();
 800e2c0:	f7ff ff80 	bl	800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
                fireAnimationActive = false;
 800e2c4:	2300      	movs	r3, #0
 800e2c6:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800e2ca:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800e2ce:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                if (!gameEnded && bossCurrentHP > 0) {
 800e2d2:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800e2d6:	2b00      	cmp	r3, #0
 800e2d8:	d14e      	bne.n	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e2da:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800e2de:	2b00      	cmp	r3, #0
 800e2e0:	dd4a      	ble.n	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800e2e2:	2301      	movs	r3, #1
 800e2e4:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    toggleLED(); // Debug: animation complete
 800e2e8:	e7e3      	b.n	800e2b2 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x52>
            if (fireAnimationTimer >= FIRE_LOOP_INTERVAL) {
 800e2ea:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 800e2ee:	db16      	blt.n	800e31e <_ZN20SakuraGameScreenView19updateFireAnimationEv+0xbe>
                specialFireToggle = !specialFireToggle;
 800e2f0:	f890 3ac0 	ldrb.w	r3, [r0, #2752]	@ 0xac0
 800e2f4:	f083 0301 	eor.w	r3, r3, #1
 800e2f8:	f880 3ac0 	strb.w	r3, [r0, #2752]	@ 0xac0
 800e2fc:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
                bleach_spe_fire.invalidate();
 800e300:	f200 5094 	addw	r0, r0, #1428	@ 0x594
 800e304:	f00d fe98 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationTimer = 0;
 800e308:	2300      	movs	r3, #0
 800e30a:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                fireLoopCounter += FIRE_LOOP_INTERVAL;
 800e30e:	f8d4 3abc 	ldr.w	r3, [r4, #2748]	@ 0xabc
 800e312:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800e316:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
                toggleLED();
 800e31a:	f7ff fed1 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            if (fireLoopCounter >= 3000) { // 3000ms = 3 giây
 800e31e:	f8d4 2abc 	ldr.w	r2, [r4, #2748]	@ 0xabc
 800e322:	f640 33b7 	movw	r3, #2999	@ 0xbb7
 800e326:	429a      	cmp	r2, r3
 800e328:	dd26      	ble.n	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e32a:	2500      	movs	r5, #0
                hideAllFireEffects();
 800e32c:	4620      	mov	r0, r4
 800e32e:	f7ff ff49 	bl	800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
 800e332:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
                bleach_spe.invalidate();
 800e336:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800e33a:	f00d fe7d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
                if (!gameEnded && bossCurrentHP > 0) {
 800e33e:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
                fireAnimationActive = false;
 800e342:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800e346:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800e34a:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
                fireLoopCounter = 0;
 800e34e:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
                if (!gameEnded && bossCurrentHP > 0) {
 800e352:	b98b      	cbnz	r3, 800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e354:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800e358:	42ab      	cmp	r3, r5
 800e35a:	dd0d      	ble.n	800e378 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800e35c:	2301      	movs	r3, #1
 800e35e:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    aiSpecialUsed = true;
 800e362:	f884 3a8b 	strb.w	r3, [r4, #2699]	@ 0xa8b
                        toggleLED();
 800e366:	f7ff feab 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e36a:	f7ff fea9 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e36e:	f7ff fea7 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e372:	f7ff fea5 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e376:	e79c      	b.n	800e2b2 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x52>
}
 800e378:	bd38      	pop	{r3, r4, r5, pc}

0800e37a <_ZN20SakuraGameScreenView17hideActionButtonsEv>:
{
 800e37a:	b538      	push	{r3, r4, r5, lr}
 800e37c:	2301      	movs	r3, #1
 800e37e:	2500      	movs	r5, #0
 800e380:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800e384:	4604      	mov	r4, r0
 800e386:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800e38a:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800e38e:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800e392:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800e396:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800e39a:	f00d fe4d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800e39e:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800e3a2:	f00d fe49 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800e3a6:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800e3aa:	f00d fe45 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800e3ae:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800e3b2:	f00d fe41 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800e3b6:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800e3ba:	f00d fe3d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = false;
 800e3be:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800e3c2:	bd38      	pop	{r3, r4, r5, pc}

0800e3c4 <_ZN20SakuraGameScreenView17showActionButtonsEv>:
{
 800e3c4:	b538      	push	{r3, r4, r5, lr}
 800e3c6:	2300      	movs	r3, #0
 800e3c8:	2501      	movs	r5, #1
 800e3ca:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800e3ce:	4604      	mov	r4, r0
 800e3d0:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800e3d4:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800e3d8:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800e3dc:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800e3e0:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800e3e4:	f00d fe28 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800e3e8:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800e3ec:	f00d fe24 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800e3f0:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800e3f4:	f00d fe20 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800e3f8:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800e3fc:	f00d fe1c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800e400:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800e404:	f00d fe18 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = true;
 800e408:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800e40c:	bd38      	pop	{r3, r4, r5, pc}

0800e40e <_ZN20SakuraGameScreenView16toggleActionMenuEv>:
{
 800e40e:	b508      	push	{r3, lr}
    if (menuOpen) {
 800e410:	f890 3a68 	ldrb.w	r3, [r0, #2664]	@ 0xa68
 800e414:	b12b      	cbz	r3, 800e422 <_ZN20SakuraGameScreenView16toggleActionMenuEv+0x14>
        hideActionButtons();
 800e416:	f7ff ffb0 	bl	800e37a <_ZN20SakuraGameScreenView17hideActionButtonsEv>
}
 800e41a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    toggleLED();
 800e41e:	f7ff be4f 	b.w	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        showActionButtons();
 800e422:	f7ff ffcf 	bl	800e3c4 <_ZN20SakuraGameScreenView17showActionButtonsEv>
 800e426:	e7f8      	b.n	800e41a <_ZN20SakuraGameScreenView16toggleActionMenuEv+0xc>

0800e428 <_ZN20SakuraGameScreenView20hideAllBossHPWidgetsEv>:
 800e428:	2300      	movs	r3, #0
{
 800e42a:	b510      	push	{r4, lr}
 800e42c:	4604      	mov	r4, r0
 800e42e:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800e432:	f880 32cd 	strb.w	r3, [r0, #717]	@ 0x2cd
 800e436:	f880 32f9 	strb.w	r3, [r0, #761]	@ 0x2f9
 800e43a:	f880 3325 	strb.w	r3, [r0, #805]	@ 0x325
 800e43e:	f880 3351 	strb.w	r3, [r0, #849]	@ 0x351
 800e442:	f880 337d 	strb.w	r3, [r0, #893]	@ 0x37d
 800e446:	f880 33a9 	strb.w	r3, [r0, #937]	@ 0x3a9
 800e44a:	f880 33d5 	strb.w	r3, [r0, #981]	@ 0x3d5
 800e44e:	f880 3401 	strb.w	r3, [r0, #1025]	@ 0x401
 800e452:	f880 342d 	strb.w	r3, [r0, #1069]	@ 0x42d
 800e456:	f880 3459 	strb.w	r3, [r0, #1113]	@ 0x459
 800e45a:	f880 3485 	strb.w	r3, [r0, #1157]	@ 0x485
 800e45e:	f880 34b1 	strb.w	r3, [r0, #1201]	@ 0x4b1
 800e462:	f880 34dd 	strb.w	r3, [r0, #1245]	@ 0x4dd
    BITMAP_HP_130_ID_1.invalidate();
 800e466:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800e46a:	f00d fde5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_120_ID_1.invalidate();
 800e46e:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800e472:	f00d fde1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_110_ID_1.invalidate();
 800e476:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800e47a:	f00d fddd 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_100_ID_1.invalidate();
 800e47e:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800e482:	f00d fdd9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID_1.invalidate();
 800e486:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800e48a:	f00d fdd5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID_1.invalidate();
 800e48e:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800e492:	f00d fdd1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID_1.invalidate();
 800e496:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800e49a:	f00d fdcd 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID_1.invalidate();
 800e49e:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800e4a2:	f00d fdc9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID_1.invalidate();
 800e4a6:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800e4aa:	f00d fdc5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID_1.invalidate();
 800e4ae:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800e4b2:	f00d fdc1 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID_1.invalidate();
 800e4b6:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800e4ba:	f00d fdbd 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID_1.invalidate();
 800e4be:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800e4c2:	f00d fdb9 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID_1.invalidate();
 800e4c6:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800e4ca:	f00d fdb5 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID_1.invalidate();
 800e4ce:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
}
 800e4d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID_1.invalidate();
 800e4d6:	f00d bdaf 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e4da <_ZN20SakuraGameScreenView18forceBossHPVisibleEv>:
{
 800e4da:	b508      	push	{r3, lr}
    if (bossCurrentHP >= 125) { // Boss bắt đầu với 130 HP
 800e4dc:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800e4e0:	2b7c      	cmp	r3, #124	@ 0x7c
 800e4e2:	dd15      	ble.n	800e510 <_ZN20SakuraGameScreenView18forceBossHPVisibleEv+0x36>
 800e4e4:	2301      	movs	r3, #1
 800e4e6:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800e4ea:	23ff      	movs	r3, #255	@ 0xff
 800e4ec:	f880 32a4 	strb.w	r3, [r0, #676]	@ 0x2a4
        BITMAP_HP_130_ID_1.invalidate();
 800e4f0:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800e4f4:	f00d fda0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800e4f8:	f7ff fde2 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800e4fc:	f7ff fde0 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800e500:	f7ff fdde 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800e504:	f7ff fddc 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800e508:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        toggleLED();
 800e50c:	f7ff bdd8 	b.w	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800e510:	bd08      	pop	{r3, pc}

0800e512 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>:
{
 800e512:	b510      	push	{r4, lr}
 800e514:	2300      	movs	r3, #0
 800e516:	4604      	mov	r4, r0
 800e518:	f880 3955 	strb.w	r3, [r0, #2389]	@ 0x955
 800e51c:	f880 3981 	strb.w	r3, [r0, #2433]	@ 0x981
 800e520:	f880 39ad 	strb.w	r3, [r0, #2477]	@ 0x9ad
 800e524:	f880 39d9 	strb.w	r3, [r0, #2521]	@ 0x9d9
    x2dame_1.invalidate();
 800e528:	f500 6013 	add.w	r0, r0, #2352	@ 0x930
 800e52c:	f00d fd84 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_1.invalidate();
 800e530:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 800e534:	f00d fd80 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_1.invalidate();
 800e538:	f604 1088 	addw	r0, r4, #2440	@ 0x988
 800e53c:	f00d fd7c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_1.invalidate();
 800e540:	f604 10b4 	addw	r0, r4, #2484	@ 0x9b4
}
 800e544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_1.invalidate();
 800e548:	f00d bd76 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>:
{
 800e54c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e54e:	4604      	mov	r4, r0
    hideAllPlayerPowerUps();
 800e550:	f7ff ffdf 	bl	800e512 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
    if (!playerPowerUpActive) return;
 800e554:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800e558:	2b00      	cmp	r3, #0
 800e55a:	d053      	beq.n	800e604 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0xb8>
    switch (playerPowerUpType) {
 800e55c:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800e560:	3b01      	subs	r3, #1
 800e562:	2b03      	cmp	r3, #3
 800e564:	d80a      	bhi.n	800e57c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x30>
 800e566:	e8df f003 	tbb	[pc, r3]
 800e56a:	0f02      	.short	0x0f02
 800e56c:	3c26      	.short	0x3c26
 800e56e:	2301      	movs	r3, #1
 800e570:	f884 3955 	strb.w	r3, [r4, #2389]	@ 0x955
            x2dame_1.invalidate();
 800e574:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
            sheild_1.invalidate();
 800e578:	f00d fd5e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e57c:	1d20      	adds	r0, r4, #4
}
 800e57e:	b002      	add	sp, #8
 800e580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e584:	f00d bd58 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e588:	23ff      	movs	r3, #255	@ 0xff
 800e58a:	f884 3984 	strb.w	r3, [r4, #2436]	@ 0x984
 800e58e:	2601      	movs	r6, #1
            healthplus_1.setPosition(9, 61, 32, 37);
 800e590:	f604 155c 	addw	r5, r4, #2396	@ 0x95c
 800e594:	2325      	movs	r3, #37	@ 0x25
 800e596:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
 800e59a:	223d      	movs	r2, #61	@ 0x3d
 800e59c:	9300      	str	r3, [sp, #0]
 800e59e:	2109      	movs	r1, #9
 800e5a0:	2320      	movs	r3, #32
 800e5a2:	4628      	mov	r0, r5
 800e5a4:	f7f4 fa80 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
            healthplus_1.invalidate();
 800e5a8:	4628      	mov	r0, r5
 800e5aa:	f00d fd45 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e5ae:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
            sheild_1.invalidate();
 800e5b2:	4628      	mov	r0, r5
 800e5b4:	e7e0      	b.n	800e578 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x2c>
 800e5b6:	23ff      	movs	r3, #255	@ 0xff
 800e5b8:	f884 39b0 	strb.w	r3, [r4, #2480]	@ 0x9b0
 800e5bc:	2601      	movs	r6, #1
            chakragain_1.setPosition(9, 61, 32, 37);
 800e5be:	f604 1588 	addw	r5, r4, #2440	@ 0x988
 800e5c2:	2325      	movs	r3, #37	@ 0x25
 800e5c4:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
 800e5c8:	223d      	movs	r2, #61	@ 0x3d
 800e5ca:	9300      	str	r3, [sp, #0]
 800e5cc:	2109      	movs	r1, #9
 800e5ce:	2320      	movs	r3, #32
 800e5d0:	4628      	mov	r0, r5
 800e5d2:	f7f4 fa69 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
            chakragain_1.invalidate();
 800e5d6:	4628      	mov	r0, r5
 800e5d8:	f00d fd2e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e5dc:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
            chakragain_1.invalidate();
 800e5e0:	e7e7      	b.n	800e5b2 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x66>
 800e5e2:	2301      	movs	r3, #1
 800e5e4:	f884 39d9 	strb.w	r3, [r4, #2521]	@ 0x9d9
 800e5e8:	23ff      	movs	r3, #255	@ 0xff
 800e5ea:	f884 39dc 	strb.w	r3, [r4, #2524]	@ 0x9dc
            sheild_1.setPosition(8, 59, 32, 37);
 800e5ee:	f604 15b4 	addw	r5, r4, #2484	@ 0x9b4
 800e5f2:	2325      	movs	r3, #37	@ 0x25
 800e5f4:	9300      	str	r3, [sp, #0]
 800e5f6:	223b      	movs	r2, #59	@ 0x3b
 800e5f8:	2320      	movs	r3, #32
 800e5fa:	2108      	movs	r1, #8
 800e5fc:	4628      	mov	r0, r5
 800e5fe:	f7f4 fa53 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800e602:	e7d6      	b.n	800e5b2 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x66>
}
 800e604:	b002      	add	sp, #8
 800e606:	bd70      	pop	{r4, r5, r6, pc}

0800e608 <_ZN20SakuraGameScreenView17hideAllAIPowerUpsEv>:
{
 800e608:	b510      	push	{r4, lr}
 800e60a:	2300      	movs	r3, #0
 800e60c:	4604      	mov	r4, r0
 800e60e:	f880 3929 	strb.w	r3, [r0, #2345]	@ 0x929
 800e612:	f880 3a5d 	strb.w	r3, [r0, #2653]	@ 0xa5d
 800e616:	f880 3a31 	strb.w	r3, [r0, #2609]	@ 0xa31
 800e61a:	f880 3a05 	strb.w	r3, [r0, #2565]	@ 0xa05
    x2dame_2.invalidate();
 800e61e:	f600 1004 	addw	r0, r0, #2308	@ 0x904
 800e622:	f00d fd09 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_2.invalidate();
 800e626:	f604 2038 	addw	r0, r4, #2616	@ 0xa38
 800e62a:	f00d fd05 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_2.invalidate();
 800e62e:	f604 200c 	addw	r0, r4, #2572	@ 0xa0c
 800e632:	f00d fd01 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_2.invalidate();
 800e636:	f504 601e 	add.w	r0, r4, #2528	@ 0x9e0
}
 800e63a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_2.invalidate();
 800e63e:	f00d bcfb 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e642 <_ZN20SakuraGameScreenView16resetNarutoStateEv>:
 800e642:	2300      	movs	r3, #0
}

// ==================== CHARACTER STATE FUNCTIONS ====================

void SakuraGameScreenView::resetNarutoState()
{
 800e644:	b510      	push	{r4, lr}
 800e646:	f880 3771 	strb.w	r3, [r0, #1905]	@ 0x771
 800e64a:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800e64e:	f880 3719 	strb.w	r3, [r0, #1817]	@ 0x719
 800e652:	f880 36ed 	strb.w	r3, [r0, #1773]	@ 0x6ed
 800e656:	f880 36c1 	strb.w	r3, [r0, #1729]	@ 0x6c1
    naruto_spe.setVisible(false);
    naruto_lose.setVisible(false);
    naruto_win.setVisible(false);

    // Hiển thị lại naruto bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (playerHP > 0 && !gameEnded) {
 800e65a:	f8d0 3a64 	ldr.w	r3, [r0, #2660]	@ 0xa64
 800e65e:	2b00      	cmp	r3, #0
{
 800e660:	4604      	mov	r4, r0
    if (playerHP > 0 && !gameEnded) {
 800e662:	dd05      	ble.n	800e670 <_ZN20SakuraGameScreenView16resetNarutoStateEv+0x2e>
 800e664:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800e668:	b913      	cbnz	r3, 800e670 <_ZN20SakuraGameScreenView16resetNarutoStateEv+0x2e>
 800e66a:	2301      	movs	r3, #1
 800e66c:	f880 3695 	strb.w	r3, [r0, #1685]	@ 0x695
        naruto.setVisible(true);
    }

    // Invalidate tất cả
    naruto_atk.invalidate();
 800e670:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800e674:	f00d fce0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800e678:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800e67c:	f00d fcdc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800e680:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800e684:	f00d fcd8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800e688:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800e68c:	f00d fcd4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800e690:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800e694:	f00d fcd0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800e698:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
}
 800e69c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800e6a0:	f00d bcca 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e6a4 <_ZN20SakuraGameScreenView16resetBleachStateEv>:
 800e6a4:	2300      	movs	r3, #0

void SakuraGameScreenView::resetBleachState()
{
 800e6a6:	b510      	push	{r4, lr}
 800e6a8:	f880 363d 	strb.w	r3, [r0, #1597]	@ 0x63d
 800e6ac:	f880 3611 	strb.w	r3, [r0, #1553]	@ 0x611
 800e6b0:	f880 35e5 	strb.w	r3, [r0, #1509]	@ 0x5e5
 800e6b4:	f880 3561 	strb.w	r3, [r0, #1377]	@ 0x561
 800e6b8:	f880 358d 	strb.w	r3, [r0, #1421]	@ 0x58d
    bleach_spe.setVisible(false);
    bleach_lose.setVisible(false);
    bleach_win.setVisible(false);

    // SỬA: THAY aiHP THÀNH bossCurrentHP
    if (bossCurrentHP > 0 && !gameEnded) {
 800e6bc:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800e6c0:	2b00      	cmp	r3, #0
{
 800e6c2:	4604      	mov	r4, r0
    if (bossCurrentHP > 0 && !gameEnded) {
 800e6c4:	dd05      	ble.n	800e6d2 <_ZN20SakuraGameScreenView16resetBleachStateEv+0x2e>
 800e6c6:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800e6ca:	b913      	cbnz	r3, 800e6d2 <_ZN20SakuraGameScreenView16resetBleachStateEv+0x2e>
 800e6cc:	2301      	movs	r3, #1
 800e6ce:	f880 3669 	strb.w	r3, [r0, #1641]	@ 0x669
        bleach.setVisible(true);
    }

    // Invalidate tất cả
    bleach_atk.invalidate();
 800e6d2:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800e6d6:	f00d fcaf 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800e6da:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800e6de:	f00d fcab 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();
 800e6e2:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800e6e6:	f00d fca7 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800e6ea:	f204 503c 	addw	r0, r4, #1340	@ 0x53c
 800e6ee:	f00d fca3 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800e6f2:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800e6f6:	f00d fc9f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800e6fa:	f204 6044 	addw	r0, r4, #1604	@ 0x644
}
 800e6fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach.invalidate();
 800e702:	f00d bc99 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e706 <_ZN20SakuraGameScreenView22hideAllPlayerHPWidgetsEv>:
 800e706:	2300      	movs	r3, #0
            break;
    }
}

void SakuraGameScreenView::hideAllPlayerHPWidgets()
{
 800e708:	b510      	push	{r4, lr}
 800e70a:	4604      	mov	r4, r0
 800e70c:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800e710:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800e714:	f880 3249 	strb.w	r3, [r0, #585]	@ 0x249
 800e718:	f880 321d 	strb.w	r3, [r0, #541]	@ 0x21d
 800e71c:	f880 31f1 	strb.w	r3, [r0, #497]	@ 0x1f1
 800e720:	f880 31c5 	strb.w	r3, [r0, #453]	@ 0x1c5
 800e724:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800e728:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800e72c:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800e730:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800e734:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
    BITMAP_HP_20_ID.setVisible(false);
    BITMAP_HP_10_ID.setVisible(false);
    BITMAP_HP_0_ID.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID.invalidate();
 800e738:	3098      	adds	r0, #152	@ 0x98
 800e73a:	f00d fc7d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID.invalidate();
 800e73e:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800e742:	f00d fc79 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID.invalidate();
 800e746:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800e74a:	f00d fc75 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID.invalidate();
 800e74e:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800e752:	f00d fc71 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID.invalidate();
 800e756:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800e75a:	f00d fc6d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID.invalidate();
 800e75e:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800e762:	f00d fc69 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID.invalidate();
 800e766:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800e76a:	f00d fc65 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID.invalidate();
 800e76e:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800e772:	f00d fc61 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID.invalidate();
 800e776:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800e77a:	f00d fc5d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID.invalidate();
 800e77e:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800e782:	f00d fc59 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID.invalidate();
 800e786:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
}
 800e78a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID.invalidate();
 800e78e:	f00d bc53 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e792 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>:
// ==================== CHAKRA SYSTEM ====================

void SakuraGameScreenView::updatePlayerChakraDisplay()
{
    // Đảm bảo chakra level không bị âm
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800e792:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800e796:	2b00      	cmp	r3, #0
{
 800e798:	b513      	push	{r0, r1, r4, lr}
 800e79a:	4602      	mov	r2, r0
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800e79c:	da0f      	bge.n	800e7be <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x2c>
 800e79e:	2300      	movs	r3, #0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800e7a0:	f8c2 3a80 	str.w	r3, [r2, #2688]	@ 0xa80

    // Xử lý đặc biệt khi chakra = 0
    if (playerChakraLevel == 0) {
 800e7a4:	f8d2 1a80 	ldr.w	r1, [r2, #2688]	@ 0xa80
 800e7a8:	f602 0454 	addw	r4, r2, #2132	@ 0x854
 800e7ac:	b959      	cbnz	r1, 800e7c6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x34>
 800e7ae:	f882 1879 	strb.w	r1, [r2, #2169]	@ 0x879
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của player
    chakra_box1.setPosition(14, 43, currentWidth, 5);
    chakra_box1.invalidate();
 800e7b2:	4620      	mov	r0, r4
}
 800e7b4:	b002      	add	sp, #8
 800e7b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box1.invalidate();
 800e7ba:	f00d bc3d 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800e7be:	2b64      	cmp	r3, #100	@ 0x64
 800e7c0:	ddf0      	ble.n	800e7a4 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x12>
 800e7c2:	2364      	movs	r3, #100	@ 0x64
 800e7c4:	e7ec      	b.n	800e7a0 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0xe>
 800e7c6:	2001      	movs	r0, #1
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800e7c8:	2356      	movs	r3, #86	@ 0x56
 800e7ca:	f882 0879 	strb.w	r0, [r2, #2169]	@ 0x879
 800e7ce:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800e7d2:	2a63      	cmp	r2, #99	@ 0x63
 800e7d4:	dd0f      	ble.n	800e7f6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800e7d6:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800e7da:	428a      	cmp	r2, r1
 800e7dc:	dc02      	bgt.n	800e7e4 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x52>
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800e7de:	2364      	movs	r3, #100	@ 0x64
 800e7e0:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box1.setPosition(14, 43, currentWidth, 5);
 800e7e4:	2205      	movs	r2, #5
 800e7e6:	9200      	str	r2, [sp, #0]
 800e7e8:	b21b      	sxth	r3, r3
 800e7ea:	222b      	movs	r2, #43	@ 0x2b
 800e7ec:	210e      	movs	r1, #14
 800e7ee:	4620      	mov	r0, r4
 800e7f0:	f7f4 f95a 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800e7f4:	e7dd      	b.n	800e7b2 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800e7f6:	4603      	mov	r3, r0
 800e7f8:	e7f4      	b.n	800e7e4 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x52>

0800e7fa <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>:

void SakuraGameScreenView::updateAIChakraDisplay()
{
    // Đảm bảo AI chakra level không bị âm
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800e7fa:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800e7fe:	2b00      	cmp	r3, #0
{
 800e800:	b513      	push	{r0, r1, r4, lr}
 800e802:	4602      	mov	r2, r0
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800e804:	da0f      	bge.n	800e826 <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x2c>
 800e806:	2300      	movs	r3, #0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800e808:	f8c2 3a84 	str.w	r3, [r2, #2692]	@ 0xa84

    // Xử lý đặc biệt khi chakra = 0
    if (aiChakraLevel == 0) {
 800e80c:	f8d2 1a84 	ldr.w	r1, [r2, #2692]	@ 0xa84
 800e810:	f502 6408 	add.w	r4, r2, #2176	@ 0x880
 800e814:	b959      	cbnz	r1, 800e82e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x34>
 800e816:	f882 18a5 	strb.w	r1, [r2, #2213]	@ 0x8a5
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của AI
    chakra_box2.setPosition(135, 43, currentWidth, 5);
    chakra_box2.invalidate();
 800e81a:	4620      	mov	r0, r4
}
 800e81c:	b002      	add	sp, #8
 800e81e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box2.invalidate();
 800e822:	f00d bc09 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800e826:	2b64      	cmp	r3, #100	@ 0x64
 800e828:	ddf0      	ble.n	800e80c <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x12>
 800e82a:	2364      	movs	r3, #100	@ 0x64
 800e82c:	e7ec      	b.n	800e808 <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0xe>
 800e82e:	2001      	movs	r0, #1
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800e830:	2356      	movs	r3, #86	@ 0x56
 800e832:	f882 08a5 	strb.w	r0, [r2, #2213]	@ 0x8a5
 800e836:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800e83a:	2a63      	cmp	r2, #99	@ 0x63
 800e83c:	dd0f      	ble.n	800e85e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800e83e:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800e842:	428a      	cmp	r2, r1
 800e844:	dc02      	bgt.n	800e84c <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x52>
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800e846:	2364      	movs	r3, #100	@ 0x64
 800e848:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box2.setPosition(135, 43, currentWidth, 5);
 800e84c:	2205      	movs	r2, #5
 800e84e:	9200      	str	r2, [sp, #0]
 800e850:	b21b      	sxth	r3, r3
 800e852:	222b      	movs	r2, #43	@ 0x2b
 800e854:	2187      	movs	r1, #135	@ 0x87
 800e856:	4620      	mov	r0, r4
 800e858:	f7f4 f926 	bl	8002aa8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800e85c:	e7dd      	b.n	800e81a <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800e85e:	4603      	mov	r3, r0
 800e860:	e7f4      	b.n	800e84c <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x52>
	...

0800e864 <_ZN20SakuraGameScreenView7endGameEb>:
    // Logic game end giờ được xử lý trong updatePlayerHPDisplay() và updateAIHPDisplay()
    return;
}

void SakuraGameScreenView::endGame(bool playerWon)
{
 800e864:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e868:	4604      	mov	r4, r0
    gameEnded = true;
 800e86a:	2601      	movs	r6, #1
 800e86c:	2500      	movs	r5, #0
 800e86e:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69
{
 800e872:	460f      	mov	r7, r1

    // Hide menu actions immediately
    hideActionButtons();
 800e874:	f7ff fd81 	bl	800e37a <_ZN20SakuraGameScreenView17hideActionButtonsEv>
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800e878:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800e87c:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
 800e880:	f00d fbda 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons when game ends
    hideAllPlayerPowerUps();
 800e884:	4620      	mov	r0, r4
 800e886:	f7ff fe44 	bl	800e512 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
    fireAnimationTimer = 0;
    resetTimerActive = false;
    resetTimer = 0;

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800e88a:	4620      	mov	r0, r4
    fireAnimationActive = false;
 800e88c:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800e890:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    resetTimerActive = false;
 800e894:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    resetTimer = 0;
 800e898:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    hideAllFireEffects();
 800e89c:	f7ff fc92 	bl	800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL TO FORCE REFRESH =====
    naruto.invalidate();
 800e8a0:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800e8a4:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800e8a8:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800e8ac:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800e8b0:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800e8b4:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800e8b8:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800e8bc:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800e8c0:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800e8c4:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800e8c8:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800e8cc:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800e8d0:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800e8d4:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800e8d8:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 800e8dc:	f00d fbac 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800e8e0:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800e8e4:	f00d fba8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800e8e8:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800e8ec:	f00d fba4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
    naruto_lose.invalidate();
 800e8f0:	f504 69d9 	add.w	r9, r4, #1736	@ 0x6c8
    naruto_spe.invalidate();
 800e8f4:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800e8f8:	f00d fb9e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800e8fc:	f204 6b9c 	addw	fp, r4, #1692	@ 0x69c
    naruto_lose.invalidate();
 800e900:	4648      	mov	r0, r9
 800e902:	f00d fb99 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800e906:	4658      	mov	r0, fp
 800e908:	f00d fb96 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800e90c:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800e910:	f00d fb92 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800e914:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800e918:	f00d fb8e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800e91c:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800e920:	f00d fb8a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800e924:	f204 5a3c 	addw	sl, r4, #1340	@ 0x53c
    bleach_spe.invalidate();  // QUAN TRỌNG
 800e928:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800e92c:	f00d fb84 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800e930:	f504 68ad 	add.w	r8, r4, #1384	@ 0x568
    bleach_lose.invalidate();
 800e934:	4650      	mov	r0, sl
 800e936:	f00d fb7f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800e93a:	4640      	mov	r0, r8
 800e93c:	f00d fb7c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    if (playerWon) {
 800e940:	b3cf      	cbz	r7, 800e9b6 <_ZN20SakuraGameScreenView7endGameEb+0x152>
        // LED signal for character unlock
        for (int i = 0; i < 8; i++) {
            toggleLED();
 800e942:	f7ff fbbd 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e946:	f7ff fbbb 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e94a:	f7ff fbb9 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e94e:	f7ff fbb7 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e952:	f7ff fbb5 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e956:	f7ff fbb3 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e95a:	f7ff fbb1 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e95e:	f7ff fbaf 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        naruto_win.setVisible(true);
        bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
        win.setVisible(true);

        // FORCE REFRESH ONLY NEEDED SPRITES
        naruto_win.invalidate();
 800e962:	4658      	mov	r0, fp
 800e964:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800e968:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800e96c:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
 800e970:	f00d fb62 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_lose.invalidate();
 800e974:	4650      	mov	r0, sl
 800e976:	f00d fb5f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        win.invalidate();
 800e97a:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800e97e:	f00d fb5b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

        // LED blink rapidly for victory
        for (int i = 0; i < 6; i++) {
            toggleLED();
 800e982:	f7ff fb9d 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e986:	f7ff fb9b 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e98a:	f7ff fb99 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e98e:	f7ff fb97 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e992:	f7ff fb95 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e996:	f7ff fb93 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        application().gotoBackUpScreenScreenNoTransition();
        return;
    }

    // ===== CHỈ KHI PLAYER THẮNG MỚI CÓ AUTO RETURN TIMER =====
    autoReturnTimer = 0;
 800e99a:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = true;
 800e99e:	f884 6a9c 	strb.w	r6, [r4, #2716]	@ 0xa9c

    // Debug: LED signal that timer has started (chỉ khi player thắng)
    toggleLED();
 800e9a2:	f7ff fb8d 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800e9a6:	f7ff fb8b 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800e9aa:	f7ff fb89 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

    // Ensure gameEnded = true is set
    gameEnded = true;
 800e9ae:	f884 6a69 	strb.w	r6, [r4, #2665]	@ 0xa69
}
 800e9b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        naruto_lose.invalidate();
 800e9b6:	4648      	mov	r0, r9
 800e9b8:	f884 66ed 	strb.w	r6, [r4, #1773]	@ 0x6ed
 800e9bc:	f884 658d 	strb.w	r6, [r4, #1421]	@ 0x58d
 800e9c0:	f884 68d1 	strb.w	r6, [r4, #2257]	@ 0x8d1
 800e9c4:	f00d fb38 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_win.invalidate();
 800e9c8:	4640      	mov	r0, r8
 800e9ca:	f00d fb35 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        gameover.invalidate();
 800e9ce:	f604 00ac 	addw	r0, r4, #2220	@ 0x8ac
 800e9d2:	f00d fb31 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800e9d6:	4632      	mov	r2, r6
 800e9d8:	4808      	ldr	r0, [pc, #32]	@ (800e9fc <_ZN20SakuraGameScreenView7endGameEb+0x198>)
 800e9da:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800e9de:	f001 ff0b 	bl	80107f8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800e9e2:	463a      	mov	r2, r7
 800e9e4:	4805      	ldr	r0, [pc, #20]	@ (800e9fc <_ZN20SakuraGameScreenView7endGameEb+0x198>)
 800e9e6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800e9ea:	f001 ff05 	bl	80107f8 <HAL_GPIO_WritePin>
    virtual ~SakuraGameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800e9ee:	f00c f971 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800e9f2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
        application().gotoBackUpScreenScreenNoTransition();
 800e9f6:	f7f5 b935 	b.w	8003c64 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
 800e9fa:	bf00      	nop
 800e9fc:	40021800 	.word	0x40021800

0800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>:
{
 800ea00:	b538      	push	{r3, r4, r5, lr}
 800ea02:	4604      	mov	r4, r0
    hideAllPlayerHPWidgets();
 800ea04:	f7ff fe7f 	bl	800e706 <_ZN20SakuraGameScreenView22hideAllPlayerHPWidgetsEv>
    int roundedHP = (playerHP / 10) * 10;
 800ea08:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
    if (playerHP == 0 || roundedHP == 0) {
 800ea0c:	2b09      	cmp	r3, #9
 800ea0e:	dc15      	bgt.n	800ea3c <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x3c>
 800ea10:	2301      	movs	r3, #1
 800ea12:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        BITMAP_HP_0_ID.invalidate();
 800ea16:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800ea1a:	f00d fb0d 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ea1e:	250a      	movs	r5, #10
            toggleLED();
 800ea20:	f7ff fb4e 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800ea24:	3d01      	subs	r5, #1
 800ea26:	d1fb      	bne.n	800ea20 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x20>
        if (!gameEnded) {
 800ea28:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800ea2c:	2b00      	cmp	r3, #0
 800ea2e:	d172      	bne.n	800eb16 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x116>
            endGame(false); // Player thua
 800ea30:	4620      	mov	r0, r4
 800ea32:	2100      	movs	r1, #0
}
 800ea34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(false); // Player thua
 800ea38:	f7ff bf14 	b.w	800e864 <_ZN20SakuraGameScreenView7endGameEb>
    int roundedHP = (playerHP / 10) * 10;
 800ea3c:	220a      	movs	r2, #10
 800ea3e:	fb93 f1f2 	sdiv	r1, r3, r2
 800ea42:	4351      	muls	r1, r2
    switch (roundedHP) {
 800ea44:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800ea48:	2a09      	cmp	r2, #9
 800ea4a:	d94a      	bls.n	800eae2 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xe2>
 800ea4c:	293c      	cmp	r1, #60	@ 0x3c
 800ea4e:	f04f 0201 	mov.w	r2, #1
 800ea52:	dc20      	bgt.n	800ea96 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x96>
 800ea54:	f1a3 001e 	sub.w	r0, r3, #30
 800ea58:	2809      	cmp	r0, #9
 800ea5a:	d94d      	bls.n	800eaf8 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xf8>
 800ea5c:	291e      	cmp	r1, #30
 800ea5e:	dc0e      	bgt.n	800ea7e <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x7e>
 800ea60:	f1a3 010a 	sub.w	r1, r3, #10
 800ea64:	2909      	cmp	r1, #9
 800ea66:	d951      	bls.n	800eb0c <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x10c>
 800ea68:	3b14      	subs	r3, #20
 800ea6a:	2b09      	cmp	r3, #9
 800ea6c:	d949      	bls.n	800eb02 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x102>
 800ea6e:	2301      	movs	r3, #1
 800ea70:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
            BITMAP_HP_0_ID.invalidate();
 800ea74:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800ea78:	f00d fade 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800ea7c:	e7d4      	b.n	800ea28 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x28>
    switch (roundedHP) {
 800ea7e:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800ea82:	2909      	cmp	r1, #9
 800ea84:	d933      	bls.n	800eaee <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xee>
 800ea86:	3b32      	subs	r3, #50	@ 0x32
 800ea88:	2b09      	cmp	r3, #9
 800ea8a:	d8f0      	bhi.n	800ea6e <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x6e>
 800ea8c:	f884 21c5 	strb.w	r2, [r4, #453]	@ 0x1c5
            BITMAP_HP_50_ID.invalidate();
 800ea90:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800ea94:	e017      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800ea96:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800ea9a:	2809      	cmp	r0, #9
 800ea9c:	d917      	bls.n	800eace <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xce>
 800ea9e:	295a      	cmp	r1, #90	@ 0x5a
 800eaa0:	dc0b      	bgt.n	800eaba <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xba>
 800eaa2:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800eaa6:	2909      	cmp	r1, #9
 800eaa8:	d916      	bls.n	800ead8 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xd8>
 800eaaa:	3b50      	subs	r3, #80	@ 0x50
 800eaac:	2b09      	cmp	r3, #9
 800eaae:	d8de      	bhi.n	800ea6e <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x6e>
 800eab0:	f884 2249 	strb.w	r2, [r4, #585]	@ 0x249
            BITMAP_HP_80_ID.invalidate();
 800eab4:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800eab8:	e005      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800eaba:	2963      	cmp	r1, #99	@ 0x63
 800eabc:	ddd7      	ble.n	800ea6e <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x6e>
 800eabe:	f884 20bd 	strb.w	r2, [r4, #189]	@ 0xbd
            BITMAP_HP_100_ID.invalidate();
 800eac2:	f104 0098 	add.w	r0, r4, #152	@ 0x98
}
 800eac6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID.invalidate();
 800eaca:	f00d bab5 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800eace:	f884 2275 	strb.w	r2, [r4, #629]	@ 0x275
            BITMAP_HP_90_ID.invalidate();
 800ead2:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800ead6:	e7f6      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800ead8:	f884 221d 	strb.w	r2, [r4, #541]	@ 0x21d
            BITMAP_HP_70_ID.invalidate();
 800eadc:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800eae0:	e7f1      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800eae2:	2301      	movs	r3, #1
 800eae4:	f884 31f1 	strb.w	r3, [r4, #497]	@ 0x1f1
            BITMAP_HP_60_ID.invalidate();
 800eae8:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800eaec:	e7eb      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800eaee:	f884 2199 	strb.w	r2, [r4, #409]	@ 0x199
            BITMAP_HP_40_ID.invalidate();
 800eaf2:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800eaf6:	e7e6      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800eaf8:	f884 216d 	strb.w	r2, [r4, #365]	@ 0x16d
            BITMAP_HP_30_ID.invalidate();
 800eafc:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800eb00:	e7e1      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800eb02:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
            BITMAP_HP_20_ID.invalidate();
 800eb06:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800eb0a:	e7dc      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800eb0c:	f884 20e9 	strb.w	r2, [r4, #233]	@ 0xe9
            BITMAP_HP_10_ID.invalidate();
 800eb10:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800eb14:	e7d7      	b.n	800eac6 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
}
 800eb16:	bd38      	pop	{r3, r4, r5, pc}

0800eb18 <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi>:
    if (!isPlayer) return; // Boss không có power-up
 800eb18:	b1c1      	cbz	r1, 800eb4c <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi+0x34>
    switch (type) {
 800eb1a:	2a02      	cmp	r2, #2
 800eb1c:	d002      	beq.n	800eb24 <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi+0xc>
 800eb1e:	2a03      	cmp	r2, #3
 800eb20:	d00a      	beq.n	800eb38 <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi+0x20>
 800eb22:	4770      	bx	lr
            playerHP += 8; // TĂNG TỪ 5 LÊN 8
 800eb24:	f8d0 2a64 	ldr.w	r2, [r0, #2660]	@ 0xa64
 800eb28:	3208      	adds	r2, #8
            if (playerHP > 100) playerHP = 100;
 800eb2a:	2a64      	cmp	r2, #100	@ 0x64
 800eb2c:	bfa8      	it	ge
 800eb2e:	2264      	movge	r2, #100	@ 0x64
 800eb30:	f8c0 2a64 	str.w	r2, [r0, #2660]	@ 0xa64
            updatePlayerHPDisplay();
 800eb34:	f7ff bf64 	b.w	800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
            playerChakraLevel += 20; // TĂNG TỪ 15 LÊN 20
 800eb38:	f8d0 2a80 	ldr.w	r2, [r0, #2688]	@ 0xa80
 800eb3c:	3214      	adds	r2, #20
            if (playerChakraLevel > 100) playerChakraLevel = 100;
 800eb3e:	2a64      	cmp	r2, #100	@ 0x64
 800eb40:	bfa8      	it	ge
 800eb42:	2264      	movge	r2, #100	@ 0x64
 800eb44:	f8c0 2a80 	str.w	r2, [r0, #2688]	@ 0xa80
            updatePlayerChakraDisplay();
 800eb48:	f7ff be23 	b.w	800e792 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
}
 800eb4c:	4770      	bx	lr

0800eb4e <_ZN20SakuraGameScreenView17givePlayerPowerUpEv>:
{
 800eb4e:	b510      	push	{r4, lr}
 800eb50:	4604      	mov	r4, r0
        toggleLED();
 800eb52:	f7ff fab5 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800eb56:	f7ff fab3 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800eb5a:	f7ff fab1 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    int playerRoll = generateRandomNumber(1, 100);
 800eb5e:	2264      	movs	r2, #100	@ 0x64
 800eb60:	2101      	movs	r1, #1
 800eb62:	4620      	mov	r0, r4
 800eb64:	f7ff fb08 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    if (playerRoll >= 1 && playerRoll <= 30) {
 800eb68:	1e43      	subs	r3, r0, #1
 800eb6a:	2b1d      	cmp	r3, #29
 800eb6c:	d915      	bls.n	800eb9a <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x4c>
    } else if (playerRoll >= 31 && playerRoll <= 55) {
 800eb6e:	f1a0 031f 	sub.w	r3, r0, #31
 800eb72:	2b18      	cmp	r3, #24
 800eb74:	d913      	bls.n	800eb9e <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x50>
    } else if (playerRoll >= 56 && playerRoll <= 80) {
 800eb76:	3838      	subs	r0, #56	@ 0x38
        newPlayerPowerUp = 2; // 25% - Heal (ENHANCED)
 800eb78:	2818      	cmp	r0, #24
 800eb7a:	bf8c      	ite	hi
 800eb7c:	2203      	movhi	r2, #3
 800eb7e:	2202      	movls	r2, #2
    playerPowerUpActive = true;
 800eb80:	2101      	movs	r1, #1
    applyInstantPowerUp(true, playerPowerUpType);
 800eb82:	4620      	mov	r0, r4
    playerPowerUpType = newPlayerPowerUp;
 800eb84:	f8c4 2aa4 	str.w	r2, [r4, #2724]	@ 0xaa4
    playerPowerUpActive = true;
 800eb88:	f884 1aac 	strb.w	r1, [r4, #2732]	@ 0xaac
    applyInstantPowerUp(true, playerPowerUpType);
 800eb8c:	f7ff ffc4 	bl	800eb18 <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi>
    updatePlayerPowerUpDisplay();
 800eb90:	4620      	mov	r0, r4
}
 800eb92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updatePlayerPowerUpDisplay();
 800eb96:	f7ff bcd9 	b.w	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
        newPlayerPowerUp = 4; // 30% - Shield
 800eb9a:	2204      	movs	r2, #4
 800eb9c:	e7f0      	b.n	800eb80 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x32>
        newPlayerPowerUp = 1; // 25% - Double Damage
 800eb9e:	460a      	mov	r2, r1
 800eba0:	e7ee      	b.n	800eb80 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x32>

0800eba2 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0>:
        turnCounter++;
 800eba2:	f8d0 3aa0 	ldr.w	r3, [r0, #2720]	@ 0xaa0
void SakuraGameScreenView::checkTurnComplete()
 800eba6:	b510      	push	{r4, lr}
        turnCounter++;
 800eba8:	3301      	adds	r3, #1
void SakuraGameScreenView::checkTurnComplete()
 800ebaa:	4604      	mov	r4, r0
        turnCounter++;
 800ebac:	f8c0 3aa0 	str.w	r3, [r0, #2720]	@ 0xaa0
        toggleLED();
 800ebb0:	f7ff fa86 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        if (!playerSpecialUsed && !aiSpecialUsed) {
 800ebb4:	f894 3a8a 	ldrb.w	r3, [r4, #2698]	@ 0xa8a
 800ebb8:	b963      	cbnz	r3, 800ebd4 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x32>
 800ebba:	f894 3a8b 	ldrb.w	r3, [r4, #2699]	@ 0xa8b
 800ebbe:	b94b      	cbnz	r3, 800ebd4 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x32>
            int powerUpChance = generateRandomNumber(1, 100);
 800ebc0:	2264      	movs	r2, #100	@ 0x64
 800ebc2:	2101      	movs	r1, #1
 800ebc4:	4620      	mov	r0, r4
 800ebc6:	f7ff fad7 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
            if (powerUpChance <= 25) {
 800ebca:	2819      	cmp	r0, #25
 800ebcc:	dc02      	bgt.n	800ebd4 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x32>
                givePlayerPowerUp(); // Chỉ player nhận power-up
 800ebce:	4620      	mov	r0, r4
 800ebd0:	f7ff ffbd 	bl	800eb4e <_ZN20SakuraGameScreenView17givePlayerPowerUpEv>
        if (playerPowerUpActive && (playerPowerUpType == 2 || playerPowerUpType == 3 || playerPowerUpType == 4)) {
 800ebd4:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800ebd8:	b163      	cbz	r3, 800ebf4 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x52>
 800ebda:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800ebde:	3b02      	subs	r3, #2
 800ebe0:	2b02      	cmp	r3, #2
 800ebe2:	d807      	bhi.n	800ebf4 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x52>
        playerPowerUpActive = false;
 800ebe4:	2300      	movs	r3, #0
 800ebe6:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800ebea:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800ebee:	4620      	mov	r0, r4
 800ebf0:	f7ff fcac 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
        playerActionDone = false;
 800ebf4:	2300      	movs	r3, #0
 800ebf6:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
        playerSpecialUsed = false;
 800ebfa:	f8a4 3a8a 	strh.w	r3, [r4, #2698]	@ 0xa8a
}
 800ebfe:	bd10      	pop	{r4, pc}

0800ec00 <_ZN20SakuraGameScreenView17checkTurnCompleteEv>:
    if (playerActionDone && aiActionDone) {
 800ec00:	f890 2aae 	ldrb.w	r2, [r0, #2734]	@ 0xaae
 800ec04:	b122      	cbz	r2, 800ec10 <_ZN20SakuraGameScreenView17checkTurnCompleteEv+0x10>
 800ec06:	f890 3aaf 	ldrb.w	r3, [r0, #2735]	@ 0xaaf
 800ec0a:	b10b      	cbz	r3, 800ec10 <_ZN20SakuraGameScreenView17checkTurnCompleteEv+0x10>
 800ec0c:	f7ff bfc9 	b.w	800eba2 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0>
}
 800ec10:	4770      	bx	lr

0800ec12 <_ZN20SakuraGameScreenView12playerDefendEv>:
{
 800ec12:	b570      	push	{r4, r5, r6, lr}
 800ec14:	4604      	mov	r4, r0
 800ec16:	2601      	movs	r6, #1
 800ec18:	2500      	movs	r5, #0
    resetNarutoState();
 800ec1a:	f7ff fd12 	bl	800e642 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
    naruto_def.invalidate();
 800ec1e:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800ec22:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800ec26:	f884 6745 	strb.w	r6, [r4, #1861]	@ 0x745
 800ec2a:	f00d fa05 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800ec2e:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800ec32:	f00d fa01 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800ec36:	2207      	movs	r2, #7
 800ec38:	2103      	movs	r1, #3
    playerDefending = true;
 800ec3a:	f884 6a88 	strb.w	r6, [r4, #2696]	@ 0xa88
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800ec3e:	4620      	mov	r0, r4
 800ec40:	f7ff fa9a 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    playerHP += healAmount;
 800ec44:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800ec48:	4403      	add	r3, r0
    if (playerHP > 100) playerHP = 100;
 800ec4a:	2b64      	cmp	r3, #100	@ 0x64
 800ec4c:	bfa8      	it	ge
 800ec4e:	2364      	movge	r3, #100	@ 0x64
 800ec50:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    playerChakraLevel += generateRandomNumber(10, 18); // TĂNG TỪ 8-15 LÊN 10-18
 800ec54:	2212      	movs	r2, #18
 800ec56:	210a      	movs	r1, #10
 800ec58:	4620      	mov	r0, r4
 800ec5a:	f7ff fa8d 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800ec5e:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800ec62:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800ec64:	2b64      	cmp	r3, #100	@ 0x64
 800ec66:	bfa8      	it	ge
 800ec68:	2364      	movge	r3, #100	@ 0x64
 800ec6a:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (playerPowerUpActive && playerPowerUpType == 1) {
 800ec6e:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800ec72:	b153      	cbz	r3, 800ec8a <_ZN20SakuraGameScreenView12playerDefendEv+0x78>
 800ec74:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800ec78:	42b3      	cmp	r3, r6
 800ec7a:	d106      	bne.n	800ec8a <_ZN20SakuraGameScreenView12playerDefendEv+0x78>
        playerPowerUpActive = false;
 800ec7c:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800ec80:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800ec84:	4620      	mov	r0, r4
 800ec86:	f7ff fc61 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800ec8a:	4620      	mov	r0, r4
 800ec8c:	f7ff feb8 	bl	800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800ec90:	4620      	mov	r0, r4
 800ec92:	f7ff fd7e 	bl	800e792 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800ec96:	f7ff fa13 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800ec9a:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800ec9c:	2200      	movs	r2, #0
    playerActionDone = true;
 800ec9e:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800eca2:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800eca6:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800ecaa:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800ecae:	bd70      	pop	{r4, r5, r6, pc}

0800ecb0 <_ZN20SakuraGameScreenView13playerSpecialEv>:
{
 800ecb0:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded || playerChakraLevel < 100) return;
 800ecb2:	f890 5a69 	ldrb.w	r5, [r0, #2665]	@ 0xa69
{
 800ecb6:	4604      	mov	r4, r0
    if (gameEnded || playerChakraLevel < 100) return;
 800ecb8:	2d00      	cmp	r5, #0
 800ecba:	d156      	bne.n	800ed6a <_ZN20SakuraGameScreenView13playerSpecialEv+0xba>
 800ecbc:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800ecc0:	2b63      	cmp	r3, #99	@ 0x63
 800ecc2:	dd52      	ble.n	800ed6a <_ZN20SakuraGameScreenView13playerSpecialEv+0xba>
 800ecc4:	2601      	movs	r6, #1
    resetNarutoState();
 800ecc6:	f7ff fcbc 	bl	800e642 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
    naruto_spe.invalidate();
 800ecca:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800ecce:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800ecd2:	f884 6719 	strb.w	r6, [r4, #1817]	@ 0x719
 800ecd6:	f00d f9af 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800ecda:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800ecde:	f00d f9ab 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    playerHP = 100; // Full heal
 800ece2:	2364      	movs	r3, #100	@ 0x64
 800ece4:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    if (!playerPowerUpActive) {
 800ece8:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800ecec:	bbf3      	cbnz	r3, 800ed6c <_ZN20SakuraGameScreenView13playerSpecialEv+0xbc>
        playerPowerUpType = 4; // Set shield
 800ecee:	2304      	movs	r3, #4
 800ecf0:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        playerPowerUpActive = true;
 800ecf4:	f884 6aac 	strb.w	r6, [r4, #2732]	@ 0xaac
        updatePlayerPowerUpDisplay();
 800ecf8:	4620      	mov	r0, r4
 800ecfa:	f7ff fc27 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    playerChakraLevel = 0;
 800ecfe:	2300      	movs	r3, #0
 800ed00:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    updatePlayerHPDisplay();
 800ed04:	4620      	mov	r0, r4
 800ed06:	f7ff fe7b 	bl	800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800ed0a:	4620      	mov	r0, r4
 800ed0c:	f7ff fd41 	bl	800e792 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    updatePlayerPowerUpDisplay(); // Đảm bảo shield được hiển thị
 800ed10:	4620      	mov	r0, r4
 800ed12:	f7ff fc1b 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
        toggleLED(); // 8 LED blinks để báo hiệu healing + shield
 800ed16:	f7ff f9d3 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed1a:	f7ff f9d1 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed1e:	f7ff f9cf 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed22:	f7ff f9cd 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed26:	f7ff f9cb 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed2a:	f7ff f9c9 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed2e:	f7ff f9c7 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed32:	f7ff f9c5 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800ed36:	2301      	movs	r3, #1
 800ed38:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = true; // Đánh dấu đã dùng special (không có power-up generation)
 800ed3c:	f884 3a8a 	strb.w	r3, [r4, #2698]	@ 0xa8a
    if (playerPowerUpActive && playerPowerUpType == 4) {
 800ed40:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800ed44:	b14b      	cbz	r3, 800ed5a <_ZN20SakuraGameScreenView13playerSpecialEv+0xaa>
 800ed46:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800ed4a:	2b04      	cmp	r3, #4
 800ed4c:	d105      	bne.n	800ed5a <_ZN20SakuraGameScreenView13playerSpecialEv+0xaa>
            toggleLED(); // 3 LED blinks thêm để confirm shield
 800ed4e:	f7ff f9b7 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed52:	f7ff f9b5 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ed56:	f7ff f9b3 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800ed5a:	f7ff f9b1 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    resetTimer = 0;
 800ed5e:	2300      	movs	r3, #0
 800ed60:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800ed64:	2301      	movs	r3, #1
 800ed66:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800ed6a:	bd70      	pop	{r4, r5, r6, pc}
    } else if (playerPowerUpActive && playerPowerUpType != 4) {
 800ed6c:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800ed70:	2b04      	cmp	r3, #4
 800ed72:	d0c4      	beq.n	800ecfe <_ZN20SakuraGameScreenView13playerSpecialEv+0x4e>
        playerPowerUpActive = false;
 800ed74:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800ed78:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800ed7c:	4620      	mov	r0, r4
 800ed7e:	f7ff fbe5 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
 800ed82:	e7b4      	b.n	800ecee <_ZN20SakuraGameScreenView13playerSpecialEv+0x3e>

0800ed84 <_ZN20SakuraGameScreenView8aiAttackEv>:
{
 800ed84:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded) return;
 800ed86:	f890 6a69 	ldrb.w	r6, [r0, #2665]	@ 0xa69
{
 800ed8a:	4604      	mov	r4, r0
    if (gameEnded) return;
 800ed8c:	2e00      	cmp	r6, #0
 800ed8e:	d157      	bne.n	800ee40 <_ZN20SakuraGameScreenView8aiAttackEv+0xbc>
    resetBleachState();
 800ed90:	f7ff fc88 	bl	800e6a4 <_ZN20SakuraGameScreenView16resetBleachStateEv>
 800ed94:	2301      	movs	r3, #1
 800ed96:	f884 363d 	strb.w	r3, [r4, #1597]	@ 0x63d
    bleach_atk.invalidate();
 800ed9a:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800ed9e:	f884 6669 	strb.w	r6, [r4, #1641]	@ 0x669
 800eda2:	f00d f949 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800eda6:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800edaa:	f00d f945 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800edae:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
 800edb2:	2b03      	cmp	r3, #3
 800edb4:	d045      	beq.n	800ee42 <_ZN20SakuraGameScreenView8aiAttackEv+0xbe>
 800edb6:	2b04      	cmp	r3, #4
 800edb8:	d046      	beq.n	800ee48 <_ZN20SakuraGameScreenView8aiAttackEv+0xc4>
 800edba:	2b02      	cmp	r3, #2
            baseDamage = generateRandomNumber(4, 10);
 800edbc:	bf19      	ittee	ne
 800edbe:	220a      	movne	r2, #10
 800edc0:	2104      	movne	r1, #4
            baseDamage = generateRandomNumber(6, 12);
 800edc2:	220c      	moveq	r2, #12
 800edc4:	2106      	moveq	r1, #6
            baseDamage = generateRandomNumber(10, 18);
 800edc6:	4620      	mov	r0, r4
 800edc8:	f7ff f9d6 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800edcc:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
            baseDamage = generateRandomNumber(10, 18);
 800edd0:	4605      	mov	r5, r0
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800edd2:	b11b      	cbz	r3, 800eddc <_ZN20SakuraGameScreenView8aiAttackEv+0x58>
 800edd4:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800edd8:	2a04      	cmp	r2, #4
 800edda:	d038      	beq.n	800ee4e <_ZN20SakuraGameScreenView8aiAttackEv+0xca>
    int actualDamage = calculateDamage(baseDamage, playerDefending, false, playerHasShield);
 800eddc:	f894 3a88 	ldrb.w	r3, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800ede0:	b3c3      	cbz	r3, 800ee54 <_ZN20SakuraGameScreenView8aiAttackEv+0xd0>
        if (finalDamage < 1) finalDamage = 1;
 800ede2:	2d01      	cmp	r5, #1
 800ede4:	dd38      	ble.n	800ee58 <_ZN20SakuraGameScreenView8aiAttackEv+0xd4>
        finalDamage = finalDamage / 2;
 800ede6:	106d      	asrs	r5, r5, #1
    playerHP -= actualDamage;
 800ede8:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800edec:	1b5b      	subs	r3, r3, r5
    if (playerHP < 0) playerHP = 0;
 800edee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800edf2:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    int chakraGain = generateRandomNumber(4, 8); // GIẢM TỪ 8-15 XUỐNG 4-8
 800edf6:	2208      	movs	r2, #8
 800edf8:	2104      	movs	r1, #4
 800edfa:	4620      	mov	r0, r4
 800edfc:	f7ff f9bc 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    aiChakraLevel += chakraGain;
 800ee00:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800ee04:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800ee06:	2b64      	cmp	r3, #100	@ 0x64
 800ee08:	bfa8      	it	ge
 800ee0a:	2364      	movge	r3, #100	@ 0x64
 800ee0c:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800ee10:	b13e      	cbz	r6, 800ee22 <_ZN20SakuraGameScreenView8aiAttackEv+0x9e>
 800ee12:	b935      	cbnz	r5, 800ee22 <_ZN20SakuraGameScreenView8aiAttackEv+0x9e>
        playerPowerUpActive = false;
 800ee14:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800ee18:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800ee1c:	4620      	mov	r0, r4
 800ee1e:	f7ff fb95 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800ee22:	4620      	mov	r0, r4
 800ee24:	f7ff fdec 	bl	800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updateAIChakraDisplay();
 800ee28:	4620      	mov	r0, r4
 800ee2a:	f7ff fce6 	bl	800e7fa <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    startAttackFireAnimation();
 800ee2e:	4620      	mov	r0, r4
 800ee30:	f7ff f9df 	bl	800e1f2 <_ZN20SakuraGameScreenView24startAttackFireAnimationEv>
    resetTimer = 0;
 800ee34:	2300      	movs	r3, #0
 800ee36:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800ee3a:	2301      	movs	r3, #1
 800ee3c:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800ee40:	bd70      	pop	{r4, r5, r6, pc}
            baseDamage = generateRandomNumber(8, 15);
 800ee42:	220f      	movs	r2, #15
 800ee44:	2108      	movs	r1, #8
 800ee46:	e7be      	b.n	800edc6 <_ZN20SakuraGameScreenView8aiAttackEv+0x42>
            baseDamage = generateRandomNumber(10, 18);
 800ee48:	2212      	movs	r2, #18
 800ee4a:	210a      	movs	r1, #10
 800ee4c:	e7bb      	b.n	800edc6 <_ZN20SakuraGameScreenView8aiAttackEv+0x42>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800ee4e:	461e      	mov	r6, r3
        return 0; // Shield chặn hoàn toàn
 800ee50:	2500      	movs	r5, #0
 800ee52:	e7c9      	b.n	800ede8 <_ZN20SakuraGameScreenView8aiAttackEv+0x64>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800ee54:	461e      	mov	r6, r3
 800ee56:	e7c7      	b.n	800ede8 <_ZN20SakuraGameScreenView8aiAttackEv+0x64>
        if (finalDamage < 1) finalDamage = 1;
 800ee58:	2501      	movs	r5, #1
 800ee5a:	e7c5      	b.n	800ede8 <_ZN20SakuraGameScreenView8aiAttackEv+0x64>

0800ee5c <_ZN20SakuraGameScreenView9aiSpecialEv>:
{
 800ee5c:	b538      	push	{r3, r4, r5, lr}
    if (rageMode && bossPhase >= 3) {
 800ee5e:	f890 3a78 	ldrb.w	r3, [r0, #2680]	@ 0xa78
{
 800ee62:	4604      	mov	r4, r0
    if (rageMode && bossPhase >= 3) {
 800ee64:	2b00      	cmp	r3, #0
 800ee66:	d04a      	beq.n	800eefe <_ZN20SakuraGameScreenView9aiSpecialEv+0xa2>
 800ee68:	f8d0 3a6c 	ldr.w	r3, [r0, #2668]	@ 0xa6c
    int requiredChakra = 100;
 800ee6c:	2b02      	cmp	r3, #2
 800ee6e:	bfcc      	ite	gt
 800ee70:	2350      	movgt	r3, #80	@ 0x50
 800ee72:	2364      	movle	r3, #100	@ 0x64
    if (aiChakraLevel < requiredChakra || gameEnded) {
 800ee74:	f8d4 2a84 	ldr.w	r2, [r4, #2692]	@ 0xa84
 800ee78:	429a      	cmp	r2, r3
 800ee7a:	db3f      	blt.n	800eefc <_ZN20SakuraGameScreenView9aiSpecialEv+0xa0>
 800ee7c:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800ee80:	bbe5      	cbnz	r5, 800eefc <_ZN20SakuraGameScreenView9aiSpecialEv+0xa0>
    resetBleachState();
 800ee82:	4620      	mov	r0, r4
 800ee84:	f7ff fc0e 	bl	800e6a4 <_ZN20SakuraGameScreenView16resetBleachStateEv>
 800ee88:	2301      	movs	r3, #1
 800ee8a:	f884 35e5 	strb.w	r3, [r4, #1509]	@ 0x5e5
    bleach_spe.invalidate();
 800ee8e:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800ee92:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800ee96:	f00d f8cf 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800ee9a:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800ee9e:	f00d f8cb 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800eea2:	f894 2aac 	ldrb.w	r2, [r4, #2732]	@ 0xaac
 800eea6:	b11a      	cbz	r2, 800eeb0 <_ZN20SakuraGameScreenView9aiSpecialEv+0x54>
 800eea8:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800eeac:	2b04      	cmp	r3, #4
 800eeae:	d003      	beq.n	800eeb8 <_ZN20SakuraGameScreenView9aiSpecialEv+0x5c>
    int actualDamage = calculateSpecialDamage(specialDamage, playerDefending, playerHasShield);
 800eeb0:	f894 2a88 	ldrb.w	r2, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800eeb4:	bb2a      	cbnz	r2, 800ef02 <_ZN20SakuraGameScreenView9aiSpecialEv+0xa6>
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800eeb6:	2546      	movs	r5, #70	@ 0x46
    playerHP -= actualDamage;
 800eeb8:	f8d4 1a64 	ldr.w	r1, [r4, #2660]	@ 0xa64
 800eebc:	1b49      	subs	r1, r1, r5
    if (playerHP < 0) playerHP = 0;
 800eebe:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 800eec2:	f8c4 1a64 	str.w	r1, [r4, #2660]	@ 0xa64
    aiChakraLevel = 0;
 800eec6:	2100      	movs	r1, #0
 800eec8:	f8c4 1a84 	str.w	r1, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800eecc:	b13a      	cbz	r2, 800eede <_ZN20SakuraGameScreenView9aiSpecialEv+0x82>
 800eece:	b935      	cbnz	r5, 800eede <_ZN20SakuraGameScreenView9aiSpecialEv+0x82>
        playerPowerUpActive = false;
 800eed0:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800eed4:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800eed8:	4620      	mov	r0, r4
 800eeda:	f7ff fb37 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updateAIChakraDisplay();
 800eede:	4620      	mov	r0, r4
 800eee0:	f7ff fc8b 	bl	800e7fa <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    updatePlayerHPDisplay();
 800eee4:	4620      	mov	r0, r4
 800eee6:	f7ff fd8b 	bl	800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    startSpecialFireAnimation();
 800eeea:	4620      	mov	r0, r4
 800eeec:	f7ff f997 	bl	800e21e <_ZN20SakuraGameScreenView25startSpecialFireAnimationEv>
    resetTimer = 0;
 800eef0:	2300      	movs	r3, #0
 800eef2:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800eef6:	2301      	movs	r3, #1
 800eef8:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800eefc:	bd38      	pop	{r3, r4, r5, pc}
    int requiredChakra = 100;
 800eefe:	2364      	movs	r3, #100	@ 0x64
 800ef00:	e7b8      	b.n	800ee74 <_ZN20SakuraGameScreenView9aiSpecialEv+0x18>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800ef02:	2200      	movs	r2, #0
        finalDamage = finalDamage / 2; // 70 / 2 = 35
 800ef04:	2523      	movs	r5, #35	@ 0x23
 800ef06:	e7d7      	b.n	800eeb8 <_ZN20SakuraGameScreenView9aiSpecialEv+0x5c>

0800ef08 <_ZN20SakuraGameScreenView17activateEasterEggEv>:

void SakuraGameScreenView::activateEasterEgg()
{
 800ef08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Set flag
    easterEggActivated = true;
    easterEggTimer = 0;
 800ef0a:	2500      	movs	r5, #0
    easterEggActivated = true;
 800ef0c:	2601      	movs	r6, #1
{
 800ef0e:	4604      	mov	r4, r0
    easterEggTimer = 0;
 800ef10:	f8c0 5acc 	str.w	r5, [r0, #2764]	@ 0xacc
    gameEnded = true; // Kết thúc game ngay lập tức

    // FORCE STOP ALL ANIMATIONS
    fireAnimationActive = false;
 800ef14:	f880 5ab4 	strb.w	r5, [r0, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800ef18:	f8c0 5ab0 	str.w	r5, [r0, #2736]	@ 0xab0
    resetTimerActive = false;
 800ef1c:	f880 5a94 	strb.w	r5, [r0, #2708]	@ 0xa94
    resetTimer = 0;
 800ef20:	f8c0 5a90 	str.w	r5, [r0, #2704]	@ 0xa90
    easterEggActivated = true;
 800ef24:	f880 6ac8 	strb.w	r6, [r0, #2760]	@ 0xac8
    gameEnded = true; // Kết thúc game ngay lập tức
 800ef28:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800ef2c:	f7ff f94a 	bl	800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>

    // Hide menu actions immediately
    hideActionButtons();
 800ef30:	4620      	mov	r0, r4
 800ef32:	f7ff fa22 	bl	800e37a <_ZN20SakuraGameScreenView17hideActionButtonsEv>
 800ef36:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800ef3a:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800ef3e:	f00d f87b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons
    hideAllPlayerPowerUps();
 800ef42:	4620      	mov	r0, r4
 800ef44:	f7ff fae5 	bl	800e512 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
 800ef48:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800ef4c:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800ef50:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800ef54:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800ef58:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800ef5c:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800ef60:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800ef64:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800ef68:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800ef6c:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800ef70:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800ef74:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800ef78:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800ef7c:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL =====
    naruto.invalidate();
 800ef80:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800ef84:	f00d f858 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800ef88:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800ef8c:	f00d f854 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800ef90:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800ef94:	f00d f850 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800ef98:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    naruto_lose.invalidate();
    naruto_win.invalidate();
 800ef9c:	f204 679c 	addw	r7, r4, #1692	@ 0x69c
    naruto_spe.invalidate();
 800efa0:	f00d f84a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800efa4:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800efa8:	f00d f846 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800efac:	4638      	mov	r0, r7
 800efae:	f00d f843 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800efb2:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800efb6:	f00d f83f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800efba:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800efbe:	f00d f83b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800efc2:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800efc6:	f204 553c 	addw	r5, r4, #1340	@ 0x53c
    bleach_def.invalidate();
 800efca:	f00d f835 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
 800efce:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800efd2:	f00d f831 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800efd6:	4628      	mov	r0, r5
 800efd8:	f00d f82e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800efdc:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800efe0:	f00d f82a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800efe4:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800efe8:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800efec:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
    // ===== CHỈ HIỂN THỊ SPRITE CẦN THIẾT =====
    naruto_win.setVisible(true);
    bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
    win.setVisible(true);

    naruto_win.invalidate();
 800eff0:	4638      	mov	r0, r7
 800eff2:	f00d f821 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800eff6:	4628      	mov	r0, r5
 800eff8:	f00d f81e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    win.invalidate();
 800effc:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800f000:	f00d f81a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f004:	240f      	movs	r4, #15

    // ===== EASTER EGG LED PATTERN =====
    for (int i = 0; i < 15; i++) {
        toggleLED(); // 15 LED blinks để báo hiệu Easter Egg
 800f006:	f7ff f85b 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    for (int i = 0; i < 15; i++) {
 800f00a:	3c01      	subs	r4, #1
 800f00c:	d1fb      	bne.n	800f006 <_ZN20SakuraGameScreenView17activateEasterEggEv+0xfe>
    }

    // Debug: LED signal that Easter Egg activated
    toggleLED();
 800f00e:	f7ff f857 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800f012:	f7ff f855 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
}
 800f016:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    toggleLED();
 800f01a:	f7ff b851 	b.w	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

0800f01e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>:

void SakuraGameScreenView::updateBossHPDisplay()
{
 800f01e:	b538      	push	{r3, r4, r5, lr}
 800f020:	4604      	mov	r4, r0
    // Hide all boss HP widgets first
    hideAllBossHPWidgets();
 800f022:	f7ff fa01 	bl	800e428 <_ZN20SakuraGameScreenView20hideAllBossHPWidgetsEv>

    // ===== HỆ THỐNG HP ĐỐN GIẢN - GIỐNG GAMESCREEN NHƯNG BẮT ĐẦU TỪ 130 =====
    // Làm tròn xuống bội số 10 (giống GameScreenView)
    int roundedHP = (bossCurrentHP / 10) * 10;
 800f026:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    if (roundedHP < 0) roundedHP = 0;
    if (roundedHP > 130) roundedHP = 130;

    // DEBUG: Force test khi Boss HP = 0
    if (bossCurrentHP == 0 || roundedHP == 0) {
 800f02a:	2b09      	cmp	r3, #9
 800f02c:	dc16      	bgt.n	800f05c <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x3e>
 800f02e:	2301      	movs	r3, #1
 800f030:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
        // FORCE HIỂN THỊ HP_0_ID_1
        BITMAP_HP_0_ID_1.setVisible(true);
        BITMAP_HP_0_ID_1.invalidate();
 800f034:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800f038:	f00c fffe 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f03c:	250a      	movs	r5, #10

        // DEBUG: LED blink nhiều lần
        for (int i = 0; i < 10; i++) {
            toggleLED();
 800f03e:	f7ff f83f 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800f042:	3d01      	subs	r5, #1
 800f044:	d1fb      	bne.n	800f03e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x20>
        }

        // FORCE END GAME
        if (!gameEnded) {
 800f046:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800f04a:	2b00      	cmp	r3, #0
 800f04c:	f040 808d 	bne.w	800f16a <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x14c>
            endGame(true); // Player thắng
 800f050:	4620      	mov	r0, r4
 800f052:	2101      	movs	r1, #1
            if (!gameEnded) {
                endGame(true); // Player thắng
            }
            break;
    }
}
 800f054:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(true); // Player thắng
 800f058:	f7ff bc04 	b.w	800e864 <_ZN20SakuraGameScreenView7endGameEb>
    int roundedHP = (bossCurrentHP / 10) * 10;
 800f05c:	220a      	movs	r2, #10
 800f05e:	fb93 f1f2 	sdiv	r1, r3, r2
 800f062:	4351      	muls	r1, r2
    switch (roundedHP) {
 800f064:	f1a3 0246 	sub.w	r2, r3, #70	@ 0x46
 800f068:	2a09      	cmp	r2, #9
 800f06a:	d95f      	bls.n	800f12c <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x10e>
 800f06c:	2946      	cmp	r1, #70	@ 0x46
 800f06e:	f04f 0201 	mov.w	r2, #1
 800f072:	dc24      	bgt.n	800f0be <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xa0>
 800f074:	f1a3 0028 	sub.w	r0, r3, #40	@ 0x28
 800f078:	2809      	cmp	r0, #9
 800f07a:	d962      	bls.n	800f142 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x124>
 800f07c:	2928      	cmp	r1, #40	@ 0x28
 800f07e:	dc12      	bgt.n	800f0a6 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x88>
 800f080:	f1a3 0114 	sub.w	r1, r3, #20
 800f084:	2909      	cmp	r1, #9
 800f086:	d966      	bls.n	800f156 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x138>
 800f088:	f1a3 011e 	sub.w	r1, r3, #30
 800f08c:	2909      	cmp	r1, #9
 800f08e:	d95d      	bls.n	800f14c <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x12e>
 800f090:	3b0a      	subs	r3, #10
 800f092:	2b09      	cmp	r3, #9
 800f094:	d964      	bls.n	800f160 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x142>
 800f096:	2301      	movs	r3, #1
 800f098:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
            BITMAP_HP_0_ID_1.invalidate();
 800f09c:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800f0a0:	f00c ffca 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800f0a4:	e7cf      	b.n	800f046 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x28>
    switch (roundedHP) {
 800f0a6:	f1a3 0132 	sub.w	r1, r3, #50	@ 0x32
 800f0aa:	2909      	cmp	r1, #9
 800f0ac:	d944      	bls.n	800f138 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x11a>
 800f0ae:	3b3c      	subs	r3, #60	@ 0x3c
 800f0b0:	2b09      	cmp	r3, #9
 800f0b2:	d8f0      	bhi.n	800f096 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x78>
 800f0b4:	f884 23d5 	strb.w	r2, [r4, #981]	@ 0x3d5
            BITMAP_HP_60_ID_1.invalidate();
 800f0b8:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800f0bc:	e01e      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800f0be:	f1a3 006e 	sub.w	r0, r3, #110	@ 0x6e
 800f0c2:	2809      	cmp	r0, #9
 800f0c4:	d923      	bls.n	800f10e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xf0>
 800f0c6:	296e      	cmp	r1, #110	@ 0x6e
 800f0c8:	dc0f      	bgt.n	800f0ea <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xcc>
 800f0ca:	f1a3 015a 	sub.w	r1, r3, #90	@ 0x5a
 800f0ce:	2909      	cmp	r1, #9
 800f0d0:	d927      	bls.n	800f122 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x104>
 800f0d2:	f1a3 0164 	sub.w	r1, r3, #100	@ 0x64
 800f0d6:	2909      	cmp	r1, #9
 800f0d8:	d91e      	bls.n	800f118 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xfa>
 800f0da:	3b50      	subs	r3, #80	@ 0x50
 800f0dc:	2b09      	cmp	r3, #9
 800f0de:	d8da      	bhi.n	800f096 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x78>
 800f0e0:	f884 237d 	strb.w	r2, [r4, #893]	@ 0x37d
            BITMAP_HP_80_ID_1.invalidate();
 800f0e4:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800f0e8:	e008      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800f0ea:	3b78      	subs	r3, #120	@ 0x78
 800f0ec:	2b09      	cmp	r3, #9
 800f0ee:	d909      	bls.n	800f104 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xe6>
 800f0f0:	2981      	cmp	r1, #129	@ 0x81
 800f0f2:	ddd0      	ble.n	800f096 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x78>
 800f0f4:	f884 22a1 	strb.w	r2, [r4, #673]	@ 0x2a1
            BITMAP_HP_130_ID_1.invalidate();
 800f0f8:	f504 701f 	add.w	r0, r4, #636	@ 0x27c
}
 800f0fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID_1.invalidate();
 800f100:	f00c bf9a 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f104:	f884 22cd 	strb.w	r2, [r4, #717]	@ 0x2cd
            BITMAP_HP_120_ID_1.invalidate();
 800f108:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800f10c:	e7f6      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f10e:	f884 22f9 	strb.w	r2, [r4, #761]	@ 0x2f9
            BITMAP_HP_110_ID_1.invalidate();
 800f112:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800f116:	e7f1      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f118:	f884 2325 	strb.w	r2, [r4, #805]	@ 0x325
            BITMAP_HP_100_ID_1.invalidate();
 800f11c:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800f120:	e7ec      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f122:	f884 2351 	strb.w	r2, [r4, #849]	@ 0x351
            BITMAP_HP_90_ID_1.invalidate();
 800f126:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800f12a:	e7e7      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f12c:	2301      	movs	r3, #1
 800f12e:	f884 33a9 	strb.w	r3, [r4, #937]	@ 0x3a9
            BITMAP_HP_70_ID_1.invalidate();
 800f132:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800f136:	e7e1      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f138:	f884 2401 	strb.w	r2, [r4, #1025]	@ 0x401
            BITMAP_HP_50_ID_1.invalidate();
 800f13c:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800f140:	e7dc      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f142:	f884 242d 	strb.w	r2, [r4, #1069]	@ 0x42d
            BITMAP_HP_40_ID_1.invalidate();
 800f146:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800f14a:	e7d7      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f14c:	f884 2459 	strb.w	r2, [r4, #1113]	@ 0x459
            BITMAP_HP_30_ID_1.invalidate();
 800f150:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800f154:	e7d2      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f156:	f884 2485 	strb.w	r2, [r4, #1157]	@ 0x485
            BITMAP_HP_20_ID_1.invalidate();
 800f15a:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800f15e:	e7cd      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f160:	f884 24b1 	strb.w	r2, [r4, #1201]	@ 0x4b1
            BITMAP_HP_10_ID_1.invalidate();
 800f164:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800f168:	e7c8      	b.n	800f0fc <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
}
 800f16a:	bd38      	pop	{r3, r4, r5, pc}

0800f16c <_ZN20SakuraGameScreenView11setupScreenEv>:
{
 800f16c:	b538      	push	{r3, r4, r5, lr}
 800f16e:	4604      	mov	r4, r0
    SakuraGameScreenViewBase::setupScreen();
 800f170:	f7f9 f9ab 	bl	80084ca <_ZN24SakuraGameScreenViewBase11setupScreenEv>
    initGPIO();
 800f174:	4620      	mov	r0, r4
 800f176:	f7fe ffd9 	bl	800e12c <_ZN20SakuraGameScreenView8initGPIOEv>
    randomSeed = HAL_GetTick();
 800f17a:	f001 f8dd 	bl	8010338 <HAL_GetTick>
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800f17e:	4930      	ldr	r1, [pc, #192]	@ (800f240 <_ZN20SakuraGameScreenView11setupScreenEv+0xd4>)
 800f180:	4b30      	ldr	r3, [pc, #192]	@ (800f244 <_ZN20SakuraGameScreenView11setupScreenEv+0xd8>)
    if (randomSeed == 0) randomSeed = 12345;
 800f182:	f243 0239 	movw	r2, #12345	@ 0x3039
 800f186:	2800      	cmp	r0, #0
 800f188:	bf18      	it	ne
 800f18a:	4602      	movne	r2, r0
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800f18c:	fb01 3302 	mla	r3, r1, r2, r3
 800f190:	f8c4 3ac4 	str.w	r3, [r4, #2756]	@ 0xac4
    bossCurrentHP = bossMaxHP; // Boss bắt đầu với 130 HP
 800f194:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800f198:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
    playerHP = 100;
 800f19c:	2364      	movs	r3, #100	@ 0x64
    menuOpen = false;
 800f19e:	2500      	movs	r5, #0
    playerHP = 100;
 800f1a0:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    bossPhase = 1;
 800f1a4:	2301      	movs	r3, #1
 800f1a6:	f8c4 3a6c 	str.w	r3, [r4, #2668]	@ 0xa6c
    hideAllPlayerPowerUps();
 800f1aa:	4620      	mov	r0, r4
    menuOpen = false;
 800f1ac:	f8a4 5a68 	strh.w	r5, [r4, #2664]	@ 0xa68
    rageMode = false;
 800f1b0:	f884 5a78 	strb.w	r5, [r4, #2680]	@ 0xa78
    turnCounter = 0;
 800f1b4:	f8c4 5aa0 	str.w	r5, [r4, #2720]	@ 0xaa0
    playerPowerUpType = 0;
 800f1b8:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
    aiPowerUpType = 0; // Boss không có power-up
 800f1bc:	f8c4 5aa8 	str.w	r5, [r4, #2728]	@ 0xaa8
    playerPowerUpActive = false;
 800f1c0:	f8c4 5aac 	str.w	r5, [r4, #2732]	@ 0xaac
    rageModeTimer = 0;
 800f1c4:	f8c4 5a7c 	str.w	r5, [r4, #2684]	@ 0xa7c
    playerChakraLevel = 0;
 800f1c8:	f8c4 5a80 	str.w	r5, [r4, #2688]	@ 0xa80
    aiChakraLevel = 0;
 800f1cc:	f8c4 5a84 	str.w	r5, [r4, #2692]	@ 0xa84
    playerDefending = false;
 800f1d0:	f8c4 5a88 	str.w	r5, [r4, #2696]	@ 0xa88
    aiPersonality = 0; // 3 = Adaptive Boss Mode
 800f1d4:	f8c4 5a8c 	str.w	r5, [r4, #2700]	@ 0xa8c
    resetTimer = 0;
 800f1d8:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800f1dc:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    autoReturnTimer = 0;
 800f1e0:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = false;
 800f1e4:	f884 5a9c 	strb.w	r5, [r4, #2716]	@ 0xa9c
    hideAllPlayerPowerUps();
 800f1e8:	f7ff f993 	bl	800e512 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps(); // Boss không có power-up nhưng vẫn hide để đảm bảo
 800f1ec:	4620      	mov	r0, r4
 800f1ee:	f7ff fa0b 	bl	800e608 <_ZN20SakuraGameScreenView17hideAllAIPowerUpsEv>
    updatePlayerHPDisplay();
 800f1f2:	4620      	mov	r0, r4
 800f1f4:	f7ff fc04 	bl	800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm mới cho boss
 800f1f8:	4620      	mov	r0, r4
 800f1fa:	f7ff ff10 	bl	800f01e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800f1fe:	4620      	mov	r0, r4
 800f200:	f7ff fac7 	bl	800e792 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    updateAIChakraDisplay();
 800f204:	4620      	mov	r0, r4
 800f206:	f7ff faf8 	bl	800e7fa <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    resetNarutoState();
 800f20a:	4620      	mov	r0, r4
 800f20c:	f7ff fa19 	bl	800e642 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
    resetBleachState();
 800f210:	4620      	mov	r0, r4
 800f212:	f7ff fa47 	bl	800e6a4 <_ZN20SakuraGameScreenView16resetBleachStateEv>
    hideAllFireEffects();
 800f216:	4620      	mov	r0, r4
    fireAnimationTimer = 0;
 800f218:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800f21c:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800f220:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800f224:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800f228:	f884 5ac0 	strb.w	r5, [r4, #2752]	@ 0xac0
    hideAllFireEffects();
 800f22c:	f7fe ffca 	bl	800e1c4 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    forceBossHPVisible();
 800f230:	4620      	mov	r0, r4
 800f232:	f7ff f952 	bl	800e4da <_ZN20SakuraGameScreenView18forceBossHPVisibleEv>
    easterEggActivated = false;
 800f236:	f884 5ac8 	strb.w	r5, [r4, #2760]	@ 0xac8
        easterEggTimer = 0;
 800f23a:	f8c4 5acc 	str.w	r5, [r4, #2764]	@ 0xacc
}
 800f23e:	bd38      	pop	{r3, r4, r5, pc}
 800f240:	0019660d 	.word	0x0019660d
 800f244:	3c6ef35f 	.word	0x3c6ef35f

0800f248 <_ZN20SakuraGameScreenView15handleTickEventEv>:
{
 800f248:	b538      	push	{r3, r4, r5, lr}
    if (frameCounter < 10 && !gameEnded) {
 800f24a:	4d39      	ldr	r5, [pc, #228]	@ (800f330 <_ZN20SakuraGameScreenView15handleTickEventEv+0xe8>)
 800f24c:	682b      	ldr	r3, [r5, #0]
 800f24e:	2b09      	cmp	r3, #9
{
 800f250:	4604      	mov	r4, r0
    if (frameCounter < 10 && !gameEnded) {
 800f252:	dc0f      	bgt.n	800f274 <_ZN20SakuraGameScreenView15handleTickEventEv+0x2c>
 800f254:	f890 2a69 	ldrb.w	r2, [r0, #2665]	@ 0xa69
 800f258:	b962      	cbnz	r2, 800f274 <_ZN20SakuraGameScreenView15handleTickEventEv+0x2c>
        frameCounter++;
 800f25a:	3301      	adds	r3, #1
 800f25c:	602b      	str	r3, [r5, #0]
        updateBossHPDisplay();
 800f25e:	f7ff fede 	bl	800f01e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
        if (frameCounter == 5) {
 800f262:	682b      	ldr	r3, [r5, #0]
 800f264:	2b05      	cmp	r3, #5
 800f266:	d105      	bne.n	800f274 <_ZN20SakuraGameScreenView15handleTickEventEv+0x2c>
            toggleLED();
 800f268:	f7fe ff2a 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            toggleLED();
 800f26c:	f7fe ff28 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            toggleLED();
 800f270:	f7fe ff26 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    if (easterEggActivated) {
 800f274:	f894 2ac8 	ldrb.w	r2, [r4, #2760]	@ 0xac8
 800f278:	b1a2      	cbz	r2, 800f2a4 <_ZN20SakuraGameScreenView15handleTickEventEv+0x5c>
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800f27a:	f8d4 3acc 	ldr.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800f27e:	f640 32b7 	movw	r2, #2999	@ 0xbb7
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800f282:	3310      	adds	r3, #16
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800f284:	4293      	cmp	r3, r2
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800f286:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800f28a:	dd4f      	ble.n	800f32c <_ZN20SakuraGameScreenView15handleTickEventEv+0xe4>
            HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800f28c:	4829      	ldr	r0, [pc, #164]	@ (800f334 <_ZN20SakuraGameScreenView15handleTickEventEv+0xec>)
 800f28e:	2200      	movs	r2, #0
 800f290:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800f294:	f001 fab0 	bl	80107f8 <HAL_GPIO_WritePin>
 800f298:	f00b fd1c 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800f29c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            application().gotoCharacter1ScreenNoTransition();
 800f2a0:	f7f4 bd50 	b.w	8003d44 <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv>
    if (!gameEnded) {
 800f2a4:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800f2a8:	bb4d      	cbnz	r5, 800f2fe <_ZN20SakuraGameScreenView15handleTickEventEv+0xb6>
        if (resetTimerActive) {
 800f2aa:	f894 3a94 	ldrb.w	r3, [r4, #2708]	@ 0xa94
 800f2ae:	b1cb      	cbz	r3, 800f2e4 <_ZN20SakuraGameScreenView15handleTickEventEv+0x9c>
            resetTimer += 16;
 800f2b0:	f8d4 3a90 	ldr.w	r3, [r4, #2704]	@ 0xa90
 800f2b4:	3310      	adds	r3, #16
            if (resetTimer >= RESET_TIME_MS) {
 800f2b6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
            resetTimer += 16;
 800f2ba:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
            if (resetTimer >= RESET_TIME_MS) {
 800f2be:	db11      	blt.n	800f2e4 <_ZN20SakuraGameScreenView15handleTickEventEv+0x9c>
                resetNarutoState();
 800f2c0:	4620      	mov	r0, r4
 800f2c2:	f7ff f9be 	bl	800e642 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
                resetBleachState();
 800f2c6:	4620      	mov	r0, r4
 800f2c8:	f7ff f9ec 	bl	800e6a4 <_ZN20SakuraGameScreenView16resetBleachStateEv>
                if (!fireAnimationActive) {
 800f2cc:	f894 3ab4 	ldrb.w	r3, [r4, #2740]	@ 0xab4
                resetTimerActive = false;
 800f2d0:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
                resetTimer = 0;
 800f2d4:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
                playerDefending = false;
 800f2d8:	f8a4 5a88 	strh.w	r5, [r4, #2696]	@ 0xa88
                if (!fireAnimationActive) {
 800f2dc:	b913      	cbnz	r3, 800f2e4 <_ZN20SakuraGameScreenView15handleTickEventEv+0x9c>
                    checkTurnComplete();
 800f2de:	4620      	mov	r0, r4
 800f2e0:	f7ff fc8e 	bl	800ec00 <_ZN20SakuraGameScreenView17checkTurnCompleteEv>
        if (rageMode) {
 800f2e4:	f894 3a78 	ldrb.w	r3, [r4, #2680]	@ 0xa78
 800f2e8:	b123      	cbz	r3, 800f2f4 <_ZN20SakuraGameScreenView15handleTickEventEv+0xac>
            rageModeTimer += 16;
 800f2ea:	f8d4 3a7c 	ldr.w	r3, [r4, #2684]	@ 0xa7c
 800f2ee:	3310      	adds	r3, #16
 800f2f0:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
        updateFireAnimation();
 800f2f4:	4620      	mov	r0, r4
}
 800f2f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        updateFireAnimation();
 800f2fa:	f7fe bfb1 	b.w	800e260 <_ZN20SakuraGameScreenView19updateFireAnimationEv>
        if (autoReturnTimerActive) {
 800f2fe:	f894 3a9c 	ldrb.w	r3, [r4, #2716]	@ 0xa9c
 800f302:	b19b      	cbz	r3, 800f32c <_ZN20SakuraGameScreenView15handleTickEventEv+0xe4>
            autoReturnTimer += 16;
 800f304:	f8d4 3a98 	ldr.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800f308:	f241 716f 	movw	r1, #5999	@ 0x176f
            autoReturnTimer += 16;
 800f30c:	3310      	adds	r3, #16
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800f30e:	428b      	cmp	r3, r1
            autoReturnTimer += 16;
 800f310:	f8c4 3a98 	str.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800f314:	dd0a      	ble.n	800f32c <_ZN20SakuraGameScreenView15handleTickEventEv+0xe4>
                HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800f316:	4807      	ldr	r0, [pc, #28]	@ (800f334 <_ZN20SakuraGameScreenView15handleTickEventEv+0xec>)
 800f318:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800f31c:	f001 fa6c 	bl	80107f8 <HAL_GPIO_WritePin>
 800f320:	f00b fcd8 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800f324:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                application().gotoBackUpScreenScreenNoTransition();
 800f328:	f7f4 bc9c 	b.w	8003c64 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
}
 800f32c:	bd38      	pop	{r3, r4, r5, pc}
 800f32e:	bf00      	nop
 800f330:	20002b18 	.word	0x20002b18
 800f334:	40021800 	.word	0x40021800

0800f338 <_ZN20SakuraGameScreenView12playerAttackEv>:
{
 800f338:	b570      	push	{r4, r5, r6, lr}
 800f33a:	4604      	mov	r4, r0
    resetNarutoState();
 800f33c:	f7ff f981 	bl	800e642 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
 800f340:	2300      	movs	r3, #0
 800f342:	f884 3695 	strb.w	r3, [r4, #1685]	@ 0x695
 800f346:	2301      	movs	r3, #1
 800f348:	f884 3771 	strb.w	r3, [r4, #1905]	@ 0x771
    naruto_atk.invalidate();
 800f34c:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800f350:	f00c fe72 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800f354:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800f358:	f00c fe6e 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800f35c:	2208      	movs	r2, #8
 800f35e:	2103      	movs	r1, #3
 800f360:	4620      	mov	r0, r4
 800f362:	f7fe ff09 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800f366:	f894 5aac 	ldrb.w	r5, [r4, #2732]	@ 0xaac
 800f36a:	f894 6a89 	ldrb.w	r6, [r4, #2697]	@ 0xa89
    int baseDamage = generateRandomNumber(3, 8);
 800f36e:	4603      	mov	r3, r0
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800f370:	2d00      	cmp	r5, #0
 800f372:	d041      	beq.n	800f3f8 <_ZN20SakuraGameScreenView12playerAttackEv+0xc0>
 800f374:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800f378:	2a01      	cmp	r2, #1
 800f37a:	d13d      	bne.n	800f3f8 <_ZN20SakuraGameScreenView12playerAttackEv+0xc0>
        finalDamage = (int)(baseDamage * 2.5); // x2.5 như yêu cầu
 800f37c:	f7f1 fa04 	bl	8000788 <__aeabi_i2d>
 800f380:	4b1e      	ldr	r3, [pc, #120]	@ (800f3fc <_ZN20SakuraGameScreenView12playerAttackEv+0xc4>)
 800f382:	2200      	movs	r2, #0
 800f384:	f7f0 ff84 	bl	8000290 <__aeabi_dmul>
 800f388:	f7f1 fa68 	bl	800085c <__aeabi_d2iz>
 800f38c:	4603      	mov	r3, r0
    if (isDefending) {
 800f38e:	b11e      	cbz	r6, 800f398 <_ZN20SakuraGameScreenView12playerAttackEv+0x60>
        if (finalDamage < 1) finalDamage = 1;
 800f390:	2b01      	cmp	r3, #1
        finalDamage = finalDamage / 2;
 800f392:	bfcc      	ite	gt
 800f394:	105b      	asrgt	r3, r3, #1
        if (finalDamage < 1) finalDamage = 1;
 800f396:	2301      	movle	r3, #1
    bossCurrentHP -= actualDamage;
 800f398:	f8d4 2a74 	ldr.w	r2, [r4, #2676]	@ 0xa74
 800f39c:	1ad2      	subs	r2, r2, r3
    if (bossCurrentHP < 0) bossCurrentHP = 0;
 800f39e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800f3a2:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    playerChakraLevel += generateRandomNumber(5, 10);
 800f3a6:	2105      	movs	r1, #5
 800f3a8:	220a      	movs	r2, #10
 800f3aa:	4620      	mov	r0, r4
 800f3ac:	f7fe fee4 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f3b0:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800f3b4:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800f3b6:	2b64      	cmp	r3, #100	@ 0x64
 800f3b8:	bfa8      	it	ge
 800f3ba:	2364      	movge	r3, #100	@ 0x64
 800f3bc:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (hasDoubleAttack) {
 800f3c0:	b13d      	cbz	r5, 800f3d2 <_ZN20SakuraGameScreenView12playerAttackEv+0x9a>
        playerPowerUpActive = false;
 800f3c2:	2300      	movs	r3, #0
 800f3c4:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800f3c8:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800f3cc:	4620      	mov	r0, r4
 800f3ce:	f7ff f8bd 	bl	800e54c <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm boss mới
 800f3d2:	4620      	mov	r0, r4
 800f3d4:	f7ff fe23 	bl	800f01e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800f3d8:	4620      	mov	r0, r4
 800f3da:	f7ff f9da 	bl	800e792 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800f3de:	f7fe fe6f 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800f3e2:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800f3e4:	2200      	movs	r2, #0
    playerActionDone = true;
 800f3e6:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800f3ea:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800f3ee:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800f3f2:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800f3f6:	bd70      	pop	{r4, r5, r6, pc}
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800f3f8:	2500      	movs	r5, #0
 800f3fa:	e7c8      	b.n	800f38e <_ZN20SakuraGameScreenView12playerAttackEv+0x56>
 800f3fc:	40040000 	.word	0x40040000

0800f400 <_ZN20SakuraGameScreenView8aiDefendEv>:
{
 800f400:	b538      	push	{r3, r4, r5, lr}
    if (gameEnded) return;
 800f402:	f890 5a69 	ldrb.w	r5, [r0, #2665]	@ 0xa69
{
 800f406:	4604      	mov	r4, r0
    if (gameEnded) return;
 800f408:	2d00      	cmp	r5, #0
 800f40a:	d140      	bne.n	800f48e <_ZN20SakuraGameScreenView8aiDefendEv+0x8e>
    resetBleachState();
 800f40c:	f7ff f94a 	bl	800e6a4 <_ZN20SakuraGameScreenView16resetBleachStateEv>
 800f410:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800f414:	2501      	movs	r5, #1
    bleach_def.invalidate();
 800f416:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800f41a:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800f41e:	f00c fe0b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800f422:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800f426:	f00c fe07 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800f42a:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
    aiDefending = true;
 800f42e:	f884 5a89 	strb.w	r5, [r4, #2697]	@ 0xa89
    switch(bossPhase) {
 800f432:	2b03      	cmp	r3, #3
 800f434:	d02c      	beq.n	800f490 <_ZN20SakuraGameScreenView8aiDefendEv+0x90>
 800f436:	2b04      	cmp	r3, #4
 800f438:	d02d      	beq.n	800f496 <_ZN20SakuraGameScreenView8aiDefendEv+0x96>
 800f43a:	2b02      	cmp	r3, #2
            healAmount = generateRandomNumber(2, 5);
 800f43c:	bf19      	ittee	ne
 800f43e:	2205      	movne	r2, #5
 800f440:	2102      	movne	r1, #2
            healAmount = generateRandomNumber(3, 6);
 800f442:	2206      	moveq	r2, #6
 800f444:	2103      	moveq	r1, #3
            healAmount = generateRandomNumber(5, 8);
 800f446:	4620      	mov	r0, r4
 800f448:	f7fe fe96 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    bossCurrentHP += healAmount;
 800f44c:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800f450:	4418      	add	r0, r3
    if (bossCurrentHP > bossMaxHP) bossCurrentHP = bossMaxHP;
 800f452:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800f456:	4298      	cmp	r0, r3
 800f458:	bfd4      	ite	le
 800f45a:	f8c4 0a74 	strle.w	r0, [r4, #2676]	@ 0xa74
 800f45e:	f8c4 3a74 	strgt.w	r3, [r4, #2676]	@ 0xa74
    aiChakraLevel += generateRandomNumber(8, 12); // GIẢM TỪ 12-20 XUỐNG 8-12
 800f462:	220c      	movs	r2, #12
 800f464:	2108      	movs	r1, #8
 800f466:	4620      	mov	r0, r4
 800f468:	f7fe fe86 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f46c:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800f470:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800f472:	2b64      	cmp	r3, #100	@ 0x64
 800f474:	bfa8      	it	ge
 800f476:	2364      	movge	r3, #100	@ 0x64
 800f478:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    updateBossHPDisplay();
 800f47c:	4620      	mov	r0, r4
 800f47e:	f7ff fdce 	bl	800f01e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
    updateAIChakraDisplay();
 800f482:	4620      	mov	r0, r4
 800f484:	f7ff f9b9 	bl	800e7fa <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    aiActionDone = true;
 800f488:	2301      	movs	r3, #1
 800f48a:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
}
 800f48e:	bd38      	pop	{r3, r4, r5, pc}
            healAmount = generateRandomNumber(4, 7);
 800f490:	2207      	movs	r2, #7
 800f492:	2104      	movs	r1, #4
 800f494:	e7d7      	b.n	800f446 <_ZN20SakuraGameScreenView8aiDefendEv+0x46>
            healAmount = generateRandomNumber(5, 8);
 800f496:	2208      	movs	r2, #8
 800f498:	2105      	movs	r1, #5
 800f49a:	e7d4      	b.n	800f446 <_ZN20SakuraGameScreenView8aiDefendEv+0x46>

0800f49c <_ZN20SakuraGameScreenView15performAIActionEv>:
	if (gameEnded || bossCurrentHP <= 0) {
 800f49c:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
{
 800f4a0:	b570      	push	{r4, r5, r6, lr}
 800f4a2:	4605      	mov	r5, r0
	if (gameEnded || bossCurrentHP <= 0) {
 800f4a4:	2b00      	cmp	r3, #0
 800f4a6:	f040 811f 	bne.w	800f6e8 <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
 800f4aa:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800f4ae:	2b00      	cmp	r3, #0
 800f4b0:	f340 811a 	ble.w	800f6e8 <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
    if (playerHP <= 0) {
 800f4b4:	f8d0 6a64 	ldr.w	r6, [r0, #2660]	@ 0xa64
 800f4b8:	2e00      	cmp	r6, #0
 800f4ba:	f340 8115 	ble.w	800f6e8 <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
    if (aiPowerUpActive) {
 800f4be:	f890 2aad 	ldrb.w	r2, [r0, #2733]	@ 0xaad
 800f4c2:	b99a      	cbnz	r2, 800f4ec <_ZN20SakuraGameScreenView15performAIActionEv+0x50>
    	int aiHPPercent = (bossCurrentHP * 100) / bossMaxHP;
 800f4c4:	2264      	movs	r2, #100	@ 0x64
 800f4c6:	4353      	muls	r3, r2
 800f4c8:	f8d5 2a70 	ldr.w	r2, [r5, #2672]	@ 0xa70
 800f4cc:	fb93 f3f2 	sdiv	r3, r3, r2
        bool playerCanSpecial = (playerChakraLevel >= 100);
 800f4d0:	f8d5 2a80 	ldr.w	r2, [r5, #2688]	@ 0xa80
        switch(aiPersonality)
 800f4d4:	f8d5 1a8c 	ldr.w	r1, [r5, #2700]	@ 0xa8c
        int baseDefendBonus = 0;
 800f4d8:	2a63      	cmp	r2, #99	@ 0x63
 800f4da:	bfcc      	ite	gt
 800f4dc:	2419      	movgt	r4, #25
 800f4de:	2400      	movle	r4, #0
        switch(aiPersonality)
 800f4e0:	2903      	cmp	r1, #3
 800f4e2:	d813      	bhi.n	800f50c <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
 800f4e4:	e8df f001 	tbb	[pc, r1]
 800f4e8:	c89c6329 	.word	0xc89c6329
        switch(aiPowerUpType) {
 800f4ec:	f8d0 1aa8 	ldr.w	r1, [r0, #2728]	@ 0xaa8
 800f4f0:	2901      	cmp	r1, #1
 800f4f2:	d010      	beq.n	800f516 <_ZN20SakuraGameScreenView15performAIActionEv+0x7a>
 800f4f4:	2904      	cmp	r1, #4
 800f4f6:	d1e5      	bne.n	800f4c4 <_ZN20SakuraGameScreenView15performAIActionEv+0x28>
                if (aiChakraLevel >= 100) {
 800f4f8:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800f4fc:	2b63      	cmp	r3, #99	@ 0x63
 800f4fe:	dd05      	ble.n	800f50c <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
                    if (generateRandomNumber(1, 100) <= 50) {
 800f500:	2264      	movs	r2, #100	@ 0x64
 800f502:	2101      	movs	r1, #1
                           if (generateRandomNumber(1, 100) <= 50) {
 800f504:	f7fe fe38 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f508:	2832      	cmp	r0, #50	@ 0x32
 800f50a:	dd2a      	ble.n	800f562 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800f50c:	4628      	mov	r0, r5
}
 800f50e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800f512:	f7ff bc37 	b.w	800ed84 <_ZN20SakuraGameScreenView8aiAttackEv>
                if (aiChakraLevel >= 100) {
 800f516:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800f51a:	2b63      	cmp	r3, #99	@ 0x63
                    int roll = generateRandomNumber(1, 100);
 800f51c:	f04f 0264 	mov.w	r2, #100	@ 0x64
                if (aiChakraLevel >= 100) {
 800f520:	dd06      	ble.n	800f530 <_ZN20SakuraGameScreenView15performAIActionEv+0x94>
                    int roll = generateRandomNumber(1, 100);
 800f522:	f7fe fe29 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    if (roll <= 80) {
 800f526:	2850      	cmp	r0, #80	@ 0x50
 800f528:	ddf0      	ble.n	800f50c <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
                    } else if (roll <= 90) {
 800f52a:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 70) {
 800f52c:	dd19      	ble.n	800f562 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
 800f52e:	e096      	b.n	800f65e <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
                    if (generateRandomNumber(1, 100) <= 90) {
 800f530:	f7fe fe22 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f534:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 60) {
 800f536:	dde9      	ble.n	800f50c <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
 800f538:	e091      	b.n	800f65e <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
                if (aiChakraLevel >= 100) {
 800f53a:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800f53e:	2a63      	cmp	r2, #99	@ 0x63
 800f540:	dd22      	ble.n	800f588 <_ZN20SakuraGameScreenView15performAIActionEv+0xec>
                    if (aiHPPercent >= 80) {
 800f542:	2b4f      	cmp	r3, #79	@ 0x4f
 800f544:	dd17      	ble.n	800f576 <_ZN20SakuraGameScreenView15performAIActionEv+0xda>
                        defendChance = 50 + baseDefendBonus;
 800f546:	3432      	adds	r4, #50	@ 0x32
                    if (playerHPPercent <= 25) {
 800f548:	2e19      	cmp	r6, #25
                        defendChance -= 10;
 800f54a:	bfd8      	it	le
 800f54c:	3c0a      	suble	r4, #10
                    int roll = generateRandomNumber(1, 100);
 800f54e:	2264      	movs	r2, #100	@ 0x64
 800f550:	2101      	movs	r1, #1
 800f552:	4628      	mov	r0, r5
 800f554:	f7fe fe10 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    if (defendChance > 70) defendChance = 70;
 800f558:	2c46      	cmp	r4, #70	@ 0x46
 800f55a:	bfa8      	it	ge
 800f55c:	2446      	movge	r4, #70	@ 0x46
                    if (roll <= defendChance) {
 800f55e:	4284      	cmp	r4, r0
 800f560:	da7d      	bge.n	800f65e <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800f562:	f8d5 3a84 	ldr.w	r3, [r5, #2692]	@ 0xa84
 800f566:	2b63      	cmp	r3, #99	@ 0x63
 800f568:	f340 80be 	ble.w	800f6e8 <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
 800f56c:	4628      	mov	r0, r5
}
 800f56e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800f572:	f7ff bc73 	b.w	800ee5c <_ZN20SakuraGameScreenView9aiSpecialEv>
                    } else if (aiHPPercent >= 60) {
 800f576:	2b3b      	cmp	r3, #59	@ 0x3b
 800f578:	dd01      	ble.n	800f57e <_ZN20SakuraGameScreenView15performAIActionEv+0xe2>
                        defendChance = 40 + baseDefendBonus;
 800f57a:	3428      	adds	r4, #40	@ 0x28
                        specialChance = 60 - (baseDefendBonus / 2);
 800f57c:	e7e4      	b.n	800f548 <_ZN20SakuraGameScreenView15performAIActionEv+0xac>
                    } else if (aiHPPercent >= 30) {
 800f57e:	2b1d      	cmp	r3, #29
                        defendChance = 30 + baseDefendBonus;
 800f580:	bfcc      	ite	gt
 800f582:	341e      	addgt	r4, #30
                        defendChance = 20 + baseDefendBonus;
 800f584:	3414      	addle	r4, #20
                        specialChance = 80 - (baseDefendBonus / 2);
 800f586:	e7df      	b.n	800f548 <_ZN20SakuraGameScreenView15performAIActionEv+0xac>
                    if (aiHPPercent >= 70) {
 800f588:	2b45      	cmp	r3, #69	@ 0x45
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f58a:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f58e:	f04f 0101 	mov.w	r1, #1
 800f592:	4628      	mov	r0, r5
                    if (aiHPPercent >= 70) {
 800f594:	dd03      	ble.n	800f59e <_ZN20SakuraGameScreenView15performAIActionEv+0x102>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f596:	f7fe fdef 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 30 + baseDefendBonus;
 800f59a:	341e      	adds	r4, #30
 800f59c:	e004      	b.n	800f5a8 <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 40) {
 800f59e:	2b27      	cmp	r3, #39	@ 0x27
 800f5a0:	ddf9      	ble.n	800f596 <_ZN20SakuraGameScreenView15performAIActionEv+0xfa>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f5a2:	f7fe fde9 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 50 + baseDefendBonus;
 800f5a6:	3432      	adds	r4, #50	@ 0x32
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f5a8:	42a0      	cmp	r0, r4
                           if (generateRandomNumber(1, 100) <= 60) {
 800f5aa:	dd58      	ble.n	800f65e <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
 800f5ac:	e7ae      	b.n	800f50c <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
                if (aiChakraLevel >= 100) {
 800f5ae:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800f5b2:	2a63      	cmp	r2, #99	@ 0x63
 800f5b4:	dd17      	ble.n	800f5e6 <_ZN20SakuraGameScreenView15performAIActionEv+0x14a>
                    if (aiHPPercent >= 80) {
 800f5b6:	2b4f      	cmp	r3, #79	@ 0x4f
 800f5b8:	dd0c      	ble.n	800f5d4 <_ZN20SakuraGameScreenView15performAIActionEv+0x138>
                        defendChance = 70 + baseDefendBonus;
 800f5ba:	3446      	adds	r4, #70	@ 0x46
                    if (playerHPPercent <= 20) {
 800f5bc:	2e14      	cmp	r6, #20
                        defendChance -= 5;
 800f5be:	bfd8      	it	le
 800f5c0:	3c05      	suble	r4, #5
                    int roll = generateRandomNumber(1, 100);
 800f5c2:	2264      	movs	r2, #100	@ 0x64
 800f5c4:	2101      	movs	r1, #1
 800f5c6:	4628      	mov	r0, r5
 800f5c8:	f7fe fdd6 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    if (defendChance > 85) defendChance = 85;
 800f5cc:	2c55      	cmp	r4, #85	@ 0x55
 800f5ce:	bfa8      	it	ge
 800f5d0:	2455      	movge	r4, #85	@ 0x55
 800f5d2:	e7c4      	b.n	800f55e <_ZN20SakuraGameScreenView15performAIActionEv+0xc2>
                    } else if (aiHPPercent >= 50) {
 800f5d4:	2b31      	cmp	r3, #49	@ 0x31
 800f5d6:	dd01      	ble.n	800f5dc <_ZN20SakuraGameScreenView15performAIActionEv+0x140>
                        defendChance = 60 + baseDefendBonus;
 800f5d8:	343c      	adds	r4, #60	@ 0x3c
                        specialChance = 40 - (baseDefendBonus / 2);
 800f5da:	e7ef      	b.n	800f5bc <_ZN20SakuraGameScreenView15performAIActionEv+0x120>
                    } else if (aiHPPercent >= 25) {
 800f5dc:	2b18      	cmp	r3, #24
                        defendChance = 45 + baseDefendBonus;
 800f5de:	bfcc      	ite	gt
 800f5e0:	342d      	addgt	r4, #45	@ 0x2d
                        defendChance = 30 + baseDefendBonus;
 800f5e2:	341e      	addle	r4, #30
                        specialChance = 70 - (baseDefendBonus / 2);
 800f5e4:	e7ea      	b.n	800f5bc <_ZN20SakuraGameScreenView15performAIActionEv+0x120>
                    if (aiHPPercent >= 60) {
 800f5e6:	2b3b      	cmp	r3, #59	@ 0x3b
 800f5e8:	dd0b      	ble.n	800f602 <_ZN20SakuraGameScreenView15performAIActionEv+0x166>
                        int defendChance = 80 + baseDefendBonus;
 800f5ea:	2c0f      	cmp	r4, #15
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f5ec:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f5f0:	f04f 0101 	mov.w	r1, #1
 800f5f4:	4628      	mov	r0, r5
                        int defendChance = 80 + baseDefendBonus;
 800f5f6:	bfcc      	ite	gt
 800f5f8:	245f      	movgt	r4, #95	@ 0x5f
 800f5fa:	2450      	movle	r4, #80	@ 0x50
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f5fc:	f7fe fdbc 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f600:	e7d2      	b.n	800f5a8 <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 30) {
 800f602:	2b1d      	cmp	r3, #29
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f604:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f608:	f04f 0101 	mov.w	r1, #1
 800f60c:	4628      	mov	r0, r5
                    } else if (aiHPPercent >= 30) {
 800f60e:	dd03      	ble.n	800f618 <_ZN20SakuraGameScreenView15performAIActionEv+0x17c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f610:	f7fe fdb2 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 65 + baseDefendBonus;
 800f614:	3441      	adds	r4, #65	@ 0x41
 800f616:	e7c7      	b.n	800f5a8 <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f618:	f7fe fdae 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 40 + baseDefendBonus;
 800f61c:	3428      	adds	r4, #40	@ 0x28
 800f61e:	e7c3      	b.n	800f5a8 <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                if (aiChakraLevel >= 100) {
 800f620:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800f624:	2963      	cmp	r1, #99	@ 0x63
 800f626:	dd07      	ble.n	800f638 <_ZN20SakuraGameScreenView15performAIActionEv+0x19c>
                    int roll = generateRandomNumber(1, 100);
 800f628:	2101      	movs	r1, #1
 800f62a:	2264      	movs	r2, #100	@ 0x64
 800f62c:	4628      	mov	r0, r5
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800f62e:	410c      	asrs	r4, r1
                    int roll = generateRandomNumber(1, 100);
 800f630:	f7fe fda2 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800f634:	342d      	adds	r4, #45	@ 0x2d
 800f636:	e792      	b.n	800f55e <_ZN20SakuraGameScreenView15performAIActionEv+0xc2>
                    if (aiHPPercent >= 70) {
 800f638:	2b45      	cmp	r3, #69	@ 0x45
 800f63a:	dd07      	ble.n	800f64c <_ZN20SakuraGameScreenView15performAIActionEv+0x1b0>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f63c:	2101      	movs	r1, #1
 800f63e:	2264      	movs	r2, #100	@ 0x64
 800f640:	4628      	mov	r0, r5
                        int defendChance = 60 + (baseDefendBonus / 2);
 800f642:	410c      	asrs	r4, r1
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f644:	f7fe fd98 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 60 + (baseDefendBonus / 2);
 800f648:	343c      	adds	r4, #60	@ 0x3c
 800f64a:	e7ad      	b.n	800f5a8 <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800f64c:	2a63      	cmp	r2, #99	@ 0x63
 800f64e:	dc0b      	bgt.n	800f668 <_ZN20SakuraGameScreenView15performAIActionEv+0x1cc>
                            action = generateRandomNumber(1, 2);
 800f650:	2202      	movs	r2, #2
 800f652:	2101      	movs	r1, #1
 800f654:	4628      	mov	r0, r5
 800f656:	f7fe fd8f 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    switch(action)
 800f65a:	2802      	cmp	r0, #2
 800f65c:	d13e      	bne.n	800f6dc <_ZN20SakuraGameScreenView15performAIActionEv+0x240>
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800f65e:	4628      	mov	r0, r5
}
 800f660:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800f664:	f7ff becc 	b.w	800f400 <_ZN20SakuraGameScreenView8aiDefendEv>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800f668:	2264      	movs	r2, #100	@ 0x64
 800f66a:	2101      	movs	r1, #1
 800f66c:	4628      	mov	r0, r5
 800f66e:	f7fe fd83 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f672:	281e      	cmp	r0, #30
 800f674:	ddf3      	ble.n	800f65e <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
 800f676:	e7eb      	b.n	800f650 <_ZN20SakuraGameScreenView15performAIActionEv+0x1b4>
                   if (aiChakraLevel >= 100) {
 800f678:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800f67c:	2963      	cmp	r1, #99	@ 0x63
 800f67e:	dd15      	ble.n	800f6ac <_ZN20SakuraGameScreenView15performAIActionEv+0x210>
                       if (bossHPPercent <= 30) {
 800f680:	2b1e      	cmp	r3, #30
 800f682:	dc06      	bgt.n	800f692 <_ZN20SakuraGameScreenView15performAIActionEv+0x1f6>
                           if (generateRandomNumber(1, 100) <= 70) {
 800f684:	2264      	movs	r2, #100	@ 0x64
 800f686:	2101      	movs	r1, #1
 800f688:	4628      	mov	r0, r5
 800f68a:	f7fe fd75 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f68e:	2846      	cmp	r0, #70	@ 0x46
 800f690:	e74c      	b.n	800f52c <_ZN20SakuraGameScreenView15performAIActionEv+0x90>
                       } else if (playerCanSpecial) {
 800f692:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 40) {
 800f694:	f04f 0101 	mov.w	r1, #1
 800f698:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f69c:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800f69e:	f77f af31 	ble.w	800f504 <_ZN20SakuraGameScreenView15performAIActionEv+0x68>
                           if (generateRandomNumber(1, 100) <= 40) {
 800f6a2:	f7fe fd69 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f6a6:	2828      	cmp	r0, #40	@ 0x28
 800f6a8:	ddd9      	ble.n	800f65e <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
 800f6aa:	e75a      	b.n	800f562 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
                       if (bossHPPercent <= 50) {
 800f6ac:	2b32      	cmp	r3, #50	@ 0x32
 800f6ae:	dc06      	bgt.n	800f6be <_ZN20SakuraGameScreenView15performAIActionEv+0x222>
                           if (generateRandomNumber(1, 100) <= 70) {
 800f6b0:	2264      	movs	r2, #100	@ 0x64
 800f6b2:	2101      	movs	r1, #1
 800f6b4:	4628      	mov	r0, r5
 800f6b6:	f7fe fd5f 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f6ba:	2846      	cmp	r0, #70	@ 0x46
 800f6bc:	e775      	b.n	800f5aa <_ZN20SakuraGameScreenView15performAIActionEv+0x10e>
                       } else if (playerCanSpecial) {
 800f6be:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 60) {
 800f6c0:	f04f 0101 	mov.w	r1, #1
 800f6c4:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f6c8:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800f6ca:	dd03      	ble.n	800f6d4 <_ZN20SakuraGameScreenView15performAIActionEv+0x238>
                           if (generateRandomNumber(1, 100) <= 60) {
 800f6cc:	f7fe fd54 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f6d0:	283c      	cmp	r0, #60	@ 0x3c
 800f6d2:	e76a      	b.n	800f5aa <_ZN20SakuraGameScreenView15performAIActionEv+0x10e>
                           if (generateRandomNumber(1, 100) <= 60) {
 800f6d4:	f7fe fd50 	bl	800e178 <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f6d8:	283c      	cmp	r0, #60	@ 0x3c
 800f6da:	e72c      	b.n	800f536 <_ZN20SakuraGameScreenView15performAIActionEv+0x9a>
    switch(action)
 800f6dc:	2803      	cmp	r0, #3
 800f6de:	f43f af40 	beq.w	800f562 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
 800f6e2:	2801      	cmp	r0, #1
 800f6e4:	f43f af12 	beq.w	800f50c <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
}
 800f6e8:	bd70      	pop	{r4, r5, r6, pc}

0800f6ea <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800f6ea:	b530      	push	{r4, r5, lr}
    if (evt.getType() == ClickEvent::PRESSED) {
 800f6ec:	790b      	ldrb	r3, [r1, #4]
{
 800f6ee:	b08b      	sub	sp, #44	@ 0x2c
 800f6f0:	4604      	mov	r4, r0
 800f6f2:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED) {
 800f6f4:	2b00      	cmp	r3, #0
 800f6f6:	f040 812b 	bne.w	800f950 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
    	if (!gameEnded && !easterEggActivated) {
 800f6fa:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
        return clickX;
 800f6fe:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800f702:	b98b      	cbnz	r3, 800f728 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
 800f704:	f890 1ac8 	ldrb.w	r1, [r0, #2760]	@ 0xac8
 800f708:	b971      	cbnz	r1, 800f728 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	                evt.getY() >= 62 && evt.getY() <= 234) {
 800f70a:	f1a2 015e 	sub.w	r1, r2, #94	@ 0x5e
 800f70e:	b289      	uxth	r1, r1
 800f710:	2992      	cmp	r1, #146	@ 0x92
 800f712:	d809      	bhi.n	800f728 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	            if (evt.getX() >= 94 && evt.getX() <= 240 &&
 800f714:	8929      	ldrh	r1, [r5, #8]
 800f716:	393e      	subs	r1, #62	@ 0x3e
 800f718:	b289      	uxth	r1, r1
 800f71a:	29ac      	cmp	r1, #172	@ 0xac
 800f71c:	d818      	bhi.n	800f750 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x66>
}
 800f71e:	b00b      	add	sp, #44	@ 0x2c
 800f720:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	                activateEasterEgg();
 800f724:	f7ff bbf0 	b.w	800ef08 <_ZN20SakuraGameScreenView17activateEasterEggEv>
        if (evt.getX() < 50 && evt.getY() < 50) {
 800f728:	2a31      	cmp	r2, #49	@ 0x31
 800f72a:	dc11      	bgt.n	800f750 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x66>
        return clickY;
 800f72c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f730:	2a31      	cmp	r2, #49	@ 0x31
 800f732:	f300 8087 	bgt.w	800f844 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x15a>
            bossCurrentHP -= 30;
 800f736:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800f73a:	3b1e      	subs	r3, #30
            if (bossCurrentHP < 0) bossCurrentHP = 0;
 800f73c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
            updateBossHPDisplay();
 800f740:	4620      	mov	r0, r4
 800f742:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
}
 800f746:	b00b      	add	sp, #44	@ 0x2c
 800f748:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updateBossHPDisplay();
 800f74c:	f7ff bc67 	b.w	800f01e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
        if (evt.getX() > 190 && evt.getY() < 50) {
 800f750:	2abe      	cmp	r2, #190	@ 0xbe
 800f752:	dc6a      	bgt.n	800f82a <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x140>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800f754:	3a65      	subs	r2, #101	@ 0x65
 800f756:	b292      	uxth	r2, r2
 800f758:	2a26      	cmp	r2, #38	@ 0x26
 800f75a:	f240 808c 	bls.w	800f876 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x18c>
        if (gameEnded) {
 800f75e:	2b00      	cmp	r3, #0
 800f760:	d04f      	beq.n	800f802 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x118>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f762:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800f766:	4668      	mov	r0, sp
 800f768:	f00c fd02 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f76c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f770:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f774:	4668      	mov	r0, sp
 800f776:	f7fb f837 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f77a:	2800      	cmp	r0, #0
 800f77c:	f040 80ef 	bne.w	800f95e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f780:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800f784:	a802      	add	r0, sp, #8
 800f786:	f00c fcf3 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f78a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f78e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f792:	a802      	add	r0, sp, #8
 800f794:	f7fb f828 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f798:	2800      	cmp	r0, #0
 800f79a:	f040 80e0 	bne.w	800f95e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f79e:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800f7a2:	a804      	add	r0, sp, #16
 800f7a4:	f00c fce4 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f7a8:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f7ac:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f7b0:	a804      	add	r0, sp, #16
 800f7b2:	f7fb f819 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f7b6:	2800      	cmp	r0, #0
 800f7b8:	f040 80d1 	bne.w	800f95e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f7bc:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800f7c0:	a806      	add	r0, sp, #24
 800f7c2:	f00c fcd5 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f7c6:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f7ca:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f7ce:	a806      	add	r0, sp, #24
 800f7d0:	f7fb f80a 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f7d4:	2800      	cmp	r0, #0
 800f7d6:	f040 80c2 	bne.w	800f95e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800f7da:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800f7de:	a808      	add	r0, sp, #32
 800f7e0:	f00c fcc6 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f7e4:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f7e8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f7ec:	a808      	add	r0, sp, #32
 800f7ee:	f7fa fffb 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800f7f2:	2800      	cmp	r0, #0
 800f7f4:	f040 80b3 	bne.w	800f95e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
        if (!gameEnded) {
 800f7f8:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800f7fc:	2b00      	cmp	r3, #0
 800f7fe:	f040 80a7 	bne.w	800f950 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
            if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800f802:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800f806:	a808      	add	r0, sp, #32
 800f808:	f00c fcb2 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f80c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f810:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f814:	a808      	add	r0, sp, #32
 800f816:	f7fa ffe7 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800f81a:	2800      	cmp	r0, #0
 800f81c:	d047      	beq.n	800f8ae <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1c4>
                toggleActionMenu();
 800f81e:	4620      	mov	r0, r4
}
 800f820:	b00b      	add	sp, #44	@ 0x2c
 800f822:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleActionMenu();
 800f826:	f7fe bdf2 	b.w	800e40e <_ZN20SakuraGameScreenView16toggleActionMenuEv>
 800f82a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
        if (evt.getX() > 190 && evt.getY() < 50) {
 800f82e:	2a31      	cmp	r2, #49	@ 0x31
 800f830:	dc14      	bgt.n	800f85c <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x172>
            playerHP = 0;
 800f832:	2300      	movs	r3, #0
            updatePlayerHPDisplay();
 800f834:	4620      	mov	r0, r4
            playerHP = 0;
 800f836:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
}
 800f83a:	b00b      	add	sp, #44	@ 0x2c
 800f83c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updatePlayerHPDisplay();
 800f840:	f7ff b8de 	b.w	800ea00 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
        if (evt.getX() < 50 && evt.getY() > 270) {
 800f844:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800f848:	dd89      	ble.n	800f75e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x74>
                toggleLED();
 800f84a:	f7fe fc39 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f84e:	f7fe fc37 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800f852:	b00b      	add	sp, #44	@ 0x2c
 800f854:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleLED();
 800f858:	f7fe bc32 	b.w	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800f85c:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800f860:	f77f af7d 	ble.w	800f75e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800f864:	2b00      	cmp	r3, #0
 800f866:	f47f af7c 	bne.w	800f762 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800f86a:	4620      	mov	r0, r4
}
 800f86c:	b00b      	add	sp, #44	@ 0x2c
 800f86e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800f872:	f7ff b96c 	b.w	800eb4e <_ZN20SakuraGameScreenView17givePlayerPowerUpEv>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800f876:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f87a:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800f87e:	f77f af6e 	ble.w	800f75e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800f882:	2b00      	cmp	r3, #0
 800f884:	f47f af6d 	bne.w	800f762 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            for (int i = 0; i < turnCounter + 1; i++) {
 800f888:	461d      	mov	r5, r3
 800f88a:	f8d4 3aa0 	ldr.w	r3, [r4, #2720]	@ 0xaa0
 800f88e:	42ab      	cmp	r3, r5
 800f890:	da09      	bge.n	800f8a6 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1bc>
            playerActionDone = true;
 800f892:	f240 1301 	movw	r3, #257	@ 0x101
 800f896:	4620      	mov	r0, r4
 800f898:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
}
 800f89c:	b00b      	add	sp, #44	@ 0x2c
 800f89e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f8a2:	f7ff b97e 	b.w	800eba2 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0>
                toggleLED();
 800f8a6:	f7fe fc0b 	bl	800e0c0 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            for (int i = 0; i < turnCounter + 1; i++) {
 800f8aa:	3501      	adds	r5, #1
 800f8ac:	e7ed      	b.n	800f88a <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1a0>
            if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800f8ae:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800f8b2:	a808      	add	r0, sp, #32
 800f8b4:	f00c fc5c 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8b8:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f8bc:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f8c0:	a808      	add	r0, sp, #32
 800f8c2:	f7fa ff91 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800f8c6:	2800      	cmp	r0, #0
 800f8c8:	d1a9      	bne.n	800f81e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x134>
            if (menuOpen) {
 800f8ca:	f894 3a68 	ldrb.w	r3, [r4, #2664]	@ 0xa68
 800f8ce:	2b00      	cmp	r3, #0
 800f8d0:	d03e      	beq.n	800f950 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800f8d2:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800f8d6:	a808      	add	r0, sp, #32
 800f8d8:	f00c fc4a 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8dc:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f8e0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f8e4:	a808      	add	r0, sp, #32
 800f8e6:	f7fa ff7f 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800f8ea:	b158      	cbz	r0, 800f904 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x21a>
                    playerAttack();
 800f8ec:	4620      	mov	r0, r4
 800f8ee:	f7ff fd23 	bl	800f338 <_ZN20SakuraGameScreenView12playerAttackEv>
                    if (!gameEnded) performAIAction();
 800f8f2:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800f8f6:	bb93      	cbnz	r3, 800f95e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
 800f8f8:	4620      	mov	r0, r4
}
 800f8fa:	b00b      	add	sp, #44	@ 0x2c
 800f8fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                    if (!gameEnded) performAIAction();
 800f900:	f7ff bdcc 	b.w	800f49c <_ZN20SakuraGameScreenView15performAIActionEv>
                else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800f904:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800f908:	a808      	add	r0, sp, #32
 800f90a:	f00c fc31 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f90e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f912:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f916:	a808      	add	r0, sp, #32
 800f918:	f7fa ff66 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800f91c:	b118      	cbz	r0, 800f926 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x23c>
                    playerDefend();
 800f91e:	4620      	mov	r0, r4
 800f920:	f7ff f977 	bl	800ec12 <_ZN20SakuraGameScreenView12playerDefendEv>
                    if (!gameEnded) performAIAction();
 800f924:	e7e5      	b.n	800f8f2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x208>
                else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800f926:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800f92a:	a808      	add	r0, sp, #32
 800f92c:	f00c fc20 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f930:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f934:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f938:	a808      	add	r0, sp, #32
 800f93a:	f7fa ff55 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800f93e:	b138      	cbz	r0, 800f950 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                    if (playerChakraLevel >= 100) {
 800f940:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800f944:	2b63      	cmp	r3, #99	@ 0x63
 800f946:	dd0a      	ble.n	800f95e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                        playerSpecial();
 800f948:	4620      	mov	r0, r4
 800f94a:	f7ff f9b1 	bl	800ecb0 <_ZN20SakuraGameScreenView13playerSpecialEv>
                        if (!gameEnded) performAIAction();
 800f94e:	e7d0      	b.n	800f8f2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x208>
    SakuraGameScreenViewBase::handleClickEvent(evt);
 800f950:	4629      	mov	r1, r5
 800f952:	4620      	mov	r0, r4
}
 800f954:	b00b      	add	sp, #44	@ 0x2c
 800f956:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    SakuraGameScreenViewBase::handleClickEvent(evt);
 800f95a:	f00d b8cb 	b.w	801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
}
 800f95e:	b00b      	add	sp, #44	@ 0x2c
 800f960:	bd30      	pop	{r4, r5, pc}

0800f962 <_ZN20SakuraGameScreenView15handleDragEventERKN8touchgfx9DragEventE>:
    SakuraGameScreenViewBase::handleDragEvent(evt);
 800f962:	f00d b91b 	b.w	801cb9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>

0800f966 <_ZN25SakuraMainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SakuraMainScreenPresenter() {}
 800f966:	4770      	bx	lr

0800f968 <_ZThn4_N25SakuraMainScreenPresenterD1Ev>:
 800f968:	3804      	subs	r0, #4
 800f96a:	4770      	bx	lr

0800f96c <_ZN25SakuraMainScreenPresenter10deactivateEv>:
}

void SakuraMainScreenPresenter::activate()
{

}
 800f96c:	4770      	bx	lr

0800f96e <_ZN25SakuraMainScreenPresenterD0Ev>:
 800f96e:	b510      	push	{r4, lr}
 800f970:	2110      	movs	r1, #16
 800f972:	4604      	mov	r4, r0
 800f974:	f01d fc3f 	bl	802d1f6 <_ZdlPvj>
 800f978:	4620      	mov	r0, r4
 800f97a:	bd10      	pop	{r4, pc}

0800f97c <_ZThn4_N25SakuraMainScreenPresenterD0Ev>:
 800f97c:	f1a0 0004 	sub.w	r0, r0, #4
 800f980:	e7f5      	b.n	800f96e <_ZN25SakuraMainScreenPresenterD0Ev>
	...

0800f984 <_ZN25SakuraMainScreenPresenterC1ER20SakuraMainScreenView>:
 800f984:	2200      	movs	r2, #0
 800f986:	6082      	str	r2, [r0, #8]
    : view(v)
 800f988:	4a02      	ldr	r2, [pc, #8]	@ (800f994 <_ZN25SakuraMainScreenPresenterC1ER20SakuraMainScreenView+0x10>)
 800f98a:	6002      	str	r2, [r0, #0]
 800f98c:	3218      	adds	r2, #24
 800f98e:	6042      	str	r2, [r0, #4]
 800f990:	60c1      	str	r1, [r0, #12]
}
 800f992:	4770      	bx	lr
 800f994:	08031f74 	.word	0x08031f74

0800f998 <_ZN20SakuraMainScreenView14tearDownScreenEv>:
}

void SakuraMainScreenView::tearDownScreen()
{
    SakuraMainScreenViewBase::tearDownScreen();
}
 800f998:	4770      	bx	lr
	...

0800f99c <_ZN20SakuraMainScreenViewD1Ev>:

class SakuraMainScreenView : public SakuraMainScreenViewBase
{
public:
    SakuraMainScreenView();
    virtual ~SakuraMainScreenView() {}
 800f99c:	b510      	push	{r4, lr}
 800f99e:	4b03      	ldr	r3, [pc, #12]	@ (800f9ac <_ZN20SakuraMainScreenViewD1Ev+0x10>)
 800f9a0:	6003      	str	r3, [r0, #0]
 800f9a2:	4604      	mov	r4, r0
 800f9a4:	f7f9 fd6b 	bl	800947e <_ZN24SakuraMainScreenViewBaseD1Ev>
 800f9a8:	4620      	mov	r0, r4
 800f9aa:	bd10      	pop	{r4, pc}
 800f9ac:	08031f9c 	.word	0x08031f9c

0800f9b0 <_ZN20SakuraMainScreenViewD0Ev>:
 800f9b0:	b510      	push	{r4, lr}
 800f9b2:	4604      	mov	r4, r0
 800f9b4:	f7ff fff2 	bl	800f99c <_ZN20SakuraMainScreenViewD1Ev>
 800f9b8:	4620      	mov	r0, r4
 800f9ba:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
 800f9be:	f01d fc1a 	bl	802d1f6 <_ZdlPvj>
 800f9c2:	4620      	mov	r0, r4
 800f9c4:	bd10      	pop	{r4, pc}
	...

0800f9c8 <_ZN20SakuraMainScreenViewC1Ev>:
SakuraMainScreenView::SakuraMainScreenView()
 800f9c8:	b510      	push	{r4, lr}
 800f9ca:	4604      	mov	r4, r0
 800f9cc:	f7f9 fda0 	bl	8009510 <_ZN24SakuraMainScreenViewBaseC1Ev>
 800f9d0:	4b01      	ldr	r3, [pc, #4]	@ (800f9d8 <_ZN20SakuraMainScreenViewC1Ev+0x10>)
 800f9d2:	6023      	str	r3, [r4, #0]
}
 800f9d4:	4620      	mov	r0, r4
 800f9d6:	bd10      	pop	{r4, pc}
 800f9d8:	08031f9c 	.word	0x08031f9c

0800f9dc <_ZN20SakuraMainScreenView11setupScreenEv>:
    SakuraMainScreenViewBase::setupScreen();
 800f9dc:	f7f9 bd50 	b.w	8009480 <_ZN24SakuraMainScreenViewBase11setupScreenEv>

0800f9e0 <_ZN15SpongePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SpongePresenter() {}
 800f9e0:	4770      	bx	lr

0800f9e2 <_ZThn4_N15SpongePresenterD1Ev>:
 800f9e2:	3804      	subs	r0, #4
 800f9e4:	4770      	bx	lr

0800f9e6 <_ZN15SpongePresenter10deactivateEv>:
}

void SpongePresenter::activate()
{

}
 800f9e6:	4770      	bx	lr

0800f9e8 <_ZN15SpongePresenterD0Ev>:
 800f9e8:	b510      	push	{r4, lr}
 800f9ea:	2110      	movs	r1, #16
 800f9ec:	4604      	mov	r4, r0
 800f9ee:	f01d fc02 	bl	802d1f6 <_ZdlPvj>
 800f9f2:	4620      	mov	r0, r4
 800f9f4:	bd10      	pop	{r4, pc}

0800f9f6 <_ZThn4_N15SpongePresenterD0Ev>:
 800f9f6:	f1a0 0004 	sub.w	r0, r0, #4
 800f9fa:	e7f5      	b.n	800f9e8 <_ZN15SpongePresenterD0Ev>

0800f9fc <_ZN15SpongePresenterC1ER10SpongeView>:
 800f9fc:	2200      	movs	r2, #0
 800f9fe:	6082      	str	r2, [r0, #8]
    : view(v)
 800fa00:	4a02      	ldr	r2, [pc, #8]	@ (800fa0c <_ZN15SpongePresenterC1ER10SpongeView+0x10>)
 800fa02:	6002      	str	r2, [r0, #0]
 800fa04:	3218      	adds	r2, #24
 800fa06:	6042      	str	r2, [r0, #4]
 800fa08:	60c1      	str	r1, [r0, #12]
}
 800fa0a:	4770      	bx	lr
 800fa0c:	08031fd0 	.word	0x08031fd0

0800fa10 <_ZN10SpongeView14tearDownScreenEv>:
}

void SpongeView::tearDownScreen()
{
    SpongeViewBase::tearDownScreen();
}
 800fa10:	4770      	bx	lr
	...

0800fa14 <_ZN10SpongeViewD1Ev>:

class SpongeView : public SpongeViewBase
{
public:
    SpongeView();
    virtual ~SpongeView() {}
 800fa14:	b510      	push	{r4, lr}
 800fa16:	4b03      	ldr	r3, [pc, #12]	@ (800fa24 <_ZN10SpongeViewD1Ev+0x10>)
 800fa18:	6003      	str	r3, [r0, #0]
 800fa1a:	4604      	mov	r4, r0
 800fa1c:	f7f9 fee3 	bl	80097e6 <_ZN14SpongeViewBaseD1Ev>
 800fa20:	4620      	mov	r0, r4
 800fa22:	bd10      	pop	{r4, pc}
 800fa24:	08031ff8 	.word	0x08031ff8

0800fa28 <_ZN10SpongeViewD0Ev>:
 800fa28:	b510      	push	{r4, lr}
 800fa2a:	4604      	mov	r4, r0
 800fa2c:	f7ff fff2 	bl	800fa14 <_ZN10SpongeViewD1Ev>
 800fa30:	4620      	mov	r0, r4
 800fa32:	f44f 714e 	mov.w	r1, #824	@ 0x338
 800fa36:	f01d fbde 	bl	802d1f6 <_ZdlPvj>
 800fa3a:	4620      	mov	r0, r4
 800fa3c:	bd10      	pop	{r4, pc}
	...

0800fa40 <_ZN10SpongeViewC1Ev>:
SpongeView::SpongeView()
 800fa40:	b510      	push	{r4, lr}
 800fa42:	4604      	mov	r4, r0
 800fa44:	f7f9 ff06 	bl	8009854 <_ZN14SpongeViewBaseC1Ev>
 800fa48:	4b04      	ldr	r3, [pc, #16]	@ (800fa5c <_ZN10SpongeViewC1Ev+0x1c>)
 800fa4a:	6023      	str	r3, [r4, #0]
    resetTimer = 0;
 800fa4c:	2300      	movs	r3, #0
 800fa4e:	f8c4 3330 	str.w	r3, [r4, #816]	@ 0x330
    resetTimerActive = false;
 800fa52:	f8a4 3334 	strh.w	r3, [r4, #820]	@ 0x334
}
 800fa56:	4620      	mov	r0, r4
 800fa58:	bd10      	pop	{r4, pc}
 800fa5a:	bf00      	nop
 800fa5c:	08031ff8 	.word	0x08031ff8

0800fa60 <_ZN10SpongeView8initGPIOEv>:

void SpongeView::initGPIO()
{
 800fa60:	b570      	push	{r4, r5, r6, lr}
 800fa62:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800fa64:	2400      	movs	r4, #0
 800fa66:	4b0f      	ldr	r3, [pc, #60]	@ (800faa4 <_ZN10SpongeView8initGPIOEv+0x44>)
 800fa68:	9400      	str	r4, [sp, #0]
 800fa6a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800fa6c:	4d0e      	ldr	r5, [pc, #56]	@ (800faa8 <_ZN10SpongeView8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800fa6e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800fa72:	631a      	str	r2, [r3, #48]	@ 0x30
 800fa74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800fa76:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800fa78:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800fa7c:	9300      	str	r3, [sp, #0]
 800fa7e:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800fa80:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800fa84:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800fa86:	a901      	add	r1, sp, #4
 800fa88:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800fa8a:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800fa8e:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800fa92:	f000 fdc7 	bl	8010624 <HAL_GPIO_Init>

    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800fa96:	4622      	mov	r2, r4
 800fa98:	4631      	mov	r1, r6
 800fa9a:	4628      	mov	r0, r5
 800fa9c:	f000 feac 	bl	80107f8 <HAL_GPIO_WritePin>
}
 800faa0:	b006      	add	sp, #24
 800faa2:	bd70      	pop	{r4, r5, r6, pc}
 800faa4:	40023800 	.word	0x40023800
 800faa8:	40021800 	.word	0x40021800

0800faac <_ZN10SpongeView9toggleLEDEv>:

void SpongeView::toggleLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800faac:	4802      	ldr	r0, [pc, #8]	@ (800fab8 <_ZN10SpongeView9toggleLEDEv+0xc>)
 800faae:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800fab2:	f000 bea6 	b.w	8010802 <HAL_GPIO_TogglePin>
 800fab6:	bf00      	nop
 800fab8:	40021800 	.word	0x40021800

0800fabc <_ZN10SpongeView17hideActionButtonsEv>:
}

void SpongeView::hideActionButtons()
{
 800fabc:	b538      	push	{r3, r4, r5, lr}
 800fabe:	2301      	movs	r3, #1
 800fac0:	2500      	movs	r5, #0
 800fac2:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800fac6:	4604      	mov	r4, r0
 800fac8:	f880 51c5 	strb.w	r5, [r0, #453]	@ 0x1c5
 800facc:	f880 51f1 	strb.w	r5, [r0, #497]	@ 0x1f1
 800fad0:	f880 521d 	strb.w	r5, [r0, #541]	@ 0x21d
 800fad4:	f880 5249 	strb.w	r5, [r0, #585]	@ 0x249
    btn_def.setVisible(false);
    btn_spe.setVisible(false);
    btn_arrow1.setVisible(true);
    btn_arrow2.setVisible(false);

    btn_attack.invalidate();
 800fad8:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
 800fadc:	f00c faac 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800fae0:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800fae4:	f00c faa8 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800fae8:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800faec:	f00c faa4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800faf0:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800faf4:	f00c faa0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800faf8:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800fafc:	f00c fa9c 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    menuOpen = false;
 800fb00:	f884 5335 	strb.w	r5, [r4, #821]	@ 0x335
}
 800fb04:	bd38      	pop	{r3, r4, r5, pc}

0800fb06 <_ZN10SpongeView17showActionButtonsEv>:

void SpongeView::showActionButtons()
{
 800fb06:	b538      	push	{r3, r4, r5, lr}
 800fb08:	2300      	movs	r3, #0
 800fb0a:	2501      	movs	r5, #1
 800fb0c:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800fb10:	4604      	mov	r4, r0
 800fb12:	f880 51c5 	strb.w	r5, [r0, #453]	@ 0x1c5
 800fb16:	f880 51f1 	strb.w	r5, [r0, #497]	@ 0x1f1
 800fb1a:	f880 521d 	strb.w	r5, [r0, #541]	@ 0x21d
 800fb1e:	f880 5249 	strb.w	r5, [r0, #585]	@ 0x249
    btn_def.setVisible(true);
    btn_spe.setVisible(true);
    btn_arrow1.setVisible(false);
    btn_arrow2.setVisible(true);

    btn_attack.invalidate();
 800fb22:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
 800fb26:	f00c fa87 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800fb2a:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800fb2e:	f00c fa83 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800fb32:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800fb36:	f00c fa7f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800fb3a:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800fb3e:	f00c fa7b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800fb42:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800fb46:	f00c fa77 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

    menuOpen = true;
 800fb4a:	f884 5335 	strb.w	r5, [r4, #821]	@ 0x335
}
 800fb4e:	bd38      	pop	{r3, r4, r5, pc}

0800fb50 <_ZN10SpongeView16toggleActionMenuEv>:

void SpongeView::toggleActionMenu()
{
    if (menuOpen) {
 800fb50:	f890 3335 	ldrb.w	r3, [r0, #821]	@ 0x335
{
 800fb54:	b510      	push	{r4, lr}
 800fb56:	4604      	mov	r4, r0
    if (menuOpen) {
 800fb58:	b133      	cbz	r3, 800fb68 <_ZN10SpongeView16toggleActionMenuEv+0x18>
        hideActionButtons();
 800fb5a:	f7ff ffaf 	bl	800fabc <_ZN10SpongeView17hideActionButtonsEv>
    } else {
        showActionButtons();
    }
    toggleLED();
 800fb5e:	4620      	mov	r0, r4
}
 800fb60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    toggleLED();
 800fb64:	f7ff bfa2 	b.w	800faac <_ZN10SpongeView9toggleLEDEv>
        showActionButtons();
 800fb68:	f7ff ffcd 	bl	800fb06 <_ZN10SpongeView17showActionButtonsEv>
 800fb6c:	e7f7      	b.n	800fb5e <_ZN10SpongeView16toggleActionMenuEv+0xe>

0800fb6e <_ZN10SpongeView16resetSpongeStateEv>:
 800fb6e:	2300      	movs	r3, #0
    // Start timer to return to normal state
    startResetTimer();
}

void SpongeView::resetSpongeState()
{
 800fb70:	b510      	push	{r4, lr}
 800fb72:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800fb76:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800fb7a:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 800fb7e:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800fb82:	2301      	movs	r3, #1
 800fb84:	4604      	mov	r4, r0
 800fb86:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9

    // Show normal sponge sprite
    naruto.setVisible(true);

    // Invalidate all sprites
    naruto_atk.invalidate();
 800fb8a:	f500 70ba 	add.w	r0, r0, #372	@ 0x174
 800fb8e:	f00c fa53 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800fb92:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800fb96:	f00c fa4f 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800fb9a:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800fb9e:	f00c fa4b 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe_1.invalidate();
 800fba2:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800fba6:	f00c fa47 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800fbaa:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
}
 800fbae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800fbb2:	f00c ba41 	b.w	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>

0800fbb6 <_ZN10SpongeView11setupScreenEv>:
{
 800fbb6:	b510      	push	{r4, lr}
 800fbb8:	4604      	mov	r4, r0
    SpongeViewBase::setupScreen();
 800fbba:	f7f9 fe15 	bl	80097e8 <_ZN14SpongeViewBase11setupScreenEv>
    initGPIO();
 800fbbe:	4620      	mov	r0, r4
 800fbc0:	f7ff ff4e 	bl	800fa60 <_ZN10SpongeView8initGPIOEv>
    resetTimer = 0;
 800fbc4:	2300      	movs	r3, #0
    resetSpongeState();
 800fbc6:	4620      	mov	r0, r4
    resetTimer = 0;
 800fbc8:	f8c4 3330 	str.w	r3, [r4, #816]	@ 0x330
    resetTimerActive = false;
 800fbcc:	f8a4 3334 	strh.w	r3, [r4, #820]	@ 0x334
    resetSpongeState();
 800fbd0:	f7ff ffcd 	bl	800fb6e <_ZN10SpongeView16resetSpongeStateEv>
    hideActionButtons();
 800fbd4:	4620      	mov	r0, r4
}
 800fbd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    hideActionButtons();
 800fbda:	f7ff bf6f 	b.w	800fabc <_ZN10SpongeView17hideActionButtonsEv>

0800fbde <_ZN10SpongeView15handleTickEventEv>:
    if (resetTimerActive) {
 800fbde:	f890 3334 	ldrb.w	r3, [r0, #820]	@ 0x334
{
 800fbe2:	b510      	push	{r4, lr}
 800fbe4:	4604      	mov	r4, r0
    if (resetTimerActive) {
 800fbe6:	b173      	cbz	r3, 800fc06 <_ZN10SpongeView15handleTickEventEv+0x28>
        resetTimer += 16; // TouchGFX tick ~16ms
 800fbe8:	f8d0 3330 	ldr.w	r3, [r0, #816]	@ 0x330
 800fbec:	3310      	adds	r3, #16
        if (resetTimer >= RESET_TIME_MS) {
 800fbee:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
        resetTimer += 16; // TouchGFX tick ~16ms
 800fbf2:	f8c0 3330 	str.w	r3, [r0, #816]	@ 0x330
        if (resetTimer >= RESET_TIME_MS) {
 800fbf6:	db06      	blt.n	800fc06 <_ZN10SpongeView15handleTickEventEv+0x28>
            resetSpongeState();
 800fbf8:	f7ff ffb9 	bl	800fb6e <_ZN10SpongeView16resetSpongeStateEv>
            resetTimerActive = false;
 800fbfc:	2300      	movs	r3, #0
 800fbfe:	f884 3334 	strb.w	r3, [r4, #820]	@ 0x334
            resetTimer = 0;
 800fc02:	f8c4 3330 	str.w	r3, [r4, #816]	@ 0x330
}
 800fc06:	bd10      	pop	{r4, pc}

0800fc08 <_ZN10SpongeView13performAttackEv>:
{
 800fc08:	b570      	push	{r4, r5, r6, lr}
 800fc0a:	4604      	mov	r4, r0
 800fc0c:	2600      	movs	r6, #0
 800fc0e:	2501      	movs	r5, #1
    resetSpongeState();
 800fc10:	f7ff ffad 	bl	800fb6e <_ZN10SpongeView16resetSpongeStateEv>
    naruto_atk.invalidate();
 800fc14:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800fc18:	f884 60e9 	strb.w	r6, [r4, #233]	@ 0xe9
 800fc1c:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 800fc20:	f00c fa0a 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800fc24:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800fc28:	f00c fa06 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    toggleLED();
 800fc2c:	4620      	mov	r0, r4
 800fc2e:	f7ff ff3d 	bl	800faac <_ZN10SpongeView9toggleLEDEv>

void SpongeView::startResetTimer()
{
    resetTimer = 0;
 800fc32:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    resetTimerActive = true;
 800fc36:	f884 5334 	strb.w	r5, [r4, #820]	@ 0x334
}
 800fc3a:	bd70      	pop	{r4, r5, r6, pc}

0800fc3c <_ZN10SpongeView13performDefendEv>:
{
 800fc3c:	b570      	push	{r4, r5, r6, lr}
 800fc3e:	4604      	mov	r4, r0
 800fc40:	2600      	movs	r6, #0
 800fc42:	2501      	movs	r5, #1
    resetSpongeState();
 800fc44:	f7ff ff93 	bl	800fb6e <_ZN10SpongeView16resetSpongeStateEv>
    naruto_def.invalidate();
 800fc48:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800fc4c:	f884 60e9 	strb.w	r6, [r4, #233]	@ 0xe9
 800fc50:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 800fc54:	f00c f9f0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800fc58:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800fc5c:	f00c f9ec 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    toggleLED();
 800fc60:	4620      	mov	r0, r4
 800fc62:	f7ff ff23 	bl	800faac <_ZN10SpongeView9toggleLEDEv>
    resetTimer = 0;
 800fc66:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    resetTimerActive = true;
 800fc6a:	f884 5334 	strb.w	r5, [r4, #820]	@ 0x334
}
 800fc6e:	bd70      	pop	{r4, r5, r6, pc}

0800fc70 <_ZN10SpongeView14performSpecialEv>:
{
 800fc70:	b570      	push	{r4, r5, r6, lr}
 800fc72:	4604      	mov	r4, r0
 800fc74:	2501      	movs	r5, #1
 800fc76:	2600      	movs	r6, #0
    resetSpongeState();
 800fc78:	f7ff ff79 	bl	800fb6e <_ZN10SpongeView16resetSpongeStateEv>
    naruto_spe.invalidate();
 800fc7c:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800fc80:	f884 60e9 	strb.w	r6, [r4, #233]	@ 0xe9
 800fc84:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 800fc88:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 800fc8c:	f00c f9d4 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe_1.invalidate();
 800fc90:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800fc94:	f00c f9d0 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800fc98:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800fc9c:	f00c f9cc 	bl	801c038 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800fca0:	4620      	mov	r0, r4
 800fca2:	f7ff ff03 	bl	800faac <_ZN10SpongeView9toggleLEDEv>
 800fca6:	4620      	mov	r0, r4
 800fca8:	f7ff ff00 	bl	800faac <_ZN10SpongeView9toggleLEDEv>
 800fcac:	4620      	mov	r0, r4
 800fcae:	f7ff fefd 	bl	800faac <_ZN10SpongeView9toggleLEDEv>
    resetTimer = 0;
 800fcb2:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    resetTimerActive = true;
 800fcb6:	f884 5334 	strb.w	r5, [r4, #820]	@ 0x334
}
 800fcba:	bd70      	pop	{r4, r5, r6, pc}

0800fcbc <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE>:
    if (evt.getType() == ClickEvent::PRESSED) {
 800fcbc:	790b      	ldrb	r3, [r1, #4]
{
 800fcbe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fcc0:	4605      	mov	r5, r0
 800fcc2:	460c      	mov	r4, r1
    if (evt.getType() == ClickEvent::PRESSED) {
 800fcc4:	2b00      	cmp	r3, #0
 800fcc6:	d15c      	bne.n	800fd82 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xc6>
        if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fcc8:	f500 7114 	add.w	r1, r0, #592	@ 0x250
 800fccc:	4668      	mov	r0, sp
 800fcce:	f00c fa4f 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fcd2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fcd6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fcda:	4668      	mov	r0, sp
 800fcdc:	f7fa fd84 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800fce0:	b128      	cbz	r0, 800fcee <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0x32>
            toggleActionMenu();
 800fce2:	4628      	mov	r0, r5
}
 800fce4:	b003      	add	sp, #12
 800fce6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            toggleActionMenu();
 800fcea:	f7ff bf31 	b.w	800fb50 <_ZN10SpongeView16toggleActionMenuEv>
        if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fcee:	f505 7109 	add.w	r1, r5, #548	@ 0x224
 800fcf2:	4668      	mov	r0, sp
 800fcf4:	f00c fa3c 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fcf8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fcfc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fd00:	4668      	mov	r0, sp
 800fd02:	f7fa fd71 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800fd06:	2800      	cmp	r0, #0
 800fd08:	d1eb      	bne.n	800fce2 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0x26>
        if (menuOpen) {
 800fd0a:	f895 3335 	ldrb.w	r3, [r5, #821]	@ 0x335
 800fd0e:	b3c3      	cbz	r3, 800fd82 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xc6>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fd10:	f505 71d0 	add.w	r1, r5, #416	@ 0x1a0
 800fd14:	4668      	mov	r0, sp
 800fd16:	f00c fa2b 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fd1a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fd1e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fd22:	4668      	mov	r0, sp
 800fd24:	f7fa fd60 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800fd28:	b128      	cbz	r0, 800fd36 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0x7a>
                performAttack();
 800fd2a:	4628      	mov	r0, r5
}
 800fd2c:	b003      	add	sp, #12
 800fd2e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                performAttack();
 800fd32:	f7ff bf69 	b.w	800fc08 <_ZN10SpongeView13performAttackEv>
            else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fd36:	f505 71e6 	add.w	r1, r5, #460	@ 0x1cc
 800fd3a:	4668      	mov	r0, sp
 800fd3c:	f00c fa18 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fd40:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fd44:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fd48:	4668      	mov	r0, sp
 800fd4a:	f7fa fd4d 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800fd4e:	b128      	cbz	r0, 800fd5c <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xa0>
                performDefend();
 800fd50:	4628      	mov	r0, r5
}
 800fd52:	b003      	add	sp, #12
 800fd54:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                performDefend();
 800fd58:	f7ff bf70 	b.w	800fc3c <_ZN10SpongeView13performDefendEv>
            else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fd5c:	f505 71fc 	add.w	r1, r5, #504	@ 0x1f8
 800fd60:	4668      	mov	r0, sp
 800fd62:	f00c fa05 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fd66:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fd6a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fd6e:	4668      	mov	r0, sp
 800fd70:	f7fa fd3a 	bl	800a7e8 <_ZNK8touchgfx4Rect9intersectEss>
 800fd74:	b128      	cbz	r0, 800fd82 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xc6>
                performSpecial();
 800fd76:	4628      	mov	r0, r5
}
 800fd78:	b003      	add	sp, #12
 800fd7a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                performSpecial();
 800fd7e:	f7ff bf77 	b.w	800fc70 <_ZN10SpongeView14performSpecialEv>
    SpongeViewBase::handleClickEvent(evt);
 800fd82:	4621      	mov	r1, r4
 800fd84:	4628      	mov	r0, r5
}
 800fd86:	b003      	add	sp, #12
 800fd88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    SpongeViewBase::handleClickEvent(evt);
 800fd8c:	f00c beb2 	b.w	801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>

0800fd90 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800fd90:	20f0      	movs	r0, #240	@ 0xf0
 800fd92:	4770      	bx	lr

0800fd94 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800fd94:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 800fd98:	4770      	bx	lr

0800fd9a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800fd9a:	2029      	movs	r0, #41	@ 0x29
 800fd9c:	f7f2 ba60 	b.w	8002260 <LCD_IO_WriteReg>

0800fda0 <ili9341_DisplayOff>:
 800fda0:	2028      	movs	r0, #40	@ 0x28
 800fda2:	f7f2 ba5d 	b.w	8002260 <LCD_IO_WriteReg>

0800fda6 <ili9341_Init>:
{
 800fda6:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800fda8:	f7f2 fa2e 	bl	8002208 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800fdac:	20ca      	movs	r0, #202	@ 0xca
 800fdae:	f7f2 fa57 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fdb2:	20c3      	movs	r0, #195	@ 0xc3
 800fdb4:	f7f2 fa38 	bl	8002228 <LCD_IO_WriteData>
 800fdb8:	2008      	movs	r0, #8
 800fdba:	f7f2 fa35 	bl	8002228 <LCD_IO_WriteData>
 800fdbe:	2050      	movs	r0, #80	@ 0x50
 800fdc0:	f7f2 fa32 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fdc4:	20cf      	movs	r0, #207	@ 0xcf
 800fdc6:	f7f2 fa4b 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fdca:	2000      	movs	r0, #0
 800fdcc:	f7f2 fa2c 	bl	8002228 <LCD_IO_WriteData>
 800fdd0:	20c1      	movs	r0, #193	@ 0xc1
 800fdd2:	f7f2 fa29 	bl	8002228 <LCD_IO_WriteData>
 800fdd6:	2030      	movs	r0, #48	@ 0x30
 800fdd8:	f7f2 fa26 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fddc:	20ed      	movs	r0, #237	@ 0xed
 800fdde:	f7f2 fa3f 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fde2:	2064      	movs	r0, #100	@ 0x64
 800fde4:	f7f2 fa20 	bl	8002228 <LCD_IO_WriteData>
 800fde8:	2003      	movs	r0, #3
 800fdea:	f7f2 fa1d 	bl	8002228 <LCD_IO_WriteData>
 800fdee:	2012      	movs	r0, #18
 800fdf0:	f7f2 fa1a 	bl	8002228 <LCD_IO_WriteData>
 800fdf4:	2081      	movs	r0, #129	@ 0x81
 800fdf6:	f7f2 fa17 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fdfa:	20e8      	movs	r0, #232	@ 0xe8
 800fdfc:	f7f2 fa30 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe00:	2085      	movs	r0, #133	@ 0x85
 800fe02:	f7f2 fa11 	bl	8002228 <LCD_IO_WriteData>
 800fe06:	2000      	movs	r0, #0
 800fe08:	f7f2 fa0e 	bl	8002228 <LCD_IO_WriteData>
 800fe0c:	2078      	movs	r0, #120	@ 0x78
 800fe0e:	f7f2 fa0b 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe12:	20cb      	movs	r0, #203	@ 0xcb
 800fe14:	f7f2 fa24 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe18:	2039      	movs	r0, #57	@ 0x39
 800fe1a:	f7f2 fa05 	bl	8002228 <LCD_IO_WriteData>
 800fe1e:	202c      	movs	r0, #44	@ 0x2c
 800fe20:	f7f2 fa02 	bl	8002228 <LCD_IO_WriteData>
 800fe24:	2000      	movs	r0, #0
 800fe26:	f7f2 f9ff 	bl	8002228 <LCD_IO_WriteData>
 800fe2a:	2034      	movs	r0, #52	@ 0x34
 800fe2c:	f7f2 f9fc 	bl	8002228 <LCD_IO_WriteData>
 800fe30:	2002      	movs	r0, #2
 800fe32:	f7f2 f9f9 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe36:	20f7      	movs	r0, #247	@ 0xf7
 800fe38:	f7f2 fa12 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe3c:	2020      	movs	r0, #32
 800fe3e:	f7f2 f9f3 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe42:	20ea      	movs	r0, #234	@ 0xea
 800fe44:	f7f2 fa0c 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe48:	2000      	movs	r0, #0
 800fe4a:	f7f2 f9ed 	bl	8002228 <LCD_IO_WriteData>
 800fe4e:	2000      	movs	r0, #0
 800fe50:	f7f2 f9ea 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe54:	20b1      	movs	r0, #177	@ 0xb1
 800fe56:	f7f2 fa03 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe5a:	2000      	movs	r0, #0
 800fe5c:	f7f2 f9e4 	bl	8002228 <LCD_IO_WriteData>
 800fe60:	201b      	movs	r0, #27
 800fe62:	f7f2 f9e1 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe66:	20b6      	movs	r0, #182	@ 0xb6
 800fe68:	f7f2 f9fa 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe6c:	200a      	movs	r0, #10
 800fe6e:	f7f2 f9db 	bl	8002228 <LCD_IO_WriteData>
 800fe72:	20a2      	movs	r0, #162	@ 0xa2
 800fe74:	f7f2 f9d8 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe78:	20c0      	movs	r0, #192	@ 0xc0
 800fe7a:	f7f2 f9f1 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe7e:	2010      	movs	r0, #16
 800fe80:	f7f2 f9d2 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe84:	20c1      	movs	r0, #193	@ 0xc1
 800fe86:	f7f2 f9eb 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe8a:	2010      	movs	r0, #16
 800fe8c:	f7f2 f9cc 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fe90:	20c5      	movs	r0, #197	@ 0xc5
 800fe92:	f7f2 f9e5 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fe96:	2045      	movs	r0, #69	@ 0x45
 800fe98:	f7f2 f9c6 	bl	8002228 <LCD_IO_WriteData>
 800fe9c:	2015      	movs	r0, #21
 800fe9e:	f7f2 f9c3 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fea2:	20c7      	movs	r0, #199	@ 0xc7
 800fea4:	f7f2 f9dc 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fea8:	2090      	movs	r0, #144	@ 0x90
 800feaa:	f7f2 f9bd 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800feae:	2036      	movs	r0, #54	@ 0x36
 800feb0:	f7f2 f9d6 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800feb4:	20c8      	movs	r0, #200	@ 0xc8
 800feb6:	f7f2 f9b7 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800feba:	20f2      	movs	r0, #242	@ 0xf2
 800febc:	f7f2 f9d0 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fec0:	2000      	movs	r0, #0
 800fec2:	f7f2 f9b1 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fec6:	20b0      	movs	r0, #176	@ 0xb0
 800fec8:	f7f2 f9ca 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fecc:	20c2      	movs	r0, #194	@ 0xc2
 800fece:	f7f2 f9ab 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fed2:	20b6      	movs	r0, #182	@ 0xb6
 800fed4:	f7f2 f9c4 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fed8:	200a      	movs	r0, #10
 800feda:	f7f2 f9a5 	bl	8002228 <LCD_IO_WriteData>
 800fede:	20a7      	movs	r0, #167	@ 0xa7
 800fee0:	f7f2 f9a2 	bl	8002228 <LCD_IO_WriteData>
 800fee4:	2027      	movs	r0, #39	@ 0x27
 800fee6:	f7f2 f99f 	bl	8002228 <LCD_IO_WriteData>
 800feea:	2004      	movs	r0, #4
 800feec:	f7f2 f99c 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800fef0:	202a      	movs	r0, #42	@ 0x2a
 800fef2:	f7f2 f9b5 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800fef6:	2000      	movs	r0, #0
 800fef8:	f7f2 f996 	bl	8002228 <LCD_IO_WriteData>
 800fefc:	2000      	movs	r0, #0
 800fefe:	f7f2 f993 	bl	8002228 <LCD_IO_WriteData>
 800ff02:	2000      	movs	r0, #0
 800ff04:	f7f2 f990 	bl	8002228 <LCD_IO_WriteData>
 800ff08:	20ef      	movs	r0, #239	@ 0xef
 800ff0a:	f7f2 f98d 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ff0e:	202b      	movs	r0, #43	@ 0x2b
 800ff10:	f7f2 f9a6 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ff14:	2000      	movs	r0, #0
 800ff16:	f7f2 f987 	bl	8002228 <LCD_IO_WriteData>
 800ff1a:	2000      	movs	r0, #0
 800ff1c:	f7f2 f984 	bl	8002228 <LCD_IO_WriteData>
 800ff20:	2001      	movs	r0, #1
 800ff22:	f7f2 f981 	bl	8002228 <LCD_IO_WriteData>
 800ff26:	203f      	movs	r0, #63	@ 0x3f
 800ff28:	f7f2 f97e 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ff2c:	20f6      	movs	r0, #246	@ 0xf6
 800ff2e:	f7f2 f997 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ff32:	2001      	movs	r0, #1
 800ff34:	f7f2 f978 	bl	8002228 <LCD_IO_WriteData>
 800ff38:	2000      	movs	r0, #0
 800ff3a:	f7f2 f975 	bl	8002228 <LCD_IO_WriteData>
 800ff3e:	2006      	movs	r0, #6
 800ff40:	f7f2 f972 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ff44:	202c      	movs	r0, #44	@ 0x2c
 800ff46:	f7f2 f98b 	bl	8002260 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800ff4a:	20c8      	movs	r0, #200	@ 0xc8
 800ff4c:	f7f2 f9d6 	bl	80022fc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800ff50:	2026      	movs	r0, #38	@ 0x26
 800ff52:	f7f2 f985 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ff56:	2001      	movs	r0, #1
 800ff58:	f7f2 f966 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ff5c:	20e0      	movs	r0, #224	@ 0xe0
 800ff5e:	f7f2 f97f 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ff62:	200f      	movs	r0, #15
 800ff64:	f7f2 f960 	bl	8002228 <LCD_IO_WriteData>
 800ff68:	2029      	movs	r0, #41	@ 0x29
 800ff6a:	f7f2 f95d 	bl	8002228 <LCD_IO_WriteData>
 800ff6e:	2024      	movs	r0, #36	@ 0x24
 800ff70:	f7f2 f95a 	bl	8002228 <LCD_IO_WriteData>
 800ff74:	200c      	movs	r0, #12
 800ff76:	f7f2 f957 	bl	8002228 <LCD_IO_WriteData>
 800ff7a:	200e      	movs	r0, #14
 800ff7c:	f7f2 f954 	bl	8002228 <LCD_IO_WriteData>
 800ff80:	2009      	movs	r0, #9
 800ff82:	f7f2 f951 	bl	8002228 <LCD_IO_WriteData>
 800ff86:	204e      	movs	r0, #78	@ 0x4e
 800ff88:	f7f2 f94e 	bl	8002228 <LCD_IO_WriteData>
 800ff8c:	2078      	movs	r0, #120	@ 0x78
 800ff8e:	f7f2 f94b 	bl	8002228 <LCD_IO_WriteData>
 800ff92:	203c      	movs	r0, #60	@ 0x3c
 800ff94:	f7f2 f948 	bl	8002228 <LCD_IO_WriteData>
 800ff98:	2009      	movs	r0, #9
 800ff9a:	f7f2 f945 	bl	8002228 <LCD_IO_WriteData>
 800ff9e:	2013      	movs	r0, #19
 800ffa0:	f7f2 f942 	bl	8002228 <LCD_IO_WriteData>
 800ffa4:	2005      	movs	r0, #5
 800ffa6:	f7f2 f93f 	bl	8002228 <LCD_IO_WriteData>
 800ffaa:	2017      	movs	r0, #23
 800ffac:	f7f2 f93c 	bl	8002228 <LCD_IO_WriteData>
 800ffb0:	2011      	movs	r0, #17
 800ffb2:	f7f2 f939 	bl	8002228 <LCD_IO_WriteData>
 800ffb6:	2000      	movs	r0, #0
 800ffb8:	f7f2 f936 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ffbc:	20e1      	movs	r0, #225	@ 0xe1
 800ffbe:	f7f2 f94f 	bl	8002260 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ffc2:	2000      	movs	r0, #0
 800ffc4:	f7f2 f930 	bl	8002228 <LCD_IO_WriteData>
 800ffc8:	2016      	movs	r0, #22
 800ffca:	f7f2 f92d 	bl	8002228 <LCD_IO_WriteData>
 800ffce:	201b      	movs	r0, #27
 800ffd0:	f7f2 f92a 	bl	8002228 <LCD_IO_WriteData>
 800ffd4:	2004      	movs	r0, #4
 800ffd6:	f7f2 f927 	bl	8002228 <LCD_IO_WriteData>
 800ffda:	2011      	movs	r0, #17
 800ffdc:	f7f2 f924 	bl	8002228 <LCD_IO_WriteData>
 800ffe0:	2007      	movs	r0, #7
 800ffe2:	f7f2 f921 	bl	8002228 <LCD_IO_WriteData>
 800ffe6:	2031      	movs	r0, #49	@ 0x31
 800ffe8:	f7f2 f91e 	bl	8002228 <LCD_IO_WriteData>
 800ffec:	2033      	movs	r0, #51	@ 0x33
 800ffee:	f7f2 f91b 	bl	8002228 <LCD_IO_WriteData>
 800fff2:	2042      	movs	r0, #66	@ 0x42
 800fff4:	f7f2 f918 	bl	8002228 <LCD_IO_WriteData>
 800fff8:	2005      	movs	r0, #5
 800fffa:	f7f2 f915 	bl	8002228 <LCD_IO_WriteData>
 800fffe:	200c      	movs	r0, #12
 8010000:	f7f2 f912 	bl	8002228 <LCD_IO_WriteData>
 8010004:	200a      	movs	r0, #10
 8010006:	f7f2 f90f 	bl	8002228 <LCD_IO_WriteData>
 801000a:	2028      	movs	r0, #40	@ 0x28
 801000c:	f7f2 f90c 	bl	8002228 <LCD_IO_WriteData>
 8010010:	202f      	movs	r0, #47	@ 0x2f
 8010012:	f7f2 f909 	bl	8002228 <LCD_IO_WriteData>
 8010016:	200f      	movs	r0, #15
 8010018:	f7f2 f906 	bl	8002228 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801001c:	2011      	movs	r0, #17
 801001e:	f7f2 f91f 	bl	8002260 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8010022:	20c8      	movs	r0, #200	@ 0xc8
 8010024:	f7f2 f96a 	bl	80022fc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8010028:	2029      	movs	r0, #41	@ 0x29
 801002a:	f7f2 f919 	bl	8002260 <LCD_IO_WriteReg>
}
 801002e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8010032:	202c      	movs	r0, #44	@ 0x2c
 8010034:	f7f2 b914 	b.w	8002260 <LCD_IO_WriteReg>

08010038 <ili9341_ReadID>:
{
 8010038:	b508      	push	{r3, lr}
  LCD_IO_Init();
 801003a:	f7f2 f8e5 	bl	8002208 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 801003e:	2103      	movs	r1, #3
 8010040:	20d3      	movs	r0, #211	@ 0xd3
 8010042:	f7f2 f929 	bl	8002298 <LCD_IO_ReadData>
}
 8010046:	b280      	uxth	r0, r0
 8010048:	bd08      	pop	{r3, pc}

0801004a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 801004a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 801004c:	b2c4      	uxtb	r4, r0
 801004e:	2202      	movs	r2, #2
 8010050:	2103      	movs	r1, #3
 8010052:	4620      	mov	r0, r4
 8010054:	f7f2 f88e 	bl	8002174 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8010058:	200a      	movs	r0, #10
 801005a:	f7f2 f8d3 	bl	8002204 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 801005e:	4620      	mov	r0, r4
 8010060:	2200      	movs	r2, #0
 8010062:	2103      	movs	r1, #3
 8010064:	f7f2 f886 	bl	8002174 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8010068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 801006c:	2002      	movs	r0, #2
 801006e:	f7f2 b8c9 	b.w	8002204 <IOE_Delay>

08010072 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8010072:	b538      	push	{r3, r4, r5, lr}
 8010074:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8010076:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8010078:	f7f2 f87a 	bl	8002170 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 801007c:	2100      	movs	r1, #0
 801007e:	4620      	mov	r0, r4
 8010080:	f7f2 f890 	bl	80021a4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8010084:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8010086:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8010088:	4620      	mov	r0, r4
 801008a:	f7f2 f88b 	bl	80021a4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 801008e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8010092:	b280      	uxth	r0, r0
 8010094:	bd38      	pop	{r3, r4, r5, pc}

08010096 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8010096:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8010098:	b2c4      	uxtb	r4, r0
 801009a:	2140      	movs	r1, #64	@ 0x40
 801009c:	4620      	mov	r0, r4
 801009e:	f7f2 f881 	bl	80021a4 <IOE_Read>
  
  if(state > 0)
 80100a2:	0603      	lsls	r3, r0, #24
 80100a4:	d507      	bpl.n	80100b6 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80100a6:	214c      	movs	r1, #76	@ 0x4c
 80100a8:	4620      	mov	r0, r4
 80100aa:	f7f2 f87b 	bl	80021a4 <IOE_Read>
 80100ae:	3800      	subs	r0, #0
 80100b0:	bf18      	it	ne
 80100b2:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80100b4:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80100b6:	2201      	movs	r2, #1
 80100b8:	214b      	movs	r1, #75	@ 0x4b
 80100ba:	4620      	mov	r0, r4
 80100bc:	f7f2 f85a 	bl	8002174 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80100c0:	4620      	mov	r0, r4
 80100c2:	2200      	movs	r2, #0
 80100c4:	214b      	movs	r1, #75	@ 0x4b
 80100c6:	f7f2 f855 	bl	8002174 <IOE_Write>
  uint8_t ret = 0;
 80100ca:	2000      	movs	r0, #0
 80100cc:	e7f2      	b.n	80100b4 <stmpe811_TS_DetectTouch+0x1e>

080100ce <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80100ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80100d0:	2304      	movs	r3, #4
 80100d2:	b2c4      	uxtb	r4, r0
{
 80100d4:	460e      	mov	r6, r1
 80100d6:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80100d8:	21d7      	movs	r1, #215	@ 0xd7
 80100da:	eb0d 0203 	add.w	r2, sp, r3
 80100de:	4620      	mov	r0, r4
 80100e0:	f7f2 f87a 	bl	80021d8 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80100e4:	9b01      	ldr	r3, [sp, #4]
 80100e6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80100e8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80100ea:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80100ee:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80100f0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80100f2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80100f4:	2201      	movs	r2, #1
 80100f6:	214b      	movs	r1, #75	@ 0x4b
 80100f8:	f7f2 f83c 	bl	8002174 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80100fc:	2200      	movs	r2, #0
 80100fe:	214b      	movs	r1, #75	@ 0x4b
 8010100:	4620      	mov	r0, r4
 8010102:	f7f2 f837 	bl	8002174 <IOE_Write>
}
 8010106:	b002      	add	sp, #8
 8010108:	bd70      	pop	{r4, r5, r6, pc}
	...

0801010c <stmpe811_Init>:
{
 801010c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 801010e:	4a0a      	ldr	r2, [pc, #40]	@ (8010138 <stmpe811_Init+0x2c>)
 8010110:	7813      	ldrb	r3, [r2, #0]
 8010112:	4298      	cmp	r0, r3
{
 8010114:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8010116:	d00d      	beq.n	8010134 <stmpe811_Init+0x28>
 8010118:	7851      	ldrb	r1, [r2, #1]
 801011a:	4288      	cmp	r0, r1
 801011c:	d00a      	beq.n	8010134 <stmpe811_Init+0x28>
 801011e:	b10b      	cbz	r3, 8010124 <stmpe811_Init+0x18>
 8010120:	b941      	cbnz	r1, 8010134 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8010122:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8010124:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8010126:	f7f2 f823 	bl	8002170 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 801012a:	4620      	mov	r0, r4
}
 801012c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8010130:	f7ff bf8b 	b.w	801004a <stmpe811_Reset>
}
 8010134:	bd10      	pop	{r4, pc}
 8010136:	bf00      	nop
 8010138:	20002b1c 	.word	0x20002b1c

0801013c <stmpe811_EnableGlobalIT>:
{
 801013c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 801013e:	b2c4      	uxtb	r4, r0
 8010140:	2109      	movs	r1, #9
 8010142:	4620      	mov	r0, r4
 8010144:	f7f2 f82e 	bl	80021a4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8010148:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 801014c:	b2d2      	uxtb	r2, r2
 801014e:	4620      	mov	r0, r4
 8010150:	2109      	movs	r1, #9
}
 8010152:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8010156:	f7f2 b80d 	b.w	8002174 <IOE_Write>

0801015a <stmpe811_DisableGlobalIT>:
{
 801015a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 801015c:	b2c4      	uxtb	r4, r0
 801015e:	2109      	movs	r1, #9
 8010160:	4620      	mov	r0, r4
 8010162:	f7f2 f81f 	bl	80021a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8010166:	2109      	movs	r1, #9
 8010168:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 801016c:	4620      	mov	r0, r4
}
 801016e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8010172:	f7f1 bfff 	b.w	8002174 <IOE_Write>

08010176 <stmpe811_EnableITSource>:
{
 8010176:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8010178:	b2c4      	uxtb	r4, r0
{
 801017a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 801017c:	4620      	mov	r0, r4
 801017e:	210a      	movs	r1, #10
 8010180:	f7f2 f810 	bl	80021a4 <IOE_Read>
  tmp |= Source; 
 8010184:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8010188:	b2d2      	uxtb	r2, r2
 801018a:	4620      	mov	r0, r4
 801018c:	210a      	movs	r1, #10
}
 801018e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8010192:	f7f1 bfef 	b.w	8002174 <IOE_Write>

08010196 <stmpe811_TS_EnableIT>:
{
 8010196:	b510      	push	{r4, lr}
 8010198:	4604      	mov	r4, r0
  IOE_ITConfig();
 801019a:	f7f1 ffea 	bl	8002172 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 801019e:	4620      	mov	r0, r4
 80101a0:	211f      	movs	r1, #31
 80101a2:	f7ff ffe8 	bl	8010176 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80101a6:	4620      	mov	r0, r4
}
 80101a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80101ac:	f7ff bfc6 	b.w	801013c <stmpe811_EnableGlobalIT>

080101b0 <stmpe811_DisableITSource>:
{
 80101b0:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80101b2:	b2c4      	uxtb	r4, r0
{
 80101b4:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80101b6:	4620      	mov	r0, r4
 80101b8:	210a      	movs	r1, #10
 80101ba:	f7f1 fff3 	bl	80021a4 <IOE_Read>
  tmp &= ~Source; 
 80101be:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80101c2:	b2d2      	uxtb	r2, r2
 80101c4:	4620      	mov	r0, r4
 80101c6:	210a      	movs	r1, #10
}
 80101c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80101cc:	f7f1 bfd2 	b.w	8002174 <IOE_Write>

080101d0 <stmpe811_TS_DisableIT>:
{
 80101d0:	b510      	push	{r4, lr}
 80101d2:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80101d4:	f7ff ffc1 	bl	801015a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80101d8:	4620      	mov	r0, r4
 80101da:	211f      	movs	r1, #31
}
 80101dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80101e0:	f7ff bfe6 	b.w	80101b0 <stmpe811_DisableITSource>

080101e4 <stmpe811_ReadGITStatus>:
{
 80101e4:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80101e6:	b2c0      	uxtb	r0, r0
{
 80101e8:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80101ea:	210b      	movs	r1, #11
 80101ec:	f7f1 ffda 	bl	80021a4 <IOE_Read>
}
 80101f0:	4020      	ands	r0, r4
 80101f2:	bd10      	pop	{r4, pc}

080101f4 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80101f4:	211f      	movs	r1, #31
 80101f6:	f7ff bff5 	b.w	80101e4 <stmpe811_ReadGITStatus>

080101fa <stmpe811_ClearGlobalIT>:
{
 80101fa:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80101fc:	b2c0      	uxtb	r0, r0
 80101fe:	210b      	movs	r1, #11
 8010200:	f7f1 bfb8 	b.w	8002174 <IOE_Write>

08010204 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8010204:	211f      	movs	r1, #31
 8010206:	f7ff bff8 	b.w	80101fa <stmpe811_ClearGlobalIT>

0801020a <stmpe811_IO_EnableAF>:
{
 801020a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 801020c:	b2c4      	uxtb	r4, r0
{
 801020e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8010210:	4620      	mov	r0, r4
 8010212:	2117      	movs	r1, #23
 8010214:	f7f1 ffc6 	bl	80021a4 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8010218:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 801021c:	b2d2      	uxtb	r2, r2
 801021e:	4620      	mov	r0, r4
 8010220:	2117      	movs	r1, #23
}
 8010222:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8010226:	f7f1 bfa5 	b.w	8002174 <IOE_Write>

0801022a <stmpe811_TS_Start>:
{
 801022a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 801022c:	b2c4      	uxtb	r4, r0
{
 801022e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8010230:	2104      	movs	r1, #4
 8010232:	4620      	mov	r0, r4
 8010234:	f7f1 ffb6 	bl	80021a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8010238:	2104      	movs	r1, #4
 801023a:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 801023e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8010240:	4620      	mov	r0, r4
 8010242:	f7f1 ff97 	bl	8002174 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8010246:	4630      	mov	r0, r6
 8010248:	21f0      	movs	r1, #240	@ 0xf0
 801024a:	f7ff ffde 	bl	801020a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 801024e:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8010252:	4620      	mov	r0, r4
 8010254:	2104      	movs	r1, #4
 8010256:	f7f1 ff8d 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 801025a:	2249      	movs	r2, #73	@ 0x49
 801025c:	2120      	movs	r1, #32
 801025e:	4620      	mov	r0, r4
 8010260:	f7f1 ff88 	bl	8002174 <IOE_Write>
  IOE_Delay(2); 
 8010264:	2002      	movs	r0, #2
 8010266:	f7f1 ffcd 	bl	8002204 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 801026a:	4620      	mov	r0, r4
 801026c:	2201      	movs	r2, #1
 801026e:	2121      	movs	r1, #33	@ 0x21
 8010270:	f7f1 ff80 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8010274:	4620      	mov	r0, r4
 8010276:	229a      	movs	r2, #154	@ 0x9a
 8010278:	2141      	movs	r1, #65	@ 0x41
 801027a:	f7f1 ff7b 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 801027e:	4620      	mov	r0, r4
 8010280:	2201      	movs	r2, #1
 8010282:	214a      	movs	r1, #74	@ 0x4a
 8010284:	f7f1 ff76 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8010288:	4620      	mov	r0, r4
 801028a:	2201      	movs	r2, #1
 801028c:	214b      	movs	r1, #75	@ 0x4b
 801028e:	f7f1 ff71 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8010292:	4620      	mov	r0, r4
 8010294:	2200      	movs	r2, #0
 8010296:	214b      	movs	r1, #75	@ 0x4b
 8010298:	f7f1 ff6c 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 801029c:	4620      	mov	r0, r4
 801029e:	2201      	movs	r2, #1
 80102a0:	2156      	movs	r1, #86	@ 0x56
 80102a2:	f7f1 ff67 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80102a6:	4620      	mov	r0, r4
 80102a8:	2201      	movs	r2, #1
 80102aa:	2158      	movs	r1, #88	@ 0x58
 80102ac:	f7f1 ff62 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80102b0:	4620      	mov	r0, r4
 80102b2:	2201      	movs	r2, #1
 80102b4:	2140      	movs	r1, #64	@ 0x40
 80102b6:	f7f1 ff5d 	bl	8002174 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80102ba:	4620      	mov	r0, r4
 80102bc:	22ff      	movs	r2, #255	@ 0xff
 80102be:	210b      	movs	r1, #11
 80102c0:	f7f1 ff58 	bl	8002174 <IOE_Write>
}
 80102c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80102c8:	2002      	movs	r0, #2
 80102ca:	f7f1 bf9b 	b.w	8002204 <IOE_Delay>
	...

080102d0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80102d0:	4b05      	ldr	r3, [pc, #20]	@ (80102e8 <SystemInit+0x18>)
 80102d2:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80102d6:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 80102da:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80102de:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80102e2:	609a      	str	r2, [r3, #8]
#endif
}
 80102e4:	4770      	bx	lr
 80102e6:	bf00      	nop
 80102e8:	e000ed00 	.word	0xe000ed00

080102ec <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80102ec:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80102ee:	4b0b      	ldr	r3, [pc, #44]	@ (801031c <HAL_Init+0x30>)
 80102f0:	681a      	ldr	r2, [r3, #0]
 80102f2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80102f6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80102f8:	681a      	ldr	r2, [r3, #0]
 80102fa:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80102fe:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8010300:	681a      	ldr	r2, [r3, #0]
 8010302:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8010306:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8010308:	2003      	movs	r0, #3
 801030a:	f000 f82f 	bl	801036c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 801030e:	2000      	movs	r0, #0
 8010310:	f7f2 fa36 	bl	8002780 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8010314:	f7f2 f800 	bl	8002318 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8010318:	2000      	movs	r0, #0
 801031a:	bd08      	pop	{r3, pc}
 801031c:	40023c00 	.word	0x40023c00

08010320 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8010320:	4a03      	ldr	r2, [pc, #12]	@ (8010330 <HAL_IncTick+0x10>)
 8010322:	4b04      	ldr	r3, [pc, #16]	@ (8010334 <HAL_IncTick+0x14>)
 8010324:	6811      	ldr	r1, [r2, #0]
 8010326:	781b      	ldrb	r3, [r3, #0]
 8010328:	440b      	add	r3, r1
 801032a:	6013      	str	r3, [r2, #0]
}
 801032c:	4770      	bx	lr
 801032e:	bf00      	nop
 8010330:	20002b20 	.word	0x20002b20
 8010334:	20000078 	.word	0x20000078

08010338 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8010338:	4b01      	ldr	r3, [pc, #4]	@ (8010340 <HAL_GetTick+0x8>)
 801033a:	6818      	ldr	r0, [r3, #0]
}
 801033c:	4770      	bx	lr
 801033e:	bf00      	nop
 8010340:	20002b20 	.word	0x20002b20

08010344 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8010344:	b538      	push	{r3, r4, r5, lr}
 8010346:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8010348:	f7ff fff6 	bl	8010338 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 801034c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 801034e:	bf1c      	itt	ne
 8010350:	4b05      	ldrne	r3, [pc, #20]	@ (8010368 <HAL_Delay+0x24>)
 8010352:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8010354:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8010356:	bf18      	it	ne
 8010358:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 801035a:	f7ff ffed 	bl	8010338 <HAL_GetTick>
 801035e:	1b43      	subs	r3, r0, r5
 8010360:	42a3      	cmp	r3, r4
 8010362:	d3fa      	bcc.n	801035a <HAL_Delay+0x16>
  {
  }
}
 8010364:	bd38      	pop	{r3, r4, r5, pc}
 8010366:	bf00      	nop
 8010368:	20000078 	.word	0x20000078

0801036c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 801036c:	4907      	ldr	r1, [pc, #28]	@ (801038c <HAL_NVIC_SetPriorityGrouping+0x20>)
 801036e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8010370:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8010374:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8010376:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8010378:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 801037c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 801037e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8010380:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8010384:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8010388:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 801038a:	4770      	bx	lr
 801038c:	e000ed00 	.word	0xe000ed00

08010390 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8010390:	4b16      	ldr	r3, [pc, #88]	@ (80103ec <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8010392:	b530      	push	{r4, r5, lr}
 8010394:	68dc      	ldr	r4, [r3, #12]
 8010396:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 801039a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801039e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80103a0:	2b04      	cmp	r3, #4
 80103a2:	bf28      	it	cs
 80103a4:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80103a6:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80103a8:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80103ac:	bf8c      	ite	hi
 80103ae:	3c03      	subhi	r4, #3
 80103b0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80103b2:	fa05 f303 	lsl.w	r3, r5, r3
 80103b6:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80103ba:	40a5      	lsls	r5, r4
 80103bc:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80103c0:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80103c2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80103c4:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80103c8:	bfac      	ite	ge
 80103ca:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80103ce:	4a08      	ldrlt	r2, [pc, #32]	@ (80103f0 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80103d0:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80103d4:	bfb8      	it	lt
 80103d6:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80103da:	b2db      	uxtb	r3, r3
 80103dc:	bfaa      	itet	ge
 80103de:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80103e2:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80103e4:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80103e8:	bd30      	pop	{r4, r5, pc}
 80103ea:	bf00      	nop
 80103ec:	e000ed00 	.word	0xe000ed00
 80103f0:	e000ed14 	.word	0xe000ed14

080103f4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80103f4:	2800      	cmp	r0, #0
 80103f6:	db07      	blt.n	8010408 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80103f8:	4a04      	ldr	r2, [pc, #16]	@ (801040c <HAL_NVIC_EnableIRQ+0x18>)
 80103fa:	0941      	lsrs	r1, r0, #5
 80103fc:	2301      	movs	r3, #1
 80103fe:	f000 001f 	and.w	r0, r0, #31
 8010402:	4083      	lsls	r3, r0
 8010404:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8010408:	4770      	bx	lr
 801040a:	bf00      	nop
 801040c:	e000e100 	.word	0xe000e100

08010410 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8010410:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8010412:	4604      	mov	r4, r0
 8010414:	b150      	cbz	r0, 801042c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8010416:	7943      	ldrb	r3, [r0, #5]
 8010418:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 801041c:	b913      	cbnz	r3, 8010424 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 801041e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8010420:	f7f1 ff9a 	bl	8002358 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8010424:	2301      	movs	r3, #1
 8010426:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8010428:	2000      	movs	r0, #0
}
 801042a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 801042c:	2001      	movs	r0, #1
 801042e:	e7fc      	b.n	801042a <HAL_CRC_Init+0x1a>

08010430 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8010430:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8010432:	4604      	mov	r4, r0
 8010434:	b320      	cbz	r0, 8010480 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8010436:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 801043a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 801043e:	b91b      	cbnz	r3, 8010448 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8010440:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8010444:	f7f1 ffa0 	bl	8002388 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8010448:	2302      	movs	r3, #2
 801044a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 801044e:	6823      	ldr	r3, [r4, #0]
 8010450:	6861      	ldr	r1, [r4, #4]
 8010452:	681a      	ldr	r2, [r3, #0]
 8010454:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8010458:	430a      	orrs	r2, r1
 801045a:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 801045c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 801045e:	68a1      	ldr	r1, [r4, #8]
 8010460:	f022 0207 	bic.w	r2, r2, #7
 8010464:	430a      	orrs	r2, r1
 8010466:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8010468:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 801046a:	68e1      	ldr	r1, [r4, #12]
 801046c:	f36f 020d 	bfc	r2, #0, #14
 8010470:	430a      	orrs	r2, r1
 8010472:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8010474:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8010476:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8010478:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 801047a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 801047e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8010480:	2001      	movs	r0, #1
 8010482:	e7fc      	b.n	801047e <HAL_DMA2D_Init+0x4e>

08010484 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8010484:	4770      	bx	lr

08010486 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8010486:	4770      	bx	lr

08010488 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8010488:	6803      	ldr	r3, [r0, #0]
{
 801048a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 801048c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 801048e:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8010490:	07f2      	lsls	r2, r6, #31
{
 8010492:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8010494:	d514      	bpl.n	80104c0 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8010496:	05e9      	lsls	r1, r5, #23
 8010498:	d512      	bpl.n	80104c0 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 801049a:	681a      	ldr	r2, [r3, #0]
 801049c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80104a0:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80104a2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80104a4:	f042 0201 	orr.w	r2, r2, #1
 80104a8:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80104aa:	2201      	movs	r2, #1
 80104ac:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80104ae:	2304      	movs	r3, #4
 80104b0:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80104b4:	2300      	movs	r3, #0
 80104b6:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80104ba:	6943      	ldr	r3, [r0, #20]
 80104bc:	b103      	cbz	r3, 80104c0 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80104be:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80104c0:	06b2      	lsls	r2, r6, #26
 80104c2:	d516      	bpl.n	80104f2 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80104c4:	04ab      	lsls	r3, r5, #18
 80104c6:	d514      	bpl.n	80104f2 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80104c8:	6823      	ldr	r3, [r4, #0]
 80104ca:	681a      	ldr	r2, [r3, #0]
 80104cc:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80104d0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80104d2:	2220      	movs	r2, #32
 80104d4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80104d6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80104d8:	f043 0302 	orr.w	r3, r3, #2
 80104dc:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80104de:	2304      	movs	r3, #4
 80104e0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80104e4:	2300      	movs	r3, #0
 80104e6:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80104ea:	6963      	ldr	r3, [r4, #20]
 80104ec:	b10b      	cbz	r3, 80104f2 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80104ee:	4620      	mov	r0, r4
 80104f0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80104f2:	0730      	lsls	r0, r6, #28
 80104f4:	d516      	bpl.n	8010524 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80104f6:	0529      	lsls	r1, r5, #20
 80104f8:	d514      	bpl.n	8010524 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80104fa:	6823      	ldr	r3, [r4, #0]
 80104fc:	681a      	ldr	r2, [r3, #0]
 80104fe:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8010502:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8010504:	2208      	movs	r2, #8
 8010506:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8010508:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801050a:	f043 0304 	orr.w	r3, r3, #4
 801050e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8010510:	2304      	movs	r3, #4
 8010512:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8010516:	2300      	movs	r3, #0
 8010518:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 801051c:	6963      	ldr	r3, [r4, #20]
 801051e:	b10b      	cbz	r3, 8010524 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8010520:	4620      	mov	r0, r4
 8010522:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8010524:	0772      	lsls	r2, r6, #29
 8010526:	d50b      	bpl.n	8010540 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8010528:	056b      	lsls	r3, r5, #21
 801052a:	d509      	bpl.n	8010540 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 801052c:	6823      	ldr	r3, [r4, #0]
 801052e:	681a      	ldr	r2, [r3, #0]
 8010530:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8010534:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8010536:	2204      	movs	r2, #4
 8010538:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 801053a:	4620      	mov	r0, r4
 801053c:	f7ff ffa2 	bl	8010484 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8010540:	07b0      	lsls	r0, r6, #30
 8010542:	d514      	bpl.n	801056e <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8010544:	05a9      	lsls	r1, r5, #22
 8010546:	d512      	bpl.n	801056e <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8010548:	6823      	ldr	r3, [r4, #0]
 801054a:	681a      	ldr	r2, [r3, #0]
 801054c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8010550:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8010552:	2202      	movs	r2, #2
 8010554:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8010556:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010558:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 801055a:	2301      	movs	r3, #1
 801055c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8010560:	2300      	movs	r3, #0
 8010562:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8010566:	6923      	ldr	r3, [r4, #16]
 8010568:	b10b      	cbz	r3, 801056e <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 801056a:	4620      	mov	r0, r4
 801056c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 801056e:	06f2      	lsls	r2, r6, #27
 8010570:	d513      	bpl.n	801059a <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8010572:	04eb      	lsls	r3, r5, #19
 8010574:	d511      	bpl.n	801059a <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8010576:	6823      	ldr	r3, [r4, #0]
 8010578:	681a      	ldr	r2, [r3, #0]
 801057a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 801057e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8010580:	2210      	movs	r2, #16
 8010582:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8010584:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010586:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8010588:	2301      	movs	r3, #1
 801058a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 801058e:	2300      	movs	r3, #0
 8010590:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8010594:	4620      	mov	r0, r4
 8010596:	f7ff ff76 	bl	8010486 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 801059a:	bd70      	pop	{r4, r5, r6, pc}

0801059c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 801059c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 801059e:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 80105a2:	2a01      	cmp	r2, #1
{
 80105a4:	4603      	mov	r3, r0
 80105a6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 80105aa:	d02b      	beq.n	8010604 <HAL_DMA2D_ConfigLayer+0x68>
 80105ac:	2201      	movs	r2, #1
 80105ae:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80105b2:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80105b6:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80105ba:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80105be:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 80105c0:	4f17      	ldr	r7, [pc, #92]	@ (8010620 <HAL_DMA2D_ConfigLayer+0x84>)
 80105c2:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80105c6:	3c09      	subs	r4, #9
 80105c8:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80105ca:	bf9c      	itt	ls
 80105cc:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 80105d0:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80105d2:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80105d6:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80105d8:	bf88      	it	hi
 80105da:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80105de:	b991      	cbnz	r1, 8010606 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80105e0:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80105e2:	4039      	ands	r1, r7
 80105e4:	4301      	orrs	r1, r0
 80105e6:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80105e8:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80105ea:	6999      	ldr	r1, [r3, #24]
 80105ec:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80105ee:	d803      	bhi.n	80105f8 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80105f0:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80105f2:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80105f6:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80105f8:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80105fa:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80105fc:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8010600:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8010604:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8010606:	69d1      	ldr	r1, [r2, #28]
 8010608:	4039      	ands	r1, r7
 801060a:	4301      	orrs	r1, r0
 801060c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 801060e:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8010610:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8010612:	6989      	ldr	r1, [r1, #24]
 8010614:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8010616:	bf9c      	itt	ls
 8010618:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 801061c:	6215      	strls	r5, [r2, #32]
 801061e:	e7eb      	b.n	80105f8 <HAL_DMA2D_ConfigLayer+0x5c>
 8010620:	00fcfff0 	.word	0x00fcfff0

08010624 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8010624:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8010628:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80107e8 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 801062c:	4a6c      	ldr	r2, [pc, #432]	@ (80107e0 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 801062e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8010630:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8010632:	2401      	movs	r4, #1
 8010634:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8010636:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 801063a:	43ac      	bics	r4, r5
 801063c:	f040 80b7 	bne.w	80107ae <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8010640:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8010642:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8010644:	f005 0403 	and.w	r4, r5, #3
 8010648:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 801064c:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8010650:	1e67      	subs	r7, r4, #1
 8010652:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8010654:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8010658:	d834      	bhi.n	80106c4 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 801065a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 801065c:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8010660:	68cf      	ldr	r7, [r1, #12]
 8010662:	fa07 f708 	lsl.w	r7, r7, r8
 8010666:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 801066a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 801066c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 801066e:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8010672:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8010676:	409f      	lsls	r7, r3
 8010678:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 801067c:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 801067e:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8010680:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8010684:	688f      	ldr	r7, [r1, #8]
 8010686:	fa07 f708 	lsl.w	r7, r7, r8
 801068a:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 801068e:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8010690:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8010692:	d119      	bne.n	80106c8 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8010694:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8010698:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 801069c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80106a0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80106a4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80106a8:	f04f 0e0f 	mov.w	lr, #15
 80106ac:	fa0e fe0b 	lsl.w	lr, lr, fp
 80106b0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80106b4:	690f      	ldr	r7, [r1, #16]
 80106b6:	fa07 f70b 	lsl.w	r7, r7, fp
 80106ba:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80106be:	f8ca 7020 	str.w	r7, [sl, #32]
 80106c2:	e001      	b.n	80106c8 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80106c4:	2c03      	cmp	r4, #3
 80106c6:	d1da      	bne.n	801067e <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80106c8:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80106ca:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80106ce:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80106d2:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80106d4:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 80106d8:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80106da:	d068      	beq.n	80107ae <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80106dc:	2400      	movs	r4, #0
 80106de:	9401      	str	r4, [sp, #4]
 80106e0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80106e4:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 80106e8:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 80106ec:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80106f0:	f023 0703 	bic.w	r7, r3, #3
 80106f4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80106f8:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 80106fc:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8010700:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8010702:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8010706:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8010708:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 801070c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8010710:	240f      	movs	r4, #15
 8010712:	fa04 f40c 	lsl.w	r4, r4, ip
 8010716:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 801071a:	4c32      	ldr	r4, [pc, #200]	@ (80107e4 <HAL_GPIO_Init+0x1c0>)
 801071c:	42a0      	cmp	r0, r4
 801071e:	d04d      	beq.n	80107bc <HAL_GPIO_Init+0x198>
 8010720:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010724:	42a0      	cmp	r0, r4
 8010726:	d04b      	beq.n	80107c0 <HAL_GPIO_Init+0x19c>
 8010728:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801072c:	42a0      	cmp	r0, r4
 801072e:	d049      	beq.n	80107c4 <HAL_GPIO_Init+0x1a0>
 8010730:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010734:	42a0      	cmp	r0, r4
 8010736:	d047      	beq.n	80107c8 <HAL_GPIO_Init+0x1a4>
 8010738:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801073c:	42a0      	cmp	r0, r4
 801073e:	d045      	beq.n	80107cc <HAL_GPIO_Init+0x1a8>
 8010740:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010744:	42a0      	cmp	r0, r4
 8010746:	d043      	beq.n	80107d0 <HAL_GPIO_Init+0x1ac>
 8010748:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801074c:	42a0      	cmp	r0, r4
 801074e:	d041      	beq.n	80107d4 <HAL_GPIO_Init+0x1b0>
 8010750:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010754:	42a0      	cmp	r0, r4
 8010756:	d03f      	beq.n	80107d8 <HAL_GPIO_Init+0x1b4>
 8010758:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 801075c:	42a0      	cmp	r0, r4
 801075e:	d03d      	beq.n	80107dc <HAL_GPIO_Init+0x1b8>
 8010760:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010764:	42a0      	cmp	r0, r4
 8010766:	bf14      	ite	ne
 8010768:	240a      	movne	r4, #10
 801076a:	2409      	moveq	r4, #9
 801076c:	fa04 f40c 	lsl.w	r4, r4, ip
 8010770:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8010774:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8010776:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8010778:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 801077a:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 801077e:	bf0c      	ite	eq
 8010780:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8010782:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8010784:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8010786:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8010788:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 801078c:	bf0c      	ite	eq
 801078e:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8010790:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8010792:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8010794:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8010796:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 801079a:	bf0c      	ite	eq
 801079c:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 801079e:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 80107a0:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80107a2:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80107a4:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80107a6:	bf54      	ite	pl
 80107a8:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80107aa:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80107ac:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80107ae:	3301      	adds	r3, #1
 80107b0:	2b10      	cmp	r3, #16
 80107b2:	f47f af3d 	bne.w	8010630 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80107b6:	b003      	add	sp, #12
 80107b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80107bc:	2400      	movs	r4, #0
 80107be:	e7d5      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107c0:	2401      	movs	r4, #1
 80107c2:	e7d3      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107c4:	2402      	movs	r4, #2
 80107c6:	e7d1      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107c8:	2403      	movs	r4, #3
 80107ca:	e7cf      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107cc:	2404      	movs	r4, #4
 80107ce:	e7cd      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107d0:	2405      	movs	r4, #5
 80107d2:	e7cb      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107d4:	2406      	movs	r4, #6
 80107d6:	e7c9      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107d8:	2407      	movs	r4, #7
 80107da:	e7c7      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107dc:	2408      	movs	r4, #8
 80107de:	e7c5      	b.n	801076c <HAL_GPIO_Init+0x148>
 80107e0:	40013c00 	.word	0x40013c00
 80107e4:	40020000 	.word	0x40020000
 80107e8:	40023800 	.word	0x40023800

080107ec <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80107ec:	6903      	ldr	r3, [r0, #16]
 80107ee:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80107f0:	bf14      	ite	ne
 80107f2:	2001      	movne	r0, #1
 80107f4:	2000      	moveq	r0, #0
 80107f6:	4770      	bx	lr

080107f8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80107f8:	b10a      	cbz	r2, 80107fe <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80107fa:	6181      	str	r1, [r0, #24]
  }
}
 80107fc:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80107fe:	0409      	lsls	r1, r1, #16
 8010800:	e7fb      	b.n	80107fa <HAL_GPIO_WritePin+0x2>

08010802 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8010802:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8010804:	ea01 0203 	and.w	r2, r1, r3
 8010808:	ea21 0103 	bic.w	r1, r1, r3
 801080c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8010810:	6181      	str	r1, [r0, #24]
}
 8010812:	4770      	bx	lr

08010814 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8010814:	6801      	ldr	r1, [r0, #0]
 8010816:	694b      	ldr	r3, [r1, #20]
 8010818:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 801081c:	f04f 0200 	mov.w	r2, #0
 8010820:	d010      	beq.n	8010844 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8010822:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8010826:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8010828:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 801082a:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 801082c:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010830:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8010834:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8010836:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 801083a:	f043 0304 	orr.w	r3, r3, #4
 801083e:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8010840:	2001      	movs	r0, #1
 8010842:	4770      	bx	lr
  }
  return HAL_OK;
 8010844:	4618      	mov	r0, r3
}
 8010846:	4770      	bx	lr

08010848 <I2C_WaitOnFlagUntilTimeout>:
{
 8010848:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 801084c:	4606      	mov	r6, r0
 801084e:	460f      	mov	r7, r1
 8010850:	4691      	mov	r9, r2
 8010852:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8010854:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8010858:	6833      	ldr	r3, [r6, #0]
 801085a:	f1ba 0f01 	cmp.w	sl, #1
 801085e:	bf0c      	ite	eq
 8010860:	695c      	ldreq	r4, [r3, #20]
 8010862:	699c      	ldrne	r4, [r3, #24]
 8010864:	ea27 0404 	bic.w	r4, r7, r4
 8010868:	b2a4      	uxth	r4, r4
 801086a:	fab4 f484 	clz	r4, r4
 801086e:	0964      	lsrs	r4, r4, #5
 8010870:	45a1      	cmp	r9, r4
 8010872:	d001      	beq.n	8010878 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8010874:	2000      	movs	r0, #0
 8010876:	e025      	b.n	80108c4 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8010878:	1c6a      	adds	r2, r5, #1
 801087a:	d0ee      	beq.n	801085a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801087c:	f7ff fd5c 	bl	8010338 <HAL_GetTick>
 8010880:	9b08      	ldr	r3, [sp, #32]
 8010882:	1ac0      	subs	r0, r0, r3
 8010884:	42a8      	cmp	r0, r5
 8010886:	d801      	bhi.n	801088c <I2C_WaitOnFlagUntilTimeout+0x44>
 8010888:	2d00      	cmp	r5, #0
 801088a:	d1e5      	bne.n	8010858 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 801088c:	6833      	ldr	r3, [r6, #0]
 801088e:	f1ba 0f01 	cmp.w	sl, #1
 8010892:	bf0c      	ite	eq
 8010894:	695b      	ldreq	r3, [r3, #20]
 8010896:	699b      	ldrne	r3, [r3, #24]
 8010898:	ea27 0303 	bic.w	r3, r7, r3
 801089c:	b29b      	uxth	r3, r3
 801089e:	fab3 f383 	clz	r3, r3
 80108a2:	095b      	lsrs	r3, r3, #5
 80108a4:	4599      	cmp	r9, r3
 80108a6:	d1d7      	bne.n	8010858 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 80108a8:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 80108aa:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 80108ac:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 80108ae:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 80108b2:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80108b6:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80108b8:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80108bc:	f042 0220 	orr.w	r2, r2, #32
 80108c0:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 80108c2:	2001      	movs	r0, #1
}
 80108c4:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080108c8 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80108c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108cc:	4604      	mov	r4, r0
 80108ce:	460f      	mov	r7, r1
 80108d0:	4616      	mov	r6, r2
 80108d2:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80108d4:	6825      	ldr	r5, [r4, #0]
 80108d6:	6968      	ldr	r0, [r5, #20]
 80108d8:	ea27 0000 	bic.w	r0, r7, r0
 80108dc:	b280      	uxth	r0, r0
 80108de:	b1c0      	cbz	r0, 8010912 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80108e0:	696b      	ldr	r3, [r5, #20]
 80108e2:	055a      	lsls	r2, r3, #21
 80108e4:	d517      	bpl.n	8010916 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80108e6:	682b      	ldr	r3, [r5, #0]
 80108e8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80108ec:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80108ee:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80108f2:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80108f4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80108f6:	2300      	movs	r3, #0
 80108f8:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80108fa:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80108fe:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8010902:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010904:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010908:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 801090a:	2300      	movs	r3, #0
 801090c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8010910:	2001      	movs	r0, #1
}
 8010912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8010916:	1c73      	adds	r3, r6, #1
 8010918:	d0dd      	beq.n	80108d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801091a:	f7ff fd0d 	bl	8010338 <HAL_GetTick>
 801091e:	eba0 0008 	sub.w	r0, r0, r8
 8010922:	42b0      	cmp	r0, r6
 8010924:	d801      	bhi.n	801092a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8010926:	2e00      	cmp	r6, #0
 8010928:	d1d4      	bne.n	80108d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 801092a:	6823      	ldr	r3, [r4, #0]
 801092c:	695a      	ldr	r2, [r3, #20]
 801092e:	ea27 0202 	bic.w	r2, r7, r2
 8010932:	b292      	uxth	r2, r2
 8010934:	2a00      	cmp	r2, #0
 8010936:	d0cd      	beq.n	80108d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8010938:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 801093a:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 801093c:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 801093e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010942:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010946:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010948:	4313      	orrs	r3, r2
 801094a:	e7dd      	b.n	8010908 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0801094c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 801094c:	b570      	push	{r4, r5, r6, lr}
 801094e:	4604      	mov	r4, r0
 8010950:	460d      	mov	r5, r1
 8010952:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8010954:	6823      	ldr	r3, [r4, #0]
 8010956:	695b      	ldr	r3, [r3, #20]
 8010958:	061b      	lsls	r3, r3, #24
 801095a:	d501      	bpl.n	8010960 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 801095c:	2000      	movs	r0, #0
 801095e:	e01e      	b.n	801099e <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8010960:	4620      	mov	r0, r4
 8010962:	f7ff ff57 	bl	8010814 <I2C_IsAcknowledgeFailed>
 8010966:	b9c8      	cbnz	r0, 801099c <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8010968:	1c6a      	adds	r2, r5, #1
 801096a:	d0f3      	beq.n	8010954 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801096c:	f7ff fce4 	bl	8010338 <HAL_GetTick>
 8010970:	1b80      	subs	r0, r0, r6
 8010972:	42a8      	cmp	r0, r5
 8010974:	d801      	bhi.n	801097a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8010976:	2d00      	cmp	r5, #0
 8010978:	d1ec      	bne.n	8010954 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 801097a:	6823      	ldr	r3, [r4, #0]
 801097c:	695b      	ldr	r3, [r3, #20]
 801097e:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8010982:	d1e7      	bne.n	8010954 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8010984:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8010986:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8010988:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 801098c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010990:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8010992:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010996:	f042 0220 	orr.w	r2, r2, #32
 801099a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 801099c:	2001      	movs	r0, #1
}
 801099e:	bd70      	pop	{r4, r5, r6, pc}

080109a0 <I2C_RequestMemoryWrite>:
{
 80109a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80109a4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80109a6:	6802      	ldr	r2, [r0, #0]
{
 80109a8:	b085      	sub	sp, #20
 80109aa:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 80109ae:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80109b0:	6813      	ldr	r3, [r2, #0]
 80109b2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80109b6:	6013      	str	r3, [r2, #0]
{
 80109b8:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80109ba:	463b      	mov	r3, r7
 80109bc:	f8cd 8000 	str.w	r8, [sp]
 80109c0:	2200      	movs	r2, #0
 80109c2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80109c6:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80109c8:	f7ff ff3e 	bl	8010848 <I2C_WaitOnFlagUntilTimeout>
 80109cc:	6823      	ldr	r3, [r4, #0]
 80109ce:	b138      	cbz	r0, 80109e0 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80109d0:	681b      	ldr	r3, [r3, #0]
 80109d2:	05db      	lsls	r3, r3, #23
 80109d4:	d502      	bpl.n	80109dc <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80109d6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80109da:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80109dc:	2603      	movs	r6, #3
 80109de:	e020      	b.n	8010a22 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80109e0:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80109e4:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80109e6:	491a      	ldr	r1, [pc, #104]	@ (8010a50 <I2C_RequestMemoryWrite+0xb0>)
 80109e8:	4643      	mov	r3, r8
 80109ea:	463a      	mov	r2, r7
 80109ec:	4620      	mov	r0, r4
 80109ee:	f7ff ff6b 	bl	80108c8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80109f2:	b9a8      	cbnz	r0, 8010a20 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80109f4:	6823      	ldr	r3, [r4, #0]
 80109f6:	9003      	str	r0, [sp, #12]
 80109f8:	695a      	ldr	r2, [r3, #20]
 80109fa:	9203      	str	r2, [sp, #12]
 80109fc:	699b      	ldr	r3, [r3, #24]
 80109fe:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010a00:	4642      	mov	r2, r8
 8010a02:	4639      	mov	r1, r7
 8010a04:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010a06:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010a08:	f7ff ffa0 	bl	801094c <I2C_WaitOnTXEFlagUntilTimeout>
 8010a0c:	4606      	mov	r6, r0
 8010a0e:	b160      	cbz	r0, 8010a2a <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8010a10:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010a12:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010a14:	bf01      	itttt	eq
 8010a16:	6822      	ldreq	r2, [r4, #0]
 8010a18:	6813      	ldreq	r3, [r2, #0]
 8010a1a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8010a1e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8010a20:	2601      	movs	r6, #1
}
 8010a22:	4630      	mov	r0, r6
 8010a24:	b005      	add	sp, #20
 8010a26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010a2a:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010a2e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010a30:	d102      	bne.n	8010a38 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010a32:	b2ed      	uxtb	r5, r5
 8010a34:	611d      	str	r5, [r3, #16]
 8010a36:	e7f4      	b.n	8010a22 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8010a38:	0a2a      	lsrs	r2, r5, #8
 8010a3a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010a3c:	4639      	mov	r1, r7
 8010a3e:	4642      	mov	r2, r8
 8010a40:	4620      	mov	r0, r4
 8010a42:	f7ff ff83 	bl	801094c <I2C_WaitOnTXEFlagUntilTimeout>
 8010a46:	2800      	cmp	r0, #0
 8010a48:	d1e2      	bne.n	8010a10 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010a4a:	6823      	ldr	r3, [r4, #0]
 8010a4c:	e7f1      	b.n	8010a32 <I2C_RequestMemoryWrite+0x92>
 8010a4e:	bf00      	nop
 8010a50:	00010002 	.word	0x00010002

08010a54 <I2C_RequestMemoryRead>:
{
 8010a54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010a58:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8010a5a:	6803      	ldr	r3, [r0, #0]
{
 8010a5c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8010a5e:	681a      	ldr	r2, [r3, #0]
 8010a60:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8010a64:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010a66:	681a      	ldr	r2, [r3, #0]
{
 8010a68:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010a6c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8010a70:	601a      	str	r2, [r3, #0]
{
 8010a72:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010a74:	463b      	mov	r3, r7
 8010a76:	f8cd 8000 	str.w	r8, [sp]
 8010a7a:	2200      	movs	r2, #0
 8010a7c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8010a80:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010a82:	f7ff fee1 	bl	8010848 <I2C_WaitOnFlagUntilTimeout>
 8010a86:	6823      	ldr	r3, [r4, #0]
 8010a88:	b138      	cbz	r0, 8010a9a <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8010a8a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8010a8c:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8010a8e:	bf44      	itt	mi
 8010a90:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8010a94:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8010a96:	2003      	movs	r0, #3
 8010a98:	e021      	b.n	8010ade <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8010a9a:	fa5f f986 	uxtb.w	r9, r6
 8010a9e:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8010aa2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8010aa4:	492b      	ldr	r1, [pc, #172]	@ (8010b54 <I2C_RequestMemoryRead+0x100>)
 8010aa6:	4643      	mov	r3, r8
 8010aa8:	463a      	mov	r2, r7
 8010aaa:	4620      	mov	r0, r4
 8010aac:	f7ff ff0c 	bl	80108c8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010ab0:	b9a0      	cbnz	r0, 8010adc <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010ab2:	6823      	ldr	r3, [r4, #0]
 8010ab4:	9003      	str	r0, [sp, #12]
 8010ab6:	695a      	ldr	r2, [r3, #20]
 8010ab8:	9203      	str	r2, [sp, #12]
 8010aba:	699b      	ldr	r3, [r3, #24]
 8010abc:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010abe:	4642      	mov	r2, r8
 8010ac0:	4639      	mov	r1, r7
 8010ac2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010ac4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010ac6:	f7ff ff41 	bl	801094c <I2C_WaitOnTXEFlagUntilTimeout>
 8010aca:	b158      	cbz	r0, 8010ae4 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8010acc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010ace:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010ad0:	bf01      	itttt	eq
 8010ad2:	6822      	ldreq	r2, [r4, #0]
 8010ad4:	6813      	ldreq	r3, [r2, #0]
 8010ad6:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8010ada:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8010adc:	2001      	movs	r0, #1
}
 8010ade:	b004      	add	sp, #16
 8010ae0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010ae4:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010ae8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010aea:	d11a      	bne.n	8010b22 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010aec:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010aee:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010af0:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010af2:	4639      	mov	r1, r7
 8010af4:	4620      	mov	r0, r4
 8010af6:	f7ff ff29 	bl	801094c <I2C_WaitOnTXEFlagUntilTimeout>
 8010afa:	4602      	mov	r2, r0
 8010afc:	2800      	cmp	r0, #0
 8010afe:	d1e5      	bne.n	8010acc <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010b00:	6821      	ldr	r1, [r4, #0]
 8010b02:	680b      	ldr	r3, [r1, #0]
 8010b04:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8010b08:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010b0a:	4620      	mov	r0, r4
 8010b0c:	f8cd 8000 	str.w	r8, [sp]
 8010b10:	463b      	mov	r3, r7
 8010b12:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8010b16:	f7ff fe97 	bl	8010848 <I2C_WaitOnFlagUntilTimeout>
 8010b1a:	6822      	ldr	r2, [r4, #0]
 8010b1c:	b160      	cbz	r0, 8010b38 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8010b1e:	6813      	ldr	r3, [r2, #0]
 8010b20:	e7b4      	b.n	8010a8c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8010b22:	0a2a      	lsrs	r2, r5, #8
 8010b24:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010b26:	4639      	mov	r1, r7
 8010b28:	4642      	mov	r2, r8
 8010b2a:	4620      	mov	r0, r4
 8010b2c:	f7ff ff0e 	bl	801094c <I2C_WaitOnTXEFlagUntilTimeout>
 8010b30:	2800      	cmp	r0, #0
 8010b32:	d1cb      	bne.n	8010acc <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010b34:	6823      	ldr	r3, [r4, #0]
 8010b36:	e7d9      	b.n	8010aec <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8010b38:	f049 0301 	orr.w	r3, r9, #1
 8010b3c:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8010b3e:	4905      	ldr	r1, [pc, #20]	@ (8010b54 <I2C_RequestMemoryRead+0x100>)
 8010b40:	4643      	mov	r3, r8
 8010b42:	463a      	mov	r2, r7
 8010b44:	4620      	mov	r0, r4
 8010b46:	f7ff febf 	bl	80108c8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010b4a:	3800      	subs	r0, #0
 8010b4c:	bf18      	it	ne
 8010b4e:	2001      	movne	r0, #1
 8010b50:	e7c5      	b.n	8010ade <I2C_RequestMemoryRead+0x8a>
 8010b52:	bf00      	nop
 8010b54:	00010002 	.word	0x00010002

08010b58 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8010b58:	b570      	push	{r4, r5, r6, lr}
 8010b5a:	4604      	mov	r4, r0
 8010b5c:	460d      	mov	r5, r1
 8010b5e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8010b60:	6823      	ldr	r3, [r4, #0]
 8010b62:	695b      	ldr	r3, [r3, #20]
 8010b64:	075b      	lsls	r3, r3, #29
 8010b66:	d501      	bpl.n	8010b6c <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8010b68:	2000      	movs	r0, #0
 8010b6a:	e01e      	b.n	8010baa <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8010b6c:	4620      	mov	r0, r4
 8010b6e:	f7ff fe51 	bl	8010814 <I2C_IsAcknowledgeFailed>
 8010b72:	b9c8      	cbnz	r0, 8010ba8 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8010b74:	1c6a      	adds	r2, r5, #1
 8010b76:	d0f3      	beq.n	8010b60 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8010b78:	f7ff fbde 	bl	8010338 <HAL_GetTick>
 8010b7c:	1b80      	subs	r0, r0, r6
 8010b7e:	42a8      	cmp	r0, r5
 8010b80:	d801      	bhi.n	8010b86 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8010b82:	2d00      	cmp	r5, #0
 8010b84:	d1ec      	bne.n	8010b60 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8010b86:	6823      	ldr	r3, [r4, #0]
 8010b88:	695b      	ldr	r3, [r3, #20]
 8010b8a:	f013 0304 	ands.w	r3, r3, #4
 8010b8e:	d1e7      	bne.n	8010b60 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8010b90:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8010b92:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8010b94:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010b98:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010b9c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8010b9e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010ba2:	f042 0220 	orr.w	r2, r2, #32
 8010ba6:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8010ba8:	2001      	movs	r0, #1
}
 8010baa:	bd70      	pop	{r4, r5, r6, pc}

08010bac <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8010bac:	b570      	push	{r4, r5, r6, lr}
 8010bae:	4604      	mov	r4, r0
 8010bb0:	460d      	mov	r5, r1
 8010bb2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8010bb4:	6821      	ldr	r1, [r4, #0]
 8010bb6:	694b      	ldr	r3, [r1, #20]
 8010bb8:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8010bbc:	d001      	beq.n	8010bc2 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8010bbe:	2000      	movs	r0, #0
 8010bc0:	e011      	b.n	8010be6 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8010bc2:	694a      	ldr	r2, [r1, #20]
 8010bc4:	06d2      	lsls	r2, r2, #27
 8010bc6:	d50f      	bpl.n	8010be8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8010bc8:	f06f 0210 	mvn.w	r2, #16
 8010bcc:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8010bce:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8010bd0:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8010bd2:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010bd6:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8010bda:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010bdc:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8010bde:	2300      	movs	r3, #0
 8010be0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8010be4:	2001      	movs	r0, #1
}
 8010be6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8010be8:	f7ff fba6 	bl	8010338 <HAL_GetTick>
 8010bec:	1b80      	subs	r0, r0, r6
 8010bee:	42a8      	cmp	r0, r5
 8010bf0:	d801      	bhi.n	8010bf6 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8010bf2:	2d00      	cmp	r5, #0
 8010bf4:	d1de      	bne.n	8010bb4 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8010bf6:	6823      	ldr	r3, [r4, #0]
 8010bf8:	695b      	ldr	r3, [r3, #20]
 8010bfa:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8010bfe:	d1d9      	bne.n	8010bb4 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8010c00:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8010c02:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8010c04:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010c08:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010c0c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010c0e:	4313      	orrs	r3, r2
 8010c10:	e7e4      	b.n	8010bdc <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08010c14 <HAL_I2C_Init>:
{
 8010c14:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8010c16:	4604      	mov	r4, r0
 8010c18:	b908      	cbnz	r0, 8010c1e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8010c1a:	2001      	movs	r0, #1
}
 8010c1c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8010c1e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8010c22:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8010c26:	b91b      	cbnz	r3, 8010c30 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8010c28:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8010c2c:	f7f1 fbce 	bl	80023cc <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8010c30:	2324      	movs	r3, #36	@ 0x24
 8010c32:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8010c36:	6823      	ldr	r3, [r4, #0]
 8010c38:	681a      	ldr	r2, [r3, #0]
 8010c3a:	f022 0201 	bic.w	r2, r2, #1
 8010c3e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8010c40:	681a      	ldr	r2, [r3, #0]
 8010c42:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8010c46:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8010c48:	681a      	ldr	r2, [r3, #0]
 8010c4a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8010c4e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8010c50:	f000 fea8 	bl	80119a4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8010c54:	4b3f      	ldr	r3, [pc, #252]	@ (8010d54 <HAL_I2C_Init+0x140>)
 8010c56:	6865      	ldr	r5, [r4, #4]
 8010c58:	429d      	cmp	r5, r3
 8010c5a:	bf94      	ite	ls
 8010c5c:	4b3e      	ldrls	r3, [pc, #248]	@ (8010d58 <HAL_I2C_Init+0x144>)
 8010c5e:	4b3f      	ldrhi	r3, [pc, #252]	@ (8010d5c <HAL_I2C_Init+0x148>)
 8010c60:	4298      	cmp	r0, r3
 8010c62:	bf8c      	ite	hi
 8010c64:	2300      	movhi	r3, #0
 8010c66:	2301      	movls	r3, #1
 8010c68:	2b00      	cmp	r3, #0
 8010c6a:	d1d6      	bne.n	8010c1a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010c6c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8010c6e:	4e39      	ldr	r6, [pc, #228]	@ (8010d54 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010c70:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8010c72:	4b3b      	ldr	r3, [pc, #236]	@ (8010d60 <HAL_I2C_Init+0x14c>)
 8010c74:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010c78:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8010c7c:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8010c7e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010c80:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8010c82:	bf88      	it	hi
 8010c84:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8010c88:	6a11      	ldr	r1, [r2, #32]
 8010c8a:	bf88      	it	hi
 8010c8c:	4373      	mulhi	r3, r6
 8010c8e:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8010c92:	bf84      	itt	hi
 8010c94:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8010c98:	fbb3 f3f6 	udivhi	r3, r3, r6
 8010c9c:	3301      	adds	r3, #1
 8010c9e:	430b      	orrs	r3, r1
 8010ca0:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8010ca2:	69d1      	ldr	r1, [r2, #28]
 8010ca4:	1e43      	subs	r3, r0, #1
 8010ca6:	482b      	ldr	r0, [pc, #172]	@ (8010d54 <HAL_I2C_Init+0x140>)
 8010ca8:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8010cac:	4285      	cmp	r5, r0
 8010cae:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8010cb2:	d832      	bhi.n	8010d1a <HAL_I2C_Init+0x106>
 8010cb4:	006d      	lsls	r5, r5, #1
 8010cb6:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8010cba:	fbb3 f3f5 	udiv	r3, r3, r5
 8010cbe:	3301      	adds	r3, #1
 8010cc0:	4203      	tst	r3, r0
 8010cc2:	d042      	beq.n	8010d4a <HAL_I2C_Init+0x136>
 8010cc4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8010cc8:	4319      	orrs	r1, r3
 8010cca:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8010ccc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8010cd0:	6811      	ldr	r1, [r2, #0]
 8010cd2:	4303      	orrs	r3, r0
 8010cd4:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8010cd8:	430b      	orrs	r3, r1
 8010cda:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8010cdc:	6891      	ldr	r1, [r2, #8]
 8010cde:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8010ce2:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8010ce6:	4303      	orrs	r3, r0
 8010ce8:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8010cec:	430b      	orrs	r3, r1
 8010cee:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8010cf0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8010cf4:	68d1      	ldr	r1, [r2, #12]
 8010cf6:	4303      	orrs	r3, r0
 8010cf8:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8010cfc:	430b      	orrs	r3, r1
 8010cfe:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8010d00:	6813      	ldr	r3, [r2, #0]
 8010d02:	f043 0301 	orr.w	r3, r3, #1
 8010d06:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8010d08:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8010d0a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8010d0c:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8010d0e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8010d12:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8010d14:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8010d18:	e780      	b.n	8010c1c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8010d1a:	68a0      	ldr	r0, [r4, #8]
 8010d1c:	b950      	cbnz	r0, 8010d34 <HAL_I2C_Init+0x120>
 8010d1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8010d22:	fbb3 f3f5 	udiv	r3, r3, r5
 8010d26:	3301      	adds	r3, #1
 8010d28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8010d2c:	b17b      	cbz	r3, 8010d4e <HAL_I2C_Init+0x13a>
 8010d2e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8010d32:	e7c9      	b.n	8010cc8 <HAL_I2C_Init+0xb4>
 8010d34:	2019      	movs	r0, #25
 8010d36:	4368      	muls	r0, r5
 8010d38:	fbb3 f3f0 	udiv	r3, r3, r0
 8010d3c:	3301      	adds	r3, #1
 8010d3e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8010d42:	b123      	cbz	r3, 8010d4e <HAL_I2C_Init+0x13a>
 8010d44:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8010d48:	e7be      	b.n	8010cc8 <HAL_I2C_Init+0xb4>
 8010d4a:	2304      	movs	r3, #4
 8010d4c:	e7bc      	b.n	8010cc8 <HAL_I2C_Init+0xb4>
 8010d4e:	2301      	movs	r3, #1
 8010d50:	e7ba      	b.n	8010cc8 <HAL_I2C_Init+0xb4>
 8010d52:	bf00      	nop
 8010d54:	000186a0 	.word	0x000186a0
 8010d58:	001e847f 	.word	0x001e847f
 8010d5c:	003d08ff 	.word	0x003d08ff
 8010d60:	000f4240 	.word	0x000f4240

08010d64 <HAL_I2C_Mem_Write>:
{
 8010d64:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010d68:	4604      	mov	r4, r0
 8010d6a:	4699      	mov	r9, r3
 8010d6c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8010d6e:	460f      	mov	r7, r1
 8010d70:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8010d72:	f7ff fae1 	bl	8010338 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8010d76:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8010d7a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8010d7c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8010d7e:	d003      	beq.n	8010d88 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8010d80:	2002      	movs	r0, #2
}
 8010d82:	b003      	add	sp, #12
 8010d84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8010d88:	9000      	str	r0, [sp, #0]
 8010d8a:	493c      	ldr	r1, [pc, #240]	@ (8010e7c <HAL_I2C_Mem_Write+0x118>)
 8010d8c:	2319      	movs	r3, #25
 8010d8e:	2201      	movs	r2, #1
 8010d90:	4620      	mov	r0, r4
 8010d92:	f7ff fd59 	bl	8010848 <I2C_WaitOnFlagUntilTimeout>
 8010d96:	2800      	cmp	r0, #0
 8010d98:	d1f2      	bne.n	8010d80 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8010d9a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8010d9e:	2b01      	cmp	r3, #1
 8010da0:	d0ee      	beq.n	8010d80 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8010da2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8010da4:	2301      	movs	r3, #1
 8010da6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8010daa:	6803      	ldr	r3, [r0, #0]
 8010dac:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8010dae:	bf5e      	ittt	pl
 8010db0:	6803      	ldrpl	r3, [r0, #0]
 8010db2:	f043 0301 	orrpl.w	r3, r3, #1
 8010db6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8010db8:	6803      	ldr	r3, [r0, #0]
 8010dba:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8010dbe:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8010dc0:	2321      	movs	r3, #33	@ 0x21
 8010dc2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8010dc6:	2340      	movs	r3, #64	@ 0x40
 8010dc8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8010dcc:	2300      	movs	r3, #0
 8010dce:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8010dd0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8010dd2:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8010dd4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010dd8:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8010dda:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8010ddc:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8010dde:	4b28      	ldr	r3, [pc, #160]	@ (8010e80 <HAL_I2C_Mem_Write+0x11c>)
 8010de0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8010de2:	4642      	mov	r2, r8
 8010de4:	e9cd 6500 	strd	r6, r5, [sp]
 8010de8:	464b      	mov	r3, r9
 8010dea:	4639      	mov	r1, r7
 8010dec:	4620      	mov	r0, r4
 8010dee:	f7ff fdd7 	bl	80109a0 <I2C_RequestMemoryWrite>
 8010df2:	2800      	cmp	r0, #0
 8010df4:	d02a      	beq.n	8010e4c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8010df6:	2001      	movs	r0, #1
 8010df8:	e7c3      	b.n	8010d82 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8010dfa:	f7ff fda7 	bl	801094c <I2C_WaitOnTXEFlagUntilTimeout>
 8010dfe:	b140      	cbz	r0, 8010e12 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8010e00:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010e02:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010e04:	bf01      	itttt	eq
 8010e06:	6822      	ldreq	r2, [r4, #0]
 8010e08:	6813      	ldreq	r3, [r2, #0]
 8010e0a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8010e0e:	6013      	streq	r3, [r2, #0]
 8010e10:	e7f1      	b.n	8010df6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8010e12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8010e14:	6827      	ldr	r7, [r4, #0]
 8010e16:	461a      	mov	r2, r3
 8010e18:	f812 1b01 	ldrb.w	r1, [r2], #1
 8010e1c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8010e1e:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8010e20:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8010e22:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8010e24:	3a01      	subs	r2, #1
 8010e26:	b292      	uxth	r2, r2
 8010e28:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8010e2a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8010e2c:	1e48      	subs	r0, r1, #1
 8010e2e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8010e30:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8010e32:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8010e34:	d50a      	bpl.n	8010e4c <HAL_I2C_Mem_Write+0xe8>
 8010e36:	b148      	cbz	r0, 8010e4c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8010e38:	785a      	ldrb	r2, [r3, #1]
 8010e3a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8010e3c:	3302      	adds	r3, #2
 8010e3e:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8010e40:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8010e42:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8010e44:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8010e46:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8010e48:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8010e4a:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8010e4c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8010e4e:	462a      	mov	r2, r5
 8010e50:	4631      	mov	r1, r6
 8010e52:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8010e54:	2b00      	cmp	r3, #0
 8010e56:	d1d0      	bne.n	8010dfa <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8010e58:	f7ff fe7e 	bl	8010b58 <I2C_WaitOnBTFFlagUntilTimeout>
 8010e5c:	2800      	cmp	r0, #0
 8010e5e:	d1cf      	bne.n	8010e00 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010e60:	6822      	ldr	r2, [r4, #0]
 8010e62:	6813      	ldr	r3, [r2, #0]
 8010e64:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8010e68:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8010e6a:	2320      	movs	r3, #32
 8010e6c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8010e70:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8010e74:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8010e78:	e783      	b.n	8010d82 <HAL_I2C_Mem_Write+0x1e>
 8010e7a:	bf00      	nop
 8010e7c:	00100002 	.word	0x00100002
 8010e80:	ffff0000 	.word	0xffff0000

08010e84 <HAL_I2C_Mem_Read>:
{
 8010e84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e88:	4604      	mov	r4, r0
 8010e8a:	b087      	sub	sp, #28
 8010e8c:	4699      	mov	r9, r3
 8010e8e:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8010e90:	460d      	mov	r5, r1
 8010e92:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8010e94:	f7ff fa50 	bl	8010338 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8010e98:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8010e9c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8010e9e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8010ea0:	d004      	beq.n	8010eac <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8010ea2:	2502      	movs	r5, #2
}
 8010ea4:	4628      	mov	r0, r5
 8010ea6:	b007      	add	sp, #28
 8010ea8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8010eac:	9000      	str	r0, [sp, #0]
 8010eae:	497a      	ldr	r1, [pc, #488]	@ (8011098 <HAL_I2C_Mem_Read+0x214>)
 8010eb0:	2319      	movs	r3, #25
 8010eb2:	2201      	movs	r2, #1
 8010eb4:	4620      	mov	r0, r4
 8010eb6:	f7ff fcc7 	bl	8010848 <I2C_WaitOnFlagUntilTimeout>
 8010eba:	2800      	cmp	r0, #0
 8010ebc:	d1f1      	bne.n	8010ea2 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8010ebe:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8010ec2:	2b01      	cmp	r3, #1
 8010ec4:	d0ed      	beq.n	8010ea2 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8010ec6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8010ec8:	2301      	movs	r3, #1
 8010eca:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8010ece:	6803      	ldr	r3, [r0, #0]
 8010ed0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8010ed2:	bf5e      	ittt	pl
 8010ed4:	6803      	ldrpl	r3, [r0, #0]
 8010ed6:	f043 0301 	orrpl.w	r3, r3, #1
 8010eda:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8010edc:	6803      	ldr	r3, [r0, #0]
 8010ede:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8010ee2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8010ee4:	2322      	movs	r3, #34	@ 0x22
 8010ee6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8010eea:	2340      	movs	r3, #64	@ 0x40
 8010eec:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8010ef0:	2300      	movs	r3, #0
 8010ef2:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8010ef4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010ef6:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8010ef8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8010efc:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8010efe:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8010f00:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8010f02:	4b66      	ldr	r3, [pc, #408]	@ (801109c <HAL_I2C_Mem_Read+0x218>)
 8010f04:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8010f06:	4629      	mov	r1, r5
 8010f08:	e9cd 7600 	strd	r7, r6, [sp]
 8010f0c:	464b      	mov	r3, r9
 8010f0e:	4642      	mov	r2, r8
 8010f10:	4620      	mov	r0, r4
 8010f12:	f7ff fd9f 	bl	8010a54 <I2C_RequestMemoryRead>
 8010f16:	4605      	mov	r5, r0
 8010f18:	b108      	cbz	r0, 8010f1e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8010f1a:	2501      	movs	r5, #1
 8010f1c:	e7c2      	b.n	8010ea4 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8010f1e:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010f20:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8010f22:	b9b2      	cbnz	r2, 8010f52 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010f24:	9002      	str	r0, [sp, #8]
 8010f26:	695a      	ldr	r2, [r3, #20]
 8010f28:	9202      	str	r2, [sp, #8]
 8010f2a:	699a      	ldr	r2, [r3, #24]
 8010f2c:	9202      	str	r2, [sp, #8]
 8010f2e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010f30:	681a      	ldr	r2, [r3, #0]
 8010f32:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010f36:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8010f38:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 80110a0 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8010f3c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8010f3e:	2b00      	cmp	r3, #0
 8010f40:	d12c      	bne.n	8010f9c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8010f42:	2220      	movs	r2, #32
 8010f44:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8010f48:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8010f4c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8010f50:	e7a8      	b.n	8010ea4 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8010f52:	2a01      	cmp	r2, #1
 8010f54:	d10a      	bne.n	8010f6c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8010f56:	681a      	ldr	r2, [r3, #0]
 8010f58:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8010f5c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010f5e:	9003      	str	r0, [sp, #12]
 8010f60:	695a      	ldr	r2, [r3, #20]
 8010f62:	9203      	str	r2, [sp, #12]
 8010f64:	699a      	ldr	r2, [r3, #24]
 8010f66:	9203      	str	r2, [sp, #12]
 8010f68:	9a03      	ldr	r2, [sp, #12]
 8010f6a:	e7e1      	b.n	8010f30 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8010f6c:	2a02      	cmp	r2, #2
 8010f6e:	d10e      	bne.n	8010f8e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8010f70:	681a      	ldr	r2, [r3, #0]
 8010f72:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8010f76:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8010f78:	681a      	ldr	r2, [r3, #0]
 8010f7a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8010f7e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010f80:	9004      	str	r0, [sp, #16]
 8010f82:	695a      	ldr	r2, [r3, #20]
 8010f84:	9204      	str	r2, [sp, #16]
 8010f86:	699b      	ldr	r3, [r3, #24]
 8010f88:	9304      	str	r3, [sp, #16]
 8010f8a:	9b04      	ldr	r3, [sp, #16]
 8010f8c:	e7d4      	b.n	8010f38 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010f8e:	9005      	str	r0, [sp, #20]
 8010f90:	695a      	ldr	r2, [r3, #20]
 8010f92:	9205      	str	r2, [sp, #20]
 8010f94:	699b      	ldr	r3, [r3, #24]
 8010f96:	9305      	str	r3, [sp, #20]
 8010f98:	9b05      	ldr	r3, [sp, #20]
 8010f9a:	e7cd      	b.n	8010f38 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8010f9c:	2b03      	cmp	r3, #3
 8010f9e:	d856      	bhi.n	801104e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8010fa0:	2b01      	cmp	r3, #1
 8010fa2:	d115      	bne.n	8010fd0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8010fa4:	4632      	mov	r2, r6
 8010fa6:	4639      	mov	r1, r7
 8010fa8:	4620      	mov	r0, r4
 8010faa:	f7ff fdff 	bl	8010bac <I2C_WaitOnRXNEFlagUntilTimeout>
 8010fae:	2800      	cmp	r0, #0
 8010fb0:	d1b3      	bne.n	8010f1a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8010fb2:	6823      	ldr	r3, [r4, #0]
 8010fb4:	691a      	ldr	r2, [r3, #16]
 8010fb6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8010fb8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8010fba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8010fbc:	3301      	adds	r3, #1
 8010fbe:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8010fc0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8010fc2:	3b01      	subs	r3, #1
 8010fc4:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8010fc6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8010fc8:	3b01      	subs	r3, #1
 8010fca:	b29b      	uxth	r3, r3
 8010fcc:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8010fce:	e7b5      	b.n	8010f3c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8010fd0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8010fd2:	9600      	str	r6, [sp, #0]
 8010fd4:	463b      	mov	r3, r7
 8010fd6:	f04f 0200 	mov.w	r2, #0
 8010fda:	4641      	mov	r1, r8
 8010fdc:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8010fde:	d119      	bne.n	8011014 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8010fe0:	f7ff fc32 	bl	8010848 <I2C_WaitOnFlagUntilTimeout>
 8010fe4:	2800      	cmp	r0, #0
 8010fe6:	d198      	bne.n	8010f1a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010fe8:	6823      	ldr	r3, [r4, #0]
 8010fea:	681a      	ldr	r2, [r3, #0]
 8010fec:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010ff0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8010ff2:	691a      	ldr	r2, [r3, #16]
 8010ff4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8010ff6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8010ff8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8010ffa:	1c53      	adds	r3, r2, #1
 8010ffc:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8010ffe:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8011000:	3b01      	subs	r3, #1
 8011002:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8011004:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8011006:	3b01      	subs	r3, #1
 8011008:	b29b      	uxth	r3, r3
 801100a:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 801100c:	6823      	ldr	r3, [r4, #0]
 801100e:	691b      	ldr	r3, [r3, #16]
 8011010:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8011012:	e7d2      	b.n	8010fba <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8011014:	f7ff fc18 	bl	8010848 <I2C_WaitOnFlagUntilTimeout>
 8011018:	4602      	mov	r2, r0
 801101a:	2800      	cmp	r0, #0
 801101c:	f47f af7d 	bne.w	8010f1a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8011020:	6823      	ldr	r3, [r4, #0]
 8011022:	6819      	ldr	r1, [r3, #0]
 8011024:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8011028:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 801102a:	6919      	ldr	r1, [r3, #16]
 801102c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801102e:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8011030:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011032:	3301      	adds	r3, #1
 8011034:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8011036:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8011038:	3b01      	subs	r3, #1
 801103a:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 801103c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 801103e:	3b01      	subs	r3, #1
 8011040:	b29b      	uxth	r3, r3
 8011042:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8011044:	4641      	mov	r1, r8
 8011046:	9600      	str	r6, [sp, #0]
 8011048:	463b      	mov	r3, r7
 801104a:	4620      	mov	r0, r4
 801104c:	e7c8      	b.n	8010fe0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 801104e:	4632      	mov	r2, r6
 8011050:	4639      	mov	r1, r7
 8011052:	4620      	mov	r0, r4
 8011054:	f7ff fdaa 	bl	8010bac <I2C_WaitOnRXNEFlagUntilTimeout>
 8011058:	2800      	cmp	r0, #0
 801105a:	f47f af5e 	bne.w	8010f1a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 801105e:	6823      	ldr	r3, [r4, #0]
 8011060:	691a      	ldr	r2, [r3, #16]
 8011062:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011064:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8011066:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8011068:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 801106a:	3a01      	subs	r2, #1
 801106c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 801106e:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8011070:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8011072:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8011074:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8011076:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8011078:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 801107a:	3b01      	subs	r3, #1
 801107c:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 801107e:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8011080:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8011082:	f57f af5b 	bpl.w	8010f3c <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8011086:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8011088:	bf02      	ittt	eq
 801108a:	6813      	ldreq	r3, [r2, #0]
 801108c:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8011090:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8011092:	6913      	ldr	r3, [r2, #16]
 8011094:	704b      	strb	r3, [r1, #1]
 8011096:	e790      	b.n	8010fba <HAL_I2C_Mem_Read+0x136>
 8011098:	00100002 	.word	0x00100002
 801109c:	ffff0000 	.word	0xffff0000
 80110a0:	00010004 	.word	0x00010004

080110a4 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80110a4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80110a6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80110aa:	2b20      	cmp	r3, #32
 80110ac:	b2dc      	uxtb	r4, r3
 80110ae:	d116      	bne.n	80110de <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80110b0:	2324      	movs	r3, #36	@ 0x24
 80110b2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80110b6:	6803      	ldr	r3, [r0, #0]
 80110b8:	681a      	ldr	r2, [r3, #0]
 80110ba:	f022 0201 	bic.w	r2, r2, #1
 80110be:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80110c0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80110c2:	f022 0210 	bic.w	r2, r2, #16
 80110c6:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80110c8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80110ca:	4311      	orrs	r1, r2
 80110cc:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80110ce:	681a      	ldr	r2, [r3, #0]
 80110d0:	f042 0201 	orr.w	r2, r2, #1
 80110d4:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80110d6:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80110da:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80110dc:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80110de:	2002      	movs	r0, #2
 80110e0:	e7fc      	b.n	80110dc <HAL_I2CEx_ConfigAnalogFilter+0x38>

080110e2 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80110e2:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80110e4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80110e8:	2b20      	cmp	r3, #32
 80110ea:	b2dc      	uxtb	r4, r3
 80110ec:	d116      	bne.n	801111c <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80110ee:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80110f0:	2324      	movs	r3, #36	@ 0x24
 80110f2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80110f6:	6813      	ldr	r3, [r2, #0]
 80110f8:	f023 0301 	bic.w	r3, r3, #1
 80110fc:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80110fe:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8011100:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8011104:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8011106:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8011108:	b29b      	uxth	r3, r3
 801110a:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 801110c:	6813      	ldr	r3, [r2, #0]
 801110e:	f043 0301 	orr.w	r3, r3, #1
 8011112:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8011114:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8011118:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 801111a:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 801111c:	2002      	movs	r0, #2
 801111e:	e7fc      	b.n	801111a <HAL_I2CEx_ConfigDigitalFilter+0x38>

08011120 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8011120:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8011122:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8011126:	01d2      	lsls	r2, r2, #7
 8011128:	3284      	adds	r2, #132	@ 0x84
 801112a:	1883      	adds	r3, r0, r2
{
 801112c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8011130:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8011132:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8011134:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8011136:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 801113a:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 801113e:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8011140:	68c5      	ldr	r5, [r0, #12]
 8011142:	f10c 0701 	add.w	r7, ip, #1
 8011146:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 801114a:	f3c6 460b 	ubfx	r6, r6, #16, #12
 801114e:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8011150:	443d      	add	r5, r7
 8011152:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8011156:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8011158:	68c6      	ldr	r6, [r0, #12]
 801115a:	68cd      	ldr	r5, [r1, #12]
 801115c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8011160:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8011162:	689d      	ldr	r5, [r3, #8]
 8011164:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8011168:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 801116a:	68c7      	ldr	r7, [r0, #12]
 801116c:	688d      	ldr	r5, [r1, #8]
 801116e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8011172:	3501      	adds	r5, #1
 8011174:	443d      	add	r5, r7
 8011176:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 801117a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 801117c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 801117e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8011180:	f025 0507 	bic.w	r5, r5, #7
 8011184:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8011186:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 801118a:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 801118c:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8011190:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8011192:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8011196:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 801119a:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 801119e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80111a2:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80111a6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80111aa:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80111ac:	695d      	ldr	r5, [r3, #20]
 80111ae:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80111b2:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80111b4:	694d      	ldr	r5, [r1, #20]
 80111b6:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80111b8:	69dd      	ldr	r5, [r3, #28]
 80111ba:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80111be:	f025 0507 	bic.w	r5, r5, #7
 80111c2:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80111c4:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80111c8:	433d      	orrs	r5, r7
 80111ca:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80111cc:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80111ce:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80111d0:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80111d4:	2e07      	cmp	r6, #7
 80111d6:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80111d8:	bf9c      	itt	ls
 80111da:	4d0e      	ldrls	r5, [pc, #56]	@ (8011214 <LTDC_SetConfig+0xf4>)
 80111dc:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80111de:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80111e0:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 80111e4:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80111e6:	bf88      	it	hi
 80111e8:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80111ea:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80111ec:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80111ee:	eba4 040c 	sub.w	r4, r4, ip
 80111f2:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80111f4:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80111f6:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80111f8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80111fc:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80111fe:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8011200:	f36f 040a 	bfc	r4, #0, #11
 8011204:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8011206:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8011208:	5883      	ldr	r3, [r0, r2]
 801120a:	f043 0301 	orr.w	r3, r3, #1
 801120e:	5083      	str	r3, [r0, r2]
}
 8011210:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011214:	0803203c 	.word	0x0803203c

08011218 <HAL_LTDC_Init>:
{
 8011218:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 801121a:	4604      	mov	r4, r0
 801121c:	2800      	cmp	r0, #0
 801121e:	d063      	beq.n	80112e8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8011220:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8011224:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8011228:	b91b      	cbnz	r3, 8011232 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 801122a:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 801122e:	f7f1 f929 	bl	8002484 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8011232:	2302      	movs	r3, #2
 8011234:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8011238:	6823      	ldr	r3, [r4, #0]
 801123a:	699a      	ldr	r2, [r3, #24]
 801123c:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8011240:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8011242:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8011246:	4302      	orrs	r2, r0
 8011248:	68e0      	ldr	r0, [r4, #12]
 801124a:	6999      	ldr	r1, [r3, #24]
 801124c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 801124e:	6920      	ldr	r0, [r4, #16]
 8011250:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8011252:	430a      	orrs	r2, r1
 8011254:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8011256:	689a      	ldr	r2, [r3, #8]
 8011258:	4924      	ldr	r1, [pc, #144]	@ (80112ec <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 801125a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 801125c:	400a      	ands	r2, r1
 801125e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8011260:	689a      	ldr	r2, [r3, #8]
 8011262:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8011266:	69a0      	ldr	r0, [r4, #24]
 8011268:	4302      	orrs	r2, r0
 801126a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 801126c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 801126e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8011270:	400a      	ands	r2, r1
 8011272:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8011274:	68da      	ldr	r2, [r3, #12]
 8011276:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 801127a:	6a20      	ldr	r0, [r4, #32]
 801127c:	4302      	orrs	r2, r0
 801127e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8011280:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8011282:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8011284:	400a      	ands	r2, r1
 8011286:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8011288:	691a      	ldr	r2, [r3, #16]
 801128a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 801128e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8011290:	4302      	orrs	r2, r0
 8011292:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8011294:	695a      	ldr	r2, [r3, #20]
 8011296:	400a      	ands	r2, r1
 8011298:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 801129a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 801129c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 801129e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80112a2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80112a4:	430a      	orrs	r2, r1
 80112a6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80112a8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80112aa:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80112ae:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80112b2:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80112b6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80112b8:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80112ba:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80112be:	432a      	orrs	r2, r5
 80112c0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80112c4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80112c8:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80112ca:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80112cc:	f042 0206 	orr.w	r2, r2, #6
 80112d0:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80112d2:	699a      	ldr	r2, [r3, #24]
 80112d4:	f042 0201 	orr.w	r2, r2, #1
 80112d8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80112da:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80112dc:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80112de:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80112e2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80112e6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80112e8:	2001      	movs	r0, #1
 80112ea:	e7fc      	b.n	80112e6 <HAL_LTDC_Init+0xce>
 80112ec:	f000f800 	.word	0xf000f800

080112f0 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80112f0:	4770      	bx	lr

080112f2 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80112f2:	4770      	bx	lr

080112f4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80112f4:	6803      	ldr	r3, [r0, #0]
{
 80112f6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80112f8:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80112fa:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80112fc:	0772      	lsls	r2, r6, #29
{
 80112fe:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8011300:	d514      	bpl.n	801132c <HAL_LTDC_IRQHandler+0x38>
 8011302:	0769      	lsls	r1, r5, #29
 8011304:	d512      	bpl.n	801132c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8011306:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8011308:	f022 0204 	bic.w	r2, r2, #4
 801130c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 801130e:	2204      	movs	r2, #4
 8011310:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8011312:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8011316:	f043 0301 	orr.w	r3, r3, #1
 801131a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 801131e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8011320:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8011324:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8011328:	f7ff ffe2 	bl	80112f0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 801132c:	07b2      	lsls	r2, r6, #30
 801132e:	d516      	bpl.n	801135e <HAL_LTDC_IRQHandler+0x6a>
 8011330:	07ab      	lsls	r3, r5, #30
 8011332:	d514      	bpl.n	801135e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8011334:	6823      	ldr	r3, [r4, #0]
 8011336:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8011338:	f022 0202 	bic.w	r2, r2, #2
 801133c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 801133e:	2202      	movs	r2, #2
 8011340:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8011342:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8011346:	4313      	orrs	r3, r2
 8011348:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 801134c:	2304      	movs	r3, #4
 801134e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8011352:	2300      	movs	r3, #0
 8011354:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8011358:	4620      	mov	r0, r4
 801135a:	f7ff ffc9 	bl	80112f0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 801135e:	07f0      	lsls	r0, r6, #31
 8011360:	d510      	bpl.n	8011384 <HAL_LTDC_IRQHandler+0x90>
 8011362:	07e9      	lsls	r1, r5, #31
 8011364:	d50e      	bpl.n	8011384 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8011366:	6823      	ldr	r3, [r4, #0]
 8011368:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 801136a:	f022 0201 	bic.w	r2, r2, #1
 801136e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8011370:	2201      	movs	r2, #1
 8011372:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8011374:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8011376:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 801137a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 801137e:	4620      	mov	r0, r4
 8011380:	f7f0 fc5c 	bl	8001c3c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8011384:	0732      	lsls	r2, r6, #28
 8011386:	d511      	bpl.n	80113ac <HAL_LTDC_IRQHandler+0xb8>
 8011388:	072b      	lsls	r3, r5, #28
 801138a:	d50f      	bpl.n	80113ac <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 801138c:	6823      	ldr	r3, [r4, #0]
 801138e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8011390:	f022 0208 	bic.w	r2, r2, #8
 8011394:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8011396:	2208      	movs	r2, #8
 8011398:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 801139a:	2301      	movs	r3, #1
 801139c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80113a0:	2300      	movs	r3, #0
 80113a2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80113a6:	4620      	mov	r0, r4
 80113a8:	f7ff ffa3 	bl	80112f2 <HAL_LTDC_ReloadEventCallback>
}
 80113ac:	bd70      	pop	{r4, r5, r6, pc}

080113ae <HAL_LTDC_ConfigLayer>:
{
 80113ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80113b2:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80113b6:	2b01      	cmp	r3, #1
{
 80113b8:	4606      	mov	r6, r0
 80113ba:	460f      	mov	r7, r1
 80113bc:	4694      	mov	ip, r2
 80113be:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80113c2:	d01f      	beq.n	8011404 <HAL_LTDC_ConfigLayer+0x56>
 80113c4:	f04f 0801 	mov.w	r8, #1
 80113c8:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80113cc:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80113d0:	2434      	movs	r4, #52	@ 0x34
 80113d2:	460d      	mov	r5, r1
 80113d4:	fb04 6402 	mla	r4, r4, r2, r6
 80113d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80113da:	3438      	adds	r4, #56	@ 0x38
 80113dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80113de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80113e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80113e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80113e4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80113e6:	682b      	ldr	r3, [r5, #0]
 80113e8:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80113ea:	4630      	mov	r0, r6
 80113ec:	4662      	mov	r2, ip
 80113ee:	4639      	mov	r1, r7
 80113f0:	f7ff fe96 	bl	8011120 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80113f4:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80113f6:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80113f8:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80113fc:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8011400:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8011404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011408 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8011408:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 801140c:	2a01      	cmp	r2, #1
{
 801140e:	4603      	mov	r3, r0
 8011410:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8011414:	d012      	beq.n	801143c <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8011416:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8011418:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 801141c:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 801141e:	f020 0001 	bic.w	r0, r0, #1
 8011422:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8011424:	4806      	ldr	r0, [pc, #24]	@ (8011440 <HAL_LTDC_ProgramLineEvent+0x38>)
 8011426:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8011428:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 801142a:	f041 0101 	orr.w	r1, r1, #1
 801142e:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8011430:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8011432:	2201      	movs	r2, #1
 8011434:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8011438:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 801143c:	4770      	bx	lr
 801143e:	bf00      	nop
 8011440:	40016800 	.word	0x40016800

08011444 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8011444:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8011446:	2300      	movs	r3, #0
 8011448:	9301      	str	r3, [sp, #4]
 801144a:	4b18      	ldr	r3, [pc, #96]	@ (80114ac <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 801144c:	4d18      	ldr	r5, [pc, #96]	@ (80114b0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 801144e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8011450:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8011454:	641a      	str	r2, [r3, #64]	@ 0x40
 8011456:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011458:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 801145c:	9301      	str	r3, [sp, #4]
 801145e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8011460:	4b14      	ldr	r3, [pc, #80]	@ (80114b4 <HAL_PWREx_EnableOverDrive+0x70>)
 8011462:	2201      	movs	r2, #1
 8011464:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 8011466:	f7fe ff67 	bl	8010338 <HAL_GetTick>
 801146a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 801146c:	686b      	ldr	r3, [r5, #4]
 801146e:	03da      	lsls	r2, r3, #15
 8011470:	d50b      	bpl.n	801148a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8011472:	4b10      	ldr	r3, [pc, #64]	@ (80114b4 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8011474:	4d0e      	ldr	r5, [pc, #56]	@ (80114b0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8011476:	2201      	movs	r2, #1
 8011478:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 801147a:	f7fe ff5d 	bl	8010338 <HAL_GetTick>
 801147e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8011480:	686b      	ldr	r3, [r5, #4]
 8011482:	039b      	lsls	r3, r3, #14
 8011484:	d50a      	bpl.n	801149c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8011486:	2000      	movs	r0, #0
 8011488:	e006      	b.n	8011498 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 801148a:	f7fe ff55 	bl	8010338 <HAL_GetTick>
 801148e:	1b00      	subs	r0, r0, r4
 8011490:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 8011494:	d9ea      	bls.n	801146c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8011496:	2003      	movs	r0, #3
}
 8011498:	b003      	add	sp, #12
 801149a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 801149c:	f7fe ff4c 	bl	8010338 <HAL_GetTick>
 80114a0:	1b00      	subs	r0, r0, r4
 80114a2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80114a6:	d9eb      	bls.n	8011480 <HAL_PWREx_EnableOverDrive+0x3c>
 80114a8:	e7f5      	b.n	8011496 <HAL_PWREx_EnableOverDrive+0x52>
 80114aa:	bf00      	nop
 80114ac:	40023800 	.word	0x40023800
 80114b0:	40007000 	.word	0x40007000
 80114b4:	420e0000 	.word	0x420e0000

080114b8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80114b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80114bc:	4604      	mov	r4, r0
 80114be:	b340      	cbz	r0, 8011512 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80114c0:	6803      	ldr	r3, [r0, #0]
 80114c2:	07de      	lsls	r6, r3, #31
 80114c4:	d410      	bmi.n	80114e8 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80114c6:	6823      	ldr	r3, [r4, #0]
 80114c8:	079d      	lsls	r5, r3, #30
 80114ca:	d45b      	bmi.n	8011584 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80114cc:	6823      	ldr	r3, [r4, #0]
 80114ce:	0719      	lsls	r1, r3, #28
 80114d0:	f100 809d 	bmi.w	801160e <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80114d4:	6823      	ldr	r3, [r4, #0]
 80114d6:	075a      	lsls	r2, r3, #29
 80114d8:	f100 80bd 	bmi.w	8011656 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80114dc:	69a3      	ldr	r3, [r4, #24]
 80114de:	2b00      	cmp	r3, #0
 80114e0:	f040 8124 	bne.w	801172c <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80114e4:	2000      	movs	r0, #0
 80114e6:	e02c      	b.n	8011542 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80114e8:	4b8d      	ldr	r3, [pc, #564]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 80114ea:	689a      	ldr	r2, [r3, #8]
 80114ec:	f002 020c 	and.w	r2, r2, #12
 80114f0:	2a04      	cmp	r2, #4
 80114f2:	d007      	beq.n	8011504 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80114f4:	689a      	ldr	r2, [r3, #8]
 80114f6:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80114fa:	2a08      	cmp	r2, #8
 80114fc:	d10b      	bne.n	8011516 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80114fe:	685b      	ldr	r3, [r3, #4]
 8011500:	0259      	lsls	r1, r3, #9
 8011502:	d508      	bpl.n	8011516 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8011504:	4b86      	ldr	r3, [pc, #536]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 8011506:	681b      	ldr	r3, [r3, #0]
 8011508:	039a      	lsls	r2, r3, #14
 801150a:	d5dc      	bpl.n	80114c6 <HAL_RCC_OscConfig+0xe>
 801150c:	6863      	ldr	r3, [r4, #4]
 801150e:	2b00      	cmp	r3, #0
 8011510:	d1d9      	bne.n	80114c6 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8011512:	2001      	movs	r0, #1
 8011514:	e015      	b.n	8011542 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8011516:	6863      	ldr	r3, [r4, #4]
 8011518:	4d81      	ldr	r5, [pc, #516]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 801151a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 801151e:	d113      	bne.n	8011548 <HAL_RCC_OscConfig+0x90>
 8011520:	682b      	ldr	r3, [r5, #0]
 8011522:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8011526:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8011528:	f7fe ff06 	bl	8010338 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 801152c:	4e7c      	ldr	r6, [pc, #496]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 801152e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8011530:	6833      	ldr	r3, [r6, #0]
 8011532:	039b      	lsls	r3, r3, #14
 8011534:	d4c7      	bmi.n	80114c6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8011536:	f7fe feff 	bl	8010338 <HAL_GetTick>
 801153a:	1b40      	subs	r0, r0, r5
 801153c:	2864      	cmp	r0, #100	@ 0x64
 801153e:	d9f7      	bls.n	8011530 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8011540:	2003      	movs	r0, #3
}
 8011542:	b002      	add	sp, #8
 8011544:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8011548:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 801154c:	d104      	bne.n	8011558 <HAL_RCC_OscConfig+0xa0>
 801154e:	682b      	ldr	r3, [r5, #0]
 8011550:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8011554:	602b      	str	r3, [r5, #0]
 8011556:	e7e3      	b.n	8011520 <HAL_RCC_OscConfig+0x68>
 8011558:	682a      	ldr	r2, [r5, #0]
 801155a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 801155e:	602a      	str	r2, [r5, #0]
 8011560:	682a      	ldr	r2, [r5, #0]
 8011562:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8011566:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8011568:	2b00      	cmp	r3, #0
 801156a:	d1dd      	bne.n	8011528 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 801156c:	f7fe fee4 	bl	8010338 <HAL_GetTick>
 8011570:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8011572:	682b      	ldr	r3, [r5, #0]
 8011574:	039f      	lsls	r7, r3, #14
 8011576:	d5a6      	bpl.n	80114c6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8011578:	f7fe fede 	bl	8010338 <HAL_GetTick>
 801157c:	1b80      	subs	r0, r0, r6
 801157e:	2864      	cmp	r0, #100	@ 0x64
 8011580:	d9f7      	bls.n	8011572 <HAL_RCC_OscConfig+0xba>
 8011582:	e7dd      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8011584:	4b66      	ldr	r3, [pc, #408]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 8011586:	689a      	ldr	r2, [r3, #8]
 8011588:	f012 0f0c 	tst.w	r2, #12
 801158c:	d007      	beq.n	801159e <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 801158e:	689a      	ldr	r2, [r3, #8]
 8011590:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8011594:	2a08      	cmp	r2, #8
 8011596:	d111      	bne.n	80115bc <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8011598:	685b      	ldr	r3, [r3, #4]
 801159a:	025d      	lsls	r5, r3, #9
 801159c:	d40e      	bmi.n	80115bc <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 801159e:	4a60      	ldr	r2, [pc, #384]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 80115a0:	6813      	ldr	r3, [r2, #0]
 80115a2:	0799      	lsls	r1, r3, #30
 80115a4:	d502      	bpl.n	80115ac <HAL_RCC_OscConfig+0xf4>
 80115a6:	68e3      	ldr	r3, [r4, #12]
 80115a8:	2b01      	cmp	r3, #1
 80115aa:	d1b2      	bne.n	8011512 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80115ac:	6813      	ldr	r3, [r2, #0]
 80115ae:	6921      	ldr	r1, [r4, #16]
 80115b0:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80115b4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80115b8:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80115ba:	e787      	b.n	80114cc <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80115bc:	68e2      	ldr	r2, [r4, #12]
 80115be:	4b59      	ldr	r3, [pc, #356]	@ (8011724 <HAL_RCC_OscConfig+0x26c>)
 80115c0:	b1b2      	cbz	r2, 80115f0 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 80115c2:	2201      	movs	r2, #1
 80115c4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80115c6:	f7fe feb7 	bl	8010338 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80115ca:	4d55      	ldr	r5, [pc, #340]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80115cc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80115ce:	682b      	ldr	r3, [r5, #0]
 80115d0:	079b      	lsls	r3, r3, #30
 80115d2:	d507      	bpl.n	80115e4 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80115d4:	682b      	ldr	r3, [r5, #0]
 80115d6:	6922      	ldr	r2, [r4, #16]
 80115d8:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80115dc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80115e0:	602b      	str	r3, [r5, #0]
 80115e2:	e773      	b.n	80114cc <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80115e4:	f7fe fea8 	bl	8010338 <HAL_GetTick>
 80115e8:	1b80      	subs	r0, r0, r6
 80115ea:	2802      	cmp	r0, #2
 80115ec:	d9ef      	bls.n	80115ce <HAL_RCC_OscConfig+0x116>
 80115ee:	e7a7      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80115f0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80115f2:	f7fe fea1 	bl	8010338 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80115f6:	4e4a      	ldr	r6, [pc, #296]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80115f8:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80115fa:	6833      	ldr	r3, [r6, #0]
 80115fc:	079f      	lsls	r7, r3, #30
 80115fe:	f57f af65 	bpl.w	80114cc <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8011602:	f7fe fe99 	bl	8010338 <HAL_GetTick>
 8011606:	1b40      	subs	r0, r0, r5
 8011608:	2802      	cmp	r0, #2
 801160a:	d9f6      	bls.n	80115fa <HAL_RCC_OscConfig+0x142>
 801160c:	e798      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 801160e:	6962      	ldr	r2, [r4, #20]
 8011610:	4b44      	ldr	r3, [pc, #272]	@ (8011724 <HAL_RCC_OscConfig+0x26c>)
 8011612:	b182      	cbz	r2, 8011636 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8011614:	2201      	movs	r2, #1
 8011616:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 801161a:	f7fe fe8d 	bl	8010338 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 801161e:	4e40      	ldr	r6, [pc, #256]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8011620:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8011622:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8011624:	079b      	lsls	r3, r3, #30
 8011626:	f53f af55 	bmi.w	80114d4 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 801162a:	f7fe fe85 	bl	8010338 <HAL_GetTick>
 801162e:	1b40      	subs	r0, r0, r5
 8011630:	2802      	cmp	r0, #2
 8011632:	d9f6      	bls.n	8011622 <HAL_RCC_OscConfig+0x16a>
 8011634:	e784      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8011636:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 801163a:	f7fe fe7d 	bl	8010338 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 801163e:	4e38      	ldr	r6, [pc, #224]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8011640:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8011642:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8011644:	079f      	lsls	r7, r3, #30
 8011646:	f57f af45 	bpl.w	80114d4 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 801164a:	f7fe fe75 	bl	8010338 <HAL_GetTick>
 801164e:	1b40      	subs	r0, r0, r5
 8011650:	2802      	cmp	r0, #2
 8011652:	d9f6      	bls.n	8011642 <HAL_RCC_OscConfig+0x18a>
 8011654:	e774      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8011656:	4b32      	ldr	r3, [pc, #200]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 8011658:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 801165a:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 801165e:	d128      	bne.n	80116b2 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8011660:	9201      	str	r2, [sp, #4]
 8011662:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8011664:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8011668:	641a      	str	r2, [r3, #64]	@ 0x40
 801166a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801166c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8011670:	9301      	str	r3, [sp, #4]
 8011672:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8011674:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8011676:	4d2c      	ldr	r5, [pc, #176]	@ (8011728 <HAL_RCC_OscConfig+0x270>)
 8011678:	682b      	ldr	r3, [r5, #0]
 801167a:	05d8      	lsls	r0, r3, #23
 801167c:	d51b      	bpl.n	80116b6 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 801167e:	68a3      	ldr	r3, [r4, #8]
 8011680:	4d27      	ldr	r5, [pc, #156]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 8011682:	2b01      	cmp	r3, #1
 8011684:	d127      	bne.n	80116d6 <HAL_RCC_OscConfig+0x21e>
 8011686:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011688:	f043 0301 	orr.w	r3, r3, #1
 801168c:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 801168e:	f7fe fe53 	bl	8010338 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8011692:	4e23      	ldr	r6, [pc, #140]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8011694:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011696:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801169a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 801169c:	079a      	lsls	r2, r3, #30
 801169e:	d539      	bpl.n	8011714 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 80116a0:	2f00      	cmp	r7, #0
 80116a2:	f43f af1b 	beq.w	80114dc <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80116a6:	4a1e      	ldr	r2, [pc, #120]	@ (8011720 <HAL_RCC_OscConfig+0x268>)
 80116a8:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 80116aa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80116ae:	6413      	str	r3, [r2, #64]	@ 0x40
 80116b0:	e714      	b.n	80114dc <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80116b2:	2700      	movs	r7, #0
 80116b4:	e7df      	b.n	8011676 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80116b6:	682b      	ldr	r3, [r5, #0]
 80116b8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80116bc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80116be:	f7fe fe3b 	bl	8010338 <HAL_GetTick>
 80116c2:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80116c4:	682b      	ldr	r3, [r5, #0]
 80116c6:	05d9      	lsls	r1, r3, #23
 80116c8:	d4d9      	bmi.n	801167e <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80116ca:	f7fe fe35 	bl	8010338 <HAL_GetTick>
 80116ce:	1b80      	subs	r0, r0, r6
 80116d0:	2802      	cmp	r0, #2
 80116d2:	d9f7      	bls.n	80116c4 <HAL_RCC_OscConfig+0x20c>
 80116d4:	e734      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80116d6:	2b05      	cmp	r3, #5
 80116d8:	d104      	bne.n	80116e4 <HAL_RCC_OscConfig+0x22c>
 80116da:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80116dc:	f043 0304 	orr.w	r3, r3, #4
 80116e0:	672b      	str	r3, [r5, #112]	@ 0x70
 80116e2:	e7d0      	b.n	8011686 <HAL_RCC_OscConfig+0x1ce>
 80116e4:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80116e6:	f022 0201 	bic.w	r2, r2, #1
 80116ea:	672a      	str	r2, [r5, #112]	@ 0x70
 80116ec:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80116ee:	f022 0204 	bic.w	r2, r2, #4
 80116f2:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80116f4:	2b00      	cmp	r3, #0
 80116f6:	d1ca      	bne.n	801168e <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 80116f8:	f7fe fe1e 	bl	8010338 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80116fc:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8011700:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8011702:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011704:	079b      	lsls	r3, r3, #30
 8011706:	d5cb      	bpl.n	80116a0 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011708:	f7fe fe16 	bl	8010338 <HAL_GetTick>
 801170c:	1b80      	subs	r0, r0, r6
 801170e:	4540      	cmp	r0, r8
 8011710:	d9f7      	bls.n	8011702 <HAL_RCC_OscConfig+0x24a>
 8011712:	e715      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011714:	f7fe fe10 	bl	8010338 <HAL_GetTick>
 8011718:	1b40      	subs	r0, r0, r5
 801171a:	4540      	cmp	r0, r8
 801171c:	d9bd      	bls.n	801169a <HAL_RCC_OscConfig+0x1e2>
 801171e:	e70f      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
 8011720:	40023800 	.word	0x40023800
 8011724:	42470000 	.word	0x42470000
 8011728:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 801172c:	4d37      	ldr	r5, [pc, #220]	@ (801180c <HAL_RCC_OscConfig+0x354>)
 801172e:	68aa      	ldr	r2, [r5, #8]
 8011730:	f002 020c 	and.w	r2, r2, #12
 8011734:	2a08      	cmp	r2, #8
 8011736:	d03e      	beq.n	80117b6 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8011738:	2b02      	cmp	r3, #2
 801173a:	4b35      	ldr	r3, [pc, #212]	@ (8011810 <HAL_RCC_OscConfig+0x358>)
 801173c:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8011740:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8011742:	d12b      	bne.n	801179c <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8011744:	f7fe fdf8 	bl	8010338 <HAL_GetTick>
 8011748:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801174a:	682b      	ldr	r3, [r5, #0]
 801174c:	0199      	lsls	r1, r3, #6
 801174e:	d41f      	bmi.n	8011790 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8011750:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8011754:	4313      	orrs	r3, r2
 8011756:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8011758:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 801175c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 801175e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8011762:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8011764:	0852      	lsrs	r2, r2, #1
 8011766:	3a01      	subs	r2, #1
 8011768:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801176c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 801176e:	4b28      	ldr	r3, [pc, #160]	@ (8011810 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8011770:	4d26      	ldr	r5, [pc, #152]	@ (801180c <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8011772:	2201      	movs	r2, #1
 8011774:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8011776:	f7fe fddf 	bl	8010338 <HAL_GetTick>
 801177a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801177c:	682b      	ldr	r3, [r5, #0]
 801177e:	019a      	lsls	r2, r3, #6
 8011780:	f53f aeb0 	bmi.w	80114e4 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011784:	f7fe fdd8 	bl	8010338 <HAL_GetTick>
 8011788:	1b00      	subs	r0, r0, r4
 801178a:	2802      	cmp	r0, #2
 801178c:	d9f6      	bls.n	801177c <HAL_RCC_OscConfig+0x2c4>
 801178e:	e6d7      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011790:	f7fe fdd2 	bl	8010338 <HAL_GetTick>
 8011794:	1b80      	subs	r0, r0, r6
 8011796:	2802      	cmp	r0, #2
 8011798:	d9d7      	bls.n	801174a <HAL_RCC_OscConfig+0x292>
 801179a:	e6d1      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 801179c:	f7fe fdcc 	bl	8010338 <HAL_GetTick>
 80117a0:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80117a2:	682b      	ldr	r3, [r5, #0]
 80117a4:	019b      	lsls	r3, r3, #6
 80117a6:	f57f ae9d 	bpl.w	80114e4 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80117aa:	f7fe fdc5 	bl	8010338 <HAL_GetTick>
 80117ae:	1b00      	subs	r0, r0, r4
 80117b0:	2802      	cmp	r0, #2
 80117b2:	d9f6      	bls.n	80117a2 <HAL_RCC_OscConfig+0x2ea>
 80117b4:	e6c4      	b.n	8011540 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80117b6:	2b01      	cmp	r3, #1
 80117b8:	f43f aeab 	beq.w	8011512 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 80117bc:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80117be:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80117c0:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80117c4:	4291      	cmp	r1, r2
 80117c6:	f47f aea4 	bne.w	8011512 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80117ca:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80117cc:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80117d0:	428a      	cmp	r2, r1
 80117d2:	f47f ae9e 	bne.w	8011512 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80117d6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80117d8:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 80117dc:	401a      	ands	r2, r3
 80117de:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80117e2:	f47f ae96 	bne.w	8011512 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80117e6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80117e8:	0852      	lsrs	r2, r2, #1
 80117ea:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 80117ee:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80117f0:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80117f4:	f47f ae8d 	bne.w	8011512 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80117f8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80117fa:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80117fe:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8011802:	bf14      	ite	ne
 8011804:	2001      	movne	r0, #1
 8011806:	2000      	moveq	r0, #0
 8011808:	e69b      	b.n	8011542 <HAL_RCC_OscConfig+0x8a>
 801180a:	bf00      	nop
 801180c:	40023800 	.word	0x40023800
 8011810:	42470000 	.word	0x42470000

08011814 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8011814:	4913      	ldr	r1, [pc, #76]	@ (8011864 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8011816:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8011818:	688b      	ldr	r3, [r1, #8]
 801181a:	f003 030c 	and.w	r3, r3, #12
 801181e:	2b04      	cmp	r3, #4
 8011820:	d01c      	beq.n	801185c <HAL_RCC_GetSysClockFreq+0x48>
 8011822:	2b08      	cmp	r3, #8
 8011824:	d11c      	bne.n	8011860 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8011826:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8011828:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 801182a:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 801182c:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011830:	bf14      	ite	ne
 8011832:	480d      	ldrne	r0, [pc, #52]	@ (8011868 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011834:	480d      	ldreq	r0, [pc, #52]	@ (801186c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011836:	f3c1 1188 	ubfx	r1, r1, #6, #9
 801183a:	bf18      	it	ne
 801183c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 801183e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011842:	fba1 0100 	umull	r0, r1, r1, r0
 8011846:	f7ef f881 	bl	800094c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 801184a:	4b06      	ldr	r3, [pc, #24]	@ (8011864 <HAL_RCC_GetSysClockFreq+0x50>)
 801184c:	685b      	ldr	r3, [r3, #4]
 801184e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8011852:	3301      	adds	r3, #1
 8011854:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8011856:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 801185a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 801185c:	4802      	ldr	r0, [pc, #8]	@ (8011868 <HAL_RCC_GetSysClockFreq+0x54>)
 801185e:	e7fc      	b.n	801185a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8011860:	4802      	ldr	r0, [pc, #8]	@ (801186c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8011862:	e7fa      	b.n	801185a <HAL_RCC_GetSysClockFreq+0x46>
 8011864:	40023800 	.word	0x40023800
 8011868:	007a1200 	.word	0x007a1200
 801186c:	00f42400 	.word	0x00f42400

08011870 <HAL_RCC_ClockConfig>:
{
 8011870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011874:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8011876:	4604      	mov	r4, r0
 8011878:	b910      	cbnz	r0, 8011880 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 801187a:	2001      	movs	r0, #1
}
 801187c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8011880:	4b43      	ldr	r3, [pc, #268]	@ (8011990 <HAL_RCC_ClockConfig+0x120>)
 8011882:	681a      	ldr	r2, [r3, #0]
 8011884:	f002 020f 	and.w	r2, r2, #15
 8011888:	428a      	cmp	r2, r1
 801188a:	d328      	bcc.n	80118de <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 801188c:	6821      	ldr	r1, [r4, #0]
 801188e:	078f      	lsls	r7, r1, #30
 8011890:	d42d      	bmi.n	80118ee <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8011892:	07c8      	lsls	r0, r1, #31
 8011894:	d440      	bmi.n	8011918 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8011896:	4b3e      	ldr	r3, [pc, #248]	@ (8011990 <HAL_RCC_ClockConfig+0x120>)
 8011898:	681a      	ldr	r2, [r3, #0]
 801189a:	f002 020f 	and.w	r2, r2, #15
 801189e:	42aa      	cmp	r2, r5
 80118a0:	d865      	bhi.n	801196e <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80118a2:	6822      	ldr	r2, [r4, #0]
 80118a4:	0751      	lsls	r1, r2, #29
 80118a6:	d46b      	bmi.n	8011980 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80118a8:	0713      	lsls	r3, r2, #28
 80118aa:	d507      	bpl.n	80118bc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80118ac:	4a39      	ldr	r2, [pc, #228]	@ (8011994 <HAL_RCC_ClockConfig+0x124>)
 80118ae:	6921      	ldr	r1, [r4, #16]
 80118b0:	6893      	ldr	r3, [r2, #8]
 80118b2:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 80118b6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80118ba:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80118bc:	f7ff ffaa 	bl	8011814 <HAL_RCC_GetSysClockFreq>
 80118c0:	4b34      	ldr	r3, [pc, #208]	@ (8011994 <HAL_RCC_ClockConfig+0x124>)
 80118c2:	4a35      	ldr	r2, [pc, #212]	@ (8011998 <HAL_RCC_ClockConfig+0x128>)
 80118c4:	689b      	ldr	r3, [r3, #8]
 80118c6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80118ca:	5cd3      	ldrb	r3, [r2, r3]
 80118cc:	40d8      	lsrs	r0, r3
 80118ce:	4b33      	ldr	r3, [pc, #204]	@ (801199c <HAL_RCC_ClockConfig+0x12c>)
 80118d0:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 80118d2:	4b33      	ldr	r3, [pc, #204]	@ (80119a0 <HAL_RCC_ClockConfig+0x130>)
 80118d4:	6818      	ldr	r0, [r3, #0]
 80118d6:	f7f0 ff53 	bl	8002780 <HAL_InitTick>
  return HAL_OK;
 80118da:	2000      	movs	r0, #0
 80118dc:	e7ce      	b.n	801187c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80118de:	b2ca      	uxtb	r2, r1
 80118e0:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80118e2:	681b      	ldr	r3, [r3, #0]
 80118e4:	f003 030f 	and.w	r3, r3, #15
 80118e8:	428b      	cmp	r3, r1
 80118ea:	d1c6      	bne.n	801187a <HAL_RCC_ClockConfig+0xa>
 80118ec:	e7ce      	b.n	801188c <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80118ee:	4b29      	ldr	r3, [pc, #164]	@ (8011994 <HAL_RCC_ClockConfig+0x124>)
 80118f0:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80118f4:	bf1e      	ittt	ne
 80118f6:	689a      	ldrne	r2, [r3, #8]
 80118f8:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 80118fc:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80118fe:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8011900:	bf42      	ittt	mi
 8011902:	689a      	ldrmi	r2, [r3, #8]
 8011904:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8011908:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 801190a:	689a      	ldr	r2, [r3, #8]
 801190c:	68a0      	ldr	r0, [r4, #8]
 801190e:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8011912:	4302      	orrs	r2, r0
 8011914:	609a      	str	r2, [r3, #8]
 8011916:	e7bc      	b.n	8011892 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8011918:	6862      	ldr	r2, [r4, #4]
 801191a:	4b1e      	ldr	r3, [pc, #120]	@ (8011994 <HAL_RCC_ClockConfig+0x124>)
 801191c:	2a01      	cmp	r2, #1
 801191e:	d11c      	bne.n	801195a <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8011920:	681b      	ldr	r3, [r3, #0]
 8011922:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8011926:	d0a8      	beq.n	801187a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8011928:	4e1a      	ldr	r6, [pc, #104]	@ (8011994 <HAL_RCC_ClockConfig+0x124>)
 801192a:	68b3      	ldr	r3, [r6, #8]
 801192c:	f023 0303 	bic.w	r3, r3, #3
 8011930:	4313      	orrs	r3, r2
 8011932:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8011934:	f7fe fd00 	bl	8010338 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8011938:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 801193c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 801193e:	68b3      	ldr	r3, [r6, #8]
 8011940:	6862      	ldr	r2, [r4, #4]
 8011942:	f003 030c 	and.w	r3, r3, #12
 8011946:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 801194a:	d0a4      	beq.n	8011896 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 801194c:	f7fe fcf4 	bl	8010338 <HAL_GetTick>
 8011950:	1bc0      	subs	r0, r0, r7
 8011952:	4540      	cmp	r0, r8
 8011954:	d9f3      	bls.n	801193e <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8011956:	2003      	movs	r0, #3
 8011958:	e790      	b.n	801187c <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 801195a:	1e91      	subs	r1, r2, #2
 801195c:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801195e:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8011960:	d802      	bhi.n	8011968 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8011962:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8011966:	e7de      	b.n	8011926 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8011968:	f013 0f02 	tst.w	r3, #2
 801196c:	e7db      	b.n	8011926 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 801196e:	b2ea      	uxtb	r2, r5
 8011970:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8011972:	681b      	ldr	r3, [r3, #0]
 8011974:	f003 030f 	and.w	r3, r3, #15
 8011978:	42ab      	cmp	r3, r5
 801197a:	f47f af7e 	bne.w	801187a <HAL_RCC_ClockConfig+0xa>
 801197e:	e790      	b.n	80118a2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8011980:	4904      	ldr	r1, [pc, #16]	@ (8011994 <HAL_RCC_ClockConfig+0x124>)
 8011982:	68e0      	ldr	r0, [r4, #12]
 8011984:	688b      	ldr	r3, [r1, #8]
 8011986:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 801198a:	4303      	orrs	r3, r0
 801198c:	608b      	str	r3, [r1, #8]
 801198e:	e78b      	b.n	80118a8 <HAL_RCC_ClockConfig+0x38>
 8011990:	40023c00 	.word	0x40023c00
 8011994:	40023800 	.word	0x40023800
 8011998:	0803202c 	.word	0x0803202c
 801199c:	20000074 	.word	0x20000074
 80119a0:	2000007c 	.word	0x2000007c

080119a4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80119a4:	4b04      	ldr	r3, [pc, #16]	@ (80119b8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80119a6:	4a05      	ldr	r2, [pc, #20]	@ (80119bc <HAL_RCC_GetPCLK1Freq+0x18>)
 80119a8:	689b      	ldr	r3, [r3, #8]
 80119aa:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80119ae:	5cd3      	ldrb	r3, [r2, r3]
 80119b0:	4a03      	ldr	r2, [pc, #12]	@ (80119c0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80119b2:	6810      	ldr	r0, [r2, #0]
}
 80119b4:	40d8      	lsrs	r0, r3
 80119b6:	4770      	bx	lr
 80119b8:	40023800 	.word	0x40023800
 80119bc:	08032024 	.word	0x08032024
 80119c0:	20000074 	.word	0x20000074

080119c4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80119c4:	230f      	movs	r3, #15
 80119c6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80119c8:	4b0b      	ldr	r3, [pc, #44]	@ (80119f8 <HAL_RCC_GetClockConfig+0x34>)
 80119ca:	689a      	ldr	r2, [r3, #8]
 80119cc:	f002 0203 	and.w	r2, r2, #3
 80119d0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80119d2:	689a      	ldr	r2, [r3, #8]
 80119d4:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 80119d8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80119da:	689a      	ldr	r2, [r3, #8]
 80119dc:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 80119e0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80119e2:	689b      	ldr	r3, [r3, #8]
 80119e4:	08db      	lsrs	r3, r3, #3
 80119e6:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80119ea:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80119ec:	4b03      	ldr	r3, [pc, #12]	@ (80119fc <HAL_RCC_GetClockConfig+0x38>)
 80119ee:	681b      	ldr	r3, [r3, #0]
 80119f0:	f003 030f 	and.w	r3, r3, #15
 80119f4:	600b      	str	r3, [r1, #0]
}
 80119f6:	4770      	bx	lr
 80119f8:	40023800 	.word	0x40023800
 80119fc:	40023c00 	.word	0x40023c00

08011a00 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8011a00:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8011a02:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8011a06:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011a08:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8011a0a:	f040 8088 	bne.w	8011b1e <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8011a0e:	6823      	ldr	r3, [r4, #0]
 8011a10:	f013 0f0c 	tst.w	r3, #12
 8011a14:	d045      	beq.n	8011aa2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8011a16:	4b8c      	ldr	r3, [pc, #560]	@ (8011c48 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8011a18:	4d8c      	ldr	r5, [pc, #560]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8011a1a:	2200      	movs	r2, #0
 8011a1c:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8011a1e:	f7fe fc8b 	bl	8010338 <HAL_GetTick>
 8011a22:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8011a24:	682b      	ldr	r3, [r5, #0]
 8011a26:	0099      	lsls	r1, r3, #2
 8011a28:	f100 80cb 	bmi.w	8011bc2 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8011a2c:	6821      	ldr	r1, [r4, #0]
 8011a2e:	074a      	lsls	r2, r1, #29
 8011a30:	d515      	bpl.n	8011a5e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8011a32:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8011a36:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8011a3a:	061b      	lsls	r3, r3, #24
 8011a3c:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8011a40:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8011a44:	4313      	orrs	r3, r2
 8011a46:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8011a4a:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8011a4e:	6a22      	ldr	r2, [r4, #32]
 8011a50:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8011a54:	3a01      	subs	r2, #1
 8011a56:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8011a5a:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8011a5e:	070b      	lsls	r3, r1, #28
 8011a60:	d514      	bpl.n	8011a8c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8011a62:	4a7a      	ldr	r2, [pc, #488]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8011a64:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8011a66:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8011a6a:	6920      	ldr	r0, [r4, #16]
 8011a6c:	071b      	lsls	r3, r3, #28
 8011a6e:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8011a72:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8011a76:	430b      	orrs	r3, r1
 8011a78:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8011a7c:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8011a80:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8011a82:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8011a86:	430b      	orrs	r3, r1
 8011a88:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8011a8c:	4b6e      	ldr	r3, [pc, #440]	@ (8011c48 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8011a8e:	4e6f      	ldr	r6, [pc, #444]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8011a90:	2201      	movs	r2, #1
 8011a92:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8011a94:	f7fe fc50 	bl	8010338 <HAL_GetTick>
 8011a98:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8011a9a:	6833      	ldr	r3, [r6, #0]
 8011a9c:	009f      	lsls	r7, r3, #2
 8011a9e:	f140 8097 	bpl.w	8011bd0 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8011aa2:	6823      	ldr	r3, [r4, #0]
 8011aa4:	0698      	lsls	r0, r3, #26
 8011aa6:	d534      	bpl.n	8011b12 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8011aa8:	2300      	movs	r3, #0
 8011aaa:	9301      	str	r3, [sp, #4]
 8011aac:	4b67      	ldr	r3, [pc, #412]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8011aae:	4d68      	ldr	r5, [pc, #416]	@ (8011c50 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8011ab0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8011ab2:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8011ab6:	641a      	str	r2, [r3, #64]	@ 0x40
 8011ab8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011aba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8011abe:	9301      	str	r3, [sp, #4]
 8011ac0:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8011ac2:	682b      	ldr	r3, [r5, #0]
 8011ac4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8011ac8:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8011aca:	f7fe fc35 	bl	8010338 <HAL_GetTick>
 8011ace:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8011ad0:	682b      	ldr	r3, [r5, #0]
 8011ad2:	05d8      	lsls	r0, r3, #23
 8011ad4:	f140 8083 	bpl.w	8011bde <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8011ad8:	4d5c      	ldr	r5, [pc, #368]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8011ada:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8011adc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8011ade:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8011ae2:	f040 8083 	bne.w	8011bec <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8011ae6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8011ae8:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8011aec:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8011af0:	4a56      	ldr	r2, [pc, #344]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8011af2:	f040 809e 	bne.w	8011c32 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8011af6:	6891      	ldr	r1, [r2, #8]
 8011af8:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8011afc:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8011b00:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8011b04:	4301      	orrs	r1, r0
 8011b06:	6091      	str	r1, [r2, #8]
 8011b08:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8011b0a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8011b0e:	430b      	orrs	r3, r1
 8011b10:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8011b12:	6823      	ldr	r3, [r4, #0]
 8011b14:	06db      	lsls	r3, r3, #27
 8011b16:	f100 8090 	bmi.w	8011c3a <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8011b1a:	2000      	movs	r0, #0
 8011b1c:	e04f      	b.n	8011bbe <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8011b1e:	4b4a      	ldr	r3, [pc, #296]	@ (8011c48 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8011b20:	4e4a      	ldr	r6, [pc, #296]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8011b22:	2200      	movs	r2, #0
 8011b24:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8011b26:	f7fe fc07 	bl	8010338 <HAL_GetTick>
 8011b2a:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8011b2c:	6833      	ldr	r3, [r6, #0]
 8011b2e:	011f      	lsls	r7, r3, #4
 8011b30:	d43f      	bmi.n	8011bb2 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8011b32:	6821      	ldr	r1, [r4, #0]
 8011b34:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8011b36:	bf41      	itttt	mi
 8011b38:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8011b3c:	071b      	lslmi	r3, r3, #28
 8011b3e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8011b42:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8011b46:	078a      	lsls	r2, r1, #30
 8011b48:	d515      	bpl.n	8011b76 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8011b4a:	4a40      	ldr	r2, [pc, #256]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8011b4c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8011b4e:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8011b52:	6865      	ldr	r5, [r4, #4]
 8011b54:	061b      	lsls	r3, r3, #24
 8011b56:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8011b5a:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8011b5e:	4303      	orrs	r3, r0
 8011b60:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8011b64:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8011b68:	69e3      	ldr	r3, [r4, #28]
 8011b6a:	f020 001f 	bic.w	r0, r0, #31
 8011b6e:	3b01      	subs	r3, #1
 8011b70:	4303      	orrs	r3, r0
 8011b72:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8011b76:	064b      	lsls	r3, r1, #25
 8011b78:	d50a      	bpl.n	8011b90 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8011b7a:	68e3      	ldr	r3, [r4, #12]
 8011b7c:	6862      	ldr	r2, [r4, #4]
 8011b7e:	061b      	lsls	r3, r3, #24
 8011b80:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8011b84:	68a2      	ldr	r2, [r4, #8]
 8011b86:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8011b8a:	4a30      	ldr	r2, [pc, #192]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8011b8c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8011b90:	4b2d      	ldr	r3, [pc, #180]	@ (8011c48 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8011b92:	4e2e      	ldr	r6, [pc, #184]	@ (8011c4c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8011b94:	2201      	movs	r2, #1
 8011b96:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8011b98:	f7fe fbce 	bl	8010338 <HAL_GetTick>
 8011b9c:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8011b9e:	6833      	ldr	r3, [r6, #0]
 8011ba0:	011f      	lsls	r7, r3, #4
 8011ba2:	f53f af34 	bmi.w	8011a0e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8011ba6:	f7fe fbc7 	bl	8010338 <HAL_GetTick>
 8011baa:	1b40      	subs	r0, r0, r5
 8011bac:	2802      	cmp	r0, #2
 8011bae:	d9f6      	bls.n	8011b9e <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8011bb0:	e004      	b.n	8011bbc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8011bb2:	f7fe fbc1 	bl	8010338 <HAL_GetTick>
 8011bb6:	1b40      	subs	r0, r0, r5
 8011bb8:	2802      	cmp	r0, #2
 8011bba:	d9b7      	bls.n	8011b2c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8011bbc:	2003      	movs	r0, #3
}
 8011bbe:	b003      	add	sp, #12
 8011bc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8011bc2:	f7fe fbb9 	bl	8010338 <HAL_GetTick>
 8011bc6:	1b80      	subs	r0, r0, r6
 8011bc8:	2802      	cmp	r0, #2
 8011bca:	f67f af2b 	bls.w	8011a24 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8011bce:	e7f5      	b.n	8011bbc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8011bd0:	f7fe fbb2 	bl	8010338 <HAL_GetTick>
 8011bd4:	1b40      	subs	r0, r0, r5
 8011bd6:	2802      	cmp	r0, #2
 8011bd8:	f67f af5f 	bls.w	8011a9a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8011bdc:	e7ee      	b.n	8011bbc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8011bde:	f7fe fbab 	bl	8010338 <HAL_GetTick>
 8011be2:	1b80      	subs	r0, r0, r6
 8011be4:	2802      	cmp	r0, #2
 8011be6:	f67f af73 	bls.w	8011ad0 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8011bea:	e7e7      	b.n	8011bbc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8011bec:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8011bf0:	4293      	cmp	r3, r2
 8011bf2:	f43f af78 	beq.w	8011ae6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8011bf6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8011bf8:	4a13      	ldr	r2, [pc, #76]	@ (8011c48 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8011bfa:	2101      	movs	r1, #1
 8011bfc:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8011c00:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8011c04:	2100      	movs	r1, #0
 8011c06:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8011c0a:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8011c0c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011c0e:	07d9      	lsls	r1, r3, #31
 8011c10:	f57f af69 	bpl.w	8011ae6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8011c14:	f7fe fb90 	bl	8010338 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011c18:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8011c1c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8011c1e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011c20:	079a      	lsls	r2, r3, #30
 8011c22:	f53f af60 	bmi.w	8011ae6 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011c26:	f7fe fb87 	bl	8010338 <HAL_GetTick>
 8011c2a:	1b80      	subs	r0, r0, r6
 8011c2c:	42b8      	cmp	r0, r7
 8011c2e:	d9f6      	bls.n	8011c1e <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8011c30:	e7c4      	b.n	8011bbc <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8011c32:	6891      	ldr	r1, [r2, #8]
 8011c34:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8011c38:	e765      	b.n	8011b06 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8011c3a:	4b06      	ldr	r3, [pc, #24]	@ (8011c54 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8011c3c:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8011c40:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8011c44:	e769      	b.n	8011b1a <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8011c46:	bf00      	nop
 8011c48:	42470000 	.word	0x42470000
 8011c4c:	40023800 	.word	0x40023800
 8011c50:	40007000 	.word	0x40007000
 8011c54:	42471000 	.word	0x42471000

08011c58 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8011c58:	b538      	push	{r3, r4, r5, lr}
 8011c5a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8011c5c:	4604      	mov	r4, r0
 8011c5e:	b1c8      	cbz	r0, 8011c94 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8011c60:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8011c64:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8011c68:	b91b      	cbnz	r3, 8011c72 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8011c6a:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8011c6e:	f7f0 fd1b 	bl	80026a8 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8011c72:	2302      	movs	r3, #2
 8011c74:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8011c78:	1d21      	adds	r1, r4, #4
 8011c7a:	6820      	ldr	r0, [r4, #0]
 8011c7c:	f000 fd0e 	bl	801269c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8011c80:	6862      	ldr	r2, [r4, #4]
 8011c82:	6820      	ldr	r0, [r4, #0]
 8011c84:	4629      	mov	r1, r5
 8011c86:	f000 fd3f 	bl	8012708 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8011c8a:	2301      	movs	r3, #1
 8011c8c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8011c90:	2000      	movs	r0, #0
}
 8011c92:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8011c94:	2001      	movs	r0, #1
 8011c96:	e7fc      	b.n	8011c92 <HAL_SDRAM_Init+0x3a>

08011c98 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8011c98:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8011c9a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8011c9e:	2b02      	cmp	r3, #2
{
 8011ca0:	4605      	mov	r5, r0
 8011ca2:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8011ca4:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8011ca6:	d012      	beq.n	8011cce <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8011ca8:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8011cac:	2c01      	cmp	r4, #1
 8011cae:	d10f      	bne.n	8011cd0 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8011cb0:	2302      	movs	r3, #2
 8011cb2:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8011cb6:	6828      	ldr	r0, [r5, #0]
 8011cb8:	f000 fd5c 	bl	8012774 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8011cbc:	6833      	ldr	r3, [r6, #0]
 8011cbe:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8011cc0:	bf06      	itte	eq
 8011cc2:	2305      	moveq	r3, #5
 8011cc4:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8011cc8:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8011ccc:	2000      	movs	r0, #0
}
 8011cce:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8011cd0:	2001      	movs	r0, #1
 8011cd2:	e7fc      	b.n	8011cce <HAL_SDRAM_SendCommand+0x36>

08011cd4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8011cd4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8011cd6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8011cda:	2b02      	cmp	r3, #2
{
 8011cdc:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8011cde:	b2d8      	uxtb	r0, r3
 8011ce0:	d00d      	beq.n	8011cfe <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8011ce2:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8011ce6:	2b01      	cmp	r3, #1
 8011ce8:	b2dd      	uxtb	r5, r3
 8011cea:	d109      	bne.n	8011d00 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8011cec:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8011cee:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8011cf0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8011cf4:	f000 fd62 	bl	80127bc <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8011cf8:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8011cfc:	2000      	movs	r0, #0
}
 8011cfe:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8011d00:	2001      	movs	r0, #1
 8011d02:	e7fc      	b.n	8011cfe <HAL_SDRAM_ProgramRefreshRate+0x2a>

08011d04 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8011d04:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011d08:	461f      	mov	r7, r3
 8011d0a:	4689      	mov	r9, r1
 8011d0c:	4690      	mov	r8, r2
 8011d0e:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8011d10:	f7fe fb12 	bl	8010338 <HAL_GetTick>
 8011d14:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8011d16:	443d      	add	r5, r7
 8011d18:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8011d1a:	f7fe fb0d 	bl	8010338 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8011d1e:	4b26      	ldr	r3, [pc, #152]	@ (8011db8 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8011d20:	681e      	ldr	r6, [r3, #0]
 8011d22:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8011d26:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8011d28:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8011d2a:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8011d2c:	6822      	ldr	r2, [r4, #0]
 8011d2e:	6893      	ldr	r3, [r2, #8]
 8011d30:	ea39 0303 	bics.w	r3, r9, r3
 8011d34:	bf0c      	ite	eq
 8011d36:	2301      	moveq	r3, #1
 8011d38:	2300      	movne	r3, #0
 8011d3a:	4543      	cmp	r3, r8
 8011d3c:	d101      	bne.n	8011d42 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8011d3e:	2000      	movs	r0, #0
 8011d40:	e02e      	b.n	8011da0 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8011d42:	1c7b      	adds	r3, r7, #1
 8011d44:	d0f3      	beq.n	8011d2e <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8011d46:	f7fe faf7 	bl	8010338 <HAL_GetTick>
 8011d4a:	eba0 000a 	sub.w	r0, r0, sl
 8011d4e:	42a8      	cmp	r0, r5
 8011d50:	d329      	bcc.n	8011da6 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8011d52:	6823      	ldr	r3, [r4, #0]
 8011d54:	685a      	ldr	r2, [r3, #4]
 8011d56:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8011d5a:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8011d5c:	6862      	ldr	r2, [r4, #4]
 8011d5e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8011d62:	d10a      	bne.n	8011d7a <SPI_WaitFlagStateUntilTimeout+0x76>
 8011d64:	68a2      	ldr	r2, [r4, #8]
 8011d66:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8011d6a:	d002      	beq.n	8011d72 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8011d6c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8011d70:	d103      	bne.n	8011d7a <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8011d72:	681a      	ldr	r2, [r3, #0]
 8011d74:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8011d78:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8011d7a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8011d7c:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8011d80:	d107      	bne.n	8011d92 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8011d82:	681a      	ldr	r2, [r3, #0]
 8011d84:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8011d88:	601a      	str	r2, [r3, #0]
 8011d8a:	681a      	ldr	r2, [r3, #0]
 8011d8c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8011d90:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8011d92:	2301      	movs	r3, #1
 8011d94:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8011d98:	2300      	movs	r3, #0
 8011d9a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8011d9e:	2003      	movs	r0, #3
}
 8011da0:	b002      	add	sp, #8
 8011da2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 8011da6:	9a01      	ldr	r2, [sp, #4]
      count--;
 8011da8:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 8011daa:	2a00      	cmp	r2, #0
      count--;
 8011dac:	f103 33ff 	add.w	r3, r3, #4294967295
 8011db0:	9301      	str	r3, [sp, #4]
 8011db2:	bf08      	it	eq
 8011db4:	4615      	moveq	r5, r2
 8011db6:	e7b9      	b.n	8011d2c <SPI_WaitFlagStateUntilTimeout+0x28>
 8011db8:	20000074 	.word	0x20000074

08011dbc <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8011dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011dbe:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8011dc0:	460b      	mov	r3, r1
 8011dc2:	9200      	str	r2, [sp, #0]
{
 8011dc4:	460e      	mov	r6, r1
 8011dc6:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8011dc8:	2102      	movs	r1, #2
 8011dca:	2201      	movs	r2, #1
{
 8011dcc:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8011dce:	f7ff ff99 	bl	8011d04 <SPI_WaitFlagStateUntilTimeout>
 8011dd2:	4605      	mov	r5, r0
 8011dd4:	b128      	cbz	r0, 8011de2 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8011dd6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8011dd8:	f043 0320 	orr.w	r3, r3, #32
 8011ddc:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8011dde:	2503      	movs	r5, #3
 8011de0:	e015      	b.n	8011e0e <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8011de2:	4b12      	ldr	r3, [pc, #72]	@ (8011e2c <SPI_EndRxTxTransaction+0x70>)
 8011de4:	6818      	ldr	r0, [r3, #0]
 8011de6:	4b12      	ldr	r3, [pc, #72]	@ (8011e30 <SPI_EndRxTxTransaction+0x74>)
 8011de8:	fbb0 f0f3 	udiv	r0, r0, r3
 8011dec:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8011df0:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8011df2:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8011df4:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8011df6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011dfa:	d10b      	bne.n	8011e14 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8011dfc:	9700      	str	r7, [sp, #0]
 8011dfe:	4633      	mov	r3, r6
 8011e00:	462a      	mov	r2, r5
 8011e02:	2180      	movs	r1, #128	@ 0x80
 8011e04:	4620      	mov	r0, r4
 8011e06:	f7ff ff7d 	bl	8011d04 <SPI_WaitFlagStateUntilTimeout>
 8011e0a:	2800      	cmp	r0, #0
 8011e0c:	d1e3      	bne.n	8011dd6 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8011e0e:	4628      	mov	r0, r5
 8011e10:	b005      	add	sp, #20
 8011e12:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8011e14:	9b03      	ldr	r3, [sp, #12]
 8011e16:	2b00      	cmp	r3, #0
 8011e18:	d0f9      	beq.n	8011e0e <SPI_EndRxTxTransaction+0x52>
      count--;
 8011e1a:	9b03      	ldr	r3, [sp, #12]
 8011e1c:	3b01      	subs	r3, #1
 8011e1e:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8011e20:	6823      	ldr	r3, [r4, #0]
 8011e22:	689b      	ldr	r3, [r3, #8]
 8011e24:	061b      	lsls	r3, r3, #24
 8011e26:	d4f5      	bmi.n	8011e14 <SPI_EndRxTxTransaction+0x58>
 8011e28:	e7f1      	b.n	8011e0e <SPI_EndRxTxTransaction+0x52>
 8011e2a:	bf00      	nop
 8011e2c:	20000074 	.word	0x20000074
 8011e30:	016e3600 	.word	0x016e3600

08011e34 <SPI_EndRxTransaction>:
{
 8011e34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011e36:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8011e38:	6841      	ldr	r1, [r0, #4]
 8011e3a:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8011e3e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8011e40:	d008      	beq.n	8011e54 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8011e42:	9200      	str	r2, [sp, #0]
 8011e44:	2101      	movs	r1, #1
 8011e46:	2200      	movs	r2, #0
 8011e48:	f7ff ff5c 	bl	8011d04 <SPI_WaitFlagStateUntilTimeout>
 8011e4c:	b9d0      	cbnz	r0, 8011e84 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8011e4e:	2000      	movs	r0, #0
}
 8011e50:	b003      	add	sp, #12
 8011e52:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8011e54:	6881      	ldr	r1, [r0, #8]
 8011e56:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8011e5a:	d002      	beq.n	8011e62 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8011e5c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8011e60:	d107      	bne.n	8011e72 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8011e62:	6825      	ldr	r5, [r4, #0]
 8011e64:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8011e66:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8011e6a:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8011e6e:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8011e70:	d004      	beq.n	8011e7c <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8011e72:	9200      	str	r2, [sp, #0]
 8011e74:	2180      	movs	r1, #128	@ 0x80
 8011e76:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8011e78:	4620      	mov	r0, r4
 8011e7a:	e7e5      	b.n	8011e48 <SPI_EndRxTransaction+0x14>
 8011e7c:	9200      	str	r2, [sp, #0]
 8011e7e:	2101      	movs	r1, #1
 8011e80:	2200      	movs	r2, #0
 8011e82:	e7f9      	b.n	8011e78 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8011e84:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8011e86:	f043 0320 	orr.w	r3, r3, #32
 8011e8a:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8011e8c:	2003      	movs	r0, #3
 8011e8e:	e7df      	b.n	8011e50 <SPI_EndRxTransaction+0x1c>

08011e90 <HAL_SPI_Init>:
{
 8011e90:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8011e92:	4604      	mov	r4, r0
 8011e94:	2800      	cmp	r0, #0
 8011e96:	d055      	beq.n	8011f44 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8011e98:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8011e9a:	2b00      	cmp	r3, #0
 8011e9c:	d14e      	bne.n	8011f3c <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8011e9e:	6842      	ldr	r2, [r0, #4]
 8011ea0:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8011ea4:	d000      	beq.n	8011ea8 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8011ea6:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8011ea8:	2300      	movs	r3, #0
 8011eaa:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8011eac:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8011eb0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8011eb4:	b923      	cbnz	r3, 8011ec0 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8011eb6:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8011eba:	4620      	mov	r0, r4
 8011ebc:	f7f0 fbbe 	bl	800263c <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8011ec0:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8011ec2:	68a0      	ldr	r0, [r4, #8]
 8011ec4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8011ec6:	2302      	movs	r3, #2
 8011ec8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8011ecc:	680b      	ldr	r3, [r1, #0]
 8011ece:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8011ed2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8011ed4:	6863      	ldr	r3, [r4, #4]
 8011ed6:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8011eda:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8011ede:	4303      	orrs	r3, r0
 8011ee0:	68e0      	ldr	r0, [r4, #12]
 8011ee2:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8011ee6:	4303      	orrs	r3, r0
 8011ee8:	6920      	ldr	r0, [r4, #16]
 8011eea:	f000 0002 	and.w	r0, r0, #2
 8011eee:	4303      	orrs	r3, r0
 8011ef0:	6960      	ldr	r0, [r4, #20]
 8011ef2:	f000 0001 	and.w	r0, r0, #1
 8011ef6:	4303      	orrs	r3, r0
 8011ef8:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8011efc:	4303      	orrs	r3, r0
 8011efe:	69e0      	ldr	r0, [r4, #28]
 8011f00:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8011f04:	4303      	orrs	r3, r0
 8011f06:	6a20      	ldr	r0, [r4, #32]
 8011f08:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8011f0c:	4303      	orrs	r3, r0
 8011f0e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8011f10:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8011f14:	4303      	orrs	r3, r0
 8011f16:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8011f18:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011f1a:	0c12      	lsrs	r2, r2, #16
 8011f1c:	f003 0310 	and.w	r3, r3, #16
 8011f20:	f002 0204 	and.w	r2, r2, #4
 8011f24:	431a      	orrs	r2, r3
 8011f26:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8011f28:	69cb      	ldr	r3, [r1, #28]
 8011f2a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8011f2e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8011f30:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8011f32:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8011f34:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8011f36:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8011f3a:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8011f3c:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8011f3e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8011f42:	e7b1      	b.n	8011ea8 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8011f44:	2001      	movs	r0, #1
 8011f46:	e7f8      	b.n	8011f3a <HAL_SPI_Init+0xaa>

08011f48 <HAL_SPI_Transmit>:
{
 8011f48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011f4c:	4604      	mov	r4, r0
 8011f4e:	461f      	mov	r7, r3
 8011f50:	460d      	mov	r5, r1
 8011f52:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8011f54:	f7fe f9f0 	bl	8010338 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8011f58:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8011f5c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8011f5e:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8011f60:	b2d8      	uxtb	r0, r3
 8011f62:	f040 809f 	bne.w	80120a4 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8011f66:	2d00      	cmp	r5, #0
 8011f68:	d074      	beq.n	8012054 <HAL_SPI_Transmit+0x10c>
 8011f6a:	f1b8 0f00 	cmp.w	r8, #0
 8011f6e:	d071      	beq.n	8012054 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 8011f70:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8011f74:	2b01      	cmp	r3, #1
 8011f76:	f000 8095 	beq.w	80120a4 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8011f7a:	2303      	movs	r3, #3
 8011f7c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8011f80:	2300      	movs	r3, #0
 8011f82:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8011f84:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8011f88:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8011f8c:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8011f8e:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8011f90:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8011f92:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 8011f94:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 8011f96:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8011f9a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8011f9e:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8011fa0:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8011fa4:	d107      	bne.n	8011fb6 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 8011fa6:	6833      	ldr	r3, [r6, #0]
 8011fa8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8011fac:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8011fae:	6833      	ldr	r3, [r6, #0]
 8011fb0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8011fb4:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8011fb6:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8011fb8:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8011fba:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8011fbc:	bf5e      	ittt	pl
 8011fbe:	6833      	ldrpl	r3, [r6, #0]
 8011fc0:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8011fc4:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8011fc6:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8011fca:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8011fcc:	d145      	bne.n	801205a <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8011fce:	b113      	cbz	r3, 8011fd6 <HAL_SPI_Transmit+0x8e>
 8011fd0:	f1b8 0f01 	cmp.w	r8, #1
 8011fd4:	d107      	bne.n	8011fe6 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8011fd6:	f835 3b02 	ldrh.w	r3, [r5], #2
 8011fda:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8011fdc:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8011fde:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011fe0:	3b01      	subs	r3, #1
 8011fe2:	b29b      	uxth	r3, r3
 8011fe4:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8011fe6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011fe8:	b29b      	uxth	r3, r3
 8011fea:	b9d3      	cbnz	r3, 8012022 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8011fec:	464a      	mov	r2, r9
 8011fee:	4639      	mov	r1, r7
 8011ff0:	4620      	mov	r0, r4
 8011ff2:	f7ff fee3 	bl	8011dbc <SPI_EndRxTxTransaction>
 8011ff6:	2800      	cmp	r0, #0
 8011ff8:	d151      	bne.n	801209e <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8011ffa:	68a3      	ldr	r3, [r4, #8]
 8011ffc:	b933      	cbnz	r3, 801200c <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8011ffe:	9301      	str	r3, [sp, #4]
 8012000:	6823      	ldr	r3, [r4, #0]
 8012002:	68da      	ldr	r2, [r3, #12]
 8012004:	9201      	str	r2, [sp, #4]
 8012006:	689b      	ldr	r3, [r3, #8]
 8012008:	9301      	str	r3, [sp, #4]
 801200a:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 801200c:	2301      	movs	r3, #1
 801200e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012012:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8012014:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012016:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8012018:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 801201c:	bf18      	it	ne
 801201e:	2001      	movne	r0, #1
 8012020:	e018      	b.n	8012054 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8012022:	6822      	ldr	r2, [r4, #0]
 8012024:	6893      	ldr	r3, [r2, #8]
 8012026:	0798      	lsls	r0, r3, #30
 8012028:	d505      	bpl.n	8012036 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 801202a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801202c:	f833 1b02 	ldrh.w	r1, [r3], #2
 8012030:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8012032:	6323      	str	r3, [r4, #48]	@ 0x30
 8012034:	e7d3      	b.n	8011fde <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8012036:	f7fe f97f 	bl	8010338 <HAL_GetTick>
 801203a:	eba0 0009 	sub.w	r0, r0, r9
 801203e:	42b8      	cmp	r0, r7
 8012040:	d3d1      	bcc.n	8011fe6 <HAL_SPI_Transmit+0x9e>
 8012042:	1c79      	adds	r1, r7, #1
 8012044:	d0cf      	beq.n	8011fe6 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8012046:	2301      	movs	r3, #1
 8012048:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 801204c:	2300      	movs	r3, #0
 801204e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8012052:	2003      	movs	r0, #3
}
 8012054:	b003      	add	sp, #12
 8012056:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 801205a:	b113      	cbz	r3, 8012062 <HAL_SPI_Transmit+0x11a>
 801205c:	f1b8 0f01 	cmp.w	r8, #1
 8012060:	d108      	bne.n	8012074 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8012062:	782b      	ldrb	r3, [r5, #0]
 8012064:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8012066:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012068:	3301      	adds	r3, #1
 801206a:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 801206c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801206e:	3b01      	subs	r3, #1
 8012070:	b29b      	uxth	r3, r3
 8012072:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8012074:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012076:	b29b      	uxth	r3, r3
 8012078:	2b00      	cmp	r3, #0
 801207a:	d0b7      	beq.n	8011fec <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 801207c:	6823      	ldr	r3, [r4, #0]
 801207e:	689a      	ldr	r2, [r3, #8]
 8012080:	0792      	lsls	r2, r2, #30
 8012082:	d503      	bpl.n	801208c <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8012084:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8012086:	7812      	ldrb	r2, [r2, #0]
 8012088:	731a      	strb	r2, [r3, #12]
 801208a:	e7ec      	b.n	8012066 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 801208c:	f7fe f954 	bl	8010338 <HAL_GetTick>
 8012090:	eba0 0009 	sub.w	r0, r0, r9
 8012094:	42b8      	cmp	r0, r7
 8012096:	d3ed      	bcc.n	8012074 <HAL_SPI_Transmit+0x12c>
 8012098:	1c7b      	adds	r3, r7, #1
 801209a:	d0eb      	beq.n	8012074 <HAL_SPI_Transmit+0x12c>
 801209c:	e7d3      	b.n	8012046 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 801209e:	2320      	movs	r3, #32
 80120a0:	6563      	str	r3, [r4, #84]	@ 0x54
 80120a2:	e7aa      	b.n	8011ffa <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 80120a4:	2002      	movs	r0, #2
 80120a6:	e7d5      	b.n	8012054 <HAL_SPI_Transmit+0x10c>

080120a8 <HAL_SPI_TransmitReceive>:
{
 80120a8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80120ac:	4604      	mov	r4, r0
 80120ae:	460d      	mov	r5, r1
 80120b0:	4691      	mov	r9, r2
 80120b2:	461e      	mov	r6, r3
 80120b4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 80120b8:	f7fe f93e 	bl	8010338 <HAL_GetTick>
  tmp_state           = hspi->State;
 80120bc:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 80120c0:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80120c2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80120c4:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 80120c6:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80120c8:	d00a      	beq.n	80120e0 <HAL_SPI_TransmitReceive+0x38>
 80120ca:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80120ce:	f040 80e5 	bne.w	801229c <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80120d2:	68a3      	ldr	r3, [r4, #8]
 80120d4:	2b00      	cmp	r3, #0
 80120d6:	f040 80e1 	bne.w	801229c <HAL_SPI_TransmitReceive+0x1f4>
 80120da:	2904      	cmp	r1, #4
 80120dc:	f040 80de 	bne.w	801229c <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80120e0:	2d00      	cmp	r5, #0
 80120e2:	d04b      	beq.n	801217c <HAL_SPI_TransmitReceive+0xd4>
 80120e4:	f1b9 0f00 	cmp.w	r9, #0
 80120e8:	d048      	beq.n	801217c <HAL_SPI_TransmitReceive+0xd4>
 80120ea:	2e00      	cmp	r6, #0
 80120ec:	d046      	beq.n	801217c <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 80120ee:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80120f2:	2b01      	cmp	r3, #1
 80120f4:	f000 80d2 	beq.w	801229c <HAL_SPI_TransmitReceive+0x1f4>
 80120f8:	2301      	movs	r3, #1
 80120fa:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80120fe:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8012102:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8012106:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8012108:	bf1c      	itt	ne
 801210a:	2305      	movne	r3, #5
 801210c:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8012110:	2300      	movs	r3, #0
 8012112:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8012114:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8012118:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 801211a:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 801211c:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801211e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8012120:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8012122:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8012124:	bf58      	it	pl
 8012126:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8012128:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 801212a:	bf58      	it	pl
 801212c:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8012130:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8012132:	bf58      	it	pl
 8012134:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8012136:	68e1      	ldr	r1, [r4, #12]
 8012138:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 801213c:	d155      	bne.n	80121ea <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 801213e:	b10a      	cbz	r2, 8012144 <HAL_SPI_TransmitReceive+0x9c>
 8012140:	2e01      	cmp	r6, #1
 8012142:	d107      	bne.n	8012154 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8012144:	f835 2b02 	ldrh.w	r2, [r5], #2
 8012148:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 801214a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 801214c:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 801214e:	3b01      	subs	r3, #1
 8012150:	b29b      	uxth	r3, r3
 8012152:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8012154:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8012156:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012158:	b29b      	uxth	r3, r3
 801215a:	b98b      	cbnz	r3, 8012180 <HAL_SPI_TransmitReceive+0xd8>
 801215c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 801215e:	b29b      	uxth	r3, r3
 8012160:	b973      	cbnz	r3, 8012180 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8012162:	463a      	mov	r2, r7
 8012164:	4641      	mov	r1, r8
 8012166:	4620      	mov	r0, r4
 8012168:	f7ff fe28 	bl	8011dbc <SPI_EndRxTxTransaction>
 801216c:	2800      	cmp	r0, #0
 801216e:	f000 8081 	beq.w	8012274 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8012172:	2320      	movs	r3, #32
 8012174:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 8012176:	2300      	movs	r3, #0
 8012178:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 801217c:	2001      	movs	r0, #1
 801217e:	e031      	b.n	80121e4 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8012180:	6821      	ldr	r1, [r4, #0]
 8012182:	688b      	ldr	r3, [r1, #8]
 8012184:	079a      	lsls	r2, r3, #30
 8012186:	d50d      	bpl.n	80121a4 <HAL_SPI_TransmitReceive+0xfc>
 8012188:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801218a:	b29b      	uxth	r3, r3
 801218c:	b153      	cbz	r3, 80121a4 <HAL_SPI_TransmitReceive+0xfc>
 801218e:	b145      	cbz	r5, 80121a2 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8012190:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012192:	f833 2b02 	ldrh.w	r2, [r3], #2
 8012196:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8012198:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 801219a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801219c:	3b01      	subs	r3, #1
 801219e:	b29b      	uxth	r3, r3
 80121a0:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 80121a2:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80121a4:	688a      	ldr	r2, [r1, #8]
 80121a6:	f012 0201 	ands.w	r2, r2, #1
 80121aa:	d00c      	beq.n	80121c6 <HAL_SPI_TransmitReceive+0x11e>
 80121ac:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80121ae:	b29b      	uxth	r3, r3
 80121b0:	b14b      	cbz	r3, 80121c6 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80121b2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80121b4:	68c9      	ldr	r1, [r1, #12]
 80121b6:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80121ba:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80121bc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80121be:	3b01      	subs	r3, #1
 80121c0:	b29b      	uxth	r3, r3
 80121c2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 80121c4:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80121c6:	f7fe f8b7 	bl	8010338 <HAL_GetTick>
 80121ca:	1bc0      	subs	r0, r0, r7
 80121cc:	4540      	cmp	r0, r8
 80121ce:	d3c2      	bcc.n	8012156 <HAL_SPI_TransmitReceive+0xae>
 80121d0:	f1b8 3fff 	cmp.w	r8, #4294967295
 80121d4:	d0bf      	beq.n	8012156 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 80121d6:	2301      	movs	r3, #1
 80121d8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80121dc:	2300      	movs	r3, #0
 80121de:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80121e2:	2003      	movs	r0, #3
}
 80121e4:	b003      	add	sp, #12
 80121e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80121ea:	b10a      	cbz	r2, 80121f0 <HAL_SPI_TransmitReceive+0x148>
 80121ec:	2e01      	cmp	r6, #1
 80121ee:	d108      	bne.n	8012202 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80121f0:	782a      	ldrb	r2, [r5, #0]
 80121f2:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80121f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80121f6:	3301      	adds	r3, #1
 80121f8:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80121fa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80121fc:	3b01      	subs	r3, #1
 80121fe:	b29b      	uxth	r3, r3
 8012200:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8012202:	2501      	movs	r5, #1
 8012204:	e02d      	b.n	8012262 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8012206:	6822      	ldr	r2, [r4, #0]
 8012208:	6893      	ldr	r3, [r2, #8]
 801220a:	079b      	lsls	r3, r3, #30
 801220c:	d50e      	bpl.n	801222c <HAL_SPI_TransmitReceive+0x184>
 801220e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012210:	b29b      	uxth	r3, r3
 8012212:	b15b      	cbz	r3, 801222c <HAL_SPI_TransmitReceive+0x184>
 8012214:	b14d      	cbz	r5, 801222a <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8012216:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012218:	781b      	ldrb	r3, [r3, #0]
 801221a:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 801221c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801221e:	3301      	adds	r3, #1
 8012220:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8012222:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012224:	3b01      	subs	r3, #1
 8012226:	b29b      	uxth	r3, r3
 8012228:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 801222a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 801222c:	6822      	ldr	r2, [r4, #0]
 801222e:	6891      	ldr	r1, [r2, #8]
 8012230:	f011 0101 	ands.w	r1, r1, #1
 8012234:	d00d      	beq.n	8012252 <HAL_SPI_TransmitReceive+0x1aa>
 8012236:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8012238:	b29b      	uxth	r3, r3
 801223a:	b153      	cbz	r3, 8012252 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 801223c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 801223e:	68d2      	ldr	r2, [r2, #12]
 8012240:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8012242:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8012244:	3301      	adds	r3, #1
 8012246:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8012248:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 801224a:	3b01      	subs	r3, #1
 801224c:	b29b      	uxth	r3, r3
 801224e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8012250:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8012252:	f7fe f871 	bl	8010338 <HAL_GetTick>
 8012256:	1bc0      	subs	r0, r0, r7
 8012258:	4540      	cmp	r0, r8
 801225a:	d302      	bcc.n	8012262 <HAL_SPI_TransmitReceive+0x1ba>
 801225c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8012260:	d1b9      	bne.n	80121d6 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8012262:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012264:	b29b      	uxth	r3, r3
 8012266:	2b00      	cmp	r3, #0
 8012268:	d1cd      	bne.n	8012206 <HAL_SPI_TransmitReceive+0x15e>
 801226a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 801226c:	b29b      	uxth	r3, r3
 801226e:	2b00      	cmp	r3, #0
 8012270:	d1c9      	bne.n	8012206 <HAL_SPI_TransmitReceive+0x15e>
 8012272:	e776      	b.n	8012162 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8012274:	68a3      	ldr	r3, [r4, #8]
 8012276:	b933      	cbnz	r3, 8012286 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8012278:	9301      	str	r3, [sp, #4]
 801227a:	6823      	ldr	r3, [r4, #0]
 801227c:	68da      	ldr	r2, [r3, #12]
 801227e:	9201      	str	r2, [sp, #4]
 8012280:	689b      	ldr	r3, [r3, #8]
 8012282:	9301      	str	r3, [sp, #4]
 8012284:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8012286:	2301      	movs	r3, #1
 8012288:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 801228c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 801228e:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012290:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8012292:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012296:	bf18      	it	ne
 8012298:	2001      	movne	r0, #1
 801229a:	e7a3      	b.n	80121e4 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 801229c:	2002      	movs	r0, #2
 801229e:	e7a1      	b.n	80121e4 <HAL_SPI_TransmitReceive+0x13c>

080122a0 <HAL_SPI_Receive>:
{
 80122a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80122a4:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 80122a6:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 80122aa:	2b01      	cmp	r3, #1
{
 80122ac:	4604      	mov	r4, r0
 80122ae:	4689      	mov	r9, r1
 80122b0:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 80122b2:	b2dd      	uxtb	r5, r3
 80122b4:	d004      	beq.n	80122c0 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 80122b6:	2502      	movs	r5, #2
}
 80122b8:	4628      	mov	r0, r5
 80122ba:	b003      	add	sp, #12
 80122bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80122c0:	6843      	ldr	r3, [r0, #4]
 80122c2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80122c6:	d10b      	bne.n	80122e0 <HAL_SPI_Receive+0x40>
 80122c8:	6883      	ldr	r3, [r0, #8]
 80122ca:	b94b      	cbnz	r3, 80122e0 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80122cc:	2304      	movs	r3, #4
 80122ce:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80122d2:	4613      	mov	r3, r2
 80122d4:	9600      	str	r6, [sp, #0]
 80122d6:	460a      	mov	r2, r1
 80122d8:	f7ff fee6 	bl	80120a8 <HAL_SPI_TransmitReceive>
 80122dc:	4605      	mov	r5, r0
 80122de:	e7eb      	b.n	80122b8 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 80122e0:	f7fe f82a 	bl	8010338 <HAL_GetTick>
 80122e4:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 80122e6:	f1b9 0f00 	cmp.w	r9, #0
 80122ea:	d0e5      	beq.n	80122b8 <HAL_SPI_Receive+0x18>
 80122ec:	2f00      	cmp	r7, #0
 80122ee:	d0e3      	beq.n	80122b8 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 80122f0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80122f4:	2b01      	cmp	r3, #1
 80122f6:	d0de      	beq.n	80122b6 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80122f8:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80122fa:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 80122fe:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8012300:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8012302:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8012306:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 801230a:	f04f 0304 	mov.w	r3, #4
 801230e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8012312:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8012316:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8012318:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 801231a:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 801231c:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 801231e:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8012320:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8012322:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8012324:	d107      	bne.n	8012336 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 8012326:	681a      	ldr	r2, [r3, #0]
 8012328:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 801232c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 801232e:	681a      	ldr	r2, [r3, #0]
 8012330:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8012334:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8012336:	681a      	ldr	r2, [r3, #0]
 8012338:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 801233a:	bf5e      	ittt	pl
 801233c:	681a      	ldrpl	r2, [r3, #0]
 801233e:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8012342:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8012344:	68e3      	ldr	r3, [r4, #12]
 8012346:	b1f3      	cbz	r3, 8012386 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 8012348:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 801234a:	b29b      	uxth	r3, r3
 801234c:	b1fb      	cbz	r3, 801238e <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 801234e:	6823      	ldr	r3, [r4, #0]
 8012350:	689a      	ldr	r2, [r3, #8]
 8012352:	07d2      	lsls	r2, r2, #31
 8012354:	d53c      	bpl.n	80123d0 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8012356:	68da      	ldr	r2, [r3, #12]
 8012358:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 801235a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 801235e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8012360:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8012362:	3b01      	subs	r3, #1
 8012364:	b29b      	uxth	r3, r3
 8012366:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8012368:	e7ee      	b.n	8012348 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 801236a:	6823      	ldr	r3, [r4, #0]
 801236c:	689a      	ldr	r2, [r3, #8]
 801236e:	07d0      	lsls	r0, r2, #31
 8012370:	d51e      	bpl.n	80123b0 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8012372:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8012374:	7b1b      	ldrb	r3, [r3, #12]
 8012376:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8012378:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 801237a:	3301      	adds	r3, #1
 801237c:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 801237e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8012380:	3b01      	subs	r3, #1
 8012382:	b29b      	uxth	r3, r3
 8012384:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8012386:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8012388:	b29b      	uxth	r3, r3
 801238a:	2b00      	cmp	r3, #0
 801238c:	d1ed      	bne.n	801236a <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 801238e:	4642      	mov	r2, r8
 8012390:	4631      	mov	r1, r6
 8012392:	4620      	mov	r0, r4
 8012394:	f7ff fd4e 	bl	8011e34 <SPI_EndRxTransaction>
 8012398:	bb18      	cbnz	r0, 80123e2 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 801239a:	2301      	movs	r3, #1
 801239c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80123a0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80123a2:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80123a4:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 80123a6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80123aa:	bf18      	it	ne
 80123ac:	2501      	movne	r5, #1
 80123ae:	e783      	b.n	80122b8 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80123b0:	f7fd ffc2 	bl	8010338 <HAL_GetTick>
 80123b4:	eba0 0008 	sub.w	r0, r0, r8
 80123b8:	42b0      	cmp	r0, r6
 80123ba:	d3e4      	bcc.n	8012386 <HAL_SPI_Receive+0xe6>
 80123bc:	1c71      	adds	r1, r6, #1
 80123be:	d0e2      	beq.n	8012386 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 80123c0:	2301      	movs	r3, #1
 80123c2:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80123c6:	2300      	movs	r3, #0
 80123c8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 80123cc:	2503      	movs	r5, #3
 80123ce:	e773      	b.n	80122b8 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80123d0:	f7fd ffb2 	bl	8010338 <HAL_GetTick>
 80123d4:	eba0 0008 	sub.w	r0, r0, r8
 80123d8:	42b0      	cmp	r0, r6
 80123da:	d3b5      	bcc.n	8012348 <HAL_SPI_Receive+0xa8>
 80123dc:	1c73      	adds	r3, r6, #1
 80123de:	d0b3      	beq.n	8012348 <HAL_SPI_Receive+0xa8>
 80123e0:	e7ee      	b.n	80123c0 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80123e2:	2320      	movs	r3, #32
 80123e4:	6563      	str	r3, [r4, #84]	@ 0x54
 80123e6:	e7d8      	b.n	801239a <HAL_SPI_Receive+0xfa>

080123e8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80123e8:	4770      	bx	lr
	...

080123ec <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80123ec:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80123f0:	2b01      	cmp	r3, #1
 80123f2:	d130      	bne.n	8012456 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80123f4:	2302      	movs	r3, #2
 80123f6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80123fa:	6803      	ldr	r3, [r0, #0]
 80123fc:	68da      	ldr	r2, [r3, #12]
 80123fe:	f042 0201 	orr.w	r2, r2, #1
 8012402:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8012404:	4a15      	ldr	r2, [pc, #84]	@ (801245c <HAL_TIM_Base_Start_IT+0x70>)
 8012406:	4293      	cmp	r3, r2
 8012408:	d01a      	beq.n	8012440 <HAL_TIM_Base_Start_IT+0x54>
 801240a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801240e:	d017      	beq.n	8012440 <HAL_TIM_Base_Start_IT+0x54>
 8012410:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8012414:	4293      	cmp	r3, r2
 8012416:	d013      	beq.n	8012440 <HAL_TIM_Base_Start_IT+0x54>
 8012418:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 801241c:	4293      	cmp	r3, r2
 801241e:	d00f      	beq.n	8012440 <HAL_TIM_Base_Start_IT+0x54>
 8012420:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012424:	4293      	cmp	r3, r2
 8012426:	d00b      	beq.n	8012440 <HAL_TIM_Base_Start_IT+0x54>
 8012428:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 801242c:	4293      	cmp	r3, r2
 801242e:	d007      	beq.n	8012440 <HAL_TIM_Base_Start_IT+0x54>
 8012430:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8012434:	4293      	cmp	r3, r2
 8012436:	d003      	beq.n	8012440 <HAL_TIM_Base_Start_IT+0x54>
 8012438:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 801243c:	4293      	cmp	r3, r2
 801243e:	d104      	bne.n	801244a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8012440:	689a      	ldr	r2, [r3, #8]
 8012442:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8012446:	2a06      	cmp	r2, #6
 8012448:	d003      	beq.n	8012452 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 801244a:	681a      	ldr	r2, [r3, #0]
 801244c:	f042 0201 	orr.w	r2, r2, #1
 8012450:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8012452:	2000      	movs	r0, #0
 8012454:	4770      	bx	lr
    return HAL_ERROR;
 8012456:	2001      	movs	r0, #1
}
 8012458:	4770      	bx	lr
 801245a:	bf00      	nop
 801245c:	40010000 	.word	0x40010000

08012460 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8012460:	4770      	bx	lr

08012462 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8012462:	4770      	bx	lr

08012464 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8012464:	4770      	bx	lr

08012466 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8012466:	4770      	bx	lr

08012468 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8012468:	6803      	ldr	r3, [r0, #0]
{
 801246a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 801246c:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 801246e:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8012470:	07b1      	lsls	r1, r6, #30
{
 8012472:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8012474:	d50d      	bpl.n	8012492 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8012476:	07aa      	lsls	r2, r5, #30
 8012478:	d50b      	bpl.n	8012492 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 801247a:	f06f 0202 	mvn.w	r2, #2
 801247e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8012480:	2201      	movs	r2, #1
 8012482:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8012484:	699b      	ldr	r3, [r3, #24]
 8012486:	079b      	lsls	r3, r3, #30
 8012488:	d069      	beq.n	801255e <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 801248a:	f7ff ffea 	bl	8012462 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 801248e:	2300      	movs	r3, #0
 8012490:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8012492:	0771      	lsls	r1, r6, #29
 8012494:	d510      	bpl.n	80124b8 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8012496:	076a      	lsls	r2, r5, #29
 8012498:	d50e      	bpl.n	80124b8 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 801249a:	6823      	ldr	r3, [r4, #0]
 801249c:	f06f 0204 	mvn.w	r2, #4
 80124a0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80124a2:	2202      	movs	r2, #2
 80124a4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80124a6:	699b      	ldr	r3, [r3, #24]
 80124a8:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80124ac:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80124ae:	d05c      	beq.n	801256a <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 80124b0:	f7ff ffd7 	bl	8012462 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80124b4:	2300      	movs	r3, #0
 80124b6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80124b8:	0733      	lsls	r3, r6, #28
 80124ba:	d50f      	bpl.n	80124dc <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80124bc:	0728      	lsls	r0, r5, #28
 80124be:	d50d      	bpl.n	80124dc <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80124c0:	6823      	ldr	r3, [r4, #0]
 80124c2:	f06f 0208 	mvn.w	r2, #8
 80124c6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80124c8:	2204      	movs	r2, #4
 80124ca:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80124cc:	69db      	ldr	r3, [r3, #28]
 80124ce:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 80124d0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80124d2:	d050      	beq.n	8012576 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 80124d4:	f7ff ffc5 	bl	8012462 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80124d8:	2300      	movs	r3, #0
 80124da:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80124dc:	06f2      	lsls	r2, r6, #27
 80124de:	d510      	bpl.n	8012502 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80124e0:	06eb      	lsls	r3, r5, #27
 80124e2:	d50e      	bpl.n	8012502 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80124e4:	6823      	ldr	r3, [r4, #0]
 80124e6:	f06f 0210 	mvn.w	r2, #16
 80124ea:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80124ec:	2208      	movs	r2, #8
 80124ee:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80124f0:	69db      	ldr	r3, [r3, #28]
 80124f2:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80124f6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80124f8:	d043      	beq.n	8012582 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 80124fa:	f7ff ffb2 	bl	8012462 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80124fe:	2300      	movs	r3, #0
 8012500:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8012502:	07f0      	lsls	r0, r6, #31
 8012504:	d508      	bpl.n	8012518 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8012506:	07e9      	lsls	r1, r5, #31
 8012508:	d506      	bpl.n	8012518 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 801250a:	6823      	ldr	r3, [r4, #0]
 801250c:	f06f 0201 	mvn.w	r2, #1
 8012510:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8012512:	4620      	mov	r0, r4
 8012514:	f7ef fef4 	bl	8002300 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8012518:	0632      	lsls	r2, r6, #24
 801251a:	d508      	bpl.n	801252e <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 801251c:	062b      	lsls	r3, r5, #24
 801251e:	d506      	bpl.n	801252e <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8012520:	6823      	ldr	r3, [r4, #0]
 8012522:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8012526:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8012528:	4620      	mov	r0, r4
 801252a:	f000 f8b6 	bl	801269a <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 801252e:	0670      	lsls	r0, r6, #25
 8012530:	d508      	bpl.n	8012544 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8012532:	0669      	lsls	r1, r5, #25
 8012534:	d506      	bpl.n	8012544 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8012536:	6823      	ldr	r3, [r4, #0]
 8012538:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 801253c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 801253e:	4620      	mov	r0, r4
 8012540:	f7ff ff91 	bl	8012466 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8012544:	06b2      	lsls	r2, r6, #26
 8012546:	d522      	bpl.n	801258e <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8012548:	06ab      	lsls	r3, r5, #26
 801254a:	d520      	bpl.n	801258e <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 801254c:	6823      	ldr	r3, [r4, #0]
 801254e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8012552:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8012554:	611a      	str	r2, [r3, #16]
}
 8012556:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 801255a:	f000 b89d 	b.w	8012698 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 801255e:	f7ff ff7f 	bl	8012460 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8012562:	4620      	mov	r0, r4
 8012564:	f7ff ff7e 	bl	8012464 <HAL_TIM_PWM_PulseFinishedCallback>
 8012568:	e791      	b.n	801248e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 801256a:	f7ff ff79 	bl	8012460 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 801256e:	4620      	mov	r0, r4
 8012570:	f7ff ff78 	bl	8012464 <HAL_TIM_PWM_PulseFinishedCallback>
 8012574:	e79e      	b.n	80124b4 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8012576:	f7ff ff73 	bl	8012460 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 801257a:	4620      	mov	r0, r4
 801257c:	f7ff ff72 	bl	8012464 <HAL_TIM_PWM_PulseFinishedCallback>
 8012580:	e7aa      	b.n	80124d8 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8012582:	f7ff ff6d 	bl	8012460 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8012586:	4620      	mov	r0, r4
 8012588:	f7ff ff6c 	bl	8012464 <HAL_TIM_PWM_PulseFinishedCallback>
 801258c:	e7b7      	b.n	80124fe <HAL_TIM_IRQHandler+0x96>
}
 801258e:	bd70      	pop	{r4, r5, r6, pc}

08012590 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8012590:	4a29      	ldr	r2, [pc, #164]	@ (8012638 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 8012592:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8012594:	4290      	cmp	r0, r2
 8012596:	d012      	beq.n	80125be <TIM_Base_SetConfig+0x2e>
 8012598:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 801259c:	d00f      	beq.n	80125be <TIM_Base_SetConfig+0x2e>
 801259e:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80125a2:	4290      	cmp	r0, r2
 80125a4:	d00b      	beq.n	80125be <TIM_Base_SetConfig+0x2e>
 80125a6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80125aa:	4290      	cmp	r0, r2
 80125ac:	d007      	beq.n	80125be <TIM_Base_SetConfig+0x2e>
 80125ae:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80125b2:	4290      	cmp	r0, r2
 80125b4:	d003      	beq.n	80125be <TIM_Base_SetConfig+0x2e>
 80125b6:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80125ba:	4290      	cmp	r0, r2
 80125bc:	d108      	bne.n	80125d0 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80125be:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80125c0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 80125c4:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80125c6:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80125c8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80125cc:	4313      	orrs	r3, r2
 80125ce:	e016      	b.n	80125fe <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80125d0:	4a1a      	ldr	r2, [pc, #104]	@ (801263c <TIM_Base_SetConfig+0xac>)
 80125d2:	4290      	cmp	r0, r2
 80125d4:	d0f7      	beq.n	80125c6 <TIM_Base_SetConfig+0x36>
 80125d6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80125da:	4290      	cmp	r0, r2
 80125dc:	d0f3      	beq.n	80125c6 <TIM_Base_SetConfig+0x36>
 80125de:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80125e2:	4290      	cmp	r0, r2
 80125e4:	d0ef      	beq.n	80125c6 <TIM_Base_SetConfig+0x36>
 80125e6:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80125ea:	4290      	cmp	r0, r2
 80125ec:	d0eb      	beq.n	80125c6 <TIM_Base_SetConfig+0x36>
 80125ee:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80125f2:	4290      	cmp	r0, r2
 80125f4:	d0e7      	beq.n	80125c6 <TIM_Base_SetConfig+0x36>
 80125f6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80125fa:	4290      	cmp	r0, r2
 80125fc:	d0e3      	beq.n	80125c6 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80125fe:	694a      	ldr	r2, [r1, #20]
 8012600:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012604:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8012606:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8012608:	688b      	ldr	r3, [r1, #8]
 801260a:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 801260c:	680b      	ldr	r3, [r1, #0]
 801260e:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8012610:	4b09      	ldr	r3, [pc, #36]	@ (8012638 <TIM_Base_SetConfig+0xa8>)
 8012612:	4298      	cmp	r0, r3
 8012614:	d003      	beq.n	801261e <TIM_Base_SetConfig+0x8e>
 8012616:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 801261a:	4298      	cmp	r0, r3
 801261c:	d101      	bne.n	8012622 <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 801261e:	690b      	ldr	r3, [r1, #16]
 8012620:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8012622:	2301      	movs	r3, #1
 8012624:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8012626:	6903      	ldr	r3, [r0, #16]
 8012628:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 801262a:	bf42      	ittt	mi
 801262c:	6903      	ldrmi	r3, [r0, #16]
 801262e:	f023 0301 	bicmi.w	r3, r3, #1
 8012632:	6103      	strmi	r3, [r0, #16]
  }
}
 8012634:	4770      	bx	lr
 8012636:	bf00      	nop
 8012638:	40010000 	.word	0x40010000
 801263c:	40014000 	.word	0x40014000

08012640 <HAL_TIM_Base_Init>:
{
 8012640:	b510      	push	{r4, lr}
  if (htim == NULL)
 8012642:	4604      	mov	r4, r0
 8012644:	b330      	cbz	r0, 8012694 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8012646:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 801264a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 801264e:	b91b      	cbnz	r3, 8012658 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8012650:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8012654:	f7ff fec8 	bl	80123e8 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8012658:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 801265a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 801265c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8012660:	1d21      	adds	r1, r4, #4
 8012662:	f7ff ff95 	bl	8012590 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8012666:	2301      	movs	r3, #1
 8012668:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 801266c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 801266e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8012672:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8012676:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 801267a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 801267e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8012682:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8012686:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 801268a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 801268e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8012692:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8012694:	2001      	movs	r0, #1
 8012696:	e7fc      	b.n	8012692 <HAL_TIM_Base_Init+0x52>

08012698 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8012698:	4770      	bx	lr

0801269a <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 801269a:	4770      	bx	lr

0801269c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 801269c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80126a0:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80126a4:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80126a8:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80126ac:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 80126b0:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80126b4:	6809      	ldr	r1, [r1, #0]
 80126b6:	ea43 0308 	orr.w	r3, r3, r8
 80126ba:	b981      	cbnz	r1, 80126de <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80126bc:	ea43 030e 	orr.w	r3, r3, lr
 80126c0:	4313      	orrs	r3, r2
 80126c2:	ea43 030c 	orr.w	r3, r3, ip
 80126c6:	433b      	orrs	r3, r7
 80126c8:	6801      	ldr	r1, [r0, #0]
 80126ca:	4333      	orrs	r3, r6
 80126cc:	432b      	orrs	r3, r5
 80126ce:	4323      	orrs	r3, r4
 80126d0:	f36f 010e 	bfc	r1, #0, #15
 80126d4:	430b      	orrs	r3, r1
 80126d6:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 80126d8:	2000      	movs	r0, #0
 80126da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80126de:	6801      	ldr	r1, [r0, #0]
 80126e0:	ea43 030e 	orr.w	r3, r3, lr
 80126e4:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 80126e8:	430b      	orrs	r3, r1
 80126ea:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 80126ec:	ea42 030c 	orr.w	r3, r2, ip
 80126f0:	6841      	ldr	r1, [r0, #4]
 80126f2:	433b      	orrs	r3, r7
 80126f4:	4333      	orrs	r3, r6
 80126f6:	432b      	orrs	r3, r5
 80126f8:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 80126fc:	4323      	orrs	r3, r4
 80126fe:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8012702:	4313      	orrs	r3, r2
 8012704:	6043      	str	r3, [r0, #4]
 8012706:	e7e7      	b.n	80126d8 <FMC_SDRAM_Init+0x3c>

08012708 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012708:	68cb      	ldr	r3, [r1, #12]
 801270a:	f103 3cff 	add.w	ip, r3, #4294967295
 801270e:	694b      	ldr	r3, [r1, #20]
{
 8012710:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012712:	684c      	ldr	r4, [r1, #4]
 8012714:	688f      	ldr	r7, [r1, #8]
 8012716:	690e      	ldr	r6, [r1, #16]
 8012718:	698d      	ldr	r5, [r1, #24]
 801271a:	6809      	ldr	r1, [r1, #0]
 801271c:	3b01      	subs	r3, #1
 801271e:	051b      	lsls	r3, r3, #20
 8012720:	3c01      	subs	r4, #1
 8012722:	3f01      	subs	r7, #1
 8012724:	3e01      	subs	r6, #1
 8012726:	3d01      	subs	r5, #1
 8012728:	0124      	lsls	r4, r4, #4
 801272a:	023f      	lsls	r7, r7, #8
 801272c:	0436      	lsls	r6, r6, #16
 801272e:	062d      	lsls	r5, r5, #24
 8012730:	3901      	subs	r1, #1
 8012732:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8012736:	b95a      	cbnz	r2, 8012750 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012738:	430b      	orrs	r3, r1
 801273a:	4323      	orrs	r3, r4
 801273c:	6882      	ldr	r2, [r0, #8]
 801273e:	433b      	orrs	r3, r7
 8012740:	4333      	orrs	r3, r6
 8012742:	432b      	orrs	r3, r5
 8012744:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8012748:	4313      	orrs	r3, r2
 801274a:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 801274c:	2000      	movs	r0, #0
 801274e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012750:	6882      	ldr	r2, [r0, #8]
 8012752:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8012756:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 801275a:	4313      	orrs	r3, r2
 801275c:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 801275e:	ea44 0307 	orr.w	r3, r4, r7
 8012762:	68c2      	ldr	r2, [r0, #12]
 8012764:	430b      	orrs	r3, r1
 8012766:	4333      	orrs	r3, r6
 8012768:	432b      	orrs	r3, r5
 801276a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 801276e:	4313      	orrs	r3, r2
 8012770:	60c3      	str	r3, [r0, #12]
 8012772:	e7eb      	b.n	801274c <FMC_SDRAM_Timing_Init+0x44>

08012774 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8012774:	b570      	push	{r4, r5, r6, lr}
 8012776:	4604      	mov	r4, r0
 8012778:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 801277a:	6902      	ldr	r2, [r0, #16]
 801277c:	e9d1 3000 	ldrd	r3, r0, [r1]
 8012780:	4303      	orrs	r3, r0
 8012782:	68c8      	ldr	r0, [r1, #12]
 8012784:	f36f 0215 	bfc	r2, #0, #22
 8012788:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 801278c:	4313      	orrs	r3, r2
 801278e:	688a      	ldr	r2, [r1, #8]
 8012790:	3a01      	subs	r2, #1
 8012792:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8012796:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8012798:	f7fd fdce 	bl	8010338 <HAL_GetTick>
 801279c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 801279e:	69a0      	ldr	r0, [r4, #24]
 80127a0:	f010 0020 	ands.w	r0, r0, #32
 80127a4:	d003      	beq.n	80127ae <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80127a6:	1c6b      	adds	r3, r5, #1
 80127a8:	d0f9      	beq.n	801279e <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80127aa:	b90d      	cbnz	r5, 80127b0 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 80127ac:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 80127ae:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80127b0:	f7fd fdc2 	bl	8010338 <HAL_GetTick>
 80127b4:	1b80      	subs	r0, r0, r6
 80127b6:	42a8      	cmp	r0, r5
 80127b8:	d9f1      	bls.n	801279e <FMC_SDRAM_SendCommand+0x2a>
 80127ba:	e7f7      	b.n	80127ac <FMC_SDRAM_SendCommand+0x38>

080127bc <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80127bc:	6943      	ldr	r3, [r0, #20]
 80127be:	f36f 034d 	bfc	r3, #1, #13
 80127c2:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80127c6:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80127c8:	2000      	movs	r0, #0
 80127ca:	4770      	bx	lr

080127cc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80127cc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80127ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80127d2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80127d4:	f001 fdf2 	bl	80143bc <xTaskGetSchedulerState>
 80127d8:	2801      	cmp	r0, #1
 80127da:	d003      	beq.n	80127e4 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80127dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80127e0:	f000 bbe0 	b.w	8012fa4 <xPortSysTickHandler>
}
 80127e4:	bd08      	pop	{r3, pc}
	...

080127e8 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80127e8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80127ec:	b92b      	cbnz	r3, 80127fa <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80127ee:	4b06      	ldr	r3, [pc, #24]	@ (8012808 <osKernelInitialize+0x20>)
 80127f0:	6818      	ldr	r0, [r3, #0]
 80127f2:	b928      	cbnz	r0, 8012800 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80127f4:	2201      	movs	r2, #1
 80127f6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80127f8:	4770      	bx	lr
    stat = osErrorISR;
 80127fa:	f06f 0005 	mvn.w	r0, #5
 80127fe:	4770      	bx	lr
    } else {
      stat = osError;
 8012800:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8012804:	4770      	bx	lr
 8012806:	bf00      	nop
 8012808:	200031e4 	.word	0x200031e4

0801280c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 801280c:	b510      	push	{r4, lr}
 801280e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8012812:	b95c      	cbnz	r4, 801282c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8012814:	4b08      	ldr	r3, [pc, #32]	@ (8012838 <osKernelStart+0x2c>)
 8012816:	681a      	ldr	r2, [r3, #0]
 8012818:	2a01      	cmp	r2, #1
 801281a:	d10a      	bne.n	8012832 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801281c:	4a07      	ldr	r2, [pc, #28]	@ (801283c <osKernelStart+0x30>)
 801281e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8012820:	2202      	movs	r2, #2
 8012822:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8012824:	f001 fb48 	bl	8013eb8 <vTaskStartScheduler>
      stat = osOK;
 8012828:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 801282a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 801282c:	f06f 0005 	mvn.w	r0, #5
 8012830:	e7fb      	b.n	801282a <osKernelStart+0x1e>
      stat = osError;
 8012832:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8012836:	e7f8      	b.n	801282a <osKernelStart+0x1e>
 8012838:	200031e4 	.word	0x200031e4
 801283c:	e000ed00 	.word	0xe000ed00

08012840 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8012840:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012842:	b087      	sub	sp, #28
 8012844:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8012846:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8012848:	460b      	mov	r3, r1
  hTask = NULL;
 801284a:	9205      	str	r2, [sp, #20]
 801284c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8012850:	b9fa      	cbnz	r2, 8012892 <osThreadNew+0x52>
 8012852:	b1f0      	cbz	r0, 8012892 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8012854:	b354      	cbz	r4, 80128ac <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8012856:	69a5      	ldr	r5, [r4, #24]
 8012858:	b125      	cbz	r5, 8012864 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 801285a:	1e69      	subs	r1, r5, #1
 801285c:	2937      	cmp	r1, #55	@ 0x37
 801285e:	d902      	bls.n	8012866 <osThreadNew+0x26>
        return (NULL);
 8012860:	2000      	movs	r0, #0
 8012862:	e017      	b.n	8012894 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8012864:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8012866:	6862      	ldr	r2, [r4, #4]
 8012868:	07d2      	lsls	r2, r2, #31
 801286a:	d4f9      	bmi.n	8012860 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 801286c:	6966      	ldr	r6, [r4, #20]
 801286e:	b19e      	cbz	r6, 8012898 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8012870:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8012872:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8012876:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8012878:	b187      	cbz	r7, 801289c <osThreadNew+0x5c>
 801287a:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 801287e:	d908      	bls.n	8012892 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8012880:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8012882:	b134      	cbz	r4, 8012892 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8012884:	b12e      	cbz	r6, 8012892 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8012886:	e9cd 4701 	strd	r4, r7, [sp, #4]
 801288a:	9500      	str	r5, [sp, #0]
 801288c:	f001 faad 	bl	8013dea <xTaskCreateStatic>
 8012890:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8012892:	9805      	ldr	r0, [sp, #20]
}
 8012894:	b007      	add	sp, #28
 8012896:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8012898:	2280      	movs	r2, #128	@ 0x80
 801289a:	e7ea      	b.n	8012872 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 801289c:	f1bc 0f00 	cmp.w	ip, #0
 80128a0:	d1f7      	bne.n	8012892 <osThreadNew+0x52>
 80128a2:	6924      	ldr	r4, [r4, #16]
 80128a4:	2c00      	cmp	r4, #0
 80128a6:	d1f4      	bne.n	8012892 <osThreadNew+0x52>
 80128a8:	460c      	mov	r4, r1
 80128aa:	e001      	b.n	80128b0 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 80128ac:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 80128ae:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80128b0:	a905      	add	r1, sp, #20
 80128b2:	e9cd 5100 	strd	r5, r1, [sp]
 80128b6:	b292      	uxth	r2, r2
 80128b8:	4621      	mov	r1, r4
 80128ba:	f001 face 	bl	8013e5a <xTaskCreate>
 80128be:	2801      	cmp	r0, #1
            hTask = NULL;
 80128c0:	bf1c      	itt	ne
 80128c2:	2300      	movne	r3, #0
 80128c4:	9305      	strne	r3, [sp, #20]
 80128c6:	e7e4      	b.n	8012892 <osThreadNew+0x52>

080128c8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80128c8:	b508      	push	{r3, lr}
 80128ca:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80128ce:	b922      	cbnz	r2, 80128da <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80128d0:	b108      	cbz	r0, 80128d6 <osDelay+0xe>
      vTaskDelay(ticks);
 80128d2:	f001 fc4f 	bl	8014174 <vTaskDelay>
    stat = osOK;
 80128d6:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80128d8:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 80128da:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 80128de:	e7fb      	b.n	80128d8 <osDelay+0x10>

080128e0 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80128e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80128e2:	4604      	mov	r4, r0
 80128e4:	460e      	mov	r6, r1
 80128e6:	4615      	mov	r5, r2
 80128e8:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80128ec:	b942      	cbnz	r2, 8012900 <osSemaphoreNew+0x20>
 80128ee:	b138      	cbz	r0, 8012900 <osSemaphoreNew+0x20>
 80128f0:	4288      	cmp	r0, r1
 80128f2:	d305      	bcc.n	8012900 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 80128f4:	b155      	cbz	r5, 801290c <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80128f6:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80128fa:	b12b      	cbz	r3, 8012908 <osSemaphoreNew+0x28>
 80128fc:	2f4f      	cmp	r7, #79	@ 0x4f
 80128fe:	d822      	bhi.n	8012946 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8012900:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8012902:	4620      	mov	r0, r4
 8012904:	b003      	add	sp, #12
 8012906:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8012908:	2f00      	cmp	r7, #0
 801290a:	d1f9      	bne.n	8012900 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 801290c:	2c01      	cmp	r4, #1
 801290e:	d00c      	beq.n	801292a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8012910:	4620      	mov	r0, r4
 8012912:	4631      	mov	r1, r6
 8012914:	f000 fd7e 	bl	8013414 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8012918:	4604      	mov	r4, r0
 801291a:	2800      	cmp	r0, #0
 801291c:	d0f0      	beq.n	8012900 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 801291e:	b985      	cbnz	r5, 8012942 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8012920:	4629      	mov	r1, r5
 8012922:	4620      	mov	r0, r4
 8012924:	f001 f89c 	bl	8013a60 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8012928:	e7eb      	b.n	8012902 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 801292a:	2203      	movs	r2, #3
 801292c:	2100      	movs	r1, #0
 801292e:	2001      	movs	r0, #1
 8012930:	f000 fd27 	bl	8013382 <xQueueGenericCreate>
 8012934:	e00e      	b.n	8012954 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8012936:	461a      	mov	r2, r3
 8012938:	f000 fd4a 	bl	80133d0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 801293c:	4604      	mov	r4, r0
 801293e:	2800      	cmp	r0, #0
 8012940:	d0de      	beq.n	8012900 <osSemaphoreNew+0x20>
          name = attr->name;
 8012942:	682d      	ldr	r5, [r5, #0]
 8012944:	e7ec      	b.n	8012920 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8012946:	2801      	cmp	r0, #1
 8012948:	d1f5      	bne.n	8012936 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 801294a:	2103      	movs	r1, #3
 801294c:	9100      	str	r1, [sp, #0]
 801294e:	4611      	mov	r1, r2
 8012950:	f000 fcc9 	bl	80132e6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8012954:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8012956:	2800      	cmp	r0, #0
 8012958:	d0d2      	beq.n	8012900 <osSemaphoreNew+0x20>
 801295a:	2e00      	cmp	r6, #0
 801295c:	d0df      	beq.n	801291e <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 801295e:	2300      	movs	r3, #0
 8012960:	461a      	mov	r2, r3
 8012962:	4619      	mov	r1, r3
 8012964:	f000 fd74 	bl	8013450 <xQueueGenericSend>
 8012968:	2801      	cmp	r0, #1
 801296a:	d0d8      	beq.n	801291e <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 801296c:	4620      	mov	r0, r4
 801296e:	f001 f8a1 	bl	8013ab4 <vQueueDelete>
      if (hSemaphore != NULL) {
 8012972:	e7c5      	b.n	8012900 <osSemaphoreNew+0x20>

08012974 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8012974:	b513      	push	{r0, r1, r4, lr}
 8012976:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8012978:	b328      	cbz	r0, 80129c6 <osSemaphoreAcquire+0x52>
 801297a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 801297e:	b1cb      	cbz	r3, 80129b4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8012980:	bb09      	cbnz	r1, 80129c6 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8012982:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8012984:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8012986:	f001 f81e 	bl	80139c6 <xQueueReceiveFromISR>
 801298a:	2801      	cmp	r0, #1
 801298c:	d003      	beq.n	8012996 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 801298e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8012992:	b002      	add	sp, #8
 8012994:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8012996:	9b01      	ldr	r3, [sp, #4]
 8012998:	b90b      	cbnz	r3, 801299e <osSemaphoreAcquire+0x2a>
  stat = osOK;
 801299a:	2000      	movs	r0, #0
 801299c:	e7f9      	b.n	8012992 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 801299e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80129a2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80129a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80129aa:	f3bf 8f4f 	dsb	sy
 80129ae:	f3bf 8f6f 	isb	sy
 80129b2:	e7f2      	b.n	801299a <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80129b4:	f000 ff4a 	bl	801384c <xQueueSemaphoreTake>
 80129b8:	2801      	cmp	r0, #1
 80129ba:	d0ee      	beq.n	801299a <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 80129bc:	2c00      	cmp	r4, #0
 80129be:	d0e6      	beq.n	801298e <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 80129c0:	f06f 0001 	mvn.w	r0, #1
 80129c4:	e7e5      	b.n	8012992 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 80129c6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80129ca:	e7e2      	b.n	8012992 <osSemaphoreAcquire+0x1e>

080129cc <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80129cc:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80129ce:	b318      	cbz	r0, 8012a18 <osSemaphoreRelease+0x4c>
 80129d0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80129d4:	b1cb      	cbz	r3, 8012a0a <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 80129d6:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80129d8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80129da:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80129dc:	f000 fe47 	bl	801366e <xQueueGiveFromISR>
 80129e0:	2801      	cmp	r0, #1
 80129e2:	d004      	beq.n	80129ee <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80129e4:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 80129e8:	b003      	add	sp, #12
 80129ea:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 80129ee:	9b01      	ldr	r3, [sp, #4]
 80129f0:	b14b      	cbz	r3, 8012a06 <osSemaphoreRelease+0x3a>
 80129f2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80129f6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80129fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80129fe:	f3bf 8f4f 	dsb	sy
 8012a02:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8012a06:	2000      	movs	r0, #0
 8012a08:	e7ee      	b.n	80129e8 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8012a0a:	461a      	mov	r2, r3
 8012a0c:	4619      	mov	r1, r3
 8012a0e:	f000 fd1f 	bl	8013450 <xQueueGenericSend>
 8012a12:	2801      	cmp	r0, #1
 8012a14:	d0f7      	beq.n	8012a06 <osSemaphoreRelease+0x3a>
 8012a16:	e7e5      	b.n	80129e4 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8012a18:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8012a1c:	e7e4      	b.n	80129e8 <osSemaphoreRelease+0x1c>

08012a1e <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8012a1e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012a20:	4605      	mov	r5, r0
 8012a22:	460e      	mov	r6, r1
 8012a24:	4614      	mov	r4, r2
 8012a26:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8012a2a:	b11f      	cbz	r7, 8012a34 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8012a2c:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8012a2e:	4628      	mov	r0, r5
 8012a30:	b003      	add	sp, #12
 8012a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8012a34:	2800      	cmp	r0, #0
 8012a36:	d0f9      	beq.n	8012a2c <osMessageQueueNew+0xe>
 8012a38:	2900      	cmp	r1, #0
 8012a3a:	d0f7      	beq.n	8012a2c <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8012a3c:	b1da      	cbz	r2, 8012a76 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8012a3e:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8012a42:	b183      	cbz	r3, 8012a66 <osMessageQueueNew+0x48>
 8012a44:	2a4f      	cmp	r2, #79	@ 0x4f
 8012a46:	d9f1      	bls.n	8012a2c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8012a48:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8012a4a:	2a00      	cmp	r2, #0
 8012a4c:	d0ee      	beq.n	8012a2c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8012a4e:	6966      	ldr	r6, [r4, #20]
 8012a50:	434d      	muls	r5, r1
 8012a52:	42ae      	cmp	r6, r5
 8012a54:	d3ea      	bcc.n	8012a2c <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8012a56:	9700      	str	r7, [sp, #0]
 8012a58:	f000 fc45 	bl	80132e6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8012a5c:	4605      	mov	r5, r0
 8012a5e:	2800      	cmp	r0, #0
 8012a60:	d0e4      	beq.n	8012a2c <osMessageQueueNew+0xe>
        name = attr->name;
 8012a62:	6824      	ldr	r4, [r4, #0]
 8012a64:	e011      	b.n	8012a8a <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8012a66:	2a00      	cmp	r2, #0
 8012a68:	d1e0      	bne.n	8012a2c <osMessageQueueNew+0xe>
 8012a6a:	6923      	ldr	r3, [r4, #16]
 8012a6c:	2b00      	cmp	r3, #0
 8012a6e:	d1dd      	bne.n	8012a2c <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8012a70:	6963      	ldr	r3, [r4, #20]
 8012a72:	2b00      	cmp	r3, #0
 8012a74:	d1da      	bne.n	8012a2c <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8012a76:	4628      	mov	r0, r5
 8012a78:	2200      	movs	r2, #0
 8012a7a:	4631      	mov	r1, r6
 8012a7c:	f000 fc81 	bl	8013382 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8012a80:	4605      	mov	r5, r0
 8012a82:	2800      	cmp	r0, #0
 8012a84:	d0d2      	beq.n	8012a2c <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8012a86:	2c00      	cmp	r4, #0
 8012a88:	d1eb      	bne.n	8012a62 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8012a8a:	4621      	mov	r1, r4
 8012a8c:	4628      	mov	r0, r5
 8012a8e:	f000 ffe7 	bl	8013a60 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8012a92:	e7cc      	b.n	8012a2e <osMessageQueueNew+0x10>

08012a94 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8012a94:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012a96:	461c      	mov	r4, r3
 8012a98:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8012a9c:	b1de      	cbz	r6, 8012ad6 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8012a9e:	b338      	cbz	r0, 8012af0 <osMessageQueuePut+0x5c>
 8012aa0:	b331      	cbz	r1, 8012af0 <osMessageQueuePut+0x5c>
 8012aa2:	bb2b      	cbnz	r3, 8012af0 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8012aa4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8012aa6:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8012aa8:	f000 fd84 	bl	80135b4 <xQueueGenericSendFromISR>
 8012aac:	2801      	cmp	r0, #1
 8012aae:	d003      	beq.n	8012ab8 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8012ab0:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8012ab4:	b002      	add	sp, #8
 8012ab6:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8012ab8:	9b01      	ldr	r3, [sp, #4]
 8012aba:	b90b      	cbnz	r3, 8012ac0 <osMessageQueuePut+0x2c>
  stat = osOK;
 8012abc:	2000      	movs	r0, #0
 8012abe:	e7f9      	b.n	8012ab4 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8012ac0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8012ac4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8012ac8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8012acc:	f3bf 8f4f 	dsb	sy
 8012ad0:	f3bf 8f6f 	isb	sy
 8012ad4:	e7f2      	b.n	8012abc <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8012ad6:	b158      	cbz	r0, 8012af0 <osMessageQueuePut+0x5c>
 8012ad8:	b151      	cbz	r1, 8012af0 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8012ada:	4633      	mov	r3, r6
 8012adc:	4622      	mov	r2, r4
 8012ade:	f000 fcb7 	bl	8013450 <xQueueGenericSend>
 8012ae2:	2801      	cmp	r0, #1
 8012ae4:	d0ea      	beq.n	8012abc <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8012ae6:	2c00      	cmp	r4, #0
 8012ae8:	d0e2      	beq.n	8012ab0 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8012aea:	f06f 0001 	mvn.w	r0, #1
 8012aee:	e7e1      	b.n	8012ab4 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8012af0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8012af4:	e7de      	b.n	8012ab4 <osMessageQueuePut+0x20>

08012af6 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8012af6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012af8:	461c      	mov	r4, r3
 8012afa:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8012afe:	b1db      	cbz	r3, 8012b38 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8012b00:	b330      	cbz	r0, 8012b50 <osMessageQueueGet+0x5a>
 8012b02:	b329      	cbz	r1, 8012b50 <osMessageQueueGet+0x5a>
 8012b04:	bb24      	cbnz	r4, 8012b50 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8012b06:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8012b08:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8012b0a:	f000 ff5c 	bl	80139c6 <xQueueReceiveFromISR>
 8012b0e:	2801      	cmp	r0, #1
 8012b10:	d003      	beq.n	8012b1a <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8012b12:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8012b16:	b003      	add	sp, #12
 8012b18:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8012b1a:	9b01      	ldr	r3, [sp, #4]
 8012b1c:	b90b      	cbnz	r3, 8012b22 <osMessageQueueGet+0x2c>
  stat = osOK;
 8012b1e:	2000      	movs	r0, #0
 8012b20:	e7f9      	b.n	8012b16 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8012b22:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8012b26:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8012b2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8012b2e:	f3bf 8f4f 	dsb	sy
 8012b32:	f3bf 8f6f 	isb	sy
 8012b36:	e7f2      	b.n	8012b1e <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8012b38:	b150      	cbz	r0, 8012b50 <osMessageQueueGet+0x5a>
 8012b3a:	b149      	cbz	r1, 8012b50 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8012b3c:	4622      	mov	r2, r4
 8012b3e:	f000 fde7 	bl	8013710 <xQueueReceive>
 8012b42:	2801      	cmp	r0, #1
 8012b44:	d0eb      	beq.n	8012b1e <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8012b46:	2c00      	cmp	r4, #0
 8012b48:	d0e3      	beq.n	8012b12 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8012b4a:	f06f 0001 	mvn.w	r0, #1
 8012b4e:	e7e2      	b.n	8012b16 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8012b50:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8012b54:	e7df      	b.n	8012b16 <osMessageQueueGet+0x20>
	...

08012b58 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8012b58:	4b03      	ldr	r3, [pc, #12]	@ (8012b68 <vApplicationGetIdleTaskMemory+0x10>)
 8012b5a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8012b5c:	4b03      	ldr	r3, [pc, #12]	@ (8012b6c <vApplicationGetIdleTaskMemory+0x14>)
 8012b5e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8012b60:	2380      	movs	r3, #128	@ 0x80
 8012b62:	6013      	str	r3, [r2, #0]
}
 8012b64:	4770      	bx	lr
 8012b66:	bf00      	nop
 8012b68:	20003184 	.word	0x20003184
 8012b6c:	20002f84 	.word	0x20002f84

08012b70 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8012b70:	4b03      	ldr	r3, [pc, #12]	@ (8012b80 <vApplicationGetTimerTaskMemory+0x10>)
 8012b72:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8012b74:	4b03      	ldr	r3, [pc, #12]	@ (8012b84 <vApplicationGetTimerTaskMemory+0x14>)
 8012b76:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8012b78:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8012b7c:	6013      	str	r3, [r2, #0]
}
 8012b7e:	4770      	bx	lr
 8012b80:	20002f24 	.word	0x20002f24
 8012b84:	20002b24 	.word	0x20002b24

08012b88 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8012b88:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8012b8a:	4b10      	ldr	r3, [pc, #64]	@ (8012bcc <prvInsertBlockIntoFreeList+0x44>)
 8012b8c:	461a      	mov	r2, r3
 8012b8e:	681b      	ldr	r3, [r3, #0]
 8012b90:	4283      	cmp	r3, r0
 8012b92:	d3fb      	bcc.n	8012b8c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8012b94:	6854      	ldr	r4, [r2, #4]
 8012b96:	1911      	adds	r1, r2, r4
 8012b98:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8012b9a:	bf01      	itttt	eq
 8012b9c:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8012b9e:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8012ba0:	1909      	addeq	r1, r1, r4
 8012ba2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8012ba4:	6844      	ldr	r4, [r0, #4]
 8012ba6:	1901      	adds	r1, r0, r4
 8012ba8:	428b      	cmp	r3, r1
 8012baa:	d10c      	bne.n	8012bc6 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8012bac:	4908      	ldr	r1, [pc, #32]	@ (8012bd0 <prvInsertBlockIntoFreeList+0x48>)
 8012bae:	6809      	ldr	r1, [r1, #0]
 8012bb0:	428b      	cmp	r3, r1
 8012bb2:	d003      	beq.n	8012bbc <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8012bb4:	6859      	ldr	r1, [r3, #4]
 8012bb6:	4421      	add	r1, r4
 8012bb8:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8012bba:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8012bbc:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8012bbe:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8012bc0:	bf18      	it	ne
 8012bc2:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8012bc4:	bd10      	pop	{r4, pc}
 8012bc6:	4619      	mov	r1, r3
 8012bc8:	e7f8      	b.n	8012bbc <prvInsertBlockIntoFreeList+0x34>
 8012bca:	bf00      	nop
 8012bcc:	20003200 	.word	0x20003200
 8012bd0:	200031fc 	.word	0x200031fc

08012bd4 <pvPortMalloc>:
{
 8012bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bd8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8012bda:	f001 f9b3 	bl	8013f44 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8012bde:	4942      	ldr	r1, [pc, #264]	@ (8012ce8 <pvPortMalloc+0x114>)
 8012be0:	4d42      	ldr	r5, [pc, #264]	@ (8012cec <pvPortMalloc+0x118>)
 8012be2:	680b      	ldr	r3, [r1, #0]
 8012be4:	bb0b      	cbnz	r3, 8012c2a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8012be6:	4a42      	ldr	r2, [pc, #264]	@ (8012cf0 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8012be8:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8012bea:	bf1f      	itttt	ne
 8012bec:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8012bee:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8012bf2:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 8012bf6:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8012bf8:	bf0c      	ite	eq
 8012bfa:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8012bfe:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8012c00:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8012c02:	4e3c      	ldr	r6, [pc, #240]	@ (8012cf4 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8012c04:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8012c06:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8012c0a:	2000      	movs	r0, #0
 8012c0c:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8012c0e:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8012c10:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8012c14:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8012c16:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8012c1a:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8012c1c:	4b36      	ldr	r3, [pc, #216]	@ (8012cf8 <pvPortMalloc+0x124>)
 8012c1e:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8012c20:	4b36      	ldr	r3, [pc, #216]	@ (8012cfc <pvPortMalloc+0x128>)
 8012c22:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8012c24:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8012c28:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8012c2a:	682e      	ldr	r6, [r5, #0]
 8012c2c:	4226      	tst	r6, r4
 8012c2e:	d155      	bne.n	8012cdc <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8012c30:	2c00      	cmp	r4, #0
 8012c32:	d046      	beq.n	8012cc2 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8012c34:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8012c38:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8012c3a:	bf1c      	itt	ne
 8012c3c:	f023 0307 	bicne.w	r3, r3, #7
 8012c40:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8012c42:	2b00      	cmp	r3, #0
 8012c44:	d04a      	beq.n	8012cdc <pvPortMalloc+0x108>
 8012c46:	4f2d      	ldr	r7, [pc, #180]	@ (8012cfc <pvPortMalloc+0x128>)
 8012c48:	683c      	ldr	r4, [r7, #0]
 8012c4a:	429c      	cmp	r4, r3
 8012c4c:	d346      	bcc.n	8012cdc <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8012c4e:	4a29      	ldr	r2, [pc, #164]	@ (8012cf4 <pvPortMalloc+0x120>)
 8012c50:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8012c52:	6868      	ldr	r0, [r5, #4]
 8012c54:	4298      	cmp	r0, r3
 8012c56:	d204      	bcs.n	8012c62 <pvPortMalloc+0x8e>
 8012c58:	f8d5 c000 	ldr.w	ip, [r5]
 8012c5c:	f1bc 0f00 	cmp.w	ip, #0
 8012c60:	d115      	bne.n	8012c8e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8012c62:	6809      	ldr	r1, [r1, #0]
 8012c64:	42a9      	cmp	r1, r5
 8012c66:	d039      	beq.n	8012cdc <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8012c68:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8012c6a:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8012c6e:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8012c70:	1ac2      	subs	r2, r0, r3
 8012c72:	2a10      	cmp	r2, #16
 8012c74:	d912      	bls.n	8012c9c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8012c76:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8012c78:	0741      	lsls	r1, r0, #29
 8012c7a:	d00b      	beq.n	8012c94 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8012c7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012c80:	f383 8811 	msr	BASEPRI, r3
 8012c84:	f3bf 8f6f 	isb	sy
 8012c88:	f3bf 8f4f 	dsb	sy
 8012c8c:	e7fe      	b.n	8012c8c <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 8012c8e:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 8012c90:	4665      	mov	r5, ip
 8012c92:	e7de      	b.n	8012c52 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8012c94:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8012c96:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8012c98:	f7ff ff76 	bl	8012b88 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8012c9c:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8012c9e:	4916      	ldr	r1, [pc, #88]	@ (8012cf8 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8012ca0:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8012ca2:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8012ca4:	4a16      	ldr	r2, [pc, #88]	@ (8012d00 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8012ca6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8012ca8:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8012caa:	2300      	movs	r3, #0
 8012cac:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8012cae:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8012cb0:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8012cb2:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8012cb4:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8012cb8:	bf38      	it	cc
 8012cba:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8012cbc:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8012cbe:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8012cc2:	f001 f9e3 	bl	801408c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8012cc6:	0763      	lsls	r3, r4, #29
 8012cc8:	d00a      	beq.n	8012ce0 <pvPortMalloc+0x10c>
 8012cca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012cce:	f383 8811 	msr	BASEPRI, r3
 8012cd2:	f3bf 8f6f 	isb	sy
 8012cd6:	f3bf 8f4f 	dsb	sy
 8012cda:	e7fe      	b.n	8012cda <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8012cdc:	2400      	movs	r4, #0
 8012cde:	e7f0      	b.n	8012cc2 <pvPortMalloc+0xee>
}
 8012ce0:	4620      	mov	r0, r4
 8012ce2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ce6:	bf00      	nop
 8012ce8:	200031fc 	.word	0x200031fc
 8012cec:	200031e8 	.word	0x200031e8
 8012cf0:	20003208 	.word	0x20003208
 8012cf4:	20003200 	.word	0x20003200
 8012cf8:	200031f4 	.word	0x200031f4
 8012cfc:	200031f8 	.word	0x200031f8
 8012d00:	200031f0 	.word	0x200031f0

08012d04 <vPortFree>:
{
 8012d04:	b510      	push	{r4, lr}
	if( pv != NULL )
 8012d06:	4604      	mov	r4, r0
 8012d08:	b390      	cbz	r0, 8012d70 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8012d0a:	4a1a      	ldr	r2, [pc, #104]	@ (8012d74 <vPortFree+0x70>)
 8012d0c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8012d10:	6812      	ldr	r2, [r2, #0]
 8012d12:	4213      	tst	r3, r2
 8012d14:	d108      	bne.n	8012d28 <vPortFree+0x24>
 8012d16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012d1a:	f383 8811 	msr	BASEPRI, r3
 8012d1e:	f3bf 8f6f 	isb	sy
 8012d22:	f3bf 8f4f 	dsb	sy
 8012d26:	e7fe      	b.n	8012d26 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8012d28:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8012d2c:	b141      	cbz	r1, 8012d40 <vPortFree+0x3c>
 8012d2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012d32:	f383 8811 	msr	BASEPRI, r3
 8012d36:	f3bf 8f6f 	isb	sy
 8012d3a:	f3bf 8f4f 	dsb	sy
 8012d3e:	e7fe      	b.n	8012d3e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8012d40:	ea23 0302 	bic.w	r3, r3, r2
 8012d44:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8012d48:	f001 f8fc 	bl	8013f44 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8012d4c:	4a0a      	ldr	r2, [pc, #40]	@ (8012d78 <vPortFree+0x74>)
 8012d4e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012d52:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8012d54:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8012d58:	440b      	add	r3, r1
 8012d5a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8012d5c:	f7ff ff14 	bl	8012b88 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8012d60:	4a06      	ldr	r2, [pc, #24]	@ (8012d7c <vPortFree+0x78>)
 8012d62:	6813      	ldr	r3, [r2, #0]
}
 8012d64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8012d68:	3301      	adds	r3, #1
 8012d6a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8012d6c:	f001 b98e 	b.w	801408c <xTaskResumeAll>
}
 8012d70:	bd10      	pop	{r4, pc}
 8012d72:	bf00      	nop
 8012d74:	200031e8 	.word	0x200031e8
 8012d78:	200031f8 	.word	0x200031f8
 8012d7c:	200031ec 	.word	0x200031ec

08012d80 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8012d80:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8012d84:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8012d88:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8012d8c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8012d8e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8012d90:	2300      	movs	r3, #0
 8012d92:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8012d94:	4770      	bx	lr

08012d96 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8012d96:	2300      	movs	r3, #0
 8012d98:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8012d9a:	4770      	bx	lr

08012d9c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8012d9c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8012d9e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8012da0:	689a      	ldr	r2, [r3, #8]
 8012da2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8012da4:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8012da6:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8012da8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8012daa:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8012dac:	3301      	adds	r3, #1
 8012dae:	6003      	str	r3, [r0, #0]
}
 8012db0:	4770      	bx	lr

08012db2 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8012db2:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8012db4:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8012db6:	1c63      	adds	r3, r4, #1
 8012db8:	d10a      	bne.n	8012dd0 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8012dba:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8012dbc:	685a      	ldr	r2, [r3, #4]
 8012dbe:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8012dc0:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8012dc2:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8012dc4:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8012dc6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8012dc8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8012dca:	3301      	adds	r3, #1
 8012dcc:	6003      	str	r3, [r0, #0]
}
 8012dce:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8012dd0:	f100 0208 	add.w	r2, r0, #8
 8012dd4:	4613      	mov	r3, r2
 8012dd6:	6852      	ldr	r2, [r2, #4]
 8012dd8:	6815      	ldr	r5, [r2, #0]
 8012dda:	42a5      	cmp	r5, r4
 8012ddc:	d9fa      	bls.n	8012dd4 <vListInsert+0x22>
 8012dde:	e7ed      	b.n	8012dbc <vListInsert+0xa>

08012de0 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8012de0:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8012de4:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8012de6:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8012de8:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8012dea:	6859      	ldr	r1, [r3, #4]
 8012dec:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8012dee:	bf08      	it	eq
 8012df0:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8012df2:	2200      	movs	r2, #0
 8012df4:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8012df6:	681a      	ldr	r2, [r3, #0]
 8012df8:	3a01      	subs	r2, #1
 8012dfa:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8012dfc:	6818      	ldr	r0, [r3, #0]
}
 8012dfe:	4770      	bx	lr

08012e00 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8012e00:	4808      	ldr	r0, [pc, #32]	@ (8012e24 <prvPortStartFirstTask+0x24>)
 8012e02:	6800      	ldr	r0, [r0, #0]
 8012e04:	6800      	ldr	r0, [r0, #0]
 8012e06:	f380 8808 	msr	MSP, r0
 8012e0a:	f04f 0000 	mov.w	r0, #0
 8012e0e:	f380 8814 	msr	CONTROL, r0
 8012e12:	b662      	cpsie	i
 8012e14:	b661      	cpsie	f
 8012e16:	f3bf 8f4f 	dsb	sy
 8012e1a:	f3bf 8f6f 	isb	sy
 8012e1e:	df00      	svc	0
 8012e20:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8012e22:	0000      	.short	0x0000
 8012e24:	e000ed08 	.word	0xe000ed08

08012e28 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8012e28:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8012e38 <vPortEnableVFP+0x10>
 8012e2c:	6801      	ldr	r1, [r0, #0]
 8012e2e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8012e32:	6001      	str	r1, [r0, #0]
 8012e34:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8012e36:	0000      	.short	0x0000
 8012e38:	e000ed88 	.word	0xe000ed88

08012e3c <prvTaskExitError>:
{
 8012e3c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8012e3e:	2300      	movs	r3, #0
 8012e40:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8012e42:	4b0d      	ldr	r3, [pc, #52]	@ (8012e78 <prvTaskExitError+0x3c>)
 8012e44:	681b      	ldr	r3, [r3, #0]
 8012e46:	3301      	adds	r3, #1
 8012e48:	d008      	beq.n	8012e5c <prvTaskExitError+0x20>
 8012e4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012e4e:	f383 8811 	msr	BASEPRI, r3
 8012e52:	f3bf 8f6f 	isb	sy
 8012e56:	f3bf 8f4f 	dsb	sy
 8012e5a:	e7fe      	b.n	8012e5a <prvTaskExitError+0x1e>
 8012e5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012e60:	f383 8811 	msr	BASEPRI, r3
 8012e64:	f3bf 8f6f 	isb	sy
 8012e68:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8012e6c:	9b01      	ldr	r3, [sp, #4]
 8012e6e:	2b00      	cmp	r3, #0
 8012e70:	d0fc      	beq.n	8012e6c <prvTaskExitError+0x30>
}
 8012e72:	b002      	add	sp, #8
 8012e74:	4770      	bx	lr
 8012e76:	bf00      	nop
 8012e78:	20000080 	.word	0x20000080

08012e7c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8012e7c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8012e80:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8012e84:	4b07      	ldr	r3, [pc, #28]	@ (8012ea4 <pxPortInitialiseStack+0x28>)
 8012e86:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8012e8a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8012e8e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8012e92:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8012e96:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8012e9a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8012e9e:	3844      	subs	r0, #68	@ 0x44
 8012ea0:	4770      	bx	lr
 8012ea2:	bf00      	nop
 8012ea4:	08012e3d 	.word	0x08012e3d
	...

08012eb0 <SVC_Handler>:
	__asm volatile (
 8012eb0:	4b07      	ldr	r3, [pc, #28]	@ (8012ed0 <pxCurrentTCBConst2>)
 8012eb2:	6819      	ldr	r1, [r3, #0]
 8012eb4:	6808      	ldr	r0, [r1, #0]
 8012eb6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012eba:	f380 8809 	msr	PSP, r0
 8012ebe:	f3bf 8f6f 	isb	sy
 8012ec2:	f04f 0000 	mov.w	r0, #0
 8012ec6:	f380 8811 	msr	BASEPRI, r0
 8012eca:	4770      	bx	lr
 8012ecc:	f3af 8000 	nop.w

08012ed0 <pxCurrentTCBConst2>:
 8012ed0:	20013748 	.word	0x20013748

08012ed4 <vPortEnterCritical>:
 8012ed4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012ed8:	f383 8811 	msr	BASEPRI, r3
 8012edc:	f3bf 8f6f 	isb	sy
 8012ee0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8012ee4:	4a0a      	ldr	r2, [pc, #40]	@ (8012f10 <vPortEnterCritical+0x3c>)
 8012ee6:	6813      	ldr	r3, [r2, #0]
 8012ee8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8012eea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8012eec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8012eee:	d10e      	bne.n	8012f0e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8012ef0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8012ef4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8012ef8:	b2db      	uxtb	r3, r3
 8012efa:	b143      	cbz	r3, 8012f0e <vPortEnterCritical+0x3a>
 8012efc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012f00:	f383 8811 	msr	BASEPRI, r3
 8012f04:	f3bf 8f6f 	isb	sy
 8012f08:	f3bf 8f4f 	dsb	sy
 8012f0c:	e7fe      	b.n	8012f0c <vPortEnterCritical+0x38>
}
 8012f0e:	4770      	bx	lr
 8012f10:	20000080 	.word	0x20000080

08012f14 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8012f14:	4a08      	ldr	r2, [pc, #32]	@ (8012f38 <vPortExitCritical+0x24>)
 8012f16:	6813      	ldr	r3, [r2, #0]
 8012f18:	b943      	cbnz	r3, 8012f2c <vPortExitCritical+0x18>
 8012f1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012f1e:	f383 8811 	msr	BASEPRI, r3
 8012f22:	f3bf 8f6f 	isb	sy
 8012f26:	f3bf 8f4f 	dsb	sy
 8012f2a:	e7fe      	b.n	8012f2a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8012f2c:	3b01      	subs	r3, #1
 8012f2e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8012f30:	b90b      	cbnz	r3, 8012f36 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8012f32:	f383 8811 	msr	BASEPRI, r3
}
 8012f36:	4770      	bx	lr
 8012f38:	20000080 	.word	0x20000080
 8012f3c:	00000000 	.word	0x00000000

08012f40 <PendSV_Handler>:
	__asm volatile
 8012f40:	f3ef 8009 	mrs	r0, PSP
 8012f44:	f3bf 8f6f 	isb	sy
 8012f48:	4b15      	ldr	r3, [pc, #84]	@ (8012fa0 <pxCurrentTCBConst>)
 8012f4a:	681a      	ldr	r2, [r3, #0]
 8012f4c:	f01e 0f10 	tst.w	lr, #16
 8012f50:	bf08      	it	eq
 8012f52:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8012f56:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f5a:	6010      	str	r0, [r2, #0]
 8012f5c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8012f60:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8012f64:	f380 8811 	msr	BASEPRI, r0
 8012f68:	f3bf 8f4f 	dsb	sy
 8012f6c:	f3bf 8f6f 	isb	sy
 8012f70:	f001 f924 	bl	80141bc <vTaskSwitchContext>
 8012f74:	f04f 0000 	mov.w	r0, #0
 8012f78:	f380 8811 	msr	BASEPRI, r0
 8012f7c:	bc09      	pop	{r0, r3}
 8012f7e:	6819      	ldr	r1, [r3, #0]
 8012f80:	6808      	ldr	r0, [r1, #0]
 8012f82:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f86:	f01e 0f10 	tst.w	lr, #16
 8012f8a:	bf08      	it	eq
 8012f8c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8012f90:	f380 8809 	msr	PSP, r0
 8012f94:	f3bf 8f6f 	isb	sy
 8012f98:	4770      	bx	lr
 8012f9a:	bf00      	nop
 8012f9c:	f3af 8000 	nop.w

08012fa0 <pxCurrentTCBConst>:
 8012fa0:	20013748 	.word	0x20013748

08012fa4 <xPortSysTickHandler>:
{
 8012fa4:	b508      	push	{r3, lr}
	__asm volatile
 8012fa6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8012faa:	f383 8811 	msr	BASEPRI, r3
 8012fae:	f3bf 8f6f 	isb	sy
 8012fb2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8012fb6:	f000 ffd3 	bl	8013f60 <xTaskIncrementTick>
 8012fba:	b128      	cbz	r0, 8012fc8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8012fbc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8012fc0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8012fc4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8012fc8:	2300      	movs	r3, #0
 8012fca:	f383 8811 	msr	BASEPRI, r3
}
 8012fce:	bd08      	pop	{r3, pc}

08012fd0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8012fd0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8012fd4:	2300      	movs	r3, #0
 8012fd6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8012fd8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8012fda:	4b05      	ldr	r3, [pc, #20]	@ (8012ff0 <vPortSetupTimerInterrupt+0x20>)
 8012fdc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8012fe0:	681b      	ldr	r3, [r3, #0]
 8012fe2:	fbb3 f3f1 	udiv	r3, r3, r1
 8012fe6:	3b01      	subs	r3, #1
 8012fe8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8012fea:	2307      	movs	r3, #7
 8012fec:	6113      	str	r3, [r2, #16]
}
 8012fee:	4770      	bx	lr
 8012ff0:	20000074 	.word	0x20000074

08012ff4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8012ff4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8012ff8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8012ffa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8012ffe:	4a38      	ldr	r2, [pc, #224]	@ (80130e0 <xPortStartScheduler+0xec>)
 8013000:	4291      	cmp	r1, r2
 8013002:	d108      	bne.n	8013016 <xPortStartScheduler+0x22>
	__asm volatile
 8013004:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013008:	f383 8811 	msr	BASEPRI, r3
 801300c:	f3bf 8f6f 	isb	sy
 8013010:	f3bf 8f4f 	dsb	sy
 8013014:	e7fe      	b.n	8013014 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8013016:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 801301a:	4b32      	ldr	r3, [pc, #200]	@ (80130e4 <xPortStartScheduler+0xf0>)
 801301c:	429a      	cmp	r2, r3
 801301e:	d108      	bne.n	8013032 <xPortStartScheduler+0x3e>
 8013020:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013024:	f383 8811 	msr	BASEPRI, r3
 8013028:	f3bf 8f6f 	isb	sy
 801302c:	f3bf 8f4f 	dsb	sy
 8013030:	e7fe      	b.n	8013030 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8013032:	4b2d      	ldr	r3, [pc, #180]	@ (80130e8 <xPortStartScheduler+0xf4>)
 8013034:	781a      	ldrb	r2, [r3, #0]
 8013036:	b2d2      	uxtb	r2, r2
 8013038:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801303a:	22ff      	movs	r2, #255	@ 0xff
 801303c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 801303e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8013040:	4a2a      	ldr	r2, [pc, #168]	@ (80130ec <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8013042:	b2db      	uxtb	r3, r3
 8013044:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8013048:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801304c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8013050:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8013052:	4a27      	ldr	r2, [pc, #156]	@ (80130f0 <xPortStartScheduler+0xfc>)
 8013054:	2307      	movs	r3, #7
 8013056:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8013058:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 801305c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801305e:	0609      	lsls	r1, r1, #24
 8013060:	d40a      	bmi.n	8013078 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8013062:	2b03      	cmp	r3, #3
 8013064:	d011      	beq.n	801308a <xPortStartScheduler+0x96>
 8013066:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801306a:	f383 8811 	msr	BASEPRI, r3
 801306e:	f3bf 8f6f 	isb	sy
 8013072:	f3bf 8f4f 	dsb	sy
 8013076:	e7fe      	b.n	8013076 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8013078:	3b01      	subs	r3, #1
 801307a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 801307c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8013080:	005b      	lsls	r3, r3, #1
 8013082:	b2db      	uxtb	r3, r3
 8013084:	f88d 3003 	strb.w	r3, [sp, #3]
 8013088:	e7e6      	b.n	8013058 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 801308a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 801308e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8013090:	9b01      	ldr	r3, [sp, #4]
 8013092:	4a15      	ldr	r2, [pc, #84]	@ (80130e8 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8013094:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8013098:	b2db      	uxtb	r3, r3
 801309a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 801309c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80130a0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80130a4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80130a8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80130ac:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80130b0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 80130b4:	f7ff ff8c 	bl	8012fd0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80130b8:	4b0e      	ldr	r3, [pc, #56]	@ (80130f4 <xPortStartScheduler+0x100>)
 80130ba:	2500      	movs	r5, #0
 80130bc:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80130be:	f7ff feb3 	bl	8012e28 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80130c2:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 80130c6:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80130ca:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 80130ce:	f7ff fe97 	bl	8012e00 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80130d2:	f001 f873 	bl	80141bc <vTaskSwitchContext>
	prvTaskExitError();
 80130d6:	f7ff feb1 	bl	8012e3c <prvTaskExitError>
}
 80130da:	4628      	mov	r0, r5
 80130dc:	b003      	add	sp, #12
 80130de:	bd30      	pop	{r4, r5, pc}
 80130e0:	410fc271 	.word	0x410fc271
 80130e4:	410fc270 	.word	0x410fc270
 80130e8:	e000e400 	.word	0xe000e400
 80130ec:	2001320c 	.word	0x2001320c
 80130f0:	20013208 	.word	0x20013208
 80130f4:	20000080 	.word	0x20000080

080130f8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80130f8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80130fc:	2b0f      	cmp	r3, #15
 80130fe:	d90e      	bls.n	801311e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8013100:	4a11      	ldr	r2, [pc, #68]	@ (8013148 <vPortValidateInterruptPriority+0x50>)
 8013102:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8013104:	4a11      	ldr	r2, [pc, #68]	@ (801314c <vPortValidateInterruptPriority+0x54>)
 8013106:	7812      	ldrb	r2, [r2, #0]
 8013108:	429a      	cmp	r2, r3
 801310a:	d908      	bls.n	801311e <vPortValidateInterruptPriority+0x26>
 801310c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013110:	f383 8811 	msr	BASEPRI, r3
 8013114:	f3bf 8f6f 	isb	sy
 8013118:	f3bf 8f4f 	dsb	sy
 801311c:	e7fe      	b.n	801311c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 801311e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013122:	4a0b      	ldr	r2, [pc, #44]	@ (8013150 <vPortValidateInterruptPriority+0x58>)
 8013124:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8013128:	6812      	ldr	r2, [r2, #0]
 801312a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 801312e:	4293      	cmp	r3, r2
 8013130:	d908      	bls.n	8013144 <vPortValidateInterruptPriority+0x4c>
 8013132:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013136:	f383 8811 	msr	BASEPRI, r3
 801313a:	f3bf 8f6f 	isb	sy
 801313e:	f3bf 8f4f 	dsb	sy
 8013142:	e7fe      	b.n	8013142 <vPortValidateInterruptPriority+0x4a>
	}
 8013144:	4770      	bx	lr
 8013146:	bf00      	nop
 8013148:	e000e3f0 	.word	0xe000e3f0
 801314c:	2001320c 	.word	0x2001320c
 8013150:	20013208 	.word	0x20013208

08013154 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8013154:	b510      	push	{r4, lr}
 8013156:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8013158:	f7ff febc 	bl	8012ed4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 801315c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 801315e:	f7ff fed9 	bl	8012f14 <vPortExitCritical>

	return xReturn;
}
 8013162:	fab4 f084 	clz	r0, r4
 8013166:	0940      	lsrs	r0, r0, #5
 8013168:	bd10      	pop	{r4, pc}

0801316a <prvCopyDataToQueue>:
{
 801316a:	b570      	push	{r4, r5, r6, lr}
 801316c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 801316e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8013170:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8013172:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8013174:	b942      	cbnz	r2, 8013188 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8013176:	6806      	ldr	r6, [r0, #0]
 8013178:	b99e      	cbnz	r6, 80131a2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 801317a:	6880      	ldr	r0, [r0, #8]
 801317c:	f001 f96c 	bl	8014458 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8013180:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8013182:	3501      	adds	r5, #1
 8013184:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8013186:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8013188:	b96e      	cbnz	r6, 80131a6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801318a:	6840      	ldr	r0, [r0, #4]
 801318c:	f01b fa47 	bl	802e61e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8013190:	6863      	ldr	r3, [r4, #4]
 8013192:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8013194:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8013196:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8013198:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 801319a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 801319c:	bf24      	itt	cs
 801319e:	6823      	ldrcs	r3, [r4, #0]
 80131a0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80131a2:	2000      	movs	r0, #0
 80131a4:	e7ed      	b.n	8013182 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80131a6:	68c0      	ldr	r0, [r0, #12]
 80131a8:	f01b fa39 	bl	802e61e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80131ac:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80131ae:	68e3      	ldr	r3, [r4, #12]
 80131b0:	4251      	negs	r1, r2
 80131b2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80131b4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80131b6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80131b8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80131ba:	bf3e      	ittt	cc
 80131bc:	68a3      	ldrcc	r3, [r4, #8]
 80131be:	185b      	addcc	r3, r3, r1
 80131c0:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80131c2:	2e02      	cmp	r6, #2
 80131c4:	d1ed      	bne.n	80131a2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80131c6:	b10d      	cbz	r5, 80131cc <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 80131c8:	3d01      	subs	r5, #1
 80131ca:	e7ea      	b.n	80131a2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 80131cc:	4628      	mov	r0, r5
 80131ce:	e7d8      	b.n	8013182 <prvCopyDataToQueue+0x18>

080131d0 <prvCopyDataFromQueue>:
{
 80131d0:	4603      	mov	r3, r0
 80131d2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80131d4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 80131d6:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80131d8:	b16a      	cbz	r2, 80131f6 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80131da:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80131dc:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80131de:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80131e0:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80131e2:	bf28      	it	cs
 80131e4:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80131e6:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80131e8:	bf28      	it	cs
 80131ea:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80131ec:	68d9      	ldr	r1, [r3, #12]
}
 80131ee:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80131f2:	f01b ba14 	b.w	802e61e <memcpy>
}
 80131f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80131fa:	4770      	bx	lr

080131fc <prvUnlockQueue>:
{
 80131fc:	b570      	push	{r4, r5, r6, lr}
 80131fe:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8013200:	f7ff fe68 	bl	8012ed4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8013204:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013208:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 801320c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801320e:	2d00      	cmp	r5, #0
 8013210:	dd01      	ble.n	8013216 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8013212:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013214:	b9b3      	cbnz	r3, 8013244 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8013216:	23ff      	movs	r3, #255	@ 0xff
 8013218:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 801321c:	f7ff fe7a 	bl	8012f14 <vPortExitCritical>
	taskENTER_CRITICAL();
 8013220:	f7ff fe58 	bl	8012ed4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8013224:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8013228:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 801322c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801322e:	2d00      	cmp	r5, #0
 8013230:	dd01      	ble.n	8013236 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8013232:	6923      	ldr	r3, [r4, #16]
 8013234:	b97b      	cbnz	r3, 8013256 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8013236:	23ff      	movs	r3, #255	@ 0xff
 8013238:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 801323c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8013240:	f7ff be68 	b.w	8012f14 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013244:	4630      	mov	r0, r6
 8013246:	f001 f82b 	bl	80142a0 <xTaskRemoveFromEventList>
 801324a:	b108      	cbz	r0, 8013250 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 801324c:	f001 f8b0 	bl	80143b0 <vTaskMissedYield>
			--cTxLock;
 8013250:	3d01      	subs	r5, #1
 8013252:	b26d      	sxtb	r5, r5
 8013254:	e7db      	b.n	801320e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8013256:	4630      	mov	r0, r6
 8013258:	f001 f822 	bl	80142a0 <xTaskRemoveFromEventList>
 801325c:	b108      	cbz	r0, 8013262 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 801325e:	f001 f8a7 	bl	80143b0 <vTaskMissedYield>
				--cRxLock;
 8013262:	3d01      	subs	r5, #1
 8013264:	b26d      	sxtb	r5, r5
 8013266:	e7e2      	b.n	801322e <prvUnlockQueue+0x32>

08013268 <xQueueGenericReset>:
{
 8013268:	b538      	push	{r3, r4, r5, lr}
 801326a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 801326c:	4604      	mov	r4, r0
 801326e:	b940      	cbnz	r0, 8013282 <xQueueGenericReset+0x1a>
 8013270:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013274:	f383 8811 	msr	BASEPRI, r3
 8013278:	f3bf 8f6f 	isb	sy
 801327c:	f3bf 8f4f 	dsb	sy
 8013280:	e7fe      	b.n	8013280 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8013282:	f7ff fe27 	bl	8012ed4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8013286:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 801328a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 801328c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801328e:	434b      	muls	r3, r1
 8013290:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8013292:	1a5b      	subs	r3, r3, r1
 8013294:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8013296:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8013298:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801329a:	2000      	movs	r0, #0
 801329c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801329e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 80132a0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80132a4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 80132a8:	b9a5      	cbnz	r5, 80132d4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80132aa:	6923      	ldr	r3, [r4, #16]
 80132ac:	b173      	cbz	r3, 80132cc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80132ae:	f104 0010 	add.w	r0, r4, #16
 80132b2:	f000 fff5 	bl	80142a0 <xTaskRemoveFromEventList>
 80132b6:	b148      	cbz	r0, 80132cc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80132b8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80132bc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80132c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80132c4:	f3bf 8f4f 	dsb	sy
 80132c8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80132cc:	f7ff fe22 	bl	8012f14 <vPortExitCritical>
}
 80132d0:	2001      	movs	r0, #1
 80132d2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80132d4:	f104 0010 	add.w	r0, r4, #16
 80132d8:	f7ff fd52 	bl	8012d80 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80132dc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80132e0:	f7ff fd4e 	bl	8012d80 <vListInitialise>
 80132e4:	e7f2      	b.n	80132cc <xQueueGenericReset+0x64>

080132e6 <xQueueGenericCreateStatic>:
	{
 80132e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80132e8:	460d      	mov	r5, r1
 80132ea:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80132ec:	b940      	cbnz	r0, 8013300 <xQueueGenericCreateStatic+0x1a>
 80132ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80132f2:	f383 8811 	msr	BASEPRI, r3
 80132f6:	f3bf 8f6f 	isb	sy
 80132fa:	f3bf 8f4f 	dsb	sy
 80132fe:	e7fe      	b.n	80132fe <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8013300:	b943      	cbnz	r3, 8013314 <xQueueGenericCreateStatic+0x2e>
 8013302:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013306:	f383 8811 	msr	BASEPRI, r3
 801330a:	f3bf 8f6f 	isb	sy
 801330e:	f3bf 8f4f 	dsb	sy
 8013312:	e7fe      	b.n	8013312 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8013314:	b14a      	cbz	r2, 801332a <xQueueGenericCreateStatic+0x44>
 8013316:	b991      	cbnz	r1, 801333e <xQueueGenericCreateStatic+0x58>
 8013318:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801331c:	f383 8811 	msr	BASEPRI, r3
 8013320:	f3bf 8f6f 	isb	sy
 8013324:	f3bf 8f4f 	dsb	sy
 8013328:	e7fe      	b.n	8013328 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 801332a:	b141      	cbz	r1, 801333e <xQueueGenericCreateStatic+0x58>
 801332c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013330:	f383 8811 	msr	BASEPRI, r3
 8013334:	f3bf 8f6f 	isb	sy
 8013338:	f3bf 8f4f 	dsb	sy
 801333c:	e7fe      	b.n	801333c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 801333e:	2350      	movs	r3, #80	@ 0x50
 8013340:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8013342:	9b01      	ldr	r3, [sp, #4]
 8013344:	2b50      	cmp	r3, #80	@ 0x50
 8013346:	d008      	beq.n	801335a <xQueueGenericCreateStatic+0x74>
 8013348:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801334c:	f383 8811 	msr	BASEPRI, r3
 8013350:	f3bf 8f6f 	isb	sy
 8013354:	f3bf 8f4f 	dsb	sy
 8013358:	e7fe      	b.n	8013358 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 801335a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 801335c:	2d00      	cmp	r5, #0
 801335e:	bf08      	it	eq
 8013360:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8013362:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8013366:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 801336a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 801336c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 801336e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8013370:	f7ff ff7a 	bl	8013268 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8013374:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8013378:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 801337c:	4620      	mov	r0, r4
 801337e:	b003      	add	sp, #12
 8013380:	bd30      	pop	{r4, r5, pc}

08013382 <xQueueGenericCreate>:
	{
 8013382:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013384:	460d      	mov	r5, r1
 8013386:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8013388:	4606      	mov	r6, r0
 801338a:	b940      	cbnz	r0, 801339e <xQueueGenericCreate+0x1c>
 801338c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013390:	f383 8811 	msr	BASEPRI, r3
 8013394:	f3bf 8f6f 	isb	sy
 8013398:	f3bf 8f4f 	dsb	sy
 801339c:	e7fe      	b.n	801339c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801339e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80133a0:	3050      	adds	r0, #80	@ 0x50
 80133a2:	f7ff fc17 	bl	8012bd4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80133a6:	4604      	mov	r4, r0
 80133a8:	b170      	cbz	r0, 80133c8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80133aa:	2300      	movs	r3, #0
 80133ac:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80133b0:	b165      	cbz	r5, 80133cc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80133b2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80133b6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 80133ba:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80133bc:	2101      	movs	r1, #1
 80133be:	4620      	mov	r0, r4
 80133c0:	f7ff ff52 	bl	8013268 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80133c4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 80133c8:	4620      	mov	r0, r4
 80133ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80133cc:	4603      	mov	r3, r0
 80133ce:	e7f2      	b.n	80133b6 <xQueueGenericCreate+0x34>

080133d0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80133d0:	b513      	push	{r0, r1, r4, lr}
 80133d2:	4613      	mov	r3, r2
 80133d4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80133d6:	b940      	cbnz	r0, 80133ea <xQueueCreateCountingSemaphoreStatic+0x1a>
 80133d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80133dc:	f383 8811 	msr	BASEPRI, r3
 80133e0:	f3bf 8f6f 	isb	sy
 80133e4:	f3bf 8f4f 	dsb	sy
 80133e8:	e7fe      	b.n	80133e8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80133ea:	4288      	cmp	r0, r1
 80133ec:	d208      	bcs.n	8013400 <xQueueCreateCountingSemaphoreStatic+0x30>
 80133ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80133f2:	f383 8811 	msr	BASEPRI, r3
 80133f6:	f3bf 8f6f 	isb	sy
 80133fa:	f3bf 8f4f 	dsb	sy
 80133fe:	e7fe      	b.n	80133fe <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8013400:	2202      	movs	r2, #2
 8013402:	9200      	str	r2, [sp, #0]
 8013404:	2200      	movs	r2, #0
 8013406:	4611      	mov	r1, r2
 8013408:	f7ff ff6d 	bl	80132e6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 801340c:	b100      	cbz	r0, 8013410 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 801340e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8013410:	b002      	add	sp, #8
 8013412:	bd10      	pop	{r4, pc}

08013414 <xQueueCreateCountingSemaphore>:
	{
 8013414:	b510      	push	{r4, lr}
 8013416:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8013418:	b940      	cbnz	r0, 801342c <xQueueCreateCountingSemaphore+0x18>
 801341a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801341e:	f383 8811 	msr	BASEPRI, r3
 8013422:	f3bf 8f6f 	isb	sy
 8013426:	f3bf 8f4f 	dsb	sy
 801342a:	e7fe      	b.n	801342a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 801342c:	4288      	cmp	r0, r1
 801342e:	d208      	bcs.n	8013442 <xQueueCreateCountingSemaphore+0x2e>
 8013430:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013434:	f383 8811 	msr	BASEPRI, r3
 8013438:	f3bf 8f6f 	isb	sy
 801343c:	f3bf 8f4f 	dsb	sy
 8013440:	e7fe      	b.n	8013440 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8013442:	2202      	movs	r2, #2
 8013444:	2100      	movs	r1, #0
 8013446:	f7ff ff9c 	bl	8013382 <xQueueGenericCreate>
		if( xHandle != NULL )
 801344a:	b100      	cbz	r0, 801344e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 801344c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 801344e:	bd10      	pop	{r4, pc}

08013450 <xQueueGenericSend>:
{
 8013450:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013454:	460f      	mov	r7, r1
 8013456:	9201      	str	r2, [sp, #4]
 8013458:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 801345a:	4604      	mov	r4, r0
 801345c:	b940      	cbnz	r0, 8013470 <xQueueGenericSend+0x20>
 801345e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013462:	f383 8811 	msr	BASEPRI, r3
 8013466:	f3bf 8f6f 	isb	sy
 801346a:	f3bf 8f4f 	dsb	sy
 801346e:	e7fe      	b.n	801346e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8013470:	b951      	cbnz	r1, 8013488 <xQueueGenericSend+0x38>
 8013472:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8013474:	b143      	cbz	r3, 8013488 <xQueueGenericSend+0x38>
 8013476:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801347a:	f383 8811 	msr	BASEPRI, r3
 801347e:	f3bf 8f6f 	isb	sy
 8013482:	f3bf 8f4f 	dsb	sy
 8013486:	e7fe      	b.n	8013486 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8013488:	2e02      	cmp	r6, #2
 801348a:	d10b      	bne.n	80134a4 <xQueueGenericSend+0x54>
 801348c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801348e:	2b01      	cmp	r3, #1
 8013490:	d008      	beq.n	80134a4 <xQueueGenericSend+0x54>
 8013492:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013496:	f383 8811 	msr	BASEPRI, r3
 801349a:	f3bf 8f6f 	isb	sy
 801349e:	f3bf 8f4f 	dsb	sy
 80134a2:	e7fe      	b.n	80134a2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80134a4:	f000 ff8a 	bl	80143bc <xTaskGetSchedulerState>
 80134a8:	4605      	mov	r5, r0
 80134aa:	b320      	cbz	r0, 80134f6 <xQueueGenericSend+0xa6>
 80134ac:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80134ae:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80134b2:	f7ff fd0f 	bl	8012ed4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80134b6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80134b8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80134ba:	429a      	cmp	r2, r3
 80134bc:	d227      	bcs.n	801350e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80134be:	4632      	mov	r2, r6
 80134c0:	4639      	mov	r1, r7
 80134c2:	4620      	mov	r0, r4
 80134c4:	f7ff fe51 	bl	801316a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80134c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80134ca:	b11b      	cbz	r3, 80134d4 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80134cc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80134d0:	f000 fee6 	bl	80142a0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80134d4:	b148      	cbz	r0, 80134ea <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 80134d6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80134da:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80134de:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80134e2:	f3bf 8f4f 	dsb	sy
 80134e6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80134ea:	f7ff fd13 	bl	8012f14 <vPortExitCritical>
				return pdPASS;
 80134ee:	2001      	movs	r0, #1
}
 80134f0:	b004      	add	sp, #16
 80134f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80134f6:	9b01      	ldr	r3, [sp, #4]
 80134f8:	2b00      	cmp	r3, #0
 80134fa:	d0d8      	beq.n	80134ae <xQueueGenericSend+0x5e>
 80134fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013500:	f383 8811 	msr	BASEPRI, r3
 8013504:	f3bf 8f6f 	isb	sy
 8013508:	f3bf 8f4f 	dsb	sy
 801350c:	e7fe      	b.n	801350c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 801350e:	2e02      	cmp	r6, #2
 8013510:	d0d5      	beq.n	80134be <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8013512:	9b01      	ldr	r3, [sp, #4]
 8013514:	b91b      	cbnz	r3, 801351e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8013516:	f7ff fcfd 	bl	8012f14 <vPortExitCritical>
					return errQUEUE_FULL;
 801351a:	2000      	movs	r0, #0
 801351c:	e7e8      	b.n	80134f0 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 801351e:	b915      	cbnz	r5, 8013526 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8013520:	a802      	add	r0, sp, #8
 8013522:	f000 fefd 	bl	8014320 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8013526:	f7ff fcf5 	bl	8012f14 <vPortExitCritical>
		vTaskSuspendAll();
 801352a:	f000 fd0b 	bl	8013f44 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801352e:	f7ff fcd1 	bl	8012ed4 <vPortEnterCritical>
 8013532:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8013536:	2bff      	cmp	r3, #255	@ 0xff
 8013538:	bf08      	it	eq
 801353a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 801353e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8013542:	2bff      	cmp	r3, #255	@ 0xff
 8013544:	bf08      	it	eq
 8013546:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 801354a:	f7ff fce3 	bl	8012f14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 801354e:	a901      	add	r1, sp, #4
 8013550:	a802      	add	r0, sp, #8
 8013552:	f000 fef1 	bl	8014338 <xTaskCheckForTimeOut>
 8013556:	bb38      	cbnz	r0, 80135a8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8013558:	f7ff fcbc 	bl	8012ed4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 801355c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 801355e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013560:	429a      	cmp	r2, r3
 8013562:	d10e      	bne.n	8013582 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8013564:	f7ff fcd6 	bl	8012f14 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8013568:	9901      	ldr	r1, [sp, #4]
 801356a:	f104 0010 	add.w	r0, r4, #16
 801356e:	f000 fe5f 	bl	8014230 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8013572:	4620      	mov	r0, r4
 8013574:	f7ff fe42 	bl	80131fc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8013578:	f000 fd88 	bl	801408c <xTaskResumeAll>
 801357c:	b148      	cbz	r0, 8013592 <xQueueGenericSend+0x142>
 801357e:	2501      	movs	r5, #1
 8013580:	e797      	b.n	80134b2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8013582:	f7ff fcc7 	bl	8012f14 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8013586:	4620      	mov	r0, r4
 8013588:	f7ff fe38 	bl	80131fc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 801358c:	f000 fd7e 	bl	801408c <xTaskResumeAll>
 8013590:	e7f5      	b.n	801357e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8013592:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013596:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801359a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801359e:	f3bf 8f4f 	dsb	sy
 80135a2:	f3bf 8f6f 	isb	sy
 80135a6:	e7ea      	b.n	801357e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 80135a8:	4620      	mov	r0, r4
 80135aa:	f7ff fe27 	bl	80131fc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80135ae:	f000 fd6d 	bl	801408c <xTaskResumeAll>
			return errQUEUE_FULL;
 80135b2:	e7b2      	b.n	801351a <xQueueGenericSend+0xca>

080135b4 <xQueueGenericSendFromISR>:
{
 80135b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80135b8:	4689      	mov	r9, r1
 80135ba:	4617      	mov	r7, r2
 80135bc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80135be:	4604      	mov	r4, r0
 80135c0:	b940      	cbnz	r0, 80135d4 <xQueueGenericSendFromISR+0x20>
 80135c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80135c6:	f383 8811 	msr	BASEPRI, r3
 80135ca:	f3bf 8f6f 	isb	sy
 80135ce:	f3bf 8f4f 	dsb	sy
 80135d2:	e7fe      	b.n	80135d2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80135d4:	b951      	cbnz	r1, 80135ec <xQueueGenericSendFromISR+0x38>
 80135d6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80135d8:	b143      	cbz	r3, 80135ec <xQueueGenericSendFromISR+0x38>
 80135da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80135de:	f383 8811 	msr	BASEPRI, r3
 80135e2:	f3bf 8f6f 	isb	sy
 80135e6:	f3bf 8f4f 	dsb	sy
 80135ea:	e7fe      	b.n	80135ea <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80135ec:	2e02      	cmp	r6, #2
 80135ee:	d10b      	bne.n	8013608 <xQueueGenericSendFromISR+0x54>
 80135f0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80135f2:	2b01      	cmp	r3, #1
 80135f4:	d008      	beq.n	8013608 <xQueueGenericSendFromISR+0x54>
 80135f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80135fa:	f383 8811 	msr	BASEPRI, r3
 80135fe:	f3bf 8f6f 	isb	sy
 8013602:	f3bf 8f4f 	dsb	sy
 8013606:	e7fe      	b.n	8013606 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8013608:	f7ff fd76 	bl	80130f8 <vPortValidateInterruptPriority>
	__asm volatile
 801360c:	f3ef 8811 	mrs	r8, BASEPRI
 8013610:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013614:	f383 8811 	msr	BASEPRI, r3
 8013618:	f3bf 8f6f 	isb	sy
 801361c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8013620:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8013622:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013624:	429a      	cmp	r2, r3
 8013626:	d301      	bcc.n	801362c <xQueueGenericSendFromISR+0x78>
 8013628:	2e02      	cmp	r6, #2
 801362a:	d11e      	bne.n	801366a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 801362c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8013630:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8013632:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8013634:	4632      	mov	r2, r6
 8013636:	4649      	mov	r1, r9
 8013638:	4620      	mov	r0, r4
 801363a:	f7ff fd96 	bl	801316a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 801363e:	1c6b      	adds	r3, r5, #1
 8013640:	d10e      	bne.n	8013660 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8013642:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013644:	b13b      	cbz	r3, 8013656 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013646:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 801364a:	f000 fe29 	bl	80142a0 <xTaskRemoveFromEventList>
 801364e:	b110      	cbz	r0, 8013656 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8013650:	b10f      	cbz	r7, 8013656 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8013652:	2301      	movs	r3, #1
 8013654:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8013656:	2001      	movs	r0, #1
	__asm volatile
 8013658:	f388 8811 	msr	BASEPRI, r8
}
 801365c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8013660:	3501      	adds	r5, #1
 8013662:	b26d      	sxtb	r5, r5
 8013664:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8013668:	e7f5      	b.n	8013656 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 801366a:	2000      	movs	r0, #0
 801366c:	e7f4      	b.n	8013658 <xQueueGenericSendFromISR+0xa4>

0801366e <xQueueGiveFromISR>:
{
 801366e:	b570      	push	{r4, r5, r6, lr}
 8013670:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8013672:	4604      	mov	r4, r0
 8013674:	b940      	cbnz	r0, 8013688 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8013676:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801367a:	f383 8811 	msr	BASEPRI, r3
 801367e:	f3bf 8f6f 	isb	sy
 8013682:	f3bf 8f4f 	dsb	sy
 8013686:	e7fe      	b.n	8013686 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8013688:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801368a:	b143      	cbz	r3, 801369e <xQueueGiveFromISR+0x30>
 801368c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013690:	f383 8811 	msr	BASEPRI, r3
 8013694:	f3bf 8f6f 	isb	sy
 8013698:	f3bf 8f4f 	dsb	sy
 801369c:	e7fe      	b.n	801369c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 801369e:	6803      	ldr	r3, [r0, #0]
 80136a0:	b953      	cbnz	r3, 80136b8 <xQueueGiveFromISR+0x4a>
 80136a2:	6883      	ldr	r3, [r0, #8]
 80136a4:	b143      	cbz	r3, 80136b8 <xQueueGiveFromISR+0x4a>
 80136a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80136aa:	f383 8811 	msr	BASEPRI, r3
 80136ae:	f3bf 8f6f 	isb	sy
 80136b2:	f3bf 8f4f 	dsb	sy
 80136b6:	e7fe      	b.n	80136b6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80136b8:	f7ff fd1e 	bl	80130f8 <vPortValidateInterruptPriority>
	__asm volatile
 80136bc:	f3ef 8611 	mrs	r6, BASEPRI
 80136c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80136c4:	f383 8811 	msr	BASEPRI, r3
 80136c8:	f3bf 8f6f 	isb	sy
 80136cc:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80136d0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80136d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80136d4:	4293      	cmp	r3, r2
 80136d6:	d919      	bls.n	801370c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 80136d8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80136dc:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80136de:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80136e0:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80136e2:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 80136e4:	d10d      	bne.n	8013702 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80136e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80136e8:	b13b      	cbz	r3, 80136fa <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80136ea:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80136ee:	f000 fdd7 	bl	80142a0 <xTaskRemoveFromEventList>
 80136f2:	b110      	cbz	r0, 80136fa <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 80136f4:	b10d      	cbz	r5, 80136fa <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80136f6:	2301      	movs	r3, #1
 80136f8:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 80136fa:	2001      	movs	r0, #1
	__asm volatile
 80136fc:	f386 8811 	msr	BASEPRI, r6
}
 8013700:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8013702:	3301      	adds	r3, #1
 8013704:	b25b      	sxtb	r3, r3
 8013706:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 801370a:	e7f6      	b.n	80136fa <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 801370c:	2000      	movs	r0, #0
 801370e:	e7f5      	b.n	80136fc <xQueueGiveFromISR+0x8e>

08013710 <xQueueReceive>:
{
 8013710:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013714:	460e      	mov	r6, r1
 8013716:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8013718:	4604      	mov	r4, r0
 801371a:	b940      	cbnz	r0, 801372e <xQueueReceive+0x1e>
	__asm volatile
 801371c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013720:	f383 8811 	msr	BASEPRI, r3
 8013724:	f3bf 8f6f 	isb	sy
 8013728:	f3bf 8f4f 	dsb	sy
 801372c:	e7fe      	b.n	801372c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801372e:	b951      	cbnz	r1, 8013746 <xQueueReceive+0x36>
 8013730:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8013732:	b143      	cbz	r3, 8013746 <xQueueReceive+0x36>
 8013734:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013738:	f383 8811 	msr	BASEPRI, r3
 801373c:	f3bf 8f6f 	isb	sy
 8013740:	f3bf 8f4f 	dsb	sy
 8013744:	e7fe      	b.n	8013744 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8013746:	f000 fe39 	bl	80143bc <xTaskGetSchedulerState>
 801374a:	4605      	mov	r5, r0
 801374c:	b318      	cbz	r0, 8013796 <xQueueReceive+0x86>
 801374e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8013750:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8013754:	f7ff fbbe 	bl	8012ed4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8013758:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801375a:	b347      	cbz	r7, 80137ae <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 801375c:	4631      	mov	r1, r6
 801375e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8013760:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8013762:	f7ff fd35 	bl	80131d0 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8013766:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8013768:	6923      	ldr	r3, [r4, #16]
 801376a:	b173      	cbz	r3, 801378a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801376c:	f104 0010 	add.w	r0, r4, #16
 8013770:	f000 fd96 	bl	80142a0 <xTaskRemoveFromEventList>
 8013774:	b148      	cbz	r0, 801378a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8013776:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 801377a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801377e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013782:	f3bf 8f4f 	dsb	sy
 8013786:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 801378a:	f7ff fbc3 	bl	8012f14 <vPortExitCritical>
				return pdPASS;
 801378e:	2001      	movs	r0, #1
}
 8013790:	b004      	add	sp, #16
 8013792:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8013796:	9b01      	ldr	r3, [sp, #4]
 8013798:	2b00      	cmp	r3, #0
 801379a:	d0d9      	beq.n	8013750 <xQueueReceive+0x40>
 801379c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80137a0:	f383 8811 	msr	BASEPRI, r3
 80137a4:	f3bf 8f6f 	isb	sy
 80137a8:	f3bf 8f4f 	dsb	sy
 80137ac:	e7fe      	b.n	80137ac <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 80137ae:	9b01      	ldr	r3, [sp, #4]
 80137b0:	b91b      	cbnz	r3, 80137ba <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 80137b2:	f7ff fbaf 	bl	8012f14 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80137b6:	2000      	movs	r0, #0
 80137b8:	e7ea      	b.n	8013790 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 80137ba:	b915      	cbnz	r5, 80137c2 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80137bc:	a802      	add	r0, sp, #8
 80137be:	f000 fdaf 	bl	8014320 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80137c2:	f7ff fba7 	bl	8012f14 <vPortExitCritical>
		vTaskSuspendAll();
 80137c6:	f000 fbbd 	bl	8013f44 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80137ca:	f7ff fb83 	bl	8012ed4 <vPortEnterCritical>
 80137ce:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80137d2:	2bff      	cmp	r3, #255	@ 0xff
 80137d4:	bf08      	it	eq
 80137d6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80137da:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80137de:	2bff      	cmp	r3, #255	@ 0xff
 80137e0:	bf08      	it	eq
 80137e2:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80137e6:	f7ff fb95 	bl	8012f14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80137ea:	a901      	add	r1, sp, #4
 80137ec:	a802      	add	r0, sp, #8
 80137ee:	f000 fda3 	bl	8014338 <xTaskCheckForTimeOut>
 80137f2:	bb00      	cbnz	r0, 8013836 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80137f4:	4620      	mov	r0, r4
 80137f6:	f7ff fcad 	bl	8013154 <prvIsQueueEmpty>
 80137fa:	b1b0      	cbz	r0, 801382a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80137fc:	9901      	ldr	r1, [sp, #4]
 80137fe:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8013802:	f000 fd15 	bl	8014230 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8013806:	4620      	mov	r0, r4
 8013808:	f7ff fcf8 	bl	80131fc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 801380c:	f000 fc3e 	bl	801408c <xTaskResumeAll>
 8013810:	b948      	cbnz	r0, 8013826 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8013812:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013816:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801381a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801381e:	f3bf 8f4f 	dsb	sy
 8013822:	f3bf 8f6f 	isb	sy
 8013826:	2501      	movs	r5, #1
 8013828:	e794      	b.n	8013754 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 801382a:	4620      	mov	r0, r4
 801382c:	f7ff fce6 	bl	80131fc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8013830:	f000 fc2c 	bl	801408c <xTaskResumeAll>
 8013834:	e7f7      	b.n	8013826 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8013836:	4620      	mov	r0, r4
 8013838:	f7ff fce0 	bl	80131fc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 801383c:	f000 fc26 	bl	801408c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8013840:	4620      	mov	r0, r4
 8013842:	f7ff fc87 	bl	8013154 <prvIsQueueEmpty>
 8013846:	2800      	cmp	r0, #0
 8013848:	d0ed      	beq.n	8013826 <xQueueReceive+0x116>
 801384a:	e7b4      	b.n	80137b6 <xQueueReceive+0xa6>

0801384c <xQueueSemaphoreTake>:
{
 801384c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801384e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8013850:	4604      	mov	r4, r0
{
 8013852:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8013854:	b940      	cbnz	r0, 8013868 <xQueueSemaphoreTake+0x1c>
 8013856:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801385a:	f383 8811 	msr	BASEPRI, r3
 801385e:	f3bf 8f6f 	isb	sy
 8013862:	f3bf 8f4f 	dsb	sy
 8013866:	e7fe      	b.n	8013866 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8013868:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 801386a:	b145      	cbz	r5, 801387e <xQueueSemaphoreTake+0x32>
 801386c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013870:	f383 8811 	msr	BASEPRI, r3
 8013874:	f3bf 8f6f 	isb	sy
 8013878:	f3bf 8f4f 	dsb	sy
 801387c:	e7fe      	b.n	801387c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 801387e:	f000 fd9d 	bl	80143bc <xTaskGetSchedulerState>
 8013882:	4606      	mov	r6, r0
 8013884:	b320      	cbz	r0, 80138d0 <xQueueSemaphoreTake+0x84>
 8013886:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8013888:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 801388a:	f7ff fb23 	bl	8012ed4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 801388e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8013890:	b353      	cbz	r3, 80138e8 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8013892:	3b01      	subs	r3, #1
 8013894:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8013896:	6823      	ldr	r3, [r4, #0]
 8013898:	b913      	cbnz	r3, 80138a0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 801389a:	f000 fe6d 	bl	8014578 <pvTaskIncrementMutexHeldCount>
 801389e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80138a0:	6923      	ldr	r3, [r4, #16]
 80138a2:	b173      	cbz	r3, 80138c2 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80138a4:	f104 0010 	add.w	r0, r4, #16
 80138a8:	f000 fcfa 	bl	80142a0 <xTaskRemoveFromEventList>
 80138ac:	b148      	cbz	r0, 80138c2 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 80138ae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80138b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80138b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80138ba:	f3bf 8f4f 	dsb	sy
 80138be:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80138c2:	f7ff fb27 	bl	8012f14 <vPortExitCritical>
				return pdPASS;
 80138c6:	2001      	movs	r0, #1
}
 80138c8:	b005      	add	sp, #20
 80138ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138cc:	4635      	mov	r5, r6
 80138ce:	e7db      	b.n	8013888 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80138d0:	9b01      	ldr	r3, [sp, #4]
 80138d2:	2b00      	cmp	r3, #0
 80138d4:	d0fa      	beq.n	80138cc <xQueueSemaphoreTake+0x80>
 80138d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80138da:	f383 8811 	msr	BASEPRI, r3
 80138de:	f3bf 8f6f 	isb	sy
 80138e2:	f3bf 8f4f 	dsb	sy
 80138e6:	e7fe      	b.n	80138e6 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 80138e8:	9b01      	ldr	r3, [sp, #4]
 80138ea:	b953      	cbnz	r3, 8013902 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80138ec:	2d00      	cmp	r5, #0
 80138ee:	d066      	beq.n	80139be <xQueueSemaphoreTake+0x172>
 80138f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80138f4:	f383 8811 	msr	BASEPRI, r3
 80138f8:	f3bf 8f6f 	isb	sy
 80138fc:	f3bf 8f4f 	dsb	sy
 8013900:	e7fe      	b.n	8013900 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8013902:	b916      	cbnz	r6, 801390a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8013904:	a802      	add	r0, sp, #8
 8013906:	f000 fd0b 	bl	8014320 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 801390a:	f7ff fb03 	bl	8012f14 <vPortExitCritical>
		vTaskSuspendAll();
 801390e:	f000 fb19 	bl	8013f44 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8013912:	f7ff fadf 	bl	8012ed4 <vPortEnterCritical>
 8013916:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 801391a:	2bff      	cmp	r3, #255	@ 0xff
 801391c:	bf08      	it	eq
 801391e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8013922:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8013926:	2bff      	cmp	r3, #255	@ 0xff
 8013928:	bf08      	it	eq
 801392a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 801392e:	f7ff faf1 	bl	8012f14 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8013932:	a901      	add	r1, sp, #4
 8013934:	a802      	add	r0, sp, #8
 8013936:	f000 fcff 	bl	8014338 <xTaskCheckForTimeOut>
 801393a:	bb50      	cbnz	r0, 8013992 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 801393c:	4620      	mov	r0, r4
 801393e:	f7ff fc09 	bl	8013154 <prvIsQueueEmpty>
 8013942:	b300      	cbz	r0, 8013986 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8013944:	6823      	ldr	r3, [r4, #0]
 8013946:	b93b      	cbnz	r3, 8013958 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8013948:	f7ff fac4 	bl	8012ed4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 801394c:	68a0      	ldr	r0, [r4, #8]
 801394e:	f000 fd45 	bl	80143dc <xTaskPriorityInherit>
 8013952:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8013954:	f7ff fade 	bl	8012f14 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8013958:	9901      	ldr	r1, [sp, #4]
 801395a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 801395e:	f000 fc67 	bl	8014230 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8013962:	4620      	mov	r0, r4
 8013964:	f7ff fc4a 	bl	80131fc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8013968:	f000 fb90 	bl	801408c <xTaskResumeAll>
 801396c:	b948      	cbnz	r0, 8013982 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 801396e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013972:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013976:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801397a:	f3bf 8f4f 	dsb	sy
 801397e:	f3bf 8f6f 	isb	sy
 8013982:	2601      	movs	r6, #1
 8013984:	e781      	b.n	801388a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8013986:	4620      	mov	r0, r4
 8013988:	f7ff fc38 	bl	80131fc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 801398c:	f000 fb7e 	bl	801408c <xTaskResumeAll>
 8013990:	e7f7      	b.n	8013982 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8013992:	4620      	mov	r0, r4
 8013994:	f7ff fc32 	bl	80131fc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8013998:	f000 fb78 	bl	801408c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 801399c:	4620      	mov	r0, r4
 801399e:	f7ff fbd9 	bl	8013154 <prvIsQueueEmpty>
 80139a2:	2800      	cmp	r0, #0
 80139a4:	d0ed      	beq.n	8013982 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 80139a6:	b165      	cbz	r5, 80139c2 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 80139a8:	f7ff fa94 	bl	8012ed4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80139ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80139ae:	b119      	cbz	r1, 80139b8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80139b0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80139b2:	6819      	ldr	r1, [r3, #0]
 80139b4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80139b8:	68a0      	ldr	r0, [r4, #8]
 80139ba:	f000 fd8f 	bl	80144dc <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80139be:	f7ff faa9 	bl	8012f14 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80139c2:	2000      	movs	r0, #0
 80139c4:	e780      	b.n	80138c8 <xQueueSemaphoreTake+0x7c>

080139c6 <xQueueReceiveFromISR>:
{
 80139c6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80139ca:	4689      	mov	r9, r1
 80139cc:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80139ce:	4604      	mov	r4, r0
 80139d0:	b940      	cbnz	r0, 80139e4 <xQueueReceiveFromISR+0x1e>
 80139d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80139d6:	f383 8811 	msr	BASEPRI, r3
 80139da:	f3bf 8f6f 	isb	sy
 80139de:	f3bf 8f4f 	dsb	sy
 80139e2:	e7fe      	b.n	80139e2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80139e4:	b951      	cbnz	r1, 80139fc <xQueueReceiveFromISR+0x36>
 80139e6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80139e8:	b143      	cbz	r3, 80139fc <xQueueReceiveFromISR+0x36>
 80139ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80139ee:	f383 8811 	msr	BASEPRI, r3
 80139f2:	f3bf 8f6f 	isb	sy
 80139f6:	f3bf 8f4f 	dsb	sy
 80139fa:	e7fe      	b.n	80139fa <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80139fc:	f7ff fb7c 	bl	80130f8 <vPortValidateInterruptPriority>
	__asm volatile
 8013a00:	f3ef 8711 	mrs	r7, BASEPRI
 8013a04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013a08:	f383 8811 	msr	BASEPRI, r3
 8013a0c:	f3bf 8f6f 	isb	sy
 8013a10:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8013a14:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8013a16:	b30d      	cbz	r5, 8013a5c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8013a18:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8013a1c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8013a1e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8013a20:	4620      	mov	r0, r4
 8013a22:	f7ff fbd5 	bl	80131d0 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8013a26:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8013a28:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8013a2a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8013a2c:	d111      	bne.n	8013a52 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8013a2e:	6923      	ldr	r3, [r4, #16]
 8013a30:	b153      	cbz	r3, 8013a48 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8013a32:	f104 0010 	add.w	r0, r4, #16
 8013a36:	f000 fc33 	bl	80142a0 <xTaskRemoveFromEventList>
 8013a3a:	b128      	cbz	r0, 8013a48 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 8013a3c:	f1b8 0f00 	cmp.w	r8, #0
 8013a40:	d002      	beq.n	8013a48 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8013a42:	2301      	movs	r3, #1
 8013a44:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8013a48:	2001      	movs	r0, #1
	__asm volatile
 8013a4a:	f387 8811 	msr	BASEPRI, r7
}
 8013a4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8013a52:	3601      	adds	r6, #1
 8013a54:	b276      	sxtb	r6, r6
 8013a56:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 8013a5a:	e7f5      	b.n	8013a48 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 8013a5c:	4628      	mov	r0, r5
 8013a5e:	e7f4      	b.n	8013a4a <xQueueReceiveFromISR+0x84>

08013a60 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8013a60:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8013a62:	4a07      	ldr	r2, [pc, #28]	@ (8013a80 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8013a64:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8013a66:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8013a6a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8013a6e:	b91d      	cbnz	r5, 8013a78 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8013a70:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8013a74:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8013a76:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8013a78:	3301      	adds	r3, #1
 8013a7a:	2b08      	cmp	r3, #8
 8013a7c:	d1f3      	bne.n	8013a66 <vQueueAddToRegistry+0x6>
 8013a7e:	e7fa      	b.n	8013a76 <vQueueAddToRegistry+0x16>
 8013a80:	20013210 	.word	0x20013210

08013a84 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8013a84:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8013a86:	4a09      	ldr	r2, [pc, #36]	@ (8013aac <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8013a88:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8013a8a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8013a8e:	4281      	cmp	r1, r0
 8013a90:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8013a94:	d106      	bne.n	8013aa4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8013a96:	4a06      	ldr	r2, [pc, #24]	@ (8013ab0 <vQueueUnregisterQueue+0x2c>)
 8013a98:	2100      	movs	r1, #0
 8013a9a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8013a9e:	4422      	add	r2, r4
 8013aa0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8013aa2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8013aa4:	3301      	adds	r3, #1
 8013aa6:	2b08      	cmp	r3, #8
 8013aa8:	d1ef      	bne.n	8013a8a <vQueueUnregisterQueue+0x6>
 8013aaa:	e7fa      	b.n	8013aa2 <vQueueUnregisterQueue+0x1e>
 8013aac:	20013214 	.word	0x20013214
 8013ab0:	20013210 	.word	0x20013210

08013ab4 <vQueueDelete>:
{
 8013ab4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8013ab6:	b940      	cbnz	r0, 8013aca <vQueueDelete+0x16>
	__asm volatile
 8013ab8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013abc:	f383 8811 	msr	BASEPRI, r3
 8013ac0:	f3bf 8f6f 	isb	sy
 8013ac4:	f3bf 8f4f 	dsb	sy
 8013ac8:	e7fe      	b.n	8013ac8 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8013aca:	f7ff ffdb 	bl	8013a84 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8013ace:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8013ad2:	b91b      	cbnz	r3, 8013adc <vQueueDelete+0x28>
}
 8013ad4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8013ad8:	f7ff b914 	b.w	8012d04 <vPortFree>
}
 8013adc:	bd10      	pop	{r4, pc}

08013ade <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8013ade:	b570      	push	{r4, r5, r6, lr}
 8013ae0:	4604      	mov	r4, r0
 8013ae2:	460d      	mov	r5, r1
 8013ae4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8013ae6:	f7ff f9f5 	bl	8012ed4 <vPortEnterCritical>
 8013aea:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8013aee:	2bff      	cmp	r3, #255	@ 0xff
 8013af0:	bf04      	itt	eq
 8013af2:	2300      	moveq	r3, #0
 8013af4:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8013af8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8013afc:	2bff      	cmp	r3, #255	@ 0xff
 8013afe:	bf04      	itt	eq
 8013b00:	2300      	moveq	r3, #0
 8013b02:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8013b06:	f7ff fa05 	bl	8012f14 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8013b0a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8013b0c:	b92b      	cbnz	r3, 8013b1a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8013b0e:	4632      	mov	r2, r6
 8013b10:	4629      	mov	r1, r5
 8013b12:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8013b16:	f000 fba5 	bl	8014264 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8013b1a:	4620      	mov	r0, r4
	}
 8013b1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8013b20:	f7ff bb6c 	b.w	80131fc <prvUnlockQueue>

08013b24 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8013b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b28:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8013b2a:	f7ff f9d3 	bl	8012ed4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8013b2e:	4b30      	ldr	r3, [pc, #192]	@ (8013bf0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8013b30:	4e30      	ldr	r6, [pc, #192]	@ (8013bf4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8013b32:	681a      	ldr	r2, [r3, #0]
 8013b34:	4f30      	ldr	r7, [pc, #192]	@ (8013bf8 <prvAddNewTaskToReadyList+0xd4>)
 8013b36:	3201      	adds	r2, #1
 8013b38:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8013b3a:	6835      	ldr	r5, [r6, #0]
 8013b3c:	2d00      	cmp	r5, #0
 8013b3e:	d14b      	bne.n	8013bd8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8013b40:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8013b42:	681b      	ldr	r3, [r3, #0]
 8013b44:	2b01      	cmp	r3, #1
 8013b46:	d11f      	bne.n	8013b88 <prvAddNewTaskToReadyList+0x64>
 8013b48:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8013b4a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8013b4c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8013b4e:	f7ff f917 	bl	8012d80 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8013b52:	2d38      	cmp	r5, #56	@ 0x38
 8013b54:	f108 0814 	add.w	r8, r8, #20
 8013b58:	d1f7      	bne.n	8013b4a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8013b5a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8013c20 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8013b5e:	4d27      	ldr	r5, [pc, #156]	@ (8013bfc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8013b60:	4640      	mov	r0, r8
 8013b62:	f7ff f90d 	bl	8012d80 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8013b66:	4628      	mov	r0, r5
 8013b68:	f7ff f90a 	bl	8012d80 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8013b6c:	4824      	ldr	r0, [pc, #144]	@ (8013c00 <prvAddNewTaskToReadyList+0xdc>)
 8013b6e:	f7ff f907 	bl	8012d80 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8013b72:	4824      	ldr	r0, [pc, #144]	@ (8013c04 <prvAddNewTaskToReadyList+0xe0>)
 8013b74:	f7ff f904 	bl	8012d80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8013b78:	4823      	ldr	r0, [pc, #140]	@ (8013c08 <prvAddNewTaskToReadyList+0xe4>)
 8013b7a:	f7ff f901 	bl	8012d80 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8013b7e:	4b23      	ldr	r3, [pc, #140]	@ (8013c0c <prvAddNewTaskToReadyList+0xe8>)
 8013b80:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8013b84:	4b22      	ldr	r3, [pc, #136]	@ (8013c10 <prvAddNewTaskToReadyList+0xec>)
 8013b86:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8013b88:	4a22      	ldr	r2, [pc, #136]	@ (8013c14 <prvAddNewTaskToReadyList+0xf0>)
 8013b8a:	6813      	ldr	r3, [r2, #0]
 8013b8c:	3301      	adds	r3, #1
 8013b8e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8013b90:	4a21      	ldr	r2, [pc, #132]	@ (8013c18 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8013b92:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8013b94:	6811      	ldr	r1, [r2, #0]
 8013b96:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013b98:	2014      	movs	r0, #20
 8013b9a:	428b      	cmp	r3, r1
 8013b9c:	fb00 7003 	mla	r0, r0, r3, r7
 8013ba0:	f104 0104 	add.w	r1, r4, #4
 8013ba4:	bf88      	it	hi
 8013ba6:	6013      	strhi	r3, [r2, #0]
 8013ba8:	f7ff f8f8 	bl	8012d9c <vListInsertEnd>
	taskEXIT_CRITICAL();
 8013bac:	f7ff f9b2 	bl	8012f14 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8013bb0:	4b1a      	ldr	r3, [pc, #104]	@ (8013c1c <prvAddNewTaskToReadyList+0xf8>)
 8013bb2:	681b      	ldr	r3, [r3, #0]
 8013bb4:	b173      	cbz	r3, 8013bd4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8013bb6:	6833      	ldr	r3, [r6, #0]
 8013bb8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8013bba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013bbc:	429a      	cmp	r2, r3
 8013bbe:	d209      	bcs.n	8013bd4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8013bc0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013bc4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013bc8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013bcc:	f3bf 8f4f 	dsb	sy
 8013bd0:	f3bf 8f6f 	isb	sy
}
 8013bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8013bd8:	4b10      	ldr	r3, [pc, #64]	@ (8013c1c <prvAddNewTaskToReadyList+0xf8>)
 8013bda:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8013bdc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8013bde:	2a00      	cmp	r2, #0
 8013be0:	d1d2      	bne.n	8013b88 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8013be2:	6832      	ldr	r2, [r6, #0]
 8013be4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8013be6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8013be8:	bf98      	it	ls
 8013bea:	6034      	strls	r4, [r6, #0]
 8013bec:	e7cc      	b.n	8013b88 <prvAddNewTaskToReadyList+0x64>
 8013bee:	bf00      	nop
 8013bf0:	20013274 	.word	0x20013274
 8013bf4:	20013748 	.word	0x20013748
 8013bf8:	200132e8 	.word	0x200132e8
 8013bfc:	200132c0 	.word	0x200132c0
 8013c00:	200132a4 	.word	0x200132a4
 8013c04:	20013290 	.word	0x20013290
 8013c08:	20013278 	.word	0x20013278
 8013c0c:	200132bc 	.word	0x200132bc
 8013c10:	200132b8 	.word	0x200132b8
 8013c14:	20013258 	.word	0x20013258
 8013c18:	2001326c 	.word	0x2001326c
 8013c1c:	20013268 	.word	0x20013268
 8013c20:	200132d4 	.word	0x200132d4

08013c24 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8013c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8013c26:	4b15      	ldr	r3, [pc, #84]	@ (8013c7c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8013c28:	4d15      	ldr	r5, [pc, #84]	@ (8013c80 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8013c2a:	681c      	ldr	r4, [r3, #0]
{
 8013c2c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8013c2e:	6828      	ldr	r0, [r5, #0]
 8013c30:	3004      	adds	r0, #4
{
 8013c32:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8013c34:	f7ff f8d4 	bl	8012de0 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8013c38:	1c73      	adds	r3, r6, #1
 8013c3a:	d107      	bne.n	8013c4c <prvAddCurrentTaskToDelayedList+0x28>
 8013c3c:	b137      	cbz	r7, 8013c4c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8013c3e:	6829      	ldr	r1, [r5, #0]
 8013c40:	4810      	ldr	r0, [pc, #64]	@ (8013c84 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8013c42:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8013c46:	3104      	adds	r1, #4
 8013c48:	f7ff b8a8 	b.w	8012d9c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8013c4c:	682b      	ldr	r3, [r5, #0]
 8013c4e:	19a4      	adds	r4, r4, r6
 8013c50:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8013c52:	d307      	bcc.n	8013c64 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8013c54:	4b0c      	ldr	r3, [pc, #48]	@ (8013c88 <prvAddCurrentTaskToDelayedList+0x64>)
 8013c56:	6818      	ldr	r0, [r3, #0]
 8013c58:	6829      	ldr	r1, [r5, #0]
}
 8013c5a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8013c5e:	3104      	adds	r1, #4
 8013c60:	f7ff b8a7 	b.w	8012db2 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8013c64:	4b09      	ldr	r3, [pc, #36]	@ (8013c8c <prvAddCurrentTaskToDelayedList+0x68>)
 8013c66:	6818      	ldr	r0, [r3, #0]
 8013c68:	6829      	ldr	r1, [r5, #0]
 8013c6a:	3104      	adds	r1, #4
 8013c6c:	f7ff f8a1 	bl	8012db2 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8013c70:	4b07      	ldr	r3, [pc, #28]	@ (8013c90 <prvAddCurrentTaskToDelayedList+0x6c>)
 8013c72:	681a      	ldr	r2, [r3, #0]
 8013c74:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8013c76:	bf88      	it	hi
 8013c78:	601c      	strhi	r4, [r3, #0]
}
 8013c7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013c7c:	20013270 	.word	0x20013270
 8013c80:	20013748 	.word	0x20013748
 8013c84:	20013278 	.word	0x20013278
 8013c88:	200132b8 	.word	0x200132b8
 8013c8c:	200132bc 	.word	0x200132bc
 8013c90:	20013254 	.word	0x20013254

08013c94 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8013c94:	4a06      	ldr	r2, [pc, #24]	@ (8013cb0 <prvResetNextTaskUnblockTime+0x1c>)
 8013c96:	6813      	ldr	r3, [r2, #0]
 8013c98:	6819      	ldr	r1, [r3, #0]
 8013c9a:	4b06      	ldr	r3, [pc, #24]	@ (8013cb4 <prvResetNextTaskUnblockTime+0x20>)
 8013c9c:	b919      	cbnz	r1, 8013ca6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8013c9e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8013ca2:	601a      	str	r2, [r3, #0]
}
 8013ca4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8013ca6:	6812      	ldr	r2, [r2, #0]
 8013ca8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8013caa:	68d2      	ldr	r2, [r2, #12]
 8013cac:	6852      	ldr	r2, [r2, #4]
 8013cae:	e7f8      	b.n	8013ca2 <prvResetNextTaskUnblockTime+0xe>
 8013cb0:	200132bc 	.word	0x200132bc
 8013cb4:	20013254 	.word	0x20013254

08013cb8 <prvDeleteTCB>:
	{
 8013cb8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8013cba:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 8013cbe:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8013cc0:	b93b      	cbnz	r3, 8013cd2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8013cc2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8013cc4:	f7ff f81e 	bl	8012d04 <vPortFree>
				vPortFree( pxTCB );
 8013cc8:	4620      	mov	r0, r4
	}
 8013cca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8013cce:	f7ff b819 	b.w	8012d04 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8013cd2:	2b01      	cmp	r3, #1
 8013cd4:	d0f9      	beq.n	8013cca <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8013cd6:	2b02      	cmp	r3, #2
 8013cd8:	d008      	beq.n	8013cec <prvDeleteTCB+0x34>
 8013cda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013cde:	f383 8811 	msr	BASEPRI, r3
 8013ce2:	f3bf 8f6f 	isb	sy
 8013ce6:	f3bf 8f4f 	dsb	sy
 8013cea:	e7fe      	b.n	8013cea <prvDeleteTCB+0x32>
	}
 8013cec:	bd10      	pop	{r4, pc}
	...

08013cf0 <prvIdleTask>:
{
 8013cf0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8013cf2:	4c13      	ldr	r4, [pc, #76]	@ (8013d40 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8013cf4:	4f13      	ldr	r7, [pc, #76]	@ (8013d44 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8013cf6:	4d14      	ldr	r5, [pc, #80]	@ (8013d48 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8013cf8:	6823      	ldr	r3, [r4, #0]
 8013cfa:	b973      	cbnz	r3, 8013d1a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8013cfc:	4b13      	ldr	r3, [pc, #76]	@ (8013d4c <prvIdleTask+0x5c>)
 8013cfe:	681b      	ldr	r3, [r3, #0]
 8013d00:	2b01      	cmp	r3, #1
 8013d02:	d9f8      	bls.n	8013cf6 <prvIdleTask+0x6>
				taskYIELD();
 8013d04:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013d08:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013d0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013d10:	f3bf 8f4f 	dsb	sy
 8013d14:	f3bf 8f6f 	isb	sy
 8013d18:	e7ed      	b.n	8013cf6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8013d1a:	f7ff f8db 	bl	8012ed4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8013d1e:	68fb      	ldr	r3, [r7, #12]
 8013d20:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8013d22:	1d30      	adds	r0, r6, #4
 8013d24:	f7ff f85c 	bl	8012de0 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8013d28:	682b      	ldr	r3, [r5, #0]
 8013d2a:	3b01      	subs	r3, #1
 8013d2c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8013d2e:	6823      	ldr	r3, [r4, #0]
 8013d30:	3b01      	subs	r3, #1
 8013d32:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8013d34:	f7ff f8ee 	bl	8012f14 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8013d38:	4630      	mov	r0, r6
 8013d3a:	f7ff ffbd 	bl	8013cb8 <prvDeleteTCB>
 8013d3e:	e7db      	b.n	8013cf8 <prvIdleTask+0x8>
 8013d40:	2001328c 	.word	0x2001328c
 8013d44:	20013290 	.word	0x20013290
 8013d48:	20013274 	.word	0x20013274
 8013d4c:	200132e8 	.word	0x200132e8

08013d50 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8013d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013d54:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8013d58:	0096      	lsls	r6, r2, #2
 8013d5a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8013d5c:	4607      	mov	r7, r0
 8013d5e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8013d60:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8013d62:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8013d64:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8013d66:	f01a fb8a 	bl	802e47e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8013d6a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013d6c:	3e04      	subs	r6, #4
 8013d6e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8013d70:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8013d74:	b3b5      	cbz	r5, 8013de4 <prvInitialiseNewTask.constprop.0+0x94>
 8013d76:	1e6b      	subs	r3, r5, #1
 8013d78:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8013d7c:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8013d7e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013d82:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8013d86:	b109      	cbz	r1, 8013d8c <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8013d88:	42ab      	cmp	r3, r5
 8013d8a:	d1f8      	bne.n	8013d7e <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8013d8c:	2300      	movs	r3, #0
 8013d8e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8013d92:	9d08      	ldr	r5, [sp, #32]
 8013d94:	2d37      	cmp	r5, #55	@ 0x37
 8013d96:	bf28      	it	cs
 8013d98:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8013d9a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8013d9e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8013da0:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8013da2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8013da4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8013da8:	f7fe fff5 	bl	8012d96 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8013dac:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8013db0:	f104 0018 	add.w	r0, r4, #24
 8013db4:	f7fe ffef 	bl	8012d96 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8013db8:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8013dbc:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8013dbe:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8013dc0:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8013dc2:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8013dc6:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8013dca:	4642      	mov	r2, r8
 8013dcc:	4639      	mov	r1, r7
 8013dce:	4630      	mov	r0, r6
 8013dd0:	f7ff f854 	bl	8012e7c <pxPortInitialiseStack>
 8013dd4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8013dd6:	f1b9 0f00 	cmp.w	r9, #0
 8013dda:	d001      	beq.n	8013de0 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8013ddc:	f8c9 4000 	str.w	r4, [r9]
}
 8013de0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8013de4:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8013de8:	e7d3      	b.n	8013d92 <prvInitialiseNewTask.constprop.0+0x42>

08013dea <xTaskCreateStatic>:
	{
 8013dea:	b570      	push	{r4, r5, r6, lr}
 8013dec:	b086      	sub	sp, #24
 8013dee:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8013df2:	b945      	cbnz	r5, 8013e06 <xTaskCreateStatic+0x1c>
 8013df4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013df8:	f383 8811 	msr	BASEPRI, r3
 8013dfc:	f3bf 8f6f 	isb	sy
 8013e00:	f3bf 8f4f 	dsb	sy
 8013e04:	e7fe      	b.n	8013e04 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8013e06:	b944      	cbnz	r4, 8013e1a <xTaskCreateStatic+0x30>
 8013e08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013e0c:	f383 8811 	msr	BASEPRI, r3
 8013e10:	f3bf 8f6f 	isb	sy
 8013e14:	f3bf 8f4f 	dsb	sy
 8013e18:	e7fe      	b.n	8013e18 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8013e1a:	2660      	movs	r6, #96	@ 0x60
 8013e1c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8013e1e:	9e05      	ldr	r6, [sp, #20]
 8013e20:	2e60      	cmp	r6, #96	@ 0x60
 8013e22:	d008      	beq.n	8013e36 <xTaskCreateStatic+0x4c>
 8013e24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013e28:	f383 8811 	msr	BASEPRI, r3
 8013e2c:	f3bf 8f6f 	isb	sy
 8013e30:	f3bf 8f4f 	dsb	sy
 8013e34:	e7fe      	b.n	8013e34 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8013e36:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8013e38:	2502      	movs	r5, #2
 8013e3a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8013e3e:	ad04      	add	r5, sp, #16
 8013e40:	9501      	str	r5, [sp, #4]
 8013e42:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8013e44:	9402      	str	r4, [sp, #8]
 8013e46:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8013e48:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8013e4a:	f7ff ff81 	bl	8013d50 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8013e4e:	4620      	mov	r0, r4
 8013e50:	f7ff fe68 	bl	8013b24 <prvAddNewTaskToReadyList>
	}
 8013e54:	9804      	ldr	r0, [sp, #16]
 8013e56:	b006      	add	sp, #24
 8013e58:	bd70      	pop	{r4, r5, r6, pc}

08013e5a <xTaskCreate>:
	{
 8013e5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013e5e:	4607      	mov	r7, r0
 8013e60:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8013e62:	0090      	lsls	r0, r2, #2
	{
 8013e64:	4688      	mov	r8, r1
 8013e66:	4616      	mov	r6, r2
 8013e68:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8013e6a:	f7fe feb3 	bl	8012bd4 <pvPortMalloc>
			if( pxStack != NULL )
 8013e6e:	4605      	mov	r5, r0
 8013e70:	b920      	cbnz	r0, 8013e7c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8013e72:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8013e76:	b005      	add	sp, #20
 8013e78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8013e7c:	2060      	movs	r0, #96	@ 0x60
 8013e7e:	f7fe fea9 	bl	8012bd4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8013e82:	4604      	mov	r4, r0
 8013e84:	b198      	cbz	r0, 8013eae <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8013e86:	2300      	movs	r3, #0
 8013e88:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8013e8c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8013e8e:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8013e90:	9301      	str	r3, [sp, #4]
 8013e92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013e94:	9002      	str	r0, [sp, #8]
 8013e96:	9300      	str	r3, [sp, #0]
 8013e98:	4632      	mov	r2, r6
 8013e9a:	464b      	mov	r3, r9
 8013e9c:	4641      	mov	r1, r8
 8013e9e:	4638      	mov	r0, r7
 8013ea0:	f7ff ff56 	bl	8013d50 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8013ea4:	4620      	mov	r0, r4
 8013ea6:	f7ff fe3d 	bl	8013b24 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8013eaa:	2001      	movs	r0, #1
 8013eac:	e7e3      	b.n	8013e76 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8013eae:	4628      	mov	r0, r5
 8013eb0:	f7fe ff28 	bl	8012d04 <vPortFree>
		if( pxNewTCB != NULL )
 8013eb4:	e7dd      	b.n	8013e72 <xTaskCreate+0x18>
	...

08013eb8 <vTaskStartScheduler>:
{
 8013eb8:	b510      	push	{r4, lr}
 8013eba:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8013ebc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8013ebe:	aa07      	add	r2, sp, #28
 8013ec0:	a906      	add	r1, sp, #24
 8013ec2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8013ec4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8013ec8:	f7fe fe46 	bl	8012b58 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8013ecc:	9b05      	ldr	r3, [sp, #20]
 8013ece:	9302      	str	r3, [sp, #8]
 8013ed0:	9b06      	ldr	r3, [sp, #24]
 8013ed2:	9a07      	ldr	r2, [sp, #28]
 8013ed4:	4916      	ldr	r1, [pc, #88]	@ (8013f30 <vTaskStartScheduler+0x78>)
 8013ed6:	4817      	ldr	r0, [pc, #92]	@ (8013f34 <vTaskStartScheduler+0x7c>)
 8013ed8:	e9cd 4300 	strd	r4, r3, [sp]
 8013edc:	4623      	mov	r3, r4
 8013ede:	f7ff ff84 	bl	8013dea <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8013ee2:	b318      	cbz	r0, 8013f2c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8013ee4:	f000 fba6 	bl	8014634 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8013ee8:	2801      	cmp	r0, #1
 8013eea:	d114      	bne.n	8013f16 <vTaskStartScheduler+0x5e>
 8013eec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013ef0:	f383 8811 	msr	BASEPRI, r3
 8013ef4:	f3bf 8f6f 	isb	sy
 8013ef8:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8013efc:	4b0e      	ldr	r3, [pc, #56]	@ (8013f38 <vTaskStartScheduler+0x80>)
 8013efe:	f04f 32ff 	mov.w	r2, #4294967295
 8013f02:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8013f04:	4b0d      	ldr	r3, [pc, #52]	@ (8013f3c <vTaskStartScheduler+0x84>)
 8013f06:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8013f08:	4b0d      	ldr	r3, [pc, #52]	@ (8013f40 <vTaskStartScheduler+0x88>)
 8013f0a:	601c      	str	r4, [r3, #0]
}
 8013f0c:	b008      	add	sp, #32
 8013f0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8013f12:	f7ff b86f 	b.w	8012ff4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8013f16:	3001      	adds	r0, #1
 8013f18:	d108      	bne.n	8013f2c <vTaskStartScheduler+0x74>
 8013f1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013f1e:	f383 8811 	msr	BASEPRI, r3
 8013f22:	f3bf 8f6f 	isb	sy
 8013f26:	f3bf 8f4f 	dsb	sy
 8013f2a:	e7fe      	b.n	8013f2a <vTaskStartScheduler+0x72>
}
 8013f2c:	b008      	add	sp, #32
 8013f2e:	bd10      	pop	{r4, pc}
 8013f30:	08030636 	.word	0x08030636
 8013f34:	08013cf1 	.word	0x08013cf1
 8013f38:	20013254 	.word	0x20013254
 8013f3c:	20013268 	.word	0x20013268
 8013f40:	20013270 	.word	0x20013270

08013f44 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8013f44:	4a02      	ldr	r2, [pc, #8]	@ (8013f50 <vTaskSuspendAll+0xc>)
 8013f46:	6813      	ldr	r3, [r2, #0]
 8013f48:	3301      	adds	r3, #1
 8013f4a:	6013      	str	r3, [r2, #0]
}
 8013f4c:	4770      	bx	lr
 8013f4e:	bf00      	nop
 8013f50:	20013250 	.word	0x20013250

08013f54 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8013f54:	4b01      	ldr	r3, [pc, #4]	@ (8013f5c <xTaskGetTickCount+0x8>)
 8013f56:	6818      	ldr	r0, [r3, #0]
}
 8013f58:	4770      	bx	lr
 8013f5a:	bf00      	nop
 8013f5c:	20013270 	.word	0x20013270

08013f60 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8013f60:	4b3f      	ldr	r3, [pc, #252]	@ (8014060 <xTaskIncrementTick+0x100>)
 8013f62:	681b      	ldr	r3, [r3, #0]
{
 8013f64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8013f68:	2b00      	cmp	r3, #0
 8013f6a:	d172      	bne.n	8014052 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8013f6c:	4b3d      	ldr	r3, [pc, #244]	@ (8014064 <xTaskIncrementTick+0x104>)
 8013f6e:	681c      	ldr	r4, [r3, #0]
 8013f70:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8013f72:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8013f74:	b9bc      	cbnz	r4, 8013fa6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8013f76:	4b3c      	ldr	r3, [pc, #240]	@ (8014068 <xTaskIncrementTick+0x108>)
 8013f78:	681a      	ldr	r2, [r3, #0]
 8013f7a:	6812      	ldr	r2, [r2, #0]
 8013f7c:	b142      	cbz	r2, 8013f90 <xTaskIncrementTick+0x30>
 8013f7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013f82:	f383 8811 	msr	BASEPRI, r3
 8013f86:	f3bf 8f6f 	isb	sy
 8013f8a:	f3bf 8f4f 	dsb	sy
 8013f8e:	e7fe      	b.n	8013f8e <xTaskIncrementTick+0x2e>
 8013f90:	4a36      	ldr	r2, [pc, #216]	@ (801406c <xTaskIncrementTick+0x10c>)
 8013f92:	6819      	ldr	r1, [r3, #0]
 8013f94:	6810      	ldr	r0, [r2, #0]
 8013f96:	6018      	str	r0, [r3, #0]
 8013f98:	6011      	str	r1, [r2, #0]
 8013f9a:	4a35      	ldr	r2, [pc, #212]	@ (8014070 <xTaskIncrementTick+0x110>)
 8013f9c:	6813      	ldr	r3, [r2, #0]
 8013f9e:	3301      	adds	r3, #1
 8013fa0:	6013      	str	r3, [r2, #0]
 8013fa2:	f7ff fe77 	bl	8013c94 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8013fa6:	4d33      	ldr	r5, [pc, #204]	@ (8014074 <xTaskIncrementTick+0x114>)
 8013fa8:	4e33      	ldr	r6, [pc, #204]	@ (8014078 <xTaskIncrementTick+0x118>)
 8013faa:	682b      	ldr	r3, [r5, #0]
 8013fac:	4f33      	ldr	r7, [pc, #204]	@ (801407c <xTaskIncrementTick+0x11c>)
 8013fae:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8013fb0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8013fb4:	d212      	bcs.n	8013fdc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8013fb6:	683a      	ldr	r2, [r7, #0]
 8013fb8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8013fba:	2114      	movs	r1, #20
 8013fbc:	434a      	muls	r2, r1
 8013fbe:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8013fc0:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8013fc2:	4a2f      	ldr	r2, [pc, #188]	@ (8014080 <xTaskIncrementTick+0x120>)
 8013fc4:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8013fc6:	bf28      	it	cs
 8013fc8:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8013fcc:	2a00      	cmp	r2, #0
 8013fce:	bf18      	it	ne
 8013fd0:	f04f 0b01 	movne.w	fp, #1
}
 8013fd4:	4658      	mov	r0, fp
 8013fd6:	b003      	add	sp, #12
 8013fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8013fdc:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8014068 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8013fe0:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8014088 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8013fe4:	f8d9 2000 	ldr.w	r2, [r9]
 8013fe8:	6812      	ldr	r2, [r2, #0]
 8013fea:	b91a      	cbnz	r2, 8013ff4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8013fec:	f04f 32ff 	mov.w	r2, #4294967295
 8013ff0:	602a      	str	r2, [r5, #0]
					break;
 8013ff2:	e7e0      	b.n	8013fb6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8013ff4:	f8d9 2000 	ldr.w	r2, [r9]
 8013ff8:	68d2      	ldr	r2, [r2, #12]
 8013ffa:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8013ffe:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8014002:	428c      	cmp	r4, r1
 8014004:	d201      	bcs.n	801400a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8014006:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8014008:	e7d5      	b.n	8013fb6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801400a:	f108 0304 	add.w	r3, r8, #4
 801400e:	4618      	mov	r0, r3
 8014010:	9301      	str	r3, [sp, #4]
 8014012:	f7fe fee5 	bl	8012de0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8014016:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 801401a:	b119      	cbz	r1, 8014024 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801401c:	f108 0018 	add.w	r0, r8, #24
 8014020:	f7fe fede 	bl	8012de0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8014024:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8014028:	f8da 1000 	ldr.w	r1, [sl]
 801402c:	2314      	movs	r3, #20
 801402e:	4288      	cmp	r0, r1
 8014030:	bf88      	it	hi
 8014032:	f8ca 0000 	strhi.w	r0, [sl]
 8014036:	9901      	ldr	r1, [sp, #4]
 8014038:	fb03 6000 	mla	r0, r3, r0, r6
 801403c:	f7fe feae 	bl	8012d9c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8014040:	6838      	ldr	r0, [r7, #0]
 8014042:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8014046:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8014048:	4291      	cmp	r1, r2
 801404a:	bf28      	it	cs
 801404c:	f04f 0b01 	movcs.w	fp, #1
 8014050:	e7c8      	b.n	8013fe4 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8014052:	4a0c      	ldr	r2, [pc, #48]	@ (8014084 <xTaskIncrementTick+0x124>)
 8014054:	6813      	ldr	r3, [r2, #0]
 8014056:	3301      	adds	r3, #1
 8014058:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 801405a:	f04f 0b00 	mov.w	fp, #0
 801405e:	e7b9      	b.n	8013fd4 <xTaskIncrementTick+0x74>
 8014060:	20013250 	.word	0x20013250
 8014064:	20013270 	.word	0x20013270
 8014068:	200132bc 	.word	0x200132bc
 801406c:	200132b8 	.word	0x200132b8
 8014070:	2001325c 	.word	0x2001325c
 8014074:	20013254 	.word	0x20013254
 8014078:	200132e8 	.word	0x200132e8
 801407c:	20013748 	.word	0x20013748
 8014080:	20013260 	.word	0x20013260
 8014084:	20013264 	.word	0x20013264
 8014088:	2001326c 	.word	0x2001326c

0801408c <xTaskResumeAll>:
{
 801408c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8014090:	4c30      	ldr	r4, [pc, #192]	@ (8014154 <xTaskResumeAll+0xc8>)
 8014092:	6823      	ldr	r3, [r4, #0]
 8014094:	b943      	cbnz	r3, 80140a8 <xTaskResumeAll+0x1c>
 8014096:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801409a:	f383 8811 	msr	BASEPRI, r3
 801409e:	f3bf 8f6f 	isb	sy
 80140a2:	f3bf 8f4f 	dsb	sy
 80140a6:	e7fe      	b.n	80140a6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 80140a8:	f7fe ff14 	bl	8012ed4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80140ac:	6823      	ldr	r3, [r4, #0]
 80140ae:	3b01      	subs	r3, #1
 80140b0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80140b2:	6824      	ldr	r4, [r4, #0]
 80140b4:	b12c      	cbz	r4, 80140c2 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 80140b6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80140b8:	f7fe ff2c 	bl	8012f14 <vPortExitCritical>
}
 80140bc:	4620      	mov	r0, r4
 80140be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80140c2:	4b25      	ldr	r3, [pc, #148]	@ (8014158 <xTaskResumeAll+0xcc>)
 80140c4:	681b      	ldr	r3, [r3, #0]
 80140c6:	2b00      	cmp	r3, #0
 80140c8:	d0f5      	beq.n	80140b6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80140ca:	4d24      	ldr	r5, [pc, #144]	@ (801415c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80140cc:	4e24      	ldr	r6, [pc, #144]	@ (8014160 <xTaskResumeAll+0xd4>)
 80140ce:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8014170 <xTaskResumeAll+0xe4>
 80140d2:	e01d      	b.n	8014110 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80140d4:	68eb      	ldr	r3, [r5, #12]
 80140d6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80140d8:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80140da:	f104 0018 	add.w	r0, r4, #24
 80140de:	f7fe fe7f 	bl	8012de0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80140e2:	4638      	mov	r0, r7
 80140e4:	f7fe fe7c 	bl	8012de0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80140e8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80140ea:	6832      	ldr	r2, [r6, #0]
 80140ec:	2014      	movs	r0, #20
 80140ee:	4293      	cmp	r3, r2
 80140f0:	fb00 8003 	mla	r0, r0, r3, r8
 80140f4:	4639      	mov	r1, r7
 80140f6:	bf88      	it	hi
 80140f8:	6033      	strhi	r3, [r6, #0]
 80140fa:	f7fe fe4f 	bl	8012d9c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80140fe:	4b19      	ldr	r3, [pc, #100]	@ (8014164 <xTaskResumeAll+0xd8>)
 8014100:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8014102:	681b      	ldr	r3, [r3, #0]
 8014104:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014106:	429a      	cmp	r2, r3
 8014108:	d302      	bcc.n	8014110 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 801410a:	4b17      	ldr	r3, [pc, #92]	@ (8014168 <xTaskResumeAll+0xdc>)
 801410c:	2201      	movs	r2, #1
 801410e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8014110:	682b      	ldr	r3, [r5, #0]
 8014112:	2b00      	cmp	r3, #0
 8014114:	d1de      	bne.n	80140d4 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8014116:	b10c      	cbz	r4, 801411c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8014118:	f7ff fdbc 	bl	8013c94 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 801411c:	4d13      	ldr	r5, [pc, #76]	@ (801416c <xTaskResumeAll+0xe0>)
 801411e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8014120:	b144      	cbz	r4, 8014134 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8014122:	4e11      	ldr	r6, [pc, #68]	@ (8014168 <xTaskResumeAll+0xdc>)
 8014124:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8014126:	f7ff ff1b 	bl	8013f60 <xTaskIncrementTick>
 801412a:	b100      	cbz	r0, 801412e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 801412c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 801412e:	3c01      	subs	r4, #1
 8014130:	d1f9      	bne.n	8014126 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8014132:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8014134:	4b0c      	ldr	r3, [pc, #48]	@ (8014168 <xTaskResumeAll+0xdc>)
 8014136:	681b      	ldr	r3, [r3, #0]
 8014138:	2b00      	cmp	r3, #0
 801413a:	d0bc      	beq.n	80140b6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 801413c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8014140:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8014144:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8014148:	f3bf 8f4f 	dsb	sy
 801414c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8014150:	2401      	movs	r4, #1
 8014152:	e7b1      	b.n	80140b8 <xTaskResumeAll+0x2c>
 8014154:	20013250 	.word	0x20013250
 8014158:	20013274 	.word	0x20013274
 801415c:	200132a4 	.word	0x200132a4
 8014160:	2001326c 	.word	0x2001326c
 8014164:	20013748 	.word	0x20013748
 8014168:	20013260 	.word	0x20013260
 801416c:	20013264 	.word	0x20013264
 8014170:	200132e8 	.word	0x200132e8

08014174 <vTaskDelay>:
	{
 8014174:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8014176:	b950      	cbnz	r0, 801418e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8014178:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 801417c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8014180:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8014184:	f3bf 8f4f 	dsb	sy
 8014188:	f3bf 8f6f 	isb	sy
	}
 801418c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 801418e:	4b0a      	ldr	r3, [pc, #40]	@ (80141b8 <vTaskDelay+0x44>)
 8014190:	6819      	ldr	r1, [r3, #0]
 8014192:	b141      	cbz	r1, 80141a6 <vTaskDelay+0x32>
 8014194:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014198:	f383 8811 	msr	BASEPRI, r3
 801419c:	f3bf 8f6f 	isb	sy
 80141a0:	f3bf 8f4f 	dsb	sy
 80141a4:	e7fe      	b.n	80141a4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 80141a6:	f7ff fecd 	bl	8013f44 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80141aa:	f7ff fd3b 	bl	8013c24 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80141ae:	f7ff ff6d 	bl	801408c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80141b2:	2800      	cmp	r0, #0
 80141b4:	d0e0      	beq.n	8014178 <vTaskDelay+0x4>
 80141b6:	e7e9      	b.n	801418c <vTaskDelay+0x18>
 80141b8:	20013250 	.word	0x20013250

080141bc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80141bc:	4b17      	ldr	r3, [pc, #92]	@ (801421c <vTaskSwitchContext+0x60>)
 80141be:	681a      	ldr	r2, [r3, #0]
 80141c0:	4b17      	ldr	r3, [pc, #92]	@ (8014220 <vTaskSwitchContext+0x64>)
{
 80141c2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80141c4:	b112      	cbz	r2, 80141cc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80141c6:	2201      	movs	r2, #1
 80141c8:	601a      	str	r2, [r3, #0]
}
 80141ca:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80141cc:	4d15      	ldr	r5, [pc, #84]	@ (8014224 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 80141ce:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80141d0:	682a      	ldr	r2, [r5, #0]
 80141d2:	4915      	ldr	r1, [pc, #84]	@ (8014228 <vTaskSwitchContext+0x6c>)
 80141d4:	2614      	movs	r6, #20
 80141d6:	fb06 f302 	mul.w	r3, r6, r2
 80141da:	18c8      	adds	r0, r1, r3
 80141dc:	58cc      	ldr	r4, [r1, r3]
 80141de:	b18c      	cbz	r4, 8014204 <vTaskSwitchContext+0x48>
 80141e0:	6844      	ldr	r4, [r0, #4]
 80141e2:	3308      	adds	r3, #8
 80141e4:	6864      	ldr	r4, [r4, #4]
 80141e6:	6044      	str	r4, [r0, #4]
 80141e8:	440b      	add	r3, r1
 80141ea:	429c      	cmp	r4, r3
 80141ec:	bf04      	itt	eq
 80141ee:	6863      	ldreq	r3, [r4, #4]
 80141f0:	6043      	streq	r3, [r0, #4]
 80141f2:	2314      	movs	r3, #20
 80141f4:	fb03 1102 	mla	r1, r3, r2, r1
 80141f8:	684b      	ldr	r3, [r1, #4]
 80141fa:	68d9      	ldr	r1, [r3, #12]
 80141fc:	4b0b      	ldr	r3, [pc, #44]	@ (801422c <vTaskSwitchContext+0x70>)
 80141fe:	6019      	str	r1, [r3, #0]
 8014200:	602a      	str	r2, [r5, #0]
}
 8014202:	e7e2      	b.n	80141ca <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014204:	b942      	cbnz	r2, 8014218 <vTaskSwitchContext+0x5c>
 8014206:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801420a:	f383 8811 	msr	BASEPRI, r3
 801420e:	f3bf 8f6f 	isb	sy
 8014212:	f3bf 8f4f 	dsb	sy
 8014216:	e7fe      	b.n	8014216 <vTaskSwitchContext+0x5a>
 8014218:	3a01      	subs	r2, #1
 801421a:	e7dc      	b.n	80141d6 <vTaskSwitchContext+0x1a>
 801421c:	20013250 	.word	0x20013250
 8014220:	20013260 	.word	0x20013260
 8014224:	2001326c 	.word	0x2001326c
 8014228:	200132e8 	.word	0x200132e8
 801422c:	20013748 	.word	0x20013748

08014230 <vTaskPlaceOnEventList>:
{
 8014230:	b510      	push	{r4, lr}
 8014232:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8014234:	b940      	cbnz	r0, 8014248 <vTaskPlaceOnEventList+0x18>
 8014236:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801423a:	f383 8811 	msr	BASEPRI, r3
 801423e:	f3bf 8f6f 	isb	sy
 8014242:	f3bf 8f4f 	dsb	sy
 8014246:	e7fe      	b.n	8014246 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8014248:	4b05      	ldr	r3, [pc, #20]	@ (8014260 <vTaskPlaceOnEventList+0x30>)
 801424a:	6819      	ldr	r1, [r3, #0]
 801424c:	3118      	adds	r1, #24
 801424e:	f7fe fdb0 	bl	8012db2 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8014252:	4620      	mov	r0, r4
 8014254:	2101      	movs	r1, #1
}
 8014256:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 801425a:	f7ff bce3 	b.w	8013c24 <prvAddCurrentTaskToDelayedList>
 801425e:	bf00      	nop
 8014260:	20013748 	.word	0x20013748

08014264 <vTaskPlaceOnEventListRestricted>:
	{
 8014264:	b538      	push	{r3, r4, r5, lr}
 8014266:	460d      	mov	r5, r1
 8014268:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 801426a:	b940      	cbnz	r0, 801427e <vTaskPlaceOnEventListRestricted+0x1a>
 801426c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014270:	f383 8811 	msr	BASEPRI, r3
 8014274:	f3bf 8f6f 	isb	sy
 8014278:	f3bf 8f4f 	dsb	sy
 801427c:	e7fe      	b.n	801427c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 801427e:	4b07      	ldr	r3, [pc, #28]	@ (801429c <vTaskPlaceOnEventListRestricted+0x38>)
 8014280:	6819      	ldr	r1, [r3, #0]
 8014282:	3118      	adds	r1, #24
 8014284:	f7fe fd8a 	bl	8012d9c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8014288:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 801428a:	4621      	mov	r1, r4
 801428c:	bf0c      	ite	eq
 801428e:	4628      	moveq	r0, r5
 8014290:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8014294:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8014298:	f7ff bcc4 	b.w	8013c24 <prvAddCurrentTaskToDelayedList>
 801429c:	20013748 	.word	0x20013748

080142a0 <xTaskRemoveFromEventList>:
{
 80142a0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80142a2:	68c3      	ldr	r3, [r0, #12]
 80142a4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80142a6:	b944      	cbnz	r4, 80142ba <xTaskRemoveFromEventList+0x1a>
 80142a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80142ac:	f383 8811 	msr	BASEPRI, r3
 80142b0:	f3bf 8f6f 	isb	sy
 80142b4:	f3bf 8f4f 	dsb	sy
 80142b8:	e7fe      	b.n	80142b8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80142ba:	f104 0518 	add.w	r5, r4, #24
 80142be:	4628      	mov	r0, r5
 80142c0:	f7fe fd8e 	bl	8012de0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80142c4:	4b10      	ldr	r3, [pc, #64]	@ (8014308 <xTaskRemoveFromEventList+0x68>)
 80142c6:	681b      	ldr	r3, [r3, #0]
 80142c8:	b9db      	cbnz	r3, 8014302 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80142ca:	1d25      	adds	r5, r4, #4
 80142cc:	4628      	mov	r0, r5
 80142ce:	f7fe fd87 	bl	8012de0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80142d2:	4a0e      	ldr	r2, [pc, #56]	@ (801430c <xTaskRemoveFromEventList+0x6c>)
 80142d4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80142d6:	6811      	ldr	r1, [r2, #0]
 80142d8:	428b      	cmp	r3, r1
 80142da:	bf88      	it	hi
 80142dc:	6013      	strhi	r3, [r2, #0]
 80142de:	4a0c      	ldr	r2, [pc, #48]	@ (8014310 <xTaskRemoveFromEventList+0x70>)
 80142e0:	2014      	movs	r0, #20
 80142e2:	4629      	mov	r1, r5
 80142e4:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80142e8:	f7fe fd58 	bl	8012d9c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80142ec:	4b09      	ldr	r3, [pc, #36]	@ (8014314 <xTaskRemoveFromEventList+0x74>)
 80142ee:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80142f0:	681b      	ldr	r3, [r3, #0]
 80142f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80142f4:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80142f6:	bf83      	ittte	hi
 80142f8:	4b07      	ldrhi	r3, [pc, #28]	@ (8014318 <xTaskRemoveFromEventList+0x78>)
 80142fa:	2001      	movhi	r0, #1
 80142fc:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 80142fe:	2000      	movls	r0, #0
}
 8014300:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8014302:	4806      	ldr	r0, [pc, #24]	@ (801431c <xTaskRemoveFromEventList+0x7c>)
 8014304:	4629      	mov	r1, r5
 8014306:	e7ef      	b.n	80142e8 <xTaskRemoveFromEventList+0x48>
 8014308:	20013250 	.word	0x20013250
 801430c:	2001326c 	.word	0x2001326c
 8014310:	200132e8 	.word	0x200132e8
 8014314:	20013748 	.word	0x20013748
 8014318:	20013260 	.word	0x20013260
 801431c:	200132a4 	.word	0x200132a4

08014320 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8014320:	4b03      	ldr	r3, [pc, #12]	@ (8014330 <vTaskInternalSetTimeOutState+0x10>)
 8014322:	681b      	ldr	r3, [r3, #0]
 8014324:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8014326:	4b03      	ldr	r3, [pc, #12]	@ (8014334 <vTaskInternalSetTimeOutState+0x14>)
 8014328:	681b      	ldr	r3, [r3, #0]
 801432a:	6043      	str	r3, [r0, #4]
}
 801432c:	4770      	bx	lr
 801432e:	bf00      	nop
 8014330:	2001325c 	.word	0x2001325c
 8014334:	20013270 	.word	0x20013270

08014338 <xTaskCheckForTimeOut>:
{
 8014338:	b570      	push	{r4, r5, r6, lr}
 801433a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 801433c:	4605      	mov	r5, r0
 801433e:	b940      	cbnz	r0, 8014352 <xTaskCheckForTimeOut+0x1a>
 8014340:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014344:	f383 8811 	msr	BASEPRI, r3
 8014348:	f3bf 8f6f 	isb	sy
 801434c:	f3bf 8f4f 	dsb	sy
 8014350:	e7fe      	b.n	8014350 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8014352:	b941      	cbnz	r1, 8014366 <xTaskCheckForTimeOut+0x2e>
 8014354:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014358:	f383 8811 	msr	BASEPRI, r3
 801435c:	f3bf 8f6f 	isb	sy
 8014360:	f3bf 8f4f 	dsb	sy
 8014364:	e7fe      	b.n	8014364 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8014366:	f7fe fdb5 	bl	8012ed4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 801436a:	4b0f      	ldr	r3, [pc, #60]	@ (80143a8 <xTaskCheckForTimeOut+0x70>)
 801436c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 801436e:	6823      	ldr	r3, [r4, #0]
 8014370:	1c5a      	adds	r2, r3, #1
 8014372:	d010      	beq.n	8014396 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8014374:	480d      	ldr	r0, [pc, #52]	@ (80143ac <xTaskCheckForTimeOut+0x74>)
 8014376:	682e      	ldr	r6, [r5, #0]
 8014378:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 801437a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 801437c:	4286      	cmp	r6, r0
 801437e:	d001      	beq.n	8014384 <xTaskCheckForTimeOut+0x4c>
 8014380:	428a      	cmp	r2, r1
 8014382:	d90f      	bls.n	80143a4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8014384:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8014386:	4283      	cmp	r3, r0
 8014388:	d90a      	bls.n	80143a0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 801438a:	1a5b      	subs	r3, r3, r1
 801438c:	4413      	add	r3, r2
 801438e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8014390:	4628      	mov	r0, r5
 8014392:	f7ff ffc5 	bl	8014320 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8014396:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8014398:	f7fe fdbc 	bl	8012f14 <vPortExitCritical>
}
 801439c:	4620      	mov	r0, r4
 801439e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80143a0:	2300      	movs	r3, #0
 80143a2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80143a4:	2401      	movs	r4, #1
 80143a6:	e7f7      	b.n	8014398 <xTaskCheckForTimeOut+0x60>
 80143a8:	20013270 	.word	0x20013270
 80143ac:	2001325c 	.word	0x2001325c

080143b0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80143b0:	4b01      	ldr	r3, [pc, #4]	@ (80143b8 <vTaskMissedYield+0x8>)
 80143b2:	2201      	movs	r2, #1
 80143b4:	601a      	str	r2, [r3, #0]
}
 80143b6:	4770      	bx	lr
 80143b8:	20013260 	.word	0x20013260

080143bc <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80143bc:	4b05      	ldr	r3, [pc, #20]	@ (80143d4 <xTaskGetSchedulerState+0x18>)
 80143be:	681b      	ldr	r3, [r3, #0]
 80143c0:	b133      	cbz	r3, 80143d0 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80143c2:	4b05      	ldr	r3, [pc, #20]	@ (80143d8 <xTaskGetSchedulerState+0x1c>)
 80143c4:	6818      	ldr	r0, [r3, #0]
 80143c6:	fab0 f080 	clz	r0, r0
 80143ca:	0940      	lsrs	r0, r0, #5
 80143cc:	0040      	lsls	r0, r0, #1
 80143ce:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80143d0:	2001      	movs	r0, #1
	}
 80143d2:	4770      	bx	lr
 80143d4:	20013268 	.word	0x20013268
 80143d8:	20013250 	.word	0x20013250

080143dc <xTaskPriorityInherit>:
	{
 80143dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 80143de:	4604      	mov	r4, r0
 80143e0:	b338      	cbz	r0, 8014432 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80143e2:	4d1a      	ldr	r5, [pc, #104]	@ (801444c <xTaskPriorityInherit+0x70>)
 80143e4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80143e6:	682a      	ldr	r2, [r5, #0]
 80143e8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80143ea:	4293      	cmp	r3, r2
 80143ec:	d226      	bcs.n	801443c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80143ee:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80143f0:	4e17      	ldr	r6, [pc, #92]	@ (8014450 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80143f2:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80143f4:	bfa1      	itttt	ge
 80143f6:	682a      	ldrge	r2, [r5, #0]
 80143f8:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 80143fa:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 80143fe:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8014400:	2214      	movs	r2, #20
 8014402:	fb02 6303 	mla	r3, r2, r3, r6
 8014406:	6942      	ldr	r2, [r0, #20]
 8014408:	429a      	cmp	r2, r3
 801440a:	d113      	bne.n	8014434 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801440c:	1d07      	adds	r7, r0, #4
 801440e:	4638      	mov	r0, r7
 8014410:	f7fe fce6 	bl	8012de0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8014414:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8014416:	4a0f      	ldr	r2, [pc, #60]	@ (8014454 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8014418:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801441a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 801441c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801441e:	2014      	movs	r0, #20
 8014420:	428b      	cmp	r3, r1
 8014422:	fb00 6003 	mla	r0, r0, r3, r6
 8014426:	4639      	mov	r1, r7
 8014428:	bf88      	it	hi
 801442a:	6013      	strhi	r3, [r2, #0]
 801442c:	f7fe fcb6 	bl	8012d9c <vListInsertEnd>
				xReturn = pdTRUE;
 8014430:	2001      	movs	r0, #1
	}
 8014432:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8014434:	682b      	ldr	r3, [r5, #0]
 8014436:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014438:	62c3      	str	r3, [r0, #44]	@ 0x2c
 801443a:	e7f9      	b.n	8014430 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 801443c:	682b      	ldr	r3, [r5, #0]
 801443e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8014440:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014442:	4298      	cmp	r0, r3
 8014444:	bf2c      	ite	cs
 8014446:	2000      	movcs	r0, #0
 8014448:	2001      	movcc	r0, #1
 801444a:	e7f2      	b.n	8014432 <xTaskPriorityInherit+0x56>
 801444c:	20013748 	.word	0x20013748
 8014450:	200132e8 	.word	0x200132e8
 8014454:	2001326c 	.word	0x2001326c

08014458 <xTaskPriorityDisinherit>:
	{
 8014458:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 801445a:	b908      	cbnz	r0, 8014460 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 801445c:	2000      	movs	r0, #0
	}
 801445e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8014460:	4b1b      	ldr	r3, [pc, #108]	@ (80144d0 <xTaskPriorityDisinherit+0x78>)
 8014462:	681c      	ldr	r4, [r3, #0]
 8014464:	4284      	cmp	r4, r0
 8014466:	d008      	beq.n	801447a <xTaskPriorityDisinherit+0x22>
 8014468:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801446c:	f383 8811 	msr	BASEPRI, r3
 8014470:	f3bf 8f6f 	isb	sy
 8014474:	f3bf 8f4f 	dsb	sy
 8014478:	e7fe      	b.n	8014478 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 801447a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 801447c:	b943      	cbnz	r3, 8014490 <xTaskPriorityDisinherit+0x38>
 801447e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014482:	f383 8811 	msr	BASEPRI, r3
 8014486:	f3bf 8f6f 	isb	sy
 801448a:	f3bf 8f4f 	dsb	sy
 801448e:	e7fe      	b.n	801448e <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8014490:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8014492:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8014494:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8014496:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8014498:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801449a:	d0df      	beq.n	801445c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 801449c:	2b00      	cmp	r3, #0
 801449e:	d1dd      	bne.n	801445c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80144a0:	1d25      	adds	r5, r4, #4
 80144a2:	4628      	mov	r0, r5
 80144a4:	f7fe fc9c 	bl	8012de0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80144a8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80144aa:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80144ac:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 80144b0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80144b2:	4a08      	ldr	r2, [pc, #32]	@ (80144d4 <xTaskPriorityDisinherit+0x7c>)
 80144b4:	6811      	ldr	r1, [r2, #0]
 80144b6:	428b      	cmp	r3, r1
 80144b8:	bf88      	it	hi
 80144ba:	6013      	strhi	r3, [r2, #0]
 80144bc:	4a06      	ldr	r2, [pc, #24]	@ (80144d8 <xTaskPriorityDisinherit+0x80>)
 80144be:	2014      	movs	r0, #20
 80144c0:	fb00 2003 	mla	r0, r0, r3, r2
 80144c4:	4629      	mov	r1, r5
 80144c6:	f7fe fc69 	bl	8012d9c <vListInsertEnd>
					xReturn = pdTRUE;
 80144ca:	2001      	movs	r0, #1
		return xReturn;
 80144cc:	e7c7      	b.n	801445e <xTaskPriorityDisinherit+0x6>
 80144ce:	bf00      	nop
 80144d0:	20013748 	.word	0x20013748
 80144d4:	2001326c 	.word	0x2001326c
 80144d8:	200132e8 	.word	0x200132e8

080144dc <vTaskPriorityDisinheritAfterTimeout>:
	{
 80144dc:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80144de:	4604      	mov	r4, r0
 80144e0:	2800      	cmp	r0, #0
 80144e2:	d041      	beq.n	8014568 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 80144e4:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 80144e6:	b942      	cbnz	r2, 80144fa <vTaskPriorityDisinheritAfterTimeout+0x1e>
 80144e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80144ec:	f383 8811 	msr	BASEPRI, r3
 80144f0:	f3bf 8f6f 	isb	sy
 80144f4:	f3bf 8f4f 	dsb	sy
 80144f8:	e7fe      	b.n	80144f8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80144fa:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80144fc:	4299      	cmp	r1, r3
 80144fe:	bf38      	it	cc
 8014500:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8014502:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014504:	428b      	cmp	r3, r1
 8014506:	d02f      	beq.n	8014568 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8014508:	2a01      	cmp	r2, #1
 801450a:	d12d      	bne.n	8014568 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 801450c:	4a17      	ldr	r2, [pc, #92]	@ (801456c <vTaskPriorityDisinheritAfterTimeout+0x90>)
 801450e:	6812      	ldr	r2, [r2, #0]
 8014510:	4282      	cmp	r2, r0
 8014512:	d108      	bne.n	8014526 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8014514:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014518:	f383 8811 	msr	BASEPRI, r3
 801451c:	f3bf 8f6f 	isb	sy
 8014520:	f3bf 8f4f 	dsb	sy
 8014524:	e7fe      	b.n	8014524 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8014526:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8014528:	4d11      	ldr	r5, [pc, #68]	@ (8014570 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 801452a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801452c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801452e:	f04f 0214 	mov.w	r2, #20
 8014532:	fb02 5303 	mla	r3, r2, r3, r5
 8014536:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8014538:	bfa4      	itt	ge
 801453a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 801453e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8014540:	429a      	cmp	r2, r3
 8014542:	d111      	bne.n	8014568 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8014544:	1d06      	adds	r6, r0, #4
 8014546:	4630      	mov	r0, r6
 8014548:	f7fe fc4a 	bl	8012de0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 801454c:	4a09      	ldr	r2, [pc, #36]	@ (8014574 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 801454e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8014550:	6811      	ldr	r1, [r2, #0]
 8014552:	2014      	movs	r0, #20
 8014554:	428b      	cmp	r3, r1
 8014556:	fb00 5003 	mla	r0, r0, r3, r5
 801455a:	4631      	mov	r1, r6
	}
 801455c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8014560:	bf88      	it	hi
 8014562:	6013      	strhi	r3, [r2, #0]
 8014564:	f7fe bc1a 	b.w	8012d9c <vListInsertEnd>
	}
 8014568:	bd70      	pop	{r4, r5, r6, pc}
 801456a:	bf00      	nop
 801456c:	20013748 	.word	0x20013748
 8014570:	200132e8 	.word	0x200132e8
 8014574:	2001326c 	.word	0x2001326c

08014578 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8014578:	4b04      	ldr	r3, [pc, #16]	@ (801458c <pvTaskIncrementMutexHeldCount+0x14>)
 801457a:	681a      	ldr	r2, [r3, #0]
 801457c:	b11a      	cbz	r2, 8014586 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801457e:	6819      	ldr	r1, [r3, #0]
 8014580:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8014582:	3201      	adds	r2, #1
 8014584:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8014586:	6818      	ldr	r0, [r3, #0]
	}
 8014588:	4770      	bx	lr
 801458a:	bf00      	nop
 801458c:	20013748 	.word	0x20013748

08014590 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8014590:	4291      	cmp	r1, r2
{
 8014592:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8014594:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8014596:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8014598:	d80a      	bhi.n	80145b0 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801459a:	1ad2      	subs	r2, r2, r3
 801459c:	6983      	ldr	r3, [r0, #24]
 801459e:	429a      	cmp	r2, r3
 80145a0:	d20d      	bcs.n	80145be <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80145a2:	4b08      	ldr	r3, [pc, #32]	@ (80145c4 <prvInsertTimerInActiveList+0x34>)
 80145a4:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80145a6:	6818      	ldr	r0, [r3, #0]
 80145a8:	f7fe fc03 	bl	8012db2 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80145ac:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 80145ae:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80145b0:	429a      	cmp	r2, r3
 80145b2:	d201      	bcs.n	80145b8 <prvInsertTimerInActiveList+0x28>
 80145b4:	4299      	cmp	r1, r3
 80145b6:	d202      	bcs.n	80145be <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80145b8:	4b03      	ldr	r3, [pc, #12]	@ (80145c8 <prvInsertTimerInActiveList+0x38>)
 80145ba:	1d01      	adds	r1, r0, #4
 80145bc:	e7f3      	b.n	80145a6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80145be:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80145c0:	e7f5      	b.n	80145ae <prvInsertTimerInActiveList+0x1e>
 80145c2:	bf00      	nop
 80145c4:	20013848 	.word	0x20013848
 80145c8:	2001384c 	.word	0x2001384c

080145cc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80145cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80145ce:	4c11      	ldr	r4, [pc, #68]	@ (8014614 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80145d0:	f7fe fc80 	bl	8012ed4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80145d4:	6825      	ldr	r5, [r4, #0]
 80145d6:	b9bd      	cbnz	r5, 8014608 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80145d8:	4f0f      	ldr	r7, [pc, #60]	@ (8014618 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80145da:	4e10      	ldr	r6, [pc, #64]	@ (801461c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80145dc:	4638      	mov	r0, r7
 80145de:	f7fe fbcf 	bl	8012d80 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80145e2:	4630      	mov	r0, r6
 80145e4:	f7fe fbcc 	bl	8012d80 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80145e8:	4b0d      	ldr	r3, [pc, #52]	@ (8014620 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80145ea:	4a0e      	ldr	r2, [pc, #56]	@ (8014624 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80145ec:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80145ee:	4b0e      	ldr	r3, [pc, #56]	@ (8014628 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80145f0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80145f2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80145f4:	200a      	movs	r0, #10
 80145f6:	4b0d      	ldr	r3, [pc, #52]	@ (801462c <prvCheckForValidListAndQueue+0x60>)
 80145f8:	9500      	str	r5, [sp, #0]
 80145fa:	f7fe fe74 	bl	80132e6 <xQueueGenericCreateStatic>
 80145fe:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8014600:	b110      	cbz	r0, 8014608 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8014602:	490b      	ldr	r1, [pc, #44]	@ (8014630 <prvCheckForValidListAndQueue+0x64>)
 8014604:	f7ff fa2c 	bl	8013a60 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8014608:	b003      	add	sp, #12
 801460a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 801460e:	f7fe bc81 	b.w	8012f14 <vPortExitCritical>
 8014612:	bf00      	nop
 8014614:	20013844 	.word	0x20013844
 8014618:	20013864 	.word	0x20013864
 801461c:	20013850 	.word	0x20013850
 8014620:	2001384c 	.word	0x2001384c
 8014624:	2001379c 	.word	0x2001379c
 8014628:	20013848 	.word	0x20013848
 801462c:	2001374c 	.word	0x2001374c
 8014630:	0803063b 	.word	0x0803063b

08014634 <xTimerCreateTimerTask>:
{
 8014634:	b510      	push	{r4, lr}
 8014636:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8014638:	f7ff ffc8 	bl	80145cc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 801463c:	4b12      	ldr	r3, [pc, #72]	@ (8014688 <xTimerCreateTimerTask+0x54>)
 801463e:	681b      	ldr	r3, [r3, #0]
 8014640:	b1b3      	cbz	r3, 8014670 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8014642:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8014644:	aa07      	add	r2, sp, #28
 8014646:	a906      	add	r1, sp, #24
 8014648:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801464a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801464e:	f7fe fa8f 	bl	8012b70 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8014652:	9b05      	ldr	r3, [sp, #20]
 8014654:	9302      	str	r3, [sp, #8]
 8014656:	9b06      	ldr	r3, [sp, #24]
 8014658:	9301      	str	r3, [sp, #4]
 801465a:	2302      	movs	r3, #2
 801465c:	9300      	str	r3, [sp, #0]
 801465e:	9a07      	ldr	r2, [sp, #28]
 8014660:	490a      	ldr	r1, [pc, #40]	@ (801468c <xTimerCreateTimerTask+0x58>)
 8014662:	480b      	ldr	r0, [pc, #44]	@ (8014690 <xTimerCreateTimerTask+0x5c>)
 8014664:	4623      	mov	r3, r4
 8014666:	f7ff fbc0 	bl	8013dea <xTaskCreateStatic>
 801466a:	4b0a      	ldr	r3, [pc, #40]	@ (8014694 <xTimerCreateTimerTask+0x60>)
 801466c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801466e:	b940      	cbnz	r0, 8014682 <xTimerCreateTimerTask+0x4e>
 8014670:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014674:	f383 8811 	msr	BASEPRI, r3
 8014678:	f3bf 8f6f 	isb	sy
 801467c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8014680:	e7fe      	b.n	8014680 <xTimerCreateTimerTask+0x4c>
}
 8014682:	2001      	movs	r0, #1
 8014684:	b008      	add	sp, #32
 8014686:	bd10      	pop	{r4, pc}
 8014688:	20013844 	.word	0x20013844
 801468c:	08030640 	.word	0x08030640
 8014690:	08014795 	.word	0x08014795
 8014694:	20013840 	.word	0x20013840

08014698 <xTimerGenericCommand>:
{
 8014698:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801469a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 801469c:	4604      	mov	r4, r0
{
 801469e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80146a0:	b940      	cbnz	r0, 80146b4 <xTimerGenericCommand+0x1c>
 80146a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80146a6:	f383 8811 	msr	BASEPRI, r3
 80146aa:	f3bf 8f6f 	isb	sy
 80146ae:	f3bf 8f4f 	dsb	sy
 80146b2:	e7fe      	b.n	80146b2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80146b4:	4d0d      	ldr	r5, [pc, #52]	@ (80146ec <xTimerGenericCommand+0x54>)
 80146b6:	6828      	ldr	r0, [r5, #0]
 80146b8:	b180      	cbz	r0, 80146dc <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80146ba:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80146bc:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80146c0:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80146c2:	dc0d      	bgt.n	80146e0 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80146c4:	f7ff fe7a 	bl	80143bc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80146c8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80146ca:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80146cc:	bf08      	it	eq
 80146ce:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80146d0:	6828      	ldr	r0, [r5, #0]
 80146d2:	bf18      	it	ne
 80146d4:	461a      	movne	r2, r3
 80146d6:	4669      	mov	r1, sp
 80146d8:	f7fe feba 	bl	8013450 <xQueueGenericSend>
}
 80146dc:	b004      	add	sp, #16
 80146de:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80146e0:	2300      	movs	r3, #0
 80146e2:	4669      	mov	r1, sp
 80146e4:	f7fe ff66 	bl	80135b4 <xQueueGenericSendFromISR>
 80146e8:	e7f8      	b.n	80146dc <xTimerGenericCommand+0x44>
 80146ea:	bf00      	nop
 80146ec:	20013844 	.word	0x20013844

080146f0 <prvSampleTimeNow>:
{
 80146f0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 80146f4:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8014790 <prvSampleTimeNow+0xa0>
{
 80146f8:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 80146fa:	f7ff fc2b 	bl	8013f54 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80146fe:	f8d8 3000 	ldr.w	r3, [r8]
 8014702:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8014704:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8014706:	d909      	bls.n	801471c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8014708:	4f1f      	ldr	r7, [pc, #124]	@ (8014788 <prvSampleTimeNow+0x98>)
 801470a:	683b      	ldr	r3, [r7, #0]
 801470c:	681a      	ldr	r2, [r3, #0]
 801470e:	b96a      	cbnz	r2, 801472c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8014710:	4a1e      	ldr	r2, [pc, #120]	@ (801478c <prvSampleTimeNow+0x9c>)
 8014712:	6811      	ldr	r1, [r2, #0]
 8014714:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8014716:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8014718:	2301      	movs	r3, #1
 801471a:	e000      	b.n	801471e <prvSampleTimeNow+0x2e>
 801471c:	2300      	movs	r3, #0
}
 801471e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8014720:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8014722:	f8c8 5000 	str.w	r5, [r8]
}
 8014726:	b002      	add	sp, #8
 8014728:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801472c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801472e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8014730:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8014734:	f104 0a04 	add.w	sl, r4, #4
 8014738:	4650      	mov	r0, sl
 801473a:	f7fe fb51 	bl	8012de0 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801473e:	6a23      	ldr	r3, [r4, #32]
 8014740:	4620      	mov	r0, r4
 8014742:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8014744:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8014748:	075b      	lsls	r3, r3, #29
 801474a:	d5de      	bpl.n	801470a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 801474c:	69a3      	ldr	r3, [r4, #24]
 801474e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8014750:	4599      	cmp	r9, r3
 8014752:	d206      	bcs.n	8014762 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8014754:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8014756:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8014758:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801475a:	4651      	mov	r1, sl
 801475c:	f7fe fb29 	bl	8012db2 <vListInsert>
 8014760:	e7d3      	b.n	801470a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8014762:	2300      	movs	r3, #0
 8014764:	9300      	str	r3, [sp, #0]
 8014766:	464a      	mov	r2, r9
 8014768:	4619      	mov	r1, r3
 801476a:	4620      	mov	r0, r4
 801476c:	f7ff ff94 	bl	8014698 <xTimerGenericCommand>
				configASSERT( xResult );
 8014770:	2800      	cmp	r0, #0
 8014772:	d1ca      	bne.n	801470a <prvSampleTimeNow+0x1a>
 8014774:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014778:	f383 8811 	msr	BASEPRI, r3
 801477c:	f3bf 8f6f 	isb	sy
 8014780:	f3bf 8f4f 	dsb	sy
 8014784:	e7fe      	b.n	8014784 <prvSampleTimeNow+0x94>
 8014786:	bf00      	nop
 8014788:	2001384c 	.word	0x2001384c
 801478c:	20013848 	.word	0x20013848
 8014790:	2001383c 	.word	0x2001383c

08014794 <prvTimerTask>:
{
 8014794:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8014798:	4d6e      	ldr	r5, [pc, #440]	@ (8014954 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 801479a:	4e6f      	ldr	r6, [pc, #444]	@ (8014958 <prvTimerTask+0x1c4>)
{
 801479c:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801479e:	682b      	ldr	r3, [r5, #0]
 80147a0:	f8d3 8000 	ldr.w	r8, [r3]
 80147a4:	f1b8 0f00 	cmp.w	r8, #0
 80147a8:	d035      	beq.n	8014816 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80147aa:	68db      	ldr	r3, [r3, #12]
 80147ac:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80147b0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 80147b2:	f7ff fbc7 	bl	8013f44 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80147b6:	a804      	add	r0, sp, #16
 80147b8:	f7ff ff9a 	bl	80146f0 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 80147bc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80147be:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 80147c0:	2b00      	cmp	r3, #0
 80147c2:	d169      	bne.n	8014898 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80147c4:	2c00      	cmp	r4, #0
 80147c6:	d14c      	bne.n	8014862 <prvTimerTask+0xce>
 80147c8:	4540      	cmp	r0, r8
 80147ca:	d350      	bcc.n	801486e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 80147cc:	f7ff fc5e 	bl	801408c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80147d0:	682b      	ldr	r3, [r5, #0]
 80147d2:	68db      	ldr	r3, [r3, #12]
 80147d4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80147d6:	1d38      	adds	r0, r7, #4
 80147d8:	f7fe fb02 	bl	8012de0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80147dc:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80147e0:	0758      	lsls	r0, r3, #29
 80147e2:	d51a      	bpl.n	801481a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80147e4:	69b9      	ldr	r1, [r7, #24]
 80147e6:	4643      	mov	r3, r8
 80147e8:	464a      	mov	r2, r9
 80147ea:	4441      	add	r1, r8
 80147ec:	4638      	mov	r0, r7
 80147ee:	f7ff fecf 	bl	8014590 <prvInsertTimerInActiveList>
 80147f2:	b1b0      	cbz	r0, 8014822 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80147f4:	9400      	str	r4, [sp, #0]
 80147f6:	4623      	mov	r3, r4
 80147f8:	4642      	mov	r2, r8
 80147fa:	4621      	mov	r1, r4
 80147fc:	4638      	mov	r0, r7
 80147fe:	f7ff ff4b 	bl	8014698 <xTimerGenericCommand>
			configASSERT( xResult );
 8014802:	b970      	cbnz	r0, 8014822 <prvTimerTask+0x8e>
 8014804:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014808:	f383 8811 	msr	BASEPRI, r3
 801480c:	f3bf 8f6f 	isb	sy
 8014810:	f3bf 8f4f 	dsb	sy
 8014814:	e7fe      	b.n	8014814 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8014816:	2401      	movs	r4, #1
 8014818:	e7cb      	b.n	80147b2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801481a:	f023 0301 	bic.w	r3, r3, #1
 801481e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8014822:	6a3b      	ldr	r3, [r7, #32]
 8014824:	4638      	mov	r0, r7
 8014826:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8014828:	6830      	ldr	r0, [r6, #0]
 801482a:	2200      	movs	r2, #0
 801482c:	a904      	add	r1, sp, #16
 801482e:	f7fe ff6f 	bl	8013710 <xQueueReceive>
 8014832:	2800      	cmp	r0, #0
 8014834:	d0b3      	beq.n	801479e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8014836:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8014838:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 801483a:	2b00      	cmp	r3, #0
 801483c:	db2f      	blt.n	801489e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 801483e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8014840:	6963      	ldr	r3, [r4, #20]
 8014842:	2b00      	cmp	r3, #0
 8014844:	d132      	bne.n	80148ac <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8014846:	a803      	add	r0, sp, #12
 8014848:	f7ff ff52 	bl	80146f0 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 801484c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 801484e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8014850:	2b09      	cmp	r3, #9
 8014852:	d8e9      	bhi.n	8014828 <prvTimerTask+0x94>
 8014854:	e8df f003 	tbb	[pc, r3]
 8014858:	572e2e2e 	.word	0x572e2e2e
 801485c:	2e2e765e 	.word	0x2e2e765e
 8014860:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8014862:	4b3e      	ldr	r3, [pc, #248]	@ (801495c <prvTimerTask+0x1c8>)
 8014864:	681b      	ldr	r3, [r3, #0]
 8014866:	681c      	ldr	r4, [r3, #0]
 8014868:	fab4 f484 	clz	r4, r4
 801486c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 801486e:	6830      	ldr	r0, [r6, #0]
 8014870:	4622      	mov	r2, r4
 8014872:	eba8 0109 	sub.w	r1, r8, r9
 8014876:	f7ff f932 	bl	8013ade <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 801487a:	f7ff fc07 	bl	801408c <xTaskResumeAll>
 801487e:	2800      	cmp	r0, #0
 8014880:	d1d2      	bne.n	8014828 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8014882:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8014886:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801488a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801488e:	f3bf 8f4f 	dsb	sy
 8014892:	f3bf 8f6f 	isb	sy
 8014896:	e7c7      	b.n	8014828 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8014898:	f7ff fbf8 	bl	801408c <xTaskResumeAll>
}
 801489c:	e7c4      	b.n	8014828 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 801489e:	9b05      	ldr	r3, [sp, #20]
 80148a0:	9907      	ldr	r1, [sp, #28]
 80148a2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80148a4:	9b04      	ldr	r3, [sp, #16]
 80148a6:	2b00      	cmp	r3, #0
 80148a8:	dbbe      	blt.n	8014828 <prvTimerTask+0x94>
 80148aa:	e7c8      	b.n	801483e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80148ac:	1d20      	adds	r0, r4, #4
 80148ae:	f7fe fa97 	bl	8012de0 <uxListRemove>
 80148b2:	e7c8      	b.n	8014846 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80148b4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80148b8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80148ba:	f043 0301 	orr.w	r3, r3, #1
 80148be:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80148c2:	9b05      	ldr	r3, [sp, #20]
 80148c4:	4620      	mov	r0, r4
 80148c6:	4419      	add	r1, r3
 80148c8:	f7ff fe62 	bl	8014590 <prvInsertTimerInActiveList>
 80148cc:	2800      	cmp	r0, #0
 80148ce:	d0ab      	beq.n	8014828 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80148d0:	6a23      	ldr	r3, [r4, #32]
 80148d2:	4620      	mov	r0, r4
 80148d4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80148d6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80148da:	0759      	lsls	r1, r3, #29
 80148dc:	d5a4      	bpl.n	8014828 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80148de:	69a2      	ldr	r2, [r4, #24]
 80148e0:	9905      	ldr	r1, [sp, #20]
 80148e2:	2300      	movs	r3, #0
 80148e4:	440a      	add	r2, r1
 80148e6:	9300      	str	r3, [sp, #0]
 80148e8:	4619      	mov	r1, r3
 80148ea:	4620      	mov	r0, r4
 80148ec:	f7ff fed4 	bl	8014698 <xTimerGenericCommand>
							configASSERT( xResult );
 80148f0:	2800      	cmp	r0, #0
 80148f2:	d199      	bne.n	8014828 <prvTimerTask+0x94>
 80148f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80148f8:	f383 8811 	msr	BASEPRI, r3
 80148fc:	f3bf 8f6f 	isb	sy
 8014900:	f3bf 8f4f 	dsb	sy
 8014904:	e7fe      	b.n	8014904 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8014906:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801490a:	f023 0301 	bic.w	r3, r3, #1
 801490e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8014912:	e789      	b.n	8014828 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8014914:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8014918:	f043 0301 	orr.w	r3, r3, #1
 801491c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8014920:	9905      	ldr	r1, [sp, #20]
 8014922:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8014924:	b941      	cbnz	r1, 8014938 <prvTimerTask+0x1a4>
 8014926:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801492a:	f383 8811 	msr	BASEPRI, r3
 801492e:	f3bf 8f6f 	isb	sy
 8014932:	f3bf 8f4f 	dsb	sy
 8014936:	e7fe      	b.n	8014936 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8014938:	4603      	mov	r3, r0
 801493a:	4401      	add	r1, r0
 801493c:	4620      	mov	r0, r4
 801493e:	f7ff fe27 	bl	8014590 <prvInsertTimerInActiveList>
					break;
 8014942:	e771      	b.n	8014828 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8014944:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8014948:	079a      	lsls	r2, r3, #30
 801494a:	d4de      	bmi.n	801490a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 801494c:	4620      	mov	r0, r4
 801494e:	f7fe f9d9 	bl	8012d04 <vPortFree>
 8014952:	e769      	b.n	8014828 <prvTimerTask+0x94>
 8014954:	2001384c 	.word	0x2001384c
 8014958:	20013844 	.word	0x20013844
 801495c:	20013848 	.word	0x20013848

08014960 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8014960:	8880      	ldrh	r0, [r0, #4]
 8014962:	4770      	bx	lr

08014964 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8014964:	b570      	push	{r4, r5, r6, lr}
 8014966:	6803      	ldr	r3, [r0, #0]
 8014968:	4605      	mov	r5, r0
 801496a:	460c      	mov	r4, r1
 801496c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801496e:	2100      	movs	r1, #0
 8014970:	4798      	blx	r3
 8014972:	682b      	ldr	r3, [r5, #0]
 8014974:	4606      	mov	r6, r0
 8014976:	6a1b      	ldr	r3, [r3, #32]
 8014978:	4628      	mov	r0, r5
 801497a:	4798      	blx	r3
 801497c:	1ba4      	subs	r4, r4, r6
 801497e:	b2a4      	uxth	r4, r4
 8014980:	fbb4 f0f0 	udiv	r0, r4, r0
 8014984:	bd70      	pop	{r4, r5, r6, pc}

08014986 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8014986:	2300      	movs	r3, #0
 8014988:	8083      	strh	r3, [r0, #4]
 801498a:	4770      	bx	lr

0801498c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 801498c:	b510      	push	{r4, lr}
 801498e:	6803      	ldr	r3, [r0, #0]
 8014990:	8881      	ldrh	r1, [r0, #4]
 8014992:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8014994:	4604      	mov	r4, r0
 8014996:	4798      	blx	r3
 8014998:	88a3      	ldrh	r3, [r4, #4]
 801499a:	3301      	adds	r3, #1
 801499c:	80a3      	strh	r3, [r4, #4]
 801499e:	bd10      	pop	{r4, pc}

080149a0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80149a0:	6803      	ldr	r3, [r0, #0]
 80149a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80149a4:	4718      	bx	r3

080149a6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80149a6:	4770      	bx	lr

080149a8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80149a8:	4a02      	ldr	r2, [pc, #8]	@ (80149b4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80149aa:	6002      	str	r2, [r0, #0]
 80149ac:	2200      	movs	r2, #0
 80149ae:	8082      	strh	r2, [r0, #4]
 80149b0:	4770      	bx	lr
 80149b2:	bf00      	nop
 80149b4:	0803204c 	.word	0x0803204c

080149b8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80149b8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80149ba:	2000      	movs	r0, #0
 80149bc:	b12b      	cbz	r3, 80149ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80149be:	b920      	cbnz	r0, 80149ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80149c0:	1a5a      	subs	r2, r3, r1
 80149c2:	4250      	negs	r0, r2
 80149c4:	4150      	adcs	r0, r2
 80149c6:	699b      	ldr	r3, [r3, #24]
 80149c8:	e7f8      	b.n	80149bc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80149ca:	4770      	bx	lr

080149cc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80149cc:	2300      	movs	r3, #0
 80149ce:	6148      	str	r0, [r1, #20]
 80149d0:	618b      	str	r3, [r1, #24]
 80149d2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80149d4:	b913      	cbnz	r3, 80149dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80149d6:	6281      	str	r1, [r0, #40]	@ 0x28
 80149d8:	4770      	bx	lr
 80149da:	4613      	mov	r3, r2
 80149dc:	699a      	ldr	r2, [r3, #24]
 80149de:	2a00      	cmp	r2, #0
 80149e0:	d1fb      	bne.n	80149da <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80149e2:	6199      	str	r1, [r3, #24]
 80149e4:	4770      	bx	lr

080149e6 <_ZN8touchgfx9Container9removeAllEv>:
 80149e6:	2200      	movs	r2, #0
 80149e8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80149ea:	b123      	cbz	r3, 80149f6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80149ec:	6999      	ldr	r1, [r3, #24]
 80149ee:	6281      	str	r1, [r0, #40]	@ 0x28
 80149f0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80149f4:	e7f8      	b.n	80149e8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80149f6:	4770      	bx	lr

080149f8 <_ZN8touchgfx9Container6unlinkEv>:
 80149f8:	2300      	movs	r3, #0
 80149fa:	6283      	str	r3, [r0, #40]	@ 0x28
 80149fc:	4770      	bx	lr

080149fe <_ZNK8touchgfx9Container12getSolidRectEv>:
 80149fe:	2200      	movs	r2, #0
 8014a00:	8002      	strh	r2, [r0, #0]
 8014a02:	8042      	strh	r2, [r0, #2]
 8014a04:	8082      	strh	r2, [r0, #4]
 8014a06:	80c2      	strh	r2, [r0, #6]
 8014a08:	4770      	bx	lr

08014a0a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8014a0a:	b570      	push	{r4, r5, r6, lr}
 8014a0c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8014a0e:	460d      	mov	r5, r1
 8014a10:	4616      	mov	r6, r2
 8014a12:	b13c      	cbz	r4, 8014a24 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8014a14:	6823      	ldr	r3, [r4, #0]
 8014a16:	4620      	mov	r0, r4
 8014a18:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8014a1a:	4632      	mov	r2, r6
 8014a1c:	4629      	mov	r1, r5
 8014a1e:	4798      	blx	r3
 8014a20:	69a4      	ldr	r4, [r4, #24]
 8014a22:	e7f6      	b.n	8014a12 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8014a24:	bd70      	pop	{r4, r5, r6, pc}

08014a26 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8014a26:	b538      	push	{r3, r4, r5, lr}
 8014a28:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8014a2a:	460d      	mov	r5, r1
 8014a2c:	b134      	cbz	r4, 8014a3c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8014a2e:	682b      	ldr	r3, [r5, #0]
 8014a30:	4621      	mov	r1, r4
 8014a32:	689b      	ldr	r3, [r3, #8]
 8014a34:	4628      	mov	r0, r5
 8014a36:	4798      	blx	r3
 8014a38:	69a4      	ldr	r4, [r4, #24]
 8014a3a:	e7f7      	b.n	8014a2c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8014a3c:	bd38      	pop	{r3, r4, r5, pc}

08014a3e <_ZN8touchgfx9ContainerD1Ev>:
 8014a3e:	4770      	bx	lr

08014a40 <_ZN8touchgfx9ContainerD0Ev>:
 8014a40:	b510      	push	{r4, lr}
 8014a42:	212c      	movs	r1, #44	@ 0x2c
 8014a44:	4604      	mov	r4, r0
 8014a46:	f018 fbd6 	bl	802d1f6 <_ZdlPvj>
 8014a4a:	4620      	mov	r0, r4
 8014a4c:	bd10      	pop	{r4, pc}

08014a4e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8014a4e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8014a50:	b19b      	cbz	r3, 8014a7a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8014a52:	428b      	cmp	r3, r1
 8014a54:	d109      	bne.n	8014a6a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8014a56:	699a      	ldr	r2, [r3, #24]
 8014a58:	2100      	movs	r1, #0
 8014a5a:	6159      	str	r1, [r3, #20]
 8014a5c:	6282      	str	r2, [r0, #40]	@ 0x28
 8014a5e:	b902      	cbnz	r2, 8014a62 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8014a60:	4770      	bx	lr
 8014a62:	6199      	str	r1, [r3, #24]
 8014a64:	4770      	bx	lr
 8014a66:	4613      	mov	r3, r2
 8014a68:	b13a      	cbz	r2, 8014a7a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8014a6a:	699a      	ldr	r2, [r3, #24]
 8014a6c:	428a      	cmp	r2, r1
 8014a6e:	d1fa      	bne.n	8014a66 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8014a70:	698a      	ldr	r2, [r1, #24]
 8014a72:	619a      	str	r2, [r3, #24]
 8014a74:	2300      	movs	r3, #0
 8014a76:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8014a7a:	4770      	bx	lr

08014a7c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8014a7c:	b410      	push	{r4}
 8014a7e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8014a80:	4604      	mov	r4, r0
 8014a82:	b92b      	cbnz	r3, 8014a90 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8014a84:	6803      	ldr	r3, [r0, #0]
 8014a86:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014a8a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8014a8c:	4611      	mov	r1, r2
 8014a8e:	4718      	bx	r3
 8014a90:	b941      	cbnz	r1, 8014aa4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8014a92:	6193      	str	r3, [r2, #24]
 8014a94:	6282      	str	r2, [r0, #40]	@ 0x28
 8014a96:	6154      	str	r4, [r2, #20]
 8014a98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014a9c:	4770      	bx	lr
 8014a9e:	4603      	mov	r3, r0
 8014aa0:	2800      	cmp	r0, #0
 8014aa2:	d0f9      	beq.n	8014a98 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8014aa4:	4299      	cmp	r1, r3
 8014aa6:	6998      	ldr	r0, [r3, #24]
 8014aa8:	d1f9      	bne.n	8014a9e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8014aaa:	6190      	str	r0, [r2, #24]
 8014aac:	618a      	str	r2, [r1, #24]
 8014aae:	e7f2      	b.n	8014a96 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08014ab0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8014ab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014ab4:	461f      	mov	r7, r3
 8014ab6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8014aba:	460d      	mov	r5, r1
 8014abc:	4616      	mov	r6, r2
 8014abe:	b103      	cbz	r3, 8014ac2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8014ac0:	6038      	str	r0, [r7, #0]
 8014ac2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8014ac4:	b314      	cbz	r4, 8014b0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8014ac6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8014aca:	b1eb      	cbz	r3, 8014b08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8014acc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014ad0:	428d      	cmp	r5, r1
 8014ad2:	db19      	blt.n	8014b08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8014ad4:	8923      	ldrh	r3, [r4, #8]
 8014ad6:	b289      	uxth	r1, r1
 8014ad8:	440b      	add	r3, r1
 8014ada:	b21b      	sxth	r3, r3
 8014adc:	429d      	cmp	r5, r3
 8014ade:	da13      	bge.n	8014b08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8014ae0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8014ae4:	4296      	cmp	r6, r2
 8014ae6:	db0f      	blt.n	8014b08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8014ae8:	8963      	ldrh	r3, [r4, #10]
 8014aea:	b292      	uxth	r2, r2
 8014aec:	4413      	add	r3, r2
 8014aee:	b21b      	sxth	r3, r3
 8014af0:	429e      	cmp	r6, r3
 8014af2:	da09      	bge.n	8014b08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8014af4:	6823      	ldr	r3, [r4, #0]
 8014af6:	1ab2      	subs	r2, r6, r2
 8014af8:	1a69      	subs	r1, r5, r1
 8014afa:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8014afe:	b212      	sxth	r2, r2
 8014b00:	463b      	mov	r3, r7
 8014b02:	b209      	sxth	r1, r1
 8014b04:	4620      	mov	r0, r4
 8014b06:	47c0      	blx	r8
 8014b08:	69a4      	ldr	r4, [r4, #24]
 8014b0a:	e7db      	b.n	8014ac4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8014b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8014b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b14:	4c6e      	ldr	r4, [pc, #440]	@ (8014cd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8014b16:	b0a1      	sub	sp, #132	@ 0x84
 8014b18:	6824      	ldr	r4, [r4, #0]
 8014b1a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8014b1c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8014b20:	9303      	str	r3, [sp, #12]
 8014b22:	2400      	movs	r4, #0
 8014b24:	802c      	strh	r4, [r5, #0]
 8014b26:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8014b28:	802c      	strh	r4, [r5, #0]
 8014b2a:	601c      	str	r4, [r3, #0]
 8014b2c:	4606      	mov	r6, r0
 8014b2e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8014b32:	f7ff ffbd 	bl	8014ab0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8014b36:	f1b9 0f03 	cmp.w	r9, #3
 8014b3a:	f340 80c2 	ble.w	8014cc2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8014b3e:	4631      	mov	r1, r6
 8014b40:	a80c      	add	r0, sp, #48	@ 0x30
 8014b42:	f007 fb15 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014b46:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8014b4a:	9306      	str	r3, [sp, #24]
 8014b4c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8014b50:	9307      	str	r3, [sp, #28]
 8014b52:	9b03      	ldr	r3, [sp, #12]
 8014b54:	f8d3 a000 	ldr.w	sl, [r3]
 8014b58:	f1ba 0f00 	cmp.w	sl, #0
 8014b5c:	f000 80b4 	beq.w	8014cc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8014b60:	4651      	mov	r1, sl
 8014b62:	a810      	add	r0, sp, #64	@ 0x40
 8014b64:	f007 fb04 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014b68:	9b01      	ldr	r3, [sp, #4]
 8014b6a:	9a06      	ldr	r2, [sp, #24]
 8014b6c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8014b70:	189d      	adds	r5, r3, r2
 8014b72:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8014b76:	9a07      	ldr	r2, [sp, #28]
 8014b78:	2002      	movs	r0, #2
 8014b7a:	fb91 f1f0 	sdiv	r1, r1, r0
 8014b7e:	4419      	add	r1, r3
 8014b80:	1a6d      	subs	r5, r5, r1
 8014b82:	9b02      	ldr	r3, [sp, #8]
 8014b84:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8014b88:	4413      	add	r3, r2
 8014b8a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8014b8e:	fb92 f2f0 	sdiv	r2, r2, r0
 8014b92:	440a      	add	r2, r1
 8014b94:	1a9b      	subs	r3, r3, r2
 8014b96:	435b      	muls	r3, r3
 8014b98:	fb05 3505 	mla	r5, r5, r5, r3
 8014b9c:	4f4d      	ldr	r7, [pc, #308]	@ (8014cd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8014b9e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8014ba0:	ac10      	add	r4, sp, #64	@ 0x40
 8014ba2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014ba4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8014ba6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014ba8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8014baa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014bac:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8014bb0:	f1b9 0f0c 	cmp.w	r9, #12
 8014bb4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8014bb8:	f04f 0303 	mov.w	r3, #3
 8014bbc:	bfc8      	it	gt
 8014bbe:	4698      	movgt	r8, r3
 8014bc0:	f8cd 9000 	str.w	r9, [sp]
 8014bc4:	f04f 0400 	mov.w	r4, #0
 8014bc8:	bfdc      	itt	le
 8014bca:	f109 32ff 	addle.w	r2, r9, #4294967295
 8014bce:	fb92 f8f3 	sdivle	r8, r2, r3
 8014bd2:	1c63      	adds	r3, r4, #1
 8014bd4:	aa10      	add	r2, sp, #64	@ 0x40
 8014bd6:	f004 0401 	and.w	r4, r4, #1
 8014bda:	9308      	str	r3, [sp, #32]
 8014bdc:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8014be0:	9b00      	ldr	r3, [sp, #0]
 8014be2:	fb93 f3f8 	sdiv	r3, r3, r8
 8014be6:	b29b      	uxth	r3, r3
 8014be8:	3404      	adds	r4, #4
 8014bea:	f04f 0b00 	mov.w	fp, #0
 8014bee:	9304      	str	r3, [sp, #16]
 8014bf0:	9a04      	ldr	r2, [sp, #16]
 8014bf2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8014bf6:	fb13 f302 	smulbb	r3, r3, r2
 8014bfa:	9a01      	ldr	r2, [sp, #4]
 8014bfc:	b29b      	uxth	r3, r3
 8014bfe:	1899      	adds	r1, r3, r2
 8014c00:	9305      	str	r3, [sp, #20]
 8014c02:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8014c06:	b209      	sxth	r1, r1
 8014c08:	4299      	cmp	r1, r3
 8014c0a:	db4d      	blt.n	8014ca8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8014c0c:	8932      	ldrh	r2, [r6, #8]
 8014c0e:	4413      	add	r3, r2
 8014c10:	b21b      	sxth	r3, r3
 8014c12:	4299      	cmp	r1, r3
 8014c14:	da48      	bge.n	8014ca8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8014c16:	9b04      	ldr	r3, [sp, #16]
 8014c18:	6827      	ldr	r7, [r4, #0]
 8014c1a:	fb17 f703 	smulbb	r7, r7, r3
 8014c1e:	9b02      	ldr	r3, [sp, #8]
 8014c20:	b2bf      	uxth	r7, r7
 8014c22:	18fa      	adds	r2, r7, r3
 8014c24:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8014c28:	b212      	sxth	r2, r2
 8014c2a:	429a      	cmp	r2, r3
 8014c2c:	db3c      	blt.n	8014ca8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8014c2e:	8970      	ldrh	r0, [r6, #10]
 8014c30:	4403      	add	r3, r0
 8014c32:	b21b      	sxth	r3, r3
 8014c34:	429a      	cmp	r2, r3
 8014c36:	da37      	bge.n	8014ca8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8014c38:	2300      	movs	r3, #0
 8014c3a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014c3c:	4630      	mov	r0, r6
 8014c3e:	ab0b      	add	r3, sp, #44	@ 0x2c
 8014c40:	f7ff ff36 	bl	8014ab0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8014c44:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014c46:	b37a      	cbz	r2, 8014ca8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8014c48:	4552      	cmp	r2, sl
 8014c4a:	d02d      	beq.n	8014ca8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8014c4c:	4611      	mov	r1, r2
 8014c4e:	a80e      	add	r0, sp, #56	@ 0x38
 8014c50:	9209      	str	r2, [sp, #36]	@ 0x24
 8014c52:	f007 fa8d 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014c56:	9a06      	ldr	r2, [sp, #24]
 8014c58:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8014c5c:	9b01      	ldr	r3, [sp, #4]
 8014c5e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8014c62:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8014c66:	4413      	add	r3, r2
 8014c68:	f04f 0e02 	mov.w	lr, #2
 8014c6c:	fb91 f1fe 	sdiv	r1, r1, lr
 8014c70:	4401      	add	r1, r0
 8014c72:	1a58      	subs	r0, r3, r1
 8014c74:	9a07      	ldr	r2, [sp, #28]
 8014c76:	9b02      	ldr	r3, [sp, #8]
 8014c78:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8014c7c:	fb9c fcfe 	sdiv	ip, ip, lr
 8014c80:	4413      	add	r3, r2
 8014c82:	448c      	add	ip, r1
 8014c84:	eba3 030c 	sub.w	r3, r3, ip
 8014c88:	435b      	muls	r3, r3
 8014c8a:	fb00 3300 	mla	r3, r0, r0, r3
 8014c8e:	42ab      	cmp	r3, r5
 8014c90:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014c92:	d208      	bcs.n	8014ca6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8014c94:	9803      	ldr	r0, [sp, #12]
 8014c96:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8014c98:	6001      	str	r1, [r0, #0]
 8014c9a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8014c9c:	9805      	ldr	r0, [sp, #20]
 8014c9e:	8008      	strh	r0, [r1, #0]
 8014ca0:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8014ca2:	461d      	mov	r5, r3
 8014ca4:	800f      	strh	r7, [r1, #0]
 8014ca6:	4692      	mov	sl, r2
 8014ca8:	f10b 0b01 	add.w	fp, fp, #1
 8014cac:	f1bb 0f04 	cmp.w	fp, #4
 8014cb0:	f104 0408 	add.w	r4, r4, #8
 8014cb4:	d19c      	bne.n	8014bf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8014cb6:	9b00      	ldr	r3, [sp, #0]
 8014cb8:	9c08      	ldr	r4, [sp, #32]
 8014cba:	444b      	add	r3, r9
 8014cbc:	4544      	cmp	r4, r8
 8014cbe:	9300      	str	r3, [sp, #0]
 8014cc0:	d187      	bne.n	8014bd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8014cc2:	b021      	add	sp, #132	@ 0x84
 8014cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cc8:	f04f 35ff 	mov.w	r5, #4294967295
 8014ccc:	e766      	b.n	8014b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8014cce:	bf00      	nop
 8014cd0:	20013884 	.word	0x20013884
 8014cd4:	0802f0c4 	.word	0x0802f0c4

08014cd8 <_ZN8touchgfx4RectaNERKS0_>:
 8014cd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014cdc:	f9b1 7000 	ldrsh.w	r7, [r1]
 8014ce0:	888c      	ldrh	r4, [r1, #4]
 8014ce2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014ce6:	443c      	add	r4, r7
 8014ce8:	b2a4      	uxth	r4, r4
 8014cea:	fa0f f884 	sxth.w	r8, r4
 8014cee:	45c1      	cmp	r9, r8
 8014cf0:	da2f      	bge.n	8014d52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8014cf2:	8882      	ldrh	r2, [r0, #4]
 8014cf4:	444a      	add	r2, r9
 8014cf6:	b292      	uxth	r2, r2
 8014cf8:	fa0f fe82 	sxth.w	lr, r2
 8014cfc:	4577      	cmp	r7, lr
 8014cfe:	da28      	bge.n	8014d52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8014d00:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8014d04:	88cb      	ldrh	r3, [r1, #6]
 8014d06:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014d0a:	442b      	add	r3, r5
 8014d0c:	b21b      	sxth	r3, r3
 8014d0e:	429e      	cmp	r6, r3
 8014d10:	da1f      	bge.n	8014d52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8014d12:	88c3      	ldrh	r3, [r0, #6]
 8014d14:	4433      	add	r3, r6
 8014d16:	b29b      	uxth	r3, r3
 8014d18:	fa0f fc83 	sxth.w	ip, r3
 8014d1c:	4565      	cmp	r5, ip
 8014d1e:	da18      	bge.n	8014d52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8014d20:	454f      	cmp	r7, r9
 8014d22:	bfb8      	it	lt
 8014d24:	464f      	movlt	r7, r9
 8014d26:	42b5      	cmp	r5, r6
 8014d28:	bfb8      	it	lt
 8014d2a:	4635      	movlt	r5, r6
 8014d2c:	45f0      	cmp	r8, lr
 8014d2e:	bfd8      	it	le
 8014d30:	4622      	movle	r2, r4
 8014d32:	1bd2      	subs	r2, r2, r7
 8014d34:	8082      	strh	r2, [r0, #4]
 8014d36:	884a      	ldrh	r2, [r1, #2]
 8014d38:	88c9      	ldrh	r1, [r1, #6]
 8014d3a:	8007      	strh	r7, [r0, #0]
 8014d3c:	440a      	add	r2, r1
 8014d3e:	b292      	uxth	r2, r2
 8014d40:	b211      	sxth	r1, r2
 8014d42:	458c      	cmp	ip, r1
 8014d44:	bfa8      	it	ge
 8014d46:	4613      	movge	r3, r2
 8014d48:	1b5b      	subs	r3, r3, r5
 8014d4a:	80c3      	strh	r3, [r0, #6]
 8014d4c:	8045      	strh	r5, [r0, #2]
 8014d4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014d52:	2300      	movs	r3, #0
 8014d54:	8003      	strh	r3, [r0, #0]
 8014d56:	8043      	strh	r3, [r0, #2]
 8014d58:	8083      	strh	r3, [r0, #4]
 8014d5a:	80c3      	strh	r3, [r0, #6]
 8014d5c:	e7f7      	b.n	8014d4e <_ZN8touchgfx4RectaNERKS0_+0x76>

08014d5e <_ZNK8touchgfx4Rect7isEmptyEv>:
 8014d5e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014d62:	2b00      	cmp	r3, #0
 8014d64:	dd06      	ble.n	8014d74 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8014d66:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8014d6a:	2800      	cmp	r0, #0
 8014d6c:	bfcc      	ite	gt
 8014d6e:	2000      	movgt	r0, #0
 8014d70:	2001      	movle	r0, #1
 8014d72:	4770      	bx	lr
 8014d74:	2001      	movs	r0, #1
 8014d76:	4770      	bx	lr

08014d78 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8014d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d7c:	2300      	movs	r3, #0
 8014d7e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8014d80:	8003      	strh	r3, [r0, #0]
 8014d82:	4604      	mov	r4, r0
 8014d84:	8043      	strh	r3, [r0, #2]
 8014d86:	8083      	strh	r3, [r0, #4]
 8014d88:	80c3      	strh	r3, [r0, #6]
 8014d8a:	2d00      	cmp	r5, #0
 8014d8c:	d040      	beq.n	8014e10 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8014d8e:	1d28      	adds	r0, r5, #4
 8014d90:	f7ff ffe5 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014d94:	b988      	cbnz	r0, 8014dba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8014d96:	4620      	mov	r0, r4
 8014d98:	f7ff ffe1 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014d9c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8014da0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014da4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8014da8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8014dac:	b138      	cbz	r0, 8014dbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8014dae:	8022      	strh	r2, [r4, #0]
 8014db0:	8063      	strh	r3, [r4, #2]
 8014db2:	f8a4 e004 	strh.w	lr, [r4, #4]
 8014db6:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014dba:	69ad      	ldr	r5, [r5, #24]
 8014dbc:	e7e5      	b.n	8014d8a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8014dbe:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014dc2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014dc6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8014dca:	4290      	cmp	r0, r2
 8014dcc:	4607      	mov	r7, r0
 8014dce:	bfa8      	it	ge
 8014dd0:	4617      	movge	r7, r2
 8014dd2:	4472      	add	r2, lr
 8014dd4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8014dd8:	8027      	strh	r7, [r4, #0]
 8014dda:	4299      	cmp	r1, r3
 8014ddc:	460e      	mov	r6, r1
 8014dde:	4440      	add	r0, r8
 8014de0:	bfa8      	it	ge
 8014de2:	461e      	movge	r6, r3
 8014de4:	4471      	add	r1, lr
 8014de6:	4463      	add	r3, ip
 8014de8:	b200      	sxth	r0, r0
 8014dea:	b212      	sxth	r2, r2
 8014dec:	b209      	sxth	r1, r1
 8014dee:	b21b      	sxth	r3, r3
 8014df0:	4290      	cmp	r0, r2
 8014df2:	bfac      	ite	ge
 8014df4:	ebc7 0200 	rsbge	r2, r7, r0
 8014df8:	ebc7 0202 	rsblt	r2, r7, r2
 8014dfc:	4299      	cmp	r1, r3
 8014dfe:	bfac      	ite	ge
 8014e00:	ebc6 0301 	rsbge	r3, r6, r1
 8014e04:	ebc6 0303 	rsblt	r3, r6, r3
 8014e08:	8066      	strh	r6, [r4, #2]
 8014e0a:	80a2      	strh	r2, [r4, #4]
 8014e0c:	80e3      	strh	r3, [r4, #6]
 8014e0e:	e7d4      	b.n	8014dba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8014e10:	4620      	mov	r0, r4
 8014e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014e16 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8014e16:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8014e1a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8014e1e:	b383      	cbz	r3, 8014e82 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8014e20:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8014e22:	b374      	cbz	r4, 8014e82 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8014e24:	f9b1 5000 	ldrsh.w	r5, [r1]
 8014e28:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8014e2c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8014e30:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8014e34:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8014e38:	b303      	cbz	r3, 8014e7c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8014e3a:	4668      	mov	r0, sp
 8014e3c:	1d21      	adds	r1, r4, #4
 8014e3e:	f8ad 5000 	strh.w	r5, [sp]
 8014e42:	f8ad 6002 	strh.w	r6, [sp, #2]
 8014e46:	f8ad 7004 	strh.w	r7, [sp, #4]
 8014e4a:	f8ad 8006 	strh.w	r8, [sp, #6]
 8014e4e:	f7ff ff43 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8014e52:	4668      	mov	r0, sp
 8014e54:	f7ff ff83 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e58:	b980      	cbnz	r0, 8014e7c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8014e5a:	f8bd 3000 	ldrh.w	r3, [sp]
 8014e5e:	88a2      	ldrh	r2, [r4, #4]
 8014e60:	1a9b      	subs	r3, r3, r2
 8014e62:	f8ad 3000 	strh.w	r3, [sp]
 8014e66:	88e2      	ldrh	r2, [r4, #6]
 8014e68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014e6c:	1a9b      	subs	r3, r3, r2
 8014e6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014e72:	6823      	ldr	r3, [r4, #0]
 8014e74:	4669      	mov	r1, sp
 8014e76:	689b      	ldr	r3, [r3, #8]
 8014e78:	4620      	mov	r0, r4
 8014e7a:	4798      	blx	r3
 8014e7c:	69a4      	ldr	r4, [r4, #24]
 8014e7e:	2c00      	cmp	r4, #0
 8014e80:	d1d8      	bne.n	8014e34 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8014e82:	b002      	add	sp, #8
 8014e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014e88 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8014e88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014e8a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8014e8e:	460d      	mov	r5, r1
 8014e90:	4616      	mov	r6, r2
 8014e92:	b323      	cbz	r3, 8014ede <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8014e94:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8014e96:	b314      	cbz	r4, 8014ede <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8014e98:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8014e9c:	b1eb      	cbz	r3, 8014eda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8014e9e:	6828      	ldr	r0, [r5, #0]
 8014ea0:	6869      	ldr	r1, [r5, #4]
 8014ea2:	466b      	mov	r3, sp
 8014ea4:	c303      	stmia	r3!, {r0, r1}
 8014ea6:	4668      	mov	r0, sp
 8014ea8:	1d21      	adds	r1, r4, #4
 8014eaa:	f7ff ff15 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8014eae:	4668      	mov	r0, sp
 8014eb0:	f7ff ff55 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014eb4:	b988      	cbnz	r0, 8014eda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8014eb6:	f8bd 3000 	ldrh.w	r3, [sp]
 8014eba:	88a2      	ldrh	r2, [r4, #4]
 8014ebc:	1a9b      	subs	r3, r3, r2
 8014ebe:	f8ad 3000 	strh.w	r3, [sp]
 8014ec2:	88e2      	ldrh	r2, [r4, #6]
 8014ec4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014ec8:	1a9b      	subs	r3, r3, r2
 8014eca:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014ece:	6823      	ldr	r3, [r4, #0]
 8014ed0:	4632      	mov	r2, r6
 8014ed2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8014ed4:	4669      	mov	r1, sp
 8014ed6:	4620      	mov	r0, r4
 8014ed8:	4798      	blx	r3
 8014eda:	69a4      	ldr	r4, [r4, #24]
 8014edc:	e7db      	b.n	8014e96 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8014ede:	b002      	add	sp, #8
 8014ee0:	bd70      	pop	{r4, r5, r6, pc}

08014ee2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8014ee2:	b513      	push	{r0, r1, r4, lr}
 8014ee4:	6803      	ldr	r3, [r0, #0]
 8014ee6:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 8014eea:	2300      	movs	r3, #0
 8014eec:	e9cd 3300 	strd	r3, r3, [sp]
 8014ef0:	466b      	mov	r3, sp
 8014ef2:	47a0      	blx	r4
 8014ef4:	b002      	add	sp, #8
 8014ef6:	bd10      	pop	{r4, pc}

08014ef8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8014ef8:	2301      	movs	r3, #1
 8014efa:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8014efe:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8014f02:	4770      	bx	lr

08014f04 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8014f04:	2301      	movs	r3, #1
 8014f06:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8014f0a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8014f0e:	4770      	bx	lr

08014f10 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8014f10:	6843      	ldr	r3, [r0, #4]
 8014f12:	2201      	movs	r2, #1
 8014f14:	725a      	strb	r2, [r3, #9]
 8014f16:	6840      	ldr	r0, [r0, #4]
 8014f18:	6803      	ldr	r3, [r0, #0]
 8014f1a:	691b      	ldr	r3, [r3, #16]
 8014f1c:	4718      	bx	r3

08014f1e <_ZN8touchgfx3HAL8flushDMAEv>:
 8014f1e:	6840      	ldr	r0, [r0, #4]
 8014f20:	6803      	ldr	r3, [r0, #0]
 8014f22:	689b      	ldr	r3, [r3, #8]
 8014f24:	4718      	bx	r3

08014f26 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8014f26:	b530      	push	{r4, r5, lr}
 8014f28:	b08b      	sub	sp, #44	@ 0x2c
 8014f2a:	6804      	ldr	r4, [r0, #0]
 8014f2c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8014f30:	9509      	str	r5, [sp, #36]	@ 0x24
 8014f32:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8014f36:	9508      	str	r5, [sp, #32]
 8014f38:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8014f3c:	9507      	str	r5, [sp, #28]
 8014f3e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8014f42:	9506      	str	r5, [sp, #24]
 8014f44:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8014f48:	9505      	str	r5, [sp, #20]
 8014f4a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8014f4e:	9504      	str	r5, [sp, #16]
 8014f50:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8014f54:	9503      	str	r5, [sp, #12]
 8014f56:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8014f5a:	9502      	str	r5, [sp, #8]
 8014f5c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8014f60:	e9cd 3500 	strd	r3, r5, [sp]
 8014f64:	4613      	mov	r3, r2
 8014f66:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 8014f68:	2200      	movs	r2, #0
 8014f6a:	47a0      	blx	r4
 8014f6c:	b00b      	add	sp, #44	@ 0x2c
 8014f6e:	bd30      	pop	{r4, r5, pc}

08014f70 <_ZN8touchgfx3HAL10beginFrameEv>:
 8014f70:	4b04      	ldr	r3, [pc, #16]	@ (8014f84 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8014f72:	781b      	ldrb	r3, [r3, #0]
 8014f74:	b123      	cbz	r3, 8014f80 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8014f76:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8014f7a:	f080 0001 	eor.w	r0, r0, #1
 8014f7e:	4770      	bx	lr
 8014f80:	2001      	movs	r0, #1
 8014f82:	4770      	bx	lr
 8014f84:	20013882 	.word	0x20013882

08014f88 <_ZN8touchgfx3HAL8endFrameEv>:
 8014f88:	b510      	push	{r4, lr}
 8014f8a:	4604      	mov	r4, r0
 8014f8c:	6840      	ldr	r0, [r0, #4]
 8014f8e:	6803      	ldr	r3, [r0, #0]
 8014f90:	689b      	ldr	r3, [r3, #8]
 8014f92:	4798      	blx	r3
 8014f94:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8014f98:	b113      	cbz	r3, 8014fa0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8014f9a:	2301      	movs	r3, #1
 8014f9c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8014fa0:	bd10      	pop	{r4, pc}

08014fa2 <_ZN8touchgfx3HAL10initializeEv>:
 8014fa2:	b510      	push	{r4, lr}
 8014fa4:	4604      	mov	r4, r0
 8014fa6:	f7ec f8d5 	bl	8001154 <_ZN8touchgfx10OSWrappers10initializeEv>
 8014faa:	f7eb ffdd 	bl	8000f68 <_ZN8touchgfx4GPIO4initEv>
 8014fae:	6860      	ldr	r0, [r4, #4]
 8014fb0:	6803      	ldr	r3, [r0, #0]
 8014fb2:	68db      	ldr	r3, [r3, #12]
 8014fb4:	4798      	blx	r3
 8014fb6:	68e0      	ldr	r0, [r4, #12]
 8014fb8:	6803      	ldr	r3, [r0, #0]
 8014fba:	689b      	ldr	r3, [r3, #8]
 8014fbc:	4798      	blx	r3
 8014fbe:	6823      	ldr	r3, [r4, #0]
 8014fc0:	4620      	mov	r0, r4
 8014fc2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8014fc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014fc8:	4718      	bx	r3
	...

08014fcc <_ZN8touchgfx3HAL4tickEv>:
 8014fcc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014fce:	6803      	ldr	r3, [r0, #0]
 8014fd0:	4d62      	ldr	r5, [pc, #392]	@ (801515c <_ZN8touchgfx3HAL4tickEv+0x190>)
 8014fd2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8014fd6:	4604      	mov	r4, r0
 8014fd8:	4798      	blx	r3
 8014fda:	2800      	cmp	r0, #0
 8014fdc:	f000 809e 	beq.w	801511c <_ZN8touchgfx3HAL4tickEv+0x150>
 8014fe0:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 8014fe4:	2b02      	cmp	r3, #2
 8014fe6:	d002      	beq.n	8014fee <_ZN8touchgfx3HAL4tickEv+0x22>
 8014fe8:	2001      	movs	r0, #1
 8014fea:	f7eb ff3b 	bl	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8014fee:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8014ff2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8014ff6:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8014ffa:	2600      	movs	r6, #0
 8014ffc:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8015000:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8015004:	b133      	cbz	r3, 8015014 <_ZN8touchgfx3HAL4tickEv+0x48>
 8015006:	6823      	ldr	r3, [r4, #0]
 8015008:	4620      	mov	r0, r4
 801500a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 801500e:	4798      	blx	r3
 8015010:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8015014:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8015018:	6862      	ldr	r2, [r4, #4]
 801501a:	f083 0301 	eor.w	r3, r3, #1
 801501e:	7253      	strb	r3, [r2, #9]
 8015020:	2601      	movs	r6, #1
 8015022:	702e      	strb	r6, [r5, #0]
 8015024:	f005 fe56 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
 8015028:	6803      	ldr	r3, [r0, #0]
 801502a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801502c:	4798      	blx	r3
 801502e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8015032:	b90b      	cbnz	r3, 8015038 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8015034:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8015038:	f005 fe4c 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
 801503c:	6803      	ldr	r3, [r0, #0]
 801503e:	695b      	ldr	r3, [r3, #20]
 8015040:	4798      	blx	r3
 8015042:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8015044:	6803      	ldr	r3, [r0, #0]
 8015046:	691b      	ldr	r3, [r3, #16]
 8015048:	4798      	blx	r3
 801504a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 801504e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8015052:	3b01      	subs	r3, #1
 8015054:	b2db      	uxtb	r3, r3
 8015056:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 801505a:	b10a      	cbz	r2, 8015060 <_ZN8touchgfx3HAL4tickEv+0x94>
 801505c:	2b00      	cmp	r3, #0
 801505e:	d1eb      	bne.n	8015038 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8015060:	4a3f      	ldr	r2, [pc, #252]	@ (8015160 <_ZN8touchgfx3HAL4tickEv+0x194>)
 8015062:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8015066:	7813      	ldrb	r3, [r2, #0]
 8015068:	3301      	adds	r3, #1
 801506a:	b25b      	sxtb	r3, r3
 801506c:	4299      	cmp	r1, r3
 801506e:	7013      	strb	r3, [r2, #0]
 8015070:	dc10      	bgt.n	8015094 <_ZN8touchgfx3HAL4tickEv+0xc8>
 8015072:	68e0      	ldr	r0, [r4, #12]
 8015074:	2300      	movs	r3, #0
 8015076:	7013      	strb	r3, [r2, #0]
 8015078:	6803      	ldr	r3, [r0, #0]
 801507a:	aa03      	add	r2, sp, #12
 801507c:	68db      	ldr	r3, [r3, #12]
 801507e:	a902      	add	r1, sp, #8
 8015080:	4798      	blx	r3
 8015082:	6823      	ldr	r3, [r4, #0]
 8015084:	2800      	cmp	r0, #0
 8015086:	d059      	beq.n	801513c <_ZN8touchgfx3HAL4tickEv+0x170>
 8015088:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 801508c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8015090:	4620      	mov	r0, r4
 8015092:	4798      	blx	r3
 8015094:	6960      	ldr	r0, [r4, #20]
 8015096:	2300      	movs	r3, #0
 8015098:	f88d 3007 	strb.w	r3, [sp, #7]
 801509c:	b158      	cbz	r0, 80150b6 <_ZN8touchgfx3HAL4tickEv+0xea>
 801509e:	6803      	ldr	r3, [r0, #0]
 80150a0:	f10d 0107 	add.w	r1, sp, #7
 80150a4:	68db      	ldr	r3, [r3, #12]
 80150a6:	4798      	blx	r3
 80150a8:	b128      	cbz	r0, 80150b6 <_ZN8touchgfx3HAL4tickEv+0xea>
 80150aa:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 80150ac:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80150b0:	6803      	ldr	r3, [r0, #0]
 80150b2:	68db      	ldr	r3, [r3, #12]
 80150b4:	4798      	blx	r3
 80150b6:	f104 001c 	add.w	r0, r4, #28
 80150ba:	f017 fa9b 	bl	802c5f4 <_ZN8touchgfx8Gestures4tickEv>
 80150be:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 80150c2:	b30b      	cbz	r3, 8015108 <_ZN8touchgfx3HAL4tickEv+0x13c>
 80150c4:	6920      	ldr	r0, [r4, #16]
 80150c6:	6803      	ldr	r3, [r0, #0]
 80150c8:	691b      	ldr	r3, [r3, #16]
 80150ca:	4798      	blx	r3
 80150cc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80150ce:	4606      	mov	r6, r0
 80150d0:	b903      	cbnz	r3, 80150d4 <_ZN8touchgfx3HAL4tickEv+0x108>
 80150d2:	6760      	str	r0, [r4, #116]	@ 0x74
 80150d4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80150d6:	4a23      	ldr	r2, [pc, #140]	@ (8015164 <_ZN8touchgfx3HAL4tickEv+0x198>)
 80150d8:	1af3      	subs	r3, r6, r3
 80150da:	4293      	cmp	r3, r2
 80150dc:	d914      	bls.n	8015108 <_ZN8touchgfx3HAL4tickEv+0x13c>
 80150de:	6920      	ldr	r0, [r4, #16]
 80150e0:	6803      	ldr	r3, [r0, #0]
 80150e2:	699b      	ldr	r3, [r3, #24]
 80150e4:	4798      	blx	r3
 80150e6:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80150e8:	2264      	movs	r2, #100	@ 0x64
 80150ea:	1af3      	subs	r3, r6, r3
 80150ec:	fbb3 f3f2 	udiv	r3, r3, r2
 80150f0:	fbb0 f0f3 	udiv	r0, r0, r3
 80150f4:	2800      	cmp	r0, #0
 80150f6:	dc26      	bgt.n	8015146 <_ZN8touchgfx3HAL4tickEv+0x17a>
 80150f8:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 80150fc:	6920      	ldr	r0, [r4, #16]
 80150fe:	6803      	ldr	r3, [r0, #0]
 8015100:	2100      	movs	r1, #0
 8015102:	69db      	ldr	r3, [r3, #28]
 8015104:	4798      	blx	r3
 8015106:	6766      	str	r6, [r4, #116]	@ 0x74
 8015108:	6823      	ldr	r3, [r4, #0]
 801510a:	4620      	mov	r0, r4
 801510c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8015110:	4798      	blx	r3
 8015112:	f005 fddf 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
 8015116:	6803      	ldr	r3, [r0, #0]
 8015118:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801511a:	4798      	blx	r3
 801511c:	6823      	ldr	r3, [r4, #0]
 801511e:	4620      	mov	r0, r4
 8015120:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8015124:	4798      	blx	r3
 8015126:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 801512a:	2b02      	cmp	r3, #2
 801512c:	d002      	beq.n	8015134 <_ZN8touchgfx3HAL4tickEv+0x168>
 801512e:	2001      	movs	r0, #1
 8015130:	f7eb fec2 	bl	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8015134:	2300      	movs	r3, #0
 8015136:	702b      	strb	r3, [r5, #0]
 8015138:	b004      	add	sp, #16
 801513a:	bd70      	pop	{r4, r5, r6, pc}
 801513c:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 8015140:	4620      	mov	r0, r4
 8015142:	4798      	blx	r3
 8015144:	e7a6      	b.n	8015094 <_ZN8touchgfx3HAL4tickEv+0xc8>
 8015146:	2863      	cmp	r0, #99	@ 0x63
 8015148:	bfcb      	itete	gt
 801514a:	2300      	movgt	r3, #0
 801514c:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8015150:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8015154:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8015158:	e7d0      	b.n	80150fc <_ZN8touchgfx3HAL4tickEv+0x130>
 801515a:	bf00      	nop
 801515c:	20013888 	.word	0x20013888
 8015160:	20013889 	.word	0x20013889
 8015164:	05f5e100 	.word	0x05f5e100

08015168 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8015168:	b510      	push	{r4, lr}
 801516a:	4604      	mov	r4, r0
 801516c:	f7ec f822 	bl	80011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8015170:	6863      	ldr	r3, [r4, #4]
 8015172:	2200      	movs	r2, #0
 8015174:	729a      	strb	r2, [r3, #10]
 8015176:	bd10      	pop	{r4, pc}

08015178 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8015178:	65c1      	str	r1, [r0, #92]	@ 0x5c
 801517a:	301c      	adds	r0, #28
 801517c:	f017 ba38 	b.w	802c5f0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08015180 <_ZN8touchgfx3HAL5touchEll>:
 8015180:	b530      	push	{r4, r5, lr}
 8015182:	b087      	sub	sp, #28
 8015184:	4604      	mov	r4, r0
 8015186:	a804      	add	r0, sp, #16
 8015188:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801518c:	f005 fb6e 	bl	801a86c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8015190:	9b04      	ldr	r3, [sp, #16]
 8015192:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015196:	a906      	add	r1, sp, #24
 8015198:	9b05      	ldr	r3, [sp, #20]
 801519a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801519e:	a803      	add	r0, sp, #12
 80151a0:	f005 fbb6 	bl	801a910 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80151a4:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 80151a8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80151ac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80151b0:	f104 001c 	add.w	r0, r4, #28
 80151b4:	b189      	cbz	r1, 80151da <_ZN8touchgfx3HAL5touchEll+0x5a>
 80151b6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 80151ba:	9300      	str	r3, [sp, #0]
 80151bc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 80151c0:	4613      	mov	r3, r2
 80151c2:	462a      	mov	r2, r5
 80151c4:	f017 fa24 	bl	802c610 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80151c8:	b128      	cbz	r0, 80151d6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80151ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80151ce:	6623      	str	r3, [r4, #96]	@ 0x60
 80151d0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80151d4:	6663      	str	r3, [r4, #100]	@ 0x64
 80151d6:	b007      	add	sp, #28
 80151d8:	bd30      	pop	{r4, r5, pc}
 80151da:	f017 fa59 	bl	802c690 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80151de:	2301      	movs	r3, #1
 80151e0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 80151e4:	e7f1      	b.n	80151ca <_ZN8touchgfx3HAL5touchEll+0x4a>

080151e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80151e6:	b510      	push	{r4, lr}
 80151e8:	2b00      	cmp	r3, #0
 80151ea:	d046      	beq.n	801527a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80151ec:	ea81 0002 	eor.w	r0, r1, r2
 80151f0:	07c4      	lsls	r4, r0, #31
 80151f2:	d508      	bpl.n	8015206 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80151f4:	440b      	add	r3, r1
 80151f6:	3a01      	subs	r2, #1
 80151f8:	428b      	cmp	r3, r1
 80151fa:	d93e      	bls.n	801527a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80151fc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8015200:	f801 0b01 	strb.w	r0, [r1], #1
 8015204:	e7f8      	b.n	80151f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8015206:	07d0      	lsls	r0, r2, #31
 8015208:	bf42      	ittt	mi
 801520a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801520e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8015212:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8015216:	2b01      	cmp	r3, #1
 8015218:	d911      	bls.n	801523e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801521a:	ea81 0402 	eor.w	r4, r1, r2
 801521e:	07a4      	lsls	r4, r4, #30
 8015220:	4610      	mov	r0, r2
 8015222:	d022      	beq.n	801526a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8015224:	f023 0401 	bic.w	r4, r3, #1
 8015228:	440c      	add	r4, r1
 801522a:	428c      	cmp	r4, r1
 801522c:	4602      	mov	r2, r0
 801522e:	d904      	bls.n	801523a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8015230:	8812      	ldrh	r2, [r2, #0]
 8015232:	f821 2b02 	strh.w	r2, [r1], #2
 8015236:	3002      	adds	r0, #2
 8015238:	e7f7      	b.n	801522a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801523a:	f003 0301 	and.w	r3, r3, #1
 801523e:	f023 0003 	bic.w	r0, r3, #3
 8015242:	4408      	add	r0, r1
 8015244:	4288      	cmp	r0, r1
 8015246:	4614      	mov	r4, r2
 8015248:	d904      	bls.n	8015254 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801524a:	6824      	ldr	r4, [r4, #0]
 801524c:	f841 4b04 	str.w	r4, [r1], #4
 8015250:	3204      	adds	r2, #4
 8015252:	e7f7      	b.n	8015244 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8015254:	f003 0303 	and.w	r3, r3, #3
 8015258:	440b      	add	r3, r1
 801525a:	3a01      	subs	r2, #1
 801525c:	428b      	cmp	r3, r1
 801525e:	d90c      	bls.n	801527a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8015260:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8015264:	f801 0b01 	strb.w	r0, [r1], #1
 8015268:	e7f8      	b.n	801525c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801526a:	0790      	lsls	r0, r2, #30
 801526c:	d0e7      	beq.n	801523e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801526e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8015272:	f821 0b02 	strh.w	r0, [r1], #2
 8015276:	3b02      	subs	r3, #2
 8015278:	e7e1      	b.n	801523e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801527a:	2001      	movs	r0, #1
 801527c:	bd10      	pop	{r4, pc}

0801527e <_ZN8touchgfx3HAL7noTouchEv>:
 801527e:	b510      	push	{r4, lr}
 8015280:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8015284:	4604      	mov	r4, r0
 8015286:	b153      	cbz	r3, 801529e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8015288:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 801528c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8015290:	2101      	movs	r1, #1
 8015292:	301c      	adds	r0, #28
 8015294:	f017 f9fc 	bl	802c690 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8015298:	2300      	movs	r3, #0
 801529a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 801529e:	bd10      	pop	{r4, pc}

080152a0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80152a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80152a4:	b085      	sub	sp, #20
 80152a6:	ad04      	add	r5, sp, #16
 80152a8:	4604      	mov	r4, r0
 80152aa:	2000      	movs	r0, #0
 80152ac:	f845 0d04 	str.w	r0, [r5, #-4]!
 80152b0:	69a0      	ldr	r0, [r4, #24]
 80152b2:	6806      	ldr	r6, [r0, #0]
 80152b4:	9501      	str	r5, [sp, #4]
 80152b6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 80152ba:	9500      	str	r5, [sp, #0]
 80152bc:	6835      	ldr	r5, [r6, #0]
 80152be:	4699      	mov	r9, r3
 80152c0:	460f      	mov	r7, r1
 80152c2:	4690      	mov	r8, r2
 80152c4:	47a8      	blx	r5
 80152c6:	4d10      	ldr	r5, [pc, #64]	@ (8015308 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80152c8:	4606      	mov	r6, r0
 80152ca:	f8a5 9000 	strh.w	r9, [r5]
 80152ce:	f7ee fc69 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 80152d2:	6803      	ldr	r3, [r0, #0]
 80152d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80152d6:	4798      	blx	r3
 80152d8:	b128      	cbz	r0, 80152e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80152da:	2801      	cmp	r0, #1
 80152dc:	d00b      	beq.n	80152f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80152de:	4630      	mov	r0, r6
 80152e0:	b005      	add	sp, #20
 80152e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80152e6:	882b      	ldrh	r3, [r5, #0]
 80152e8:	fb08 7203 	mla	r2, r8, r3, r7
 80152ec:	9b03      	ldr	r3, [sp, #12]
 80152ee:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80152f2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 80152f4:	e7f3      	b.n	80152de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80152f6:	882a      	ldrh	r2, [r5, #0]
 80152f8:	9b03      	ldr	r3, [sp, #12]
 80152fa:	fb08 7202 	mla	r2, r8, r2, r7
 80152fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015302:	1a9a      	subs	r2, r3, r2
 8015304:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8015306:	e7ea      	b.n	80152de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8015308:	2001387e 	.word	0x2001387e

0801530c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 801530c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801530e:	4b15      	ldr	r3, [pc, #84]	@ (8015364 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 8015310:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 8015314:	881b      	ldrh	r3, [r3, #0]
 8015316:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 8015318:	fb93 f4f4 	sdiv	r4, r3, r4
 801531c:	460f      	mov	r7, r1
 801531e:	4606      	mov	r6, r0
 8015320:	f7ee fc40 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 8015324:	6803      	ldr	r3, [r0, #0]
 8015326:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015328:	4798      	blx	r3
 801532a:	2801      	cmp	r0, #1
 801532c:	d00b      	beq.n	8015346 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 801532e:	d303      	bcc.n	8015338 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 8015330:	2802      	cmp	r0, #2
 8015332:	d010      	beq.n	8015356 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 8015334:	63f5      	str	r5, [r6, #60]	@ 0x3c
 8015336:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015338:	4b0b      	ldr	r3, [pc, #44]	@ (8015368 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 801533a:	8819      	ldrh	r1, [r3, #0]
 801533c:	437c      	muls	r4, r7
 801533e:	434c      	muls	r4, r1
 8015340:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8015344:	e7f6      	b.n	8015334 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8015346:	4b08      	ldr	r3, [pc, #32]	@ (8015368 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 8015348:	8819      	ldrh	r1, [r3, #0]
 801534a:	437c      	muls	r4, r7
 801534c:	434c      	muls	r4, r1
 801534e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015352:	1b2d      	subs	r5, r5, r4
 8015354:	e7ee      	b.n	8015334 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8015356:	4b04      	ldr	r3, [pc, #16]	@ (8015368 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 8015358:	8819      	ldrh	r1, [r3, #0]
 801535a:	437c      	muls	r4, r7
 801535c:	434c      	muls	r4, r1
 801535e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 8015362:	e7e7      	b.n	8015334 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8015364:	20013880 	.word	0x20013880
 8015368:	2001387e 	.word	0x2001387e

0801536c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801536c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801536e:	b08b      	sub	sp, #44	@ 0x2c
 8015370:	4617      	mov	r7, r2
 8015372:	4604      	mov	r4, r0
 8015374:	460e      	mov	r6, r1
 8015376:	461d      	mov	r5, r3
 8015378:	f7ee fc14 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 801537c:	6803      	ldr	r3, [r0, #0]
 801537e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015380:	4798      	blx	r3
 8015382:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8015386:	9007      	str	r0, [sp, #28]
 8015388:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801538c:	4b0d      	ldr	r3, [pc, #52]	@ (80153c4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801538e:	6822      	ldr	r2, [r4, #0]
 8015390:	881b      	ldrh	r3, [r3, #0]
 8015392:	9306      	str	r3, [sp, #24]
 8015394:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8015398:	9305      	str	r3, [sp, #20]
 801539a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 801539e:	9304      	str	r3, [sp, #16]
 80153a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80153a4:	9303      	str	r3, [sp, #12]
 80153a6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80153aa:	9302      	str	r3, [sp, #8]
 80153ac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80153b0:	e9cd 5300 	strd	r5, r3, [sp]
 80153b4:	4631      	mov	r1, r6
 80153b6:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 80153b8:	463b      	mov	r3, r7
 80153ba:	2200      	movs	r2, #0
 80153bc:	4620      	mov	r0, r4
 80153be:	47a8      	blx	r5
 80153c0:	b00b      	add	sp, #44	@ 0x2c
 80153c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80153c4:	2001387e 	.word	0x2001387e

080153c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80153c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80153cc:	4698      	mov	r8, r3
 80153ce:	6803      	ldr	r3, [r0, #0]
 80153d0:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 80153d2:	4b15      	ldr	r3, [pc, #84]	@ (8015428 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80153d4:	b08b      	sub	sp, #44	@ 0x2c
 80153d6:	4617      	mov	r7, r2
 80153d8:	f8b3 9000 	ldrh.w	r9, [r3]
 80153dc:	460e      	mov	r6, r1
 80153de:	4604      	mov	r4, r0
 80153e0:	f7ee fbe0 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 80153e4:	6803      	ldr	r3, [r0, #0]
 80153e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80153e8:	4798      	blx	r3
 80153ea:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 80153ee:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80153f2:	2302      	movs	r3, #2
 80153f4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80153f8:	2301      	movs	r3, #1
 80153fa:	9305      	str	r3, [sp, #20]
 80153fc:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8015400:	9304      	str	r3, [sp, #16]
 8015402:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8015406:	9303      	str	r3, [sp, #12]
 8015408:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 801540c:	9302      	str	r3, [sp, #8]
 801540e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8015412:	2200      	movs	r2, #0
 8015414:	e9cd 8300 	strd	r8, r3, [sp]
 8015418:	4631      	mov	r1, r6
 801541a:	463b      	mov	r3, r7
 801541c:	4620      	mov	r0, r4
 801541e:	47a8      	blx	r5
 8015420:	b00b      	add	sp, #44	@ 0x2c
 8015422:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015426:	bf00      	nop
 8015428:	2001387e 	.word	0x2001387e

0801542c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 801542c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015430:	4698      	mov	r8, r3
 8015432:	6803      	ldr	r3, [r0, #0]
 8015434:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 8015436:	4b11      	ldr	r3, [pc, #68]	@ (801547c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8015438:	b087      	sub	sp, #28
 801543a:	f8b3 9000 	ldrh.w	r9, [r3]
 801543e:	460e      	mov	r6, r1
 8015440:	4617      	mov	r7, r2
 8015442:	4604      	mov	r4, r0
 8015444:	f7ee fbae 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 8015448:	6803      	ldr	r3, [r0, #0]
 801544a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801544c:	4798      	blx	r3
 801544e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8015452:	f8cd 900c 	str.w	r9, [sp, #12]
 8015456:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801545a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 801545e:	9302      	str	r3, [sp, #8]
 8015460:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8015464:	9301      	str	r3, [sp, #4]
 8015466:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801546a:	9300      	str	r3, [sp, #0]
 801546c:	463a      	mov	r2, r7
 801546e:	4643      	mov	r3, r8
 8015470:	4631      	mov	r1, r6
 8015472:	4620      	mov	r0, r4
 8015474:	47a8      	blx	r5
 8015476:	b007      	add	sp, #28
 8015478:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801547c:	2001387e 	.word	0x2001387e

08015480 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8015480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015484:	4604      	mov	r4, r0
 8015486:	b08f      	sub	sp, #60	@ 0x3c
 8015488:	4610      	mov	r0, r2
 801548a:	460d      	mov	r5, r1
 801548c:	4691      	mov	r9, r2
 801548e:	461e      	mov	r6, r3
 8015490:	f008 fd9e 	bl	801dfd0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8015494:	2800      	cmp	r0, #0
 8015496:	f000 809d 	beq.w	80155d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801549a:	6823      	ldr	r3, [r4, #0]
 801549c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 8015638 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80154a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80154a2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 801563c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80154a6:	4f61      	ldr	r7, [pc, #388]	@ (801562c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80154a8:	4620      	mov	r0, r4
 80154aa:	4798      	blx	r3
 80154ac:	6823      	ldr	r3, [r4, #0]
 80154ae:	4620      	mov	r0, r4
 80154b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80154b2:	4798      	blx	r3
 80154b4:	f8bb 3000 	ldrh.w	r3, [fp]
 80154b8:	9301      	str	r3, [sp, #4]
 80154ba:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 80154be:	f8ba 3000 	ldrh.w	r3, [sl]
 80154c2:	9302      	str	r3, [sp, #8]
 80154c4:	883b      	ldrh	r3, [r7, #0]
 80154c6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80154ca:	9303      	str	r3, [sp, #12]
 80154cc:	4b58      	ldr	r3, [pc, #352]	@ (8015630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80154ce:	9305      	str	r3, [sp, #20]
 80154d0:	881a      	ldrh	r2, [r3, #0]
 80154d2:	9204      	str	r2, [sp, #16]
 80154d4:	4640      	mov	r0, r8
 80154d6:	f008 fe0f 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80154da:	8038      	strh	r0, [r7, #0]
 80154dc:	4640      	mov	r0, r8
 80154de:	f008 fe3f 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80154e2:	9b05      	ldr	r3, [sp, #20]
 80154e4:	b280      	uxth	r0, r0
 80154e6:	8018      	strh	r0, [r3, #0]
 80154e8:	4b52      	ldr	r3, [pc, #328]	@ (8015634 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80154ea:	781b      	ldrb	r3, [r3, #0]
 80154ec:	2b00      	cmp	r3, #0
 80154ee:	d174      	bne.n	80155da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80154f0:	883b      	ldrh	r3, [r7, #0]
 80154f2:	f8ab 3000 	strh.w	r3, [fp]
 80154f6:	f8aa 0000 	strh.w	r0, [sl]
 80154fa:	4648      	mov	r0, r9
 80154fc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8015500:	f008 fd66 	bl	801dfd0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8015504:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8015508:	2200      	movs	r2, #0
 801550a:	4611      	mov	r1, r2
 801550c:	4628      	mov	r0, r5
 801550e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8015512:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8015516:	f7ed faba 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 801551a:	2301      	movs	r3, #1
 801551c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8015520:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8015524:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8015528:	2b00      	cmp	r3, #0
 801552a:	dd5c      	ble.n	80155e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801552c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8015530:	2b00      	cmp	r3, #0
 8015532:	dd58      	ble.n	80155e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8015534:	462a      	mov	r2, r5
 8015536:	ab0a      	add	r3, sp, #40	@ 0x28
 8015538:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801553c:	6851      	ldr	r1, [r2, #4]
 801553e:	c303      	stmia	r3!, {r0, r1}
 8015540:	4631      	mov	r1, r6
 8015542:	a80a      	add	r0, sp, #40	@ 0x28
 8015544:	f7ff fbc8 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8015548:	4b38      	ldr	r3, [pc, #224]	@ (801562c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801554a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801554e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8015552:	2100      	movs	r1, #0
 8015554:	aa0a      	add	r2, sp, #40	@ 0x28
 8015556:	4b36      	ldr	r3, [pc, #216]	@ (8015630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8015558:	910c      	str	r1, [sp, #48]	@ 0x30
 801555a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801555e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015562:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8015566:	ab08      	add	r3, sp, #32
 8015568:	e883 0003 	stmia.w	r3, {r0, r1}
 801556c:	4618      	mov	r0, r3
 801556e:	a90c      	add	r1, sp, #48	@ 0x30
 8015570:	f7ff fbb2 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8015574:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8015576:	2b00      	cmp	r3, #0
 8015578:	d13c      	bne.n	80155f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801557a:	2000      	movs	r0, #0
 801557c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8015580:	2600      	movs	r6, #0
 8015582:	682a      	ldr	r2, [r5, #0]
 8015584:	696b      	ldr	r3, [r5, #20]
 8015586:	616e      	str	r6, [r5, #20]
 8015588:	9305      	str	r3, [sp, #20]
 801558a:	6892      	ldr	r2, [r2, #8]
 801558c:	a908      	add	r1, sp, #32
 801558e:	4628      	mov	r0, r5
 8015590:	4790      	blx	r2
 8015592:	9b05      	ldr	r3, [sp, #20]
 8015594:	616b      	str	r3, [r5, #20]
 8015596:	4652      	mov	r2, sl
 8015598:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 801559c:	4649      	mov	r1, r9
 801559e:	4628      	mov	r0, r5
 80155a0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 80155a4:	f7ed fa73 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 80155a8:	4b23      	ldr	r3, [pc, #140]	@ (8015638 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80155aa:	9a01      	ldr	r2, [sp, #4]
 80155ac:	801a      	strh	r2, [r3, #0]
 80155ae:	4b23      	ldr	r3, [pc, #140]	@ (801563c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80155b0:	9a02      	ldr	r2, [sp, #8]
 80155b2:	801a      	strh	r2, [r3, #0]
 80155b4:	4b1d      	ldr	r3, [pc, #116]	@ (801562c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80155b6:	9a03      	ldr	r2, [sp, #12]
 80155b8:	801a      	strh	r2, [r3, #0]
 80155ba:	4b1d      	ldr	r3, [pc, #116]	@ (8015630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80155bc:	9a04      	ldr	r2, [sp, #16]
 80155be:	801a      	strh	r2, [r3, #0]
 80155c0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 80155c4:	6823      	ldr	r3, [r4, #0]
 80155c6:	4620      	mov	r0, r4
 80155c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80155ca:	4798      	blx	r3
 80155cc:	6823      	ldr	r3, [r4, #0]
 80155ce:	4620      	mov	r0, r4
 80155d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80155d2:	4798      	blx	r3
 80155d4:	b00f      	add	sp, #60	@ 0x3c
 80155d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155da:	883b      	ldrh	r3, [r7, #0]
 80155dc:	f8ab 0000 	strh.w	r0, [fp]
 80155e0:	f8aa 3000 	strh.w	r3, [sl]
 80155e4:	e789      	b.n	80154fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80155e6:	462a      	mov	r2, r5
 80155e8:	ab0a      	add	r3, sp, #40	@ 0x28
 80155ea:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80155ee:	6851      	ldr	r1, [r2, #4]
 80155f0:	c303      	stmia	r3!, {r0, r1}
 80155f2:	e7a9      	b.n	8015548 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80155f4:	a807      	add	r0, sp, #28
 80155f6:	f008 fef5 	bl	801e3e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80155fa:	4606      	mov	r6, r0
 80155fc:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 80155fe:	6803      	ldr	r3, [r0, #0]
 8015600:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015602:	4798      	blx	r3
 8015604:	4286      	cmp	r6, r0
 8015606:	d1b8      	bne.n	801557a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8015608:	f7ee facc 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 801560c:	6803      	ldr	r3, [r0, #0]
 801560e:	4606      	mov	r6, r0
 8015610:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015612:	9305      	str	r3, [sp, #20]
 8015614:	a807      	add	r0, sp, #28
 8015616:	f008 fee5 	bl	801e3e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801561a:	9b05      	ldr	r3, [sp, #20]
 801561c:	4601      	mov	r1, r0
 801561e:	4630      	mov	r0, r6
 8015620:	4798      	blx	r3
 8015622:	f080 0001 	eor.w	r0, r0, #1
 8015626:	b2c0      	uxtb	r0, r0
 8015628:	e7a8      	b.n	801557c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801562a:	bf00      	nop
 801562c:	20013878 	.word	0x20013878
 8015630:	2001387a 	.word	0x2001387a
 8015634:	2001387c 	.word	0x2001387c
 8015638:	2001387e 	.word	0x2001387e
 801563c:	20013880 	.word	0x20013880

08015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8015640:	b510      	push	{r4, lr}
 8015642:	4b07      	ldr	r3, [pc, #28]	@ (8015660 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8015644:	781b      	ldrb	r3, [r3, #0]
 8015646:	4604      	mov	r4, r0
 8015648:	b13b      	cbz	r3, 801565a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801564a:	6803      	ldr	r3, [r0, #0]
 801564c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801564e:	4798      	blx	r3
 8015650:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8015652:	4283      	cmp	r3, r0
 8015654:	d101      	bne.n	801565a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8015656:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8015658:	bd10      	pop	{r4, pc}
 801565a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 801565c:	e7fc      	b.n	8015658 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801565e:	bf00      	nop
 8015660:	20013882 	.word	0x20013882

08015664 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8015664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015668:	b08a      	sub	sp, #40	@ 0x28
 801566a:	461d      	mov	r5, r3
 801566c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8015670:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8015674:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8015678:	f8ad 3018 	strh.w	r3, [sp, #24]
 801567c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8015680:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015684:	2400      	movs	r4, #0
 8015686:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801568a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 801568e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015692:	4690      	mov	r8, r2
 8015694:	4607      	mov	r7, r0
 8015696:	9404      	str	r4, [sp, #16]
 8015698:	f88d 4020 	strb.w	r4, [sp, #32]
 801569c:	f7ff ffd0 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80156a0:	fb06 8505 	mla	r5, r6, r5, r8
 80156a4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80156a8:	6878      	ldr	r0, [r7, #4]
 80156aa:	9505      	str	r5, [sp, #20]
 80156ac:	f8ad 601e 	strh.w	r6, [sp, #30]
 80156b0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80156b4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 80156b8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80156bc:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 80156c0:	6803      	ldr	r3, [r0, #0]
 80156c2:	a901      	add	r1, sp, #4
 80156c4:	685b      	ldr	r3, [r3, #4]
 80156c6:	4798      	blx	r3
 80156c8:	b00a      	add	sp, #40	@ 0x28
 80156ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080156ce <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80156ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80156d2:	b08b      	sub	sp, #44	@ 0x2c
 80156d4:	2400      	movs	r4, #0
 80156d6:	461d      	mov	r5, r3
 80156d8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80156dc:	4688      	mov	r8, r1
 80156de:	4691      	mov	r9, r2
 80156e0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 80156e4:	9404      	str	r4, [sp, #16]
 80156e6:	4607      	mov	r7, r0
 80156e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80156ec:	f7ff ffa8 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80156f0:	fb06 9505 	mla	r5, r6, r5, r9
 80156f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80156f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80156fc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015700:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8015704:	6878      	ldr	r0, [r7, #4]
 8015706:	9505      	str	r5, [sp, #20]
 8015708:	f8ad 301a 	strh.w	r3, [sp, #26]
 801570c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8015710:	f8ad 601e 	strh.w	r6, [sp, #30]
 8015714:	f8cd 8010 	str.w	r8, [sp, #16]
 8015718:	f8ad 4020 	strh.w	r4, [sp, #32]
 801571c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8015720:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8015724:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8015728:	6803      	ldr	r3, [r0, #0]
 801572a:	a901      	add	r1, sp, #4
 801572c:	685b      	ldr	r3, [r3, #4]
 801572e:	4798      	blx	r3
 8015730:	b00b      	add	sp, #44	@ 0x2c
 8015732:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08015738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8015738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801573c:	b08a      	sub	sp, #40	@ 0x28
 801573e:	4698      	mov	r8, r3
 8015740:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 8015744:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8015748:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 801574c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8015750:	2300      	movs	r3, #0
 8015752:	2d0b      	cmp	r5, #11
 8015754:	4606      	mov	r6, r0
 8015756:	9304      	str	r3, [sp, #16]
 8015758:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801575c:	d138      	bne.n	80157d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801575e:	2380      	movs	r3, #128	@ 0x80
 8015760:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8015764:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8015768:	f8ad 3018 	strh.w	r3, [sp, #24]
 801576c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8015770:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015774:	f88d 0020 	strb.w	r0, [sp, #32]
 8015778:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 801577c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015780:	4630      	mov	r0, r6
 8015782:	9203      	str	r2, [sp, #12]
 8015784:	f7ff ff5c 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015788:	2c0b      	cmp	r4, #11
 801578a:	bf98      	it	ls
 801578c:	4b1b      	ldrls	r3, [pc, #108]	@ (80157fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801578e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8015792:	bf98      	it	ls
 8015794:	5d19      	ldrbls	r1, [r3, r4]
 8015796:	f8ad 701e 	strh.w	r7, [sp, #30]
 801579a:	bf88      	it	hi
 801579c:	2100      	movhi	r1, #0
 801579e:	fb02 8307 	mla	r3, r2, r7, r8
 80157a2:	10c9      	asrs	r1, r1, #3
 80157a4:	fb01 0003 	mla	r0, r1, r3, r0
 80157a8:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 80157ac:	9005      	str	r0, [sp, #20]
 80157ae:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80157b2:	6870      	ldr	r0, [r6, #4]
 80157b4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 80157b8:	2300      	movs	r3, #0
 80157ba:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80157be:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 80157c2:	6803      	ldr	r3, [r0, #0]
 80157c4:	a901      	add	r1, sp, #4
 80157c6:	685b      	ldr	r3, [r3, #4]
 80157c8:	4798      	blx	r3
 80157ca:	b00a      	add	sp, #40	@ 0x28
 80157cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80157d0:	2d02      	cmp	r5, #2
 80157d2:	d109      	bne.n	80157e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80157d4:	28ff      	cmp	r0, #255	@ 0xff
 80157d6:	d105      	bne.n	80157e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80157d8:	f1bc 0f00 	cmp.w	ip, #0
 80157dc:	bf14      	ite	ne
 80157de:	2340      	movne	r3, #64	@ 0x40
 80157e0:	2320      	moveq	r3, #32
 80157e2:	e7bd      	b.n	8015760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80157e4:	2340      	movs	r3, #64	@ 0x40
 80157e6:	e7bb      	b.n	8015760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80157e8:	28ff      	cmp	r0, #255	@ 0xff
 80157ea:	d105      	bne.n	80157f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80157ec:	f1bc 0f00 	cmp.w	ip, #0
 80157f0:	bf14      	ite	ne
 80157f2:	2304      	movne	r3, #4
 80157f4:	2301      	moveq	r3, #1
 80157f6:	e7b3      	b.n	8015760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80157f8:	2304      	movs	r3, #4
 80157fa:	e7b1      	b.n	8015760 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80157fc:	08032108 	.word	0x08032108

08015800 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8015800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015804:	b08b      	sub	sp, #44	@ 0x2c
 8015806:	461d      	mov	r5, r3
 8015808:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 801580c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8015810:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8015814:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8015818:	bf14      	ite	ne
 801581a:	2308      	movne	r3, #8
 801581c:	2302      	moveq	r3, #2
 801581e:	2400      	movs	r4, #0
 8015820:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8015824:	4688      	mov	r8, r1
 8015826:	4693      	mov	fp, r2
 8015828:	9404      	str	r4, [sp, #16]
 801582a:	4607      	mov	r7, r0
 801582c:	f7ff ff08 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015830:	2e0b      	cmp	r6, #11
 8015832:	bf98      	it	ls
 8015834:	4b15      	ldrls	r3, [pc, #84]	@ (801588c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8015836:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801583a:	bf98      	it	ls
 801583c:	5d9c      	ldrbls	r4, [r3, r6]
 801583e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8015842:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015846:	fb05 b50a 	mla	r5, r5, sl, fp
 801584a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801584e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015852:	10e4      	asrs	r4, r4, #3
 8015854:	fb04 0405 	mla	r4, r4, r5, r0
 8015858:	2300      	movs	r3, #0
 801585a:	6878      	ldr	r0, [r7, #4]
 801585c:	9405      	str	r4, [sp, #20]
 801585e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015862:	f8ad a01e 	strh.w	sl, [sp, #30]
 8015866:	f8cd 8010 	str.w	r8, [sp, #16]
 801586a:	f88d 9020 	strb.w	r9, [sp, #32]
 801586e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8015872:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8015876:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 801587a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 801587e:	6803      	ldr	r3, [r0, #0]
 8015880:	a901      	add	r1, sp, #4
 8015882:	685b      	ldr	r3, [r3, #4]
 8015884:	4798      	blx	r3
 8015886:	b00b      	add	sp, #44	@ 0x2c
 8015888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801588c:	08032108 	.word	0x08032108

08015890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8015890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015894:	461e      	mov	r6, r3
 8015896:	4b0a      	ldr	r3, [pc, #40]	@ (80158c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8015898:	460f      	mov	r7, r1
 801589a:	881d      	ldrh	r5, [r3, #0]
 801589c:	4690      	mov	r8, r2
 801589e:	f7ee f981 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 80158a2:	6803      	ldr	r3, [r0, #0]
 80158a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80158a6:	4798      	blx	r3
 80158a8:	280b      	cmp	r0, #11
 80158aa:	bf9a      	itte	ls
 80158ac:	4b05      	ldrls	r3, [pc, #20]	@ (80158c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80158ae:	5c1c      	ldrbls	r4, [r3, r0]
 80158b0:	2400      	movhi	r4, #0
 80158b2:	fb08 7005 	mla	r0, r8, r5, r7
 80158b6:	10e4      	asrs	r4, r4, #3
 80158b8:	fb04 6000 	mla	r0, r4, r0, r6
 80158bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80158c0:	2001387e 	.word	0x2001387e
 80158c4:	08032108 	.word	0x08032108

080158c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80158c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80158ca:	b08b      	sub	sp, #44	@ 0x2c
 80158cc:	461f      	mov	r7, r3
 80158ce:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80158d2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80158d6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80158da:	f8ad 3018 	strh.w	r3, [sp, #24]
 80158de:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80158e2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80158e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80158ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80158ee:	2500      	movs	r5, #0
 80158f0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80158f4:	f88d 3020 	strb.w	r3, [sp, #32]
 80158f8:	4604      	mov	r4, r0
 80158fa:	4616      	mov	r6, r2
 80158fc:	9504      	str	r5, [sp, #16]
 80158fe:	f7ff fe9f 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015902:	463a      	mov	r2, r7
 8015904:	4631      	mov	r1, r6
 8015906:	4603      	mov	r3, r0
 8015908:	4620      	mov	r0, r4
 801590a:	f7ff ffc1 	bl	8015890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801590e:	4b0e      	ldr	r3, [pc, #56]	@ (8015948 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8015910:	9005      	str	r0, [sp, #20]
 8015912:	881b      	ldrh	r3, [r3, #0]
 8015914:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015918:	f7ee f944 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 801591c:	6803      	ldr	r3, [r0, #0]
 801591e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015920:	4798      	blx	r3
 8015922:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8015924:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 8015928:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 801592c:	9304      	str	r3, [sp, #16]
 801592e:	6860      	ldr	r0, [r4, #4]
 8015930:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8015934:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8015938:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 801593c:	6803      	ldr	r3, [r0, #0]
 801593e:	a901      	add	r1, sp, #4
 8015940:	685b      	ldr	r3, [r3, #4]
 8015942:	4798      	blx	r3
 8015944:	b00b      	add	sp, #44	@ 0x2c
 8015946:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015948:	2001387e 	.word	0x2001387e

0801594c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801594c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801594e:	b08d      	sub	sp, #52	@ 0x34
 8015950:	466b      	mov	r3, sp
 8015952:	e883 0006 	stmia.w	r3, {r1, r2}
 8015956:	2300      	movs	r3, #0
 8015958:	9306      	str	r3, [sp, #24]
 801595a:	6803      	ldr	r3, [r0, #0]
 801595c:	f8bd 6000 	ldrh.w	r6, [sp]
 8015960:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015962:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8015966:	2501      	movs	r5, #1
 8015968:	9503      	str	r5, [sp, #12]
 801596a:	4604      	mov	r4, r0
 801596c:	4798      	blx	r3
 801596e:	463a      	mov	r2, r7
 8015970:	4631      	mov	r1, r6
 8015972:	4603      	mov	r3, r0
 8015974:	4620      	mov	r0, r4
 8015976:	f7ff ff8b 	bl	8015890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801597a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801597c:	9307      	str	r3, [sp, #28]
 801597e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015982:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015986:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801598a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801598e:	4b0f      	ldr	r3, [pc, #60]	@ (80159cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8015990:	9004      	str	r0, [sp, #16]
 8015992:	881b      	ldrh	r3, [r3, #0]
 8015994:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8015998:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 801599c:	f7ee f902 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 80159a0:	6803      	ldr	r3, [r0, #0]
 80159a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80159a4:	4798      	blx	r3
 80159a6:	23ff      	movs	r3, #255	@ 0xff
 80159a8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80159ac:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80159b0:	6860      	ldr	r0, [r4, #4]
 80159b2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80159b6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80159ba:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80159be:	6803      	ldr	r3, [r0, #0]
 80159c0:	a903      	add	r1, sp, #12
 80159c2:	685b      	ldr	r3, [r3, #4]
 80159c4:	4798      	blx	r3
 80159c6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 80159c8:	b00d      	add	sp, #52	@ 0x34
 80159ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80159cc:	2001387e 	.word	0x2001387e

080159d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80159d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80159d4:	b08c      	sub	sp, #48	@ 0x30
 80159d6:	461e      	mov	r6, r3
 80159d8:	466d      	mov	r5, sp
 80159da:	2300      	movs	r3, #0
 80159dc:	e885 0006 	stmia.w	r5, {r1, r2}
 80159e0:	9306      	str	r3, [sp, #24]
 80159e2:	6803      	ldr	r3, [r0, #0]
 80159e4:	f8bd 7000 	ldrh.w	r7, [sp]
 80159e8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80159ea:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80159ee:	2501      	movs	r5, #1
 80159f0:	9503      	str	r5, [sp, #12]
 80159f2:	4604      	mov	r4, r0
 80159f4:	4798      	blx	r3
 80159f6:	4642      	mov	r2, r8
 80159f8:	4639      	mov	r1, r7
 80159fa:	4603      	mov	r3, r0
 80159fc:	4620      	mov	r0, r4
 80159fe:	f7ff ff47 	bl	8015890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8015a02:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015a06:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015a0a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8015a0e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015a12:	4b11      	ldr	r3, [pc, #68]	@ (8015a58 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8015a14:	9004      	str	r0, [sp, #16]
 8015a16:	881b      	ldrh	r3, [r3, #0]
 8015a18:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8015a1c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8015a1e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8015a22:	9607      	str	r6, [sp, #28]
 8015a24:	f7ee f8be 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 8015a28:	6803      	ldr	r3, [r0, #0]
 8015a2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a2c:	4798      	blx	r3
 8015a2e:	23ff      	movs	r3, #255	@ 0xff
 8015a30:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8015a34:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8015a38:	6860      	ldr	r0, [r4, #4]
 8015a3a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8015a3e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8015a42:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8015a46:	6803      	ldr	r3, [r0, #0]
 8015a48:	a903      	add	r1, sp, #12
 8015a4a:	685b      	ldr	r3, [r3, #4]
 8015a4c:	4798      	blx	r3
 8015a4e:	4630      	mov	r0, r6
 8015a50:	b00c      	add	sp, #48	@ 0x30
 8015a52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015a56:	bf00      	nop
 8015a58:	2001387e 	.word	0x2001387e

08015a5c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8015a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015a5e:	b085      	sub	sp, #20
 8015a60:	ac02      	add	r4, sp, #8
 8015a62:	e884 0006 	stmia.w	r4, {r1, r2}
 8015a66:	4605      	mov	r5, r0
 8015a68:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8015a6c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8015a70:	f7ff fde6 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015a74:	463a      	mov	r2, r7
 8015a76:	4603      	mov	r3, r0
 8015a78:	4631      	mov	r1, r6
 8015a7a:	4628      	mov	r0, r5
 8015a7c:	f7ff ff08 	bl	8015890 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8015a80:	4a05      	ldr	r2, [pc, #20]	@ (8015a98 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8015a82:	682b      	ldr	r3, [r5, #0]
 8015a84:	8812      	ldrh	r2, [r2, #0]
 8015a86:	9200      	str	r2, [sp, #0]
 8015a88:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8015a8a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015a8e:	4603      	mov	r3, r0
 8015a90:	4628      	mov	r0, r5
 8015a92:	47b0      	blx	r6
 8015a94:	b005      	add	sp, #20
 8015a96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015a98:	2001387e 	.word	0x2001387e

08015a9c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8015a9c:	b570      	push	{r4, r5, r6, lr}
 8015a9e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 8015aa2:	4604      	mov	r4, r0
 8015aa4:	b19b      	cbz	r3, 8015ace <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8015aa6:	2002      	movs	r0, #2
 8015aa8:	f7eb fa30 	bl	8000f0c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8015aac:	2300      	movs	r3, #0
 8015aae:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8015ab2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 8015ab6:	6823      	ldr	r3, [r4, #0]
 8015ab8:	4620      	mov	r0, r4
 8015aba:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 8015abe:	f7ff fdbf 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015ac2:	462b      	mov	r3, r5
 8015ac4:	4601      	mov	r1, r0
 8015ac6:	4620      	mov	r0, r4
 8015ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015acc:	4718      	bx	r3
 8015ace:	bd70      	pop	{r4, r5, r6, pc}

08015ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8015ad0:	b538      	push	{r3, r4, r5, lr}
 8015ad2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8015ad6:	428b      	cmp	r3, r1
 8015ad8:	4604      	mov	r4, r0
 8015ada:	460d      	mov	r5, r1
 8015adc:	d006      	beq.n	8015aec <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8015ade:	6803      	ldr	r3, [r0, #0]
 8015ae0:	b929      	cbnz	r1, 8015aee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8015ae2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8015ae6:	4798      	blx	r3
 8015ae8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8015aec:	bd38      	pop	{r3, r4, r5, pc}
 8015aee:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8015af2:	e7f8      	b.n	8015ae6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08015af4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8015af4:	b510      	push	{r4, lr}
 8015af6:	4b0c      	ldr	r3, [pc, #48]	@ (8015b28 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 8015af8:	781b      	ldrb	r3, [r3, #0]
 8015afa:	4604      	mov	r4, r0
 8015afc:	b953      	cbnz	r3, 8015b14 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8015afe:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8015b02:	b93b      	cbnz	r3, 8015b14 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8015b04:	6840      	ldr	r0, [r0, #4]
 8015b06:	f000 f92b 	bl	8015d60 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8015b0a:	b118      	cbz	r0, 8015b14 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8015b0c:	6862      	ldr	r2, [r4, #4]
 8015b0e:	7a53      	ldrb	r3, [r2, #9]
 8015b10:	2b00      	cmp	r3, #0
 8015b12:	d0fc      	beq.n	8015b0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 8015b14:	f7eb fb46 	bl	80011a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8015b18:	4620      	mov	r0, r4
 8015b1a:	2100      	movs	r1, #0
 8015b1c:	f7ff ffd8 	bl	8015ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8015b20:	4620      	mov	r0, r4
 8015b22:	f7ff fd8d 	bl	8015640 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015b26:	bd10      	pop	{r4, pc}
 8015b28:	20013882 	.word	0x20013882

08015b2c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8015b2c:	b570      	push	{r4, r5, r6, lr}
 8015b2e:	4604      	mov	r4, r0
 8015b30:	6803      	ldr	r3, [r0, #0]
 8015b32:	b919      	cbnz	r1, 8015b3c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8015b34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015b3a:	4718      	bx	r3
 8015b3c:	2200      	movs	r2, #0
 8015b3e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 8015b42:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 8015b46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b48:	4798      	blx	r3
 8015b4a:	6863      	ldr	r3, [r4, #4]
 8015b4c:	2101      	movs	r1, #1
 8015b4e:	4605      	mov	r5, r0
 8015b50:	7299      	strb	r1, [r3, #10]
 8015b52:	4620      	mov	r0, r4
 8015b54:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 8015b58:	f7ff ffba 	bl	8015ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8015b5c:	4628      	mov	r0, r5
 8015b5e:	bd70      	pop	{r4, r5, r6, pc}

08015b60 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8015b60:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8015b64:	1a13      	subs	r3, r2, r0
 8015b66:	4258      	negs	r0, r3
 8015b68:	4158      	adcs	r0, r3
 8015b6a:	4770      	bx	lr

08015b6c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8015b6c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8015b70:	1a9b      	subs	r3, r3, r2
 8015b72:	2b00      	cmp	r3, #0
 8015b74:	bfdc      	itt	le
 8015b76:	6882      	ldrle	r2, [r0, #8]
 8015b78:	189b      	addle	r3, r3, r2
 8015b7a:	2b01      	cmp	r3, #1
 8015b7c:	bfcc      	ite	gt
 8015b7e:	2000      	movgt	r0, #0
 8015b80:	2001      	movle	r0, #1
 8015b82:	4770      	bx	lr

08015b84 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8015b84:	6902      	ldr	r2, [r0, #16]
 8015b86:	6843      	ldr	r3, [r0, #4]
 8015b88:	2024      	movs	r0, #36	@ 0x24
 8015b8a:	fb00 3002 	mla	r0, r0, r2, r3
 8015b8e:	4770      	bx	lr

08015b90 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8015b90:	6803      	ldr	r3, [r0, #0]
 8015b92:	691b      	ldr	r3, [r3, #16]
 8015b94:	4718      	bx	r3

08015b96 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8015b96:	b570      	push	{r4, r5, r6, lr}
 8015b98:	2301      	movs	r3, #1
 8015b9a:	7203      	strb	r3, [r0, #8]
 8015b9c:	4604      	mov	r4, r0
 8015b9e:	6840      	ldr	r0, [r0, #4]
 8015ba0:	6803      	ldr	r3, [r0, #0]
 8015ba2:	699b      	ldr	r3, [r3, #24]
 8015ba4:	4798      	blx	r3
 8015ba6:	6803      	ldr	r3, [r0, #0]
 8015ba8:	2b40      	cmp	r3, #64	@ 0x40
 8015baa:	4605      	mov	r5, r0
 8015bac:	d00c      	beq.n	8015bc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8015bae:	d810      	bhi.n	8015bd2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8015bb0:	2b04      	cmp	r3, #4
 8015bb2:	d01d      	beq.n	8015bf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8015bb4:	d804      	bhi.n	8015bc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8015bb6:	2b01      	cmp	r3, #1
 8015bb8:	d006      	beq.n	8015bc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8015bba:	2b02      	cmp	r3, #2
 8015bbc:	d02c      	beq.n	8015c18 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8015bbe:	bd70      	pop	{r4, r5, r6, pc}
 8015bc0:	2b08      	cmp	r3, #8
 8015bc2:	d01d      	beq.n	8015c00 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8015bc4:	2b20      	cmp	r3, #32
 8015bc6:	d1fa      	bne.n	8015bbe <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8015bc8:	6823      	ldr	r3, [r4, #0]
 8015bca:	4620      	mov	r0, r4
 8015bcc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015bce:	4798      	blx	r3
 8015bd0:	e013      	b.n	8015bfa <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8015bd2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8015bd6:	d0f7      	beq.n	8015bc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8015bd8:	d804      	bhi.n	8015be4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8015bda:	2b80      	cmp	r3, #128	@ 0x80
 8015bdc:	d0f4      	beq.n	8015bc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8015bde:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8015be2:	e7f0      	b.n	8015bc6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8015be4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8015be8:	d0ee      	beq.n	8015bc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8015bea:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8015bee:	e7e5      	b.n	8015bbc <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8015bf0:	6823      	ldr	r3, [r4, #0]
 8015bf2:	7f01      	ldrb	r1, [r0, #28]
 8015bf4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015bf6:	4620      	mov	r0, r4
 8015bf8:	4798      	blx	r3
 8015bfa:	6823      	ldr	r3, [r4, #0]
 8015bfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015bfe:	e006      	b.n	8015c0e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8015c00:	6823      	ldr	r3, [r4, #0]
 8015c02:	7f01      	ldrb	r1, [r0, #28]
 8015c04:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015c06:	4620      	mov	r0, r4
 8015c08:	4798      	blx	r3
 8015c0a:	6823      	ldr	r3, [r4, #0]
 8015c0c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015c0e:	4629      	mov	r1, r5
 8015c10:	4620      	mov	r0, r4
 8015c12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015c16:	4718      	bx	r3
 8015c18:	6823      	ldr	r3, [r4, #0]
 8015c1a:	4620      	mov	r0, r4
 8015c1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015c1e:	4798      	blx	r3
 8015c20:	e7f3      	b.n	8015c0a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08015c22 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8015c22:	4770      	bx	lr

08015c24 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8015c24:	4770      	bx	lr

08015c26 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8015c26:	4770      	bx	lr

08015c28 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8015c28:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8015c2c:	1ad2      	subs	r2, r2, r3
 8015c2e:	2a00      	cmp	r2, #0
 8015c30:	b510      	push	{r4, lr}
 8015c32:	bfdc      	itt	le
 8015c34:	6884      	ldrle	r4, [r0, #8]
 8015c36:	1912      	addle	r2, r2, r4
 8015c38:	2a01      	cmp	r2, #1
 8015c3a:	dd16      	ble.n	8015c6a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8015c3c:	6842      	ldr	r2, [r0, #4]
 8015c3e:	2424      	movs	r4, #36	@ 0x24
 8015c40:	fb04 2303 	mla	r3, r4, r3, r2
 8015c44:	f101 0220 	add.w	r2, r1, #32
 8015c48:	f851 4b04 	ldr.w	r4, [r1], #4
 8015c4c:	f843 4b04 	str.w	r4, [r3], #4
 8015c50:	4291      	cmp	r1, r2
 8015c52:	d1f9      	bne.n	8015c48 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8015c54:	780a      	ldrb	r2, [r1, #0]
 8015c56:	701a      	strb	r2, [r3, #0]
 8015c58:	68c3      	ldr	r3, [r0, #12]
 8015c5a:	6882      	ldr	r2, [r0, #8]
 8015c5c:	f3bf 8f5b 	dmb	ish
 8015c60:	3301      	adds	r3, #1
 8015c62:	429a      	cmp	r2, r3
 8015c64:	bfd8      	it	le
 8015c66:	1a9b      	suble	r3, r3, r2
 8015c68:	60c3      	str	r3, [r0, #12]
 8015c6a:	bd10      	pop	{r4, pc}

08015c6c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8015c6c:	6903      	ldr	r3, [r0, #16]
 8015c6e:	6882      	ldr	r2, [r0, #8]
 8015c70:	f3bf 8f5b 	dmb	ish
 8015c74:	3301      	adds	r3, #1
 8015c76:	429a      	cmp	r2, r3
 8015c78:	bfd8      	it	le
 8015c7a:	1a9b      	suble	r3, r3, r2
 8015c7c:	6103      	str	r3, [r0, #16]
 8015c7e:	4770      	bx	lr

08015c80 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8015c80:	b570      	push	{r4, r5, r6, lr}
 8015c82:	4604      	mov	r4, r0
 8015c84:	460e      	mov	r6, r1
 8015c86:	6860      	ldr	r0, [r4, #4]
 8015c88:	6803      	ldr	r3, [r0, #0]
 8015c8a:	685b      	ldr	r3, [r3, #4]
 8015c8c:	4798      	blx	r3
 8015c8e:	2800      	cmp	r0, #0
 8015c90:	d1f9      	bne.n	8015c86 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8015c92:	4d0d      	ldr	r5, [pc, #52]	@ (8015cc8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8015c94:	6828      	ldr	r0, [r5, #0]
 8015c96:	6803      	ldr	r3, [r0, #0]
 8015c98:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8015c9c:	4798      	blx	r3
 8015c9e:	f7eb fa8f 	bl	80011c0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8015ca2:	6828      	ldr	r0, [r5, #0]
 8015ca4:	2101      	movs	r1, #1
 8015ca6:	f7ff ff13 	bl	8015ad0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8015caa:	6860      	ldr	r0, [r4, #4]
 8015cac:	6803      	ldr	r3, [r0, #0]
 8015cae:	4631      	mov	r1, r6
 8015cb0:	689b      	ldr	r3, [r3, #8]
 8015cb2:	4798      	blx	r3
 8015cb4:	6823      	ldr	r3, [r4, #0]
 8015cb6:	4620      	mov	r0, r4
 8015cb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015cba:	4798      	blx	r3
 8015cbc:	6828      	ldr	r0, [r5, #0]
 8015cbe:	6803      	ldr	r3, [r0, #0]
 8015cc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015cc4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8015cc6:	4718      	bx	r3
 8015cc8:	20013884 	.word	0x20013884

08015ccc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8015ccc:	b508      	push	{r3, lr}
 8015cce:	f7eb fa69 	bl	80011a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8015cd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015cd6:	f7eb ba6d 	b.w	80011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08015cda <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8015cda:	b510      	push	{r4, lr}
 8015cdc:	2114      	movs	r1, #20
 8015cde:	4604      	mov	r4, r0
 8015ce0:	f017 fa89 	bl	802d1f6 <_ZdlPvj>
 8015ce4:	4620      	mov	r0, r4
 8015ce6:	bd10      	pop	{r4, pc}

08015ce8 <_ZN8touchgfx13DMA_Interface5startEv>:
 8015ce8:	b510      	push	{r4, lr}
 8015cea:	4604      	mov	r4, r0
 8015cec:	6840      	ldr	r0, [r0, #4]
 8015cee:	6803      	ldr	r3, [r0, #0]
 8015cf0:	681b      	ldr	r3, [r3, #0]
 8015cf2:	4798      	blx	r3
 8015cf4:	b948      	cbnz	r0, 8015d0a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8015cf6:	7a63      	ldrb	r3, [r4, #9]
 8015cf8:	b13b      	cbz	r3, 8015d0a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8015cfa:	7a23      	ldrb	r3, [r4, #8]
 8015cfc:	b92b      	cbnz	r3, 8015d0a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8015cfe:	6823      	ldr	r3, [r4, #0]
 8015d00:	4620      	mov	r0, r4
 8015d02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015d04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015d08:	4718      	bx	r3
 8015d0a:	bd10      	pop	{r4, pc}

08015d0c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8015d0c:	b570      	push	{r4, r5, r6, lr}
 8015d0e:	4604      	mov	r4, r0
 8015d10:	6840      	ldr	r0, [r0, #4]
 8015d12:	6803      	ldr	r3, [r0, #0]
 8015d14:	681b      	ldr	r3, [r3, #0]
 8015d16:	4798      	blx	r3
 8015d18:	4605      	mov	r5, r0
 8015d1a:	b930      	cbnz	r0, 8015d2a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8015d1c:	7a23      	ldrb	r3, [r4, #8]
 8015d1e:	b123      	cbz	r3, 8015d2a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8015d20:	6860      	ldr	r0, [r4, #4]
 8015d22:	6803      	ldr	r3, [r0, #0]
 8015d24:	695b      	ldr	r3, [r3, #20]
 8015d26:	4798      	blx	r3
 8015d28:	7225      	strb	r5, [r4, #8]
 8015d2a:	6860      	ldr	r0, [r4, #4]
 8015d2c:	6803      	ldr	r3, [r0, #0]
 8015d2e:	681b      	ldr	r3, [r3, #0]
 8015d30:	4798      	blx	r3
 8015d32:	b928      	cbnz	r0, 8015d40 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8015d34:	6823      	ldr	r3, [r4, #0]
 8015d36:	4620      	mov	r0, r4
 8015d38:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015d3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d3e:	4718      	bx	r3
 8015d40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d44:	f7eb ba44 	b.w	80011d0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08015d48 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8015d48:	b510      	push	{r4, lr}
 8015d4a:	4c04      	ldr	r4, [pc, #16]	@ (8015d5c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8015d4c:	6082      	str	r2, [r0, #8]
 8015d4e:	2200      	movs	r2, #0
 8015d50:	e9c0 4100 	strd	r4, r1, [r0]
 8015d54:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8015d58:	bd10      	pop	{r4, pc}
 8015d5a:	bf00      	nop
 8015d5c:	0803211c 	.word	0x0803211c

08015d60 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8015d60:	6840      	ldr	r0, [r0, #4]
 8015d62:	6803      	ldr	r3, [r0, #0]
 8015d64:	681b      	ldr	r3, [r3, #0]
 8015d66:	4718      	bx	r3

08015d68 <_ZN8touchgfxL10applyNoiseEiihhh>:
 8015d68:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 8015d6c:	4f20      	ldr	r7, [pc, #128]	@ (8015df0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 8015d6e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015d72:	fb80 0101 	smull	r0, r1, r0, r1
 8015d76:	fba0 bc07 	umull	fp, ip, r0, r7
 8015d7a:	fb07 cc01 	mla	ip, r7, r1, ip
 8015d7e:	fb0b f70c 	mul.w	r7, fp, ip
 8015d82:	fbab 010b 	umull	r0, r1, fp, fp
 8015d86:	461c      	mov	r4, r3
 8015d88:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8015d8c:	fb00 f30c 	mul.w	r3, r0, ip
 8015d90:	fb0b 3301 	mla	r3, fp, r1, r3
 8015d94:	fba0 010b 	umull	r0, r1, r0, fp
 8015d98:	4616      	mov	r6, r2
 8015d9a:	4419      	add	r1, r3
 8015d9c:	a312      	add	r3, pc, #72	@ (adr r3, 8015de8 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 8015d9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015da2:	f7ea fd83 	bl	80008ac <__aeabi_ldivmod>
 8015da6:	2ef7      	cmp	r6, #247	@ 0xf7
 8015da8:	b290      	uxth	r0, r2
 8015daa:	bf9e      	ittt	ls
 8015dac:	f002 0207 	andls.w	r2, r2, #7
 8015db0:	18b6      	addls	r6, r6, r2
 8015db2:	b2f6      	uxtbls	r6, r6
 8015db4:	2cfb      	cmp	r4, #251	@ 0xfb
 8015db6:	bf9e      	ittt	ls
 8015db8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 8015dbc:	18e4      	addls	r4, r4, r3
 8015dbe:	b2e4      	uxtbls	r4, r4
 8015dc0:	2df7      	cmp	r5, #247	@ 0xf7
 8015dc2:	bf9c      	itt	ls
 8015dc4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 8015dc8:	182d      	addls	r5, r5, r0
 8015dca:	480a      	ldr	r0, [pc, #40]	@ (8015df4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 8015dcc:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015dd0:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 8015dd4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8015dd8:	bf98      	it	ls
 8015dda:	b2ed      	uxtbls	r5, r5
 8015ddc:	4304      	orrs	r4, r0
 8015dde:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 8015de2:	b280      	uxth	r0, r0
 8015de4:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8015de8:	797a8d77 	.word	0x797a8d77
 8015dec:	00000000 	.word	0x00000000
 8015df0:	00ec4ba7 	.word	0x00ec4ba7
 8015df4:	fffff800 	.word	0xfffff800

08015df8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 8015df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dfc:	ed2d 8b02 	vpush	{d8}
 8015e00:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8015e04:	b087      	sub	sp, #28
 8015e06:	7c41      	ldrb	r1, [r0, #17]
 8015e08:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 8015e0c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8015e10:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 8015e14:	4605      	mov	r5, r0
 8015e16:	2900      	cmp	r1, #0
 8015e18:	f000 809a 	beq.w	8015f50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 8015e1c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8015e20:	ed90 7a08 	vldr	s14, [r0, #32]
 8015e24:	68c0      	ldr	r0, [r0, #12]
 8015e26:	454a      	cmp	r2, r9
 8015e28:	db25      	blt.n	8015e76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 8015e2a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8015e2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015e32:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8015e36:	bfc8      	it	gt
 8015e38:	2200      	movgt	r2, #0
 8015e3a:	5882      	ldr	r2, [r0, r2]
 8015e3c:	2100      	movs	r1, #0
 8015e3e:	7c2d      	ldrb	r5, [r5, #16]
 8015e40:	ea4f 2812 	mov.w	r8, r2, lsr #8
 8015e44:	0950      	lsrs	r0, r2, #5
 8015e46:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 8015e4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015e4e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 8015e52:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 8015e56:	2d00      	cmp	r5, #0
 8015e58:	d044      	beq.n	8015ee4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8015e5a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8015e5e:	d141      	bne.n	8015ee4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8015e60:	bb61      	cbnz	r1, 8015ebc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 8015e62:	ea4e 0000 	orr.w	r0, lr, r0
 8015e66:	ea4c 0500 	orr.w	r5, ip, r0
 8015e6a:	42bc      	cmp	r4, r7
 8015e6c:	f080 8217 	bcs.w	801629e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8015e70:	f824 5b02 	strh.w	r5, [r4], #2
 8015e74:	e7f9      	b.n	8015e6a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 8015e76:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8015e7a:	454f      	cmp	r7, r9
 8015e7c:	dc08      	bgt.n	8015e90 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 8015e7e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8015e82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015e86:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8015e8a:	bfd8      	it	le
 8015e8c:	2200      	movle	r2, #0
 8015e8e:	e7d4      	b.n	8015e3a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 8015e90:	eba9 0202 	sub.w	r2, r9, r2
 8015e94:	ee07 2a90 	vmov	s15, r2
 8015e98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015e9c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8015ea0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8015ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015ea8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015eac:	ee17 2a90 	vmov	r2, s15
 8015eb0:	bfd8      	it	le
 8015eb2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 8015eb6:	0092      	lsls	r2, r2, #2
 8015eb8:	5882      	ldr	r2, [r0, r2]
 8015eba:	e7c0      	b.n	8015e3e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 8015ebc:	b2d5      	uxtb	r5, r2
 8015ebe:	fa5f f888 	uxtb.w	r8, r8
 8015ec2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 8015ec6:	461e      	mov	r6, r3
 8015ec8:	42bc      	cmp	r4, r7
 8015eca:	f080 81e8 	bcs.w	801629e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8015ece:	4630      	mov	r0, r6
 8015ed0:	9500      	str	r5, [sp, #0]
 8015ed2:	4643      	mov	r3, r8
 8015ed4:	4652      	mov	r2, sl
 8015ed6:	4649      	mov	r1, r9
 8015ed8:	f7ff ff46 	bl	8015d68 <_ZN8touchgfxL10applyNoiseEiihhh>
 8015edc:	3601      	adds	r6, #1
 8015ede:	f824 0b02 	strh.w	r0, [r4], #2
 8015ee2:	e7f1      	b.n	8015ec8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 8015ee4:	0e12      	lsrs	r2, r2, #24
 8015ee6:	fb02 f20a 	mul.w	r2, r2, sl
 8015eea:	1c53      	adds	r3, r2, #1
 8015eec:	eb03 2222 	add.w	r2, r3, r2, asr #8
 8015ef0:	1212      	asrs	r2, r2, #8
 8015ef2:	fb02 f50c 	mul.w	r5, r2, ip
 8015ef6:	fb02 f10e 	mul.w	r1, r2, lr
 8015efa:	4350      	muls	r0, r2
 8015efc:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 80162b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8015f00:	43d2      	mvns	r2, r2
 8015f02:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015f06:	26ff      	movs	r6, #255	@ 0xff
 8015f08:	42bc      	cmp	r4, r7
 8015f0a:	f080 81c8 	bcs.w	801629e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8015f0e:	f8b4 e000 	ldrh.w	lr, [r4]
 8015f12:	ea0e 030c 	and.w	r3, lr, ip
 8015f16:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8015f1a:	fb02 1303 	mla	r3, r2, r3, r1
 8015f1e:	fb02 0808 	mla	r8, r2, r8, r0
 8015f22:	fb93 f3f6 	sdiv	r3, r3, r6
 8015f26:	fb98 f8f6 	sdiv	r8, r8, r6
 8015f2a:	ea03 030c 	and.w	r3, r3, ip
 8015f2e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015f32:	f00e 0e1f 	and.w	lr, lr, #31
 8015f36:	ea43 0308 	orr.w	r3, r3, r8
 8015f3a:	fb02 5e0e 	mla	lr, r2, lr, r5
 8015f3e:	fb9e fef6 	sdiv	lr, lr, r6
 8015f42:	f00e 0e1f 	and.w	lr, lr, #31
 8015f46:	ea43 030e 	orr.w	r3, r3, lr
 8015f4a:	f824 3b02 	strh.w	r3, [r4], #2
 8015f4e:	e7db      	b.n	8015f08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 8015f50:	7c82      	ldrb	r2, [r0, #18]
 8015f52:	2a00      	cmp	r2, #0
 8015f54:	d04f      	beq.n	8015ff6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 8015f56:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8015f5a:	ee07 2a90 	vmov	s15, r2
 8015f5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015f62:	ee07 3a10 	vmov	s14, r3
 8015f66:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8015f6a:	461f      	mov	r7, r3
 8015f6c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8015f70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015f74:	f200 8095 	bhi.w	80160a2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 8015f78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015f7c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8015f80:	f640 71fc 	movw	r1, #4092	@ 0xffc
 8015f84:	ee37 7a66 	vsub.f32	s14, s14, s13
 8015f88:	ee06 6a90 	vmov	s13, r6
 8015f8c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8015f90:	68ea      	ldr	r2, [r5, #12]
 8015f92:	f895 c010 	ldrb.w	ip, [r5, #16]
 8015f96:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8015f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015f9e:	bf4a      	itet	mi
 8015fa0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 8015fa4:	9602      	strpl	r6, [sp, #8]
 8015fa6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 8015faa:	ed95 7a08 	vldr	s14, [r5, #32]
 8015fae:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8015fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015fb6:	bfc8      	it	gt
 8015fb8:	2100      	movgt	r1, #0
 8015fba:	5852      	ldr	r2, [r2, r1]
 8015fbc:	9902      	ldr	r1, [sp, #8]
 8015fbe:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 8015fc2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8015fc6:	0950      	lsrs	r0, r2, #5
 8015fc8:	9103      	str	r1, [sp, #12]
 8015fca:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8015fce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015fd2:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 8015fd6:	f1bc 0f00 	cmp.w	ip, #0
 8015fda:	d024      	beq.n	8016026 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8015fdc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8015fe0:	d121      	bne.n	8016026 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8015fe2:	ea4b 0b00 	orr.w	fp, fp, r0
 8015fe6:	ea41 010b 	orr.w	r1, r1, fp
 8015fea:	9a03      	ldr	r2, [sp, #12]
 8015fec:	4294      	cmp	r4, r2
 8015fee:	d255      	bcs.n	801609c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8015ff0:	f824 1b02 	strh.w	r1, [r4], #2
 8015ff4:	e7f9      	b.n	8015fea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 8015ff6:	ee07 9a10 	vmov	s14, r9
 8015ffa:	edd0 7a06 	vldr	s15, [r0, #24]
 8015ffe:	edd0 6a05 	vldr	s13, [r0, #20]
 8016002:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016006:	ee37 7a67 	vsub.f32	s14, s14, s15
 801600a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 801600e:	ed90 7a08 	vldr	s14, [r0, #32]
 8016012:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801601a:	bf44      	itt	mi
 801601c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 8016020:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 8016024:	e79d      	b.n	8015f62 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 8016026:	0e12      	lsrs	r2, r2, #24
 8016028:	fb02 f20a 	mul.w	r2, r2, sl
 801602c:	f102 0c01 	add.w	ip, r2, #1
 8016030:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 8016034:	1212      	asrs	r2, r2, #8
 8016036:	4350      	muls	r0, r2
 8016038:	4351      	muls	r1, r2
 801603a:	fb02 fb0b 	mul.w	fp, r2, fp
 801603e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 80162b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8016042:	9004      	str	r0, [sp, #16]
 8016044:	43d2      	mvns	r2, r2
 8016046:	9105      	str	r1, [sp, #20]
 8016048:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801604c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 8016050:	9903      	ldr	r1, [sp, #12]
 8016052:	428c      	cmp	r4, r1
 8016054:	d222      	bcs.n	801609c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8016056:	8820      	ldrh	r0, [r4, #0]
 8016058:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 801605c:	460f      	mov	r7, r1
 801605e:	9904      	ldr	r1, [sp, #16]
 8016060:	ea00 0c08 	and.w	ip, r0, r8
 8016064:	fb02 bc0c 	mla	ip, r2, ip, fp
 8016068:	fb02 1107 	mla	r1, r2, r7, r1
 801606c:	fb9c fcfe 	sdiv	ip, ip, lr
 8016070:	fb91 f1fe 	sdiv	r1, r1, lr
 8016074:	ea0c 0c08 	and.w	ip, ip, r8
 8016078:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801607c:	ea4c 0101 	orr.w	r1, ip, r1
 8016080:	f000 0c1f 	and.w	ip, r0, #31
 8016084:	9805      	ldr	r0, [sp, #20]
 8016086:	fb02 0c0c 	mla	ip, r2, ip, r0
 801608a:	fb9c fcfe 	sdiv	ip, ip, lr
 801608e:	f00c 0c1f 	and.w	ip, ip, #31
 8016092:	ea41 010c 	orr.w	r1, r1, ip
 8016096:	f824 1b02 	strh.w	r1, [r4], #2
 801609a:	e7d9      	b.n	8016050 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 801609c:	9a02      	ldr	r2, [sp, #8]
 801609e:	441a      	add	r2, r3
 80160a0:	4617      	mov	r7, r2
 80160a2:	441e      	add	r6, r3
 80160a4:	b236      	sxth	r6, r6
 80160a6:	42be      	cmp	r6, r7
 80160a8:	f340 80f9 	ble.w	801629e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80160ac:	ed95 7a07 	vldr	s14, [r5, #28]
 80160b0:	ee06 7a90 	vmov	s13, r7
 80160b4:	ee37 7a87 	vadd.f32	s14, s15, s14
 80160b8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80160bc:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80160c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80160c4:	f340 80b5 	ble.w	8016232 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 80160c8:	ee06 6a10 	vmov	s12, r6
 80160cc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80160d0:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 80162a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 80160d4:	7c2b      	ldrb	r3, [r5, #16]
 80160d6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80160da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80160de:	bfd8      	it	le
 80160e0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 80160e4:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 80162ac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 80160e8:	bfd8      	it	le
 80160ea:	ee17 8a10 	vmovle	r8, s14
 80160ee:	ed95 7a08 	vldr	s14, [r5, #32]
 80160f2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80160f6:	bfc8      	it	gt
 80160f8:	46b0      	movgt	r8, r6
 80160fa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80160fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016102:	eba8 0707 	sub.w	r7, r8, r7
 8016106:	bfd8      	it	le
 8016108:	eeb0 8a46 	vmovle.f32	s16, s12
 801610c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8016110:	eea7 8a27 	vfma.f32	s16, s14, s15
 8016114:	b1db      	cbz	r3, 801614e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 8016116:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801611a:	d118      	bne.n	801614e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 801611c:	42bc      	cmp	r4, r7
 801611e:	d262      	bcs.n	80161e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 8016120:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8016124:	68eb      	ldr	r3, [r5, #12]
 8016126:	ee17 0a90 	vmov	r0, s15
 801612a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 801612e:	b2d3      	uxtb	r3, r2
 8016130:	9300      	str	r3, [sp, #0]
 8016132:	4649      	mov	r1, r9
 8016134:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8016138:	f3c2 4207 	ubfx	r2, r2, #16, #8
 801613c:	f7ff fe14 	bl	8015d68 <_ZN8touchgfxL10applyNoiseEiihhh>
 8016140:	f824 0b02 	strh.w	r0, [r4], #2
 8016144:	edd5 7a08 	vldr	s15, [r5, #32]
 8016148:	ee38 8a27 	vadd.f32	s16, s16, s15
 801614c:	e7e6      	b.n	801611c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 801614e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 80162b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8016152:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 8016156:	42bc      	cmp	r4, r7
 8016158:	d245      	bcs.n	80161e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 801615a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801615e:	68eb      	ldr	r3, [r5, #12]
 8016160:	f8b4 e000 	ldrh.w	lr, [r4]
 8016164:	ee17 2a90 	vmov	r2, s15
 8016168:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801616c:	0e13      	lsrs	r3, r2, #24
 801616e:	fb03 f30a 	mul.w	r3, r3, sl
 8016172:	1c58      	adds	r0, r3, #1
 8016174:	eb00 2023 	add.w	r0, r0, r3, asr #8
 8016178:	1200      	asrs	r0, r0, #8
 801617a:	ea6f 0c00 	mvn.w	ip, r0
 801617e:	fa5f fc8c 	uxtb.w	ip, ip
 8016182:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 8016186:	ea0e 030b 	and.w	r3, lr, fp
 801618a:	fb0c f303 	mul.w	r3, ip, r3
 801618e:	b289      	uxth	r1, r1
 8016190:	fb00 3101 	mla	r1, r0, r1, r3
 8016194:	fb91 f1f9 	sdiv	r1, r1, r9
 8016198:	ea01 030b 	and.w	r3, r1, fp
 801619c:	9302      	str	r3, [sp, #8]
 801619e:	0953      	lsrs	r3, r2, #5
 80161a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80161a4:	4619      	mov	r1, r3
 80161a6:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 80161aa:	fb0c f303 	mul.w	r3, ip, r3
 80161ae:	fb00 3301 	mla	r3, r0, r1, r3
 80161b2:	f00e 0e1f 	and.w	lr, lr, #31
 80161b6:	9902      	ldr	r1, [sp, #8]
 80161b8:	fb93 f3f9 	sdiv	r3, r3, r9
 80161bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80161c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80161c4:	fb0c fc0e 	mul.w	ip, ip, lr
 80161c8:	4319      	orrs	r1, r3
 80161ca:	fb00 c002 	mla	r0, r0, r2, ip
 80161ce:	fb90 f0f9 	sdiv	r0, r0, r9
 80161d2:	f000 001f 	and.w	r0, r0, #31
 80161d6:	4301      	orrs	r1, r0
 80161d8:	f824 1b02 	strh.w	r1, [r4], #2
 80161dc:	edd5 7a08 	vldr	s15, [r5, #32]
 80161e0:	ee38 8a27 	vadd.f32	s16, s16, s15
 80161e4:	e7b7      	b.n	8016156 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 80161e6:	4546      	cmp	r6, r8
 80161e8:	dd59      	ble.n	801629e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80161ea:	edd5 7a08 	vldr	s15, [r5, #32]
 80161ee:	68ea      	ldr	r2, [r5, #12]
 80161f0:	7c29      	ldrb	r1, [r5, #16]
 80161f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80161f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80161fa:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80161fe:	bfd8      	it	le
 8016200:	2300      	movle	r3, #0
 8016202:	eba6 0608 	sub.w	r6, r6, r8
 8016206:	58d2      	ldr	r2, [r2, r3]
 8016208:	0a10      	lsrs	r0, r2, #8
 801620a:	0953      	lsrs	r3, r2, #5
 801620c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 8016210:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8016214:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016218:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 801621c:	b159      	cbz	r1, 8016236 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 801621e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016222:	d108      	bne.n	8016236 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 8016224:	4318      	orrs	r0, r3
 8016226:	4338      	orrs	r0, r7
 8016228:	42b4      	cmp	r4, r6
 801622a:	d238      	bcs.n	801629e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801622c:	f824 0b02 	strh.w	r0, [r4], #2
 8016230:	e7fa      	b.n	8016228 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 8016232:	46b8      	mov	r8, r7
 8016234:	e7d9      	b.n	80161ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 8016236:	0e12      	lsrs	r2, r2, #24
 8016238:	fb02 f10a 	mul.w	r1, r2, sl
 801623c:	1c4a      	adds	r2, r1, #1
 801623e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 8016242:	1212      	asrs	r2, r2, #8
 8016244:	fb02 f507 	mul.w	r5, r2, r7
 8016248:	4350      	muls	r0, r2
 801624a:	4353      	muls	r3, r2
 801624c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 80162b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8016250:	43d2      	mvns	r2, r2
 8016252:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8016256:	27ff      	movs	r7, #255	@ 0xff
 8016258:	42b4      	cmp	r4, r6
 801625a:	d220      	bcs.n	801629e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801625c:	f8b4 e000 	ldrh.w	lr, [r4]
 8016260:	ea0e 010c 	and.w	r1, lr, ip
 8016264:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8016268:	fb02 0101 	mla	r1, r2, r1, r0
 801626c:	fb02 3808 	mla	r8, r2, r8, r3
 8016270:	fb91 f1f7 	sdiv	r1, r1, r7
 8016274:	fb98 f8f7 	sdiv	r8, r8, r7
 8016278:	ea01 010c 	and.w	r1, r1, ip
 801627c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8016280:	f00e 0e1f 	and.w	lr, lr, #31
 8016284:	ea41 0108 	orr.w	r1, r1, r8
 8016288:	fb02 5e0e 	mla	lr, r2, lr, r5
 801628c:	fb9e fef7 	sdiv	lr, lr, r7
 8016290:	f00e 0e1f 	and.w	lr, lr, #31
 8016294:	ea41 010e 	orr.w	r1, r1, lr
 8016298:	f824 1b02 	strh.w	r1, [r4], #2
 801629c:	e7dc      	b.n	8016258 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 801629e:	b007      	add	sp, #28
 80162a0:	ecbd 8b02 	vpop	{d8}
 80162a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162a8:	00000000 	.word	0x00000000
 80162ac:	447ffffe 	.word	0x447ffffe
 80162b0:	fffff800 	.word	0xfffff800

080162b4 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 80162b4:	4770      	bx	lr

080162b6 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 80162b6:	4770      	bx	lr

080162b8 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 80162b8:	b510      	push	{r4, lr}
 80162ba:	2124      	movs	r1, #36	@ 0x24
 80162bc:	4604      	mov	r4, r0
 80162be:	f016 ff9a 	bl	802d1f6 <_ZdlPvj>
 80162c2:	4620      	mov	r0, r4
 80162c4:	bd10      	pop	{r4, pc}
	...

080162c8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80162c8:	4b06      	ldr	r3, [pc, #24]	@ (80162e4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80162ca:	60c1      	str	r1, [r0, #12]
 80162cc:	094a      	lsrs	r2, r1, #5
 80162ce:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80162d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80162d6:	4313      	orrs	r3, r2
 80162d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80162dc:	4319      	orrs	r1, r3
 80162de:	8201      	strh	r1, [r0, #16]
 80162e0:	4770      	bx	lr
 80162e2:	bf00      	nop
 80162e4:	fffff800 	.word	0xfffff800

080162e8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80162e8:	f1a0 0008 	sub.w	r0, r0, #8
 80162ec:	e7ec      	b.n	80162c8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80162ee:	bf00      	nop

080162f0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80162f0:	b508      	push	{r3, lr}
 80162f2:	4b05      	ldr	r3, [pc, #20]	@ (8016308 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80162f4:	6818      	ldr	r0, [r3, #0]
 80162f6:	6803      	ldr	r3, [r0, #0]
 80162f8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80162fc:	4798      	blx	r3
 80162fe:	1e43      	subs	r3, r0, #1
 8016300:	4258      	negs	r0, r3
 8016302:	4158      	adcs	r0, r3
 8016304:	bd08      	pop	{r3, pc}
 8016306:	bf00      	nop
 8016308:	20013884 	.word	0x20013884

0801630c <_ZN8touchgfx13PainterRGB565D1Ev>:
 801630c:	4770      	bx	lr

0801630e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 801630e:	3808      	subs	r0, #8
 8016310:	4770      	bx	lr

08016312 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8016312:	b430      	push	{r4, r5}
 8016314:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8016318:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 801631c:	8a02      	ldrh	r2, [r0, #16]
 801631e:	9202      	str	r2, [sp, #8]
 8016320:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016324:	68c2      	ldr	r2, [r0, #12]
 8016326:	4629      	mov	r1, r5
 8016328:	4620      	mov	r0, r4
 801632a:	bc30      	pop	{r4, r5}
 801632c:	f7eb b918 	b.w	8001560 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08016330 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8016330:	f7eb b90a 	b.w	8001548 <_ZN8touchgfx5paint8tearDownEv>

08016334 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8016334:	b510      	push	{r4, lr}
 8016336:	2114      	movs	r1, #20
 8016338:	4604      	mov	r4, r0
 801633a:	f016 ff5c 	bl	802d1f6 <_ZdlPvj>
 801633e:	4620      	mov	r0, r4
 8016340:	bd10      	pop	{r4, pc}

08016342 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8016342:	f1a0 0008 	sub.w	r0, r0, #8
 8016346:	e7f5      	b.n	8016334 <_ZN8touchgfx13PainterRGB565D0Ev>

08016348 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 8016348:	2300      	movs	r3, #0
 801634a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801634c:	8503      	strh	r3, [r0, #40]	@ 0x28
 801634e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 8016350:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8016352:	6980      	ldr	r0, [r0, #24]
 8016354:	b110      	cbz	r0, 801635c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 8016356:	6803      	ldr	r3, [r0, #0]
 8016358:	691b      	ldr	r3, [r3, #16]
 801635a:	4718      	bx	r3
 801635c:	4770      	bx	lr

0801635e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 801635e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 8016362:	4770      	bx	lr

08016364 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 8016364:	b538      	push	{r3, r4, r5, lr}
 8016366:	0e0b      	lsrs	r3, r1, #24
 8016368:	7783      	strb	r3, [r0, #30]
 801636a:	6803      	ldr	r3, [r0, #0]
 801636c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801636e:	4604      	mov	r4, r0
 8016370:	460d      	mov	r5, r1
 8016372:	4798      	blx	r3
 8016374:	6803      	ldr	r3, [r0, #0]
 8016376:	4629      	mov	r1, r5
 8016378:	689b      	ldr	r3, [r3, #8]
 801637a:	4798      	blx	r3
 801637c:	6823      	ldr	r3, [r4, #0]
 801637e:	4620      	mov	r0, r4
 8016380:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8016382:	4798      	blx	r3
 8016384:	61a0      	str	r0, [r4, #24]
 8016386:	bd38      	pop	{r3, r4, r5, pc}

08016388 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 8016388:	7741      	strb	r1, [r0, #29]
 801638a:	4770      	bx	lr

0801638c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 801638c:	b530      	push	{r4, r5, lr}
 801638e:	460d      	mov	r5, r1
 8016390:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 8016394:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016396:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8016398:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801639a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801639c:	682b      	ldr	r3, [r5, #0]
 801639e:	6023      	str	r3, [r4, #0]
 80163a0:	bd30      	pop	{r4, r5, pc}

080163a2 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 80163a2:	b538      	push	{r3, r4, r5, lr}
 80163a4:	4604      	mov	r4, r0
 80163a6:	1d03      	adds	r3, r0, #4
 80163a8:	6808      	ldr	r0, [r1, #0]
 80163aa:	6849      	ldr	r1, [r1, #4]
 80163ac:	c303      	stmia	r3!, {r0, r1}
 80163ae:	6813      	ldr	r3, [r2, #0]
 80163b0:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 80163b4:	6853      	ldr	r3, [r2, #4]
 80163b6:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 80163ba:	2500      	movs	r5, #0
 80163bc:	61a5      	str	r5, [r4, #24]
 80163be:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 80163c2:	f006 f9c7 	bl	801c754 <_ZN8touchgfx9Matrix3x35resetEv>
 80163c6:	23ff      	movs	r3, #255	@ 0xff
 80163c8:	7763      	strb	r3, [r4, #29]
 80163ca:	77a3      	strb	r3, [r4, #30]
 80163cc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80163d0:	6323      	str	r3, [r4, #48]	@ 0x30
 80163d2:	2301      	movs	r3, #1
 80163d4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 80163d8:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 80163dc:	bd38      	pop	{r3, r4, r5, pc}
	...

080163e0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 80163e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80163e4:	ed2d 8b0a 	vpush	{d8-d12}
 80163e8:	ee70 7a41 	vsub.f32	s15, s0, s2
 80163ec:	b087      	sub	sp, #28
 80163ee:	eef5 7a40 	vcmp.f32	s15, #0.0
 80163f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80163f6:	4605      	mov	r5, r0
 80163f8:	eef0 9a40 	vmov.f32	s19, s0
 80163fc:	eeb0 aa60 	vmov.f32	s20, s1
 8016400:	eeb0 9a41 	vmov.f32	s18, s2
 8016404:	eef0 8a61 	vmov.f32	s17, s3
 8016408:	eeb0 ca42 	vmov.f32	s24, s4
 801640c:	eef0 ca62 	vmov.f32	s25, s5
 8016410:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8016414:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8016416:	6802      	ldr	r2, [r0, #0]
 8016418:	d112      	bne.n	8016440 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 801641a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 801641e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016426:	d10b      	bne.n	8016440 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8016428:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801642c:	3901      	subs	r1, #1
 801642e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8016430:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8016434:	b007      	add	sp, #28
 8016436:	ecbd 8b0a 	vpop	{d8-d12}
 801643a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801643e:	4710      	bx	r2
 8016440:	23ff      	movs	r3, #255	@ 0xff
 8016442:	77ab      	strb	r3, [r5, #30]
 8016444:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8016446:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 801670c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 801644a:	4628      	mov	r0, r5
 801644c:	4798      	blx	r3
 801644e:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 8016452:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8016456:	80c3      	strh	r3, [r0, #6]
 8016458:	eef0 0a4a 	vmov.f32	s1, s20
 801645c:	eeb0 0a69 	vmov.f32	s0, s19
 8016460:	4604      	mov	r4, r0
 8016462:	4640      	mov	r0, r8
 8016464:	f006 fa25 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016468:	4640      	mov	r0, r8
 801646a:	eeb0 ba40 	vmov.f32	s22, s0
 801646e:	eef0 ba60 	vmov.f32	s23, s1
 8016472:	ed8d 0a00 	vstr	s0, [sp]
 8016476:	edcd 0a01 	vstr	s1, [sp, #4]
 801647a:	eeb0 0a49 	vmov.f32	s0, s18
 801647e:	eef0 0a68 	vmov.f32	s1, s17
 8016482:	f006 fa16 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016486:	eeb4 ba40 	vcmp.f32	s22, s0
 801648a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801648e:	eef4 ba60 	vcmp.f32	s23, s1
 8016492:	bf0c      	ite	eq
 8016494:	2301      	moveq	r3, #1
 8016496:	2300      	movne	r3, #0
 8016498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801649c:	eeb4 ba40 	vcmp.f32	s22, s0
 80164a0:	7463      	strb	r3, [r4, #17]
 80164a2:	bf0c      	ite	eq
 80164a4:	2301      	moveq	r3, #1
 80164a6:	2300      	movne	r3, #0
 80164a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80164ac:	eeb0 8a40 	vmov.f32	s16, s0
 80164b0:	eef0 aa60 	vmov.f32	s21, s1
 80164b4:	ed8d 0a02 	vstr	s0, [sp, #8]
 80164b8:	edcd 0a03 	vstr	s1, [sp, #12]
 80164bc:	74a3      	strb	r3, [r4, #18]
 80164be:	d030      	beq.n	8016522 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 80164c0:	eef4 ba60 	vcmp.f32	s23, s1
 80164c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80164c8:	d02b      	beq.n	8016522 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 80164ca:	ee39 9a69 	vsub.f32	s18, s18, s19
 80164ce:	ee78 8aca 	vsub.f32	s17, s17, s20
 80164d2:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 80164d6:	4640      	mov	r0, r8
 80164d8:	eec8 7aac 	vdiv.f32	s15, s17, s25
 80164dc:	eef0 0a4a 	vmov.f32	s1, s20
 80164e0:	eeb0 0a69 	vmov.f32	s0, s19
 80164e4:	eea7 0acc 	vfms.f32	s0, s15, s24
 80164e8:	eeec 0a87 	vfma.f32	s1, s25, s14
 80164ec:	f006 f9e1 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80164f0:	f899 3000 	ldrb.w	r3, [r9]
 80164f4:	edcd 0a05 	vstr	s1, [sp, #20]
 80164f8:	ee70 0aeb 	vsub.f32	s1, s1, s23
 80164fc:	2b01      	cmp	r3, #1
 80164fe:	ed8d 0a04 	vstr	s0, [sp, #16]
 8016502:	ee30 0a4b 	vsub.f32	s0, s0, s22
 8016506:	bf02      	ittt	eq
 8016508:	eef1 7a60 	vnegeq.f32	s15, s1
 801650c:	eef0 0a40 	vmoveq.f32	s1, s0
 8016510:	eeb0 0a67 	vmoveq.f32	s0, s15
 8016514:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8016518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801651c:	d134      	bne.n	8016588 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 801651e:	2301      	movs	r3, #1
 8016520:	74a3      	strb	r3, [r4, #18]
 8016522:	f899 2000 	ldrb.w	r2, [r9]
 8016526:	7c63      	ldrb	r3, [r4, #17]
 8016528:	2a01      	cmp	r2, #1
 801652a:	f040 80a3 	bne.w	8016674 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 801652e:	2b00      	cmp	r3, #0
 8016530:	d072      	beq.n	8016618 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 8016532:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 8016536:	eddf 6a73 	vldr	s13, [pc, #460]	@ 8016704 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 801653a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801653e:	eef4 baea 	vcmpe.f32	s23, s21
 8016542:	edc4 7a08 	vstr	s15, [r4, #32]
 8016546:	eefd 7aea 	vcvt.s32.f32	s15, s21
 801654a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801654e:	ee17 3a90 	vmov	r3, s15
 8016552:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 8016556:	b21a      	sxth	r2, r3
 8016558:	ee17 3a90 	vmov	r3, s15
 801655c:	b21b      	sxth	r3, r3
 801655e:	bf47      	ittee	mi
 8016560:	8123      	strhmi	r3, [r4, #8]
 8016562:	8162      	strhmi	r2, [r4, #10]
 8016564:	8122      	strhpl	r2, [r4, #8]
 8016566:	8163      	strhpl	r3, [r4, #10]
 8016568:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801656c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8016570:	1a9b      	subs	r3, r3, r2
 8016572:	ee07 3a90 	vmov	s15, r3
 8016576:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801657a:	2300      	movs	r3, #0
 801657c:	7463      	strb	r3, [r4, #17]
 801657e:	edc4 7a07 	vstr	s15, [r4, #28]
 8016582:	2301      	movs	r3, #1
 8016584:	74a3      	strb	r3, [r4, #18]
 8016586:	e03f      	b.n	8016608 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016588:	ee80 7a80 	vdiv.f32	s14, s1, s0
 801658c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8016590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016594:	ed84 7a05 	vstr	s14, [r4, #20]
 8016598:	d102      	bne.n	80165a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 801659a:	2301      	movs	r3, #1
 801659c:	7463      	strb	r3, [r4, #17]
 801659e:	e7c0      	b.n	8016522 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 80165a0:	2b01      	cmp	r3, #1
 80165a2:	bf03      	ittte	eq
 80165a4:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 80165a8:	ee07 2a90 	vmoveq	s15, r2
 80165ac:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 80165b0:	eef0 7a6b 	vmovne.f32	s15, s23
 80165b4:	bf0a      	itet	eq
 80165b6:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 80165ba:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 80165be:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 80165c2:	2b01      	cmp	r3, #1
 80165c4:	ee38 8a4b 	vsub.f32	s16, s16, s22
 80165c8:	ee7a aaeb 	vsub.f32	s21, s21, s23
 80165cc:	edc4 7a06 	vstr	s15, [r4, #24]
 80165d0:	bf02      	ittt	eq
 80165d2:	eef1 7a48 	vnegeq.f32	s15, s16
 80165d6:	eeb0 8a6a 	vmoveq.f32	s16, s21
 80165da:	eef0 aa67 	vmoveq.f32	s21, s15
 80165de:	eeca 7a87 	vdiv.f32	s15, s21, s14
 80165e2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8016708 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 80165e6:	ee38 8a67 	vsub.f32	s16, s16, s15
 80165ea:	eec7 7a08 	vdiv.f32	s15, s14, s16
 80165ee:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80165f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165f6:	ed84 8a07 	vstr	s16, [r4, #28]
 80165fa:	edc4 7a08 	vstr	s15, [r4, #32]
 80165fe:	d503      	bpl.n	8016608 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016600:	eeb1 8a48 	vneg.f32	s16, s16
 8016604:	ed84 8a07 	vstr	s16, [r4, #28]
 8016608:	60e7      	str	r7, [r4, #12]
 801660a:	7426      	strb	r6, [r4, #16]
 801660c:	61ac      	str	r4, [r5, #24]
 801660e:	b007      	add	sp, #28
 8016610:	ecbd 8b0a 	vpop	{d8-d12}
 8016614:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016618:	7ca3      	ldrb	r3, [r4, #18]
 801661a:	2b00      	cmp	r3, #0
 801661c:	d0f4      	beq.n	8016608 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 801661e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016622:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8016704 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 8016626:	ee00 3a10 	vmov	s0, r3
 801662a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 801662e:	ee30 8a48 	vsub.f32	s16, s0, s16
 8016632:	ee30 0a4b 	vsub.f32	s0, s0, s22
 8016636:	ee38 7a40 	vsub.f32	s14, s16, s0
 801663a:	eeb4 8ac0 	vcmpe.f32	s16, s0
 801663e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8016642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016646:	edc4 7a08 	vstr	s15, [r4, #32]
 801664a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801664e:	ee17 3a90 	vmov	r3, s15
 8016652:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8016656:	b21a      	sxth	r2, r3
 8016658:	ee17 3a90 	vmov	r3, s15
 801665c:	b21b      	sxth	r3, r3
 801665e:	bfcc      	ite	gt
 8016660:	8123      	strhgt	r3, [r4, #8]
 8016662:	8163      	strhle	r3, [r4, #10]
 8016664:	f04f 0301 	mov.w	r3, #1
 8016668:	7463      	strb	r3, [r4, #17]
 801666a:	bfcc      	ite	gt
 801666c:	8162      	strhgt	r2, [r4, #10]
 801666e:	8122      	strhle	r2, [r4, #8]
 8016670:	2300      	movs	r3, #0
 8016672:	e787      	b.n	8016584 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 8016674:	b1db      	cbz	r3, 80166ae <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 8016676:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 801667a:	eddf 6a22 	vldr	s13, [pc, #136]	@ 8016704 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 801667e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8016682:	eef4 baea 	vcmpe.f32	s23, s21
 8016686:	edc4 7a08 	vstr	s15, [r4, #32]
 801668a:	eefd 7aea 	vcvt.s32.f32	s15, s21
 801668e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016692:	ee17 3a90 	vmov	r3, s15
 8016696:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 801669a:	b21a      	sxth	r2, r3
 801669c:	ee17 3a90 	vmov	r3, s15
 80166a0:	b21b      	sxth	r3, r3
 80166a2:	bf47      	ittee	mi
 80166a4:	8123      	strhmi	r3, [r4, #8]
 80166a6:	8162      	strhmi	r2, [r4, #10]
 80166a8:	8122      	strhpl	r2, [r4, #8]
 80166aa:	8163      	strhpl	r3, [r4, #10]
 80166ac:	e7ac      	b.n	8016608 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80166ae:	7ca3      	ldrb	r3, [r4, #18]
 80166b0:	2b00      	cmp	r3, #0
 80166b2:	d0a9      	beq.n	8016608 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80166b4:	ee38 7a4b 	vsub.f32	s14, s16, s22
 80166b8:	eddf 6a12 	vldr	s13, [pc, #72]	@ 8016704 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 80166bc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80166c0:	eeb4 bac8 	vcmpe.f32	s22, s16
 80166c4:	edc4 7a08 	vstr	s15, [r4, #32]
 80166c8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80166cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166d0:	ee17 3a90 	vmov	r3, s15
 80166d4:	eefd 7acb 	vcvt.s32.f32	s15, s22
 80166d8:	b21a      	sxth	r2, r3
 80166da:	ee17 3a90 	vmov	r3, s15
 80166de:	b21b      	sxth	r3, r3
 80166e0:	bf47      	ittee	mi
 80166e2:	8123      	strhmi	r3, [r4, #8]
 80166e4:	8162      	strhmi	r2, [r4, #10]
 80166e6:	8122      	strhpl	r2, [r4, #8]
 80166e8:	8163      	strhpl	r3, [r4, #10]
 80166ea:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80166ee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80166f2:	1a9b      	subs	r3, r3, r2
 80166f4:	ee07 3a90 	vmov	s15, r3
 80166f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80166fc:	edc4 7a07 	vstr	s15, [r4, #28]
 8016700:	e782      	b.n	8016608 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016702:	bf00      	nop
 8016704:	447ffffe 	.word	0x447ffffe
 8016708:	44800000 	.word	0x44800000
 801670c:	2001387c 	.word	0x2001387c

08016710 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 8016710:	b510      	push	{r4, lr}
 8016712:	2100      	movs	r1, #0
 8016714:	ed2d 8b02 	vpush	{d8}
 8016718:	eef0 8a62 	vmov.f32	s17, s5
 801671c:	4604      	mov	r4, r0
 801671e:	eeb0 8a42 	vmov.f32	s16, s4
 8016722:	f016 faf7 	bl	802cd14 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8016726:	eef0 7a68 	vmov.f32	s15, s17
 801672a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801672e:	6823      	ldr	r3, [r4, #0]
 8016730:	ee17 2a90 	vmov	r2, s15
 8016734:	eef0 7a48 	vmov.f32	s15, s16
 8016738:	ecbd 8b02 	vpop	{d8}
 801673c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016740:	4620      	mov	r0, r4
 8016742:	689b      	ldr	r3, [r3, #8]
 8016744:	ee17 1a90 	vmov	r1, s15
 8016748:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801674c:	4718      	bx	r3

0801674e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 801674e:	b510      	push	{r4, lr}
 8016750:	2100      	movs	r1, #0
 8016752:	ed2d 8b02 	vpush	{d8}
 8016756:	eef0 8a63 	vmov.f32	s17, s7
 801675a:	4604      	mov	r4, r0
 801675c:	eeb0 8a43 	vmov.f32	s16, s6
 8016760:	f016 fb9a 	bl	802ce98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8016764:	eef0 7a68 	vmov.f32	s15, s17
 8016768:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801676c:	6823      	ldr	r3, [r4, #0]
 801676e:	ee17 2a90 	vmov	r2, s15
 8016772:	eef0 7a48 	vmov.f32	s15, s16
 8016776:	ecbd 8b02 	vpop	{d8}
 801677a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801677e:	4620      	mov	r0, r4
 8016780:	689b      	ldr	r3, [r3, #8]
 8016782:	ee17 1a90 	vmov	r1, s15
 8016786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801678a:	4718      	bx	r3

0801678c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 801678c:	b513      	push	{r0, r1, r4, lr}
 801678e:	4604      	mov	r4, r0
 8016790:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8016792:	f006 f88e 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016796:	eef0 7a60 	vmov.f32	s15, s1
 801679a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801679e:	4620      	mov	r0, r4
 80167a0:	ee17 2a90 	vmov	r2, s15
 80167a4:	eef0 7a40 	vmov.f32	s15, s0
 80167a8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80167ac:	ee17 1a90 	vmov	r1, s15
 80167b0:	b002      	add	sp, #8
 80167b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80167b6:	f016 ba07 	b.w	802cbc8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

080167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 80167ba:	b513      	push	{r0, r1, r4, lr}
 80167bc:	4604      	mov	r4, r0
 80167be:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 80167c0:	f006 f877 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80167c4:	eef0 7a60 	vmov.f32	s15, s1
 80167c8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80167cc:	4620      	mov	r0, r4
 80167ce:	ee17 2a90 	vmov	r2, s15
 80167d2:	eef0 7a40 	vmov.f32	s15, s0
 80167d6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80167da:	ee17 1a90 	vmov	r1, s15
 80167de:	b002      	add	sp, #8
 80167e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80167e4:	f016 ba3d 	b.w	802cc62 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

080167e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 80167e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80167ea:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 80167ee:	2400      	movs	r4, #0
 80167f0:	9f07      	ldr	r7, [sp, #28]
 80167f2:	4463      	add	r3, ip
 80167f4:	4626      	mov	r6, r4
 80167f6:	f04f 0e01 	mov.w	lr, #1
 80167fa:	4563      	cmp	r3, ip
 80167fc:	d02d      	beq.n	801685a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 80167fe:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 8016802:	2d06      	cmp	r5, #6
 8016804:	d8f9      	bhi.n	80167fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8016806:	fa0e f505 	lsl.w	r5, lr, r5
 801680a:	f015 0f66 	tst.w	r5, #102	@ 0x66
 801680e:	d10d      	bne.n	801682c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 8016810:	f015 0f10 	tst.w	r5, #16
 8016814:	d117      	bne.n	8016846 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 8016816:	072d      	lsls	r5, r5, #28
 8016818:	d5ef      	bpl.n	80167fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 801681a:	3801      	subs	r0, #1
 801681c:	b91e      	cbnz	r6, 8016826 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 801681e:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 8016822:	682d      	ldr	r5, [r5, #0]
 8016824:	600d      	str	r5, [r1, #0]
 8016826:	b96c      	cbnz	r4, 8016844 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8016828:	2601      	movs	r6, #1
 801682a:	e7e6      	b.n	80167fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 801682c:	b926      	cbnz	r6, 8016838 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 801682e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 8016832:	f853 3c08 	ldr.w	r3, [r3, #-8]
 8016836:	600b      	str	r3, [r1, #0]
 8016838:	b924      	cbnz	r4, 8016844 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 801683a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 801683e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8016842:	6013      	str	r3, [r2, #0]
 8016844:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016846:	3801      	subs	r0, #1
 8016848:	b91c      	cbnz	r4, 8016852 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 801684a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 801684e:	6824      	ldr	r4, [r4, #0]
 8016850:	6014      	str	r4, [r2, #0]
 8016852:	2e00      	cmp	r6, #0
 8016854:	d1f6      	bne.n	8016844 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8016856:	2401      	movs	r4, #1
 8016858:	e7cf      	b.n	80167fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 801685a:	b90e      	cbnz	r6, 8016860 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 801685c:	2300      	movs	r3, #0
 801685e:	600b      	str	r3, [r1, #0]
 8016860:	2c00      	cmp	r4, #0
 8016862:	d1ef      	bne.n	8016844 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8016864:	2300      	movs	r3, #0
 8016866:	e7ec      	b.n	8016842 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

08016868 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 8016868:	b538      	push	{r3, r4, r5, lr}
 801686a:	4604      	mov	r4, r0
 801686c:	ed2d 8b0a 	vpush	{d8-d12}
 8016870:	460d      	mov	r5, r1
 8016872:	eef0 ba40 	vmov.f32	s23, s0
 8016876:	eeb0 ca60 	vmov.f32	s24, s1
 801687a:	eef0 aa41 	vmov.f32	s21, s2
 801687e:	eeb0 ba61 	vmov.f32	s22, s3
 8016882:	eeb0 9a42 	vmov.f32	s18, s4
 8016886:	eef0 9a62 	vmov.f32	s19, s5
 801688a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 801688e:	ee7b 8a29 	vadd.f32	s17, s22, s19
 8016892:	ee3a 8a89 	vadd.f32	s16, s21, s18
 8016896:	ee68 8a8a 	vmul.f32	s17, s17, s20
 801689a:	ee28 8a0a 	vmul.f32	s16, s16, s20
 801689e:	ee3c 0a68 	vsub.f32	s0, s24, s17
 80168a2:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 80168a6:	ee20 0a00 	vmul.f32	s0, s0, s0
 80168aa:	eea7 0aa7 	vfma.f32	s0, s15, s15
 80168ae:	f016 fccd 	bl	802d24c <sqrtf>
 80168b2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80168b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ba:	d12e      	bne.n	801691a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 80168bc:	ee79 7a6a 	vsub.f32	s15, s18, s21
 80168c0:	ee39 7acb 	vsub.f32	s14, s19, s22
 80168c4:	eeb0 8a6a 	vmov.f32	s16, s21
 80168c8:	eef0 8a4b 	vmov.f32	s17, s22
 80168cc:	eea7 8a8a 	vfma.f32	s16, s15, s20
 80168d0:	eee7 8a0a 	vfma.f32	s17, s14, s20
 80168d4:	eea7 8a0a 	vfma.f32	s16, s14, s20
 80168d8:	eee7 8aca 	vfms.f32	s17, s15, s20
 80168dc:	2d02      	cmp	r5, #2
 80168de:	dc2f      	bgt.n	8016940 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 80168e0:	3501      	adds	r5, #1
 80168e2:	eef0 1a4b 	vmov.f32	s3, s22
 80168e6:	eeb0 1a6a 	vmov.f32	s2, s21
 80168ea:	4629      	mov	r1, r5
 80168ec:	eef0 2a68 	vmov.f32	s5, s17
 80168f0:	eeb0 2a48 	vmov.f32	s4, s16
 80168f4:	eef0 0a4c 	vmov.f32	s1, s24
 80168f8:	eeb0 0a6b 	vmov.f32	s0, s23
 80168fc:	4620      	mov	r0, r4
 80168fe:	f7ff ffb3 	bl	8016868 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 8016902:	eef0 0a68 	vmov.f32	s1, s17
 8016906:	eeb0 0a48 	vmov.f32	s0, s16
 801690a:	4620      	mov	r0, r4
 801690c:	f7ff ff55 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016910:	eeb0 ba68 	vmov.f32	s22, s17
 8016914:	eef0 aa48 	vmov.f32	s21, s16
 8016918:	e7b9      	b.n	801688e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 801691a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 801691e:	ee38 8a6b 	vsub.f32	s16, s16, s23
 8016922:	ee78 8acc 	vsub.f32	s17, s17, s24
 8016926:	ee28 7a27 	vmul.f32	s14, s16, s15
 801692a:	ee68 7aa7 	vmul.f32	s15, s17, s15
 801692e:	ee87 8a00 	vdiv.f32	s16, s14, s0
 8016932:	eec7 8a80 	vdiv.f32	s17, s15, s0
 8016936:	ee3b 8a88 	vadd.f32	s16, s23, s16
 801693a:	ee7c 8a28 	vadd.f32	s17, s24, s17
 801693e:	e7cd      	b.n	80168dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 8016940:	eef0 0a68 	vmov.f32	s1, s17
 8016944:	eeb0 0a48 	vmov.f32	s0, s16
 8016948:	4620      	mov	r0, r4
 801694a:	f7ff ff36 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801694e:	ecbd 8b0a 	vpop	{d8-d12}
 8016952:	bd38      	pop	{r3, r4, r5, pc}

08016954 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 8016954:	b510      	push	{r4, lr}
 8016956:	ed2d 8b0a 	vpush	{d8-d12}
 801695a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 801695e:	2b02      	cmp	r3, #2
 8016960:	4604      	mov	r4, r0
 8016962:	eeb0 ca40 	vmov.f32	s24, s0
 8016966:	eeb0 9a60 	vmov.f32	s18, s1
 801696a:	eef0 9a41 	vmov.f32	s19, s2
 801696e:	eef0 8a61 	vmov.f32	s17, s3
 8016972:	eeb0 ba42 	vmov.f32	s22, s4
 8016976:	eef0 ba62 	vmov.f32	s23, s5
 801697a:	eeb0 aa43 	vmov.f32	s20, s6
 801697e:	eef0 aa63 	vmov.f32	s21, s7
 8016982:	eeb0 8a44 	vmov.f32	s16, s8
 8016986:	eef0 ca64 	vmov.f32	s25, s9
 801698a:	d12c      	bne.n	80169e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 801698c:	eef0 0a62 	vmov.f32	s1, s5
 8016990:	eeb0 0a42 	vmov.f32	s0, s4
 8016994:	f7ff ff11 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016998:	ee79 9acb 	vsub.f32	s19, s19, s22
 801699c:	ee7a caec 	vsub.f32	s25, s21, s25
 80169a0:	ee78 8aeb 	vsub.f32	s17, s17, s23
 80169a4:	ee3a 8a48 	vsub.f32	s16, s20, s16
 80169a8:	ee69 9aac 	vmul.f32	s19, s19, s25
 80169ac:	ee28 8a88 	vmul.f32	s16, s17, s16
 80169b0:	eef4 9ac8 	vcmpe.f32	s19, s16
 80169b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80169b8:	db0f      	blt.n	80169da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 80169ba:	2101      	movs	r1, #1
 80169bc:	eef0 2a6a 	vmov.f32	s5, s21
 80169c0:	eeb0 2a4a 	vmov.f32	s4, s20
 80169c4:	eef0 1a6b 	vmov.f32	s3, s23
 80169c8:	eeb0 1a4b 	vmov.f32	s2, s22
 80169cc:	eef0 0a49 	vmov.f32	s1, s18
 80169d0:	eeb0 0a4c 	vmov.f32	s0, s24
 80169d4:	4620      	mov	r0, r4
 80169d6:	f7ff ff47 	bl	8016868 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 80169da:	eef0 0a6a 	vmov.f32	s1, s21
 80169de:	eeb0 0a4a 	vmov.f32	s0, s20
 80169e2:	4620      	mov	r0, r4
 80169e4:	e035      	b.n	8016a52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 80169e6:	2b01      	cmp	r3, #1
 80169e8:	d138      	bne.n	8016a5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 80169ea:	ee31 4ae2 	vsub.f32	s8, s3, s5
 80169ee:	ee33 6a48 	vsub.f32	s12, s6, s16
 80169f2:	ee71 7a42 	vsub.f32	s15, s2, s4
 80169f6:	ee73 6ae4 	vsub.f32	s13, s7, s9
 80169fa:	ee26 7a44 	vnmul.f32	s14, s12, s8
 80169fe:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8016a02:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8016a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a0a:	d027      	beq.n	8016a5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8016a0c:	ee28 8a63 	vnmul.f32	s16, s16, s7
 8016a10:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 8016a14:	eea4 8a83 	vfma.f32	s16, s9, s6
 8016a18:	eee1 8a22 	vfma.f32	s17, s2, s5
 8016a1c:	ee68 7a67 	vnmul.f32	s15, s16, s15
 8016a20:	ee28 8a44 	vnmul.f32	s16, s16, s8
 8016a24:	eee6 7a28 	vfma.f32	s15, s12, s17
 8016a28:	eea6 8aa8 	vfma.f32	s16, s13, s17
 8016a2c:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8016a30:	eec8 0a07 	vdiv.f32	s1, s16, s14
 8016a34:	ee3c ca40 	vsub.f32	s24, s24, s0
 8016a38:	ee39 9a60 	vsub.f32	s18, s18, s1
 8016a3c:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 8016a40:	ee29 9a09 	vmul.f32	s18, s18, s18
 8016a44:	eeac 9a0c 	vfma.f32	s18, s24, s24
 8016a48:	eef4 7ac9 	vcmpe.f32	s15, s18
 8016a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016a50:	db04      	blt.n	8016a5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8016a52:	f7ff feb2 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016a56:	ecbd 8b0a 	vpop	{d8-d12}
 8016a5a:	bd10      	pop	{r4, pc}
 8016a5c:	eef0 0a6b 	vmov.f32	s1, s23
 8016a60:	eeb0 0a4b 	vmov.f32	s0, s22
 8016a64:	4620      	mov	r0, r4
 8016a66:	f7ff fea8 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016a6a:	e7b6      	b.n	80169da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

08016a6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 8016a6c:	b510      	push	{r4, lr}
 8016a6e:	ed2d 8b0c 	vpush	{d8-d13}
 8016a72:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 8016a76:	4604      	mov	r4, r0
 8016a78:	eeb0 9a40 	vmov.f32	s18, s0
 8016a7c:	eef0 9a60 	vmov.f32	s19, s1
 8016a80:	eef0 aa41 	vmov.f32	s21, s2
 8016a84:	eeb0 ba61 	vmov.f32	s22, s3
 8016a88:	b933      	cbnz	r3, 8016a98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 8016a8a:	f7ff fe96 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016a8e:	eef0 0a4b 	vmov.f32	s1, s22
 8016a92:	eeb0 0a6a 	vmov.f32	s0, s21
 8016a96:	e015      	b.n	8016ac4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 8016a98:	ee71 8a40 	vsub.f32	s17, s2, s0
 8016a9c:	ee31 8ae0 	vsub.f32	s16, s3, s1
 8016aa0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8016aa4:	2b02      	cmp	r3, #2
 8016aa6:	ee68 8aa7 	vmul.f32	s17, s17, s15
 8016aaa:	ee28 8a27 	vmul.f32	s16, s16, s15
 8016aae:	d10f      	bne.n	8016ad0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 8016ab0:	ee70 0ae8 	vsub.f32	s1, s1, s17
 8016ab4:	ee30 0a08 	vadd.f32	s0, s0, s16
 8016ab8:	f7ff fe7f 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016abc:	ee7b 0a68 	vsub.f32	s1, s22, s17
 8016ac0:	ee3a 0a88 	vadd.f32	s0, s21, s16
 8016ac4:	4620      	mov	r0, r4
 8016ac6:	f7ff fe78 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016aca:	ecbd 8b0c 	vpop	{d8-d13}
 8016ace:	bd10      	pop	{r4, pc}
 8016ad0:	f7ff fe73 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016ad4:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8016c0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 8016ad8:	eddf ba4d 	vldr	s23, [pc, #308]	@ 8016c10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 8016adc:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 8016c14 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 8016ae0:	eddf ca4d 	vldr	s25, [pc, #308]	@ 8016c18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 8016ae4:	ed9f da4d 	vldr	s26, [pc, #308]	@ 8016c1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 8016ae8:	eef0 0a69 	vmov.f32	s1, s19
 8016aec:	eeb0 0a49 	vmov.f32	s0, s18
 8016af0:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016af4:	4620      	mov	r0, r4
 8016af6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016afa:	eeb1 aa68 	vneg.f32	s20, s17
 8016afe:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8016b02:	eea8 0a2b 	vfma.f32	s0, s16, s23
 8016b06:	f7ff fe58 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016b0a:	eddf 7a45 	vldr	s15, [pc, #276]	@ 8016c20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 8016b0e:	eef0 0a69 	vmov.f32	s1, s19
 8016b12:	eeb0 0a49 	vmov.f32	s0, s18
 8016b16:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016b1a:	4620      	mov	r0, r4
 8016b1c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016b20:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8016b24:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8016b28:	f7ff fe47 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016b2c:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8016c24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 8016b30:	eef0 0a69 	vmov.f32	s1, s19
 8016b34:	eeb0 0a49 	vmov.f32	s0, s18
 8016b38:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016b3c:	4620      	mov	r0, r4
 8016b3e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016b42:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8016b46:	eea8 0a2c 	vfma.f32	s0, s16, s25
 8016b4a:	f7ff fe36 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016b4e:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8016c28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 8016b52:	eef0 0a69 	vmov.f32	s1, s19
 8016b56:	eeb0 0a49 	vmov.f32	s0, s18
 8016b5a:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016b5e:	4620      	mov	r0, r4
 8016b60:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016b64:	eeea 0a0d 	vfma.f32	s1, s20, s26
 8016b68:	eea8 0a0d 	vfma.f32	s0, s16, s26
 8016b6c:	f7ff fe25 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016b70:	ee79 0a88 	vadd.f32	s1, s19, s16
 8016b74:	ee39 0a28 	vadd.f32	s0, s18, s17
 8016b78:	ee70 0ae8 	vsub.f32	s1, s1, s17
 8016b7c:	ee30 0a08 	vadd.f32	s0, s0, s16
 8016b80:	4620      	mov	r0, r4
 8016b82:	f7ff fe1a 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016b86:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8016c2c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 8016b8a:	eef0 0a69 	vmov.f32	s1, s19
 8016b8e:	eeb0 0a49 	vmov.f32	s0, s18
 8016b92:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016b96:	4620      	mov	r0, r4
 8016b98:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016b9c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 8016ba0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 8016ba4:	f7ff fe09 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016ba8:	eddf 7a21 	vldr	s15, [pc, #132]	@ 8016c30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 8016bac:	eef0 0a69 	vmov.f32	s1, s19
 8016bb0:	eeb0 0a49 	vmov.f32	s0, s18
 8016bb4:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016bb8:	4620      	mov	r0, r4
 8016bba:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016bbe:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8016bc2:	eea8 0a2c 	vfma.f32	s0, s16, s25
 8016bc6:	f7ff fdf8 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016bca:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8016c34 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 8016bce:	eef0 0a69 	vmov.f32	s1, s19
 8016bd2:	eeb0 0a49 	vmov.f32	s0, s18
 8016bd6:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016bda:	4620      	mov	r0, r4
 8016bdc:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016be0:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8016be4:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8016be8:	f7ff fde7 	bl	80167ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8016bec:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8016c38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 8016bf0:	eef0 0a69 	vmov.f32	s1, s19
 8016bf4:	eeb0 0a49 	vmov.f32	s0, s18
 8016bf8:	eee8 0a27 	vfma.f32	s1, s16, s15
 8016bfc:	4620      	mov	r0, r4
 8016bfe:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8016c02:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8016c06:	eea8 0a2b 	vfma.f32	s0, s16, s23
 8016c0a:	e73e      	b.n	8016a8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 8016c0c:	3d23d70a 	.word	0x3d23d70a
 8016c10:	3e8f5c29 	.word	0x3e8f5c29
 8016c14:	3f19999a 	.word	0x3f19999a
 8016c18:	3f4ccccd 	.word	0x3f4ccccd
 8016c1c:	3f75c28f 	.word	0x3f75c28f
 8016c20:	3e4ccccd 	.word	0x3e4ccccd
 8016c24:	3ecccccd 	.word	0x3ecccccd
 8016c28:	3f3851ec 	.word	0x3f3851ec
 8016c2c:	3fa3d70a 	.word	0x3fa3d70a
 8016c30:	3fcccccd 	.word	0x3fcccccd
 8016c34:	3fe66666 	.word	0x3fe66666
 8016c38:	3ffae148 	.word	0x3ffae148

08016c3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 8016c3c:	b570      	push	{r4, r5, r6, lr}
 8016c3e:	ed2d 8b06 	vpush	{d8-d10}
 8016c42:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 8016c46:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 8016c4a:	ee30 8ac8 	vsub.f32	s16, s1, s16
 8016c4e:	ee30 9a49 	vsub.f32	s18, s0, s18
 8016c52:	eef0 aa40 	vmov.f32	s21, s0
 8016c56:	ee28 0a08 	vmul.f32	s0, s16, s16
 8016c5a:	4604      	mov	r4, r0
 8016c5c:	eea9 0a09 	vfma.f32	s0, s18, s18
 8016c60:	eeb0 aa60 	vmov.f32	s20, s1
 8016c64:	f016 faf2 	bl	802d24c <sqrtf>
 8016c68:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8016c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c70:	dd36      	ble.n	8016ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 8016c72:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 8016c76:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 8016c7a:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 8016c7e:	eec0 6a27 	vdiv.f32	s13, s0, s15
 8016c82:	2600      	movs	r6, #0
 8016c84:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8016c88:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 8016c8c:	eec8 8a26 	vdiv.f32	s17, s16, s13
 8016c90:	ee89 8a26 	vdiv.f32	s16, s18, s13
 8016c94:	ee70 9a28 	vadd.f32	s19, s0, s17
 8016c98:	ee30 9ac8 	vsub.f32	s18, s1, s16
 8016c9c:	ee78 8aaa 	vadd.f32	s17, s17, s21
 8016ca0:	ee3a 8a48 	vsub.f32	s16, s20, s16
 8016ca4:	b1fd      	cbz	r5, 8016ce6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 8016ca6:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 8016caa:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 8016cae:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 8016cb2:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 8016cb6:	eef0 0a49 	vmov.f32	s1, s18
 8016cba:	eeb0 0a69 	vmov.f32	s0, s19
 8016cbe:	4620      	mov	r0, r4
 8016cc0:	f7ff fd64 	bl	801678c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8016cc4:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 8016cc8:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 8016ccc:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 8016cd0:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 8016cd4:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 8016cd8:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 8016cdc:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 8016ce0:	ecbd 8b06 	vpop	{d8-d10}
 8016ce4:	bd70      	pop	{r4, r5, r6, pc}
 8016ce6:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 8016cea:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8016cee:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8016cf2:	b16b      	cbz	r3, 8016d10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 8016cf4:	eef0 1a49 	vmov.f32	s3, s18
 8016cf8:	eeb0 1a69 	vmov.f32	s2, s19
 8016cfc:	eef0 0a62 	vmov.f32	s1, s5
 8016d00:	eeb0 0a42 	vmov.f32	s0, s4
 8016d04:	4620      	mov	r0, r4
 8016d06:	f7ff feb1 	bl	8016a6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8016d0a:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 8016d0e:	e7db      	b.n	8016cc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 8016d10:	eef0 4a48 	vmov.f32	s9, s16
 8016d14:	eeb0 4a68 	vmov.f32	s8, s17
 8016d18:	eef0 3a49 	vmov.f32	s7, s18
 8016d1c:	eeb0 3a69 	vmov.f32	s6, s19
 8016d20:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8016d24:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 8016d28:	4620      	mov	r0, r4
 8016d2a:	f7ff fe13 	bl	8016954 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8016d2e:	e7cb      	b.n	8016cc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

08016d30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 8016d30:	ee07 2a90 	vmov	s15, r2
 8016d34:	ee07 1a10 	vmov	s14, r1
 8016d38:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8016d3c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8016d40:	eddf 7a03 	vldr	s15, [pc, #12]	@ 8016d50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 8016d44:	ee60 0aa7 	vmul.f32	s1, s1, s15
 8016d48:	ee20 0a27 	vmul.f32	s0, s0, s15
 8016d4c:	f7ff bf76 	b.w	8016c3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8016d50:	3d000000 	.word	0x3d000000

08016d54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 8016d54:	b538      	push	{r3, r4, r5, lr}
 8016d56:	ed2d 8b02 	vpush	{d8}
 8016d5a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 8016d5e:	4604      	mov	r4, r0
 8016d60:	b31d      	cbz	r5, 8016daa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 8016d62:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 8016d66:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 8016d6a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 8016d6e:	ee78 8a67 	vsub.f32	s17, s16, s15
 8016d72:	ee38 8a27 	vadd.f32	s16, s16, s15
 8016d76:	eef0 0a68 	vmov.f32	s1, s17
 8016d7a:	f7ff fd07 	bl	801678c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8016d7e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 8016d82:	eef0 1a48 	vmov.f32	s3, s16
 8016d86:	eeb0 0a41 	vmov.f32	s0, s2
 8016d8a:	eef0 0a68 	vmov.f32	s1, s17
 8016d8e:	4620      	mov	r0, r4
 8016d90:	f7ff fe6c 	bl	8016a6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8016d94:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 8016d98:	eef0 1a68 	vmov.f32	s3, s17
 8016d9c:	eef0 0a48 	vmov.f32	s1, s16
 8016da0:	eeb0 0a41 	vmov.f32	s0, s2
 8016da4:	4620      	mov	r0, r4
 8016da6:	f7ff fe61 	bl	8016a6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8016daa:	ecbd 8b02 	vpop	{d8}
 8016dae:	4628      	mov	r0, r5
 8016db0:	bd38      	pop	{r3, r4, r5, pc}

08016db2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 8016db2:	b510      	push	{r4, lr}
 8016db4:	ed2d 8b02 	vpush	{d8}
 8016db8:	4604      	mov	r4, r0
 8016dba:	eeb0 8a40 	vmov.f32	s16, s0
 8016dbe:	eef0 8a60 	vmov.f32	s17, s1
 8016dc2:	f7ff ffc7 	bl	8016d54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8016dc6:	b9d0      	cbnz	r0, 8016dfe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 8016dc8:	4620      	mov	r0, r4
 8016dca:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 8016dce:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 8016dd2:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 8016dd6:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 8016dda:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8016dde:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8016de2:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8016de6:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 8016dea:	eef0 0a68 	vmov.f32	s1, s17
 8016dee:	eeb0 0a48 	vmov.f32	s0, s16
 8016df2:	f7ff fdaf 	bl	8016954 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8016df6:	2001      	movs	r0, #1
 8016df8:	ecbd 8b02 	vpop	{d8}
 8016dfc:	bd10      	pop	{r4, pc}
 8016dfe:	2000      	movs	r0, #0
 8016e00:	e7fa      	b.n	8016df8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

08016e02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 8016e02:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 8016e06:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 8016e0a:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 8016e0e:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 8016e12:	f7ff be2b 	b.w	8016a6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

08016e18 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 8016e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e1c:	b089      	sub	sp, #36	@ 0x24
 8016e1e:	461c      	mov	r4, r3
 8016e20:	f10d 0820 	add.w	r8, sp, #32
 8016e24:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8016e28:	9304      	str	r3, [sp, #16]
 8016e2a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8016e2c:	9105      	str	r1, [sp, #20]
 8016e2e:	2300      	movs	r3, #0
 8016e30:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 8016e34:	9306      	str	r3, [sp, #24]
 8016e36:	f848 3d04 	str.w	r3, [r8, #-4]!
 8016e3a:	9b04      	ldr	r3, [sp, #16]
 8016e3c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 8016e40:	4682      	mov	sl, r0
 8016e42:	4615      	mov	r5, r2
 8016e44:	9b05      	ldr	r3, [sp, #20]
 8016e46:	429d      	cmp	r5, r3
 8016e48:	d96d      	bls.n	8016f26 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 8016e4a:	3d01      	subs	r5, #1
 8016e4c:	f819 3005 	ldrb.w	r3, [r9, r5]
 8016e50:	2b06      	cmp	r3, #6
 8016e52:	d8f7      	bhi.n	8016e44 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8016e54:	a201      	add	r2, pc, #4	@ (adr r2, 8016e5c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 8016e56:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016e5a:	bf00      	nop
 8016e5c:	08016e7b 	.word	0x08016e7b
 8016e60:	08016e45 	.word	0x08016e45
 8016e64:	08016e79 	.word	0x08016e79
 8016e68:	08016e9d 	.word	0x08016e9d
 8016e6c:	08016e9d 	.word	0x08016e9d
 8016e70:	08016ea1 	.word	0x08016ea1
 8016e74:	08016ee1 	.word	0x08016ee1
 8016e78:	3c02      	subs	r4, #2
 8016e7a:	4650      	mov	r0, sl
 8016e7c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8016e80:	9400      	str	r4, [sp, #0]
 8016e82:	462b      	mov	r3, r5
 8016e84:	4642      	mov	r2, r8
 8016e86:	a906      	add	r1, sp, #24
 8016e88:	f7ff fcae 	bl	80167e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8016e8c:	eddd 0a07 	vldr	s1, [sp, #28]
 8016e90:	ed9d 0a06 	vldr	s0, [sp, #24]
 8016e94:	4630      	mov	r0, r6
 8016e96:	f7ff fed1 	bl	8016c3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8016e9a:	e7d3      	b.n	8016e44 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8016e9c:	3c01      	subs	r4, #1
 8016e9e:	e7ec      	b.n	8016e7a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 8016ea0:	f1a4 0b04 	sub.w	fp, r4, #4
 8016ea4:	3c02      	subs	r4, #2
 8016ea6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8016eaa:	4650      	mov	r0, sl
 8016eac:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8016eb0:	f8cd b000 	str.w	fp, [sp]
 8016eb4:	462b      	mov	r3, r5
 8016eb6:	4642      	mov	r2, r8
 8016eb8:	a906      	add	r1, sp, #24
 8016eba:	f7ff fc95 	bl	80167e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8016ebe:	eddd 2a07 	vldr	s5, [sp, #28]
 8016ec2:	ed9d 2a06 	vldr	s4, [sp, #24]
 8016ec6:	ed54 1a01 	vldr	s3, [r4, #-4]
 8016eca:	ed14 1a02 	vldr	s2, [r4, #-8]
 8016ece:	edd4 0a01 	vldr	s1, [r4, #4]
 8016ed2:	ed94 0a00 	vldr	s0, [r4]
 8016ed6:	4630      	mov	r0, r6
 8016ed8:	f7ff fc1a 	bl	8016710 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8016edc:	465c      	mov	r4, fp
 8016ede:	e7b1      	b.n	8016e44 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8016ee0:	f1a4 0b06 	sub.w	fp, r4, #6
 8016ee4:	3c02      	subs	r4, #2
 8016ee6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8016eea:	4650      	mov	r0, sl
 8016eec:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8016ef0:	f8cd b000 	str.w	fp, [sp]
 8016ef4:	462b      	mov	r3, r5
 8016ef6:	4642      	mov	r2, r8
 8016ef8:	a906      	add	r1, sp, #24
 8016efa:	f7ff fc75 	bl	80167e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8016efe:	eddd 3a07 	vldr	s7, [sp, #28]
 8016f02:	ed9d 3a06 	vldr	s6, [sp, #24]
 8016f06:	ed54 2a03 	vldr	s5, [r4, #-12]
 8016f0a:	ed14 2a04 	vldr	s4, [r4, #-16]
 8016f0e:	ed54 1a01 	vldr	s3, [r4, #-4]
 8016f12:	ed14 1a02 	vldr	s2, [r4, #-8]
 8016f16:	edd4 0a01 	vldr	s1, [r4, #4]
 8016f1a:	ed94 0a00 	vldr	s0, [r4]
 8016f1e:	4630      	mov	r0, r6
 8016f20:	f7ff fc15 	bl	801674e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8016f24:	e7da      	b.n	8016edc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 8016f26:	9b04      	ldr	r3, [sp, #16]
 8016f28:	b113      	cbz	r3, 8016f30 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 8016f2a:	4630      	mov	r0, r6
 8016f2c:	f7ff ff69 	bl	8016e02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 8016f30:	b009      	add	sp, #36	@ 0x24
 8016f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f36:	bf00      	nop

08016f38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 8016f38:	eef0 7a60 	vmov.f32	s15, s1
 8016f3c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016f40:	6803      	ldr	r3, [r0, #0]
 8016f42:	ee17 2a90 	vmov	r2, s15
 8016f46:	eef0 7a40 	vmov.f32	s15, s0
 8016f4a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016f4e:	689b      	ldr	r3, [r3, #8]
 8016f50:	ee17 1a90 	vmov	r1, s15
 8016f54:	4718      	bx	r3
	...

08016f58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 8016f58:	b510      	push	{r4, lr}
 8016f5a:	4b04      	ldr	r3, [pc, #16]	@ (8016f6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 8016f5c:	4604      	mov	r4, r0
 8016f5e:	f840 3b14 	str.w	r3, [r0], #20
 8016f62:	f001 fb1d 	bl	80185a0 <_ZN8touchgfx7OutlineD1Ev>
 8016f66:	4620      	mov	r0, r4
 8016f68:	bd10      	pop	{r4, pc}
 8016f6a:	bf00      	nop
 8016f6c:	080328f4 	.word	0x080328f4

08016f70 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 8016f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f74:	ed2d 8b04 	vpush	{d8-d9}
 8016f78:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 8016f7c:	b0b5      	sub	sp, #212	@ 0xd4
 8016f7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f86:	4605      	mov	r5, r0
 8016f88:	468b      	mov	fp, r1
 8016f8a:	9206      	str	r2, [sp, #24]
 8016f8c:	461e      	mov	r6, r3
 8016f8e:	f04f 0400 	mov.w	r4, #0
 8016f92:	f240 814e 	bls.w	8017232 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 8016f96:	23ff      	movs	r3, #255	@ 0xff
 8016f98:	9300      	str	r3, [sp, #0]
 8016f9a:	1d02      	adds	r2, r0, #4
 8016f9c:	6981      	ldr	r1, [r0, #24]
 8016f9e:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8016fa0:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 8017238 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 8016fa4:	a808      	add	r0, sp, #32
 8016fa6:	f015 fcc3 	bl	802c930 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8016faa:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 8016fae:	4ba3      	ldr	r3, [pc, #652]	@ (801723c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 8016fb0:	edd5 6a08 	vldr	s13, [r5, #32]
 8016fb4:	9308      	str	r3, [sp, #32]
 8016fb6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016fba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fbe:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8016fc2:	bf48      	it	mi
 8016fc4:	eef1 7a67 	vnegmi.f32	s15, s15
 8016fc8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8016fcc:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 8016fd0:	2201      	movs	r2, #1
 8016fd2:	9325      	str	r3, [sp, #148]	@ 0x94
 8016fd4:	2300      	movs	r3, #0
 8016fd6:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8016fda:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 8016fde:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 8016fe2:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 8016fe6:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 8016fea:	7f6a      	ldrb	r2, [r5, #29]
 8016fec:	7fab      	ldrb	r3, [r5, #30]
 8016fee:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8016ff2:	435a      	muls	r2, r3
 8016ff4:	ee27 7a26 	vmul.f32	s14, s14, s13
 8016ff8:	1c53      	adds	r3, r2, #1
 8016ffa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016ffe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017002:	f04f 0800 	mov.w	r8, #0
 8017006:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 801700a:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 801700e:	942a      	str	r4, [sp, #168]	@ 0xa8
 8017010:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017014:	942b      	str	r4, [sp, #172]	@ 0xac
 8017016:	942c      	str	r4, [sp, #176]	@ 0xb0
 8017018:	942d      	str	r4, [sp, #180]	@ 0xb4
 801701a:	942e      	str	r4, [sp, #184]	@ 0xb8
 801701c:	942f      	str	r4, [sp, #188]	@ 0xbc
 801701e:	9430      	str	r4, [sp, #192]	@ 0xc0
 8017020:	9431      	str	r4, [sp, #196]	@ 0xc4
 8017022:	9432      	str	r4, [sp, #200]	@ 0xc8
 8017024:	9433      	str	r4, [sp, #204]	@ 0xcc
 8017026:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 801702a:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 801702e:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 8017032:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 8017036:	eef0 9a49 	vmov.f32	s19, s18
 801703a:	eeb0 8a49 	vmov.f32	s16, s18
 801703e:	eef0 8a49 	vmov.f32	s17, s18
 8017042:	4644      	mov	r4, r8
 8017044:	46c1      	mov	r9, r8
 8017046:	af08      	add	r7, sp, #32
 8017048:	f04f 0a01 	mov.w	sl, #1
 801704c:	9b06      	ldr	r3, [sp, #24]
 801704e:	454b      	cmp	r3, r9
 8017050:	f000 80cc 	beq.w	80171ec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 8017054:	f109 0301 	add.w	r3, r9, #1
 8017058:	9305      	str	r3, [sp, #20]
 801705a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 801705e:	2b06      	cmp	r3, #6
 8017060:	d839      	bhi.n	80170d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8017062:	e8df f003 	tbb	[pc, r3]
 8017066:	3b04      	.short	0x3b04
 8017068:	817c6f60 	.word	0x817c6f60
 801706c:	a0          	.byte	0xa0
 801706d:	00          	.byte	0x00
 801706e:	45c1      	cmp	r9, r8
 8017070:	d92b      	bls.n	80170ca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 8017072:	eef0 0a49 	vmov.f32	s1, s18
 8017076:	eeb0 0a69 	vmov.f32	s0, s19
 801707a:	4638      	mov	r0, r7
 801707c:	f7ff fdde 	bl	8016c3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8017080:	4638      	mov	r0, r7
 8017082:	f7ff fe67 	bl	8016d54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8017086:	4681      	mov	r9, r0
 8017088:	b9f8      	cbnz	r0, 80170ca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 801708a:	eef0 0a49 	vmov.f32	s1, s18
 801708e:	eeb0 0a69 	vmov.f32	s0, s19
 8017092:	4638      	mov	r0, r7
 8017094:	f7ff fe8d 	bl	8016db2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 8017098:	4628      	mov	r0, r5
 801709a:	e9cd 9702 	strd	r9, r7, [sp, #8]
 801709e:	e9cd b600 	strd	fp, r6, [sp]
 80170a2:	4623      	mov	r3, r4
 80170a4:	9a05      	ldr	r2, [sp, #20]
 80170a6:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 80170aa:	4641      	mov	r1, r8
 80170ac:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 80170b0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 80170b4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 80170b8:	f7ff feae 	bl	8016e18 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80170bc:	eef0 0a49 	vmov.f32	s1, s18
 80170c0:	eeb0 0a69 	vmov.f32	s0, s19
 80170c4:	4638      	mov	r0, r7
 80170c6:	f7ff fe74 	bl	8016db2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 80170ca:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80170ce:	eeb0 8a49 	vmov.f32	s16, s18
 80170d2:	eef0 8a69 	vmov.f32	s17, s19
 80170d6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80170da:	e7b7      	b.n	801704c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 80170dc:	45c1      	cmp	r9, r8
 80170de:	d90d      	bls.n	80170fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 80170e0:	4638      	mov	r0, r7
 80170e2:	f7ff fe37 	bl	8016d54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80170e6:	b948      	cbnz	r0, 80170fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 80170e8:	e9cd a702 	strd	sl, r7, [sp, #8]
 80170ec:	e9cd b600 	strd	fp, r6, [sp]
 80170f0:	4623      	mov	r3, r4
 80170f2:	464a      	mov	r2, r9
 80170f4:	4641      	mov	r1, r8
 80170f6:	4628      	mov	r0, r5
 80170f8:	f7ff fe8e 	bl	8016e18 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80170fc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8017100:	edd3 8a00 	vldr	s17, [r3]
 8017104:	ed93 8a01 	vldr	s16, [r3, #4]
 8017108:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 801710c:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 8017110:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8017114:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 8017118:	3402      	adds	r4, #2
 801711a:	46c8      	mov	r8, r9
 801711c:	eeb0 9a48 	vmov.f32	s18, s16
 8017120:	eef0 9a68 	vmov.f32	s19, s17
 8017124:	e7d7      	b.n	80170d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8017126:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 801712a:	edd3 8a00 	vldr	s17, [r3]
 801712e:	ed93 8a01 	vldr	s16, [r3, #4]
 8017132:	eeb0 0a68 	vmov.f32	s0, s17
 8017136:	eef0 0a48 	vmov.f32	s1, s16
 801713a:	4638      	mov	r0, r7
 801713c:	f7ff fd7e 	bl	8016c3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8017140:	3402      	adds	r4, #2
 8017142:	e7c8      	b.n	80170d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8017144:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8017148:	edd3 8a00 	vldr	s17, [r3]
 801714c:	eef0 0a48 	vmov.f32	s1, s16
 8017150:	eeb0 0a68 	vmov.f32	s0, s17
 8017154:	4638      	mov	r0, r7
 8017156:	f7ff fd71 	bl	8016c3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 801715a:	3401      	adds	r4, #1
 801715c:	e7bb      	b.n	80170d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801715e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8017162:	ed93 8a00 	vldr	s16, [r3]
 8017166:	e7f1      	b.n	801714c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 8017168:	00a3      	lsls	r3, r4, #2
 801716a:	f103 0208 	add.w	r2, r3, #8
 801716e:	f103 090c 	add.w	r9, r3, #12
 8017172:	4432      	add	r2, r6
 8017174:	4433      	add	r3, r6
 8017176:	44b1      	add	r9, r6
 8017178:	ed92 2a00 	vldr	s4, [r2]
 801717c:	edd9 2a00 	vldr	s5, [r9]
 8017180:	edd3 1a01 	vldr	s3, [r3, #4]
 8017184:	ed93 1a00 	vldr	s2, [r3]
 8017188:	9207      	str	r2, [sp, #28]
 801718a:	eef0 0a48 	vmov.f32	s1, s16
 801718e:	eeb0 0a68 	vmov.f32	s0, s17
 8017192:	4638      	mov	r0, r7
 8017194:	f7ff fabc 	bl	8016710 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8017198:	9a07      	ldr	r2, [sp, #28]
 801719a:	ed99 8a00 	vldr	s16, [r9]
 801719e:	edd2 8a00 	vldr	s17, [r2]
 80171a2:	3404      	adds	r4, #4
 80171a4:	e797      	b.n	80170d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80171a6:	00a3      	lsls	r3, r4, #2
 80171a8:	f103 0210 	add.w	r2, r3, #16
 80171ac:	f103 0914 	add.w	r9, r3, #20
 80171b0:	4432      	add	r2, r6
 80171b2:	4433      	add	r3, r6
 80171b4:	44b1      	add	r9, r6
 80171b6:	ed92 3a00 	vldr	s6, [r2]
 80171ba:	edd9 3a00 	vldr	s7, [r9]
 80171be:	edd3 2a03 	vldr	s5, [r3, #12]
 80171c2:	ed93 2a02 	vldr	s4, [r3, #8]
 80171c6:	edd3 1a01 	vldr	s3, [r3, #4]
 80171ca:	ed93 1a00 	vldr	s2, [r3]
 80171ce:	9207      	str	r2, [sp, #28]
 80171d0:	eef0 0a48 	vmov.f32	s1, s16
 80171d4:	eeb0 0a68 	vmov.f32	s0, s17
 80171d8:	4638      	mov	r0, r7
 80171da:	f7ff fab8 	bl	801674e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 80171de:	9a07      	ldr	r2, [sp, #28]
 80171e0:	ed99 8a00 	vldr	s16, [r9]
 80171e4:	edd2 8a00 	vldr	s17, [r2]
 80171e8:	3406      	adds	r4, #6
 80171ea:	e774      	b.n	80170d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80171ec:	9b06      	ldr	r3, [sp, #24]
 80171ee:	4543      	cmp	r3, r8
 80171f0:	af08      	add	r7, sp, #32
 80171f2:	d90f      	bls.n	8017214 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80171f4:	4638      	mov	r0, r7
 80171f6:	f7ff fdad 	bl	8016d54 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80171fa:	b958      	cbnz	r0, 8017214 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80171fc:	2301      	movs	r3, #1
 80171fe:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8017202:	9703      	str	r7, [sp, #12]
 8017204:	f8cd b000 	str.w	fp, [sp]
 8017208:	4623      	mov	r3, r4
 801720a:	9a06      	ldr	r2, [sp, #24]
 801720c:	4641      	mov	r1, r8
 801720e:	4628      	mov	r0, r5
 8017210:	f7ff fe02 	bl	8016e18 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8017214:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 8017218:	4638      	mov	r0, r7
 801721a:	f015 fc1d 	bl	802ca58 <_ZN8touchgfx6Canvas6renderEh>
 801721e:	4604      	mov	r4, r0
 8017220:	4638      	mov	r0, r7
 8017222:	f7ff fe99 	bl	8016f58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 8017226:	4620      	mov	r0, r4
 8017228:	b035      	add	sp, #212	@ 0xd4
 801722a:	ecbd 8b04 	vpop	{d8-d9}
 801722e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017232:	2401      	movs	r4, #1
 8017234:	e7f7      	b.n	8017226 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 8017236:	bf00      	nop
 8017238:	00000000 	.word	0x00000000
 801723c:	08032198 	.word	0x08032198

08017240 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 8017240:	b510      	push	{r4, lr}
 8017242:	4604      	mov	r4, r0
 8017244:	f7ff fe88 	bl	8016f58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 8017248:	4620      	mov	r0, r4
 801724a:	21b0      	movs	r1, #176	@ 0xb0
 801724c:	f015 ffd3 	bl	802d1f6 <_ZdlPvj>
 8017250:	4620      	mov	r0, r4
 8017252:	bd10      	pop	{r4, pc}

08017254 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 8017254:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017258:	ed2d 8b06 	vpush	{d8-d10}
 801725c:	b0aa      	sub	sp, #168	@ 0xa8
 801725e:	4698      	mov	r8, r3
 8017260:	23ff      	movs	r3, #255	@ 0xff
 8017262:	4607      	mov	r7, r0
 8017264:	9300      	str	r3, [sp, #0]
 8017266:	4689      	mov	r9, r1
 8017268:	4692      	mov	sl, r2
 801726a:	6981      	ldr	r1, [r0, #24]
 801726c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 801726e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 8017478 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8017272:	1d02      	adds	r2, r0, #4
 8017274:	a80d      	add	r0, sp, #52	@ 0x34
 8017276:	f015 fb5b 	bl	802c930 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 801727a:	7f3b      	ldrb	r3, [r7, #28]
 801727c:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 8017478 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8017280:	1e5a      	subs	r2, r3, #1
 8017282:	4253      	negs	r3, r2
 8017284:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 8017288:	4153      	adcs	r3, r2
 801728a:	eeb0 0a60 	vmov.f32	s0, s1
 801728e:	4628      	mov	r0, r5
 8017290:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 8017294:	f005 fb0d 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017298:	44ca      	add	sl, r9
 801729a:	eeb0 9a40 	vmov.f32	s18, s0
 801729e:	eef0 9a60 	vmov.f32	s19, s1
 80172a2:	eef0 8a48 	vmov.f32	s17, s16
 80172a6:	2400      	movs	r4, #0
 80172a8:	45ca      	cmp	sl, r9
 80172aa:	f000 80cd 	beq.w	8017448 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 80172ae:	f819 3b01 	ldrb.w	r3, [r9], #1
 80172b2:	2b06      	cmp	r3, #6
 80172b4:	d8f8      	bhi.n	80172a8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80172b6:	e8df f003 	tbb	[pc, r3]
 80172ba:	0804      	.short	0x0804
 80172bc:	58533f2a 	.word	0x58533f2a
 80172c0:	8a          	.byte	0x8a
 80172c1:	00          	.byte	0x00
 80172c2:	a80d      	add	r0, sp, #52	@ 0x34
 80172c4:	f015 fba6 	bl	802ca14 <_ZN8touchgfx6Canvas5closeEv>
 80172c8:	e7ee      	b.n	80172a8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80172ca:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80172ce:	edd3 8a00 	vldr	s17, [r3]
 80172d2:	ed93 8a01 	vldr	s16, [r3, #4]
 80172d6:	eeb0 0a68 	vmov.f32	s0, s17
 80172da:	eef0 0a48 	vmov.f32	s1, s16
 80172de:	4628      	mov	r0, r5
 80172e0:	f005 fae7 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80172e4:	eef0 7a60 	vmov.f32	s15, s1
 80172e8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80172ec:	a80d      	add	r0, sp, #52	@ 0x34
 80172ee:	ee17 2a90 	vmov	r2, s15
 80172f2:	eef0 7a40 	vmov.f32	s15, s0
 80172f6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80172fa:	eeb0 9a40 	vmov.f32	s18, s0
 80172fe:	ee17 1a90 	vmov	r1, s15
 8017302:	eef0 9a60 	vmov.f32	s19, s1
 8017306:	f015 fc5f 	bl	802cbc8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801730a:	3402      	adds	r4, #2
 801730c:	e7cc      	b.n	80172a8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801730e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8017312:	edd3 8a00 	vldr	s17, [r3]
 8017316:	ed93 8a01 	vldr	s16, [r3, #4]
 801731a:	eeb0 0a68 	vmov.f32	s0, s17
 801731e:	eef0 0a48 	vmov.f32	s1, s16
 8017322:	4628      	mov	r0, r5
 8017324:	f005 fac5 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017328:	a80d      	add	r0, sp, #52	@ 0x34
 801732a:	eeb0 9a40 	vmov.f32	s18, s0
 801732e:	eef0 9a60 	vmov.f32	s19, s1
 8017332:	f7ff fe01 	bl	8016f38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8017336:	e7e8      	b.n	801730a <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 8017338:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 801733c:	edd3 8a00 	vldr	s17, [r3]
 8017340:	eef0 0a48 	vmov.f32	s1, s16
 8017344:	eeb0 0a68 	vmov.f32	s0, s17
 8017348:	4628      	mov	r0, r5
 801734a:	f005 fab2 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801734e:	a80d      	add	r0, sp, #52	@ 0x34
 8017350:	eeb0 9a40 	vmov.f32	s18, s0
 8017354:	eef0 9a60 	vmov.f32	s19, s1
 8017358:	3401      	adds	r4, #1
 801735a:	f7ff fded 	bl	8016f38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 801735e:	e7a3      	b.n	80172a8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8017360:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8017364:	ed93 8a00 	vldr	s16, [r3]
 8017368:	e7ea      	b.n	8017340 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 801736a:	1ca3      	adds	r3, r4, #2
 801736c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8017370:	ed53 0a01 	vldr	s1, [r3, #-4]
 8017374:	ed13 0a02 	vldr	s0, [r3, #-8]
 8017378:	edd3 8a00 	vldr	s17, [r3]
 801737c:	ed93 8a01 	vldr	s16, [r3, #4]
 8017380:	4628      	mov	r0, r5
 8017382:	f005 fa96 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017386:	4628      	mov	r0, r5
 8017388:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 801738c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8017390:	eeb0 0a68 	vmov.f32	s0, s17
 8017394:	eef0 0a48 	vmov.f32	s1, s16
 8017398:	f005 fa8b 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801739c:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 80173a0:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 80173a4:	eef0 2a60 	vmov.f32	s5, s1
 80173a8:	eeb0 2a40 	vmov.f32	s4, s0
 80173ac:	eeb0 aa40 	vmov.f32	s20, s0
 80173b0:	eef0 aa60 	vmov.f32	s21, s1
 80173b4:	eeb0 0a49 	vmov.f32	s0, s18
 80173b8:	eef0 0a69 	vmov.f32	s1, s19
 80173bc:	a80d      	add	r0, sp, #52	@ 0x34
 80173be:	f7ff f9a7 	bl	8016710 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 80173c2:	3404      	adds	r4, #4
 80173c4:	eef0 9a6a 	vmov.f32	s19, s21
 80173c8:	eeb0 9a4a 	vmov.f32	s18, s20
 80173cc:	e76c      	b.n	80172a8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80173ce:	1d26      	adds	r6, r4, #4
 80173d0:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 80173d4:	ed56 0a03 	vldr	s1, [r6, #-12]
 80173d8:	ed16 0a04 	vldr	s0, [r6, #-16]
 80173dc:	edd6 8a00 	vldr	s17, [r6]
 80173e0:	ed96 8a01 	vldr	s16, [r6, #4]
 80173e4:	4628      	mov	r0, r5
 80173e6:	f005 fa64 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80173ea:	4628      	mov	r0, r5
 80173ec:	ed8d 0a07 	vstr	s0, [sp, #28]
 80173f0:	edcd 0a08 	vstr	s1, [sp, #32]
 80173f4:	ed16 0a02 	vldr	s0, [r6, #-8]
 80173f8:	ed56 0a01 	vldr	s1, [r6, #-4]
 80173fc:	f005 fa59 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017400:	4628      	mov	r0, r5
 8017402:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8017406:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 801740a:	eeb0 0a68 	vmov.f32	s0, s17
 801740e:	eef0 0a48 	vmov.f32	s1, s16
 8017412:	f005 fa4e 	bl	801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017416:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 801741a:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 801741e:	eddd 1a08 	vldr	s3, [sp, #32]
 8017422:	ed9d 1a07 	vldr	s2, [sp, #28]
 8017426:	eef0 3a60 	vmov.f32	s7, s1
 801742a:	eeb0 3a40 	vmov.f32	s6, s0
 801742e:	eeb0 aa40 	vmov.f32	s20, s0
 8017432:	eef0 aa60 	vmov.f32	s21, s1
 8017436:	eeb0 0a49 	vmov.f32	s0, s18
 801743a:	eef0 0a69 	vmov.f32	s1, s19
 801743e:	a80d      	add	r0, sp, #52	@ 0x34
 8017440:	f7ff f985 	bl	801674e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8017444:	3406      	adds	r4, #6
 8017446:	e7bd      	b.n	80173c4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 8017448:	7f7b      	ldrb	r3, [r7, #29]
 801744a:	7fb9      	ldrb	r1, [r7, #30]
 801744c:	4359      	muls	r1, r3
 801744e:	1c4b      	adds	r3, r1, #1
 8017450:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017454:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017458:	a80d      	add	r0, sp, #52	@ 0x34
 801745a:	f015 fafd 	bl	802ca58 <_ZN8touchgfx6Canvas6renderEh>
 801745e:	4b07      	ldr	r3, [pc, #28]	@ (801747c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 8017460:	930d      	str	r3, [sp, #52]	@ 0x34
 8017462:	4604      	mov	r4, r0
 8017464:	a812      	add	r0, sp, #72	@ 0x48
 8017466:	f001 f89b 	bl	80185a0 <_ZN8touchgfx7OutlineD1Ev>
 801746a:	4620      	mov	r0, r4
 801746c:	b02a      	add	sp, #168	@ 0xa8
 801746e:	ecbd 8b06 	vpop	{d8-d10}
 8017472:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017476:	bf00      	nop
 8017478:	00000000 	.word	0x00000000
 801747c:	080328f4 	.word	0x080328f4

08017480 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 8017480:	b410      	push	{r4}
 8017482:	7f04      	ldrb	r4, [r0, #28]
 8017484:	b11c      	cbz	r4, 801748e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 8017486:	f85d 4b04 	ldr.w	r4, [sp], #4
 801748a:	f7ff bee3 	b.w	8017254 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 801748e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017492:	f7ff bd6d 	b.w	8016f70 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

08017498 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 8017498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801749c:	4691      	mov	r9, r2
 801749e:	4602      	mov	r2, r0
 80174a0:	4605      	mov	r5, r0
 80174a2:	f852 0f26 	ldr.w	r0, [r2, #38]!
 80174a6:	b085      	sub	sp, #20
 80174a8:	4688      	mov	r8, r1
 80174aa:	6851      	ldr	r1, [r2, #4]
 80174ac:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 80174b0:	469a      	mov	sl, r3
 80174b2:	ab02      	add	r3, sp, #8
 80174b4:	c303      	stmia	r3!, {r0, r1}
 80174b6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80174ba:	2b00      	cmp	r3, #0
 80174bc:	af02      	add	r7, sp, #8
 80174be:	dd08      	ble.n	80174d2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 80174c0:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 80174c4:	2c00      	cmp	r4, #0
 80174c6:	dd04      	ble.n	80174d2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 80174c8:	4a2e      	ldr	r2, [pc, #184]	@ (8017584 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 80174ca:	7812      	ldrb	r2, [r2, #0]
 80174cc:	b122      	cbz	r2, 80174d8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 80174ce:	2a01      	cmp	r2, #1
 80174d0:	d02d      	beq.n	801752e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 80174d2:	b005      	add	sp, #20
 80174d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174d8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80174dc:	441c      	add	r4, r3
 80174de:	b2a4      	uxth	r4, r4
 80174e0:	b226      	sxth	r6, r4
 80174e2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80174e6:	42b3      	cmp	r3, r6
 80174e8:	daf3      	bge.n	80174d2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 80174ea:	e9cd b700 	strd	fp, r7, [sp]
 80174ee:	4653      	mov	r3, sl
 80174f0:	464a      	mov	r2, r9
 80174f2:	4641      	mov	r1, r8
 80174f4:	4628      	mov	r0, r5
 80174f6:	f7ff ffc3 	bl	8017480 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 80174fa:	b940      	cbnz	r0, 801750e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 80174fc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017500:	2b01      	cmp	r3, #1
 8017502:	d004      	beq.n	801750e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 8017504:	3301      	adds	r3, #1
 8017506:	105b      	asrs	r3, r3, #1
 8017508:	f8ad 300e 	strh.w	r3, [sp, #14]
 801750c:	e7ed      	b.n	80174ea <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 801750e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8017512:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017516:	4413      	add	r3, r2
 8017518:	b29b      	uxth	r3, r3
 801751a:	441a      	add	r2, r3
 801751c:	b212      	sxth	r2, r2
 801751e:	4296      	cmp	r6, r2
 8017520:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017524:	dadd      	bge.n	80174e2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 8017526:	1ae3      	subs	r3, r4, r3
 8017528:	f8ad 300e 	strh.w	r3, [sp, #14]
 801752c:	e7d9      	b.n	80174e2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 801752e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 8017532:	441c      	add	r4, r3
 8017534:	b2a4      	uxth	r4, r4
 8017536:	b226      	sxth	r6, r4
 8017538:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801753c:	42b3      	cmp	r3, r6
 801753e:	dac8      	bge.n	80174d2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8017540:	e9cd b700 	strd	fp, r7, [sp]
 8017544:	4653      	mov	r3, sl
 8017546:	464a      	mov	r2, r9
 8017548:	4641      	mov	r1, r8
 801754a:	4628      	mov	r0, r5
 801754c:	f7ff ff98 	bl	8017480 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8017550:	b940      	cbnz	r0, 8017564 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 8017552:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017556:	2b01      	cmp	r3, #1
 8017558:	d004      	beq.n	8017564 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 801755a:	3301      	adds	r3, #1
 801755c:	105b      	asrs	r3, r3, #1
 801755e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8017562:	e7ed      	b.n	8017540 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 8017564:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8017568:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801756c:	4413      	add	r3, r2
 801756e:	b29b      	uxth	r3, r3
 8017570:	441a      	add	r2, r3
 8017572:	b212      	sxth	r2, r2
 8017574:	4296      	cmp	r6, r2
 8017576:	f8ad 3008 	strh.w	r3, [sp, #8]
 801757a:	dadd      	bge.n	8017538 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 801757c:	1ae3      	subs	r3, r4, r3
 801757e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8017582:	e7d9      	b.n	8017538 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 8017584:	2001387c 	.word	0x2001387c

08017588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8017588:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801758a:	6803      	ldr	r3, [r0, #0]
 801758c:	460d      	mov	r5, r1
 801758e:	4604      	mov	r4, r0
 8017590:	4601      	mov	r1, r0
 8017592:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8017594:	a802      	add	r0, sp, #8
 8017596:	4798      	blx	r3
 8017598:	6828      	ldr	r0, [r5, #0]
 801759a:	6869      	ldr	r1, [r5, #4]
 801759c:	466b      	mov	r3, sp
 801759e:	c303      	stmia	r3!, {r0, r1}
 80175a0:	4668      	mov	r0, sp
 80175a2:	4619      	mov	r1, r3
 80175a4:	f7fd fb98 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 80175a8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80175aa:	b188      	cbz	r0, 80175d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80175ac:	6803      	ldr	r3, [r0, #0]
 80175ae:	1d21      	adds	r1, r4, #4
 80175b0:	68db      	ldr	r3, [r3, #12]
 80175b2:	4798      	blx	r3
 80175b4:	b160      	cbz	r0, 80175d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80175b6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80175ba:	2b00      	cmp	r3, #0
 80175bc:	dd08      	ble.n	80175d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80175be:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80175c2:	2d00      	cmp	r5, #0
 80175c4:	dd04      	ble.n	80175d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80175c6:	4a2b      	ldr	r2, [pc, #172]	@ (8017674 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80175c8:	7812      	ldrb	r2, [r2, #0]
 80175ca:	b11a      	cbz	r2, 80175d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80175cc:	2a01      	cmp	r2, #1
 80175ce:	d029      	beq.n	8017624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80175d0:	b004      	add	sp, #16
 80175d2:	bd70      	pop	{r4, r5, r6, pc}
 80175d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80175d8:	441d      	add	r5, r3
 80175da:	b2ad      	uxth	r5, r5
 80175dc:	b22e      	sxth	r6, r5
 80175de:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80175e2:	42b3      	cmp	r3, r6
 80175e4:	daf4      	bge.n	80175d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80175e6:	6823      	ldr	r3, [r4, #0]
 80175e8:	4669      	mov	r1, sp
 80175ea:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80175ec:	4620      	mov	r0, r4
 80175ee:	4798      	blx	r3
 80175f0:	b940      	cbnz	r0, 8017604 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80175f2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80175f6:	2b01      	cmp	r3, #1
 80175f8:	d004      	beq.n	8017604 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80175fa:	3301      	adds	r3, #1
 80175fc:	105b      	asrs	r3, r3, #1
 80175fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017602:	e7f0      	b.n	80175e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8017604:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8017608:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801760c:	4413      	add	r3, r2
 801760e:	b29b      	uxth	r3, r3
 8017610:	441a      	add	r2, r3
 8017612:	b212      	sxth	r2, r2
 8017614:	4296      	cmp	r6, r2
 8017616:	f8ad 3002 	strh.w	r3, [sp, #2]
 801761a:	dae0      	bge.n	80175de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 801761c:	1aeb      	subs	r3, r5, r3
 801761e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017622:	e7dc      	b.n	80175de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8017624:	f8bd 5000 	ldrh.w	r5, [sp]
 8017628:	441d      	add	r5, r3
 801762a:	b2ad      	uxth	r5, r5
 801762c:	b22e      	sxth	r6, r5
 801762e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8017632:	42b3      	cmp	r3, r6
 8017634:	dacc      	bge.n	80175d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017636:	6823      	ldr	r3, [r4, #0]
 8017638:	4669      	mov	r1, sp
 801763a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801763c:	4620      	mov	r0, r4
 801763e:	4798      	blx	r3
 8017640:	b940      	cbnz	r0, 8017654 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8017642:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017646:	2b01      	cmp	r3, #1
 8017648:	d004      	beq.n	8017654 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801764a:	3301      	adds	r3, #1
 801764c:	105b      	asrs	r3, r3, #1
 801764e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8017652:	e7f0      	b.n	8017636 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8017654:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8017658:	f8bd 3000 	ldrh.w	r3, [sp]
 801765c:	4413      	add	r3, r2
 801765e:	b29b      	uxth	r3, r3
 8017660:	441a      	add	r2, r3
 8017662:	b212      	sxth	r2, r2
 8017664:	4296      	cmp	r6, r2
 8017666:	f8ad 3000 	strh.w	r3, [sp]
 801766a:	dae0      	bge.n	801762e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 801766c:	1aeb      	subs	r3, r5, r3
 801766e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8017672:	e7dc      	b.n	801762e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8017674:	2001387c 	.word	0x2001387c

08017678 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8017678:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801767a:	6803      	ldr	r3, [r0, #0]
 801767c:	4604      	mov	r4, r0
 801767e:	4601      	mov	r1, r0
 8017680:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8017682:	4668      	mov	r0, sp
 8017684:	4798      	blx	r3
 8017686:	2100      	movs	r1, #0
 8017688:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801768c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8017690:	9102      	str	r1, [sp, #8]
 8017692:	4668      	mov	r0, sp
 8017694:	a902      	add	r1, sp, #8
 8017696:	f8ad 200c 	strh.w	r2, [sp, #12]
 801769a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801769e:	f7fd fb1b 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 80176a2:	6823      	ldr	r3, [r4, #0]
 80176a4:	4669      	mov	r1, sp
 80176a6:	691b      	ldr	r3, [r3, #16]
 80176a8:	4620      	mov	r0, r4
 80176aa:	4798      	blx	r3
 80176ac:	b004      	add	sp, #16
 80176ae:	bd10      	pop	{r4, pc}

080176b0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80176b0:	2101      	movs	r1, #1
 80176b2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 80176b6:	490b      	ldr	r1, [pc, #44]	@ (80176e4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80176b8:	6001      	str	r1, [r0, #0]
 80176ba:	2200      	movs	r2, #0
 80176bc:	21ff      	movs	r1, #255	@ 0xff
 80176be:	8082      	strh	r2, [r0, #4]
 80176c0:	80c2      	strh	r2, [r0, #6]
 80176c2:	8102      	strh	r2, [r0, #8]
 80176c4:	8142      	strh	r2, [r0, #10]
 80176c6:	8182      	strh	r2, [r0, #12]
 80176c8:	81c2      	strh	r2, [r0, #14]
 80176ca:	8202      	strh	r2, [r0, #16]
 80176cc:	8242      	strh	r2, [r0, #18]
 80176ce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80176d2:	61c2      	str	r2, [r0, #28]
 80176d4:	8402      	strh	r2, [r0, #32]
 80176d6:	8442      	strh	r2, [r0, #34]	@ 0x22
 80176d8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 80176dc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 80176e0:	6282      	str	r2, [r0, #40]	@ 0x28
 80176e2:	4770      	bx	lr
 80176e4:	080321f8 	.word	0x080321f8

080176e8 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80176e8:	b508      	push	{r3, lr}
 80176ea:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 80176ee:	b10b      	cbz	r3, 80176f4 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 80176f0:	f7ea f9e8 	bl	8001ac4 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80176f4:	bd08      	pop	{r3, pc}

080176f6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 80176f6:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80176fa:	4770      	bx	lr

080176fc <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 80176fc:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
 8017700:	4770      	bx	lr

08017702 <_ZN8touchgfx13ScalableImageD1Ev>:
 8017702:	4770      	bx	lr

08017704 <_ZN8touchgfx13ScalableImageD0Ev>:
 8017704:	b510      	push	{r4, lr}
 8017706:	212c      	movs	r1, #44	@ 0x2c
 8017708:	4604      	mov	r4, r0
 801770a:	f015 fd74 	bl	802d1f6 <_ZdlPvj>
 801770e:	4620      	mov	r0, r4
 8017710:	bd10      	pop	{r4, pc}

08017712 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8017712:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017714:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8017718:	2bff      	cmp	r3, #255	@ 0xff
 801771a:	b085      	sub	sp, #20
 801771c:	4604      	mov	r4, r0
 801771e:	460d      	mov	r5, r1
 8017720:	d128      	bne.n	8017774 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8017722:	f101 0626 	add.w	r6, r1, #38	@ 0x26
 8017726:	4631      	mov	r1, r6
 8017728:	4668      	mov	r0, sp
 801772a:	f006 fd4d 	bl	801e1c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801772e:	4630      	mov	r0, r6
 8017730:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 8017734:	f006 fce0 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017738:	4287      	cmp	r7, r0
 801773a:	d11b      	bne.n	8017774 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 801773c:	4630      	mov	r0, r6
 801773e:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8017742:	f006 fd0d 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017746:	4287      	cmp	r7, r0
 8017748:	d114      	bne.n	8017774 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 801774a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 801774e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017752:	2100      	movs	r1, #0
 8017754:	466b      	mov	r3, sp
 8017756:	9102      	str	r1, [sp, #8]
 8017758:	cb03      	ldmia	r3!, {r0, r1}
 801775a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 801775e:	6020      	str	r0, [r4, #0]
 8017760:	6061      	str	r1, [r4, #4]
 8017762:	4620      	mov	r0, r4
 8017764:	4619      	mov	r1, r3
 8017766:	f8ad 200c 	strh.w	r2, [sp, #12]
 801776a:	f7fd fab5 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801776e:	4620      	mov	r0, r4
 8017770:	b005      	add	sp, #20
 8017772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017774:	2300      	movs	r3, #0
 8017776:	8023      	strh	r3, [r4, #0]
 8017778:	8063      	strh	r3, [r4, #2]
 801777a:	80a3      	strh	r3, [r4, #4]
 801777c:	80e3      	strh	r3, [r4, #6]
 801777e:	e7f6      	b.n	801776e <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

08017780 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8017780:	b538      	push	{r3, r4, r5, lr}
 8017782:	2300      	movs	r3, #0
 8017784:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8017788:	8083      	strh	r3, [r0, #4]
 801778a:	80c3      	strh	r3, [r0, #6]
 801778c:	8103      	strh	r3, [r0, #8]
 801778e:	8143      	strh	r3, [r0, #10]
 8017790:	8183      	strh	r3, [r0, #12]
 8017792:	81c3      	strh	r3, [r0, #14]
 8017794:	8203      	strh	r3, [r0, #16]
 8017796:	8243      	strh	r3, [r0, #18]
 8017798:	61c3      	str	r3, [r0, #28]
 801779a:	8403      	strh	r3, [r0, #32]
 801779c:	8443      	strh	r3, [r0, #34]	@ 0x22
 801779e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 80177a2:	2501      	movs	r5, #1
 80177a4:	4b08      	ldr	r3, [pc, #32]	@ (80177c8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 80177a6:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
 80177aa:	6003      	str	r3, [r0, #0]
 80177ac:	880b      	ldrh	r3, [r1, #0]
 80177ae:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80177b0:	23ff      	movs	r3, #255	@ 0xff
 80177b2:	4604      	mov	r4, r0
 80177b4:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80177b8:	f000 fe7e 	bl	80184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80177bc:	4b03      	ldr	r3, [pc, #12]	@ (80177cc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 80177be:	6023      	str	r3, [r4, #0]
 80177c0:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
 80177c4:	4620      	mov	r0, r4
 80177c6:	bd38      	pop	{r3, r4, r5, pc}
 80177c8:	08032444 	.word	0x08032444
 80177cc:	08032270 	.word	0x08032270

080177d0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 80177d0:	4603      	mov	r3, r0
 80177d2:	3026      	adds	r0, #38	@ 0x26
 80177d4:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 80177d8:	b90b      	cbnz	r3, 80177de <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 80177da:	f005 b917 	b.w	801ca0c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80177de:	f005 b925 	b.w	801ca2c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

080177e4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80177e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177e8:	4604      	mov	r4, r0
 80177ea:	b0b3      	sub	sp, #204	@ 0xcc
 80177ec:	469b      	mov	fp, r3
 80177ee:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80177f2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80177f6:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 80177fa:	ab11      	add	r3, sp, #68	@ 0x44
 80177fc:	2500      	movs	r5, #0
 80177fe:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
 8017802:	4618      	mov	r0, r3
 8017804:	9206      	str	r2, [sp, #24]
 8017806:	9511      	str	r5, [sp, #68]	@ 0x44
 8017808:	9307      	str	r3, [sp, #28]
 801780a:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
 801780e:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
 8017812:	f7fd fa61 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8017816:	9b07      	ldr	r3, [sp, #28]
 8017818:	e893 0003 	ldmia.w	r3, {r0, r1}
 801781c:	ad13      	add	r5, sp, #76	@ 0x4c
 801781e:	e885 0003 	stmia.w	r5, {r0, r1}
 8017822:	6821      	ldr	r1, [r4, #0]
 8017824:	4620      	mov	r0, r4
 8017826:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8017828:	4629      	mov	r1, r5
 801782a:	47b0      	blx	r6
 801782c:	4621      	mov	r1, r4
 801782e:	a815      	add	r0, sp, #84	@ 0x54
 8017830:	f004 fc9e 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017834:	a815      	add	r0, sp, #84	@ 0x54
 8017836:	f003 f899 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801783a:	9b07      	ldr	r3, [sp, #28]
 801783c:	1d26      	adds	r6, r4, #4
 801783e:	4618      	mov	r0, r3
 8017840:	4631      	mov	r1, r6
 8017842:	f003 f8d7 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017846:	4628      	mov	r0, r5
 8017848:	f104 0526 	add.w	r5, r4, #38	@ 0x26
 801784c:	f003 f88e 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017850:	4628      	mov	r0, r5
 8017852:	f006 fd43 	bl	801e2dc <_ZNK8touchgfx6Bitmap7getDataEv>
 8017856:	9007      	str	r0, [sp, #28]
 8017858:	2800      	cmp	r0, #0
 801785a:	f000 80ce 	beq.w	80179fa <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 801785e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8017862:	920c      	str	r2, [sp, #48]	@ 0x30
 8017864:	f8da 2000 	ldr.w	r2, [sl]
 8017868:	f8db 1000 	ldr.w	r1, [fp]
 801786c:	920d      	str	r2, [sp, #52]	@ 0x34
 801786e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8017872:	9109      	str	r1, [sp, #36]	@ 0x24
 8017874:	920e      	str	r2, [sp, #56]	@ 0x38
 8017876:	f8db 1004 	ldr.w	r1, [fp, #4]
 801787a:	f8da 2008 	ldr.w	r2, [sl, #8]
 801787e:	910a      	str	r1, [sp, #40]	@ 0x28
 8017880:	920f      	str	r2, [sp, #60]	@ 0x3c
 8017882:	f8db 1008 	ldr.w	r1, [fp, #8]
 8017886:	f8da 200c 	ldr.w	r2, [sl, #12]
 801788a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801788c:	9210      	str	r2, [sp, #64]	@ 0x40
 801788e:	a90d      	add	r1, sp, #52	@ 0x34
 8017890:	4632      	mov	r2, r6
 8017892:	a809      	add	r0, sp, #36	@ 0x24
 8017894:	f003 f892 	bl	801a9bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8017898:	4632      	mov	r2, r6
 801789a:	a90e      	add	r1, sp, #56	@ 0x38
 801789c:	a80a      	add	r0, sp, #40	@ 0x28
 801789e:	f003 f88d 	bl	801a9bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80178a2:	4632      	mov	r2, r6
 80178a4:	a90f      	add	r1, sp, #60	@ 0x3c
 80178a6:	a80b      	add	r0, sp, #44	@ 0x2c
 80178a8:	f003 f888 	bl	801a9bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80178ac:	4632      	mov	r2, r6
 80178ae:	a910      	add	r1, sp, #64	@ 0x40
 80178b0:	a80c      	add	r0, sp, #48	@ 0x30
 80178b2:	f003 f883 	bl	801a9bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80178b6:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 80178ba:	ed97 3a00 	vldr	s6, [r7]
 80178be:	edd7 4a01 	vldr	s9, [r7, #4]
 80178c2:	ed99 2a00 	vldr	s4, [r9]
 80178c6:	edd8 2a00 	vldr	s5, [r8]
 80178ca:	edd9 3a01 	vldr	s7, [r9, #4]
 80178ce:	ed98 4a01 	vldr	s8, [r8, #4]
 80178d2:	ed99 5a02 	vldr	s10, [r9, #8]
 80178d6:	edd8 5a02 	vldr	s11, [r8, #8]
 80178da:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80178de:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80178e2:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
 80178e6:	eef0 6a67 	vmov.f32	s13, s15
 80178ea:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
 80178ee:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
 80178f2:	eeb0 7a67 	vmov.f32	s14, s15
 80178f6:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
 80178fa:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
 80178fe:	eeb0 6a67 	vmov.f32	s12, s15
 8017902:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8017906:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 801790a:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
 801790e:	ee16 6a10 	vmov	r6, s12
 8017912:	eeb0 6a67 	vmov.f32	s12, s15
 8017916:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801791a:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 801791e:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
 8017922:	ee16 0a10 	vmov	r0, s12
 8017926:	eeb0 6a67 	vmov.f32	s12, s15
 801792a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801792e:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
 8017932:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
 8017936:	ee16 1a10 	vmov	r1, s12
 801793a:	eeb0 6a67 	vmov.f32	s12, s15
 801793e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8017942:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8017946:	ee16 2a10 	vmov	r2, s12
 801794a:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 801794e:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8017952:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8017956:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 801795a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801795e:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
 8017962:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 8017966:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
 801796a:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801796e:	9624      	str	r6, [sp, #144]	@ 0x90
 8017970:	68ff      	ldr	r7, [r7, #12]
 8017972:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
 8017976:	922d      	str	r2, [sp, #180]	@ 0xb4
 8017978:	4a21      	ldr	r2, [pc, #132]	@ (8017a00 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 801797a:	9b06      	ldr	r3, [sp, #24]
 801797c:	8812      	ldrh	r2, [r2, #0]
 801797e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8017980:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8017984:	9b07      	ldr	r3, [sp, #28]
 8017986:	9218      	str	r2, [sp, #96]	@ 0x60
 8017988:	4628      	mov	r0, r5
 801798a:	9319      	str	r3, [sp, #100]	@ 0x64
 801798c:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
 8017990:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
 8017994:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
 8017998:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
 801799c:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
 80179a0:	9731      	str	r7, [sp, #196]	@ 0xc4
 80179a2:	f006 fccb 	bl	801e33c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80179a6:	901a      	str	r0, [sp, #104]	@ 0x68
 80179a8:	4628      	mov	r0, r5
 80179aa:	f006 fba5 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80179ae:	901b      	str	r0, [sp, #108]	@ 0x6c
 80179b0:	4628      	mov	r0, r5
 80179b2:	f006 fbd5 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80179b6:	901c      	str	r0, [sp, #112]	@ 0x70
 80179b8:	4628      	mov	r0, r5
 80179ba:	f006 fb9d 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80179be:	4b11      	ldr	r3, [pc, #68]	@ (8017a04 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 80179c0:	901d      	str	r0, [sp, #116]	@ 0x74
 80179c2:	681b      	ldr	r3, [r3, #0]
 80179c4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80179c8:	b10a      	cbz	r2, 80179ce <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 80179ca:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
 80179cc:	b905      	cbnz	r5, 80179d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 80179ce:	689d      	ldr	r5, [r3, #8]
 80179d0:	682b      	ldr	r3, [r5, #0]
 80179d2:	4620      	mov	r0, r4
 80179d4:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
 80179d6:	f7ff fefb 	bl	80177d0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 80179da:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80179de:	9304      	str	r3, [sp, #16]
 80179e0:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80179e4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80179e8:	ab13      	add	r3, sp, #76	@ 0x4c
 80179ea:	9301      	str	r3, [sp, #4]
 80179ec:	ab15      	add	r3, sp, #84	@ 0x54
 80179ee:	9300      	str	r3, [sp, #0]
 80179f0:	aa1e      	add	r2, sp, #120	@ 0x78
 80179f2:	ab19      	add	r3, sp, #100	@ 0x64
 80179f4:	a917      	add	r1, sp, #92	@ 0x5c
 80179f6:	4628      	mov	r0, r5
 80179f8:	47b0      	blx	r6
 80179fa:	b033      	add	sp, #204	@ 0xcc
 80179fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a00:	2001387e 	.word	0x2001387e
 8017a04:	20013884 	.word	0x20013884

08017a08 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8017a08:	b570      	push	{r4, r5, r6, lr}
 8017a0a:	ed2d 8b04 	vpush	{d8-d9}
 8017a0e:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 8017a12:	b098      	sub	sp, #96	@ 0x60
 8017a14:	4604      	mov	r4, r0
 8017a16:	460e      	mov	r6, r1
 8017a18:	2b00      	cmp	r3, #0
 8017a1a:	d065      	beq.n	8017ae8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 8017a1c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8017a20:	ed9f 8a38 	vldr	s16, [pc, #224]	@ 8017b04 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 8017a24:	ee09 3a10 	vmov	s18, r3
 8017a28:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8017a2c:	f100 0526 	add.w	r5, r0, #38	@ 0x26
 8017a30:	ee08 3a90 	vmov	s17, r3
 8017a34:	4628      	mov	r0, r5
 8017a36:	4b34      	ldr	r3, [pc, #208]	@ (8017b08 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8017a38:	930c      	str	r3, [sp, #48]	@ 0x30
 8017a3a:	930d      	str	r3, [sp, #52]	@ 0x34
 8017a3c:	930e      	str	r3, [sp, #56]	@ 0x38
 8017a3e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017a40:	f006 fb5a 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017a44:	ee07 0a90 	vmov	s15, r0
 8017a48:	4628      	mov	r0, r5
 8017a4a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 8017a4e:	f006 fb87 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017a52:	4b2e      	ldr	r3, [pc, #184]	@ (8017b0c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 8017a54:	781b      	ldrb	r3, [r3, #0]
 8017a56:	ee07 0a90 	vmov	s15, r0
 8017a5a:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8017a5e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8017a62:	2b01      	cmp	r3, #1
 8017a64:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017a68:	ee39 9a08 	vadd.f32	s18, s18, s16
 8017a6c:	ee78 8a88 	vadd.f32	s17, s17, s16
 8017a70:	eef0 7a48 	vmov.f32	s15, s16
 8017a74:	d13c      	bne.n	8017af0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 8017a76:	eef0 6a69 	vmov.f32	s13, s19
 8017a7a:	eeb0 6a47 	vmov.f32	s12, s14
 8017a7e:	eef0 5a47 	vmov.f32	s11, s14
 8017a82:	ee19 3a90 	vmov	r3, s19
 8017a86:	eeb0 7a48 	vmov.f32	s14, s16
 8017a8a:	eef0 9a48 	vmov.f32	s19, s16
 8017a8e:	9314      	str	r3, [sp, #80]	@ 0x50
 8017a90:	ab14      	add	r3, sp, #80	@ 0x50
 8017a92:	9303      	str	r3, [sp, #12]
 8017a94:	ab10      	add	r3, sp, #64	@ 0x40
 8017a96:	9302      	str	r3, [sp, #8]
 8017a98:	ab0c      	add	r3, sp, #48	@ 0x30
 8017a9a:	9301      	str	r3, [sp, #4]
 8017a9c:	ab08      	add	r3, sp, #32
 8017a9e:	9300      	str	r3, [sp, #0]
 8017aa0:	2200      	movs	r2, #0
 8017aa2:	ab04      	add	r3, sp, #16
 8017aa4:	4631      	mov	r1, r6
 8017aa6:	4620      	mov	r0, r4
 8017aa8:	edcd 7a04 	vstr	s15, [sp, #16]
 8017aac:	ed8d 9a05 	vstr	s18, [sp, #20]
 8017ab0:	ed8d 9a06 	vstr	s18, [sp, #24]
 8017ab4:	edcd 7a07 	vstr	s15, [sp, #28]
 8017ab8:	edcd 7a08 	vstr	s15, [sp, #32]
 8017abc:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 8017ac0:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
 8017ac4:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 8017ac8:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 8017acc:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
 8017ad0:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
 8017ad4:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
 8017ad8:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
 8017adc:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8017ae0:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 8017ae4:	f7ff fe7e 	bl	80177e4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8017ae8:	b018      	add	sp, #96	@ 0x60
 8017aea:	ecbd 8b04 	vpop	{d8-d9}
 8017aee:	bd70      	pop	{r4, r5, r6, pc}
 8017af0:	eef0 6a47 	vmov.f32	s13, s14
 8017af4:	eef0 5a69 	vmov.f32	s11, s19
 8017af8:	eeb0 6a48 	vmov.f32	s12, s16
 8017afc:	ee18 3a10 	vmov	r3, s16
 8017b00:	e7c5      	b.n	8017a8e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 8017b02:	bf00      	nop
 8017b04:	00000000 	.word	0x00000000
 8017b08:	42c80000 	.word	0x42c80000
 8017b0c:	2001387c 	.word	0x2001387c

08017b10 <_ZN8touchgfx8TextArea8setWidthEs>:
 8017b10:	b530      	push	{r4, r5, lr}
 8017b12:	b085      	sub	sp, #20
 8017b14:	6803      	ldr	r3, [r0, #0]
 8017b16:	8101      	strh	r1, [r0, #8]
 8017b18:	466d      	mov	r5, sp
 8017b1a:	4601      	mov	r1, r0
 8017b1c:	4604      	mov	r4, r0
 8017b1e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8017b22:	4628      	mov	r0, r5
 8017b24:	4798      	blx	r3
 8017b26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8017b2a:	343c      	adds	r4, #60	@ 0x3c
 8017b2c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8017b30:	b005      	add	sp, #20
 8017b32:	bd30      	pop	{r4, r5, pc}

08017b34 <_ZN8touchgfx8TextArea9setHeightEs>:
 8017b34:	b530      	push	{r4, r5, lr}
 8017b36:	b085      	sub	sp, #20
 8017b38:	6803      	ldr	r3, [r0, #0]
 8017b3a:	8141      	strh	r1, [r0, #10]
 8017b3c:	466d      	mov	r5, sp
 8017b3e:	4601      	mov	r1, r0
 8017b40:	4604      	mov	r4, r0
 8017b42:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8017b46:	4628      	mov	r0, r5
 8017b48:	4798      	blx	r3
 8017b4a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8017b4e:	343c      	adds	r4, #60	@ 0x3c
 8017b50:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8017b54:	b005      	add	sp, #20
 8017b56:	bd30      	pop	{r4, r5, pc}

08017b58 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8017b58:	2200      	movs	r2, #0
 8017b5a:	8002      	strh	r2, [r0, #0]
 8017b5c:	8042      	strh	r2, [r0, #2]
 8017b5e:	8082      	strh	r2, [r0, #4]
 8017b60:	80c2      	strh	r2, [r0, #6]
 8017b62:	4770      	bx	lr

08017b64 <_ZN8touchgfx8TextArea8setAlphaEh>:
 8017b64:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 8017b68:	4770      	bx	lr
	...

08017b6c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8017b6c:	b570      	push	{r4, r5, r6, lr}
 8017b6e:	6803      	ldr	r3, [r0, #0]
 8017b70:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8017b72:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
 8017b74:	4b09      	ldr	r3, [pc, #36]	@ (8017b9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 8017b76:	681b      	ldr	r3, [r3, #0]
 8017b78:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8017b7c:	4b08      	ldr	r3, [pc, #32]	@ (8017ba0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 8017b7e:	681b      	ldr	r3, [r3, #0]
 8017b80:	4604      	mov	r4, r0
 8017b82:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8017b86:	6803      	ldr	r3, [r0, #0]
 8017b88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017b8a:	460d      	mov	r5, r1
 8017b8c:	4798      	blx	r3
 8017b8e:	1a29      	subs	r1, r5, r0
 8017b90:	4633      	mov	r3, r6
 8017b92:	4620      	mov	r0, r4
 8017b94:	b209      	sxth	r1, r1
 8017b96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017b9a:	4718      	bx	r3
 8017b9c:	200138dc 	.word	0x200138dc
 8017ba0:	200138e4 	.word	0x200138e4

08017ba4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8017ba4:	b570      	push	{r4, r5, r6, lr}
 8017ba6:	6803      	ldr	r3, [r0, #0]
 8017ba8:	4604      	mov	r4, r0
 8017baa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017bac:	4615      	mov	r5, r2
 8017bae:	4798      	blx	r3
 8017bb0:	6823      	ldr	r3, [r4, #0]
 8017bb2:	4629      	mov	r1, r5
 8017bb4:	4620      	mov	r0, r4
 8017bb6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8017bb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017bbc:	4718      	bx	r3

08017bbe <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8017bbe:	2000      	movs	r0, #0
 8017bc0:	4770      	bx	lr

08017bc2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 8017bc2:	2000      	movs	r0, #0
 8017bc4:	4770      	bx	lr
	...

08017bc8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8017bc8:	4b07      	ldr	r3, [pc, #28]	@ (8017be8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8017bca:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8017bcc:	881b      	ldrh	r3, [r3, #0]
 8017bce:	4293      	cmp	r3, r2
 8017bd0:	bf81      	itttt	hi
 8017bd2:	4b06      	ldrhi	r3, [pc, #24]	@ (8017bec <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8017bd4:	681b      	ldrhi	r3, [r3, #0]
 8017bd6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8017bda:	7858      	ldrbhi	r0, [r3, #1]
 8017bdc:	bf8c      	ite	hi
 8017bde:	f000 0003 	andhi.w	r0, r0, #3
 8017be2:	2000      	movls	r0, #0
 8017be4:	4770      	bx	lr
 8017be6:	bf00      	nop
 8017be8:	200138e0 	.word	0x200138e0
 8017bec:	200138dc 	.word	0x200138dc

08017bf0 <_ZN8touchgfx8TextAreaD1Ev>:
 8017bf0:	4770      	bx	lr
	...

08017bf4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8017bf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017bf8:	4b10      	ldr	r3, [pc, #64]	@ (8017c3c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8017bfa:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8017bfc:	881b      	ldrh	r3, [r3, #0]
 8017bfe:	428b      	cmp	r3, r1
 8017c00:	4604      	mov	r4, r0
 8017c02:	d918      	bls.n	8017c36 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8017c04:	6803      	ldr	r3, [r0, #0]
 8017c06:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8017c08:	4b0d      	ldr	r3, [pc, #52]	@ (8017c40 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8017c0a:	6818      	ldr	r0, [r3, #0]
 8017c0c:	f7f2 fa5a 	bl	800a0c4 <_ZNK8touchgfx5Texts7getTextEt>
 8017c10:	6823      	ldr	r3, [r4, #0]
 8017c12:	4606      	mov	r6, r0
 8017c14:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8017c16:	4620      	mov	r0, r4
 8017c18:	4798      	blx	r3
 8017c1a:	6823      	ldr	r3, [r4, #0]
 8017c1c:	4607      	mov	r7, r0
 8017c1e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8017c22:	4620      	mov	r0, r4
 8017c24:	4798      	blx	r3
 8017c26:	463a      	mov	r2, r7
 8017c28:	4603      	mov	r3, r0
 8017c2a:	4631      	mov	r1, r6
 8017c2c:	4620      	mov	r0, r4
 8017c2e:	46ac      	mov	ip, r5
 8017c30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8017c34:	4760      	bx	ip
 8017c36:	2000      	movs	r0, #0
 8017c38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017c3c:	200138e0 	.word	0x200138e0
 8017c40:	200138e8 	.word	0x200138e8

08017c44 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8017c44:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8017c48:	4b17      	ldr	r3, [pc, #92]	@ (8017ca8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8017c4a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8017c4c:	881b      	ldrh	r3, [r3, #0]
 8017c4e:	428b      	cmp	r3, r1
 8017c50:	4604      	mov	r4, r0
 8017c52:	d926      	bls.n	8017ca2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8017c54:	4b15      	ldr	r3, [pc, #84]	@ (8017cac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8017c56:	681b      	ldr	r3, [r3, #0]
 8017c58:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8017c5c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8017c60:	4b13      	ldr	r3, [pc, #76]	@ (8017cb0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8017c62:	7855      	ldrb	r5, [r2, #1]
 8017c64:	681b      	ldr	r3, [r3, #0]
 8017c66:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8017c6a:	6833      	ldr	r3, [r6, #0]
 8017c6c:	69df      	ldr	r7, [r3, #28]
 8017c6e:	4b11      	ldr	r3, [pc, #68]	@ (8017cb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8017c70:	6818      	ldr	r0, [r3, #0]
 8017c72:	f7f2 fa27 	bl	800a0c4 <_ZNK8touchgfx5Texts7getTextEt>
 8017c76:	6823      	ldr	r3, [r4, #0]
 8017c78:	4680      	mov	r8, r0
 8017c7a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8017c7c:	4620      	mov	r0, r4
 8017c7e:	4798      	blx	r3
 8017c80:	6823      	ldr	r3, [r4, #0]
 8017c82:	4681      	mov	r9, r0
 8017c84:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8017c88:	4620      	mov	r0, r4
 8017c8a:	4798      	blx	r3
 8017c8c:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8017c90:	9000      	str	r0, [sp, #0]
 8017c92:	464b      	mov	r3, r9
 8017c94:	4642      	mov	r2, r8
 8017c96:	4629      	mov	r1, r5
 8017c98:	4630      	mov	r0, r6
 8017c9a:	47b8      	blx	r7
 8017c9c:	b003      	add	sp, #12
 8017c9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017ca2:	2000      	movs	r0, #0
 8017ca4:	e7fa      	b.n	8017c9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8017ca6:	bf00      	nop
 8017ca8:	200138e0 	.word	0x200138e0
 8017cac:	200138dc 	.word	0x200138dc
 8017cb0:	200138e4 	.word	0x200138e4
 8017cb4:	200138e8 	.word	0x200138e8

08017cb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8017cb8:	b40e      	push	{r1, r2, r3}
 8017cba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017cbe:	4b2f      	ldr	r3, [pc, #188]	@ (8017d7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8017cc0:	881a      	ldrh	r2, [r3, #0]
 8017cc2:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8017cc4:	429a      	cmp	r2, r3
 8017cc6:	b09d      	sub	sp, #116	@ 0x74
 8017cc8:	4604      	mov	r4, r0
 8017cca:	d954      	bls.n	8017d76 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8017ccc:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8017d80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8017cd0:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8017d84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8017cd4:	aa26      	add	r2, sp, #152	@ 0x98
 8017cd6:	9202      	str	r2, [sp, #8]
 8017cd8:	f8d9 2000 	ldr.w	r2, [r9]
 8017cdc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8017ce0:	f8d8 3000 	ldr.w	r3, [r8]
 8017ce4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017ce8:	682b      	ldr	r3, [r5, #0]
 8017cea:	4628      	mov	r0, r5
 8017cec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017cee:	4798      	blx	r3
 8017cf0:	b207      	sxth	r7, r0
 8017cf2:	4606      	mov	r6, r0
 8017cf4:	a803      	add	r0, sp, #12
 8017cf6:	f005 f9c5 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 8017cfa:	682b      	ldr	r3, [r5, #0]
 8017cfc:	4628      	mov	r0, r5
 8017cfe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017d00:	4798      	blx	r3
 8017d02:	682b      	ldr	r3, [r5, #0]
 8017d04:	4682      	mov	sl, r0
 8017d06:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017d08:	4628      	mov	r0, r5
 8017d0a:	4798      	blx	r3
 8017d0c:	4653      	mov	r3, sl
 8017d0e:	9000      	str	r0, [sp, #0]
 8017d10:	9a02      	ldr	r2, [sp, #8]
 8017d12:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8017d14:	a803      	add	r0, sp, #12
 8017d16:	f005 fa10 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d1a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8017d1c:	f8d9 3000 	ldr.w	r3, [r9]
 8017d20:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8017d24:	8925      	ldrh	r5, [r4, #8]
 8017d26:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8017d2a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8017d2e:	eba5 050c 	sub.w	r5, r5, ip
 8017d32:	784a      	ldrb	r2, [r1, #1]
 8017d34:	f8d8 3000 	ldr.w	r3, [r8]
 8017d38:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8017d3c:	b22d      	sxth	r5, r5
 8017d3e:	9500      	str	r5, [sp, #0]
 8017d40:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8017d44:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8017d48:	a803      	add	r0, sp, #12
 8017d4a:	f002 fb15 	bl	801a378 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8017d4e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8017d52:	18b9      	adds	r1, r7, r2
 8017d54:	2900      	cmp	r1, #0
 8017d56:	b203      	sxth	r3, r0
 8017d58:	dd0b      	ble.n	8017d72 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8017d5a:	3b01      	subs	r3, #1
 8017d5c:	fb13 f302 	smulbb	r3, r3, r2
 8017d60:	fb16 3300 	smlabb	r3, r6, r0, r3
 8017d64:	b21f      	sxth	r7, r3
 8017d66:	4638      	mov	r0, r7
 8017d68:	b01d      	add	sp, #116	@ 0x74
 8017d6a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017d6e:	b003      	add	sp, #12
 8017d70:	4770      	bx	lr
 8017d72:	2b00      	cmp	r3, #0
 8017d74:	dcf7      	bgt.n	8017d66 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8017d76:	2700      	movs	r7, #0
 8017d78:	e7f5      	b.n	8017d66 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8017d7a:	bf00      	nop
 8017d7c:	200138e0 	.word	0x200138e0
 8017d80:	200138dc 	.word	0x200138dc
 8017d84:	200138e4 	.word	0x200138e4

08017d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8017d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d8c:	4bbc      	ldr	r3, [pc, #752]	@ (8018080 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8017d8e:	460c      	mov	r4, r1
 8017d90:	881b      	ldrh	r3, [r3, #0]
 8017d92:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 8017d94:	428b      	cmp	r3, r1
 8017d96:	b0a9      	sub	sp, #164	@ 0xa4
 8017d98:	4680      	mov	r8, r0
 8017d9a:	d809      	bhi.n	8017db0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8017d9c:	2300      	movs	r3, #0
 8017d9e:	f04f 32ff 	mov.w	r2, #4294967295
 8017da2:	e9c0 3200 	strd	r3, r2, [r0]
 8017da6:	6083      	str	r3, [r0, #8]
 8017da8:	4640      	mov	r0, r8
 8017daa:	b029      	add	sp, #164	@ 0xa4
 8017dac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017db0:	4eb4      	ldr	r6, [pc, #720]	@ (8018084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8017db2:	6833      	ldr	r3, [r6, #0]
 8017db4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8017db8:	4bb3      	ldr	r3, [pc, #716]	@ (8018088 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8017dba:	681b      	ldr	r3, [r3, #0]
 8017dbc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017dc0:	4bb2      	ldr	r3, [pc, #712]	@ (801808c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8017dc2:	6818      	ldr	r0, [r3, #0]
 8017dc4:	f7f2 f97e 	bl	800a0c4 <_ZNK8touchgfx5Texts7getTextEt>
 8017dc8:	682b      	ldr	r3, [r5, #0]
 8017dca:	4681      	mov	r9, r0
 8017dcc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017dce:	4628      	mov	r0, r5
 8017dd0:	4798      	blx	r3
 8017dd2:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8017dd4:	b203      	sxth	r3, r0
 8017dd6:	4407      	add	r7, r0
 8017dd8:	9304      	str	r3, [sp, #16]
 8017dda:	b2bb      	uxth	r3, r7
 8017ddc:	9303      	str	r3, [sp, #12]
 8017dde:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8017de2:	4682      	mov	sl, r0
 8017de4:	a80f      	add	r0, sp, #60	@ 0x3c
 8017de6:	2b00      	cmp	r3, #0
 8017de8:	f040 80a6 	bne.w	8017f38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8017dec:	f005 f94a 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 8017df0:	682b      	ldr	r3, [r5, #0]
 8017df2:	4628      	mov	r0, r5
 8017df4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017df6:	4798      	blx	r3
 8017df8:	682b      	ldr	r3, [r5, #0]
 8017dfa:	4606      	mov	r6, r0
 8017dfc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017dfe:	4628      	mov	r0, r5
 8017e00:	4798      	blx	r3
 8017e02:	6823      	ldr	r3, [r4, #0]
 8017e04:	4607      	mov	r7, r0
 8017e06:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8017e08:	4620      	mov	r0, r4
 8017e0a:	4798      	blx	r3
 8017e0c:	6823      	ldr	r3, [r4, #0]
 8017e0e:	4683      	mov	fp, r0
 8017e10:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8017e14:	4620      	mov	r0, r4
 8017e16:	4798      	blx	r3
 8017e18:	463b      	mov	r3, r7
 8017e1a:	e9cd b000 	strd	fp, r0, [sp]
 8017e1e:	4649      	mov	r1, r9
 8017e20:	4632      	mov	r2, r6
 8017e22:	a80f      	add	r0, sp, #60	@ 0x3c
 8017e24:	f005 f99e 	bl	801d164 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8017e28:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8017e2c:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8018084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8017e30:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017e34:	f04f 0600 	mov.w	r6, #0
 8017e38:	bf0c      	ite	eq
 8017e3a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8017e3e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8017e42:	4637      	mov	r7, r6
 8017e44:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8017e46:	f8db 3000 	ldr.w	r3, [fp]
 8017e4a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8017e4e:	4629      	mov	r1, r5
 8017e50:	785b      	ldrb	r3, [r3, #1]
 8017e52:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8017e56:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8017e5a:	a80f      	add	r0, sp, #60	@ 0x3c
 8017e5c:	f001 ff93 	bl	8019d86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8017e60:	9b03      	ldr	r3, [sp, #12]
 8017e62:	4286      	cmp	r6, r0
 8017e64:	bfb8      	it	lt
 8017e66:	4606      	movlt	r6, r0
 8017e68:	3701      	adds	r7, #1
 8017e6a:	eba9 0903 	sub.w	r9, r9, r3
 8017e6e:	a80f      	add	r0, sp, #60	@ 0x3c
 8017e70:	b236      	sxth	r6, r6
 8017e72:	b2bf      	uxth	r7, r7
 8017e74:	fa0f f989 	sxth.w	r9, r9
 8017e78:	f005 f92b 	bl	801d0d2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8017e7c:	b918      	cbnz	r0, 8017e86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8017e7e:	7a2b      	ldrb	r3, [r5, #8]
 8017e80:	444b      	add	r3, r9
 8017e82:	2b00      	cmp	r3, #0
 8017e84:	dcde      	bgt.n	8017e44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8017e86:	9b03      	ldr	r3, [sp, #12]
 8017e88:	9a04      	ldr	r2, [sp, #16]
 8017e8a:	f895 9009 	ldrb.w	r9, [r5, #9]
 8017e8e:	fb13 f707 	smulbb	r7, r3, r7
 8017e92:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8017e94:	1aff      	subs	r7, r7, r3
 8017e96:	b2bf      	uxth	r7, r7
 8017e98:	b23b      	sxth	r3, r7
 8017e9a:	429a      	cmp	r2, r3
 8017e9c:	bfa8      	it	ge
 8017e9e:	4657      	movge	r7, sl
 8017ea0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8017ea4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017ea8:	6823      	ldr	r3, [r4, #0]
 8017eaa:	bf08      	it	eq
 8017eac:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8017eb0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8017eb2:	bf18      	it	ne
 8017eb4:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8017eb8:	4620      	mov	r0, r4
 8017eba:	4798      	blx	r3
 8017ebc:	444f      	add	r7, r9
 8017ebe:	fa1f f987 	uxth.w	r9, r7
 8017ec2:	2801      	cmp	r0, #1
 8017ec4:	fa0f f789 	sxth.w	r7, r9
 8017ec8:	b2b3      	uxth	r3, r6
 8017eca:	f000 80e1 	beq.w	8018090 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8017ece:	2802      	cmp	r0, #2
 8017ed0:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8017ed4:	f000 80e2 	beq.w	801809c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8017ed8:	7aea      	ldrb	r2, [r5, #11]
 8017eda:	7b2d      	ldrb	r5, [r5, #12]
 8017edc:	b236      	sxth	r6, r6
 8017ede:	1ab6      	subs	r6, r6, r2
 8017ee0:	442a      	add	r2, r5
 8017ee2:	4413      	add	r3, r2
 8017ee4:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8017ee8:	fa1f fa86 	uxth.w	sl, r6
 8017eec:	b29b      	uxth	r3, r3
 8017eee:	2a02      	cmp	r2, #2
 8017ef0:	fa0f fb8a 	sxth.w	fp, sl
 8017ef4:	b21e      	sxth	r6, r3
 8017ef6:	f000 80d5 	beq.w	80180a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8017efa:	2a03      	cmp	r2, #3
 8017efc:	f000 80dd 	beq.w	80180ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8017f00:	2a01      	cmp	r2, #1
 8017f02:	f040 80e5 	bne.w	80180d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8017f06:	8925      	ldrh	r5, [r4, #8]
 8017f08:	4633      	mov	r3, r6
 8017f0a:	eba5 0909 	sub.w	r9, r5, r9
 8017f0e:	463e      	mov	r6, r7
 8017f10:	465d      	mov	r5, fp
 8017f12:	461f      	mov	r7, r3
 8017f14:	fa0f fb89 	sxth.w	fp, r9
 8017f18:	4b5c      	ldr	r3, [pc, #368]	@ (801808c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8017f1a:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8017f1c:	6818      	ldr	r0, [r3, #0]
 8017f1e:	f7f2 f8d1 	bl	800a0c4 <_ZNK8touchgfx5Texts7getTextEt>
 8017f22:	f8a8 b000 	strh.w	fp, [r8]
 8017f26:	f8a8 5002 	strh.w	r5, [r8, #2]
 8017f2a:	f8a8 6004 	strh.w	r6, [r8, #4]
 8017f2e:	f8a8 7006 	strh.w	r7, [r8, #6]
 8017f32:	f8c8 0008 	str.w	r0, [r8, #8]
 8017f36:	e737      	b.n	8017da8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8017f38:	f005 f8a4 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 8017f3c:	682b      	ldr	r3, [r5, #0]
 8017f3e:	4628      	mov	r0, r5
 8017f40:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017f42:	4798      	blx	r3
 8017f44:	682b      	ldr	r3, [r5, #0]
 8017f46:	4607      	mov	r7, r0
 8017f48:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017f4a:	4628      	mov	r0, r5
 8017f4c:	4798      	blx	r3
 8017f4e:	6823      	ldr	r3, [r4, #0]
 8017f50:	4683      	mov	fp, r0
 8017f52:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8017f54:	4620      	mov	r0, r4
 8017f56:	4798      	blx	r3
 8017f58:	6822      	ldr	r2, [r4, #0]
 8017f5a:	9005      	str	r0, [sp, #20]
 8017f5c:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8017f60:	4620      	mov	r0, r4
 8017f62:	4790      	blx	r2
 8017f64:	9b05      	ldr	r3, [sp, #20]
 8017f66:	9001      	str	r0, [sp, #4]
 8017f68:	463a      	mov	r2, r7
 8017f6a:	4649      	mov	r1, r9
 8017f6c:	9300      	str	r3, [sp, #0]
 8017f6e:	a80f      	add	r0, sp, #60	@ 0x3c
 8017f70:	465b      	mov	r3, fp
 8017f72:	f005 f8f7 	bl	801d164 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8017f76:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8017f7a:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8017f7e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8017f80:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8017f84:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8017f88:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8017f8c:	bf0a      	itet	eq
 8017f8e:	464a      	moveq	r2, r9
 8017f90:	461a      	movne	r2, r3
 8017f92:	4699      	moveq	r9, r3
 8017f94:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8017f98:	1ad2      	subs	r2, r2, r3
 8017f9a:	6833      	ldr	r3, [r6, #0]
 8017f9c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8017fa0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8017fa4:	af0f      	add	r7, sp, #60	@ 0x3c
 8017fa6:	7859      	ldrb	r1, [r3, #1]
 8017fa8:	9707      	str	r7, [sp, #28]
 8017faa:	2300      	movs	r3, #0
 8017fac:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8017fb0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017fb4:	f88d 1020 	strb.w	r1, [sp, #32]
 8017fb8:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8017fbc:	9509      	str	r5, [sp, #36]	@ 0x24
 8017fbe:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017fc2:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 8017fc6:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8017fca:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8017fce:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017fd2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017fd6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8017fda:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017fde:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8017fe2:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 8017fe6:	b350      	cbz	r0, 801803e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8017fe8:	682b      	ldr	r3, [r5, #0]
 8017fea:	4628      	mov	r0, r5
 8017fec:	695b      	ldr	r3, [r3, #20]
 8017fee:	4798      	blx	r3
 8017ff0:	4607      	mov	r7, r0
 8017ff2:	b320      	cbz	r0, 801803e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8017ff4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8017ff6:	6803      	ldr	r3, [r0, #0]
 8017ff8:	4639      	mov	r1, r7
 8017ffa:	68db      	ldr	r3, [r3, #12]
 8017ffc:	4798      	blx	r3
 8017ffe:	4606      	mov	r6, r0
 8018000:	b1e8      	cbz	r0, 801803e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8018002:	7b43      	ldrb	r3, [r0, #13]
 8018004:	7a82      	ldrb	r2, [r0, #10]
 8018006:	005b      	lsls	r3, r3, #1
 8018008:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801800c:	4313      	orrs	r3, r2
 801800e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8018012:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 8018016:	2b06      	cmp	r3, #6
 8018018:	d111      	bne.n	801803e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801801a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801801c:	6803      	ldr	r3, [r0, #0]
 801801e:	4632      	mov	r2, r6
 8018020:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8018022:	4639      	mov	r1, r7
 8018024:	4798      	blx	r3
 8018026:	7b73      	ldrb	r3, [r6, #13]
 8018028:	005b      	lsls	r3, r3, #1
 801802a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801802e:	7ab3      	ldrb	r3, [r6, #10]
 8018030:	4313      	orrs	r3, r2
 8018032:	4418      	add	r0, r3
 8018034:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018038:	4418      	add	r0, r3
 801803a:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 801803e:	2600      	movs	r6, #0
 8018040:	4637      	mov	r7, r6
 8018042:	a806      	add	r0, sp, #24
 8018044:	f002 f894 	bl	801a170 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018048:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 801804c:	9b03      	ldr	r3, [sp, #12]
 801804e:	4286      	cmp	r6, r0
 8018050:	eba9 0903 	sub.w	r9, r9, r3
 8018054:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8018058:	bfb8      	it	lt
 801805a:	4606      	movlt	r6, r0
 801805c:	3701      	adds	r7, #1
 801805e:	b236      	sxth	r6, r6
 8018060:	b2bf      	uxth	r7, r7
 8018062:	fa0f f989 	sxth.w	r9, r9
 8018066:	2b00      	cmp	r3, #0
 8018068:	f43f af0d 	beq.w	8017e86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801806c:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8018070:	2b00      	cmp	r3, #0
 8018072:	f47f af08 	bne.w	8017e86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8018076:	7a2b      	ldrb	r3, [r5, #8]
 8018078:	444b      	add	r3, r9
 801807a:	2b00      	cmp	r3, #0
 801807c:	dce1      	bgt.n	8018042 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801807e:	e702      	b.n	8017e86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8018080:	200138e0 	.word	0x200138e0
 8018084:	200138dc 	.word	0x200138dc
 8018088:	200138e4 	.word	0x200138e4
 801808c:	200138e8 	.word	0x200138e8
 8018090:	ebaa 0606 	sub.w	r6, sl, r6
 8018094:	2002      	movs	r0, #2
 8018096:	fb96 f6f0 	sdiv	r6, r6, r0
 801809a:	e71d      	b.n	8017ed8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 801809c:	441e      	add	r6, r3
 801809e:	ebaa 0606 	sub.w	r6, sl, r6
 80180a2:	e719      	b.n	8017ed8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80180a4:	8925      	ldrh	r5, [r4, #8]
 80180a6:	1aed      	subs	r5, r5, r3
 80180a8:	eba5 050a 	sub.w	r5, r5, sl
 80180ac:	fa0f fb85 	sxth.w	fp, r5
 80180b0:	8965      	ldrh	r5, [r4, #10]
 80180b2:	eba5 0509 	sub.w	r5, r5, r9
 80180b6:	b22d      	sxth	r5, r5
 80180b8:	e72e      	b.n	8017f18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80180ba:	8965      	ldrh	r5, [r4, #10]
 80180bc:	1aed      	subs	r5, r5, r3
 80180be:	eba5 050a 	sub.w	r5, r5, sl
 80180c2:	4633      	mov	r3, r6
 80180c4:	b22d      	sxth	r5, r5
 80180c6:	463e      	mov	r6, r7
 80180c8:	f04f 0b00 	mov.w	fp, #0
 80180cc:	461f      	mov	r7, r3
 80180ce:	e723      	b.n	8017f18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80180d0:	2500      	movs	r5, #0
 80180d2:	e721      	b.n	8017f18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080180d4 <_ZN8touchgfx8TextAreaD0Ev>:
 80180d4:	b510      	push	{r4, lr}
 80180d6:	2148      	movs	r1, #72	@ 0x48
 80180d8:	4604      	mov	r4, r0
 80180da:	f015 f88c 	bl	802d1f6 <_ZdlPvj>
 80180de:	4620      	mov	r0, r4
 80180e0:	bd10      	pop	{r4, pc}
	...

080180e4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80180e4:	b513      	push	{r0, r1, r4, lr}
 80180e6:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 80180ea:	4604      	mov	r4, r0
 80180ec:	b1fb      	cbz	r3, 801812e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80180ee:	4b16      	ldr	r3, [pc, #88]	@ (8018148 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80180f0:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 80180f2:	881b      	ldrh	r3, [r3, #0]
 80180f4:	428b      	cmp	r3, r1
 80180f6:	d91a      	bls.n	801812e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80180f8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80180fc:	2b00      	cmp	r3, #0
 80180fe:	dd16      	ble.n	801812e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8018100:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8018104:	2b00      	cmp	r3, #0
 8018106:	dd12      	ble.n	801812e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8018108:	4b10      	ldr	r3, [pc, #64]	@ (801814c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801810a:	6818      	ldr	r0, [r3, #0]
 801810c:	f7f1 ffda 	bl	800a0c4 <_ZNK8touchgfx5Texts7getTextEt>
 8018110:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8018114:	6822      	ldr	r2, [r4, #0]
 8018116:	2b00      	cmp	r3, #0
 8018118:	db06      	blt.n	8018128 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801811a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 801811e:	2b00      	cmp	r3, #0
 8018120:	db02      	blt.n	8018128 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8018122:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8018124:	4298      	cmp	r0, r3
 8018126:	d004      	beq.n	8018132 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8018128:	6953      	ldr	r3, [r2, #20]
 801812a:	4620      	mov	r0, r4
 801812c:	4798      	blx	r3
 801812e:	b002      	add	sp, #8
 8018130:	bd10      	pop	{r4, pc}
 8018132:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8018136:	c903      	ldmia	r1, {r0, r1}
 8018138:	466b      	mov	r3, sp
 801813a:	e883 0003 	stmia.w	r3, {r0, r1}
 801813e:	6912      	ldr	r2, [r2, #16]
 8018140:	4619      	mov	r1, r3
 8018142:	4620      	mov	r0, r4
 8018144:	4790      	blx	r2
 8018146:	e7f2      	b.n	801812e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8018148:	200138e0 	.word	0x200138e0
 801814c:	200138e8 	.word	0x200138e8

08018150 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8018150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018154:	4b44      	ldr	r3, [pc, #272]	@ (8018268 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8018156:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8018158:	881b      	ldrh	r3, [r3, #0]
 801815a:	4293      	cmp	r3, r2
 801815c:	b08e      	sub	sp, #56	@ 0x38
 801815e:	4604      	mov	r4, r0
 8018160:	d97e      	bls.n	8018260 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8018162:	6808      	ldr	r0, [r1, #0]
 8018164:	4d41      	ldr	r5, [pc, #260]	@ (801826c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8018166:	6849      	ldr	r1, [r1, #4]
 8018168:	ab05      	add	r3, sp, #20
 801816a:	c303      	stmia	r3!, {r0, r1}
 801816c:	4611      	mov	r1, r2
 801816e:	6828      	ldr	r0, [r5, #0]
 8018170:	f7f1 ffa8 	bl	800a0c4 <_ZNK8touchgfx5Texts7getTextEt>
 8018174:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8018178:	2b00      	cmp	r3, #0
 801817a:	db11      	blt.n	80181a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801817c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8018180:	2b00      	cmp	r3, #0
 8018182:	db0d      	blt.n	80181a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8018184:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8018186:	4298      	cmp	r0, r3
 8018188:	d10a      	bne.n	80181a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801818a:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 801818e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018192:	ab09      	add	r3, sp, #36	@ 0x24
 8018194:	e883 0003 	stmia.w	r3, {r0, r1}
 8018198:	4619      	mov	r1, r3
 801819a:	a805      	add	r0, sp, #20
 801819c:	f7fc fd9c 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 80181a0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80181a4:	2b00      	cmp	r3, #0
 80181a6:	dd5b      	ble.n	8018260 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80181a8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80181ac:	2b00      	cmp	r3, #0
 80181ae:	dd57      	ble.n	8018260 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80181b0:	4f2f      	ldr	r7, [pc, #188]	@ (8018270 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80181b2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80181b4:	683b      	ldr	r3, [r7, #0]
 80181b6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80181ba:	4b2e      	ldr	r3, [pc, #184]	@ (8018274 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80181bc:	681b      	ldr	r3, [r3, #0]
 80181be:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80181c2:	2e00      	cmp	r6, #0
 80181c4:	d04c      	beq.n	8018260 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80181c6:	6823      	ldr	r3, [r4, #0]
 80181c8:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 80181cc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80181ce:	4620      	mov	r0, r4
 80181d0:	4798      	blx	r3
 80181d2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80181d4:	683b      	ldr	r3, [r7, #0]
 80181d6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 80181da:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 80181de:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 80181e2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80181e4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80181e8:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 80181ec:	785b      	ldrb	r3, [r3, #1]
 80181ee:	9609      	str	r6, [sp, #36]	@ 0x24
 80181f0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80181f4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80181f8:	4b1f      	ldr	r3, [pc, #124]	@ (8018278 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80181fa:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 80181fe:	681b      	ldr	r3, [r3, #0]
 8018200:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8018204:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018206:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 801820a:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 801820e:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8018212:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 8018216:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801821a:	b10a      	cbz	r2, 8018220 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 801821c:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 801821e:	b906      	cbnz	r6, 8018222 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8018220:	689e      	ldr	r6, [r3, #8]
 8018222:	af07      	add	r7, sp, #28
 8018224:	4621      	mov	r1, r4
 8018226:	4638      	mov	r0, r7
 8018228:	f003 ffa2 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801822c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 801822e:	6828      	ldr	r0, [r5, #0]
 8018230:	f7f1 ff48 	bl	800a0c4 <_ZNK8touchgfx5Texts7getTextEt>
 8018234:	6823      	ldr	r3, [r4, #0]
 8018236:	4605      	mov	r5, r0
 8018238:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801823a:	4620      	mov	r0, r4
 801823c:	4798      	blx	r3
 801823e:	6823      	ldr	r3, [r4, #0]
 8018240:	4680      	mov	r8, r0
 8018242:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8018246:	4620      	mov	r0, r4
 8018248:	4798      	blx	r3
 801824a:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801824e:	ab09      	add	r3, sp, #36	@ 0x24
 8018250:	9300      	str	r3, [sp, #0]
 8018252:	9501      	str	r5, [sp, #4]
 8018254:	ab05      	add	r3, sp, #20
 8018256:	e897 0006 	ldmia.w	r7, {r1, r2}
 801825a:	4630      	mov	r0, r6
 801825c:	f7f1 fee4 	bl	800a028 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8018260:	b00e      	add	sp, #56	@ 0x38
 8018262:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018266:	bf00      	nop
 8018268:	200138e0 	.word	0x200138e0
 801826c:	200138e8 	.word	0x200138e8
 8018270:	200138dc 	.word	0x200138dc
 8018274:	200138e4 	.word	0x200138e4
 8018278:	20013884 	.word	0x20013884

0801827c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801827c:	b570      	push	{r4, r5, r6, lr}
 801827e:	6803      	ldr	r3, [r0, #0]
 8018280:	4604      	mov	r4, r0
 8018282:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018284:	4615      	mov	r5, r2
 8018286:	4798      	blx	r3
 8018288:	6823      	ldr	r3, [r4, #0]
 801828a:	4629      	mov	r1, r5
 801828c:	4620      	mov	r0, r4
 801828e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018290:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018294:	4718      	bx	r3
	...

08018298 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8018298:	b538      	push	{r3, r4, r5, lr}
 801829a:	4b0e      	ldr	r3, [pc, #56]	@ (80182d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801829c:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 801829e:	881b      	ldrh	r3, [r3, #0]
 80182a0:	429a      	cmp	r2, r3
 80182a2:	4604      	mov	r4, r0
 80182a4:	d214      	bcs.n	80182d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80182a6:	6803      	ldr	r3, [r0, #0]
 80182a8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80182aa:	4798      	blx	r3
 80182ac:	6823      	ldr	r3, [r4, #0]
 80182ae:	4605      	mov	r5, r0
 80182b0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80182b2:	4620      	mov	r0, r4
 80182b4:	4798      	blx	r3
 80182b6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80182ba:	b22d      	sxth	r5, r5
 80182bc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80182c0:	4601      	mov	r1, r0
 80182c2:	bf06      	itte	eq
 80182c4:	4602      	moveq	r2, r0
 80182c6:	4629      	moveq	r1, r5
 80182c8:	462a      	movne	r2, r5
 80182ca:	4620      	mov	r0, r4
 80182cc:	f7ff ffd6 	bl	801827c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80182d0:	bd38      	pop	{r3, r4, r5, pc}
 80182d2:	bf00      	nop
 80182d4:	200138e0 	.word	0x200138e0

080182d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80182d8:	b530      	push	{r4, r5, lr}
 80182da:	888b      	ldrh	r3, [r1, #4]
 80182dc:	8583      	strh	r3, [r0, #44]	@ 0x2c
 80182de:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80182e2:	b085      	sub	sp, #20
 80182e4:	4604      	mov	r4, r0
 80182e6:	b923      	cbnz	r3, 80182f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80182e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80182ec:	b90b      	cbnz	r3, 80182f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80182ee:	f7ff ffd3 	bl	8018298 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80182f2:	6823      	ldr	r3, [r4, #0]
 80182f4:	466d      	mov	r5, sp
 80182f6:	4621      	mov	r1, r4
 80182f8:	4628      	mov	r0, r5
 80182fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80182fe:	4798      	blx	r3
 8018300:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8018304:	343c      	adds	r4, #60	@ 0x3c
 8018306:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801830a:	b005      	add	sp, #20
 801830c:	bd30      	pop	{r4, r5, pc}

0801830e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801830e:	2300      	movs	r3, #0
 8018310:	8083      	strh	r3, [r0, #4]
 8018312:	80c3      	strh	r3, [r0, #6]
 8018314:	8003      	strh	r3, [r0, #0]
 8018316:	8043      	strh	r3, [r0, #2]
 8018318:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 801831c:	2bff      	cmp	r3, #255	@ 0xff
 801831e:	bf01      	itttt	eq
 8018320:	890b      	ldrheq	r3, [r1, #8]
 8018322:	8083      	strheq	r3, [r0, #4]
 8018324:	894b      	ldrheq	r3, [r1, #10]
 8018326:	80c3      	strheq	r3, [r0, #6]
 8018328:	4770      	bx	lr
	...

0801832c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801832c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801832e:	4604      	mov	r4, r0
 8018330:	6808      	ldr	r0, [r1, #0]
 8018332:	6849      	ldr	r1, [r1, #4]
 8018334:	466b      	mov	r3, sp
 8018336:	c303      	stmia	r3!, {r0, r1}
 8018338:	6823      	ldr	r3, [r4, #0]
 801833a:	4669      	mov	r1, sp
 801833c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801833e:	4620      	mov	r0, r4
 8018340:	4798      	blx	r3
 8018342:	4b08      	ldr	r3, [pc, #32]	@ (8018364 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8018344:	681b      	ldr	r3, [r3, #0]
 8018346:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801834a:	b10a      	cbz	r2, 8018350 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801834c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 801834e:	b900      	cbnz	r0, 8018352 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8018350:	6898      	ldr	r0, [r3, #8]
 8018352:	6803      	ldr	r3, [r0, #0]
 8018354:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8018356:	6a1d      	ldr	r5, [r3, #32]
 8018358:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 801835c:	4669      	mov	r1, sp
 801835e:	47a8      	blx	r5
 8018360:	b003      	add	sp, #12
 8018362:	bd30      	pop	{r4, r5, pc}
 8018364:	20013884 	.word	0x20013884

08018368 <_ZN8touchgfx3BoxD1Ev>:
 8018368:	4770      	bx	lr

0801836a <_ZN8touchgfx3BoxD0Ev>:
 801836a:	b510      	push	{r4, lr}
 801836c:	212c      	movs	r1, #44	@ 0x2c
 801836e:	4604      	mov	r4, r0
 8018370:	f014 ff41 	bl	802d1f6 <_ZdlPvj>
 8018374:	4620      	mov	r0, r4
 8018376:	bd10      	pop	{r4, pc}

08018378 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8018378:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 801837c:	b12a      	cbz	r2, 801838a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801837e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8018382:	b112      	cbz	r2, 801838a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8018384:	6803      	ldr	r3, [r0, #0]
 8018386:	695b      	ldr	r3, [r3, #20]
 8018388:	4718      	bx	r3
 801838a:	4770      	bx	lr

0801838c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 801838c:	4770      	bx	lr

0801838e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 801838e:	b510      	push	{r4, lr}
 8018390:	2134      	movs	r1, #52	@ 0x34
 8018392:	4604      	mov	r4, r0
 8018394:	f014 ff2f 	bl	802d1f6 <_ZdlPvj>
 8018398:	4620      	mov	r0, r4
 801839a:	bd10      	pop	{r4, pc}

0801839c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 801839c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80183a0:	4604      	mov	r4, r0
 80183a2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80183a4:	8962      	ldrh	r2, [r4, #10]
 80183a6:	b218      	sxth	r0, r3
 80183a8:	460e      	mov	r6, r1
 80183aa:	005b      	lsls	r3, r3, #1
 80183ac:	8921      	ldrh	r1, [r4, #8]
 80183ae:	b29b      	uxth	r3, r3
 80183b0:	1ac9      	subs	r1, r1, r3
 80183b2:	b08e      	sub	sp, #56	@ 0x38
 80183b4:	b209      	sxth	r1, r1
 80183b6:	1ad3      	subs	r3, r2, r3
 80183b8:	b21b      	sxth	r3, r3
 80183ba:	2900      	cmp	r1, #0
 80183bc:	f8ad 0000 	strh.w	r0, [sp]
 80183c0:	f8ad 0002 	strh.w	r0, [sp, #2]
 80183c4:	f8ad 1004 	strh.w	r1, [sp, #4]
 80183c8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80183cc:	dd5e      	ble.n	801848c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80183ce:	2b00      	cmp	r3, #0
 80183d0:	dd5c      	ble.n	801848c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80183d2:	6830      	ldr	r0, [r6, #0]
 80183d4:	6871      	ldr	r1, [r6, #4]
 80183d6:	ab02      	add	r3, sp, #8
 80183d8:	c303      	stmia	r3!, {r0, r1}
 80183da:	4669      	mov	r1, sp
 80183dc:	a802      	add	r0, sp, #8
 80183de:	f7fc fc7b 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 80183e2:	4620      	mov	r0, r4
 80183e4:	a902      	add	r1, sp, #8
 80183e6:	f7ff ffa1 	bl	801832c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80183ea:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 80183ec:	2800      	cmp	r0, #0
 80183ee:	d05f      	beq.n	80184b0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80183f0:	8963      	ldrh	r3, [r4, #10]
 80183f2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80183f6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80183fa:	1a1f      	subs	r7, r3, r0
 80183fc:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8018400:	b202      	sxth	r2, r0
 8018402:	2500      	movs	r5, #0
 8018404:	b21b      	sxth	r3, r3
 8018406:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 801840a:	1a09      	subs	r1, r1, r0
 801840c:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8018410:	9506      	str	r5, [sp, #24]
 8018412:	f8ad 201e 	strh.w	r2, [sp, #30]
 8018416:	f8ad 5020 	strh.w	r5, [sp, #32]
 801841a:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 801841e:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8018422:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8018426:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801842a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801842e:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8018432:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8018436:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801843a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801843e:	af04      	add	r7, sp, #16
 8018440:	ab06      	add	r3, sp, #24
 8018442:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8018446:	e893 0003 	ldmia.w	r3, {r0, r1}
 801844a:	e887 0003 	stmia.w	r7, {r0, r1}
 801844e:	4631      	mov	r1, r6
 8018450:	4638      	mov	r0, r7
 8018452:	f7fc fc41 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8018456:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801845a:	2b00      	cmp	r3, #0
 801845c:	dd12      	ble.n	8018484 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801845e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018462:	2b00      	cmp	r3, #0
 8018464:	dd0e      	ble.n	8018484 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8018466:	6823      	ldr	r3, [r4, #0]
 8018468:	4639      	mov	r1, r7
 801846a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801846c:	4620      	mov	r0, r4
 801846e:	4798      	blx	r3
 8018470:	f7eb fb98 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 8018474:	6803      	ldr	r3, [r0, #0]
 8018476:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8018478:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801847c:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8018480:	4639      	mov	r1, r7
 8018482:	47c0      	blx	r8
 8018484:	3501      	adds	r5, #1
 8018486:	2d04      	cmp	r5, #4
 8018488:	d1da      	bne.n	8018440 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801848a:	e011      	b.n	80184b0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801848c:	6830      	ldr	r0, [r6, #0]
 801848e:	6871      	ldr	r1, [r6, #4]
 8018490:	ab06      	add	r3, sp, #24
 8018492:	c303      	stmia	r3!, {r0, r1}
 8018494:	6823      	ldr	r3, [r4, #0]
 8018496:	a906      	add	r1, sp, #24
 8018498:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801849a:	4620      	mov	r0, r4
 801849c:	4798      	blx	r3
 801849e:	f7eb fb81 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 80184a2:	6803      	ldr	r3, [r0, #0]
 80184a4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80184a6:	6a1d      	ldr	r5, [r3, #32]
 80184a8:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80184ac:	a906      	add	r1, sp, #24
 80184ae:	47a8      	blx	r5
 80184b0:	b00e      	add	sp, #56	@ 0x38
 80184b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080184b6 <_ZN8touchgfx5ImageD1Ev>:
 80184b6:	4770      	bx	lr

080184b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80184b8:	b570      	push	{r4, r5, r6, lr}
 80184ba:	880b      	ldrh	r3, [r1, #0]
 80184bc:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80184be:	4604      	mov	r4, r0
 80184c0:	4608      	mov	r0, r1
 80184c2:	460d      	mov	r5, r1
 80184c4:	f005 fe18 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80184c8:	4606      	mov	r6, r0
 80184ca:	4628      	mov	r0, r5
 80184cc:	f005 fe48 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80184d0:	6823      	ldr	r3, [r4, #0]
 80184d2:	4605      	mov	r5, r0
 80184d4:	4631      	mov	r1, r6
 80184d6:	4620      	mov	r0, r4
 80184d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80184da:	4798      	blx	r3
 80184dc:	6823      	ldr	r3, [r4, #0]
 80184de:	4629      	mov	r1, r5
 80184e0:	4620      	mov	r0, r4
 80184e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80184e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80184e8:	4718      	bx	r3

080184ea <_ZN8touchgfx5ImageD0Ev>:
 80184ea:	b510      	push	{r4, lr}
 80184ec:	212c      	movs	r1, #44	@ 0x2c
 80184ee:	4604      	mov	r4, r0
 80184f0:	f014 fe81 	bl	802d1f6 <_ZdlPvj>
 80184f4:	4620      	mov	r0, r4
 80184f6:	bd10      	pop	{r4, pc}

080184f8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80184f8:	b510      	push	{r4, lr}
 80184fa:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 80184fe:	2bff      	cmp	r3, #255	@ 0xff
 8018500:	4604      	mov	r4, r0
 8018502:	d006      	beq.n	8018512 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8018504:	2300      	movs	r3, #0
 8018506:	8003      	strh	r3, [r0, #0]
 8018508:	8043      	strh	r3, [r0, #2]
 801850a:	8083      	strh	r3, [r0, #4]
 801850c:	80c3      	strh	r3, [r0, #6]
 801850e:	4620      	mov	r0, r4
 8018510:	bd10      	pop	{r4, pc}
 8018512:	3126      	adds	r1, #38	@ 0x26
 8018514:	f005 fe58 	bl	801e1c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018518:	e7f9      	b.n	801850e <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0801851c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 801851c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018520:	4604      	mov	r4, r0
 8018522:	b088      	sub	sp, #32
 8018524:	f854 3b26 	ldr.w	r3, [r4], #38
 8018528:	2500      	movs	r5, #0
 801852a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801852c:	460f      	mov	r7, r1
 801852e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8018532:	a904      	add	r1, sp, #16
 8018534:	4606      	mov	r6, r0
 8018536:	4798      	blx	r3
 8018538:	4620      	mov	r0, r4
 801853a:	f005 fddd 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801853e:	4680      	mov	r8, r0
 8018540:	4620      	mov	r0, r4
 8018542:	f005 fe0d 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018546:	9506      	str	r5, [sp, #24]
 8018548:	ad06      	add	r5, sp, #24
 801854a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801854e:	4639      	mov	r1, r7
 8018550:	4628      	mov	r0, r5
 8018552:	f8ad 801c 	strh.w	r8, [sp, #28]
 8018556:	f7fc fbbf 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801855a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801855e:	2b00      	cmp	r3, #0
 8018560:	dd19      	ble.n	8018596 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8018562:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8018566:	2b00      	cmp	r3, #0
 8018568:	dd15      	ble.n	8018596 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801856a:	4b0c      	ldr	r3, [pc, #48]	@ (801859c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801856c:	681b      	ldr	r3, [r3, #0]
 801856e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8018572:	b10a      	cbz	r2, 8018578 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8018574:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8018576:	b900      	cbnz	r0, 801857a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8018578:	6898      	ldr	r0, [r3, #8]
 801857a:	6801      	ldr	r1, [r0, #0]
 801857c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018580:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018584:	2701      	movs	r7, #1
 8018586:	9702      	str	r7, [sp, #8]
 8018588:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 801858c:	e9cd 5600 	strd	r5, r6, [sp]
 8018590:	688d      	ldr	r5, [r1, #8]
 8018592:	4621      	mov	r1, r4
 8018594:	47a8      	blx	r5
 8018596:	b008      	add	sp, #32
 8018598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801859c:	20013884 	.word	0x20013884

080185a0 <_ZN8touchgfx7OutlineD1Ev>:
 80185a0:	4770      	bx	lr

080185a2 <_ZN8touchgfx7OutlineD0Ev>:
 80185a2:	b510      	push	{r4, lr}
 80185a4:	2130      	movs	r1, #48	@ 0x30
 80185a6:	4604      	mov	r4, r0
 80185a8:	f014 fe25 	bl	802d1f6 <_ZdlPvj>
 80185ac:	4620      	mov	r0, r4
 80185ae:	bd10      	pop	{r4, pc}

080185b0 <_ZN8touchgfx7Outline5resetEv>:
 80185b0:	b510      	push	{r4, lr}
 80185b2:	4604      	mov	r4, r0
 80185b4:	f000 fe82 	bl	80192bc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80185b8:	60e0      	str	r0, [r4, #12]
 80185ba:	f000 fe85 	bl	80192c8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80185be:	68e3      	ldr	r3, [r4, #12]
 80185c0:	6123      	str	r3, [r4, #16]
 80185c2:	08c0      	lsrs	r0, r0, #3
 80185c4:	2200      	movs	r2, #0
 80185c6:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 80185ca:	3801      	subs	r0, #1
 80185cc:	6060      	str	r0, [r4, #4]
 80185ce:	60a2      	str	r2, [r4, #8]
 80185d0:	8019      	strh	r1, [r3, #0]
 80185d2:	8059      	strh	r1, [r3, #2]
 80185d4:	809a      	strh	r2, [r3, #4]
 80185d6:	80da      	strh	r2, [r3, #6]
 80185d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80185da:	f023 0301 	bic.w	r3, r3, #1
 80185de:	f043 0302 	orr.w	r3, r3, #2
 80185e2:	6263      	str	r3, [r4, #36]	@ 0x24
 80185e4:	bd10      	pop	{r4, pc}
	...

080185e8 <_ZN8touchgfx7OutlineC1Ev>:
 80185e8:	b510      	push	{r4, lr}
 80185ea:	4b0a      	ldr	r3, [pc, #40]	@ (8018614 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80185ec:	6003      	str	r3, [r0, #0]
 80185ee:	2300      	movs	r3, #0
 80185f0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80185f4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80185f8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80185fc:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8018600:	6243      	str	r3, [r0, #36]	@ 0x24
 8018602:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8018606:	4604      	mov	r4, r0
 8018608:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 801860c:	f7ff ffd0 	bl	80185b0 <_ZN8touchgfx7Outline5resetEv>
 8018610:	4620      	mov	r0, r4
 8018612:	bd10      	pop	{r4, pc}
 8018614:	080324b0 	.word	0x080324b0

08018618 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8018618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801861c:	b093      	sub	sp, #76	@ 0x4c
 801861e:	1156      	asrs	r6, r2, #5
 8018620:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8018622:	9305      	str	r3, [sp, #20]
 8018624:	f004 051f 	and.w	r5, r4, #31
 8018628:	1153      	asrs	r3, r2, #5
 801862a:	9504      	str	r5, [sp, #16]
 801862c:	1165      	asrs	r5, r4, #5
 801862e:	9303      	str	r3, [sp, #12]
 8018630:	42ae      	cmp	r6, r5
 8018632:	ea4f 1364 	mov.w	r3, r4, asr #5
 8018636:	9306      	str	r3, [sp, #24]
 8018638:	f002 031f 	and.w	r3, r2, #31
 801863c:	f040 80f8 	bne.w	8018830 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8018640:	9c04      	ldr	r4, [sp, #16]
 8018642:	9a05      	ldr	r2, [sp, #20]
 8018644:	42a3      	cmp	r3, r4
 8018646:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801864a:	6902      	ldr	r2, [r0, #16]
 801864c:	d125      	bne.n	801869a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801864e:	f9b2 3000 	ldrsh.w	r3, [r2]
 8018652:	459e      	cmp	lr, r3
 8018654:	d103      	bne.n	801865e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8018656:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801865a:	429e      	cmp	r6, r3
 801865c:	d035      	beq.n	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801865e:	88d1      	ldrh	r1, [r2, #6]
 8018660:	8893      	ldrh	r3, [r2, #4]
 8018662:	430b      	orrs	r3, r1
 8018664:	d010      	beq.n	8018688 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8018666:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801866a:	2b00      	cmp	r3, #0
 801866c:	db0c      	blt.n	8018688 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801866e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8018670:	428b      	cmp	r3, r1
 8018672:	da09      	bge.n	8018688 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8018674:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8018678:	428b      	cmp	r3, r1
 801867a:	bf38      	it	cc
 801867c:	3208      	addcc	r2, #8
 801867e:	f103 0301 	add.w	r3, r3, #1
 8018682:	bf38      	it	cc
 8018684:	6102      	strcc	r2, [r0, #16]
 8018686:	6083      	str	r3, [r0, #8]
 8018688:	6903      	ldr	r3, [r0, #16]
 801868a:	9a03      	ldr	r2, [sp, #12]
 801868c:	f8a3 e000 	strh.w	lr, [r3]
 8018690:	805a      	strh	r2, [r3, #2]
 8018692:	2200      	movs	r2, #0
 8018694:	809a      	strh	r2, [r3, #4]
 8018696:	80da      	strh	r2, [r3, #6]
 8018698:	e017      	b.n	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801869a:	9c05      	ldr	r4, [sp, #20]
 801869c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80186a0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80186a4:	f004 041f 	and.w	r4, r4, #31
 80186a8:	114e      	asrs	r6, r1, #5
 80186aa:	9402      	str	r4, [sp, #8]
 80186ac:	9c04      	ldr	r4, [sp, #16]
 80186ae:	4576      	cmp	r6, lr
 80186b0:	f001 0c1f 	and.w	ip, r1, #31
 80186b4:	eba4 0403 	sub.w	r4, r4, r3
 80186b8:	d10a      	bne.n	80186d0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80186ba:	9b02      	ldr	r3, [sp, #8]
 80186bc:	449c      	add	ip, r3
 80186be:	44a0      	add	r8, r4
 80186c0:	fb04 a40c 	mla	r4, r4, ip, sl
 80186c4:	f8a2 8004 	strh.w	r8, [r2, #4]
 80186c8:	80d4      	strh	r4, [r2, #6]
 80186ca:	b013      	add	sp, #76	@ 0x4c
 80186cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186d0:	9d05      	ldr	r5, [sp, #20]
 80186d2:	1a69      	subs	r1, r5, r1
 80186d4:	bf5b      	ittet	pl
 80186d6:	f1cc 0520 	rsbpl	r5, ip, #32
 80186da:	436c      	mulpl	r4, r5
 80186dc:	2500      	movmi	r5, #0
 80186de:	2520      	movpl	r5, #32
 80186e0:	bf44      	itt	mi
 80186e2:	fb04 f40c 	mulmi.w	r4, r4, ip
 80186e6:	4249      	negmi	r1, r1
 80186e8:	9501      	str	r5, [sp, #4]
 80186ea:	9f01      	ldr	r7, [sp, #4]
 80186ec:	fb94 f5f1 	sdiv	r5, r4, r1
 80186f0:	fb01 4415 	mls	r4, r1, r5, r4
 80186f4:	bf54      	ite	pl
 80186f6:	f04f 0901 	movpl.w	r9, #1
 80186fa:	f04f 39ff 	movmi.w	r9, #4294967295
 80186fe:	2c00      	cmp	r4, #0
 8018700:	bfb8      	it	lt
 8018702:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8018706:	44bc      	add	ip, r7
 8018708:	44a8      	add	r8, r5
 801870a:	fb05 ac0c 	mla	ip, r5, ip, sl
 801870e:	f8a2 8004 	strh.w	r8, [r2, #4]
 8018712:	f8a2 c006 	strh.w	ip, [r2, #6]
 8018716:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801871a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801871e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8018722:	bfb8      	it	lt
 8018724:	1864      	addlt	r4, r4, r1
 8018726:	ea58 0202 	orrs.w	r2, r8, r2
 801872a:	444e      	add	r6, r9
 801872c:	d011      	beq.n	8018752 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801872e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8018732:	f1b8 0f00 	cmp.w	r8, #0
 8018736:	db0c      	blt.n	8018752 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8018738:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 801873a:	4590      	cmp	r8, r2
 801873c:	da09      	bge.n	8018752 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801873e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8018742:	4590      	cmp	r8, r2
 8018744:	bf3c      	itt	cc
 8018746:	f10c 0208 	addcc.w	r2, ip, #8
 801874a:	6102      	strcc	r2, [r0, #16]
 801874c:	f108 0201 	add.w	r2, r8, #1
 8018750:	6082      	str	r2, [r0, #8]
 8018752:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018756:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801875a:	f8ac 6000 	strh.w	r6, [ip]
 801875e:	2700      	movs	r7, #0
 8018760:	45b6      	cmp	lr, r6
 8018762:	f8ac 2002 	strh.w	r2, [ip, #2]
 8018766:	f8ac 7004 	strh.w	r7, [ip, #4]
 801876a:	f8ac 7006 	strh.w	r7, [ip, #6]
 801876e:	442b      	add	r3, r5
 8018770:	d04d      	beq.n	801880e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8018772:	9f04      	ldr	r7, [sp, #16]
 8018774:	1aff      	subs	r7, r7, r3
 8018776:	443d      	add	r5, r7
 8018778:	016d      	lsls	r5, r5, #5
 801877a:	fb95 f8f1 	sdiv	r8, r5, r1
 801877e:	fb01 5518 	mls	r5, r1, r8, r5
 8018782:	2d00      	cmp	r5, #0
 8018784:	bfb8      	it	lt
 8018786:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801878a:	f108 0701 	add.w	r7, r8, #1
 801878e:	bfb8      	it	lt
 8018790:	186d      	addlt	r5, r5, r1
 8018792:	1a64      	subs	r4, r4, r1
 8018794:	9703      	str	r7, [sp, #12]
 8018796:	f04f 0a00 	mov.w	sl, #0
 801879a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801879e:	1964      	adds	r4, r4, r5
 80187a0:	bf58      	it	pl
 80187a2:	9f03      	ldrpl	r7, [sp, #12]
 80187a4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80187a8:	bf48      	it	mi
 80187aa:	4647      	movmi	r7, r8
 80187ac:	44bb      	add	fp, r7
 80187ae:	f8ac b004 	strh.w	fp, [ip, #4]
 80187b2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80187b6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80187ba:	f8ac b006 	strh.w	fp, [ip, #6]
 80187be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80187c2:	443b      	add	r3, r7
 80187c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80187c8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80187cc:	bf58      	it	pl
 80187ce:	1a64      	subpl	r4, r4, r1
 80187d0:	ea5b 0707 	orrs.w	r7, fp, r7
 80187d4:	444e      	add	r6, r9
 80187d6:	d011      	beq.n	80187fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80187d8:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80187dc:	f1bb 0f00 	cmp.w	fp, #0
 80187e0:	db0c      	blt.n	80187fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80187e2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80187e4:	45bb      	cmp	fp, r7
 80187e6:	da09      	bge.n	80187fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80187e8:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80187ec:	45bb      	cmp	fp, r7
 80187ee:	bf3c      	itt	cc
 80187f0:	f10c 0708 	addcc.w	r7, ip, #8
 80187f4:	6107      	strcc	r7, [r0, #16]
 80187f6:	f10b 0701 	add.w	r7, fp, #1
 80187fa:	6087      	str	r7, [r0, #8]
 80187fc:	6907      	ldr	r7, [r0, #16]
 80187fe:	45b6      	cmp	lr, r6
 8018800:	803e      	strh	r6, [r7, #0]
 8018802:	807a      	strh	r2, [r7, #2]
 8018804:	f8a7 a004 	strh.w	sl, [r7, #4]
 8018808:	f8a7 a006 	strh.w	sl, [r7, #6]
 801880c:	d1c5      	bne.n	801879a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801880e:	9a04      	ldr	r2, [sp, #16]
 8018810:	1ad3      	subs	r3, r2, r3
 8018812:	6902      	ldr	r2, [r0, #16]
 8018814:	8891      	ldrh	r1, [r2, #4]
 8018816:	88d6      	ldrh	r6, [r2, #6]
 8018818:	4419      	add	r1, r3
 801881a:	8091      	strh	r1, [r2, #4]
 801881c:	9902      	ldr	r1, [sp, #8]
 801881e:	f101 0c20 	add.w	ip, r1, #32
 8018822:	9901      	ldr	r1, [sp, #4]
 8018824:	ebac 0c01 	sub.w	ip, ip, r1
 8018828:	fb03 630c 	mla	r3, r3, ip, r6
 801882c:	80d3      	strh	r3, [r2, #6]
 801882e:	e74c      	b.n	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018830:	9d05      	ldr	r5, [sp, #20]
 8018832:	1aa2      	subs	r2, r4, r2
 8018834:	eba5 0501 	sub.w	r5, r5, r1
 8018838:	9508      	str	r5, [sp, #32]
 801883a:	9202      	str	r2, [sp, #8]
 801883c:	f140 8128 	bpl.w	8018a90 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8018840:	9a03      	ldr	r2, [sp, #12]
 8018842:	2a00      	cmp	r2, #0
 8018844:	f6ff af41 	blt.w	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018848:	9a02      	ldr	r2, [sp, #8]
 801884a:	4252      	negs	r2, r2
 801884c:	9202      	str	r2, [sp, #8]
 801884e:	9a06      	ldr	r2, [sp, #24]
 8018850:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8018854:	f04f 34ff 	mov.w	r4, #4294967295
 8018858:	9206      	str	r2, [sp, #24]
 801885a:	462a      	mov	r2, r5
 801885c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801885e:	435a      	muls	r2, r3
 8018860:	2400      	movs	r4, #0
 8018862:	9d02      	ldr	r5, [sp, #8]
 8018864:	9401      	str	r4, [sp, #4]
 8018866:	9c02      	ldr	r4, [sp, #8]
 8018868:	fb92 f4f4 	sdiv	r4, r2, r4
 801886c:	fb05 2214 	mls	r2, r5, r4, r2
 8018870:	2a00      	cmp	r2, #0
 8018872:	9207      	str	r2, [sp, #28]
 8018874:	bfbc      	itt	lt
 8018876:	1952      	addlt	r2, r2, r5
 8018878:	9207      	strlt	r2, [sp, #28]
 801887a:	9a01      	ldr	r2, [sp, #4]
 801887c:	6905      	ldr	r5, [r0, #16]
 801887e:	bfb8      	it	lt
 8018880:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8018884:	eb04 0901 	add.w	r9, r4, r1
 8018888:	429a      	cmp	r2, r3
 801888a:	ea4f 1669 	mov.w	r6, r9, asr #5
 801888e:	f040 8112 	bne.w	8018ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8018892:	f9b5 3000 	ldrsh.w	r3, [r5]
 8018896:	429e      	cmp	r6, r3
 8018898:	d104      	bne.n	80188a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801889a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801889e:	9a03      	ldr	r2, [sp, #12]
 80188a0:	429a      	cmp	r2, r3
 80188a2:	d01b      	beq.n	80188dc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80188a4:	88ea      	ldrh	r2, [r5, #6]
 80188a6:	88ab      	ldrh	r3, [r5, #4]
 80188a8:	4313      	orrs	r3, r2
 80188aa:	d010      	beq.n	80188ce <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80188ac:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80188b0:	2a00      	cmp	r2, #0
 80188b2:	db0c      	blt.n	80188ce <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80188b4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80188b6:	429a      	cmp	r2, r3
 80188b8:	da09      	bge.n	80188ce <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80188ba:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80188be:	429a      	cmp	r2, r3
 80188c0:	bf38      	it	cc
 80188c2:	3508      	addcc	r5, #8
 80188c4:	f102 0201 	add.w	r2, r2, #1
 80188c8:	bf38      	it	cc
 80188ca:	6105      	strcc	r5, [r0, #16]
 80188cc:	6082      	str	r2, [r0, #8]
 80188ce:	6903      	ldr	r3, [r0, #16]
 80188d0:	9a03      	ldr	r2, [sp, #12]
 80188d2:	805a      	strh	r2, [r3, #2]
 80188d4:	2200      	movs	r2, #0
 80188d6:	801e      	strh	r6, [r3, #0]
 80188d8:	809a      	strh	r2, [r3, #4]
 80188da:	80da      	strh	r2, [r3, #6]
 80188dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80188de:	9a03      	ldr	r2, [sp, #12]
 80188e0:	6901      	ldr	r1, [r0, #16]
 80188e2:	441a      	add	r2, r3
 80188e4:	f9b1 3000 	ldrsh.w	r3, [r1]
 80188e8:	42b3      	cmp	r3, r6
 80188ea:	d103      	bne.n	80188f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80188ec:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80188f0:	429a      	cmp	r2, r3
 80188f2:	d01a      	beq.n	801892a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80188f4:	88cc      	ldrh	r4, [r1, #6]
 80188f6:	888b      	ldrh	r3, [r1, #4]
 80188f8:	4323      	orrs	r3, r4
 80188fa:	d010      	beq.n	801891e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80188fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8018900:	2c00      	cmp	r4, #0
 8018902:	db0c      	blt.n	801891e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8018904:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8018906:	429c      	cmp	r4, r3
 8018908:	da09      	bge.n	801891e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801890a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801890e:	429c      	cmp	r4, r3
 8018910:	bf38      	it	cc
 8018912:	3108      	addcc	r1, #8
 8018914:	f104 0401 	add.w	r4, r4, #1
 8018918:	bf38      	it	cc
 801891a:	6101      	strcc	r1, [r0, #16]
 801891c:	6084      	str	r4, [r0, #8]
 801891e:	6903      	ldr	r3, [r0, #16]
 8018920:	2100      	movs	r1, #0
 8018922:	801e      	strh	r6, [r3, #0]
 8018924:	805a      	strh	r2, [r3, #2]
 8018926:	8099      	strh	r1, [r3, #4]
 8018928:	80d9      	strh	r1, [r3, #6]
 801892a:	9b06      	ldr	r3, [sp, #24]
 801892c:	4293      	cmp	r3, r2
 801892e:	f000 8082 	beq.w	8018a36 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8018932:	9b08      	ldr	r3, [sp, #32]
 8018934:	9c02      	ldr	r4, [sp, #8]
 8018936:	9902      	ldr	r1, [sp, #8]
 8018938:	015b      	lsls	r3, r3, #5
 801893a:	fb93 f1f1 	sdiv	r1, r3, r1
 801893e:	fb04 3311 	mls	r3, r4, r1, r3
 8018942:	2b00      	cmp	r3, #0
 8018944:	9103      	str	r1, [sp, #12]
 8018946:	9308      	str	r3, [sp, #32]
 8018948:	da04      	bge.n	8018954 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801894a:	1e4b      	subs	r3, r1, #1
 801894c:	9303      	str	r3, [sp, #12]
 801894e:	9b08      	ldr	r3, [sp, #32]
 8018950:	4423      	add	r3, r4
 8018952:	9308      	str	r3, [sp, #32]
 8018954:	9b07      	ldr	r3, [sp, #28]
 8018956:	9902      	ldr	r1, [sp, #8]
 8018958:	1a5b      	subs	r3, r3, r1
 801895a:	9307      	str	r3, [sp, #28]
 801895c:	9b01      	ldr	r3, [sp, #4]
 801895e:	f1c3 0320 	rsb	r3, r3, #32
 8018962:	930e      	str	r3, [sp, #56]	@ 0x38
 8018964:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018966:	9b01      	ldr	r3, [sp, #4]
 8018968:	1a5b      	subs	r3, r3, r1
 801896a:	464f      	mov	r7, r9
 801896c:	930a      	str	r3, [sp, #40]	@ 0x28
 801896e:	2600      	movs	r6, #0
 8018970:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8018974:	185b      	adds	r3, r3, r1
 8018976:	bf58      	it	pl
 8018978:	9902      	ldrpl	r1, [sp, #8]
 801897a:	9307      	str	r3, [sp, #28]
 801897c:	bf5d      	ittte	pl
 801897e:	1a5b      	subpl	r3, r3, r1
 8018980:	9307      	strpl	r3, [sp, #28]
 8018982:	9b03      	ldrpl	r3, [sp, #12]
 8018984:	9903      	ldrmi	r1, [sp, #12]
 8018986:	bf58      	it	pl
 8018988:	1c59      	addpl	r1, r3, #1
 801898a:	4489      	add	r9, r1
 801898c:	2a00      	cmp	r2, #0
 801898e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8018992:	db2e      	blt.n	80189f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8018994:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8018996:	4293      	cmp	r3, r2
 8018998:	dd2b      	ble.n	80189f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801899a:	9c01      	ldr	r4, [sp, #4]
 801899c:	6905      	ldr	r5, [r0, #16]
 801899e:	46a0      	mov	r8, r4
 80189a0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80189a2:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80189a6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80189aa:	45a0      	cmp	r8, r4
 80189ac:	f040 814f 	bne.w	8018c4e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80189b0:	f9b5 1000 	ldrsh.w	r1, [r5]
 80189b4:	4551      	cmp	r1, sl
 80189b6:	d103      	bne.n	80189c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80189b8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80189bc:	4291      	cmp	r1, r2
 80189be:	d018      	beq.n	80189f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80189c0:	ea5c 010e 	orrs.w	r1, ip, lr
 80189c4:	d00f      	beq.n	80189e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80189c6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80189ca:	2900      	cmp	r1, #0
 80189cc:	db0b      	blt.n	80189e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80189ce:	428b      	cmp	r3, r1
 80189d0:	dd09      	ble.n	80189e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80189d2:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80189d6:	4299      	cmp	r1, r3
 80189d8:	bf38      	it	cc
 80189da:	3508      	addcc	r5, #8
 80189dc:	f101 0101 	add.w	r1, r1, #1
 80189e0:	bf38      	it	cc
 80189e2:	6105      	strcc	r5, [r0, #16]
 80189e4:	6081      	str	r1, [r0, #8]
 80189e6:	6903      	ldr	r3, [r0, #16]
 80189e8:	f8a3 a000 	strh.w	sl, [r3]
 80189ec:	805a      	strh	r2, [r3, #2]
 80189ee:	809e      	strh	r6, [r3, #4]
 80189f0:	80de      	strh	r6, [r3, #6]
 80189f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80189f4:	6901      	ldr	r1, [r0, #16]
 80189f6:	441a      	add	r2, r3
 80189f8:	88cc      	ldrh	r4, [r1, #6]
 80189fa:	888b      	ldrh	r3, [r1, #4]
 80189fc:	4323      	orrs	r3, r4
 80189fe:	d010      	beq.n	8018a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8018a00:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8018a04:	2c00      	cmp	r4, #0
 8018a06:	db0c      	blt.n	8018a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8018a08:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8018a0a:	429c      	cmp	r4, r3
 8018a0c:	da09      	bge.n	8018a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8018a0e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8018a12:	429c      	cmp	r4, r3
 8018a14:	bf38      	it	cc
 8018a16:	3108      	addcc	r1, #8
 8018a18:	f104 0401 	add.w	r4, r4, #1
 8018a1c:	bf38      	it	cc
 8018a1e:	6101      	strcc	r1, [r0, #16]
 8018a20:	6084      	str	r4, [r0, #8]
 8018a22:	6903      	ldr	r3, [r0, #16]
 8018a24:	f8a3 a000 	strh.w	sl, [r3]
 8018a28:	805a      	strh	r2, [r3, #2]
 8018a2a:	809e      	strh	r6, [r3, #4]
 8018a2c:	80de      	strh	r6, [r3, #6]
 8018a2e:	9b06      	ldr	r3, [sp, #24]
 8018a30:	4293      	cmp	r3, r2
 8018a32:	464f      	mov	r7, r9
 8018a34:	d19c      	bne.n	8018970 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8018a36:	9b01      	ldr	r3, [sp, #4]
 8018a38:	6907      	ldr	r7, [r0, #16]
 8018a3a:	f1c3 0620 	rsb	r6, r3, #32
 8018a3e:	9b05      	ldr	r3, [sp, #20]
 8018a40:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8018a44:	9b04      	ldr	r3, [sp, #16]
 8018a46:	429e      	cmp	r6, r3
 8018a48:	f040 81cc 	bne.w	8018de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8018a4c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8018a50:	459e      	cmp	lr, r3
 8018a52:	d104      	bne.n	8018a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8018a54:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8018a58:	429a      	cmp	r2, r3
 8018a5a:	f43f ae36 	beq.w	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018a5e:	88f9      	ldrh	r1, [r7, #6]
 8018a60:	88bb      	ldrh	r3, [r7, #4]
 8018a62:	430b      	orrs	r3, r1
 8018a64:	d010      	beq.n	8018a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8018a66:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8018a6a:	2b00      	cmp	r3, #0
 8018a6c:	db0c      	blt.n	8018a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8018a6e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8018a70:	428b      	cmp	r3, r1
 8018a72:	da09      	bge.n	8018a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8018a74:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8018a78:	428b      	cmp	r3, r1
 8018a7a:	bf38      	it	cc
 8018a7c:	3708      	addcc	r7, #8
 8018a7e:	f103 0301 	add.w	r3, r3, #1
 8018a82:	bf38      	it	cc
 8018a84:	6107      	strcc	r7, [r0, #16]
 8018a86:	6083      	str	r3, [r0, #8]
 8018a88:	6903      	ldr	r3, [r0, #16]
 8018a8a:	f8a3 e000 	strh.w	lr, [r3]
 8018a8e:	e5ff      	b.n	8018690 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8018a90:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8018a92:	9c03      	ldr	r4, [sp, #12]
 8018a94:	42a2      	cmp	r2, r4
 8018a96:	f6ff ae18 	blt.w	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018a9a:	9c06      	ldr	r4, [sp, #24]
 8018a9c:	42a2      	cmp	r2, r4
 8018a9e:	bfb8      	it	lt
 8018aa0:	3201      	addlt	r2, #1
 8018aa2:	9c08      	ldr	r4, [sp, #32]
 8018aa4:	bfb8      	it	lt
 8018aa6:	9206      	strlt	r2, [sp, #24]
 8018aa8:	f1c3 0220 	rsb	r2, r3, #32
 8018aac:	4362      	muls	r2, r4
 8018aae:	2401      	movs	r4, #1
 8018ab0:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018ab2:	2420      	movs	r4, #32
 8018ab4:	e6d5      	b.n	8018862 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8018ab6:	f009 021f 	and.w	r2, r9, #31
 8018aba:	ea4f 1861 	mov.w	r8, r1, asr #5
 8018abe:	920c      	str	r2, [sp, #48]	@ 0x30
 8018ac0:	9a01      	ldr	r2, [sp, #4]
 8018ac2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8018ac6:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8018aca:	45b0      	cmp	r8, r6
 8018acc:	f001 011f 	and.w	r1, r1, #31
 8018ad0:	eba2 0203 	sub.w	r2, r2, r3
 8018ad4:	d108      	bne.n	8018ae8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8018ad6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018ad8:	4419      	add	r1, r3
 8018ada:	4496      	add	lr, r2
 8018adc:	fb02 a101 	mla	r1, r2, r1, sl
 8018ae0:	f8a5 e004 	strh.w	lr, [r5, #4]
 8018ae4:	80e9      	strh	r1, [r5, #6]
 8018ae6:	e6f9      	b.n	80188dc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8018ae8:	2c00      	cmp	r4, #0
 8018aea:	f2c0 80a9 	blt.w	8018c40 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8018aee:	2701      	movs	r7, #1
 8018af0:	f1c1 0c20 	rsb	ip, r1, #32
 8018af4:	970a      	str	r7, [sp, #40]	@ 0x28
 8018af6:	fb02 f20c 	mul.w	r2, r2, ip
 8018afa:	2720      	movs	r7, #32
 8018afc:	9709      	str	r7, [sp, #36]	@ 0x24
 8018afe:	fb92 fcf4 	sdiv	ip, r2, r4
 8018b02:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8018b04:	fb04 221c 	mls	r2, r4, ip, r2
 8018b08:	2a00      	cmp	r2, #0
 8018b0a:	bfb8      	it	lt
 8018b0c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8018b10:	4439      	add	r1, r7
 8018b12:	fb0c a101 	mla	r1, ip, r1, sl
 8018b16:	80e9      	strh	r1, [r5, #6]
 8018b18:	44e6      	add	lr, ip
 8018b1a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8018b1c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8018b20:	eb08 0501 	add.w	r5, r8, r1
 8018b24:	6901      	ldr	r1, [r0, #16]
 8018b26:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8018b2a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8018b2e:	bfb8      	it	lt
 8018b30:	1912      	addlt	r2, r2, r4
 8018b32:	ea58 070e 	orrs.w	r7, r8, lr
 8018b36:	d010      	beq.n	8018b5a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8018b38:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8018b3c:	f1be 0f00 	cmp.w	lr, #0
 8018b40:	db0b      	blt.n	8018b5a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8018b42:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018b44:	45be      	cmp	lr, r7
 8018b46:	da08      	bge.n	8018b5a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8018b48:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8018b4c:	45be      	cmp	lr, r7
 8018b4e:	bf3c      	itt	cc
 8018b50:	3108      	addcc	r1, #8
 8018b52:	6101      	strcc	r1, [r0, #16]
 8018b54:	f10e 0101 	add.w	r1, lr, #1
 8018b58:	6081      	str	r1, [r0, #8]
 8018b5a:	6901      	ldr	r1, [r0, #16]
 8018b5c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8018b60:	800d      	strh	r5, [r1, #0]
 8018b62:	f04f 0e00 	mov.w	lr, #0
 8018b66:	42ae      	cmp	r6, r5
 8018b68:	f8a1 8002 	strh.w	r8, [r1, #2]
 8018b6c:	f8a1 e004 	strh.w	lr, [r1, #4]
 8018b70:	f8a1 e006 	strh.w	lr, [r1, #6]
 8018b74:	4463      	add	r3, ip
 8018b76:	d054      	beq.n	8018c22 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8018b78:	9901      	ldr	r1, [sp, #4]
 8018b7a:	1ac9      	subs	r1, r1, r3
 8018b7c:	4461      	add	r1, ip
 8018b7e:	0149      	lsls	r1, r1, #5
 8018b80:	fb91 fef4 	sdiv	lr, r1, r4
 8018b84:	fb04 111e 	mls	r1, r4, lr, r1
 8018b88:	2900      	cmp	r1, #0
 8018b8a:	bfb8      	it	lt
 8018b8c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8018b90:	f10e 0701 	add.w	r7, lr, #1
 8018b94:	bfb8      	it	lt
 8018b96:	1909      	addlt	r1, r1, r4
 8018b98:	1b12      	subs	r2, r2, r4
 8018b9a:	970d      	str	r7, [sp, #52]	@ 0x34
 8018b9c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8018ba0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8018ba2:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8018ba6:	1852      	adds	r2, r2, r1
 8018ba8:	bf54      	ite	pl
 8018baa:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 8018bae:	46f4      	movmi	ip, lr
 8018bb0:	44e3      	add	fp, ip
 8018bb2:	f8aa b004 	strh.w	fp, [sl, #4]
 8018bb6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8018bba:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8018bbe:	f8aa b006 	strh.w	fp, [sl, #6]
 8018bc2:	4463      	add	r3, ip
 8018bc4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018bc8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018bcc:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8018bd0:	bf58      	it	pl
 8018bd2:	1b12      	subpl	r2, r2, r4
 8018bd4:	443d      	add	r5, r7
 8018bd6:	ea5b 070a 	orrs.w	r7, fp, sl
 8018bda:	d014      	beq.n	8018c06 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8018bdc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8018be0:	f1ba 0f00 	cmp.w	sl, #0
 8018be4:	db0f      	blt.n	8018c06 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8018be6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018be8:	45ba      	cmp	sl, r7
 8018bea:	da0c      	bge.n	8018c06 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8018bec:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8018bf0:	45ba      	cmp	sl, r7
 8018bf2:	bf38      	it	cc
 8018bf4:	f10c 0c08 	addcc.w	ip, ip, #8
 8018bf8:	f10a 0a01 	add.w	sl, sl, #1
 8018bfc:	bf38      	it	cc
 8018bfe:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8018c02:	f8c0 a008 	str.w	sl, [r0, #8]
 8018c06:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018c0a:	f04f 0700 	mov.w	r7, #0
 8018c0e:	42ae      	cmp	r6, r5
 8018c10:	f8ac 5000 	strh.w	r5, [ip]
 8018c14:	f8ac 8002 	strh.w	r8, [ip, #2]
 8018c18:	f8ac 7004 	strh.w	r7, [ip, #4]
 8018c1c:	f8ac 7006 	strh.w	r7, [ip, #6]
 8018c20:	d1bc      	bne.n	8018b9c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8018c22:	6904      	ldr	r4, [r0, #16]
 8018c24:	9a01      	ldr	r2, [sp, #4]
 8018c26:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018c28:	1ad3      	subs	r3, r2, r3
 8018c2a:	88a2      	ldrh	r2, [r4, #4]
 8018c2c:	441a      	add	r2, r3
 8018c2e:	80a2      	strh	r2, [r4, #4]
 8018c30:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018c32:	3120      	adds	r1, #32
 8018c34:	1a89      	subs	r1, r1, r2
 8018c36:	88e2      	ldrh	r2, [r4, #6]
 8018c38:	fb03 2301 	mla	r3, r3, r1, r2
 8018c3c:	80e3      	strh	r3, [r4, #6]
 8018c3e:	e64d      	b.n	80188dc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8018c40:	f04f 37ff 	mov.w	r7, #4294967295
 8018c44:	970a      	str	r7, [sp, #40]	@ 0x28
 8018c46:	434a      	muls	r2, r1
 8018c48:	4264      	negs	r4, r4
 8018c4a:	2700      	movs	r7, #0
 8018c4c:	e756      	b.n	8018afc <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8018c4e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8018c52:	f009 031f 	and.w	r3, r9, #31
 8018c56:	45d0      	cmp	r8, sl
 8018c58:	f007 071f 	and.w	r7, r7, #31
 8018c5c:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018c5e:	fa1f fc8c 	uxth.w	ip, ip
 8018c62:	fa1f fe8e 	uxth.w	lr, lr
 8018c66:	d10a      	bne.n	8018c7e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8018c68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018c6a:	449c      	add	ip, r3
 8018c6c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018c6e:	f8a5 c004 	strh.w	ip, [r5, #4]
 8018c72:	441f      	add	r7, r3
 8018c74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018c76:	fb03 e707 	mla	r7, r3, r7, lr
 8018c7a:	80ef      	strh	r7, [r5, #6]
 8018c7c:	e6b9      	b.n	80189f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8018c7e:	2900      	cmp	r1, #0
 8018c80:	f2c0 80a8 	blt.w	8018dd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8018c84:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018c86:	f1c7 0320 	rsb	r3, r7, #32
 8018c8a:	4363      	muls	r3, r4
 8018c8c:	2401      	movs	r4, #1
 8018c8e:	940d      	str	r4, [sp, #52]	@ 0x34
 8018c90:	2420      	movs	r4, #32
 8018c92:	940c      	str	r4, [sp, #48]	@ 0x30
 8018c94:	fb93 f4f1 	sdiv	r4, r3, r1
 8018c98:	fb01 3b14 	mls	fp, r1, r4, r3
 8018c9c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018c9e:	f1bb 0f00 	cmp.w	fp, #0
 8018ca2:	bfb8      	it	lt
 8018ca4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8018ca8:	441f      	add	r7, r3
 8018caa:	fb04 e707 	mla	r7, r4, r7, lr
 8018cae:	44a4      	add	ip, r4
 8018cb0:	f8a5 c004 	strh.w	ip, [r5, #4]
 8018cb4:	80ef      	strh	r7, [r5, #6]
 8018cb6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018cba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018cbc:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8018cc0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8018cc4:	bfb8      	it	lt
 8018cc6:	448b      	addlt	fp, r1
 8018cc8:	eb08 0503 	add.w	r5, r8, r3
 8018ccc:	ea5e 0307 	orrs.w	r3, lr, r7
 8018cd0:	d011      	beq.n	8018cf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8018cd2:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8018cd6:	f1be 0f00 	cmp.w	lr, #0
 8018cda:	db0c      	blt.n	8018cf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8018cdc:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018cde:	45be      	cmp	lr, r7
 8018ce0:	da09      	bge.n	8018cf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8018ce2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8018ce6:	45be      	cmp	lr, r7
 8018ce8:	bf3c      	itt	cc
 8018cea:	f10c 0708 	addcc.w	r7, ip, #8
 8018cee:	6107      	strcc	r7, [r0, #16]
 8018cf0:	f10e 0701 	add.w	r7, lr, #1
 8018cf4:	6087      	str	r7, [r0, #8]
 8018cf6:	6907      	ldr	r7, [r0, #16]
 8018cf8:	b213      	sxth	r3, r2
 8018cfa:	9310      	str	r3, [sp, #64]	@ 0x40
 8018cfc:	807b      	strh	r3, [r7, #2]
 8018cfe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018d00:	803d      	strh	r5, [r7, #0]
 8018d02:	4555      	cmp	r5, sl
 8018d04:	80be      	strh	r6, [r7, #4]
 8018d06:	80fe      	strh	r6, [r7, #6]
 8018d08:	eb04 0c03 	add.w	ip, r4, r3
 8018d0c:	d051      	beq.n	8018db2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8018d0e:	9b01      	ldr	r3, [sp, #4]
 8018d10:	eba3 070c 	sub.w	r7, r3, ip
 8018d14:	443c      	add	r4, r7
 8018d16:	0164      	lsls	r4, r4, #5
 8018d18:	fb94 f8f1 	sdiv	r8, r4, r1
 8018d1c:	fb01 4418 	mls	r4, r1, r8, r4
 8018d20:	2c00      	cmp	r4, #0
 8018d22:	bfb8      	it	lt
 8018d24:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8018d28:	ebab 0301 	sub.w	r3, fp, r1
 8018d2c:	f108 0701 	add.w	r7, r8, #1
 8018d30:	bfb8      	it	lt
 8018d32:	1864      	addlt	r4, r4, r1
 8018d34:	9309      	str	r3, [sp, #36]	@ 0x24
 8018d36:	9711      	str	r7, [sp, #68]	@ 0x44
 8018d38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018d3a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8018d3e:	191b      	adds	r3, r3, r4
 8018d40:	bf58      	it	pl
 8018d42:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8018d44:	f8be b004 	ldrh.w	fp, [lr, #4]
 8018d48:	9309      	str	r3, [sp, #36]	@ 0x24
 8018d4a:	bf48      	it	mi
 8018d4c:	4647      	movmi	r7, r8
 8018d4e:	44bb      	add	fp, r7
 8018d50:	f8ae b004 	strh.w	fp, [lr, #4]
 8018d54:	f8be b006 	ldrh.w	fp, [lr, #6]
 8018d58:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8018d5c:	f8ae b006 	strh.w	fp, [lr, #6]
 8018d60:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8018d64:	44bc      	add	ip, r7
 8018d66:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8018d68:	f8be b006 	ldrh.w	fp, [lr, #6]
 8018d6c:	443d      	add	r5, r7
 8018d6e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8018d72:	bf5c      	itt	pl
 8018d74:	1a5b      	subpl	r3, r3, r1
 8018d76:	9309      	strpl	r3, [sp, #36]	@ 0x24
 8018d78:	ea5b 0307 	orrs.w	r3, fp, r7
 8018d7c:	d011      	beq.n	8018da2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8018d7e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8018d82:	f1bb 0f00 	cmp.w	fp, #0
 8018d86:	db0c      	blt.n	8018da2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8018d88:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018d8a:	45bb      	cmp	fp, r7
 8018d8c:	da09      	bge.n	8018da2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8018d8e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8018d92:	45bb      	cmp	fp, r7
 8018d94:	bf3c      	itt	cc
 8018d96:	f10e 0708 	addcc.w	r7, lr, #8
 8018d9a:	6107      	strcc	r7, [r0, #16]
 8018d9c:	f10b 0701 	add.w	r7, fp, #1
 8018da0:	6087      	str	r7, [r0, #8]
 8018da2:	6907      	ldr	r7, [r0, #16]
 8018da4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018da6:	803d      	strh	r5, [r7, #0]
 8018da8:	4555      	cmp	r5, sl
 8018daa:	807b      	strh	r3, [r7, #2]
 8018dac:	80be      	strh	r6, [r7, #4]
 8018dae:	80fe      	strh	r6, [r7, #6]
 8018db0:	d1c2      	bne.n	8018d38 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8018db2:	9b01      	ldr	r3, [sp, #4]
 8018db4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018db6:	eba3 0c0c 	sub.w	ip, r3, ip
 8018dba:	6903      	ldr	r3, [r0, #16]
 8018dbc:	8899      	ldrh	r1, [r3, #4]
 8018dbe:	4461      	add	r1, ip
 8018dc0:	8099      	strh	r1, [r3, #4]
 8018dc2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018dc4:	3720      	adds	r7, #32
 8018dc6:	1a7f      	subs	r7, r7, r1
 8018dc8:	88d9      	ldrh	r1, [r3, #6]
 8018dca:	fb0c 1c07 	mla	ip, ip, r7, r1
 8018dce:	f8a3 c006 	strh.w	ip, [r3, #6]
 8018dd2:	e60e      	b.n	80189f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8018dd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018dd6:	f04f 34ff 	mov.w	r4, #4294967295
 8018dda:	940d      	str	r4, [sp, #52]	@ 0x34
 8018ddc:	437b      	muls	r3, r7
 8018dde:	4249      	negs	r1, r1
 8018de0:	2400      	movs	r4, #0
 8018de2:	e756      	b.n	8018c92 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8018de4:	9905      	ldr	r1, [sp, #20]
 8018de6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8018dea:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8018dee:	f001 011f 	and.w	r1, r1, #31
 8018df2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8018df6:	9102      	str	r1, [sp, #8]
 8018df8:	9904      	ldr	r1, [sp, #16]
 8018dfa:	45f3      	cmp	fp, lr
 8018dfc:	f009 0c1f 	and.w	ip, r9, #31
 8018e00:	eba1 0406 	sub.w	r4, r1, r6
 8018e04:	d108      	bne.n	8018e18 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8018e06:	9b02      	ldr	r3, [sp, #8]
 8018e08:	449c      	add	ip, r3
 8018e0a:	44a0      	add	r8, r4
 8018e0c:	fb04 a40c 	mla	r4, r4, ip, sl
 8018e10:	f8a7 8004 	strh.w	r8, [r7, #4]
 8018e14:	80fc      	strh	r4, [r7, #6]
 8018e16:	e458      	b.n	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018e18:	9905      	ldr	r1, [sp, #20]
 8018e1a:	ebb1 0109 	subs.w	r1, r1, r9
 8018e1e:	bf5b      	ittet	pl
 8018e20:	f1cc 0520 	rsbpl	r5, ip, #32
 8018e24:	436c      	mulpl	r4, r5
 8018e26:	2500      	movmi	r5, #0
 8018e28:	2520      	movpl	r5, #32
 8018e2a:	bf44      	itt	mi
 8018e2c:	fb04 f40c 	mulmi.w	r4, r4, ip
 8018e30:	4249      	negmi	r1, r1
 8018e32:	9501      	str	r5, [sp, #4]
 8018e34:	9b01      	ldr	r3, [sp, #4]
 8018e36:	fb94 f5f1 	sdiv	r5, r4, r1
 8018e3a:	fb01 4415 	mls	r4, r1, r5, r4
 8018e3e:	bf54      	ite	pl
 8018e40:	f04f 0901 	movpl.w	r9, #1
 8018e44:	f04f 39ff 	movmi.w	r9, #4294967295
 8018e48:	2c00      	cmp	r4, #0
 8018e4a:	bfb8      	it	lt
 8018e4c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8018e50:	449c      	add	ip, r3
 8018e52:	44a8      	add	r8, r5
 8018e54:	fb05 ac0c 	mla	ip, r5, ip, sl
 8018e58:	f8a7 8004 	strh.w	r8, [r7, #4]
 8018e5c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8018e60:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018e64:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8018e68:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8018e6c:	bfb8      	it	lt
 8018e6e:	1864      	addlt	r4, r4, r1
 8018e70:	ea58 0707 	orrs.w	r7, r8, r7
 8018e74:	eb0b 0309 	add.w	r3, fp, r9
 8018e78:	d011      	beq.n	8018e9e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8018e7a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8018e7e:	f1b8 0f00 	cmp.w	r8, #0
 8018e82:	db0c      	blt.n	8018e9e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8018e84:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018e86:	45b8      	cmp	r8, r7
 8018e88:	da09      	bge.n	8018e9e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8018e8a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8018e8e:	45b8      	cmp	r8, r7
 8018e90:	bf3c      	itt	cc
 8018e92:	f10c 0708 	addcc.w	r7, ip, #8
 8018e96:	6107      	strcc	r7, [r0, #16]
 8018e98:	f108 0701 	add.w	r7, r8, #1
 8018e9c:	6087      	str	r7, [r0, #8]
 8018e9e:	6907      	ldr	r7, [r0, #16]
 8018ea0:	f04f 0c00 	mov.w	ip, #0
 8018ea4:	b212      	sxth	r2, r2
 8018ea6:	459e      	cmp	lr, r3
 8018ea8:	803b      	strh	r3, [r7, #0]
 8018eaa:	807a      	strh	r2, [r7, #2]
 8018eac:	f8a7 c004 	strh.w	ip, [r7, #4]
 8018eb0:	f8a7 c006 	strh.w	ip, [r7, #6]
 8018eb4:	442e      	add	r6, r5
 8018eb6:	d04d      	beq.n	8018f54 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8018eb8:	9f04      	ldr	r7, [sp, #16]
 8018eba:	1bbf      	subs	r7, r7, r6
 8018ebc:	443d      	add	r5, r7
 8018ebe:	016d      	lsls	r5, r5, #5
 8018ec0:	fb95 f8f1 	sdiv	r8, r5, r1
 8018ec4:	fb01 5518 	mls	r5, r1, r8, r5
 8018ec8:	4565      	cmp	r5, ip
 8018eca:	bfb8      	it	lt
 8018ecc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8018ed0:	f108 0701 	add.w	r7, r8, #1
 8018ed4:	bfb8      	it	lt
 8018ed6:	186d      	addlt	r5, r5, r1
 8018ed8:	1a64      	subs	r4, r4, r1
 8018eda:	9703      	str	r7, [sp, #12]
 8018edc:	f04f 0a00 	mov.w	sl, #0
 8018ee0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018ee4:	1964      	adds	r4, r4, r5
 8018ee6:	bf58      	it	pl
 8018ee8:	9f03      	ldrpl	r7, [sp, #12]
 8018eea:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8018eee:	bf48      	it	mi
 8018ef0:	4647      	movmi	r7, r8
 8018ef2:	44bb      	add	fp, r7
 8018ef4:	f8ac b004 	strh.w	fp, [ip, #4]
 8018ef8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018efc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8018f00:	f8ac b006 	strh.w	fp, [ip, #6]
 8018f04:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018f08:	443e      	add	r6, r7
 8018f0a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018f0e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8018f12:	bf58      	it	pl
 8018f14:	1a64      	subpl	r4, r4, r1
 8018f16:	ea5b 0707 	orrs.w	r7, fp, r7
 8018f1a:	444b      	add	r3, r9
 8018f1c:	d011      	beq.n	8018f42 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8018f1e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8018f22:	f1bb 0f00 	cmp.w	fp, #0
 8018f26:	db0c      	blt.n	8018f42 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8018f28:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018f2a:	45bb      	cmp	fp, r7
 8018f2c:	da09      	bge.n	8018f42 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8018f2e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8018f32:	45bb      	cmp	fp, r7
 8018f34:	bf3c      	itt	cc
 8018f36:	f10c 0708 	addcc.w	r7, ip, #8
 8018f3a:	6107      	strcc	r7, [r0, #16]
 8018f3c:	f10b 0701 	add.w	r7, fp, #1
 8018f40:	6087      	str	r7, [r0, #8]
 8018f42:	6907      	ldr	r7, [r0, #16]
 8018f44:	459e      	cmp	lr, r3
 8018f46:	803b      	strh	r3, [r7, #0]
 8018f48:	807a      	strh	r2, [r7, #2]
 8018f4a:	f8a7 a004 	strh.w	sl, [r7, #4]
 8018f4e:	f8a7 a006 	strh.w	sl, [r7, #6]
 8018f52:	d1c5      	bne.n	8018ee0 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8018f54:	9b04      	ldr	r3, [sp, #16]
 8018f56:	1b9e      	subs	r6, r3, r6
 8018f58:	6903      	ldr	r3, [r0, #16]
 8018f5a:	889a      	ldrh	r2, [r3, #4]
 8018f5c:	4432      	add	r2, r6
 8018f5e:	809a      	strh	r2, [r3, #4]
 8018f60:	9a02      	ldr	r2, [sp, #8]
 8018f62:	f102 0c20 	add.w	ip, r2, #32
 8018f66:	9a01      	ldr	r2, [sp, #4]
 8018f68:	ebac 0c02 	sub.w	ip, ip, r2
 8018f6c:	88da      	ldrh	r2, [r3, #6]
 8018f6e:	fb06 260c 	mla	r6, r6, ip, r2
 8018f72:	80de      	strh	r6, [r3, #6]
 8018f74:	f7ff bba9 	b.w	80186ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08018f78 <_ZN8touchgfx7Outline6lineToEii>:
 8018f78:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8018f7a:	079b      	lsls	r3, r3, #30
 8018f7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8018f7e:	460e      	mov	r6, r1
 8018f80:	4615      	mov	r5, r2
 8018f82:	d511      	bpl.n	8018fa8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8018f84:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8018f88:	ea86 0701 	eor.w	r7, r6, r1
 8018f8c:	ea85 0302 	eor.w	r3, r5, r2
 8018f90:	433b      	orrs	r3, r7
 8018f92:	d009      	beq.n	8018fa8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8018f94:	4633      	mov	r3, r6
 8018f96:	9500      	str	r5, [sp, #0]
 8018f98:	f7ff fb3e 	bl	8018618 <_ZN8touchgfx7Outline10renderLineEiiii>
 8018f9c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8018f9e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8018fa2:	f043 0301 	orr.w	r3, r3, #1
 8018fa6:	6243      	str	r3, [r0, #36]	@ 0x24
 8018fa8:	b003      	add	sp, #12
 8018faa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018fac <_ZN8touchgfx7Outline6moveToEii>:
 8018fac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018fae:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8018fb0:	4615      	mov	r5, r2
 8018fb2:	079a      	lsls	r2, r3, #30
 8018fb4:	4604      	mov	r4, r0
 8018fb6:	460e      	mov	r6, r1
 8018fb8:	d401      	bmi.n	8018fbe <_ZN8touchgfx7Outline6moveToEii+0x12>
 8018fba:	f7ff faf9 	bl	80185b0 <_ZN8touchgfx7Outline5resetEv>
 8018fbe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8018fc0:	07db      	lsls	r3, r3, #31
 8018fc2:	d504      	bpl.n	8018fce <_ZN8touchgfx7Outline6moveToEii+0x22>
 8018fc4:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8018fc8:	4620      	mov	r0, r4
 8018fca:	f7ff ffd5 	bl	8018f78 <_ZN8touchgfx7Outline6lineToEii>
 8018fce:	6923      	ldr	r3, [r4, #16]
 8018fd0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018fd4:	1170      	asrs	r0, r6, #5
 8018fd6:	4290      	cmp	r0, r2
 8018fd8:	ea4f 1165 	mov.w	r1, r5, asr #5
 8018fdc:	d103      	bne.n	8018fe6 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8018fde:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8018fe2:	4291      	cmp	r1, r2
 8018fe4:	d01a      	beq.n	801901c <_ZN8touchgfx7Outline6moveToEii+0x70>
 8018fe6:	88df      	ldrh	r7, [r3, #6]
 8018fe8:	889a      	ldrh	r2, [r3, #4]
 8018fea:	433a      	orrs	r2, r7
 8018fec:	d010      	beq.n	8019010 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8018fee:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8018ff2:	2a00      	cmp	r2, #0
 8018ff4:	db0c      	blt.n	8019010 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8018ff6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8018ff8:	42ba      	cmp	r2, r7
 8018ffa:	da09      	bge.n	8019010 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8018ffc:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8019000:	42ba      	cmp	r2, r7
 8019002:	bf38      	it	cc
 8019004:	3308      	addcc	r3, #8
 8019006:	f102 0201 	add.w	r2, r2, #1
 801900a:	bf38      	it	cc
 801900c:	6123      	strcc	r3, [r4, #16]
 801900e:	60a2      	str	r2, [r4, #8]
 8019010:	6923      	ldr	r3, [r4, #16]
 8019012:	2200      	movs	r2, #0
 8019014:	8018      	strh	r0, [r3, #0]
 8019016:	8059      	strh	r1, [r3, #2]
 8019018:	809a      	strh	r2, [r3, #4]
 801901a:	80da      	strh	r2, [r3, #6]
 801901c:	6166      	str	r6, [r4, #20]
 801901e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8019022:	6225      	str	r5, [r4, #32]
 8019024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019026 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8019026:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801902a:	b0d0      	sub	sp, #320	@ 0x140
 801902c:	466c      	mov	r4, sp
 801902e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8019032:	4627      	mov	r7, r4
 8019034:	1a0d      	subs	r5, r1, r0
 8019036:	2d48      	cmp	r5, #72	@ 0x48
 8019038:	f100 0308 	add.w	r3, r0, #8
 801903c:	f340 80d5 	ble.w	80191ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8019040:	112d      	asrs	r5, r5, #4
 8019042:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8019046:	f9b0 9000 	ldrsh.w	r9, [r0]
 801904a:	6816      	ldr	r6, [r2, #0]
 801904c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8019050:	6006      	str	r6, [r0, #0]
 8019052:	6856      	ldr	r6, [r2, #4]
 8019054:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8019058:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801905c:	6046      	str	r6, [r0, #4]
 801905e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8019062:	f8a2 8002 	strh.w	r8, [r2, #2]
 8019066:	f8a2 e004 	strh.w	lr, [r2, #4]
 801906a:	f8a2 c006 	strh.w	ip, [r2, #6]
 801906e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8019072:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8019076:	4565      	cmp	r5, ip
 8019078:	f1a1 0208 	sub.w	r2, r1, #8
 801907c:	db06      	blt.n	801908c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801907e:	d119      	bne.n	80190b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8019080:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8019084:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8019088:	42ae      	cmp	r6, r5
 801908a:	dd13      	ble.n	80190b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801908c:	460e      	mov	r6, r1
 801908e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8019092:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8019096:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801909a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801909e:	601d      	str	r5, [r3, #0]
 80190a0:	6875      	ldr	r5, [r6, #4]
 80190a2:	605d      	str	r5, [r3, #4]
 80190a4:	f821 9c08 	strh.w	r9, [r1, #-8]
 80190a8:	f821 cc06 	strh.w	ip, [r1, #-6]
 80190ac:	f821 8c04 	strh.w	r8, [r1, #-4]
 80190b0:	f821 ec02 	strh.w	lr, [r1, #-2]
 80190b4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80190b8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80190bc:	42ae      	cmp	r6, r5
 80190be:	db06      	blt.n	80190ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80190c0:	d116      	bne.n	80190f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80190c2:	f9b0 c000 	ldrsh.w	ip, [r0]
 80190c6:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80190ca:	45ac      	cmp	ip, r5
 80190cc:	da10      	bge.n	80190f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80190ce:	681d      	ldr	r5, [r3, #0]
 80190d0:	f9b0 8000 	ldrsh.w	r8, [r0]
 80190d4:	6005      	str	r5, [r0, #0]
 80190d6:	685d      	ldr	r5, [r3, #4]
 80190d8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80190dc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80190e0:	f8a0 8008 	strh.w	r8, [r0, #8]
 80190e4:	6045      	str	r5, [r0, #4]
 80190e6:	8146      	strh	r6, [r0, #10]
 80190e8:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80190ec:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80190f0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80190f4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80190f8:	4565      	cmp	r5, ip
 80190fa:	db06      	blt.n	801910a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80190fc:	d119      	bne.n	8019132 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80190fe:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8019102:	f9b0 5000 	ldrsh.w	r5, [r0]
 8019106:	42ae      	cmp	r6, r5
 8019108:	da13      	bge.n	8019132 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801910a:	460e      	mov	r6, r1
 801910c:	f9b0 9000 	ldrsh.w	r9, [r0]
 8019110:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8019114:	6005      	str	r5, [r0, #0]
 8019116:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801911a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801911e:	6875      	ldr	r5, [r6, #4]
 8019120:	6045      	str	r5, [r0, #4]
 8019122:	f821 9c08 	strh.w	r9, [r1, #-8]
 8019126:	f821 cc06 	strh.w	ip, [r1, #-6]
 801912a:	f821 8c04 	strh.w	r8, [r1, #-4]
 801912e:	f821 ec02 	strh.w	lr, [r1, #-2]
 8019132:	3308      	adds	r3, #8
 8019134:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8019138:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801913c:	45e6      	cmp	lr, ip
 801913e:	dbf8      	blt.n	8019132 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8019140:	d105      	bne.n	801914e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8019142:	f9b3 6000 	ldrsh.w	r6, [r3]
 8019146:	f9b0 5000 	ldrsh.w	r5, [r0]
 801914a:	42ae      	cmp	r6, r5
 801914c:	dbf1      	blt.n	8019132 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801914e:	4615      	mov	r5, r2
 8019150:	3a08      	subs	r2, #8
 8019152:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8019156:	45b4      	cmp	ip, r6
 8019158:	dbf9      	blt.n	801914e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801915a:	d105      	bne.n	8019168 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 801915c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8019160:	f9b2 6000 	ldrsh.w	r6, [r2]
 8019164:	45b0      	cmp	r8, r6
 8019166:	dbf2      	blt.n	801914e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8019168:	4293      	cmp	r3, r2
 801916a:	f1a5 0608 	sub.w	r6, r5, #8
 801916e:	d816      	bhi.n	801919e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8019170:	f8d6 c000 	ldr.w	ip, [r6]
 8019174:	f9b3 a000 	ldrsh.w	sl, [r3]
 8019178:	f8c3 c000 	str.w	ip, [r3]
 801917c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8019180:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8019184:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8019188:	f8c3 c004 	str.w	ip, [r3, #4]
 801918c:	f825 ac08 	strh.w	sl, [r5, #-8]
 8019190:	f825 ec06 	strh.w	lr, [r5, #-6]
 8019194:	f825 9c04 	strh.w	r9, [r5, #-4]
 8019198:	f825 8c02 	strh.w	r8, [r5, #-2]
 801919c:	e7c9      	b.n	8019132 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801919e:	f8d6 e000 	ldr.w	lr, [r6]
 80191a2:	f9b0 a000 	ldrsh.w	sl, [r0]
 80191a6:	f8c0 e000 	str.w	lr, [r0]
 80191aa:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80191ae:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80191b2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80191b6:	f8c0 e004 	str.w	lr, [r0, #4]
 80191ba:	f825 ac08 	strh.w	sl, [r5, #-8]
 80191be:	f825 cc06 	strh.w	ip, [r5, #-6]
 80191c2:	f825 9c04 	strh.w	r9, [r5, #-4]
 80191c6:	f825 8c02 	strh.w	r8, [r5, #-2]
 80191ca:	1acd      	subs	r5, r1, r3
 80191cc:	1a16      	subs	r6, r2, r0
 80191ce:	10ed      	asrs	r5, r5, #3
 80191d0:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80191d4:	bfb5      	itete	lt
 80191d6:	e9c4 0200 	strdlt	r0, r2, [r4]
 80191da:	e9c4 3100 	strdge	r3, r1, [r4]
 80191de:	460a      	movlt	r2, r1
 80191e0:	4603      	movge	r3, r0
 80191e2:	3408      	adds	r4, #8
 80191e4:	4618      	mov	r0, r3
 80191e6:	4611      	mov	r1, r2
 80191e8:	e724      	b.n	8019034 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80191ea:	4299      	cmp	r1, r3
 80191ec:	d928      	bls.n	8019240 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80191ee:	f1a3 0210 	sub.w	r2, r3, #16
 80191f2:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80191f6:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80191fa:	45ac      	cmp	ip, r5
 80191fc:	db06      	blt.n	801920c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80191fe:	d11d      	bne.n	801923c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8019200:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8019204:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8019208:	42ae      	cmp	r6, r5
 801920a:	da17      	bge.n	801923c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801920c:	4615      	mov	r5, r2
 801920e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8019212:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8019216:	6116      	str	r6, [r2, #16]
 8019218:	686e      	ldr	r6, [r5, #4]
 801921a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801921e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8019222:	f8a2 9008 	strh.w	r9, [r2, #8]
 8019226:	42a8      	cmp	r0, r5
 8019228:	6156      	str	r6, [r2, #20]
 801922a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801922e:	f8a2 800c 	strh.w	r8, [r2, #12]
 8019232:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8019236:	f1a2 0208 	sub.w	r2, r2, #8
 801923a:	d1da      	bne.n	80191f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 801923c:	3308      	adds	r3, #8
 801923e:	e7d4      	b.n	80191ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8019240:	42bc      	cmp	r4, r7
 8019242:	d903      	bls.n	801924c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8019244:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8019248:	3c08      	subs	r4, #8
 801924a:	e6f3      	b.n	8019034 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801924c:	b050      	add	sp, #320	@ 0x140
 801924e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019252 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8019252:	b510      	push	{r4, lr}
 8019254:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019256:	07da      	lsls	r2, r3, #31
 8019258:	4604      	mov	r4, r0
 801925a:	d507      	bpl.n	801926c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801925c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8019260:	f7ff fe8a 	bl	8018f78 <_ZN8touchgfx7Outline6lineToEii>
 8019264:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019266:	f023 0301 	bic.w	r3, r3, #1
 801926a:	6243      	str	r3, [r0, #36]	@ 0x24
 801926c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801926e:	079b      	lsls	r3, r3, #30
 8019270:	d521      	bpl.n	80192b6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8019272:	6923      	ldr	r3, [r4, #16]
 8019274:	88d9      	ldrh	r1, [r3, #6]
 8019276:	889a      	ldrh	r2, [r3, #4]
 8019278:	430a      	orrs	r2, r1
 801927a:	d010      	beq.n	801929e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801927c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8019280:	2a00      	cmp	r2, #0
 8019282:	db0c      	blt.n	801929e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8019284:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8019286:	428a      	cmp	r2, r1
 8019288:	da09      	bge.n	801929e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801928a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801928e:	4291      	cmp	r1, r2
 8019290:	bf88      	it	hi
 8019292:	3308      	addhi	r3, #8
 8019294:	f102 0201 	add.w	r2, r2, #1
 8019298:	bf88      	it	hi
 801929a:	6123      	strhi	r3, [r4, #16]
 801929c:	60a2      	str	r2, [r4, #8]
 801929e:	68a1      	ldr	r1, [r4, #8]
 80192a0:	b129      	cbz	r1, 80192ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80192a2:	6863      	ldr	r3, [r4, #4]
 80192a4:	4299      	cmp	r1, r3
 80192a6:	d802      	bhi.n	80192ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80192a8:	68e0      	ldr	r0, [r4, #12]
 80192aa:	f7ff febc 	bl	8019026 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80192ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80192b0:	f023 0302 	bic.w	r3, r3, #2
 80192b4:	6263      	str	r3, [r4, #36]	@ 0x24
 80192b6:	68e0      	ldr	r0, [r4, #12]
 80192b8:	bd10      	pop	{r4, pc}
	...

080192bc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80192bc:	4b01      	ldr	r3, [pc, #4]	@ (80192c4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80192be:	6818      	ldr	r0, [r3, #0]
 80192c0:	4770      	bx	lr
 80192c2:	bf00      	nop
 80192c4:	2001388c 	.word	0x2001388c

080192c8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80192c8:	4b01      	ldr	r3, [pc, #4]	@ (80192d0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80192ca:	6818      	ldr	r0, [r3, #0]
 80192cc:	4770      	bx	lr
 80192ce:	bf00      	nop
 80192d0:	20013890 	.word	0x20013890

080192d4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80192d4:	b510      	push	{r4, lr}
 80192d6:	6803      	ldr	r3, [r0, #0]
 80192d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80192da:	460c      	mov	r4, r1
 80192dc:	4798      	blx	r3
 80192de:	1b03      	subs	r3, r0, r4
 80192e0:	4258      	negs	r0, r3
 80192e2:	4158      	adcs	r0, r3
 80192e4:	bd10      	pop	{r4, pc}
	...

080192e8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80192e8:	4b01      	ldr	r3, [pc, #4]	@ (80192f0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80192ea:	6019      	str	r1, [r3, #0]
 80192ec:	4770      	bx	lr
 80192ee:	bf00      	nop
 80192f0:	20013894 	.word	0x20013894

080192f4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80192f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192f8:	4696      	mov	lr, r2
 80192fa:	4605      	mov	r5, r0
 80192fc:	4614      	mov	r4, r2
 80192fe:	460e      	mov	r6, r1
 8019300:	461f      	mov	r7, r3
 8019302:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019306:	b097      	sub	sp, #92	@ 0x5c
 8019308:	f10d 0c1c 	add.w	ip, sp, #28
 801930c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019310:	f8de 3000 	ldr.w	r3, [lr]
 8019314:	f8cc 3000 	str.w	r3, [ip]
 8019318:	f104 0e14 	add.w	lr, r4, #20
 801931c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019320:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8019324:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019328:	f8de 3000 	ldr.w	r3, [lr]
 801932c:	f8cc 3000 	str.w	r3, [ip]
 8019330:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8019334:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019338:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 801933c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019340:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8019344:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8019348:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 801934c:	f8de 3000 	ldr.w	r3, [lr]
 8019350:	f8cc 3000 	str.w	r3, [ip]
 8019354:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019356:	682b      	ldr	r3, [r5, #0]
 8019358:	9201      	str	r2, [sp, #4]
 801935a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801935e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019360:	9200      	str	r2, [sp, #0]
 8019362:	f8cd 8008 	str.w	r8, [sp, #8]
 8019366:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 801936a:	aa07      	add	r2, sp, #28
 801936c:	463b      	mov	r3, r7
 801936e:	4631      	mov	r1, r6
 8019370:	4628      	mov	r0, r5
 8019372:	47d8      	blx	fp
 8019374:	46a6      	mov	lr, r4
 8019376:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801937a:	f10d 0c1c 	add.w	ip, sp, #28
 801937e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019382:	f8de 3000 	ldr.w	r3, [lr]
 8019386:	f8cc 3000 	str.w	r3, [ip]
 801938a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 801938e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019392:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8019396:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801939a:	343c      	adds	r4, #60	@ 0x3c
 801939c:	f8de 3000 	ldr.w	r3, [lr]
 80193a0:	f8cc 3000 	str.w	r3, [ip]
 80193a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80193a6:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80193aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80193ae:	6823      	ldr	r3, [r4, #0]
 80193b0:	f8cc 3000 	str.w	r3, [ip]
 80193b4:	682b      	ldr	r3, [r5, #0]
 80193b6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80193ba:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80193bc:	9201      	str	r2, [sp, #4]
 80193be:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80193c0:	9200      	str	r2, [sp, #0]
 80193c2:	f8cd 8008 	str.w	r8, [sp, #8]
 80193c6:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80193c8:	aa07      	add	r2, sp, #28
 80193ca:	463b      	mov	r3, r7
 80193cc:	4631      	mov	r1, r6
 80193ce:	4628      	mov	r0, r5
 80193d0:	47a0      	blx	r4
 80193d2:	b017      	add	sp, #92	@ 0x5c
 80193d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080193d8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80193d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193dc:	b08d      	sub	sp, #52	@ 0x34
 80193de:	4688      	mov	r8, r1
 80193e0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80193e2:	f8d3 c000 	ldr.w	ip, [r3]
 80193e6:	680f      	ldr	r7, [r1, #0]
 80193e8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80193ec:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80193f0:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80193f4:	edd3 6a07 	vldr	s13, [r3, #28]
 80193f8:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80193fa:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80193fe:	f9b1 9000 	ldrsh.w	r9, [r1]
 8019402:	f9ba 1000 	ldrsh.w	r1, [sl]
 8019406:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 801940a:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 801940e:	eba7 070c 	sub.w	r7, r7, ip
 8019412:	42bc      	cmp	r4, r7
 8019414:	bfa8      	it	ge
 8019416:	463c      	movge	r4, r7
 8019418:	ee07 4a90 	vmov	s15, r4
 801941c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8019420:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8019424:	ee25 4a04 	vmul.f32	s8, s10, s8
 8019428:	ee65 4a24 	vmul.f32	s9, s10, s9
 801942c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8019430:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8019434:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019438:	eb09 0e0c 	add.w	lr, r9, ip
 801943c:	4571      	cmp	r1, lr
 801943e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8019442:	ee32 1a05 	vadd.f32	s2, s4, s10
 8019446:	ee36 0a84 	vadd.f32	s0, s13, s8
 801944a:	ee61 1a87 	vmul.f32	s3, s3, s14
 801944e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019452:	f340 808d 	ble.w	8019570 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8019456:	eba1 060e 	sub.w	r6, r1, lr
 801945a:	fb96 f5f4 	sdiv	r5, r6, r4
 801945e:	ee07 5a10 	vmov	s14, r5
 8019462:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019466:	2d00      	cmp	r5, #0
 8019468:	fb04 6615 	mls	r6, r4, r5, r6
 801946c:	eea7 0a04 	vfma.f32	s0, s14, s8
 8019470:	eee7 0a24 	vfma.f32	s1, s14, s9
 8019474:	eea7 1a05 	vfma.f32	s2, s14, s10
 8019478:	dd13      	ble.n	80194a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801947a:	ee70 6a44 	vsub.f32	s13, s0, s8
 801947e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8019482:	eef5 6a40 	vcmp.f32	s13, #0.0
 8019486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801948a:	bf18      	it	ne
 801948c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8019490:	ee31 2a45 	vsub.f32	s4, s2, s10
 8019494:	bf08      	it	eq
 8019496:	eeb0 7a67 	vmoveq.f32	s14, s15
 801949a:	ee61 1a87 	vmul.f32	s3, s3, s14
 801949e:	ee22 2a07 	vmul.f32	s4, s4, s14
 80194a2:	fb05 f204 	mul.w	r2, r5, r4
 80194a6:	1abf      	subs	r7, r7, r2
 80194a8:	4494      	add	ip, r2
 80194aa:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80194ae:	4411      	add	r1, r2
 80194b0:	eb09 020c 	add.w	r2, r9, ip
 80194b4:	443a      	add	r2, r7
 80194b6:	b209      	sxth	r1, r1
 80194b8:	428a      	cmp	r2, r1
 80194ba:	bfc4      	itt	gt
 80194bc:	eba1 0209 	subgt.w	r2, r1, r9
 80194c0:	eba2 070c 	subgt.w	r7, r2, ip
 80194c4:	2f00      	cmp	r7, #0
 80194c6:	dd50      	ble.n	801956a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80194c8:	fb97 f1f4 	sdiv	r1, r7, r4
 80194cc:	fb04 7211 	mls	r2, r4, r1, r7
 80194d0:	b90a      	cbnz	r2, 80194d6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80194d2:	3901      	subs	r1, #1
 80194d4:	4622      	mov	r2, r4
 80194d6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80194da:	6840      	ldr	r0, [r0, #4]
 80194dc:	900b      	str	r0, [sp, #44]	@ 0x2c
 80194de:	f8d0 a000 	ldr.w	sl, [r0]
 80194e2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80194e4:	9008      	str	r0, [sp, #32]
 80194e6:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80194ea:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80194ec:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80194f0:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80194f4:	695b      	ldr	r3, [r3, #20]
 80194f6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80194f8:	445b      	add	r3, fp
 80194fa:	eef0 6a42 	vmov.f32	s13, s4
 80194fe:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8019502:	ee21 3a23 	vmul.f32	s6, s2, s7
 8019506:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801950a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801950e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8019512:	9307      	str	r3, [sp, #28]
 8019514:	ee17 7a90 	vmov	r7, s15
 8019518:	ee73 7a42 	vsub.f32	s15, s6, s4
 801951c:	eeb0 7a61 	vmov.f32	s14, s3
 8019520:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8019524:	ee16 3a90 	vmov	r3, s13
 8019528:	fb97 f7f4 	sdiv	r7, r7, r4
 801952c:	ee17 ca90 	vmov	ip, s15
 8019530:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8019534:	fb9c fcf4 	sdiv	ip, ip, r4
 8019538:	fb0c 3306 	mla	r3, ip, r6, r3
 801953c:	9302      	str	r3, [sp, #8]
 801953e:	ee17 3a10 	vmov	r3, s14
 8019542:	44b6      	add	lr, r6
 8019544:	fb04 e505 	mla	r5, r4, r5, lr
 8019548:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 801954c:	fb07 3706 	mla	r7, r7, r6, r3
 8019550:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8019554:	e9cd 4700 	strd	r4, r7, [sp]
 8019558:	2900      	cmp	r1, #0
 801955a:	bfcc      	ite	gt
 801955c:	46a1      	movgt	r9, r4
 801955e:	4691      	movle	r9, r2
 8019560:	eba9 0306 	sub.w	r3, r9, r6
 8019564:	f8da 4008 	ldr.w	r4, [sl, #8]
 8019568:	47a0      	blx	r4
 801956a:	b00d      	add	sp, #52	@ 0x34
 801956c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019570:	2500      	movs	r5, #0
 8019572:	462e      	mov	r6, r5
 8019574:	e799      	b.n	80194aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08019578 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8019578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801957c:	b0db      	sub	sp, #364	@ 0x16c
 801957e:	461d      	mov	r5, r3
 8019580:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8019584:	930a      	str	r3, [sp, #40]	@ 0x28
 8019586:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 801958a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801958c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8019590:	9310      	str	r3, [sp, #64]	@ 0x40
 8019592:	6803      	ldr	r3, [r0, #0]
 8019594:	910f      	str	r1, [sp, #60]	@ 0x3c
 8019596:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8019598:	9009      	str	r0, [sp, #36]	@ 0x24
 801959a:	4614      	mov	r4, r2
 801959c:	4629      	mov	r1, r5
 801959e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 80195a2:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 80195a6:	47b8      	blx	r7
 80195a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80195aa:	6058      	str	r0, [r3, #4]
 80195ac:	2800      	cmp	r0, #0
 80195ae:	f000 83a1 	beq.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80195b2:	682b      	ldr	r3, [r5, #0]
 80195b4:	9314      	str	r3, [sp, #80]	@ 0x50
 80195b6:	686b      	ldr	r3, [r5, #4]
 80195b8:	9315      	str	r3, [sp, #84]	@ 0x54
 80195ba:	4bc4      	ldr	r3, [pc, #784]	@ (80198cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80195bc:	ed94 7a02 	vldr	s14, [r4, #8]
 80195c0:	7819      	ldrb	r1, [r3, #0]
 80195c2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80195c6:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80195ca:	2900      	cmp	r1, #0
 80195cc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80195d0:	bf16      	itet	ne
 80195d2:	4619      	movne	r1, r3
 80195d4:	4611      	moveq	r1, r2
 80195d6:	4613      	movne	r3, r2
 80195d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195dc:	9116      	str	r1, [sp, #88]	@ 0x58
 80195de:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 80195e2:	f240 8387 	bls.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80195e6:	ed94 7a07 	vldr	s14, [r4, #28]
 80195ea:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80195ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80195f2:	f240 837f 	bls.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80195f6:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80195fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80195fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019602:	f240 8377 	bls.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019606:	6822      	ldr	r2, [r4, #0]
 8019608:	4bb1      	ldr	r3, [pc, #708]	@ (80198d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801960a:	429a      	cmp	r2, r3
 801960c:	f2c0 8372 	blt.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019610:	49b0      	ldr	r1, [pc, #704]	@ (80198d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8019612:	6963      	ldr	r3, [r4, #20]
 8019614:	428a      	cmp	r2, r1
 8019616:	f300 836d 	bgt.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801961a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801961e:	48ae      	ldr	r0, [pc, #696]	@ (80198d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8019620:	33ff      	adds	r3, #255	@ 0xff
 8019622:	4283      	cmp	r3, r0
 8019624:	f200 8366 	bhi.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019628:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 801962a:	4dac      	ldr	r5, [pc, #688]	@ (80198dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 801962c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8019630:	33ff      	adds	r3, #255	@ 0xff
 8019632:	42ab      	cmp	r3, r5
 8019634:	f200 835e 	bhi.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019638:	6862      	ldr	r2, [r4, #4]
 801963a:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 801963e:	33ff      	adds	r3, #255	@ 0xff
 8019640:	4283      	cmp	r3, r0
 8019642:	f200 8357 	bhi.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019646:	69a1      	ldr	r1, [r4, #24]
 8019648:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 801964c:	33ff      	adds	r3, #255	@ 0xff
 801964e:	4283      	cmp	r3, r0
 8019650:	f200 8350 	bhi.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019654:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8019656:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 801965a:	30ff      	adds	r0, #255	@ 0xff
 801965c:	42a8      	cmp	r0, r5
 801965e:	f200 8349 	bhi.w	8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019662:	428a      	cmp	r2, r1
 8019664:	f280 8110 	bge.w	8019888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8019668:	429a      	cmp	r2, r3
 801966a:	f300 8119 	bgt.w	80198a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801966e:	4299      	cmp	r1, r3
 8019670:	f280 811d 	bge.w	80198ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8019674:	2502      	movs	r5, #2
 8019676:	2701      	movs	r7, #1
 8019678:	46a9      	mov	r9, r5
 801967a:	46b8      	mov	r8, r7
 801967c:	f04f 0a00 	mov.w	sl, #0
 8019680:	4621      	mov	r1, r4
 8019682:	a849      	add	r0, sp, #292	@ 0x124
 8019684:	f004 fa70 	bl	801db68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8019688:	4622      	mov	r2, r4
 801968a:	4653      	mov	r3, sl
 801968c:	a949      	add	r1, sp, #292	@ 0x124
 801968e:	f8cd 9000 	str.w	r9, [sp]
 8019692:	a819      	add	r0, sp, #100	@ 0x64
 8019694:	f004 fb98 	bl	801ddc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8019698:	4622      	mov	r2, r4
 801969a:	4653      	mov	r3, sl
 801969c:	a949      	add	r1, sp, #292	@ 0x124
 801969e:	f8cd 8000 	str.w	r8, [sp]
 80196a2:	a829      	add	r0, sp, #164	@ 0xa4
 80196a4:	f004 fb90 	bl	801ddc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80196a8:	4643      	mov	r3, r8
 80196aa:	4622      	mov	r2, r4
 80196ac:	a949      	add	r1, sp, #292	@ 0x124
 80196ae:	f8cd 9000 	str.w	r9, [sp]
 80196b2:	a839      	add	r0, sp, #228	@ 0xe4
 80196b4:	f004 fb88 	bl	801ddc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80196b8:	42af      	cmp	r7, r5
 80196ba:	bfb5      	itete	lt
 80196bc:	2300      	movlt	r3, #0
 80196be:	2301      	movge	r3, #1
 80196c0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80196c2:	930e      	strge	r3, [sp, #56]	@ 0x38
 80196c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80196c6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80196ca:	af12      	add	r7, sp, #72	@ 0x48
 80196cc:	bfb9      	ittee	lt
 80196ce:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80196d0:	ac19      	addlt	r4, sp, #100	@ 0x64
 80196d2:	ad19      	addge	r5, sp, #100	@ 0x64
 80196d4:	ac29      	addge	r4, sp, #164	@ 0xa4
 80196d6:	e887 0003 	stmia.w	r7, {r0, r1}
 80196da:	b928      	cbnz	r0, 80196e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80196dc:	4b80      	ldr	r3, [pc, #512]	@ (80198e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80196de:	6818      	ldr	r0, [r3, #0]
 80196e0:	6803      	ldr	r3, [r0, #0]
 80196e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80196e4:	4798      	blx	r3
 80196e6:	6038      	str	r0, [r7, #0]
 80196e8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80196ea:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80196ee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80196f2:	930c      	str	r3, [sp, #48]	@ 0x30
 80196f4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80196f6:	6963      	ldr	r3, [r4, #20]
 80196f8:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80196fa:	440b      	add	r3, r1
 80196fc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8019700:	4408      	add	r0, r1
 8019702:	b200      	sxth	r0, r0
 8019704:	4283      	cmp	r3, r0
 8019706:	900d      	str	r0, [sp, #52]	@ 0x34
 8019708:	f280 80dd 	bge.w	80198c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801970c:	428b      	cmp	r3, r1
 801970e:	da08      	bge.n	8019722 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8019710:	2a00      	cmp	r2, #0
 8019712:	dd06      	ble.n	8019722 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8019714:	1acb      	subs	r3, r1, r3
 8019716:	429a      	cmp	r2, r3
 8019718:	f2c0 80e4 	blt.w	80198e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801971c:	2b00      	cmp	r3, #0
 801971e:	f300 80e2 	bgt.w	80198e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8019722:	6967      	ldr	r7, [r4, #20]
 8019724:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019726:	443b      	add	r3, r7
 8019728:	461f      	mov	r7, r3
 801972a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801972c:	1bdf      	subs	r7, r3, r7
 801972e:	4297      	cmp	r7, r2
 8019730:	bfa8      	it	ge
 8019732:	4617      	movge	r7, r2
 8019734:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8019738:	2f00      	cmp	r7, #0
 801973a:	f340 8166 	ble.w	8019a0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801973e:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8019740:	6829      	ldr	r1, [r5, #0]
 8019742:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019746:	f9bb 3000 	ldrsh.w	r3, [fp]
 801974a:	6820      	ldr	r0, [r4, #0]
 801974c:	4411      	add	r1, r2
 801974e:	4299      	cmp	r1, r3
 8019750:	dd1a      	ble.n	8019788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8019752:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8019756:	440b      	add	r3, r1
 8019758:	4402      	add	r2, r0
 801975a:	b21b      	sxth	r3, r3
 801975c:	429a      	cmp	r2, r3
 801975e:	dc13      	bgt.n	8019788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8019760:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019762:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019764:	681b      	ldr	r3, [r3, #0]
 8019766:	9206      	str	r2, [sp, #24]
 8019768:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801976a:	9205      	str	r2, [sp, #20]
 801976c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801976e:	9500      	str	r5, [sp, #0]
 8019770:	e9cd b203 	strd	fp, r2, [sp, #12]
 8019774:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8019776:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019778:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801977c:	a912      	add	r1, sp, #72	@ 0x48
 801977e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8019782:	aa49      	add	r2, sp, #292	@ 0x124
 8019784:	4623      	mov	r3, r4
 8019786:	47c8      	blx	r9
 8019788:	e9d4 2300 	ldrd	r2, r3, [r4]
 801978c:	441a      	add	r2, r3
 801978e:	6963      	ldr	r3, [r4, #20]
 8019790:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8019794:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8019798:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 801979c:	68a1      	ldr	r1, [r4, #8]
 801979e:	ed94 6a08 	vldr	s12, [r4, #32]
 80197a2:	6022      	str	r2, [r4, #0]
 80197a4:	3301      	adds	r3, #1
 80197a6:	6163      	str	r3, [r4, #20]
 80197a8:	69a3      	ldr	r3, [r4, #24]
 80197aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80197ae:	3b01      	subs	r3, #1
 80197b0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80197b4:	61a3      	str	r3, [r4, #24]
 80197b6:	6923      	ldr	r3, [r4, #16]
 80197b8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80197bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80197c0:	edd4 6a07 	vldr	s13, [r4, #28]
 80197c4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80197c8:	440b      	add	r3, r1
 80197ca:	68e1      	ldr	r1, [r4, #12]
 80197cc:	6123      	str	r3, [r4, #16]
 80197ce:	ee76 6a86 	vadd.f32	s13, s13, s12
 80197d2:	428b      	cmp	r3, r1
 80197d4:	edc4 6a07 	vstr	s13, [r4, #28]
 80197d8:	db15      	blt.n	8019806 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80197da:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80197de:	ee76 6a26 	vadd.f32	s13, s12, s13
 80197e2:	3201      	adds	r2, #1
 80197e4:	edc4 6a07 	vstr	s13, [r4, #28]
 80197e8:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80197ec:	6022      	str	r2, [r4, #0]
 80197ee:	ee36 7a87 	vadd.f32	s14, s13, s14
 80197f2:	1a5b      	subs	r3, r3, r1
 80197f4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80197f8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80197fc:	6123      	str	r3, [r4, #16]
 80197fe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8019802:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8019806:	e9d5 2300 	ldrd	r2, r3, [r5]
 801980a:	441a      	add	r2, r3
 801980c:	696b      	ldr	r3, [r5, #20]
 801980e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8019812:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8019816:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 801981a:	68a9      	ldr	r1, [r5, #8]
 801981c:	ed95 6a08 	vldr	s12, [r5, #32]
 8019820:	602a      	str	r2, [r5, #0]
 8019822:	3301      	adds	r3, #1
 8019824:	616b      	str	r3, [r5, #20]
 8019826:	69ab      	ldr	r3, [r5, #24]
 8019828:	ee37 7a27 	vadd.f32	s14, s14, s15
 801982c:	3b01      	subs	r3, #1
 801982e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8019832:	61ab      	str	r3, [r5, #24]
 8019834:	692b      	ldr	r3, [r5, #16]
 8019836:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801983a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801983e:	edd5 6a07 	vldr	s13, [r5, #28]
 8019842:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019846:	440b      	add	r3, r1
 8019848:	68e9      	ldr	r1, [r5, #12]
 801984a:	612b      	str	r3, [r5, #16]
 801984c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8019850:	428b      	cmp	r3, r1
 8019852:	edc5 6a07 	vstr	s13, [r5, #28]
 8019856:	db15      	blt.n	8019884 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8019858:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 801985c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8019860:	3201      	adds	r2, #1
 8019862:	edc5 6a07 	vstr	s13, [r5, #28]
 8019866:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 801986a:	602a      	str	r2, [r5, #0]
 801986c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019870:	1a5b      	subs	r3, r3, r1
 8019872:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019876:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 801987a:	612b      	str	r3, [r5, #16]
 801987c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8019880:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019884:	3f01      	subs	r7, #1
 8019886:	e757      	b.n	8019738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8019888:	4299      	cmp	r1, r3
 801988a:	dc13      	bgt.n	80198b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801988c:	429a      	cmp	r2, r3
 801988e:	da14      	bge.n	80198ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8019890:	2502      	movs	r5, #2
 8019892:	2703      	movs	r7, #3
 8019894:	46a9      	mov	r9, r5
 8019896:	f04f 0800 	mov.w	r8, #0
 801989a:	f04f 0a01 	mov.w	sl, #1
 801989e:	e6ef      	b.n	8019680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80198a0:	2501      	movs	r5, #1
 80198a2:	2700      	movs	r7, #0
 80198a4:	46a9      	mov	r9, r5
 80198a6:	46b8      	mov	r8, r7
 80198a8:	f04f 0a02 	mov.w	sl, #2
 80198ac:	e6e8      	b.n	8019680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80198ae:	2501      	movs	r5, #1
 80198b0:	2702      	movs	r7, #2
 80198b2:	e6e1      	b.n	8019678 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80198b4:	2500      	movs	r5, #0
 80198b6:	2701      	movs	r7, #1
 80198b8:	e7f4      	b.n	80198a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80198ba:	2702      	movs	r7, #2
 80198bc:	2503      	movs	r5, #3
 80198be:	f04f 0900 	mov.w	r9, #0
 80198c2:	46b8      	mov	r8, r7
 80198c4:	e7e9      	b.n	801989a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80198c6:	4613      	mov	r3, r2
 80198c8:	e728      	b.n	801971c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80198ca:	bf00      	nop
 80198cc:	2001387c 	.word	0x2001387c
 80198d0:	fffd8f01 	.word	0xfffd8f01
 80198d4:	00027100 	.word	0x00027100
 80198d8:	0004e1ff 	.word	0x0004e1ff
 80198dc:	0004e1fe 	.word	0x0004e1fe
 80198e0:	20013884 	.word	0x20013884
 80198e4:	4613      	mov	r3, r2
 80198e6:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80198e8:	9111      	str	r1, [sp, #68]	@ 0x44
 80198ea:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 80198ee:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 80198f2:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80198f4:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80198f8:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80198fc:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8019900:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8019904:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8019908:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 801990c:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8019910:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8019914:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8019918:	469e      	mov	lr, r3
 801991a:	469c      	mov	ip, r3
 801991c:	f04f 0900 	mov.w	r9, #0
 8019920:	f1bc 0f00 	cmp.w	ip, #0
 8019924:	d147      	bne.n	80199b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8019926:	eb03 0c07 	add.w	ip, r3, r7
 801992a:	1ad7      	subs	r7, r2, r3
 801992c:	f1b9 0f00 	cmp.w	r9, #0
 8019930:	d009      	beq.n	8019946 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8019932:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8019936:	9029      	str	r0, [sp, #164]	@ 0xa4
 8019938:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 801993c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8019940:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8019944:	912d      	str	r1, [sp, #180]	@ 0xb4
 8019946:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8019948:	9111      	str	r1, [sp, #68]	@ 0x44
 801994a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801994e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8019952:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8019956:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801995a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801995e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8019962:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8019966:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801996a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801996e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8019972:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8019976:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801997a:	f04f 0800 	mov.w	r8, #0
 801997e:	f1be 0f00 	cmp.w	lr, #0
 8019982:	d031      	beq.n	80199e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8019984:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8019986:	4431      	add	r1, r6
 8019988:	4549      	cmp	r1, r9
 801998a:	4450      	add	r0, sl
 801998c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8019990:	ee37 7a04 	vadd.f32	s14, s14, s8
 8019994:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8019998:	db08      	blt.n	80199ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801999a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801999e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80199a2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80199a6:	3001      	adds	r0, #1
 80199a8:	eba1 0109 	sub.w	r1, r1, r9
 80199ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80199b0:	f04f 0801 	mov.w	r8, #1
 80199b4:	e7e3      	b.n	801997e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80199b6:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 80199b8:	4431      	add	r1, r6
 80199ba:	4541      	cmp	r1, r8
 80199bc:	4450      	add	r0, sl
 80199be:	ee37 7a24 	vadd.f32	s14, s14, s9
 80199c2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80199c6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80199ca:	db08      	blt.n	80199de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80199cc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80199d0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80199d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80199d8:	3001      	adds	r0, #1
 80199da:	eba1 0108 	sub.w	r1, r1, r8
 80199de:	f10c 3cff 	add.w	ip, ip, #4294967295
 80199e2:	f04f 0901 	mov.w	r9, #1
 80199e6:	e79b      	b.n	8019920 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80199e8:	449c      	add	ip, r3
 80199ea:	1aff      	subs	r7, r7, r3
 80199ec:	f1b8 0f00 	cmp.w	r8, #0
 80199f0:	d009      	beq.n	8019a06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80199f2:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80199f6:	9019      	str	r0, [sp, #100]	@ 0x64
 80199f8:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80199fc:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8019a00:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8019a04:	911d      	str	r1, [sp, #116]	@ 0x74
 8019a06:	1ad2      	subs	r2, r2, r3
 8019a08:	e68b      	b.n	8019722 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8019a0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019a0c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8019a0e:	2b00      	cmp	r3, #0
 8019a10:	f000 80d1 	beq.w	8019bb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8019a14:	ad19      	add	r5, sp, #100	@ 0x64
 8019a16:	ac39      	add	r4, sp, #228	@ 0xe4
 8019a18:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8019a1a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8019a1e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8019a22:	930c      	str	r3, [sp, #48]	@ 0x30
 8019a24:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019a26:	6963      	ldr	r3, [r4, #20]
 8019a28:	440b      	add	r3, r1
 8019a2a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8019a2e:	4408      	add	r0, r1
 8019a30:	b200      	sxth	r0, r0
 8019a32:	4283      	cmp	r3, r0
 8019a34:	900d      	str	r0, [sp, #52]	@ 0x34
 8019a36:	f280 80c1 	bge.w	8019bbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8019a3a:	428b      	cmp	r3, r1
 8019a3c:	da08      	bge.n	8019a50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8019a3e:	2a00      	cmp	r2, #0
 8019a40:	dd06      	ble.n	8019a50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8019a42:	1acb      	subs	r3, r1, r3
 8019a44:	429a      	cmp	r2, r3
 8019a46:	f2c0 80bb 	blt.w	8019bc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8019a4a:	2b00      	cmp	r3, #0
 8019a4c:	f300 80b9 	bgt.w	8019bc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8019a50:	6967      	ldr	r7, [r4, #20]
 8019a52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019a54:	443b      	add	r3, r7
 8019a56:	461f      	mov	r7, r3
 8019a58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019a5a:	1bdf      	subs	r7, r3, r7
 8019a5c:	4297      	cmp	r7, r2
 8019a5e:	bfa8      	it	ge
 8019a60:	4617      	movge	r7, r2
 8019a62:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8019a66:	2f00      	cmp	r7, #0
 8019a68:	f340 813c 	ble.w	8019ce4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8019a6c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8019a6e:	6829      	ldr	r1, [r5, #0]
 8019a70:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019a74:	f9bb 3000 	ldrsh.w	r3, [fp]
 8019a78:	6820      	ldr	r0, [r4, #0]
 8019a7a:	4411      	add	r1, r2
 8019a7c:	4299      	cmp	r1, r3
 8019a7e:	dd1a      	ble.n	8019ab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8019a80:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8019a84:	440b      	add	r3, r1
 8019a86:	4402      	add	r2, r0
 8019a88:	b21b      	sxth	r3, r3
 8019a8a:	429a      	cmp	r2, r3
 8019a8c:	dc13      	bgt.n	8019ab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8019a8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a90:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019a92:	681b      	ldr	r3, [r3, #0]
 8019a94:	9206      	str	r2, [sp, #24]
 8019a96:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019a98:	9205      	str	r2, [sp, #20]
 8019a9a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019a9c:	9500      	str	r5, [sp, #0]
 8019a9e:	e9cd b203 	strd	fp, r2, [sp, #12]
 8019aa2:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8019aa4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019aa6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8019aaa:	a912      	add	r1, sp, #72	@ 0x48
 8019aac:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8019ab0:	aa49      	add	r2, sp, #292	@ 0x124
 8019ab2:	4623      	mov	r3, r4
 8019ab4:	47c8      	blx	r9
 8019ab6:	e9d4 2300 	ldrd	r2, r3, [r4]
 8019aba:	441a      	add	r2, r3
 8019abc:	6963      	ldr	r3, [r4, #20]
 8019abe:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8019ac2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8019ac6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8019aca:	68a1      	ldr	r1, [r4, #8]
 8019acc:	ed94 6a08 	vldr	s12, [r4, #32]
 8019ad0:	6022      	str	r2, [r4, #0]
 8019ad2:	3301      	adds	r3, #1
 8019ad4:	6163      	str	r3, [r4, #20]
 8019ad6:	69a3      	ldr	r3, [r4, #24]
 8019ad8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8019adc:	3b01      	subs	r3, #1
 8019ade:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8019ae2:	61a3      	str	r3, [r4, #24]
 8019ae4:	6923      	ldr	r3, [r4, #16]
 8019ae6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8019aea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019aee:	edd4 6a07 	vldr	s13, [r4, #28]
 8019af2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8019af6:	440b      	add	r3, r1
 8019af8:	68e1      	ldr	r1, [r4, #12]
 8019afa:	6123      	str	r3, [r4, #16]
 8019afc:	ee76 6a86 	vadd.f32	s13, s13, s12
 8019b00:	428b      	cmp	r3, r1
 8019b02:	edc4 6a07 	vstr	s13, [r4, #28]
 8019b06:	db15      	blt.n	8019b34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8019b08:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8019b0c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8019b10:	3201      	adds	r2, #1
 8019b12:	edc4 6a07 	vstr	s13, [r4, #28]
 8019b16:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8019b1a:	6022      	str	r2, [r4, #0]
 8019b1c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019b20:	1a5b      	subs	r3, r3, r1
 8019b22:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8019b26:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8019b2a:	6123      	str	r3, [r4, #16]
 8019b2c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8019b30:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8019b34:	e9d5 2300 	ldrd	r2, r3, [r5]
 8019b38:	441a      	add	r2, r3
 8019b3a:	696b      	ldr	r3, [r5, #20]
 8019b3c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8019b40:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8019b44:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8019b48:	68a9      	ldr	r1, [r5, #8]
 8019b4a:	ed95 6a08 	vldr	s12, [r5, #32]
 8019b4e:	602a      	str	r2, [r5, #0]
 8019b50:	3301      	adds	r3, #1
 8019b52:	616b      	str	r3, [r5, #20]
 8019b54:	69ab      	ldr	r3, [r5, #24]
 8019b56:	ee37 7a27 	vadd.f32	s14, s14, s15
 8019b5a:	3b01      	subs	r3, #1
 8019b5c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8019b60:	61ab      	str	r3, [r5, #24]
 8019b62:	692b      	ldr	r3, [r5, #16]
 8019b64:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019b68:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019b6c:	edd5 6a07 	vldr	s13, [r5, #28]
 8019b70:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019b74:	440b      	add	r3, r1
 8019b76:	68e9      	ldr	r1, [r5, #12]
 8019b78:	612b      	str	r3, [r5, #16]
 8019b7a:	ee76 6a86 	vadd.f32	s13, s13, s12
 8019b7e:	428b      	cmp	r3, r1
 8019b80:	edc5 6a07 	vstr	s13, [r5, #28]
 8019b84:	db15      	blt.n	8019bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8019b86:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8019b8a:	ee76 6a26 	vadd.f32	s13, s12, s13
 8019b8e:	3201      	adds	r2, #1
 8019b90:	edc5 6a07 	vstr	s13, [r5, #28]
 8019b94:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8019b98:	602a      	str	r2, [r5, #0]
 8019b9a:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019b9e:	1a5b      	subs	r3, r3, r1
 8019ba0:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019ba4:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8019ba8:	612b      	str	r3, [r5, #16]
 8019baa:	ee77 7a27 	vadd.f32	s15, s14, s15
 8019bae:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019bb2:	3f01      	subs	r7, #1
 8019bb4:	e757      	b.n	8019a66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8019bb6:	ad39      	add	r5, sp, #228	@ 0xe4
 8019bb8:	ac19      	add	r4, sp, #100	@ 0x64
 8019bba:	e72d      	b.n	8019a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8019bbc:	4613      	mov	r3, r2
 8019bbe:	e744      	b.n	8019a4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8019bc0:	4613      	mov	r3, r2
 8019bc2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 8019bc6:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8019bc8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8019bcc:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8019bd0:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 8019bd4:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8019bd8:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8019bdc:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8019be0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 8019be4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8019be6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8019bea:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8019bee:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 8019bf2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 8019bf6:	960e      	str	r6, [sp, #56]	@ 0x38
 8019bf8:	469e      	mov	lr, r3
 8019bfa:	461f      	mov	r7, r3
 8019bfc:	f04f 0900 	mov.w	r9, #0
 8019c00:	2f00      	cmp	r7, #0
 8019c02:	d146      	bne.n	8019c92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8019c04:	449c      	add	ip, r3
 8019c06:	1ad7      	subs	r7, r2, r3
 8019c08:	f1b9 0f00 	cmp.w	r9, #0
 8019c0c:	d009      	beq.n	8019c22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8019c0e:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8019c12:	9039      	str	r0, [sp, #228]	@ 0xe4
 8019c14:	913d      	str	r1, [sp, #244]	@ 0xf4
 8019c16:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8019c1a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8019c1e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8019c22:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8019c24:	910e      	str	r1, [sp, #56]	@ 0x38
 8019c26:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8019c2a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8019c2e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8019c32:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8019c36:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8019c3a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8019c3e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8019c42:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8019c46:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8019c4a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8019c4e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8019c52:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8019c56:	f04f 0800 	mov.w	r8, #0
 8019c5a:	f1be 0f00 	cmp.w	lr, #0
 8019c5e:	d030      	beq.n	8019cc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8019c60:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8019c62:	4431      	add	r1, r6
 8019c64:	4549      	cmp	r1, r9
 8019c66:	4450      	add	r0, sl
 8019c68:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8019c6c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8019c70:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8019c74:	db08      	blt.n	8019c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8019c76:	ee77 7a85 	vadd.f32	s15, s15, s10
 8019c7a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8019c7e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8019c82:	3001      	adds	r0, #1
 8019c84:	eba1 0109 	sub.w	r1, r1, r9
 8019c88:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019c8c:	f04f 0801 	mov.w	r8, #1
 8019c90:	e7e3      	b.n	8019c5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8019c92:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8019c94:	4431      	add	r1, r6
 8019c96:	4541      	cmp	r1, r8
 8019c98:	4450      	add	r0, sl
 8019c9a:	ee37 7a24 	vadd.f32	s14, s14, s9
 8019c9e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8019ca2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8019ca6:	db08      	blt.n	8019cba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8019ca8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8019cac:	ee37 7a25 	vadd.f32	s14, s14, s11
 8019cb0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8019cb4:	3001      	adds	r0, #1
 8019cb6:	eba1 0108 	sub.w	r1, r1, r8
 8019cba:	3f01      	subs	r7, #1
 8019cbc:	f04f 0901 	mov.w	r9, #1
 8019cc0:	e79e      	b.n	8019c00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8019cc2:	449c      	add	ip, r3
 8019cc4:	1aff      	subs	r7, r7, r3
 8019cc6:	f1b8 0f00 	cmp.w	r8, #0
 8019cca:	d009      	beq.n	8019ce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8019ccc:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8019cd0:	9019      	str	r0, [sp, #100]	@ 0x64
 8019cd2:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8019cd6:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8019cda:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8019cde:	911d      	str	r1, [sp, #116]	@ 0x74
 8019ce0:	1ad2      	subs	r2, r2, r3
 8019ce2:	e6b5      	b.n	8019a50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8019ce4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019ce6:	681b      	ldr	r3, [r3, #0]
 8019ce8:	b923      	cbnz	r3, 8019cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019cea:	4b04      	ldr	r3, [pc, #16]	@ (8019cfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8019cec:	6818      	ldr	r0, [r3, #0]
 8019cee:	6803      	ldr	r3, [r0, #0]
 8019cf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019cf2:	4798      	blx	r3
 8019cf4:	b05b      	add	sp, #364	@ 0x16c
 8019cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cfa:	bf00      	nop
 8019cfc:	20013884 	.word	0x20013884

08019d00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8019d00:	b570      	push	{r4, r5, r6, lr}
 8019d02:	4604      	mov	r4, r0
 8019d04:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8019d08:	9805      	ldr	r0, [sp, #20]
 8019d0a:	6061      	str	r1, [r4, #4]
 8019d0c:	2500      	movs	r5, #0
 8019d0e:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8019d12:	8263      	strh	r3, [r4, #18]
 8019d14:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019d18:	8025      	strh	r5, [r4, #0]
 8019d1a:	7221      	strb	r1, [r4, #8]
 8019d1c:	7266      	strb	r6, [r4, #9]
 8019d1e:	60e0      	str	r0, [r4, #12]
 8019d20:	8222      	strh	r2, [r4, #16]
 8019d22:	82a3      	strh	r3, [r4, #20]
 8019d24:	82e5      	strh	r5, [r4, #22]
 8019d26:	8325      	strh	r5, [r4, #24]
 8019d28:	8365      	strh	r5, [r4, #26]
 8019d2a:	83a5      	strh	r5, [r4, #28]
 8019d2c:	83e5      	strh	r5, [r4, #30]
 8019d2e:	8425      	strh	r5, [r4, #32]
 8019d30:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 8019d34:	b32e      	cbz	r6, 8019d82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019d36:	6803      	ldr	r3, [r0, #0]
 8019d38:	695b      	ldr	r3, [r3, #20]
 8019d3a:	4798      	blx	r3
 8019d3c:	4606      	mov	r6, r0
 8019d3e:	b300      	cbz	r0, 8019d82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019d40:	68e0      	ldr	r0, [r4, #12]
 8019d42:	6803      	ldr	r3, [r0, #0]
 8019d44:	4631      	mov	r1, r6
 8019d46:	68db      	ldr	r3, [r3, #12]
 8019d48:	4798      	blx	r3
 8019d4a:	4605      	mov	r5, r0
 8019d4c:	b1c8      	cbz	r0, 8019d82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019d4e:	7b43      	ldrb	r3, [r0, #13]
 8019d50:	7a82      	ldrb	r2, [r0, #10]
 8019d52:	005b      	lsls	r3, r3, #1
 8019d54:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8019d58:	4313      	orrs	r3, r2
 8019d5a:	8423      	strh	r3, [r4, #32]
 8019d5c:	7a63      	ldrb	r3, [r4, #9]
 8019d5e:	2b06      	cmp	r3, #6
 8019d60:	d10f      	bne.n	8019d82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8019d62:	68e0      	ldr	r0, [r4, #12]
 8019d64:	6803      	ldr	r3, [r0, #0]
 8019d66:	462a      	mov	r2, r5
 8019d68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8019d6a:	4631      	mov	r1, r6
 8019d6c:	4798      	blx	r3
 8019d6e:	7b6b      	ldrb	r3, [r5, #13]
 8019d70:	005b      	lsls	r3, r3, #1
 8019d72:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8019d76:	7aab      	ldrb	r3, [r5, #10]
 8019d78:	4313      	orrs	r3, r2
 8019d7a:	4418      	add	r0, r3
 8019d7c:	8c23      	ldrh	r3, [r4, #32]
 8019d7e:	4418      	add	r0, r3
 8019d80:	8420      	strh	r0, [r4, #32]
 8019d82:	4620      	mov	r0, r4
 8019d84:	bd70      	pop	{r4, r5, r6, pc}

08019d86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8019d86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d8a:	2400      	movs	r4, #0
 8019d8c:	b085      	sub	sp, #20
 8019d8e:	4681      	mov	r9, r0
 8019d90:	4688      	mov	r8, r1
 8019d92:	4692      	mov	sl, r2
 8019d94:	469b      	mov	fp, r3
 8019d96:	4627      	mov	r7, r4
 8019d98:	4625      	mov	r5, r4
 8019d9a:	4626      	mov	r6, r4
 8019d9c:	4554      	cmp	r4, sl
 8019d9e:	da2a      	bge.n	8019df6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8019da0:	2300      	movs	r3, #0
 8019da2:	9303      	str	r3, [sp, #12]
 8019da4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019da8:	429d      	cmp	r5, r3
 8019daa:	d004      	beq.n	8019db6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8019dac:	f242 030b 	movw	r3, #8203	@ 0x200b
 8019db0:	429d      	cmp	r5, r3
 8019db2:	bf18      	it	ne
 8019db4:	462f      	movne	r7, r5
 8019db6:	ab03      	add	r3, sp, #12
 8019db8:	4642      	mov	r2, r8
 8019dba:	4659      	mov	r1, fp
 8019dbc:	4648      	mov	r0, r9
 8019dbe:	f003 fce9 	bl	801d794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019dc2:	4605      	mov	r5, r0
 8019dc4:	b1b8      	cbz	r0, 8019df6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8019dc6:	280a      	cmp	r0, #10
 8019dc8:	d015      	beq.n	8019df6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8019dca:	9a03      	ldr	r2, [sp, #12]
 8019dcc:	b18a      	cbz	r2, 8019df2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8019dce:	7b50      	ldrb	r0, [r2, #13]
 8019dd0:	7a93      	ldrb	r3, [r2, #10]
 8019dd2:	8895      	ldrh	r5, [r2, #4]
 8019dd4:	0040      	lsls	r0, r0, #1
 8019dd6:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8019dda:	4303      	orrs	r3, r0
 8019ddc:	9301      	str	r3, [sp, #4]
 8019dde:	f8d8 3000 	ldr.w	r3, [r8]
 8019de2:	4639      	mov	r1, r7
 8019de4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8019de6:	4640      	mov	r0, r8
 8019de8:	4798      	blx	r3
 8019dea:	9b01      	ldr	r3, [sp, #4]
 8019dec:	4418      	add	r0, r3
 8019dee:	4406      	add	r6, r0
 8019df0:	b2b6      	uxth	r6, r6
 8019df2:	3401      	adds	r4, #1
 8019df4:	e7d2      	b.n	8019d9c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8019df6:	4630      	mov	r0, r6
 8019df8:	b005      	add	sp, #20
 8019dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019dfe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8019dfe:	2a02      	cmp	r2, #2
 8019e00:	b530      	push	{r4, r5, lr}
 8019e02:	d011      	beq.n	8019e28 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8019e04:	2a03      	cmp	r2, #3
 8019e06:	d01c      	beq.n	8019e42 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8019e08:	2a01      	cmp	r2, #1
 8019e0a:	d10c      	bne.n	8019e26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8019e0c:	888b      	ldrh	r3, [r1, #4]
 8019e0e:	8801      	ldrh	r1, [r0, #0]
 8019e10:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8019e14:	8844      	ldrh	r4, [r0, #2]
 8019e16:	8004      	strh	r4, [r0, #0]
 8019e18:	1a5b      	subs	r3, r3, r1
 8019e1a:	1a9b      	subs	r3, r3, r2
 8019e1c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8019e20:	8043      	strh	r3, [r0, #2]
 8019e22:	8081      	strh	r1, [r0, #4]
 8019e24:	80c2      	strh	r2, [r0, #6]
 8019e26:	bd30      	pop	{r4, r5, pc}
 8019e28:	88cb      	ldrh	r3, [r1, #6]
 8019e2a:	8842      	ldrh	r2, [r0, #2]
 8019e2c:	1a9b      	subs	r3, r3, r2
 8019e2e:	88c2      	ldrh	r2, [r0, #6]
 8019e30:	1a9b      	subs	r3, r3, r2
 8019e32:	888a      	ldrh	r2, [r1, #4]
 8019e34:	8801      	ldrh	r1, [r0, #0]
 8019e36:	8043      	strh	r3, [r0, #2]
 8019e38:	1a52      	subs	r2, r2, r1
 8019e3a:	8881      	ldrh	r1, [r0, #4]
 8019e3c:	1a52      	subs	r2, r2, r1
 8019e3e:	8002      	strh	r2, [r0, #0]
 8019e40:	e7f1      	b.n	8019e26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8019e42:	88cb      	ldrh	r3, [r1, #6]
 8019e44:	8841      	ldrh	r1, [r0, #2]
 8019e46:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8019e4a:	f9b0 5000 	ldrsh.w	r5, [r0]
 8019e4e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8019e52:	8045      	strh	r5, [r0, #2]
 8019e54:	1a5b      	subs	r3, r3, r1
 8019e56:	1a9b      	subs	r3, r3, r2
 8019e58:	8003      	strh	r3, [r0, #0]
 8019e5a:	8082      	strh	r2, [r0, #4]
 8019e5c:	80c4      	strh	r4, [r0, #6]
 8019e5e:	e7e2      	b.n	8019e26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08019e60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8019e60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e64:	b09f      	sub	sp, #124	@ 0x7c
 8019e66:	920f      	str	r2, [sp, #60]	@ 0x3c
 8019e68:	9312      	str	r3, [sp, #72]	@ 0x48
 8019e6a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8019e6c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8019e6e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8019e70:	8812      	ldrh	r2, [r2, #0]
 8019e72:	889b      	ldrh	r3, [r3, #4]
 8019e74:	900e      	str	r0, [sp, #56]	@ 0x38
 8019e76:	4413      	add	r3, r2
 8019e78:	6828      	ldr	r0, [r5, #0]
 8019e7a:	9117      	str	r1, [sp, #92]	@ 0x5c
 8019e7c:	b21b      	sxth	r3, r3
 8019e7e:	9311      	str	r3, [sp, #68]	@ 0x44
 8019e80:	6803      	ldr	r3, [r0, #0]
 8019e82:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 8019e86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8019e88:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8019e8c:	4798      	blx	r3
 8019e8e:	682b      	ldr	r3, [r5, #0]
 8019e90:	9013      	str	r0, [sp, #76]	@ 0x4c
 8019e92:	7b1a      	ldrb	r2, [r3, #12]
 8019e94:	7adb      	ldrb	r3, [r3, #11]
 8019e96:	9215      	str	r2, [sp, #84]	@ 0x54
 8019e98:	9316      	str	r3, [sp, #88]	@ 0x58
 8019e9a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8019e9e:	2c00      	cmp	r4, #0
 8019ea0:	d067      	beq.n	8019f72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8019ea2:	7c2b      	ldrb	r3, [r5, #16]
 8019ea4:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8019ea6:	2b06      	cmp	r3, #6
 8019ea8:	bf14      	ite	ne
 8019eaa:	2301      	movne	r3, #1
 8019eac:	2302      	moveq	r3, #2
 8019eae:	4413      	add	r3, r2
 8019eb0:	f04f 0900 	mov.w	r9, #0
 8019eb4:	9310      	str	r3, [sp, #64]	@ 0x40
 8019eb6:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8019eba:	464c      	mov	r4, r9
 8019ebc:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8019ec0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019ec2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019ec4:	4293      	cmp	r3, r2
 8019ec6:	f280 808b 	bge.w	8019fe0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8019eca:	2300      	movs	r3, #0
 8019ecc:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8019ed0:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 8019ed4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019ed8:	429c      	cmp	r4, r3
 8019eda:	d006      	beq.n	8019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8019edc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019ede:	f242 020b 	movw	r2, #8203	@ 0x200b
 8019ee2:	4294      	cmp	r4, r2
 8019ee4:	bf18      	it	ne
 8019ee6:	4623      	movne	r3, r4
 8019ee8:	930c      	str	r3, [sp, #48]	@ 0x30
 8019eea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019eec:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8019eee:	682a      	ldr	r2, [r5, #0]
 8019ef0:	428b      	cmp	r3, r1
 8019ef2:	db40      	blt.n	8019f76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8019ef4:	6813      	ldr	r3, [r2, #0]
 8019ef6:	4610      	mov	r0, r2
 8019ef8:	695b      	ldr	r3, [r3, #20]
 8019efa:	4798      	blx	r3
 8019efc:	4604      	mov	r4, r0
 8019efe:	6828      	ldr	r0, [r5, #0]
 8019f00:	6803      	ldr	r3, [r0, #0]
 8019f02:	aa1d      	add	r2, sp, #116	@ 0x74
 8019f04:	689f      	ldr	r7, [r3, #8]
 8019f06:	4621      	mov	r1, r4
 8019f08:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8019f0c:	47b8      	blx	r7
 8019f0e:	901c      	str	r0, [sp, #112]	@ 0x70
 8019f10:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019f14:	429c      	cmp	r4, r3
 8019f16:	f000 80ea 	beq.w	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019f1a:	f242 030b 	movw	r3, #8203	@ 0x200b
 8019f1e:	429c      	cmp	r4, r3
 8019f20:	f000 80e5 	beq.w	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019f24:	2c00      	cmp	r4, #0
 8019f26:	f000 810c 	beq.w	801a142 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8019f2a:	2c0a      	cmp	r4, #10
 8019f2c:	d05e      	beq.n	8019fec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8019f2e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8019f30:	b36a      	cbz	r2, 8019f8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8019f32:	8894      	ldrh	r4, [r2, #4]
 8019f34:	f1bb 0f00 	cmp.w	fp, #0
 8019f38:	d03a      	beq.n	8019fb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8019f3a:	f892 900d 	ldrb.w	r9, [r2, #13]
 8019f3e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019f42:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8019f46:	f892 900a 	ldrb.w	r9, [r2, #10]
 8019f4a:	f1bb 0f01 	cmp.w	fp, #1
 8019f4e:	ea49 0903 	orr.w	r9, r9, r3
 8019f52:	d133      	bne.n	8019fbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8019f54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019f56:	eba6 0609 	sub.w	r6, r6, r9
 8019f5a:	2b00      	cmp	r3, #0
 8019f5c:	d14d      	bne.n	8019ffa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8019f5e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019f60:	eb09 0306 	add.w	r3, r9, r6
 8019f64:	4413      	add	r3, r2
 8019f66:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8019f68:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019f6c:	4293      	cmp	r3, r2
 8019f6e:	da4e      	bge.n	801a00e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8019f70:	e036      	b.n	8019fe0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8019f72:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8019f74:	e79c      	b.n	8019eb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8019f76:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8019f7a:	9301      	str	r3, [sp, #4]
 8019f7c:	ab1d      	add	r3, sp, #116	@ 0x74
 8019f7e:	9300      	str	r3, [sp, #0]
 8019f80:	4659      	mov	r1, fp
 8019f82:	ab1c      	add	r3, sp, #112	@ 0x70
 8019f84:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8019f86:	f003 fc4e 	bl	801d826 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8019f8a:	4604      	mov	r4, r0
 8019f8c:	e7c0      	b.n	8019f10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8019f8e:	6828      	ldr	r0, [r5, #0]
 8019f90:	6803      	ldr	r3, [r0, #0]
 8019f92:	691b      	ldr	r3, [r3, #16]
 8019f94:	4798      	blx	r3
 8019f96:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8019f9a:	4298      	cmp	r0, r3
 8019f9c:	f000 80a7 	beq.w	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019fa0:	f242 030b 	movw	r3, #8203	@ 0x200b
 8019fa4:	4298      	cmp	r0, r3
 8019fa6:	f000 80a2 	beq.w	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019faa:	f1bb 0f00 	cmp.w	fp, #0
 8019fae:	d100      	bne.n	8019fb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8019fb0:	444e      	add	r6, r9
 8019fb2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8019fb4:	2a00      	cmp	r2, #0
 8019fb6:	d1c0      	bne.n	8019f3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8019fb8:	4691      	mov	r9, r2
 8019fba:	e098      	b.n	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8019fbc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019fbe:	2b00      	cmp	r3, #0
 8019fc0:	f000 80c1 	beq.w	801a146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 8019fc4:	f1bb 0f00 	cmp.w	fp, #0
 8019fc8:	d117      	bne.n	8019ffa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8019fca:	6828      	ldr	r0, [r5, #0]
 8019fcc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019fce:	6803      	ldr	r3, [r0, #0]
 8019fd0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8019fd2:	4798      	blx	r3
 8019fd4:	4406      	add	r6, r0
 8019fd6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8019fd8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019fda:	1af3      	subs	r3, r6, r3
 8019fdc:	4293      	cmp	r3, r2
 8019fde:	dd16      	ble.n	801a00e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8019fe0:	2c00      	cmp	r4, #0
 8019fe2:	f000 80ae 	beq.w	801a142 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8019fe6:	2c0a      	cmp	r4, #10
 8019fe8:	f040 809c 	bne.w	801a124 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8019fec:	240a      	movs	r4, #10
 8019fee:	fab4 f084 	clz	r0, r4
 8019ff2:	0940      	lsrs	r0, r0, #5
 8019ff4:	b01f      	add	sp, #124	@ 0x7c
 8019ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ffa:	6828      	ldr	r0, [r5, #0]
 8019ffc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019ffe:	6803      	ldr	r3, [r0, #0]
 801a000:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a002:	4798      	blx	r3
 801a004:	f1bb 0f01 	cmp.w	fp, #1
 801a008:	eba6 0600 	sub.w	r6, r6, r0
 801a00c:	d0a7      	beq.n	8019f5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801a00e:	981c      	ldr	r0, [sp, #112]	@ 0x70
 801a010:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a012:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801a016:	f9b3 8000 	ldrsh.w	r8, [r3]
 801a01a:	7b43      	ldrb	r3, [r0, #13]
 801a01c:	015b      	lsls	r3, r3, #5
 801a01e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801a022:	7983      	ldrb	r3, [r0, #6]
 801a024:	4431      	add	r1, r6
 801a026:	4313      	orrs	r3, r2
 801a028:	440b      	add	r3, r1
 801a02a:	4543      	cmp	r3, r8
 801a02c:	db5f      	blt.n	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a02e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a030:	4299      	cmp	r1, r3
 801a032:	da5c      	bge.n	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a034:	6828      	ldr	r0, [r5, #0]
 801a036:	6803      	ldr	r3, [r0, #0]
 801a038:	45b0      	cmp	r8, r6
 801a03a:	bfc8      	it	gt
 801a03c:	eba8 0806 	subgt.w	r8, r8, r6
 801a040:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a042:	bfcc      	ite	gt
 801a044:	fa1f f888 	uxthgt.w	r8, r8
 801a048:	f04f 0800 	movle.w	r8, #0
 801a04c:	4798      	blx	r3
 801a04e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801a050:	7b53      	ldrb	r3, [r2, #13]
 801a052:	00d9      	lsls	r1, r3, #3
 801a054:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 801a058:	7a11      	ldrb	r1, [r2, #8]
 801a05a:	4339      	orrs	r1, r7
 801a05c:	065f      	lsls	r7, r3, #25
 801a05e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a060:	bf44      	itt	mi
 801a062:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 801a066:	b209      	sxthmi	r1, r1
 801a068:	19c7      	adds	r7, r0, r7
 801a06a:	1a7f      	subs	r7, r7, r1
 801a06c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 801a06e:	b2bf      	uxth	r7, r7
 801a070:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801a074:	fa0f fa87 	sxth.w	sl, r7
 801a078:	4551      	cmp	r1, sl
 801a07a:	dd3c      	ble.n	801a0f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 801a07c:	011b      	lsls	r3, r3, #4
 801a07e:	79d0      	ldrb	r0, [r2, #7]
 801a080:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801a084:	4303      	orrs	r3, r0
 801a086:	449a      	add	sl, r3
 801a088:	4551      	cmp	r1, sl
 801a08a:	dc30      	bgt.n	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a08c:	1bcf      	subs	r7, r1, r7
 801a08e:	b23f      	sxth	r7, r7
 801a090:	468a      	mov	sl, r1
 801a092:	9219      	str	r2, [sp, #100]	@ 0x64
 801a094:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a096:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a098:	6828      	ldr	r0, [r5, #0]
 801a09a:	2a00      	cmp	r2, #0
 801a09c:	d12d      	bne.n	801a0fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801a09e:	9318      	str	r3, [sp, #96]	@ 0x60
 801a0a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a0a2:	6819      	ldr	r1, [r3, #0]
 801a0a4:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801a0a6:	6801      	ldr	r1, [r0, #0]
 801a0a8:	9314      	str	r3, [sp, #80]	@ 0x50
 801a0aa:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 801a0ac:	4788      	blx	r1
 801a0ae:	79a9      	ldrb	r1, [r5, #6]
 801a0b0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a0b2:	7ba9      	ldrb	r1, [r5, #14]
 801a0b4:	910a      	str	r1, [sp, #40]	@ 0x28
 801a0b6:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 801a0ba:	9109      	str	r1, [sp, #36]	@ 0x24
 801a0bc:	68a9      	ldr	r1, [r5, #8]
 801a0be:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a0c0:	9306      	str	r3, [sp, #24]
 801a0c2:	b2bf      	uxth	r7, r7
 801a0c4:	e9cd 8702 	strd	r8, r7, [sp, #8]
 801a0c8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a0ca:	9304      	str	r3, [sp, #16]
 801a0cc:	44b0      	add	r8, r6
 801a0ce:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801a0d2:	fa0f f388 	sxth.w	r3, r8
 801a0d6:	9300      	str	r3, [sp, #0]
 801a0d8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801a0da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a0dc:	9205      	str	r2, [sp, #20]
 801a0de:	f8cd a004 	str.w	sl, [sp, #4]
 801a0e2:	681a      	ldr	r2, [r3, #0]
 801a0e4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801a0e6:	685b      	ldr	r3, [r3, #4]
 801a0e8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a0ea:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 801a0ec:	47b8      	blx	r7
 801a0ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a0f0:	3301      	adds	r3, #1
 801a0f2:	930d      	str	r3, [sp, #52]	@ 0x34
 801a0f4:	e6e4      	b.n	8019ec0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 801a0f6:	2700      	movs	r7, #0
 801a0f8:	e7cb      	b.n	801a092 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 801a0fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a0fc:	f8d2 c008 	ldr.w	ip, [r2, #8]
 801a100:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a102:	f8dc 1000 	ldr.w	r1, [ip]
 801a106:	e9cd 6204 	strd	r6, r2, [sp, #16]
 801a10a:	79aa      	ldrb	r2, [r5, #6]
 801a10c:	9203      	str	r2, [sp, #12]
 801a10e:	7baa      	ldrb	r2, [r5, #14]
 801a110:	9202      	str	r2, [sp, #8]
 801a112:	68aa      	ldr	r2, [r5, #8]
 801a114:	e9cd 0200 	strd	r0, r2, [sp]
 801a118:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a11a:	688f      	ldr	r7, [r1, #8]
 801a11c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801a11e:	4660      	mov	r0, ip
 801a120:	47b8      	blx	r7
 801a122:	e7e4      	b.n	801a0ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a124:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a126:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801a128:	3501      	adds	r5, #1
 801a12a:	429d      	cmp	r5, r3
 801a12c:	f6bf af5f 	bge.w	8019fee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801a130:	4659      	mov	r1, fp
 801a132:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801a134:	f7ef ff34 	bl	8009fa0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801a138:	4604      	mov	r4, r0
 801a13a:	b110      	cbz	r0, 801a142 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801a13c:	280a      	cmp	r0, #10
 801a13e:	d1f2      	bne.n	801a126 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 801a140:	e754      	b.n	8019fec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801a142:	2400      	movs	r4, #0
 801a144:	e753      	b.n	8019fee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801a146:	f1bb 0f00 	cmp.w	fp, #0
 801a14a:	f43f af44 	beq.w	8019fd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 801a14e:	e75e      	b.n	801a00e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0801a150 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801a150:	b530      	push	{r4, r5, lr}
 801a152:	8ac4      	ldrh	r4, [r0, #22]
 801a154:	8b45      	ldrh	r5, [r0, #26]
 801a156:	8343      	strh	r3, [r0, #26]
 801a158:	442c      	add	r4, r5
 801a15a:	1ae4      	subs	r4, r4, r3
 801a15c:	82c4      	strh	r4, [r0, #22]
 801a15e:	8b83      	ldrh	r3, [r0, #28]
 801a160:	8b04      	ldrh	r4, [r0, #24]
 801a162:	4422      	add	r2, r4
 801a164:	440c      	add	r4, r1
 801a166:	1a59      	subs	r1, r3, r1
 801a168:	83c2      	strh	r2, [r0, #30]
 801a16a:	8304      	strh	r4, [r0, #24]
 801a16c:	8381      	strh	r1, [r0, #28]
 801a16e:	bd30      	pop	{r4, r5, pc}

0801a170 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801a170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a174:	4604      	mov	r4, r0
 801a176:	8a47      	ldrh	r7, [r0, #18]
 801a178:	68c0      	ldr	r0, [r0, #12]
 801a17a:	6803      	ldr	r3, [r0, #0]
 801a17c:	b085      	sub	sp, #20
 801a17e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a180:	4798      	blx	r3
 801a182:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801a186:	7a63      	ldrb	r3, [r4, #9]
 801a188:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 801a18c:	42b7      	cmp	r7, r6
 801a18e:	f103 33ff 	add.w	r3, r3, #4294967295
 801a192:	bfac      	ite	ge
 801a194:	f04f 0900 	movge.w	r9, #0
 801a198:	f04f 0901 	movlt.w	r9, #1
 801a19c:	2b05      	cmp	r3, #5
 801a19e:	d804      	bhi.n	801a1aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801a1a0:	e8df f003 	tbb	[pc, r3]
 801a1a4:	470e0854 	.word	0x470e0854
 801a1a8:	4c4c      	.short	0x4c4c
 801a1aa:	2500      	movs	r5, #0
 801a1ac:	46a9      	mov	r9, r5
 801a1ae:	462e      	mov	r6, r5
 801a1b0:	462f      	mov	r7, r5
 801a1b2:	e00d      	b.n	801a1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a1b4:	42b7      	cmp	r7, r6
 801a1b6:	bfb4      	ite	lt
 801a1b8:	2600      	movlt	r6, #0
 801a1ba:	2601      	movge	r6, #1
 801a1bc:	2500      	movs	r5, #0
 801a1be:	e7f7      	b.n	801a1b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801a1c0:	42b7      	cmp	r7, r6
 801a1c2:	464d      	mov	r5, r9
 801a1c4:	f04f 0900 	mov.w	r9, #0
 801a1c8:	bfb4      	ite	lt
 801a1ca:	2600      	movlt	r6, #0
 801a1cc:	2601      	movge	r6, #1
 801a1ce:	464f      	mov	r7, r9
 801a1d0:	f04f 0800 	mov.w	r8, #0
 801a1d4:	f8a4 8016 	strh.w	r8, [r4, #22]
 801a1d8:	f8a4 8018 	strh.w	r8, [r4, #24]
 801a1dc:	f8cd 8004 	str.w	r8, [sp, #4]
 801a1e0:	2300      	movs	r3, #0
 801a1e2:	9303      	str	r3, [sp, #12]
 801a1e4:	8823      	ldrh	r3, [r4, #0]
 801a1e6:	2b20      	cmp	r3, #32
 801a1e8:	d034      	beq.n	801a254 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801a1ea:	f242 010b 	movw	r1, #8203	@ 0x200b
 801a1ee:	1a5a      	subs	r2, r3, r1
 801a1f0:	f1d2 0a00 	rsbs	sl, r2, #0
 801a1f4:	eb4a 0a02 	adc.w	sl, sl, r2
 801a1f8:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801a1fc:	4293      	cmp	r3, r2
 801a1fe:	d009      	beq.n	801a214 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801a200:	428b      	cmp	r3, r1
 801a202:	9a01      	ldr	r2, [sp, #4]
 801a204:	bf18      	it	ne
 801a206:	461a      	movne	r2, r3
 801a208:	9201      	str	r2, [sp, #4]
 801a20a:	bf0c      	ite	eq
 801a20c:	f04f 0a01 	moveq.w	sl, #1
 801a210:	f04f 0a00 	movne.w	sl, #0
 801a214:	ab03      	add	r3, sp, #12
 801a216:	68e2      	ldr	r2, [r4, #12]
 801a218:	7a21      	ldrb	r1, [r4, #8]
 801a21a:	6860      	ldr	r0, [r4, #4]
 801a21c:	f003 faba 	bl	801d794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a220:	8020      	strh	r0, [r4, #0]
 801a222:	b9d8      	cbnz	r0, 801a25c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801a224:	8ba2      	ldrh	r2, [r4, #28]
 801a226:	2300      	movs	r3, #0
 801a228:	4611      	mov	r1, r2
 801a22a:	4620      	mov	r0, r4
 801a22c:	f7ff ff90 	bl	801a150 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801a230:	e06e      	b.n	801a310 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801a232:	2500      	movs	r5, #0
 801a234:	46a9      	mov	r9, r5
 801a236:	462e      	mov	r6, r5
 801a238:	2701      	movs	r7, #1
 801a23a:	e7c9      	b.n	801a1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a23c:	42b7      	cmp	r7, r6
 801a23e:	f04f 0500 	mov.w	r5, #0
 801a242:	bfb4      	ite	lt
 801a244:	2700      	movlt	r7, #0
 801a246:	2701      	movge	r7, #1
 801a248:	462e      	mov	r6, r5
 801a24a:	e7c1      	b.n	801a1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a24c:	2500      	movs	r5, #0
 801a24e:	46a9      	mov	r9, r5
 801a250:	2601      	movs	r6, #1
 801a252:	e7ad      	b.n	801a1b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801a254:	9301      	str	r3, [sp, #4]
 801a256:	f04f 0a01 	mov.w	sl, #1
 801a25a:	e7db      	b.n	801a214 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801a25c:	8b63      	ldrh	r3, [r4, #26]
 801a25e:	280a      	cmp	r0, #10
 801a260:	f103 0301 	add.w	r3, r3, #1
 801a264:	8363      	strh	r3, [r4, #26]
 801a266:	d0dd      	beq.n	801a224 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 801a268:	9a03      	ldr	r2, [sp, #12]
 801a26a:	bb62      	cbnz	r2, 801a2c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 801a26c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801a270:	4298      	cmp	r0, r3
 801a272:	d003      	beq.n	801a27c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801a274:	f242 030b 	movw	r3, #8203	@ 0x200b
 801a278:	4298      	cmp	r0, r3
 801a27a:	d1b1      	bne.n	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a27c:	8823      	ldrh	r3, [r4, #0]
 801a27e:	8ba1      	ldrh	r1, [r4, #28]
 801a280:	2b20      	cmp	r3, #32
 801a282:	d003      	beq.n	801a28c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801a284:	f242 000b 	movw	r0, #8203	@ 0x200b
 801a288:	4283      	cmp	r3, r0
 801a28a:	d131      	bne.n	801a2f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 801a28c:	f1ba 0f00 	cmp.w	sl, #0
 801a290:	bf0a      	itet	eq
 801a292:	4688      	moveq	r8, r1
 801a294:	4650      	movne	r0, sl
 801a296:	2001      	moveq	r0, #1
 801a298:	440a      	add	r2, r1
 801a29a:	8b23      	ldrh	r3, [r4, #24]
 801a29c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801a2a0:	b292      	uxth	r2, r2
 801a2a2:	83a2      	strh	r2, [r4, #28]
 801a2a4:	4413      	add	r3, r2
 801a2a6:	f1b9 0f00 	cmp.w	r9, #0
 801a2aa:	d102      	bne.n	801a2b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 801a2ac:	2d00      	cmp	r5, #0
 801a2ae:	d042      	beq.n	801a336 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801a2b0:	b300      	cbz	r0, 801a2f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801a2b2:	8c21      	ldrh	r1, [r4, #32]
 801a2b4:	4419      	add	r1, r3
 801a2b6:	458c      	cmp	ip, r1
 801a2b8:	da37      	bge.n	801a32a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801a2ba:	8ae1      	ldrh	r1, [r4, #22]
 801a2bc:	2900      	cmp	r1, #0
 801a2be:	d034      	beq.n	801a32a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801a2c0:	4563      	cmp	r3, ip
 801a2c2:	dd8d      	ble.n	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a2c4:	e01d      	b.n	801a302 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801a2c6:	8893      	ldrh	r3, [r2, #4]
 801a2c8:	8023      	strh	r3, [r4, #0]
 801a2ca:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801a2ce:	9901      	ldr	r1, [sp, #4]
 801a2d0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801a2d4:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 801a2d8:	f892 b00a 	ldrb.w	fp, [r2, #10]
 801a2dc:	ea4b 0b00 	orr.w	fp, fp, r0
 801a2e0:	68e0      	ldr	r0, [r4, #12]
 801a2e2:	6803      	ldr	r3, [r0, #0]
 801a2e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a2e6:	4798      	blx	r3
 801a2e8:	eb0b 0200 	add.w	r2, fp, r0
 801a2ec:	b292      	uxth	r2, r2
 801a2ee:	e7c5      	b.n	801a27c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801a2f0:	2000      	movs	r0, #0
 801a2f2:	e7d1      	b.n	801a298 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 801a2f4:	4563      	cmp	r3, ip
 801a2f6:	f77f af73 	ble.w	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a2fa:	8ae3      	ldrh	r3, [r4, #22]
 801a2fc:	2b00      	cmp	r3, #0
 801a2fe:	f43f af6f 	beq.w	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a302:	2301      	movs	r3, #1
 801a304:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 801a308:	8c22      	ldrh	r2, [r4, #32]
 801a30a:	8be3      	ldrh	r3, [r4, #30]
 801a30c:	4413      	add	r3, r2
 801a30e:	83e3      	strh	r3, [r4, #30]
 801a310:	68e0      	ldr	r0, [r4, #12]
 801a312:	6803      	ldr	r3, [r0, #0]
 801a314:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a316:	4798      	blx	r3
 801a318:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 801a31c:	4418      	add	r0, r3
 801a31e:	8a63      	ldrh	r3, [r4, #18]
 801a320:	1a18      	subs	r0, r3, r0
 801a322:	8260      	strh	r0, [r4, #18]
 801a324:	b005      	add	sp, #20
 801a326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a32a:	2300      	movs	r3, #0
 801a32c:	4611      	mov	r1, r2
 801a32e:	4620      	mov	r0, r4
 801a330:	f7ff ff0e 	bl	801a150 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801a334:	e754      	b.n	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a336:	4563      	cmp	r3, ip
 801a338:	dd14      	ble.n	801a364 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801a33a:	b117      	cbz	r7, 801a342 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 801a33c:	2301      	movs	r3, #1
 801a33e:	460a      	mov	r2, r1
 801a340:	e772      	b.n	801a228 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801a342:	2e00      	cmp	r6, #0
 801a344:	f43f af4c 	beq.w	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a348:	2800      	cmp	r0, #0
 801a34a:	f47f af49 	bne.w	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a34e:	f1ba 0f00 	cmp.w	sl, #0
 801a352:	d002      	beq.n	801a35a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801a354:	2301      	movs	r3, #1
 801a356:	4642      	mov	r2, r8
 801a358:	e767      	b.n	801a22a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801a35a:	8ae3      	ldrh	r3, [r4, #22]
 801a35c:	2b00      	cmp	r3, #0
 801a35e:	f43f af3f 	beq.w	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a362:	e7d5      	b.n	801a310 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801a364:	2800      	cmp	r0, #0
 801a366:	f47f af3b 	bne.w	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a36a:	f1ba 0f00 	cmp.w	sl, #0
 801a36e:	f43f af37 	beq.w	801a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a372:	2301      	movs	r3, #1
 801a374:	4642      	mov	r2, r8
 801a376:	e7da      	b.n	801a32e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801a378 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801a378:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a37a:	4605      	mov	r5, r0
 801a37c:	b08f      	sub	sp, #60	@ 0x3c
 801a37e:	4617      	mov	r7, r2
 801a380:	461c      	mov	r4, r3
 801a382:	460e      	mov	r6, r1
 801a384:	b1d1      	cbz	r1, 801a3bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801a386:	681b      	ldr	r3, [r3, #0]
 801a388:	4620      	mov	r0, r4
 801a38a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a38c:	4798      	blx	r3
 801a38e:	4240      	negs	r0, r0
 801a390:	b200      	sxth	r0, r0
 801a392:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801a396:	9603      	str	r6, [sp, #12]
 801a398:	9700      	str	r7, [sp, #0]
 801a39a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801a39e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801a3a2:	4629      	mov	r1, r5
 801a3a4:	a805      	add	r0, sp, #20
 801a3a6:	f7ff fcab 	bl	8019d00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801a3aa:	2401      	movs	r4, #1
 801a3ac:	a805      	add	r0, sp, #20
 801a3ae:	f7ff fedf 	bl	801a170 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801a3b2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801a3b6:	b163      	cbz	r3, 801a3d2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801a3b8:	3401      	adds	r4, #1
 801a3ba:	e7f7      	b.n	801a3ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801a3bc:	f003 fab8 	bl	801d930 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a3c0:	2401      	movs	r4, #1
 801a3c2:	280a      	cmp	r0, #10
 801a3c4:	4628      	mov	r0, r5
 801a3c6:	bf08      	it	eq
 801a3c8:	3401      	addeq	r4, #1
 801a3ca:	f003 fab1 	bl	801d930 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a3ce:	2800      	cmp	r0, #0
 801a3d0:	d1f7      	bne.n	801a3c2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801a3d2:	b2a0      	uxth	r0, r4
 801a3d4:	b00f      	add	sp, #60	@ 0x3c
 801a3d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a3d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801a3d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3dc:	b0e3      	sub	sp, #396	@ 0x18c
 801a3de:	461c      	mov	r4, r3
 801a3e0:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 801a3e2:	4683      	mov	fp, r0
 801a3e4:	4688      	mov	r8, r1
 801a3e6:	2b00      	cmp	r3, #0
 801a3e8:	f000 8112 	beq.w	801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a3ec:	6823      	ldr	r3, [r4, #0]
 801a3ee:	2b00      	cmp	r3, #0
 801a3f0:	f000 810e 	beq.w	801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a3f4:	7ba3      	ldrb	r3, [r4, #14]
 801a3f6:	2b00      	cmp	r3, #0
 801a3f8:	f000 810a 	beq.w	801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a3fc:	6810      	ldr	r0, [r2, #0]
 801a3fe:	6851      	ldr	r1, [r2, #4]
 801a400:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 801a404:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801a408:	ad0a      	add	r5, sp, #40	@ 0x28
 801a40a:	462b      	mov	r3, r5
 801a40c:	c303      	stmia	r3!, {r0, r1}
 801a40e:	2100      	movs	r1, #0
 801a410:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801a414:	910c      	str	r1, [sp, #48]	@ 0x30
 801a416:	79a2      	ldrb	r2, [r4, #6]
 801a418:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a41c:	a90c      	add	r1, sp, #48	@ 0x30
 801a41e:	4628      	mov	r0, r5
 801a420:	f7ff fced 	bl	8019dfe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801a424:	a90c      	add	r1, sp, #48	@ 0x30
 801a426:	4608      	mov	r0, r1
 801a428:	79a2      	ldrb	r2, [r4, #6]
 801a42a:	f7ff fce8 	bl	8019dfe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801a42e:	a817      	add	r0, sp, #92	@ 0x5c
 801a430:	f002 fe28 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 801a434:	6820      	ldr	r0, [r4, #0]
 801a436:	6803      	ldr	r3, [r0, #0]
 801a438:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801a43a:	4798      	blx	r3
 801a43c:	4606      	mov	r6, r0
 801a43e:	6820      	ldr	r0, [r4, #0]
 801a440:	6803      	ldr	r3, [r0, #0]
 801a442:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801a444:	4798      	blx	r3
 801a446:	4633      	mov	r3, r6
 801a448:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801a44a:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801a44c:	9000      	str	r0, [sp, #0]
 801a44e:	a817      	add	r0, sp, #92	@ 0x5c
 801a450:	f002 fe73 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a454:	6820      	ldr	r0, [r4, #0]
 801a456:	f894 a004 	ldrb.w	sl, [r4, #4]
 801a45a:	6803      	ldr	r3, [r0, #0]
 801a45c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a45e:	4798      	blx	r3
 801a460:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 801a464:	6823      	ldr	r3, [r4, #0]
 801a466:	4607      	mov	r7, r0
 801a468:	4406      	add	r6, r0
 801a46a:	a830      	add	r0, sp, #192	@ 0xc0
 801a46c:	f893 9009 	ldrb.w	r9, [r3, #9]
 801a470:	f002 fe08 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 801a474:	7c23      	ldrb	r3, [r4, #16]
 801a476:	b17b      	cbz	r3, 801a498 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801a478:	6820      	ldr	r0, [r4, #0]
 801a47a:	6803      	ldr	r3, [r0, #0]
 801a47c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801a47e:	4798      	blx	r3
 801a480:	9009      	str	r0, [sp, #36]	@ 0x24
 801a482:	6820      	ldr	r0, [r4, #0]
 801a484:	6802      	ldr	r2, [r0, #0]
 801a486:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 801a488:	4790      	blx	r2
 801a48a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a48c:	9000      	str	r0, [sp, #0]
 801a48e:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801a490:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801a492:	a830      	add	r0, sp, #192	@ 0xc0
 801a494:	f002 fe51 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a498:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801a49c:	7be2      	ldrb	r2, [r4, #15]
 801a49e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801a4a2:	1a8a      	subs	r2, r1, r2
 801a4a4:	7c21      	ldrb	r1, [r4, #16]
 801a4a6:	9103      	str	r1, [sp, #12]
 801a4a8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801a4ac:	9102      	str	r1, [sp, #8]
 801a4ae:	6821      	ldr	r1, [r4, #0]
 801a4b0:	9101      	str	r1, [sp, #4]
 801a4b2:	7961      	ldrb	r1, [r4, #5]
 801a4b4:	9100      	str	r1, [sp, #0]
 801a4b6:	b292      	uxth	r2, r2
 801a4b8:	a930      	add	r1, sp, #192	@ 0xc0
 801a4ba:	a80e      	add	r0, sp, #56	@ 0x38
 801a4bc:	f7ff fc20 	bl	8019d00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801a4c0:	2e00      	cmp	r6, #0
 801a4c2:	dc5b      	bgt.n	801a57c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 801a4c4:	af17      	add	r7, sp, #92	@ 0x5c
 801a4c6:	f04f 0900 	mov.w	r9, #0
 801a4ca:	7c23      	ldrb	r3, [r4, #16]
 801a4cc:	2b00      	cmp	r3, #0
 801a4ce:	f000 80b1 	beq.w	801a634 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801a4d2:	a80e      	add	r0, sp, #56	@ 0x38
 801a4d4:	f7ff fe4c 	bl	801a170 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801a4d8:	f1ba 0f00 	cmp.w	sl, #0
 801a4dc:	f000 80a5 	beq.w	801a62a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801a4e0:	7c23      	ldrb	r3, [r4, #16]
 801a4e2:	9309      	str	r3, [sp, #36]	@ 0x24
 801a4e4:	2264      	movs	r2, #100	@ 0x64
 801a4e6:	4639      	mov	r1, r7
 801a4e8:	a849      	add	r0, sp, #292	@ 0x124
 801a4ea:	f014 f898 	bl	802e61e <memcpy>
 801a4ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a4f0:	2b00      	cmp	r3, #0
 801a4f2:	f000 80a7 	beq.w	801a644 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801a4f6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 801a4fa:	7922      	ldrb	r2, [r4, #4]
 801a4fc:	2a01      	cmp	r2, #1
 801a4fe:	f040 808a 	bne.w	801a616 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801a502:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 801a506:	1ac0      	subs	r0, r0, r3
 801a508:	2302      	movs	r3, #2
 801a50a:	fb90 f0f3 	sdiv	r0, r0, r3
 801a50e:	b200      	sxth	r0, r0
 801a510:	7c23      	ldrb	r3, [r4, #16]
 801a512:	2b00      	cmp	r3, #0
 801a514:	f000 808b 	beq.w	801a62e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801a518:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 801a51c:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 801a520:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a524:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801a528:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801a52c:	4410      	add	r0, r2
 801a52e:	b200      	sxth	r0, r0
 801a530:	9000      	str	r0, [sp, #0]
 801a532:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801a536:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801a53a:	4642      	mov	r2, r8
 801a53c:	2100      	movs	r1, #0
 801a53e:	4658      	mov	r0, fp
 801a540:	f7ff fc8e 	bl	8019e60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801a544:	2800      	cmp	r0, #0
 801a546:	d163      	bne.n	801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a548:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801a54c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801a550:	b2b2      	uxth	r2, r6
 801a552:	4413      	add	r3, r2
 801a554:	1a8a      	subs	r2, r1, r2
 801a556:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801a55a:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801a55e:	b21b      	sxth	r3, r3
 801a560:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a564:	2a00      	cmp	r2, #0
 801a566:	d153      	bne.n	801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a568:	6822      	ldr	r2, [r4, #0]
 801a56a:	8869      	ldrh	r1, [r5, #2]
 801a56c:	7a12      	ldrb	r2, [r2, #8]
 801a56e:	1a9b      	subs	r3, r3, r2
 801a570:	88ea      	ldrh	r2, [r5, #6]
 801a572:	440a      	add	r2, r1
 801a574:	b212      	sxth	r2, r2
 801a576:	4293      	cmp	r3, r2
 801a578:	dda7      	ble.n	801a4ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801a57a:	e049      	b.n	801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a57c:	7c23      	ldrb	r3, [r4, #16]
 801a57e:	444f      	add	r7, r9
 801a580:	b1c3      	cbz	r3, 801a5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801a582:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 801a586:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a58a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801a58e:	443b      	add	r3, r7
 801a590:	4293      	cmp	r3, r2
 801a592:	da97      	bge.n	801a4c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801a594:	a80e      	add	r0, sp, #56	@ 0x38
 801a596:	f7ff fdeb 	bl	801a170 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801a59a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 801a59e:	3b01      	subs	r3, #1
 801a5a0:	b29b      	uxth	r3, r3
 801a5a2:	454b      	cmp	r3, r9
 801a5a4:	9309      	str	r3, [sp, #36]	@ 0x24
 801a5a6:	d021      	beq.n	801a5ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801a5a8:	7961      	ldrb	r1, [r4, #5]
 801a5aa:	a817      	add	r0, sp, #92	@ 0x5c
 801a5ac:	f7ef fcf8 	bl	8009fa0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801a5b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5b2:	e7f4      	b.n	801a59e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 801a5b4:	fa1f f986 	uxth.w	r9, r6
 801a5b8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a5bc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801a5c0:	443b      	add	r3, r7
 801a5c2:	4293      	cmp	r3, r2
 801a5c4:	f6bf af7e 	bge.w	801a4c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801a5c8:	a817      	add	r0, sp, #92	@ 0x5c
 801a5ca:	f003 f9b1 	bl	801d930 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a5ce:	b1f8      	cbz	r0, 801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a5d0:	280a      	cmp	r0, #10
 801a5d2:	d1f1      	bne.n	801a5b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801a5d4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801a5d8:	444b      	add	r3, r9
 801a5da:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a5de:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801a5e2:	eba3 0309 	sub.w	r3, r3, r9
 801a5e6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a5ea:	e7e5      	b.n	801a5b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801a5ec:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801a5f0:	b2b3      	uxth	r3, r6
 801a5f2:	441a      	add	r2, r3
 801a5f4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801a5f8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 801a5fc:	1ad3      	subs	r3, r2, r3
 801a5fe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a602:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801a606:	b11b      	cbz	r3, 801a610 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801a608:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 801a60c:	2b00      	cmp	r3, #0
 801a60e:	d0ba      	beq.n	801a586 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801a610:	b063      	add	sp, #396	@ 0x18c
 801a612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a616:	2a02      	cmp	r2, #2
 801a618:	d105      	bne.n	801a626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801a61a:	7be2      	ldrb	r2, [r4, #15]
 801a61c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801a620:	1a80      	subs	r0, r0, r2
 801a622:	1ac0      	subs	r0, r0, r3
 801a624:	e773      	b.n	801a50e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801a626:	2000      	movs	r0, #0
 801a628:	e772      	b.n	801a510 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801a62a:	7be0      	ldrb	r0, [r4, #15]
 801a62c:	e770      	b.n	801a510 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801a62e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801a632:	e773      	b.n	801a51c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801a634:	f1ba 0f00 	cmp.w	sl, #0
 801a638:	d0f7      	beq.n	801a62a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801a63a:	2264      	movs	r2, #100	@ 0x64
 801a63c:	4639      	mov	r1, r7
 801a63e:	a849      	add	r0, sp, #292	@ 0x124
 801a640:	f013 ffed 	bl	802e61e <memcpy>
 801a644:	2300      	movs	r3, #0
 801a646:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801a64a:	6821      	ldr	r1, [r4, #0]
 801a64c:	a849      	add	r0, sp, #292	@ 0x124
 801a64e:	f7ff fb9a 	bl	8019d86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801a652:	b203      	sxth	r3, r0
 801a654:	e751      	b.n	801a4fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801a656 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801a656:	2b03      	cmp	r3, #3
 801a658:	d818      	bhi.n	801a68c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801a65a:	e8df f003 	tbb	[pc, r3]
 801a65e:	0602      	.short	0x0602
 801a660:	130d      	.short	0x130d
 801a662:	f9b0 2000 	ldrsh.w	r2, [r0]
 801a666:	1850      	adds	r0, r2, r1
 801a668:	4770      	bx	lr
 801a66a:	8803      	ldrh	r3, [r0, #0]
 801a66c:	8880      	ldrh	r0, [r0, #4]
 801a66e:	4418      	add	r0, r3
 801a670:	b200      	sxth	r0, r0
 801a672:	1a80      	subs	r0, r0, r2
 801a674:	3801      	subs	r0, #1
 801a676:	4770      	bx	lr
 801a678:	8803      	ldrh	r3, [r0, #0]
 801a67a:	8880      	ldrh	r0, [r0, #4]
 801a67c:	4418      	add	r0, r3
 801a67e:	b200      	sxth	r0, r0
 801a680:	1a40      	subs	r0, r0, r1
 801a682:	e7f7      	b.n	801a674 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801a684:	f9b0 0000 	ldrsh.w	r0, [r0]
 801a688:	4410      	add	r0, r2
 801a68a:	4770      	bx	lr
 801a68c:	2000      	movs	r0, #0
 801a68e:	4770      	bx	lr

0801a690 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801a690:	2b03      	cmp	r3, #3
 801a692:	d817      	bhi.n	801a6c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801a694:	e8df f003 	tbb	[pc, r3]
 801a698:	10090602 	.word	0x10090602
 801a69c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801a6a0:	1850      	adds	r0, r2, r1
 801a6a2:	4770      	bx	lr
 801a6a4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801a6a8:	e7fa      	b.n	801a6a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801a6aa:	8843      	ldrh	r3, [r0, #2]
 801a6ac:	88c0      	ldrh	r0, [r0, #6]
 801a6ae:	4418      	add	r0, r3
 801a6b0:	b200      	sxth	r0, r0
 801a6b2:	1a80      	subs	r0, r0, r2
 801a6b4:	3801      	subs	r0, #1
 801a6b6:	4770      	bx	lr
 801a6b8:	8843      	ldrh	r3, [r0, #2]
 801a6ba:	88c0      	ldrh	r0, [r0, #6]
 801a6bc:	4418      	add	r0, r3
 801a6be:	b200      	sxth	r0, r0
 801a6c0:	1a40      	subs	r0, r0, r1
 801a6c2:	e7f7      	b.n	801a6b4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801a6c4:	2000      	movs	r0, #0
 801a6c6:	4770      	bx	lr

0801a6c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801a6c8:	4b01      	ldr	r3, [pc, #4]	@ (801a6d0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801a6ca:	2200      	movs	r2, #0
 801a6cc:	601a      	str	r2, [r3, #0]
 801a6ce:	4770      	bx	lr
 801a6d0:	20013894 	.word	0x20013894

0801a6d4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801a6d4:	4603      	mov	r3, r0
 801a6d6:	b1c8      	cbz	r0, 801a70c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801a6d8:	0c02      	lsrs	r2, r0, #16
 801a6da:	0412      	lsls	r2, r2, #16
 801a6dc:	b9a2      	cbnz	r2, 801a708 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801a6de:	0403      	lsls	r3, r0, #16
 801a6e0:	2010      	movs	r0, #16
 801a6e2:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801a6e6:	bf04      	itt	eq
 801a6e8:	021b      	lsleq	r3, r3, #8
 801a6ea:	3008      	addeq	r0, #8
 801a6ec:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801a6f0:	bf04      	itt	eq
 801a6f2:	011b      	lsleq	r3, r3, #4
 801a6f4:	3004      	addeq	r0, #4
 801a6f6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801a6fa:	bf04      	itt	eq
 801a6fc:	009b      	lsleq	r3, r3, #2
 801a6fe:	3002      	addeq	r0, #2
 801a700:	2b00      	cmp	r3, #0
 801a702:	db04      	blt.n	801a70e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801a704:	3001      	adds	r0, #1
 801a706:	4770      	bx	lr
 801a708:	2000      	movs	r0, #0
 801a70a:	e7ea      	b.n	801a6e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801a70c:	2020      	movs	r0, #32
 801a70e:	4770      	bx	lr

0801a710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801a710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a714:	b087      	sub	sp, #28
 801a716:	460d      	mov	r5, r1
 801a718:	4616      	mov	r6, r2
 801a71a:	4698      	mov	r8, r3
 801a71c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 801a720:	4601      	mov	r1, r0
 801a722:	b120      	cbz	r0, 801a72e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801a724:	b11a      	cbz	r2, 801a72e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801a726:	2d1f      	cmp	r5, #31
 801a728:	d801      	bhi.n	801a72e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801a72a:	2b1f      	cmp	r3, #31
 801a72c:	d904      	bls.n	801a738 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801a72e:	2000      	movs	r0, #0
 801a730:	6038      	str	r0, [r7, #0]
 801a732:	b007      	add	sp, #28
 801a734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a738:	b97d      	cbnz	r5, 801a75a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801a73a:	b143      	cbz	r3, 801a74e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 801a73c:	4602      	mov	r2, r0
 801a73e:	e9cd 4700 	strd	r4, r7, [sp]
 801a742:	462b      	mov	r3, r5
 801a744:	4641      	mov	r1, r8
 801a746:	4630      	mov	r0, r6
 801a748:	f7ff ffe2 	bl	801a710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a74c:	e7f1      	b.n	801a732 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801a74e:	f04f 33ff 	mov.w	r3, #4294967295
 801a752:	603b      	str	r3, [r7, #0]
 801a754:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801a758:	e7eb      	b.n	801a732 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801a75a:	fa32 fa05 	lsrs.w	sl, r2, r5
 801a75e:	d106      	bne.n	801a76e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801a760:	4346      	muls	r6, r0
 801a762:	fbb6 f0f4 	udiv	r0, r6, r4
 801a766:	fb04 6610 	mls	r6, r4, r0, r6
 801a76a:	603e      	str	r6, [r7, #0]
 801a76c:	e7e1      	b.n	801a732 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801a76e:	2201      	movs	r2, #1
 801a770:	40aa      	lsls	r2, r5
 801a772:	3a01      	subs	r2, #1
 801a774:	4016      	ands	r6, r2
 801a776:	fa00 fb05 	lsl.w	fp, r0, r5
 801a77a:	4630      	mov	r0, r6
 801a77c:	fbbb f9f4 	udiv	r9, fp, r4
 801a780:	fb0a f309 	mul.w	r3, sl, r9
 801a784:	9303      	str	r3, [sp, #12]
 801a786:	f7ff ffa5 	bl	801a6d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801a78a:	462b      	mov	r3, r5
 801a78c:	460a      	mov	r2, r1
 801a78e:	e9cd 4700 	strd	r4, r7, [sp]
 801a792:	4601      	mov	r1, r0
 801a794:	4630      	mov	r0, r6
 801a796:	f7ff ffbb 	bl	801a710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a79a:	fb04 b919 	mls	r9, r4, r9, fp
 801a79e:	4606      	mov	r6, r0
 801a7a0:	4648      	mov	r0, r9
 801a7a2:	eb05 0108 	add.w	r1, r5, r8
 801a7a6:	f7ff ff95 	bl	801a6d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801a7aa:	ab05      	add	r3, sp, #20
 801a7ac:	e9cd 4300 	strd	r4, r3, [sp]
 801a7b0:	464a      	mov	r2, r9
 801a7b2:	4603      	mov	r3, r0
 801a7b4:	4650      	mov	r0, sl
 801a7b6:	f7ff ffab 	bl	801a710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a7ba:	6839      	ldr	r1, [r7, #0]
 801a7bc:	9a05      	ldr	r2, [sp, #20]
 801a7be:	9b03      	ldr	r3, [sp, #12]
 801a7c0:	4411      	add	r1, r2
 801a7c2:	fbb1 f2f4 	udiv	r2, r1, r4
 801a7c6:	18d3      	adds	r3, r2, r3
 801a7c8:	441e      	add	r6, r3
 801a7ca:	fb04 1412 	mls	r4, r4, r2, r1
 801a7ce:	4430      	add	r0, r6
 801a7d0:	603c      	str	r4, [r7, #0]
 801a7d2:	e7ae      	b.n	801a732 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0801a7d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801a7d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a7d8:	b085      	sub	sp, #20
 801a7da:	f1b0 0900 	subs.w	r9, r0, #0
 801a7de:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801a7e0:	461d      	mov	r5, r3
 801a7e2:	bfbf      	itttt	lt
 801a7e4:	6823      	ldrlt	r3, [r4, #0]
 801a7e6:	425b      	neglt	r3, r3
 801a7e8:	f1c9 0900 	rsblt	r9, r9, #0
 801a7ec:	6023      	strlt	r3, [r4, #0]
 801a7ee:	bfb4      	ite	lt
 801a7f0:	f04f 36ff 	movlt.w	r6, #4294967295
 801a7f4:	2601      	movge	r6, #1
 801a7f6:	2a00      	cmp	r2, #0
 801a7f8:	4617      	mov	r7, r2
 801a7fa:	da04      	bge.n	801a806 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801a7fc:	6823      	ldr	r3, [r4, #0]
 801a7fe:	425b      	negs	r3, r3
 801a800:	4257      	negs	r7, r2
 801a802:	4276      	negs	r6, r6
 801a804:	6023      	str	r3, [r4, #0]
 801a806:	2d00      	cmp	r5, #0
 801a808:	4638      	mov	r0, r7
 801a80a:	bfba      	itte	lt
 801a80c:	426d      	neglt	r5, r5
 801a80e:	f04f 38ff 	movlt.w	r8, #4294967295
 801a812:	f04f 0801 	movge.w	r8, #1
 801a816:	f7ff ff5d 	bl	801a6d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801a81a:	ab03      	add	r3, sp, #12
 801a81c:	e9cd 5300 	strd	r5, r3, [sp]
 801a820:	463a      	mov	r2, r7
 801a822:	4603      	mov	r3, r0
 801a824:	4648      	mov	r0, r9
 801a826:	f7ff ff73 	bl	801a710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801a82a:	6823      	ldr	r3, [r4, #0]
 801a82c:	9a03      	ldr	r2, [sp, #12]
 801a82e:	4546      	cmp	r6, r8
 801a830:	441a      	add	r2, r3
 801a832:	fb92 f3f5 	sdiv	r3, r2, r5
 801a836:	4418      	add	r0, r3
 801a838:	bf18      	it	ne
 801a83a:	4240      	negne	r0, r0
 801a83c:	fb05 2313 	mls	r3, r5, r3, r2
 801a840:	1c72      	adds	r2, r6, #1
 801a842:	6023      	str	r3, [r4, #0]
 801a844:	d105      	bne.n	801a852 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801a846:	2b00      	cmp	r3, #0
 801a848:	f1c3 0200 	rsb	r2, r3, #0
 801a84c:	db0b      	blt.n	801a866 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801a84e:	6022      	str	r2, [r4, #0]
 801a850:	e006      	b.n	801a860 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801a852:	2e01      	cmp	r6, #1
 801a854:	d104      	bne.n	801a860 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801a856:	2b00      	cmp	r3, #0
 801a858:	da02      	bge.n	801a860 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801a85a:	442b      	add	r3, r5
 801a85c:	3801      	subs	r0, #1
 801a85e:	6023      	str	r3, [r4, #0]
 801a860:	b005      	add	sp, #20
 801a862:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a866:	3801      	subs	r0, #1
 801a868:	1b52      	subs	r2, r2, r5
 801a86a:	e7f0      	b.n	801a84e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0801a86c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801a86c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a870:	4c1c      	ldr	r4, [pc, #112]	@ (801a8e4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801a872:	6807      	ldr	r7, [r0, #0]
 801a874:	69a3      	ldr	r3, [r4, #24]
 801a876:	4605      	mov	r5, r0
 801a878:	b92b      	cbnz	r3, 801a886 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801a87a:	6840      	ldr	r0, [r0, #4]
 801a87c:	e9c5 7000 	strd	r7, r0, [r5]
 801a880:	b004      	add	sp, #16
 801a882:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a886:	68a2      	ldr	r2, [r4, #8]
 801a888:	6820      	ldr	r0, [r4, #0]
 801a88a:	ae04      	add	r6, sp, #16
 801a88c:	f04f 0802 	mov.w	r8, #2
 801a890:	fb93 f1f8 	sdiv	r1, r3, r8
 801a894:	440a      	add	r2, r1
 801a896:	f846 2d04 	str.w	r2, [r6, #-4]!
 801a89a:	69e1      	ldr	r1, [r4, #28]
 801a89c:	9600      	str	r6, [sp, #0]
 801a89e:	463a      	mov	r2, r7
 801a8a0:	f7ff ff98 	bl	801a7d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a8a4:	69a3      	ldr	r3, [r4, #24]
 801a8a6:	686a      	ldr	r2, [r5, #4]
 801a8a8:	6a21      	ldr	r1, [r4, #32]
 801a8aa:	9600      	str	r6, [sp, #0]
 801a8ac:	4607      	mov	r7, r0
 801a8ae:	6860      	ldr	r0, [r4, #4]
 801a8b0:	f7ff ff90 	bl	801a7d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a8b4:	6962      	ldr	r2, [r4, #20]
 801a8b6:	69a3      	ldr	r3, [r4, #24]
 801a8b8:	fb93 f8f8 	sdiv	r8, r3, r8
 801a8bc:	4442      	add	r2, r8
 801a8be:	9203      	str	r2, [sp, #12]
 801a8c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 801a8c2:	682a      	ldr	r2, [r5, #0]
 801a8c4:	9600      	str	r6, [sp, #0]
 801a8c6:	4407      	add	r7, r0
 801a8c8:	68e0      	ldr	r0, [r4, #12]
 801a8ca:	f7ff ff83 	bl	801a7d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a8ce:	9600      	str	r6, [sp, #0]
 801a8d0:	4680      	mov	r8, r0
 801a8d2:	69a3      	ldr	r3, [r4, #24]
 801a8d4:	686a      	ldr	r2, [r5, #4]
 801a8d6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 801a8d8:	6920      	ldr	r0, [r4, #16]
 801a8da:	f7ff ff7b 	bl	801a7d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801a8de:	4440      	add	r0, r8
 801a8e0:	e7cc      	b.n	801a87c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801a8e2:	bf00      	nop
 801a8e4:	20013898 	.word	0x20013898

0801a8e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801a8e8:	4b07      	ldr	r3, [pc, #28]	@ (801a908 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801a8ea:	781b      	ldrb	r3, [r3, #0]
 801a8ec:	2b01      	cmp	r3, #1
 801a8ee:	d109      	bne.n	801a904 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801a8f0:	f9b1 3000 	ldrsh.w	r3, [r1]
 801a8f4:	f9b0 2000 	ldrsh.w	r2, [r0]
 801a8f8:	8003      	strh	r3, [r0, #0]
 801a8fa:	4b04      	ldr	r3, [pc, #16]	@ (801a90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801a8fc:	881b      	ldrh	r3, [r3, #0]
 801a8fe:	3b01      	subs	r3, #1
 801a900:	1a9b      	subs	r3, r3, r2
 801a902:	800b      	strh	r3, [r1, #0]
 801a904:	4770      	bx	lr
 801a906:	bf00      	nop
 801a908:	2001387c 	.word	0x2001387c
 801a90c:	20013878 	.word	0x20013878

0801a910 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801a910:	b510      	push	{r4, lr}
 801a912:	4b07      	ldr	r3, [pc, #28]	@ (801a930 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801a914:	781b      	ldrb	r3, [r3, #0]
 801a916:	2b01      	cmp	r3, #1
 801a918:	d108      	bne.n	801a92c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801a91a:	4b06      	ldr	r3, [pc, #24]	@ (801a934 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801a91c:	880c      	ldrh	r4, [r1, #0]
 801a91e:	881b      	ldrh	r3, [r3, #0]
 801a920:	f9b0 2000 	ldrsh.w	r2, [r0]
 801a924:	3b01      	subs	r3, #1
 801a926:	1b1b      	subs	r3, r3, r4
 801a928:	8003      	strh	r3, [r0, #0]
 801a92a:	800a      	strh	r2, [r1, #0]
 801a92c:	bd10      	pop	{r4, pc}
 801a92e:	bf00      	nop
 801a930:	2001387c 	.word	0x2001387c
 801a934:	20013878 	.word	0x20013878

0801a938 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801a938:	b510      	push	{r4, lr}
 801a93a:	4b0a      	ldr	r3, [pc, #40]	@ (801a964 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801a93c:	781b      	ldrb	r3, [r3, #0]
 801a93e:	2b01      	cmp	r3, #1
 801a940:	d10e      	bne.n	801a960 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801a942:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801a946:	8843      	ldrh	r3, [r0, #2]
 801a948:	f9b0 4000 	ldrsh.w	r4, [r0]
 801a94c:	8044      	strh	r4, [r0, #2]
 801a94e:	18ca      	adds	r2, r1, r3
 801a950:	4b05      	ldr	r3, [pc, #20]	@ (801a968 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801a952:	881b      	ldrh	r3, [r3, #0]
 801a954:	1a9b      	subs	r3, r3, r2
 801a956:	8003      	strh	r3, [r0, #0]
 801a958:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801a95c:	80c3      	strh	r3, [r0, #6]
 801a95e:	8081      	strh	r1, [r0, #4]
 801a960:	bd10      	pop	{r4, pc}
 801a962:	bf00      	nop
 801a964:	2001387c 	.word	0x2001387c
 801a968:	20013878 	.word	0x20013878

0801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801a96c:	4b08      	ldr	r3, [pc, #32]	@ (801a990 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801a96e:	781b      	ldrb	r3, [r3, #0]
 801a970:	2b01      	cmp	r3, #1
 801a972:	d10c      	bne.n	801a98e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801a974:	8803      	ldrh	r3, [r0, #0]
 801a976:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801a97a:	8842      	ldrh	r2, [r0, #2]
 801a97c:	8002      	strh	r2, [r0, #0]
 801a97e:	185a      	adds	r2, r3, r1
 801a980:	4b04      	ldr	r3, [pc, #16]	@ (801a994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801a982:	881b      	ldrh	r3, [r3, #0]
 801a984:	1a9b      	subs	r3, r3, r2
 801a986:	8043      	strh	r3, [r0, #2]
 801a988:	88c3      	ldrh	r3, [r0, #6]
 801a98a:	8083      	strh	r3, [r0, #4]
 801a98c:	80c1      	strh	r1, [r0, #6]
 801a98e:	4770      	bx	lr
 801a990:	2001387c 	.word	0x2001387c
 801a994:	20013878 	.word	0x20013878

0801a998 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801a998:	b510      	push	{r4, lr}
 801a99a:	4b07      	ldr	r3, [pc, #28]	@ (801a9b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801a99c:	781b      	ldrb	r3, [r3, #0]
 801a99e:	2b01      	cmp	r3, #1
 801a9a0:	d108      	bne.n	801a9b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801a9a2:	f9b1 3000 	ldrsh.w	r3, [r1]
 801a9a6:	f9b0 4000 	ldrsh.w	r4, [r0]
 801a9aa:	8003      	strh	r3, [r0, #0]
 801a9ac:	8893      	ldrh	r3, [r2, #4]
 801a9ae:	3b01      	subs	r3, #1
 801a9b0:	1b1b      	subs	r3, r3, r4
 801a9b2:	800b      	strh	r3, [r1, #0]
 801a9b4:	bd10      	pop	{r4, pc}
 801a9b6:	bf00      	nop
 801a9b8:	2001387c 	.word	0x2001387c

0801a9bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 801a9bc:	4b0b      	ldr	r3, [pc, #44]	@ (801a9ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801a9be:	781b      	ldrb	r3, [r3, #0]
 801a9c0:	2b01      	cmp	r3, #1
 801a9c2:	d111      	bne.n	801a9e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 801a9c4:	680b      	ldr	r3, [r1, #0]
 801a9c6:	ed90 7a00 	vldr	s14, [r0]
 801a9ca:	6003      	str	r3, [r0, #0]
 801a9cc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801a9d0:	eddf 6a07 	vldr	s13, [pc, #28]	@ 801a9f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 801a9d4:	ee07 3a90 	vmov	s15, r3
 801a9d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a9dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801a9e0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a9e4:	edc1 7a00 	vstr	s15, [r1]
 801a9e8:	4770      	bx	lr
 801a9ea:	bf00      	nop
 801a9ec:	2001387c 	.word	0x2001387c
 801a9f0:	38d1b717 	.word	0x38d1b717

0801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801a9f4:	b510      	push	{r4, lr}
 801a9f6:	4b0a      	ldr	r3, [pc, #40]	@ (801aa20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801a9f8:	781b      	ldrb	r3, [r3, #0]
 801a9fa:	2b01      	cmp	r3, #1
 801a9fc:	460a      	mov	r2, r1
 801a9fe:	d10d      	bne.n	801aa1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801aa00:	8881      	ldrh	r1, [r0, #4]
 801aa02:	8803      	ldrh	r3, [r0, #0]
 801aa04:	440b      	add	r3, r1
 801aa06:	4601      	mov	r1, r0
 801aa08:	3b01      	subs	r3, #1
 801aa0a:	f821 3b02 	strh.w	r3, [r1], #2
 801aa0e:	f7ff ffc3 	bl	801a998 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801aa12:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801aa16:	88c2      	ldrh	r2, [r0, #6]
 801aa18:	8082      	strh	r2, [r0, #4]
 801aa1a:	80c3      	strh	r3, [r0, #6]
 801aa1c:	bd10      	pop	{r4, pc}
 801aa1e:	bf00      	nop
 801aa20:	2001387c 	.word	0x2001387c

0801aa24 <_ZN8touchgfx11Application13requestRedrawEv>:
 801aa24:	4b06      	ldr	r3, [pc, #24]	@ (801aa40 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801aa26:	f9b3 2000 	ldrsh.w	r2, [r3]
 801aa2a:	4b06      	ldr	r3, [pc, #24]	@ (801aa44 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801aa2c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 801aa30:	f9b3 3000 	ldrsh.w	r3, [r3]
 801aa34:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 801aa38:	2100      	movs	r1, #0
 801aa3a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 801aa3e:	4770      	bx	lr
 801aa40:	20013878 	.word	0x20013878
 801aa44:	2001387a 	.word	0x2001387a

0801aa48 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801aa48:	4b03      	ldr	r3, [pc, #12]	@ (801aa58 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801aa4a:	6818      	ldr	r0, [r3, #0]
 801aa4c:	b110      	cbz	r0, 801aa54 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801aa4e:	6803      	ldr	r3, [r0, #0]
 801aa50:	699b      	ldr	r3, [r3, #24]
 801aa52:	4718      	bx	r3
 801aa54:	4770      	bx	lr
 801aa56:	bf00      	nop
 801aa58:	200138c8 	.word	0x200138c8

0801aa5c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801aa5c:	4770      	bx	lr
	...

0801aa60 <_ZN8touchgfx11Application4drawEv>:
 801aa60:	b507      	push	{r0, r1, r2, lr}
 801aa62:	4b09      	ldr	r3, [pc, #36]	@ (801aa88 <_ZN8touchgfx11Application4drawEv+0x28>)
 801aa64:	f9b3 2000 	ldrsh.w	r2, [r3]
 801aa68:	4b08      	ldr	r3, [pc, #32]	@ (801aa8c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801aa6a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801aa6e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801aa72:	f8ad 3006 	strh.w	r3, [sp, #6]
 801aa76:	6803      	ldr	r3, [r0, #0]
 801aa78:	2100      	movs	r1, #0
 801aa7a:	9100      	str	r1, [sp, #0]
 801aa7c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801aa7e:	4669      	mov	r1, sp
 801aa80:	4798      	blx	r3
 801aa82:	b003      	add	sp, #12
 801aa84:	f85d fb04 	ldr.w	pc, [sp], #4
 801aa88:	20013878 	.word	0x20013878
 801aa8c:	2001387a 	.word	0x2001387a

0801aa90 <_ZN8touchgfx11Application10invalidateEv>:
 801aa90:	4b09      	ldr	r3, [pc, #36]	@ (801aab8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801aa92:	f9b3 2000 	ldrsh.w	r2, [r3]
 801aa96:	4b09      	ldr	r3, [pc, #36]	@ (801aabc <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801aa98:	b082      	sub	sp, #8
 801aa9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801aa9e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801aaa2:	2100      	movs	r1, #0
 801aaa4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801aaa8:	9100      	str	r1, [sp, #0]
 801aaaa:	6803      	ldr	r3, [r0, #0]
 801aaac:	aa02      	add	r2, sp, #8
 801aaae:	e912 0006 	ldmdb	r2, {r1, r2}
 801aab2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801aab4:	b002      	add	sp, #8
 801aab6:	4718      	bx	r3
 801aab8:	20013878 	.word	0x20013878
 801aabc:	2001387a 	.word	0x2001387a

0801aac0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801aac0:	4b03      	ldr	r3, [pc, #12]	@ (801aad0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801aac2:	6818      	ldr	r0, [r3, #0]
 801aac4:	b110      	cbz	r0, 801aacc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801aac6:	6803      	ldr	r3, [r0, #0]
 801aac8:	69db      	ldr	r3, [r3, #28]
 801aaca:	4718      	bx	r3
 801aacc:	4770      	bx	lr
 801aace:	bf00      	nop
 801aad0:	200138c8 	.word	0x200138c8

0801aad4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801aad4:	4b03      	ldr	r3, [pc, #12]	@ (801aae4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801aad6:	6818      	ldr	r0, [r3, #0]
 801aad8:	b110      	cbz	r0, 801aae0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801aada:	6803      	ldr	r3, [r0, #0]
 801aadc:	6a1b      	ldr	r3, [r3, #32]
 801aade:	4718      	bx	r3
 801aae0:	4770      	bx	lr
 801aae2:	bf00      	nop
 801aae4:	200138c8 	.word	0x200138c8

0801aae8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801aae8:	2300      	movs	r3, #0
 801aaea:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801aaee:	4770      	bx	lr

0801aaf0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 801aaf0:	4b03      	ldr	r3, [pc, #12]	@ (801ab00 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801aaf2:	6818      	ldr	r0, [r3, #0]
 801aaf4:	b110      	cbz	r0, 801aafc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801aaf6:	6803      	ldr	r3, [r0, #0]
 801aaf8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801aafa:	4718      	bx	r3
 801aafc:	4770      	bx	lr
 801aafe:	bf00      	nop
 801ab00:	200138c8 	.word	0x200138c8

0801ab04 <_ZN8touchgfx11ApplicationD1Ev>:
 801ab04:	4770      	bx	lr

0801ab06 <_ZN8touchgfx11ApplicationD0Ev>:
 801ab06:	b510      	push	{r4, lr}
 801ab08:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 801ab0c:	4604      	mov	r4, r0
 801ab0e:	f012 fb72 	bl	802d1f6 <_ZdlPvj>
 801ab12:	4620      	mov	r0, r4
 801ab14:	bd10      	pop	{r4, pc}

0801ab16 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801ab16:	b510      	push	{r4, lr}
 801ab18:	f9b1 4000 	ldrsh.w	r4, [r1]
 801ab1c:	888a      	ldrh	r2, [r1, #4]
 801ab1e:	f9b0 3000 	ldrsh.w	r3, [r0]
 801ab22:	4422      	add	r2, r4
 801ab24:	b212      	sxth	r2, r2
 801ab26:	4293      	cmp	r3, r2
 801ab28:	da15      	bge.n	801ab56 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801ab2a:	8882      	ldrh	r2, [r0, #4]
 801ab2c:	4413      	add	r3, r2
 801ab2e:	b21b      	sxth	r3, r3
 801ab30:	429c      	cmp	r4, r3
 801ab32:	da10      	bge.n	801ab56 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801ab34:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801ab38:	88c9      	ldrh	r1, [r1, #6]
 801ab3a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801ab3e:	4419      	add	r1, r3
 801ab40:	b209      	sxth	r1, r1
 801ab42:	428a      	cmp	r2, r1
 801ab44:	da07      	bge.n	801ab56 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801ab46:	88c0      	ldrh	r0, [r0, #6]
 801ab48:	4410      	add	r0, r2
 801ab4a:	b200      	sxth	r0, r0
 801ab4c:	4283      	cmp	r3, r0
 801ab4e:	bfac      	ite	ge
 801ab50:	2000      	movge	r0, #0
 801ab52:	2001      	movlt	r0, #1
 801ab54:	bd10      	pop	{r4, pc}
 801ab56:	2000      	movs	r0, #0
 801ab58:	e7fc      	b.n	801ab54 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801ab5a <_ZN8touchgfx4Rect10restrictToEss>:
 801ab5a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801ab5e:	2b00      	cmp	r3, #0
 801ab60:	b510      	push	{r4, lr}
 801ab62:	da04      	bge.n	801ab6e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801ab64:	8884      	ldrh	r4, [r0, #4]
 801ab66:	4423      	add	r3, r4
 801ab68:	8083      	strh	r3, [r0, #4]
 801ab6a:	2300      	movs	r3, #0
 801ab6c:	8003      	strh	r3, [r0, #0]
 801ab6e:	f9b0 4000 	ldrsh.w	r4, [r0]
 801ab72:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801ab76:	1b09      	subs	r1, r1, r4
 801ab78:	428b      	cmp	r3, r1
 801ab7a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801ab7e:	bfc8      	it	gt
 801ab80:	8081      	strhgt	r1, [r0, #4]
 801ab82:	2b00      	cmp	r3, #0
 801ab84:	da04      	bge.n	801ab90 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801ab86:	88c1      	ldrh	r1, [r0, #6]
 801ab88:	440b      	add	r3, r1
 801ab8a:	80c3      	strh	r3, [r0, #6]
 801ab8c:	2300      	movs	r3, #0
 801ab8e:	8043      	strh	r3, [r0, #2]
 801ab90:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801ab94:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801ab98:	1a52      	subs	r2, r2, r1
 801ab9a:	4293      	cmp	r3, r2
 801ab9c:	bfc8      	it	gt
 801ab9e:	80c2      	strhgt	r2, [r0, #6]
 801aba0:	bd10      	pop	{r4, pc}
	...

0801aba4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801aba4:	b510      	push	{r4, lr}
 801aba6:	4b10      	ldr	r3, [pc, #64]	@ (801abe8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801aba8:	f9b3 2000 	ldrsh.w	r2, [r3]
 801abac:	4b0f      	ldr	r3, [pc, #60]	@ (801abec <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801abae:	460c      	mov	r4, r1
 801abb0:	4620      	mov	r0, r4
 801abb2:	f9b3 1000 	ldrsh.w	r1, [r3]
 801abb6:	f7ff ffd0 	bl	801ab5a <_ZN8touchgfx4Rect10restrictToEss>
 801abba:	4b0d      	ldr	r3, [pc, #52]	@ (801abf0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801abbc:	6818      	ldr	r0, [r3, #0]
 801abbe:	b190      	cbz	r0, 801abe6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801abc0:	6803      	ldr	r3, [r0, #0]
 801abc2:	4621      	mov	r1, r4
 801abc4:	689b      	ldr	r3, [r3, #8]
 801abc6:	4798      	blx	r3
 801abc8:	4b0a      	ldr	r3, [pc, #40]	@ (801abf4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801abca:	6818      	ldr	r0, [r3, #0]
 801abcc:	b118      	cbz	r0, 801abd6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801abce:	6803      	ldr	r3, [r0, #0]
 801abd0:	4621      	mov	r1, r4
 801abd2:	689b      	ldr	r3, [r3, #8]
 801abd4:	4798      	blx	r3
 801abd6:	4b08      	ldr	r3, [pc, #32]	@ (801abf8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801abd8:	6818      	ldr	r0, [r3, #0]
 801abda:	6803      	ldr	r3, [r0, #0]
 801abdc:	4621      	mov	r1, r4
 801abde:	69db      	ldr	r3, [r3, #28]
 801abe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801abe4:	4718      	bx	r3
 801abe6:	bd10      	pop	{r4, pc}
 801abe8:	2001387a 	.word	0x2001387a
 801abec:	20013878 	.word	0x20013878
 801abf0:	200138c8 	.word	0x200138c8
 801abf4:	200138c4 	.word	0x200138c4
 801abf8:	20013884 	.word	0x20013884

0801abfc <_ZNK8touchgfx4Rect8includesERKS0_>:
 801abfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801abfe:	4606      	mov	r6, r0
 801ac00:	4608      	mov	r0, r1
 801ac02:	460f      	mov	r7, r1
 801ac04:	f7fa f8ab 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801ac08:	b9e8      	cbnz	r0, 801ac46 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801ac0a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801ac0e:	f9b6 4000 	ldrsh.w	r4, [r6]
 801ac12:	42a5      	cmp	r5, r4
 801ac14:	db17      	blt.n	801ac46 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801ac16:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801ac1a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801ac1e:	429a      	cmp	r2, r3
 801ac20:	db11      	blt.n	801ac46 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801ac22:	88b9      	ldrh	r1, [r7, #4]
 801ac24:	440d      	add	r5, r1
 801ac26:	88b1      	ldrh	r1, [r6, #4]
 801ac28:	440c      	add	r4, r1
 801ac2a:	b22d      	sxth	r5, r5
 801ac2c:	b224      	sxth	r4, r4
 801ac2e:	42a5      	cmp	r5, r4
 801ac30:	dc09      	bgt.n	801ac46 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801ac32:	88f8      	ldrh	r0, [r7, #6]
 801ac34:	4410      	add	r0, r2
 801ac36:	88f2      	ldrh	r2, [r6, #6]
 801ac38:	4413      	add	r3, r2
 801ac3a:	b200      	sxth	r0, r0
 801ac3c:	b21b      	sxth	r3, r3
 801ac3e:	4298      	cmp	r0, r3
 801ac40:	bfcc      	ite	gt
 801ac42:	2000      	movgt	r0, #0
 801ac44:	2001      	movle	r0, #1
 801ac46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801ac48 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801ac48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ac4a:	4604      	mov	r4, r0
 801ac4c:	4608      	mov	r0, r1
 801ac4e:	460d      	mov	r5, r1
 801ac50:	f7fa f885 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801ac54:	b978      	cbnz	r0, 801ac76 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801ac56:	4620      	mov	r0, r4
 801ac58:	f7fa f881 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801ac5c:	f9b5 6000 	ldrsh.w	r6, [r5]
 801ac60:	b150      	cbz	r0, 801ac78 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801ac62:	8026      	strh	r6, [r4, #0]
 801ac64:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801ac68:	8063      	strh	r3, [r4, #2]
 801ac6a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801ac6e:	80a3      	strh	r3, [r4, #4]
 801ac70:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801ac74:	80e3      	strh	r3, [r4, #6]
 801ac76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ac78:	f9b4 1000 	ldrsh.w	r1, [r4]
 801ac7c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801ac80:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801ac84:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801ac88:	88ed      	ldrh	r5, [r5, #6]
 801ac8a:	42b1      	cmp	r1, r6
 801ac8c:	460f      	mov	r7, r1
 801ac8e:	bfa8      	it	ge
 801ac90:	4637      	movge	r7, r6
 801ac92:	4293      	cmp	r3, r2
 801ac94:	4618      	mov	r0, r3
 801ac96:	4466      	add	r6, ip
 801ac98:	bfa8      	it	ge
 801ac9a:	4610      	movge	r0, r2
 801ac9c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801aca0:	8027      	strh	r7, [r4, #0]
 801aca2:	442a      	add	r2, r5
 801aca4:	88e5      	ldrh	r5, [r4, #6]
 801aca6:	8060      	strh	r0, [r4, #2]
 801aca8:	4461      	add	r1, ip
 801acaa:	442b      	add	r3, r5
 801acac:	b236      	sxth	r6, r6
 801acae:	b209      	sxth	r1, r1
 801acb0:	b212      	sxth	r2, r2
 801acb2:	b21b      	sxth	r3, r3
 801acb4:	428e      	cmp	r6, r1
 801acb6:	bfac      	ite	ge
 801acb8:	ebc7 0106 	rsbge	r1, r7, r6
 801acbc:	ebc7 0101 	rsblt	r1, r7, r1
 801acc0:	429a      	cmp	r2, r3
 801acc2:	bfac      	ite	ge
 801acc4:	ebc0 0202 	rsbge	r2, r0, r2
 801acc8:	ebc0 0203 	rsblt	r2, r0, r3
 801accc:	80a1      	strh	r1, [r4, #4]
 801acce:	80e2      	strh	r2, [r4, #6]
 801acd0:	e7d1      	b.n	801ac76 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801acd4 <_ZN8touchgfx11Application11getInstanceEv>:
 801acd4:	4b01      	ldr	r3, [pc, #4]	@ (801acdc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801acd6:	6818      	ldr	r0, [r3, #0]
 801acd8:	4770      	bx	lr
 801acda:	bf00      	nop
 801acdc:	200138d8 	.word	0x200138d8

0801ace0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801ace0:	b510      	push	{r4, lr}
 801ace2:	2300      	movs	r3, #0
 801ace4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 801ace8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801acec:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801acf0:	4604      	mov	r4, r0
 801acf2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801acf6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801acfa:	429a      	cmp	r2, r3
 801acfc:	d90e      	bls.n	801ad1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801acfe:	18e2      	adds	r2, r4, r3
 801ad00:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 801ad04:	b122      	cbz	r2, 801ad10 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801ad06:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801ad0a:	6803      	ldr	r3, [r0, #0]
 801ad0c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801ad0e:	4798      	blx	r3
 801ad10:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801ad14:	3301      	adds	r3, #1
 801ad16:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801ad1a:	e7ea      	b.n	801acf2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801ad1c:	bd10      	pop	{r4, pc}

0801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801ad1e:	2300      	movs	r3, #0
 801ad20:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801ad24:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 801ad28:	30a4      	adds	r0, #164	@ 0xa4
 801ad2a:	f802 3b01 	strb.w	r3, [r2], #1
 801ad2e:	4282      	cmp	r2, r0
 801ad30:	d1fb      	bne.n	801ad2a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801ad32:	4770      	bx	lr

0801ad34 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801ad34:	b570      	push	{r4, r5, r6, lr}
 801ad36:	4c0b      	ldr	r4, [pc, #44]	@ (801ad64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801ad38:	4605      	mov	r5, r0
 801ad3a:	6820      	ldr	r0, [r4, #0]
 801ad3c:	460e      	mov	r6, r1
 801ad3e:	b110      	cbz	r0, 801ad46 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 801ad40:	6803      	ldr	r3, [r0, #0]
 801ad42:	695b      	ldr	r3, [r3, #20]
 801ad44:	4798      	blx	r3
 801ad46:	1d28      	adds	r0, r5, #4
 801ad48:	f7ff ffe9 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801ad4c:	6026      	str	r6, [r4, #0]
 801ad4e:	6833      	ldr	r3, [r6, #0]
 801ad50:	4630      	mov	r0, r6
 801ad52:	68db      	ldr	r3, [r3, #12]
 801ad54:	4798      	blx	r3
 801ad56:	682b      	ldr	r3, [r5, #0]
 801ad58:	4628      	mov	r0, r5
 801ad5a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801ad5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ad60:	4718      	bx	r3
 801ad62:	bf00      	nop
 801ad64:	200138c8 	.word	0x200138c8

0801ad68 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801ad68:	2300      	movs	r3, #0
 801ad6a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801ad6e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 801ad72:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ad74:	461a      	mov	r2, r3
 801ad76:	461c      	mov	r4, r3
 801ad78:	461d      	mov	r5, r3
 801ad7a:	459c      	cmp	ip, r3
 801ad7c:	dd1a      	ble.n	801adb4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801ad7e:	18c6      	adds	r6, r0, r3
 801ad80:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 801ad84:	b16e      	cbz	r6, 801ada2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801ad86:	429a      	cmp	r2, r3
 801ad88:	d008      	beq.n	801ad9c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801ad8a:	fa1f fe82 	uxth.w	lr, r2
 801ad8e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801ad92:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801ad96:	1887      	adds	r7, r0, r2
 801ad98:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 801ad9c:	3201      	adds	r2, #1
 801ad9e:	3301      	adds	r3, #1
 801ada0:	e7eb      	b.n	801ad7a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801ada2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801ada6:	4299      	cmp	r1, r3
 801ada8:	bfa8      	it	ge
 801adaa:	3501      	addge	r5, #1
 801adac:	429e      	cmp	r6, r3
 801adae:	bfc8      	it	gt
 801adb0:	3401      	addgt	r4, #1
 801adb2:	e7f4      	b.n	801ad9e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 801adb4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 801adb8:	1b49      	subs	r1, r1, r5
 801adba:	1b1b      	subs	r3, r3, r4
 801adbc:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801adc0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801adc4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801adc8:	4293      	cmp	r3, r2
 801adca:	dd03      	ble.n	801add4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801adcc:	3b01      	subs	r3, #1
 801adce:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801add2:	e7f7      	b.n	801adc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801add4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801add8 <_ZN8touchgfx11Application15handleTickEventEv>:
 801add8:	b570      	push	{r4, r5, r6, lr}
 801adda:	4d16      	ldr	r5, [pc, #88]	@ (801ae34 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801addc:	4604      	mov	r4, r0
 801adde:	6828      	ldr	r0, [r5, #0]
 801ade0:	b140      	cbz	r0, 801adf4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801ade2:	7a03      	ldrb	r3, [r0, #8]
 801ade4:	b933      	cbnz	r3, 801adf4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801ade6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801adea:	6803      	ldr	r3, [r0, #0]
 801adec:	689b      	ldr	r3, [r3, #8]
 801adee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801adf2:	4718      	bx	r3
 801adf4:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 801adf8:	4e0f      	ldr	r6, [pc, #60]	@ (801ae38 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801adfa:	b973      	cbnz	r3, 801ae1a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801adfc:	b168      	cbz	r0, 801ae1a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801adfe:	7a03      	ldrb	r3, [r0, #8]
 801ae00:	b15b      	cbz	r3, 801ae1a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801ae02:	6830      	ldr	r0, [r6, #0]
 801ae04:	b110      	cbz	r0, 801ae0c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801ae06:	6803      	ldr	r3, [r0, #0]
 801ae08:	691b      	ldr	r3, [r3, #16]
 801ae0a:	4798      	blx	r3
 801ae0c:	6828      	ldr	r0, [r5, #0]
 801ae0e:	6803      	ldr	r3, [r0, #0]
 801ae10:	68db      	ldr	r3, [r3, #12]
 801ae12:	4798      	blx	r3
 801ae14:	2301      	movs	r3, #1
 801ae16:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801ae1a:	3404      	adds	r4, #4
 801ae1c:	4620      	mov	r0, r4
 801ae1e:	f7ff ff5f 	bl	801ace0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801ae22:	4620      	mov	r0, r4
 801ae24:	f7ff ffa0 	bl	801ad68 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801ae28:	6830      	ldr	r0, [r6, #0]
 801ae2a:	b110      	cbz	r0, 801ae32 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801ae2c:	6803      	ldr	r3, [r0, #0]
 801ae2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801ae30:	e7dd      	b.n	801adee <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801ae32:	bd70      	pop	{r4, r5, r6, pc}
 801ae34:	200138cc 	.word	0x200138cc
 801ae38:	200138c8 	.word	0x200138c8

0801ae3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801ae3c:	4603      	mov	r3, r0
 801ae3e:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 801ae42:	2200      	movs	r2, #0
 801ae44:	801a      	strh	r2, [r3, #0]
 801ae46:	805a      	strh	r2, [r3, #2]
 801ae48:	809a      	strh	r2, [r3, #4]
 801ae4a:	80da      	strh	r2, [r3, #6]
 801ae4c:	3308      	adds	r3, #8
 801ae4e:	428b      	cmp	r3, r1
 801ae50:	d1f8      	bne.n	801ae44 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801ae52:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801ae56:	4770      	bx	lr

0801ae58 <_ZN8touchgfx11ApplicationC1Ev>:
 801ae58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ae5a:	4606      	mov	r6, r0
 801ae5c:	4b1c      	ldr	r3, [pc, #112]	@ (801aed0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801ae5e:	f846 3b04 	str.w	r3, [r6], #4
 801ae62:	4604      	mov	r4, r0
 801ae64:	2500      	movs	r5, #0
 801ae66:	22a8      	movs	r2, #168	@ 0xa8
 801ae68:	2100      	movs	r1, #0
 801ae6a:	4630      	mov	r0, r6
 801ae6c:	f013 fb07 	bl	802e47e <memset>
 801ae70:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 801ae74:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801ae78:	f7ff ffe0 	bl	801ae3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801ae7c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 801ae80:	f7ff ffdc 	bl	801ae3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801ae84:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 801ae88:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 801ae8c:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801ae90:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 801ae94:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 801ae98:	490e      	ldr	r1, [pc, #56]	@ (801aed4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801ae9a:	480f      	ldr	r0, [pc, #60]	@ (801aed8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801ae9c:	4f0f      	ldr	r7, [pc, #60]	@ (801aedc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801ae9e:	f011 fb35 	bl	802c50c <CRC_Lock>
 801aea2:	4b0f      	ldr	r3, [pc, #60]	@ (801aee0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801aea4:	b158      	cbz	r0, 801aebe <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801aea6:	801d      	strh	r5, [r3, #0]
 801aea8:	4a0e      	ldr	r2, [pc, #56]	@ (801aee4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801aeaa:	2300      	movs	r3, #0
 801aeac:	6013      	str	r3, [r2, #0]
 801aeae:	4a0e      	ldr	r2, [pc, #56]	@ (801aee8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801aeb0:	603b      	str	r3, [r7, #0]
 801aeb2:	4630      	mov	r0, r6
 801aeb4:	6013      	str	r3, [r2, #0]
 801aeb6:	f7ff ff32 	bl	801ad1e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801aeba:	4620      	mov	r0, r4
 801aebc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801aebe:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801aec2:	2002      	movs	r0, #2
 801aec4:	801a      	strh	r2, [r3, #0]
 801aec6:	6038      	str	r0, [r7, #0]
 801aec8:	f001 ff62 	bl	801cd90 <_ZN8touchgfx6Screen4drawEv>
 801aecc:	e7ec      	b.n	801aea8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801aece:	bf00      	nop
 801aed0:	080324c0 	.word	0x080324c0
 801aed4:	b5e8b5cd 	.word	0xb5e8b5cd
 801aed8:	f407a5c2 	.word	0xf407a5c2
 801aedc:	200138c8 	.word	0x200138c8
 801aee0:	20000084 	.word	0x20000084
 801aee4:	200138d8 	.word	0x200138d8
 801aee8:	200138cc 	.word	0x200138cc

0801aeec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801aeec:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801aef0:	3b01      	subs	r3, #1
 801aef2:	b29b      	uxth	r3, r3
 801aef4:	428b      	cmp	r3, r1
 801aef6:	b510      	push	{r4, lr}
 801aef8:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801aefc:	d908      	bls.n	801af10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801aefe:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801af02:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801af06:	681a      	ldr	r2, [r3, #0]
 801af08:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801af0c:	685a      	ldr	r2, [r3, #4]
 801af0e:	6062      	str	r2, [r4, #4]
 801af10:	bd10      	pop	{r4, pc}
	...

0801af14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801af14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af18:	4b92      	ldr	r3, [pc, #584]	@ (801b164 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 801af1a:	b08f      	sub	sp, #60	@ 0x3c
 801af1c:	ac0a      	add	r4, sp, #40	@ 0x28
 801af1e:	e884 0006 	stmia.w	r4, {r1, r2}
 801af22:	f9b3 2000 	ldrsh.w	r2, [r3]
 801af26:	4b90      	ldr	r3, [pc, #576]	@ (801b168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 801af28:	4683      	mov	fp, r0
 801af2a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801af2e:	4620      	mov	r0, r4
 801af30:	f7ff fe13 	bl	801ab5a <_ZN8touchgfx4Rect10restrictToEss>
 801af34:	4620      	mov	r0, r4
 801af36:	f7f9 ff12 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801af3a:	2800      	cmp	r0, #0
 801af3c:	d170      	bne.n	801b020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801af3e:	4b8b      	ldr	r3, [pc, #556]	@ (801b16c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801af40:	681b      	ldr	r3, [r3, #0]
 801af42:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 801af46:	2b02      	cmp	r3, #2
 801af48:	d06a      	beq.n	801b020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801af4a:	9403      	str	r4, [sp, #12]
 801af4c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801af50:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801af54:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801af58:	35a4      	adds	r5, #164	@ 0xa4
 801af5a:	9301      	str	r3, [sp, #4]
 801af5c:	b15c      	cbz	r4, 801af76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 801af5e:	4629      	mov	r1, r5
 801af60:	9803      	ldr	r0, [sp, #12]
 801af62:	f7ff fe4b 	bl	801abfc <_ZNK8touchgfx4Rect8includesERKS0_>
 801af66:	3c01      	subs	r4, #1
 801af68:	b118      	cbz	r0, 801af72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801af6a:	b2a1      	uxth	r1, r4
 801af6c:	9801      	ldr	r0, [sp, #4]
 801af6e:	f7ff ffbd 	bl	801aeec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801af72:	3d08      	subs	r5, #8
 801af74:	e7f2      	b.n	801af5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801af76:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801af7a:	f8cd a010 	str.w	sl, [sp, #16]
 801af7e:	f10a 33ff 	add.w	r3, sl, #4294967295
 801af82:	9302      	str	r3, [sp, #8]
 801af84:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801af88:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 801af8c:	9306      	str	r3, [sp, #24]
 801af8e:	445c      	add	r4, fp
 801af90:	2500      	movs	r5, #0
 801af92:	4626      	mov	r6, r4
 801af94:	f8cd a014 	str.w	sl, [sp, #20]
 801af98:	462f      	mov	r7, r5
 801af9a:	9b05      	ldr	r3, [sp, #20]
 801af9c:	2b00      	cmp	r3, #0
 801af9e:	d073      	beq.n	801b088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 801afa0:	9903      	ldr	r1, [sp, #12]
 801afa2:	4630      	mov	r0, r6
 801afa4:	f7ff fdb7 	bl	801ab16 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801afa8:	b350      	cbz	r0, 801b000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801afaa:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801afae:	f9b6 c000 	ldrsh.w	ip, [r6]
 801afb2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801afb6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801afba:	45e6      	cmp	lr, ip
 801afbc:	db33      	blt.n	801b026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801afbe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801afc2:	88b3      	ldrh	r3, [r6, #4]
 801afc4:	4472      	add	r2, lr
 801afc6:	4463      	add	r3, ip
 801afc8:	b212      	sxth	r2, r2
 801afca:	b21b      	sxth	r3, r3
 801afcc:	429a      	cmp	r2, r3
 801afce:	dc2a      	bgt.n	801b026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801afd0:	88f3      	ldrh	r3, [r6, #6]
 801afd2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801afd6:	fa1f f289 	uxth.w	r2, r9
 801afda:	4413      	add	r3, r2
 801afdc:	b29b      	uxth	r3, r3
 801afde:	45c8      	cmp	r8, r9
 801afe0:	fa1f fc88 	uxth.w	ip, r8
 801afe4:	fa0f fe83 	sxth.w	lr, r3
 801afe8:	db0f      	blt.n	801b00a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 801afea:	eba3 030c 	sub.w	r3, r3, ip
 801afee:	1ac9      	subs	r1, r1, r3
 801aff0:	b209      	sxth	r1, r1
 801aff2:	2900      	cmp	r1, #0
 801aff4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801aff8:	dd12      	ble.n	801b020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801affa:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801affe:	4605      	mov	r5, r0
 801b000:	9b05      	ldr	r3, [sp, #20]
 801b002:	3b01      	subs	r3, #1
 801b004:	9305      	str	r3, [sp, #20]
 801b006:	3e08      	subs	r6, #8
 801b008:	e7c7      	b.n	801af9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 801b00a:	4461      	add	r1, ip
 801b00c:	b209      	sxth	r1, r1
 801b00e:	4571      	cmp	r1, lr
 801b010:	dc38      	bgt.n	801b084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b012:	eba2 020c 	sub.w	r2, r2, ip
 801b016:	b212      	sxth	r2, r2
 801b018:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801b01c:	2a00      	cmp	r2, #0
 801b01e:	dcee      	bgt.n	801affe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801b020:	b00f      	add	sp, #60	@ 0x3c
 801b022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b026:	45c8      	cmp	r8, r9
 801b028:	db2c      	blt.n	801b084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b02a:	88f3      	ldrh	r3, [r6, #6]
 801b02c:	4499      	add	r9, r3
 801b02e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801b032:	4498      	add	r8, r3
 801b034:	fa0f f989 	sxth.w	r9, r9
 801b038:	fa0f f888 	sxth.w	r8, r8
 801b03c:	45c1      	cmp	r9, r8
 801b03e:	db21      	blt.n	801b084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b040:	88b3      	ldrh	r3, [r6, #4]
 801b042:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801b046:	fa1f f28c 	uxth.w	r2, ip
 801b04a:	4413      	add	r3, r2
 801b04c:	b29b      	uxth	r3, r3
 801b04e:	45e6      	cmp	lr, ip
 801b050:	fa1f f88e 	uxth.w	r8, lr
 801b054:	fa0f f983 	sxth.w	r9, r3
 801b058:	db0a      	blt.n	801b070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 801b05a:	eba3 0308 	sub.w	r3, r3, r8
 801b05e:	1ac9      	subs	r1, r1, r3
 801b060:	b209      	sxth	r1, r1
 801b062:	2900      	cmp	r1, #0
 801b064:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801b068:	ddda      	ble.n	801b020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801b06a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801b06e:	e7c6      	b.n	801affe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801b070:	4441      	add	r1, r8
 801b072:	b209      	sxth	r1, r1
 801b074:	4549      	cmp	r1, r9
 801b076:	dc05      	bgt.n	801b084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b078:	eba2 0208 	sub.w	r2, r2, r8
 801b07c:	b212      	sxth	r2, r2
 801b07e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801b082:	e7cb      	b.n	801b01c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 801b084:	4607      	mov	r7, r0
 801b086:	e7bb      	b.n	801b000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801b088:	2d00      	cmp	r5, #0
 801b08a:	d181      	bne.n	801af90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 801b08c:	2f00      	cmp	r7, #0
 801b08e:	f000 81df 	beq.w	801b450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801b092:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801b096:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801b09a:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801b09e:	b2b3      	uxth	r3, r6
 801b0a0:	9305      	str	r3, [sp, #20]
 801b0a2:	9a05      	ldr	r2, [sp, #20]
 801b0a4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801b0a8:	4413      	add	r3, r2
 801b0aa:	b2ba      	uxth	r2, r7
 801b0ac:	4492      	add	sl, r2
 801b0ae:	b29b      	uxth	r3, r3
 801b0b0:	fa1f fa8a 	uxth.w	sl, sl
 801b0b4:	fa0f f883 	sxth.w	r8, r3
 801b0b8:	fa0f f98a 	sxth.w	r9, sl
 801b0bc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801b0c0:	9b04      	ldr	r3, [sp, #16]
 801b0c2:	2b00      	cmp	r3, #0
 801b0c4:	d054      	beq.n	801b170 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 801b0c6:	9903      	ldr	r1, [sp, #12]
 801b0c8:	4620      	mov	r0, r4
 801b0ca:	f7ff fd24 	bl	801ab16 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b0ce:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801b0d2:	b1c0      	cbz	r0, 801b106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b0d4:	f9b4 e000 	ldrsh.w	lr, [r4]
 801b0d8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801b0dc:	4576      	cmp	r6, lr
 801b0de:	dc22      	bgt.n	801b126 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801b0e0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801b0e4:	44f4      	add	ip, lr
 801b0e6:	fa0f fc8c 	sxth.w	ip, ip
 801b0ea:	45e0      	cmp	r8, ip
 801b0ec:	db1b      	blt.n	801b126 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801b0ee:	428f      	cmp	r7, r1
 801b0f0:	fa1f fc81 	uxth.w	ip, r1
 801b0f4:	88e1      	ldrh	r1, [r4, #6]
 801b0f6:	dc0d      	bgt.n	801b114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 801b0f8:	ebaa 0c0c 	sub.w	ip, sl, ip
 801b0fc:	eba1 010c 	sub.w	r1, r1, ip
 801b100:	f8a4 9002 	strh.w	r9, [r4, #2]
 801b104:	80e1      	strh	r1, [r4, #6]
 801b106:	4628      	mov	r0, r5
 801b108:	9904      	ldr	r1, [sp, #16]
 801b10a:	3901      	subs	r1, #1
 801b10c:	9104      	str	r1, [sp, #16]
 801b10e:	3c08      	subs	r4, #8
 801b110:	4605      	mov	r5, r0
 801b112:	e7d3      	b.n	801b0bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 801b114:	4461      	add	r1, ip
 801b116:	b209      	sxth	r1, r1
 801b118:	4549      	cmp	r1, r9
 801b11a:	dcf5      	bgt.n	801b108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b11c:	eba2 0c0c 	sub.w	ip, r2, ip
 801b120:	f8a4 c006 	strh.w	ip, [r4, #6]
 801b124:	e7ef      	b.n	801b106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b126:	428f      	cmp	r7, r1
 801b128:	dcee      	bgt.n	801b108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b12a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801b12e:	4461      	add	r1, ip
 801b130:	b209      	sxth	r1, r1
 801b132:	4589      	cmp	r9, r1
 801b134:	dbe8      	blt.n	801b108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b136:	4576      	cmp	r6, lr
 801b138:	fa1f fc8e 	uxth.w	ip, lr
 801b13c:	88a1      	ldrh	r1, [r4, #4]
 801b13e:	dc07      	bgt.n	801b150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 801b140:	eba3 0c0c 	sub.w	ip, r3, ip
 801b144:	eba1 010c 	sub.w	r1, r1, ip
 801b148:	f8a4 8000 	strh.w	r8, [r4]
 801b14c:	80a1      	strh	r1, [r4, #4]
 801b14e:	e7da      	b.n	801b106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b150:	4461      	add	r1, ip
 801b152:	b209      	sxth	r1, r1
 801b154:	4588      	cmp	r8, r1
 801b156:	dbd7      	blt.n	801b108 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b158:	9905      	ldr	r1, [sp, #20]
 801b15a:	eba1 0c0c 	sub.w	ip, r1, ip
 801b15e:	f8a4 c004 	strh.w	ip, [r4, #4]
 801b162:	e7d0      	b.n	801b106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b164:	2001387a 	.word	0x2001387a
 801b168:	20013878 	.word	0x20013878
 801b16c:	20013884 	.word	0x20013884
 801b170:	2d00      	cmp	r5, #0
 801b172:	f000 816d 	beq.w	801b450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801b176:	9b06      	ldr	r3, [sp, #24]
 801b178:	445b      	add	r3, fp
 801b17a:	461c      	mov	r4, r3
 801b17c:	9b02      	ldr	r3, [sp, #8]
 801b17e:	3301      	adds	r3, #1
 801b180:	f000 8166 	beq.w	801b450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801b184:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 801b188:	4629      	mov	r1, r5
 801b18a:	9803      	ldr	r0, [sp, #12]
 801b18c:	f7ff fd36 	bl	801abfc <_ZNK8touchgfx4Rect8includesERKS0_>
 801b190:	b120      	cbz	r0, 801b19c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 801b192:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b196:	9801      	ldr	r0, [sp, #4]
 801b198:	f7ff fea8 	bl	801aeec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b19c:	9903      	ldr	r1, [sp, #12]
 801b19e:	4628      	mov	r0, r5
 801b1a0:	f7ff fcb9 	bl	801ab16 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b1a4:	2800      	cmp	r0, #0
 801b1a6:	f000 809c 	beq.w	801b2e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801b1aa:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801b1ae:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801b1b2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801b1b6:	9309      	str	r3, [sp, #36]	@ 0x24
 801b1b8:	fa1f f189 	uxth.w	r1, r9
 801b1bc:	eb01 0c03 	add.w	ip, r1, r3
 801b1c0:	fa1f fa8c 	uxth.w	sl, ip
 801b1c4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801b1c8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 801b1cc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801b1d0:	b283      	uxth	r3, r0
 801b1d2:	eb03 050c 	add.w	r5, r3, ip
 801b1d6:	b2ad      	uxth	r5, r5
 801b1d8:	9505      	str	r5, [sp, #20]
 801b1da:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801b1de:	9504      	str	r5, [sp, #16]
 801b1e0:	4548      	cmp	r0, r9
 801b1e2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 801b1e6:	f340 8099 	ble.w	801b31c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 801b1ea:	1a5b      	subs	r3, r3, r1
 801b1ec:	b29b      	uxth	r3, r3
 801b1ee:	4596      	cmp	lr, r2
 801b1f0:	fa0f f08a 	sxth.w	r0, sl
 801b1f4:	b21e      	sxth	r6, r3
 801b1f6:	dd2e      	ble.n	801b256 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 801b1f8:	9f02      	ldr	r7, [sp, #8]
 801b1fa:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801b1fe:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801b202:	9f04      	ldr	r7, [sp, #16]
 801b204:	1a3f      	subs	r7, r7, r0
 801b206:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801b20a:	fa1f fe8e 	uxth.w	lr, lr
 801b20e:	b292      	uxth	r2, r2
 801b210:	ebae 0102 	sub.w	r1, lr, r2
 801b214:	44a6      	add	lr, r4
 801b216:	4402      	add	r2, r0
 801b218:	b289      	uxth	r1, r1
 801b21a:	fa0f fe8e 	sxth.w	lr, lr
 801b21e:	b212      	sxth	r2, r2
 801b220:	b20d      	sxth	r5, r1
 801b222:	ebae 0202 	sub.w	r2, lr, r2
 801b226:	436f      	muls	r7, r5
 801b228:	4372      	muls	r2, r6
 801b22a:	4297      	cmp	r7, r2
 801b22c:	db09      	blt.n	801b242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 801b22e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 801b232:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 801b236:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801b23a:	449c      	add	ip, r3
 801b23c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801b240:	e684      	b.n	801af4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b242:	4421      	add	r1, r4
 801b244:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 801b248:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 801b24c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b250:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801b254:	e67a      	b.n	801af4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b256:	9f04      	ldr	r7, [sp, #16]
 801b258:	42b8      	cmp	r0, r7
 801b25a:	da27      	bge.n	801b2ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 801b25c:	9902      	ldr	r1, [sp, #8]
 801b25e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 801b262:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801b266:	eb05 010e 	add.w	r1, r5, lr
 801b26a:	fa1f f881 	uxth.w	r8, r1
 801b26e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 801b272:	4411      	add	r1, r2
 801b274:	eba1 0108 	sub.w	r1, r1, r8
 801b278:	b289      	uxth	r1, r1
 801b27a:	fa0f f988 	sxth.w	r9, r8
 801b27e:	eba2 020e 	sub.w	r2, r2, lr
 801b282:	fa0f f881 	sxth.w	r8, r1
 801b286:	1a3f      	subs	r7, r7, r0
 801b288:	4372      	muls	r2, r6
 801b28a:	fb08 f707 	mul.w	r7, r8, r7
 801b28e:	42ba      	cmp	r2, r7
 801b290:	dc06      	bgt.n	801b2a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 801b292:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 801b296:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801b29a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801b29e:	e7ca      	b.n	801b236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801b2a0:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 801b2a4:	4429      	add	r1, r5
 801b2a6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b2aa:	e64f      	b.n	801af4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b2ac:	9805      	ldr	r0, [sp, #20]
 801b2ae:	ebaa 0000 	sub.w	r0, sl, r0
 801b2b2:	b280      	uxth	r0, r0
 801b2b4:	2d06      	cmp	r5, #6
 801b2b6:	fa0f fe80 	sxth.w	lr, r0
 801b2ba:	d817      	bhi.n	801b2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 801b2bc:	9b04      	ldr	r3, [sp, #16]
 801b2be:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801b2c2:	1c6b      	adds	r3, r5, #1
 801b2c4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 801b2c8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 801b2cc:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801b2d0:	9b01      	ldr	r3, [sp, #4]
 801b2d2:	9801      	ldr	r0, [sp, #4]
 801b2d4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801b2d8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801b2dc:	805a      	strh	r2, [r3, #2]
 801b2de:	809e      	strh	r6, [r3, #4]
 801b2e0:	80d9      	strh	r1, [r3, #6]
 801b2e2:	9b02      	ldr	r3, [sp, #8]
 801b2e4:	3b01      	subs	r3, #1
 801b2e6:	9302      	str	r3, [sp, #8]
 801b2e8:	3c08      	subs	r4, #8
 801b2ea:	e747      	b.n	801b17c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 801b2ec:	9a02      	ldr	r2, [sp, #8]
 801b2ee:	45b6      	cmp	lr, r6
 801b2f0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801b2f4:	db0d      	blt.n	801b312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 801b2f6:	449c      	add	ip, r3
 801b2f8:	fa1f fc8c 	uxth.w	ip, ip
 801b2fc:	445a      	add	r2, fp
 801b2fe:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801b302:	448c      	add	ip, r1
 801b304:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801b308:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 801b30c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801b310:	e61c      	b.n	801af4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b312:	445a      	add	r2, fp
 801b314:	4484      	add	ip, r0
 801b316:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801b31a:	e78f      	b.n	801b23c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801b31c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801b320:	fa1f f18e 	uxth.w	r1, lr
 801b324:	eb01 0806 	add.w	r8, r1, r6
 801b328:	b293      	uxth	r3, r2
 801b32a:	fa1f f888 	uxth.w	r8, r8
 801b32e:	9306      	str	r3, [sp, #24]
 801b330:	fa0f f388 	sxth.w	r3, r8
 801b334:	9307      	str	r3, [sp, #28]
 801b336:	9f06      	ldr	r7, [sp, #24]
 801b338:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801b33c:	443b      	add	r3, r7
 801b33e:	b29b      	uxth	r3, r3
 801b340:	4596      	cmp	lr, r2
 801b342:	9308      	str	r3, [sp, #32]
 801b344:	da24      	bge.n	801b390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801b346:	9905      	ldr	r1, [sp, #20]
 801b348:	eba3 0308 	sub.w	r3, r3, r8
 801b34c:	ebaa 0401 	sub.w	r4, sl, r1
 801b350:	b2a4      	uxth	r4, r4
 801b352:	b29b      	uxth	r3, r3
 801b354:	b225      	sxth	r5, r4
 801b356:	b219      	sxth	r1, r3
 801b358:	eba2 020e 	sub.w	r2, r2, lr
 801b35c:	eba9 0000 	sub.w	r0, r9, r0
 801b360:	436a      	muls	r2, r5
 801b362:	4348      	muls	r0, r1
 801b364:	4282      	cmp	r2, r0
 801b366:	9a02      	ldr	r2, [sp, #8]
 801b368:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801b36c:	445a      	add	r2, fp
 801b36e:	dc06      	bgt.n	801b37e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 801b370:	9b07      	ldr	r3, [sp, #28]
 801b372:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 801b376:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801b37a:	44a4      	add	ip, r4
 801b37c:	e75e      	b.n	801b23c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801b37e:	9904      	ldr	r1, [sp, #16]
 801b380:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 801b384:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 801b388:	4433      	add	r3, r6
 801b38a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b38e:	e5dd      	b.n	801af4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b390:	9f06      	ldr	r7, [sp, #24]
 801b392:	9b04      	ldr	r3, [sp, #16]
 801b394:	1bc9      	subs	r1, r1, r7
 801b396:	fa0f f78a 	sxth.w	r7, sl
 801b39a:	b289      	uxth	r1, r1
 801b39c:	429f      	cmp	r7, r3
 801b39e:	fa0f fe81 	sxth.w	lr, r1
 801b3a2:	dd23      	ble.n	801b3ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 801b3a4:	9a05      	ldr	r2, [sp, #20]
 801b3a6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801b3aa:	9d07      	ldr	r5, [sp, #28]
 801b3ac:	ebaa 0202 	sub.w	r2, sl, r2
 801b3b0:	b292      	uxth	r2, r2
 801b3b2:	eba5 0a03 	sub.w	sl, r5, r3
 801b3b6:	b214      	sxth	r4, r2
 801b3b8:	eba9 0000 	sub.w	r0, r9, r0
 801b3bc:	9b02      	ldr	r3, [sp, #8]
 801b3be:	fb0e f000 	mul.w	r0, lr, r0
 801b3c2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b3c6:	00db      	lsls	r3, r3, #3
 801b3c8:	4550      	cmp	r0, sl
 801b3ca:	445b      	add	r3, fp
 801b3cc:	db03      	blt.n	801b3d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 801b3ce:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801b3d2:	4494      	add	ip, r2
 801b3d4:	e732      	b.n	801b23c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801b3d6:	9a04      	ldr	r2, [sp, #16]
 801b3d8:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 801b3dc:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801b3e0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 801b3e4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801b3e8:	4431      	add	r1, r6
 801b3ea:	e75c      	b.n	801b2a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 801b3ec:	9b08      	ldr	r3, [sp, #32]
 801b3ee:	eba3 0308 	sub.w	r3, r3, r8
 801b3f2:	b29b      	uxth	r3, r3
 801b3f4:	2d06      	cmp	r5, #6
 801b3f6:	b218      	sxth	r0, r3
 801b3f8:	d813      	bhi.n	801b422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 801b3fa:	9b07      	ldr	r3, [sp, #28]
 801b3fc:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801b400:	1c6b      	adds	r3, r5, #1
 801b402:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 801b406:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801b40a:	9b01      	ldr	r3, [sp, #4]
 801b40c:	9901      	ldr	r1, [sp, #4]
 801b40e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801b412:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801b416:	805a      	strh	r2, [r3, #2]
 801b418:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b41a:	809a      	strh	r2, [r3, #4]
 801b41c:	f8a3 e006 	strh.w	lr, [r3, #6]
 801b420:	e75f      	b.n	801b2e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801b422:	9c02      	ldr	r4, [sp, #8]
 801b424:	4570      	cmp	r0, lr
 801b426:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801b42a:	db0d      	blt.n	801b448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 801b42c:	4431      	add	r1, r6
 801b42e:	9b06      	ldr	r3, [sp, #24]
 801b430:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801b434:	b289      	uxth	r1, r1
 801b436:	445c      	add	r4, fp
 801b438:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b43c:	4419      	add	r1, r3
 801b43e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 801b442:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 801b446:	e581      	b.n	801af4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b448:	445c      	add	r4, fp
 801b44a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801b44e:	e79b      	b.n	801b388 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 801b450:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801b454:	1e65      	subs	r5, r4, #1
 801b456:	b2ad      	uxth	r5, r5
 801b458:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801b45c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 801b460:	42b5      	cmp	r5, r6
 801b462:	d044      	beq.n	801b4ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 801b464:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801b468:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 801b46c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801b470:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 801b474:	4282      	cmp	r2, r0
 801b476:	d11f      	bne.n	801b4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801b478:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 801b47c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801b480:	459c      	cmp	ip, r3
 801b482:	d119      	bne.n	801b4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801b484:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 801b488:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801b48c:	19d8      	adds	r0, r3, r7
 801b48e:	b200      	sxth	r0, r0
 801b490:	4288      	cmp	r0, r1
 801b492:	d109      	bne.n	801b4a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801b494:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 801b498:	4413      	add	r3, r2
 801b49a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801b49e:	4629      	mov	r1, r5
 801b4a0:	9801      	ldr	r0, [sp, #4]
 801b4a2:	f7ff fd23 	bl	801aeec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b4a6:	e003      	b.n	801b4b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b4a8:	4411      	add	r1, r2
 801b4aa:	b209      	sxth	r1, r1
 801b4ac:	42b9      	cmp	r1, r7
 801b4ae:	d0f3      	beq.n	801b498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801b4b0:	3d01      	subs	r5, #1
 801b4b2:	b2ad      	uxth	r5, r5
 801b4b4:	3c08      	subs	r4, #8
 801b4b6:	e7d3      	b.n	801b460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 801b4b8:	42b9      	cmp	r1, r7
 801b4ba:	d1f9      	bne.n	801b4b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b4bc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801b4c0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801b4c4:	4299      	cmp	r1, r3
 801b4c6:	d1f3      	bne.n	801b4b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b4c8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801b4cc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801b4d0:	181f      	adds	r7, r3, r0
 801b4d2:	b23f      	sxth	r7, r7
 801b4d4:	42ba      	cmp	r2, r7
 801b4d6:	d105      	bne.n	801b4e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 801b4d8:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 801b4dc:	440b      	add	r3, r1
 801b4de:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b4e2:	e7dc      	b.n	801b49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 801b4e4:	440a      	add	r2, r1
 801b4e6:	b212      	sxth	r2, r2
 801b4e8:	4290      	cmp	r0, r2
 801b4ea:	d1e1      	bne.n	801b4b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801b4ec:	e7f6      	b.n	801b4dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 801b4ee:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801b4f2:	2e07      	cmp	r6, #7
 801b4f4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801b4f8:	d812      	bhi.n	801b520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 801b4fa:	1c75      	adds	r5, r6, #1
 801b4fc:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801b500:	9d01      	ldr	r5, [sp, #4]
 801b502:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801b506:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801b50a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801b50e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801b512:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801b516:	442c      	add	r4, r5
 801b518:	8061      	strh	r1, [r4, #2]
 801b51a:	80a2      	strh	r2, [r4, #4]
 801b51c:	80e3      	strh	r3, [r4, #6]
 801b51e:	e57f      	b.n	801b020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801b520:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801b524:	3e01      	subs	r6, #1
 801b526:	445c      	add	r4, fp
 801b528:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 801b52c:	f04f 37ff 	mov.w	r7, #4294967295
 801b530:	2500      	movs	r5, #0
 801b532:	9305      	str	r3, [sp, #20]
 801b534:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801b538:	9302      	str	r3, [sp, #8]
 801b53a:	1e72      	subs	r2, r6, #1
 801b53c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801b540:	9304      	str	r3, [sp, #16]
 801b542:	4691      	mov	r9, r2
 801b544:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 801b548:	f1b9 3fff 	cmp.w	r9, #4294967295
 801b54c:	bf14      	ite	ne
 801b54e:	9905      	ldrne	r1, [sp, #20]
 801b550:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801b554:	6818      	ldr	r0, [r3, #0]
 801b556:	9207      	str	r2, [sp, #28]
 801b558:	bf18      	it	ne
 801b55a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801b55e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801b562:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801b566:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801b56a:	9306      	str	r3, [sp, #24]
 801b56c:	fb18 f801 	smulbb	r8, r8, r1
 801b570:	6859      	ldr	r1, [r3, #4]
 801b572:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801b576:	4671      	mov	r1, lr
 801b578:	a80c      	add	r0, sp, #48	@ 0x30
 801b57a:	f7ff fb65 	bl	801ac48 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801b57e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801b582:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801b586:	9b04      	ldr	r3, [sp, #16]
 801b588:	9a02      	ldr	r2, [sp, #8]
 801b58a:	fb10 f001 	smulbb	r0, r0, r1
 801b58e:	fb02 8803 	mla	r8, r2, r3, r8
 801b592:	eba0 0108 	sub.w	r1, r0, r8
 801b596:	f04f 0c08 	mov.w	ip, #8
 801b59a:	fb90 f0fc 	sdiv	r0, r0, ip
 801b59e:	4288      	cmp	r0, r1
 801b5a0:	dc20      	bgt.n	801b5e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801b5a2:	4551      	cmp	r1, sl
 801b5a4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801b5a8:	da03      	bge.n	801b5b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 801b5aa:	b1d9      	cbz	r1, 801b5e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801b5ac:	468a      	mov	sl, r1
 801b5ae:	464f      	mov	r7, r9
 801b5b0:	4635      	mov	r5, r6
 801b5b2:	f109 39ff 	add.w	r9, r9, #4294967295
 801b5b6:	f119 0f02 	cmn.w	r9, #2
 801b5ba:	d1c5      	bne.n	801b548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 801b5bc:	4616      	mov	r6, r2
 801b5be:	3201      	adds	r2, #1
 801b5c0:	f1a4 0408 	sub.w	r4, r4, #8
 801b5c4:	d1b6      	bne.n	801b534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 801b5c6:	9b01      	ldr	r3, [sp, #4]
 801b5c8:	b2ac      	uxth	r4, r5
 801b5ca:	00ed      	lsls	r5, r5, #3
 801b5cc:	1958      	adds	r0, r3, r5
 801b5ce:	1c7b      	adds	r3, r7, #1
 801b5d0:	d10b      	bne.n	801b5ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 801b5d2:	4601      	mov	r1, r0
 801b5d4:	9803      	ldr	r0, [sp, #12]
 801b5d6:	f7ff fb37 	bl	801ac48 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801b5da:	4621      	mov	r1, r4
 801b5dc:	9801      	ldr	r0, [sp, #4]
 801b5de:	f7ff fc85 	bl	801aeec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b5e2:	e4b3      	b.n	801af4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b5e4:	464f      	mov	r7, r9
 801b5e6:	4635      	mov	r5, r6
 801b5e8:	e7ed      	b.n	801b5c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 801b5ea:	9b01      	ldr	r3, [sp, #4]
 801b5ec:	00ff      	lsls	r7, r7, #3
 801b5ee:	19d9      	adds	r1, r3, r7
 801b5f0:	f7ff fb2a 	bl	801ac48 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801b5f4:	9b03      	ldr	r3, [sp, #12]
 801b5f6:	cb03      	ldmia	r3!, {r0, r1}
 801b5f8:	445f      	add	r7, fp
 801b5fa:	445d      	add	r5, fp
 801b5fc:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801b600:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 801b604:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801b608:	9b03      	ldr	r3, [sp, #12]
 801b60a:	6869      	ldr	r1, [r5, #4]
 801b60c:	c303      	stmia	r3!, {r0, r1}
 801b60e:	e7e4      	b.n	801b5da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0801b610 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801b610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b614:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 801b618:	b0a1      	sub	sp, #132	@ 0x84
 801b61a:	4604      	mov	r4, r0
 801b61c:	4630      	mov	r0, r6
 801b61e:	f7f9 fb9e 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b622:	4605      	mov	r5, r0
 801b624:	b948      	cbnz	r0, 801b63a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801b626:	6823      	ldr	r3, [r4, #0]
 801b628:	e896 0006 	ldmia.w	r6, {r1, r2}
 801b62c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801b62e:	4620      	mov	r0, r4
 801b630:	4798      	blx	r3
 801b632:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 801b636:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 801b63a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801b63e:	2b00      	cmp	r3, #0
 801b640:	d149      	bne.n	801b6d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 801b642:	4bb1      	ldr	r3, [pc, #708]	@ (801b908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 801b644:	681b      	ldr	r3, [r3, #0]
 801b646:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 801b64a:	1ebb      	subs	r3, r7, #2
 801b64c:	425f      	negs	r7, r3
 801b64e:	415f      	adcs	r7, r3
 801b650:	4bae      	ldr	r3, [pc, #696]	@ (801b90c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 801b652:	681b      	ldr	r3, [r3, #0]
 801b654:	2b00      	cmp	r3, #0
 801b656:	d040      	beq.n	801b6da <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801b658:	4dad      	ldr	r5, [pc, #692]	@ (801b910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801b65a:	4628      	mov	r0, r5
 801b65c:	f7f9 fb7f 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b660:	4606      	mov	r6, r0
 801b662:	2800      	cmp	r0, #0
 801b664:	d139      	bne.n	801b6da <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801b666:	4628      	mov	r0, r5
 801b668:	f7ff f966 	bl	801a938 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801b66c:	6823      	ldr	r3, [r4, #0]
 801b66e:	6829      	ldr	r1, [r5, #0]
 801b670:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801b672:	686a      	ldr	r2, [r5, #4]
 801b674:	4620      	mov	r0, r4
 801b676:	4798      	blx	r3
 801b678:	802e      	strh	r6, [r5, #0]
 801b67a:	806e      	strh	r6, [r5, #2]
 801b67c:	80ae      	strh	r6, [r5, #4]
 801b67e:	80ee      	strh	r6, [r5, #6]
 801b680:	af0f      	add	r7, sp, #60	@ 0x3c
 801b682:	4ea4      	ldr	r6, [pc, #656]	@ (801b914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 801b684:	4638      	mov	r0, r7
 801b686:	f7ff fbd9 	bl	801ae3c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801b68a:	8835      	ldrh	r5, [r6, #0]
 801b68c:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 801b690:	462b      	mov	r3, r5
 801b692:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801b696:	4563      	cmp	r3, ip
 801b698:	d224      	bcs.n	801b6e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801b69a:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 801b69e:	2907      	cmp	r1, #7
 801b6a0:	d816      	bhi.n	801b6d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801b6a2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801b6a6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801b6aa:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801b6ae:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 801b6b2:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 801b6b6:	1c4a      	adds	r2, r1, #1
 801b6b8:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 801b6bc:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 801b6c0:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 801b6c4:	f8a2 a002 	strh.w	sl, [r2, #2]
 801b6c8:	f8a2 8004 	strh.w	r8, [r2, #4]
 801b6cc:	f8a2 e006 	strh.w	lr, [r2, #6]
 801b6d0:	3301      	adds	r3, #1
 801b6d2:	b29b      	uxth	r3, r3
 801b6d4:	e7df      	b.n	801b696 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 801b6d6:	2701      	movs	r7, #1
 801b6d8:	e7ba      	b.n	801b650 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 801b6da:	2f00      	cmp	r7, #0
 801b6dc:	d1d0      	bne.n	801b680 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 801b6de:	b021      	add	sp, #132	@ 0x84
 801b6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6e4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 801b6e8:	42ab      	cmp	r3, r5
 801b6ea:	d90c      	bls.n	801b706 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 801b6ec:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801b6f0:	6822      	ldr	r2, [r4, #0]
 801b6f2:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 801b6f6:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 801b6f8:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 801b6fc:	4620      	mov	r0, r4
 801b6fe:	3501      	adds	r5, #1
 801b700:	47b8      	blx	r7
 801b702:	b2ad      	uxth	r5, r5
 801b704:	e7ee      	b.n	801b6e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801b706:	4d80      	ldr	r5, [pc, #512]	@ (801b908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 801b708:	6828      	ldr	r0, [r5, #0]
 801b70a:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801b70e:	2b01      	cmp	r3, #1
 801b710:	f040 813b 	bne.w	801b98a <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 801b714:	4a80      	ldr	r2, [pc, #512]	@ (801b918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 801b716:	8833      	ldrh	r3, [r6, #0]
 801b718:	7812      	ldrb	r2, [r2, #0]
 801b71a:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801b71e:	2a01      	cmp	r2, #1
 801b720:	d014      	beq.n	801b74c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801b722:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 801b726:	32ae      	adds	r2, #174	@ 0xae
 801b728:	f04f 0900 	mov.w	r9, #0
 801b72c:	4283      	cmp	r3, r0
 801b72e:	f102 0208 	add.w	r2, r2, #8
 801b732:	f280 8082 	bge.w	801b83a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 801b736:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 801b73a:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 801b73e:	4439      	add	r1, r7
 801b740:	b209      	sxth	r1, r1
 801b742:	4589      	cmp	r9, r1
 801b744:	bfb8      	it	lt
 801b746:	4689      	movlt	r9, r1
 801b748:	3301      	adds	r3, #1
 801b74a:	e7ef      	b.n	801b72c <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 801b74c:	4f73      	ldr	r7, [pc, #460]	@ (801b91c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 801b74e:	883a      	ldrh	r2, [r7, #0]
 801b750:	4693      	mov	fp, r2
 801b752:	4283      	cmp	r3, r0
 801b754:	da08      	bge.n	801b768 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 801b756:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 801b75a:	3301      	adds	r3, #1
 801b75c:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 801b760:	458b      	cmp	fp, r1
 801b762:	bfa8      	it	ge
 801b764:	468b      	movge	fp, r1
 801b766:	e7f4      	b.n	801b752 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 801b768:	2300      	movs	r3, #0
 801b76a:	2a0f      	cmp	r2, #15
 801b76c:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 801b920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 801b770:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801b774:	bf8c      	ite	hi
 801b776:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 801b77a:	f04f 0801 	movls.w	r8, #1
 801b77e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b782:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801b786:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801b78a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801b78e:	6828      	ldr	r0, [r5, #0]
 801b790:	455b      	cmp	r3, fp
 801b792:	f340 80c7 	ble.w	801b924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801b796:	6803      	ldr	r3, [r0, #0]
 801b798:	f8b7 a000 	ldrh.w	sl, [r7]
 801b79c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b7a0:	4798      	blx	r3
 801b7a2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801b7a6:	682b      	ldr	r3, [r5, #0]
 801b7a8:	ebaa 0000 	sub.w	r0, sl, r0
 801b7ac:	b280      	uxth	r0, r0
 801b7ae:	ebac 0e08 	sub.w	lr, ip, r8
 801b7b2:	4570      	cmp	r0, lr
 801b7b4:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 801b7b8:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 801b7bc:	dd05      	ble.n	801b7ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801b7be:	4558      	cmp	r0, fp
 801b7c0:	dd03      	ble.n	801b7ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801b7c2:	b901      	cbnz	r1, 801b7c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801b7c4:	b392      	cbz	r2, 801b82c <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 801b7c6:	4658      	mov	r0, fp
 801b7c8:	e006      	b.n	801b7d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801b7ca:	2900      	cmp	r1, #0
 801b7cc:	d1fb      	bne.n	801b7c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801b7ce:	2a00      	cmp	r2, #0
 801b7d0:	d1f9      	bne.n	801b7c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801b7d2:	4558      	cmp	r0, fp
 801b7d4:	bfb8      	it	lt
 801b7d6:	4658      	movlt	r0, fp
 801b7d8:	f9b9 3000 	ldrsh.w	r3, [r9]
 801b7dc:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 801b7e0:	2200      	movs	r2, #0
 801b7e2:	ebac 0000 	sub.w	r0, ip, r0
 801b7e6:	f8b6 a000 	ldrh.w	sl, [r6]
 801b7ea:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801b7ee:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b7f2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801b7f6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801b7fa:	4553      	cmp	r3, sl
 801b7fc:	ddc5      	ble.n	801b78a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801b7fe:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801b802:	ab0d      	add	r3, sp, #52	@ 0x34
 801b804:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801b808:	6851      	ldr	r1, [r2, #4]
 801b80a:	c303      	stmia	r3!, {r0, r1}
 801b80c:	a80d      	add	r0, sp, #52	@ 0x34
 801b80e:	a90b      	add	r1, sp, #44	@ 0x2c
 801b810:	f7f9 fa62 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801b814:	a80d      	add	r0, sp, #52	@ 0x34
 801b816:	f7f9 faa2 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b81a:	b920      	cbnz	r0, 801b826 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 801b81c:	6823      	ldr	r3, [r4, #0]
 801b81e:	a90d      	add	r1, sp, #52	@ 0x34
 801b820:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801b822:	4620      	mov	r0, r4
 801b824:	4798      	blx	r3
 801b826:	f10a 0a01 	add.w	sl, sl, #1
 801b82a:	e7e4      	b.n	801b7f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 801b82c:	681a      	ldr	r2, [r3, #0]
 801b82e:	2101      	movs	r1, #1
 801b830:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 801b834:	4618      	mov	r0, r3
 801b836:	4790      	blx	r2
 801b838:	e7a7      	b.n	801b78a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801b83a:	4b39      	ldr	r3, [pc, #228]	@ (801b920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 801b83c:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 801b91c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 801b840:	881f      	ldrh	r7, [r3, #0]
 801b842:	2300      	movs	r3, #0
 801b844:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 801b848:	2f0f      	cmp	r7, #15
 801b84a:	bf8c      	ite	hi
 801b84c:	08ff      	lsrhi	r7, r7, #3
 801b84e:	2701      	movls	r7, #1
 801b850:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801b854:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 801b858:	6828      	ldr	r0, [r5, #0]
 801b85a:	4413      	add	r3, r2
 801b85c:	b21b      	sxth	r3, r3
 801b85e:	454b      	cmp	r3, r9
 801b860:	da60      	bge.n	801b924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801b862:	6803      	ldr	r3, [r0, #0]
 801b864:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b868:	4798      	blx	r3
 801b86a:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 801b86e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801b872:	682a      	ldr	r2, [r5, #0]
 801b874:	4473      	add	r3, lr
 801b876:	b21b      	sxth	r3, r3
 801b878:	eb03 0e07 	add.w	lr, r3, r7
 801b87c:	4570      	cmp	r0, lr
 801b87e:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 801b882:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 801b886:	da0d      	bge.n	801b8a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801b888:	4548      	cmp	r0, r9
 801b88a:	da0b      	bge.n	801b8a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801b88c:	f1bc 0f00 	cmp.w	ip, #0
 801b890:	d138      	bne.n	801b904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b892:	2900      	cmp	r1, #0
 801b894:	d136      	bne.n	801b904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b896:	6813      	ldr	r3, [r2, #0]
 801b898:	2101      	movs	r1, #1
 801b89a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 801b89e:	4610      	mov	r0, r2
 801b8a0:	4798      	blx	r3
 801b8a2:	e7d5      	b.n	801b850 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801b8a4:	f1bc 0f00 	cmp.w	ip, #0
 801b8a8:	d12c      	bne.n	801b904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b8aa:	bb59      	cbnz	r1, 801b904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801b8ac:	4548      	cmp	r0, r9
 801b8ae:	bfa8      	it	ge
 801b8b0:	4648      	movge	r0, r9
 801b8b2:	f9b8 2000 	ldrsh.w	r2, [r8]
 801b8b6:	f8b6 a000 	ldrh.w	sl, [r6]
 801b8ba:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801b8be:	2100      	movs	r1, #0
 801b8c0:	1ac0      	subs	r0, r0, r3
 801b8c2:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801b8c6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801b8ca:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 801b8ce:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801b8d2:	4553      	cmp	r3, sl
 801b8d4:	ddbc      	ble.n	801b850 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801b8d6:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801b8da:	ab0d      	add	r3, sp, #52	@ 0x34
 801b8dc:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801b8e0:	6851      	ldr	r1, [r2, #4]
 801b8e2:	c303      	stmia	r3!, {r0, r1}
 801b8e4:	a80d      	add	r0, sp, #52	@ 0x34
 801b8e6:	a90b      	add	r1, sp, #44	@ 0x2c
 801b8e8:	f7f9 f9f6 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801b8ec:	a80d      	add	r0, sp, #52	@ 0x34
 801b8ee:	f7f9 fa36 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b8f2:	b920      	cbnz	r0, 801b8fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 801b8f4:	6823      	ldr	r3, [r4, #0]
 801b8f6:	a90d      	add	r1, sp, #52	@ 0x34
 801b8f8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801b8fa:	4620      	mov	r0, r4
 801b8fc:	4798      	blx	r3
 801b8fe:	f10a 0a01 	add.w	sl, sl, #1
 801b902:	e7e4      	b.n	801b8ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 801b904:	4648      	mov	r0, r9
 801b906:	e7d4      	b.n	801b8b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 801b908:	20013884 	.word	0x20013884
 801b90c:	200138c4 	.word	0x200138c4
 801b910:	200138d0 	.word	0x200138d0
 801b914:	20000084 	.word	0x20000084
 801b918:	2001387c 	.word	0x2001387c
 801b91c:	20013878 	.word	0x20013878
 801b920:	2001387a 	.word	0x2001387a
 801b924:	6828      	ldr	r0, [r5, #0]
 801b926:	6803      	ldr	r3, [r0, #0]
 801b928:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801b92a:	4798      	blx	r3
 801b92c:	4ba5      	ldr	r3, [pc, #660]	@ (801bbc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 801b92e:	781b      	ldrb	r3, [r3, #0]
 801b930:	2b00      	cmp	r3, #0
 801b932:	f43f aed4 	beq.w	801b6de <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801b936:	2300      	movs	r3, #0
 801b938:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801b93c:	4ba2      	ldr	r3, [pc, #648]	@ (801bbc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 801b93e:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 801b942:	881b      	ldrh	r3, [r3, #0]
 801b944:	a80f      	add	r0, sp, #60	@ 0x3c
 801b946:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 801b94a:	42b3      	cmp	r3, r6
 801b94c:	f4bf aec7 	bcs.w	801b6de <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801b950:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 801b954:	2907      	cmp	r1, #7
 801b956:	d815      	bhi.n	801b984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 801b958:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801b95c:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801b960:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801b964:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801b968:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 801b96c:	1c4a      	adds	r2, r1, #1
 801b96e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 801b972:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 801b976:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 801b97a:	f8a2 e002 	strh.w	lr, [r2, #2]
 801b97e:	f8a2 c004 	strh.w	ip, [r2, #4]
 801b982:	80d7      	strh	r7, [r2, #6]
 801b984:	3301      	adds	r3, #1
 801b986:	b29b      	uxth	r3, r3
 801b988:	e7df      	b.n	801b94a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801b98a:	2b02      	cmp	r3, #2
 801b98c:	f040 80d1 	bne.w	801bb32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801b990:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801b994:	9308      	str	r3, [sp, #32]
 801b996:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 801b99a:	9307      	str	r3, [sp, #28]
 801b99c:	6803      	ldr	r3, [r0, #0]
 801b99e:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 801b9a2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b9a6:	4798      	blx	r3
 801b9a8:	4b88      	ldr	r3, [pc, #544]	@ (801bbcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 801b9aa:	881b      	ldrh	r3, [r3, #0]
 801b9ac:	9302      	str	r3, [sp, #8]
 801b9ae:	4b88      	ldr	r3, [pc, #544]	@ (801bbd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 801b9b0:	881e      	ldrh	r6, [r3, #0]
 801b9b2:	4b88      	ldr	r3, [pc, #544]	@ (801bbd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801b9b4:	781b      	ldrb	r3, [r3, #0]
 801b9b6:	f10b 37ff 	add.w	r7, fp, #4294967295
 801b9ba:	2b01      	cmp	r3, #1
 801b9bc:	bf1c      	itt	ne
 801b9be:	9b02      	ldrne	r3, [sp, #8]
 801b9c0:	9602      	strne	r6, [sp, #8]
 801b9c2:	b2bf      	uxth	r7, r7
 801b9c4:	fa0f f887 	sxth.w	r8, r7
 801b9c8:	4682      	mov	sl, r0
 801b9ca:	f04f 0000 	mov.w	r0, #0
 801b9ce:	bf18      	it	ne
 801b9d0:	461e      	movne	r6, r3
 801b9d2:	f7e5 fa47 	bl	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801b9d6:	fb96 fbfb 	sdiv	fp, r6, fp
 801b9da:	fb0b f808 	mul.w	r8, fp, r8
 801b9de:	45c2      	cmp	sl, r8
 801b9e0:	da0c      	bge.n	801b9fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 801b9e2:	6828      	ldr	r0, [r5, #0]
 801b9e4:	6803      	ldr	r3, [r0, #0]
 801b9e6:	210a      	movs	r1, #10
 801b9e8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801b9ec:	4798      	blx	r3
 801b9ee:	6828      	ldr	r0, [r5, #0]
 801b9f0:	6803      	ldr	r3, [r0, #0]
 801b9f2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801b9f6:	4798      	blx	r3
 801b9f8:	4682      	mov	sl, r0
 801b9fa:	e7f0      	b.n	801b9de <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 801b9fc:	2000      	movs	r0, #0
 801b9fe:	f7e5 fa5b 	bl	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801ba02:	fa1f f38b 	uxth.w	r3, fp
 801ba06:	fb17 f703 	smulbb	r7, r7, r3
 801ba0a:	9304      	str	r3, [sp, #16]
 801ba0c:	b2bb      	uxth	r3, r7
 801ba0e:	9305      	str	r3, [sp, #20]
 801ba10:	f04f 0800 	mov.w	r8, #0
 801ba14:	0973      	lsrs	r3, r6, #5
 801ba16:	4f70      	ldr	r7, [pc, #448]	@ (801bbd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 801ba18:	9306      	str	r3, [sp, #24]
 801ba1a:	4645      	mov	r5, r8
 801ba1c:	42b5      	cmp	r5, r6
 801ba1e:	d085      	beq.n	801b92c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801ba20:	6838      	ldr	r0, [r7, #0]
 801ba22:	6803      	ldr	r3, [r0, #0]
 801ba24:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801ba28:	4798      	blx	r3
 801ba2a:	4582      	cmp	sl, r0
 801ba2c:	4681      	mov	r9, r0
 801ba2e:	d907      	bls.n	801ba40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 801ba30:	f1b8 0f00 	cmp.w	r8, #0
 801ba34:	d007      	beq.n	801ba46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 801ba36:	6838      	ldr	r0, [r7, #0]
 801ba38:	6803      	ldr	r3, [r0, #0]
 801ba3a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 801ba3e:	e774      	b.n	801b92a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 801ba40:	f1b8 0f00 	cmp.w	r8, #0
 801ba44:	d003      	beq.n	801ba4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 801ba46:	454d      	cmp	r5, r9
 801ba48:	d3f5      	bcc.n	801ba36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 801ba4a:	f04f 0801 	mov.w	r8, #1
 801ba4e:	9a04      	ldr	r2, [sp, #16]
 801ba50:	fb95 f3fb 	sdiv	r3, r5, fp
 801ba54:	9303      	str	r3, [sp, #12]
 801ba56:	3301      	adds	r3, #1
 801ba58:	fb13 f302 	smulbb	r3, r3, r2
 801ba5c:	b299      	uxth	r1, r3
 801ba5e:	f1b8 0f00 	cmp.w	r8, #0
 801ba62:	d04e      	beq.n	801bb02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 801ba64:	eb09 030b 	add.w	r3, r9, fp
 801ba68:	42b3      	cmp	r3, r6
 801ba6a:	bfa8      	it	ge
 801ba6c:	4633      	movge	r3, r6
 801ba6e:	9807      	ldr	r0, [sp, #28]
 801ba70:	b29b      	uxth	r3, r3
 801ba72:	428b      	cmp	r3, r1
 801ba74:	bf94      	ite	ls
 801ba76:	ebc5 0203 	rsbls	r2, r5, r3
 801ba7a:	ebc5 0201 	rsbhi	r2, r5, r1
 801ba7e:	4282      	cmp	r2, r0
 801ba80:	bfa8      	it	ge
 801ba82:	4602      	movge	r2, r0
 801ba84:	9808      	ldr	r0, [sp, #32]
 801ba86:	fa1f fa82 	uxth.w	sl, r2
 801ba8a:	4582      	cmp	sl, r0
 801ba8c:	d205      	bcs.n	801ba9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801ba8e:	fa15 f082 	uxtah	r0, r5, r2
 801ba92:	4286      	cmp	r6, r0
 801ba94:	d001      	beq.n	801ba9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801ba96:	4299      	cmp	r1, r3
 801ba98:	d240      	bcs.n	801bb1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 801ba9a:	2001      	movs	r0, #1
 801ba9c:	9209      	str	r2, [sp, #36]	@ 0x24
 801ba9e:	f7e5 f9e1 	bl	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801baa2:	6838      	ldr	r0, [r7, #0]
 801baa4:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 801baa8:	6803      	ldr	r3, [r0, #0]
 801baaa:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801baae:	4798      	blx	r3
 801bab0:	4b48      	ldr	r3, [pc, #288]	@ (801bbd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801bab2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bab4:	781b      	ldrb	r3, [r3, #0]
 801bab6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801baba:	2b01      	cmp	r3, #1
 801babc:	b212      	sxth	r2, r2
 801babe:	f04f 0000 	mov.w	r0, #0
 801bac2:	d122      	bne.n	801bb0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 801bac4:	1b73      	subs	r3, r6, r5
 801bac6:	eba3 030a 	sub.w	r3, r3, sl
 801baca:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801bace:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 801bad2:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801bad6:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 801bada:	6823      	ldr	r3, [r4, #0]
 801badc:	a90d      	add	r1, sp, #52	@ 0x34
 801bade:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801bae0:	4620      	mov	r0, r4
 801bae2:	4798      	blx	r3
 801bae4:	6838      	ldr	r0, [r7, #0]
 801bae6:	9b03      	ldr	r3, [sp, #12]
 801bae8:	4259      	negs	r1, r3
 801baea:	6803      	ldr	r3, [r0, #0]
 801baec:	b209      	sxth	r1, r1
 801baee:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801baf2:	4798      	blx	r3
 801baf4:	4455      	add	r5, sl
 801baf6:	2001      	movs	r0, #1
 801baf8:	b2ad      	uxth	r5, r5
 801bafa:	f7e5 f9dd 	bl	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801bafe:	46ca      	mov	sl, r9
 801bb00:	e78c      	b.n	801ba1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 801bb02:	9b05      	ldr	r3, [sp, #20]
 801bb04:	eba9 0303 	sub.w	r3, r9, r3
 801bb08:	e7b1      	b.n	801ba6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801bb0a:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 801bb0e:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 801bb12:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 801bb16:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801bb1a:	e7de      	b.n	801bada <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 801bb1c:	6838      	ldr	r0, [r7, #0]
 801bb1e:	6803      	ldr	r3, [r0, #0]
 801bb20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bb22:	4798      	blx	r3
 801bb24:	6838      	ldr	r0, [r7, #0]
 801bb26:	9906      	ldr	r1, [sp, #24]
 801bb28:	6803      	ldr	r3, [r0, #0]
 801bb2a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801bb2e:	4798      	blx	r3
 801bb30:	e7e5      	b.n	801bafe <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 801bb32:	2b03      	cmp	r3, #3
 801bb34:	f040 8130 	bne.w	801bd98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 801bb38:	4b26      	ldr	r3, [pc, #152]	@ (801bbd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801bb3a:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 801bb3e:	781b      	ldrb	r3, [r3, #0]
 801bb40:	2b01      	cmp	r3, #1
 801bb42:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801bb46:	f000 8093 	beq.w	801bc70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801bb4a:	8832      	ldrh	r2, [r6, #0]
 801bb4c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 801bb50:	3201      	adds	r2, #1
 801bb52:	b292      	uxth	r2, r2
 801bb54:	2900      	cmp	r1, #0
 801bb56:	f43f aee9 	beq.w	801b92c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801bb5a:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801bb5e:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 801bb62:	441d      	add	r5, r3
 801bb64:	b22d      	sxth	r5, r5
 801bb66:	4694      	mov	ip, r2
 801bb68:	f04f 0800 	mov.w	r8, #0
 801bb6c:	fa1f f38c 	uxth.w	r3, ip
 801bb70:	4299      	cmp	r1, r3
 801bb72:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801bb76:	f240 80ba 	bls.w	801bcee <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 801bb7a:	4427      	add	r7, r4
 801bb7c:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801bb80:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 801bb84:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 801bb88:	4283      	cmp	r3, r0
 801bb8a:	f340 809c 	ble.w	801bcc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 801bb8e:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 801bb92:	4405      	add	r5, r0
 801bb94:	b22d      	sxth	r5, r5
 801bb96:	429d      	cmp	r5, r3
 801bb98:	bfa8      	it	ge
 801bb9a:	461d      	movge	r5, r3
 801bb9c:	46e0      	mov	r8, ip
 801bb9e:	f10c 0c01 	add.w	ip, ip, #1
 801bba2:	e7e3      	b.n	801bb6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 801bba4:	d10a      	bne.n	801bbbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801bba6:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 801bbaa:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 801bbae:	4562      	cmp	r2, ip
 801bbb0:	bfb8      	it	lt
 801bbb2:	4662      	movlt	r2, ip
 801bbb4:	4288      	cmp	r0, r1
 801bbb6:	bfb8      	it	lt
 801bbb8:	4698      	movlt	r8, r3
 801bbba:	e082      	b.n	801bcc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 801bbbc:	428a      	cmp	r2, r1
 801bbbe:	bfb8      	it	lt
 801bbc0:	460a      	movlt	r2, r1
 801bbc2:	e07e      	b.n	801bcc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 801bbc4:	20013882 	.word	0x20013882
 801bbc8:	20000084 	.word	0x20000084
 801bbcc:	2001387a 	.word	0x2001387a
 801bbd0:	20013878 	.word	0x20013878
 801bbd4:	2001387c 	.word	0x2001387c
 801bbd8:	20013884 	.word	0x20013884
 801bbdc:	19e1      	adds	r1, r4, r7
 801bbde:	ab0d      	add	r3, sp, #52	@ 0x34
 801bbe0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801bbe4:	6849      	ldr	r1, [r1, #4]
 801bbe6:	c303      	stmia	r3!, {r0, r1}
 801bbe8:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 801bbec:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801bbf0:	454b      	cmp	r3, r9
 801bbf2:	bfb8      	it	lt
 801bbf4:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 801bbf8:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801bbfc:	440b      	add	r3, r1
 801bbfe:	1a9b      	subs	r3, r3, r2
 801bc00:	a80d      	add	r0, sp, #52	@ 0x34
 801bc02:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801bc06:	f7fe feb1 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc0a:	a80d      	add	r0, sp, #52	@ 0x34
 801bc0c:	f7f9 f8a7 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801bc10:	bb70      	cbnz	r0, 801bc70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801bc12:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 801bc16:	6828      	ldr	r0, [r5, #0]
 801bc18:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801bc1c:	f8d0 e000 	ldr.w	lr, [r0]
 801bc20:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 801bc24:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801bc28:	45cc      	cmp	ip, r9
 801bc2a:	bfd4      	ite	le
 801bc2c:	fa1f fc8c 	uxthle.w	ip, ip
 801bc30:	fa1f fc89 	uxthgt.w	ip, r9
 801bc34:	f8cd c000 	str.w	ip, [sp]
 801bc38:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 801bc3c:	47d8      	blx	fp
 801bc3e:	4683      	mov	fp, r0
 801bc40:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801bc44:	a80d      	add	r0, sp, #52	@ 0x34
 801bc46:	f7fe fe77 	bl	801a938 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801bc4a:	6823      	ldr	r3, [r4, #0]
 801bc4c:	4427      	add	r7, r4
 801bc4e:	4620      	mov	r0, r4
 801bc50:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801bc52:	a90d      	add	r1, sp, #52	@ 0x34
 801bc54:	4798      	blx	r3
 801bc56:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 801bc5a:	eba0 000b 	sub.w	r0, r0, fp
 801bc5e:	b200      	sxth	r0, r0
 801bc60:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 801bc64:	b920      	cbnz	r0, 801bc70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801bc66:	fa1f f188 	uxth.w	r1, r8
 801bc6a:	4650      	mov	r0, sl
 801bc6c:	f7ff f93e 	bl	801aeec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801bc70:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801bc74:	f1bb 0f00 	cmp.w	fp, #0
 801bc78:	f43f ae58 	beq.w	801b92c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801bc7c:	8833      	ldrh	r3, [r6, #0]
 801bc7e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801bc82:	3301      	adds	r3, #1
 801bc84:	b29b      	uxth	r3, r3
 801bc86:	f04f 0800 	mov.w	r8, #0
 801bc8a:	b299      	uxth	r1, r3
 801bc8c:	458b      	cmp	fp, r1
 801bc8e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801bc92:	d9a3      	bls.n	801bbdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 801bc94:	4427      	add	r7, r4
 801bc96:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801bc9a:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 801bc9e:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 801bca2:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801bca6:	4408      	add	r0, r1
 801bca8:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 801bcac:	4461      	add	r1, ip
 801bcae:	b200      	sxth	r0, r0
 801bcb0:	b209      	sxth	r1, r1
 801bcb2:	4288      	cmp	r0, r1
 801bcb4:	f6bf af76 	bge.w	801bba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 801bcb8:	4584      	cmp	ip, r0
 801bcba:	4662      	mov	r2, ip
 801bcbc:	4698      	mov	r8, r3
 801bcbe:	bfb8      	it	lt
 801bcc0:	4602      	movlt	r2, r0
 801bcc2:	3301      	adds	r3, #1
 801bcc4:	e7e1      	b.n	801bc8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 801bcc6:	d10e      	bne.n	801bce6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 801bcc8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 801bccc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 801bcd0:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801bcd4:	4473      	add	r3, lr
 801bcd6:	b21b      	sxth	r3, r3
 801bcd8:	429d      	cmp	r5, r3
 801bcda:	bfa8      	it	ge
 801bcdc:	461d      	movge	r5, r3
 801bcde:	4287      	cmp	r7, r0
 801bce0:	bfb8      	it	lt
 801bce2:	46e0      	movlt	r8, ip
 801bce4:	e75b      	b.n	801bb9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801bce6:	4285      	cmp	r5, r0
 801bce8:	bfa8      	it	ge
 801bcea:	4605      	movge	r5, r0
 801bcec:	e757      	b.n	801bb9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801bcee:	eb0a 0007 	add.w	r0, sl, r7
 801bcf2:	4427      	add	r7, r4
 801bcf4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801bcf8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 801bcfc:	45cb      	cmp	fp, r9
 801bcfe:	bfbe      	ittt	lt
 801bd00:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 801bd04:	445d      	addlt	r5, fp
 801bd06:	b22d      	sxthlt	r5, r5
 801bd08:	f7f9 f829 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801bd0c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801bd10:	2800      	cmp	r0, #0
 801bd12:	f47f af1f 	bne.w	801bb54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 801bd16:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 801bd1a:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801bd1e:	482b      	ldr	r0, [pc, #172]	@ (801bdcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 801bd20:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801bd24:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 801bd28:	6800      	ldr	r0, [r0, #0]
 801bd2a:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 801bd2e:	1aad      	subs	r5, r5, r2
 801bd30:	454d      	cmp	r5, r9
 801bd32:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801bd36:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801bd3a:	bfa8      	it	ge
 801bd3c:	464d      	movge	r5, r9
 801bd3e:	f8d0 c000 	ldr.w	ip, [r0]
 801bd42:	b2ad      	uxth	r5, r5
 801bd44:	fa1f fb8b 	uxth.w	fp, fp
 801bd48:	455d      	cmp	r5, fp
 801bd4a:	bf94      	ite	ls
 801bd4c:	9500      	strls	r5, [sp, #0]
 801bd4e:	f8cd b000 	strhi.w	fp, [sp]
 801bd52:	b292      	uxth	r2, r2
 801bd54:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 801bd58:	b29b      	uxth	r3, r3
 801bd5a:	b289      	uxth	r1, r1
 801bd5c:	47a8      	blx	r5
 801bd5e:	6823      	ldr	r3, [r4, #0]
 801bd60:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801bd64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801bd66:	a90d      	add	r1, sp, #52	@ 0x34
 801bd68:	4620      	mov	r0, r4
 801bd6a:	4798      	blx	r3
 801bd6c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 801bd70:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801bd74:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801bd78:	1a5b      	subs	r3, r3, r1
 801bd7a:	440a      	add	r2, r1
 801bd7c:	b21b      	sxth	r3, r3
 801bd7e:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801bd82:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801bd86:	2b00      	cmp	r3, #0
 801bd88:	f47f aedf 	bne.w	801bb4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801bd8c:	fa1f f188 	uxth.w	r1, r8
 801bd90:	4650      	mov	r0, sl
 801bd92:	f7ff f8ab 	bl	801aeec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801bd96:	e6d8      	b.n	801bb4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801bd98:	8835      	ldrh	r5, [r6, #0]
 801bd9a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801bd9e:	42ab      	cmp	r3, r5
 801bda0:	f67f adc4 	bls.w	801b92c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801bda4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801bda8:	ab0d      	add	r3, sp, #52	@ 0x34
 801bdaa:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801bdae:	6851      	ldr	r1, [r2, #4]
 801bdb0:	c303      	stmia	r3!, {r0, r1}
 801bdb2:	a80d      	add	r0, sp, #52	@ 0x34
 801bdb4:	f7f8 ffd3 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 801bdb8:	b920      	cbnz	r0, 801bdc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 801bdba:	6823      	ldr	r3, [r4, #0]
 801bdbc:	a90d      	add	r1, sp, #52	@ 0x34
 801bdbe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801bdc0:	4620      	mov	r0, r4
 801bdc2:	4798      	blx	r3
 801bdc4:	3501      	adds	r5, #1
 801bdc6:	b2ad      	uxth	r5, r5
 801bdc8:	e7e7      	b.n	801bd9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 801bdca:	bf00      	nop
 801bdcc:	20013884 	.word	0x20013884

0801bdd0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801bdd0:	4b03      	ldr	r3, [pc, #12]	@ (801bde0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801bdd2:	2200      	movs	r2, #0
 801bdd4:	801a      	strh	r2, [r3, #0]
 801bdd6:	805a      	strh	r2, [r3, #2]
 801bdd8:	809a      	strh	r2, [r3, #4]
 801bdda:	80da      	strh	r2, [r3, #6]
 801bddc:	4770      	bx	lr
 801bdde:	bf00      	nop
 801bde0:	200138d0 	.word	0x200138d0

0801bde4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801bde4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bde8:	4606      	mov	r6, r0
 801bdea:	b09d      	sub	sp, #116	@ 0x74
 801bdec:	a803      	add	r0, sp, #12
 801bdee:	4614      	mov	r4, r2
 801bdf0:	468a      	mov	sl, r1
 801bdf2:	461d      	mov	r5, r3
 801bdf4:	f001 f946 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 801bdf8:	6833      	ldr	r3, [r6, #0]
 801bdfa:	4630      	mov	r0, r6
 801bdfc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bdfe:	4798      	blx	r3
 801be00:	6833      	ldr	r3, [r6, #0]
 801be02:	4607      	mov	r7, r0
 801be04:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801be06:	4630      	mov	r0, r6
 801be08:	4798      	blx	r3
 801be0a:	462a      	mov	r2, r5
 801be0c:	9000      	str	r0, [sp, #0]
 801be0e:	4621      	mov	r1, r4
 801be10:	463b      	mov	r3, r7
 801be12:	a803      	add	r0, sp, #12
 801be14:	f001 f991 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801be18:	2500      	movs	r5, #0
 801be1a:	462c      	mov	r4, r5
 801be1c:	46a9      	mov	r9, r5
 801be1e:	46a8      	mov	r8, r5
 801be20:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801be24:	2300      	movs	r3, #0
 801be26:	9302      	str	r3, [sp, #8]
 801be28:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801be2c:	429c      	cmp	r4, r3
 801be2e:	d002      	beq.n	801be36 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801be30:	455c      	cmp	r4, fp
 801be32:	bf18      	it	ne
 801be34:	4625      	movne	r5, r4
 801be36:	ab02      	add	r3, sp, #8
 801be38:	4632      	mov	r2, r6
 801be3a:	4651      	mov	r1, sl
 801be3c:	a803      	add	r0, sp, #12
 801be3e:	f001 fca9 	bl	801d794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801be42:	4604      	mov	r4, r0
 801be44:	b108      	cbz	r0, 801be4a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801be46:	280a      	cmp	r0, #10
 801be48:	d10a      	bne.n	801be60 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801be4a:	45c1      	cmp	r9, r8
 801be4c:	bf38      	it	cc
 801be4e:	46c1      	movcc	r9, r8
 801be50:	f04f 0800 	mov.w	r8, #0
 801be54:	2c00      	cmp	r4, #0
 801be56:	d1e5      	bne.n	801be24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801be58:	4648      	mov	r0, r9
 801be5a:	b01d      	add	sp, #116	@ 0x74
 801be5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be60:	9a02      	ldr	r2, [sp, #8]
 801be62:	2a00      	cmp	r2, #0
 801be64:	d0de      	beq.n	801be24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801be66:	7b57      	ldrb	r7, [r2, #13]
 801be68:	6833      	ldr	r3, [r6, #0]
 801be6a:	8894      	ldrh	r4, [r2, #4]
 801be6c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801be6e:	007f      	lsls	r7, r7, #1
 801be70:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801be74:	7a97      	ldrb	r7, [r2, #10]
 801be76:	4629      	mov	r1, r5
 801be78:	4307      	orrs	r7, r0
 801be7a:	4630      	mov	r0, r6
 801be7c:	4798      	blx	r3
 801be7e:	4438      	add	r0, r7
 801be80:	4480      	add	r8, r0
 801be82:	fa1f f888 	uxth.w	r8, r8
 801be86:	e7e5      	b.n	801be54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801be88 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801be88:	b508      	push	{r3, lr}
 801be8a:	6803      	ldr	r3, [r0, #0]
 801be8c:	68db      	ldr	r3, [r3, #12]
 801be8e:	4798      	blx	r3
 801be90:	b128      	cbz	r0, 801be9e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801be92:	7b43      	ldrb	r3, [r0, #13]
 801be94:	7a80      	ldrb	r0, [r0, #10]
 801be96:	005b      	lsls	r3, r3, #1
 801be98:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801be9c:	4318      	orrs	r0, r3
 801be9e:	bd08      	pop	{r3, pc}

0801bea0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801bea0:	b40e      	push	{r1, r2, r3}
 801bea2:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bea4:	b09e      	sub	sp, #120	@ 0x78
 801bea6:	ab23      	add	r3, sp, #140	@ 0x8c
 801bea8:	4605      	mov	r5, r0
 801beaa:	f853 4b04 	ldr.w	r4, [r3], #4
 801beae:	9303      	str	r3, [sp, #12]
 801beb0:	a805      	add	r0, sp, #20
 801beb2:	f001 f8e7 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 801beb6:	682b      	ldr	r3, [r5, #0]
 801beb8:	4628      	mov	r0, r5
 801beba:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bebc:	4798      	blx	r3
 801bebe:	682b      	ldr	r3, [r5, #0]
 801bec0:	4606      	mov	r6, r0
 801bec2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801bec4:	4628      	mov	r0, r5
 801bec6:	4798      	blx	r3
 801bec8:	4633      	mov	r3, r6
 801beca:	ae1e      	add	r6, sp, #120	@ 0x78
 801becc:	4621      	mov	r1, r4
 801bece:	9000      	str	r0, [sp, #0]
 801bed0:	9a03      	ldr	r2, [sp, #12]
 801bed2:	2400      	movs	r4, #0
 801bed4:	a805      	add	r0, sp, #20
 801bed6:	f001 f930 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801beda:	f846 4d68 	str.w	r4, [r6, #-104]!
 801bede:	462a      	mov	r2, r5
 801bee0:	4633      	mov	r3, r6
 801bee2:	4621      	mov	r1, r4
 801bee4:	a805      	add	r0, sp, #20
 801bee6:	f001 fc55 	bl	801d794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801beea:	b1f0      	cbz	r0, 801bf2a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801beec:	280a      	cmp	r0, #10
 801beee:	d018      	beq.n	801bf22 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801bef0:	9f04      	ldr	r7, [sp, #16]
 801bef2:	b1b7      	cbz	r7, 801bf22 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801bef4:	7b78      	ldrb	r0, [r7, #13]
 801bef6:	7a3b      	ldrb	r3, [r7, #8]
 801bef8:	88ea      	ldrh	r2, [r5, #6]
 801befa:	00c1      	lsls	r1, r0, #3
 801befc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801bf00:	4319      	orrs	r1, r3
 801bf02:	0643      	lsls	r3, r0, #25
 801bf04:	bf44      	itt	mi
 801bf06:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 801bf0a:	b219      	sxthmi	r1, r3
 801bf0c:	0100      	lsls	r0, r0, #4
 801bf0e:	79fb      	ldrb	r3, [r7, #7]
 801bf10:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801bf14:	4303      	orrs	r3, r0
 801bf16:	4413      	add	r3, r2
 801bf18:	1a5b      	subs	r3, r3, r1
 801bf1a:	b21b      	sxth	r3, r3
 801bf1c:	429c      	cmp	r4, r3
 801bf1e:	bfb8      	it	lt
 801bf20:	461c      	movlt	r4, r3
 801bf22:	4633      	mov	r3, r6
 801bf24:	462a      	mov	r2, r5
 801bf26:	2100      	movs	r1, #0
 801bf28:	e7dc      	b.n	801bee4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801bf2a:	b2a0      	uxth	r0, r4
 801bf2c:	b01e      	add	sp, #120	@ 0x78
 801bf2e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801bf32:	b003      	add	sp, #12
 801bf34:	4770      	bx	lr

0801bf36 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801bf36:	7a43      	ldrb	r3, [r0, #9]
 801bf38:	8880      	ldrh	r0, [r0, #4]
 801bf3a:	4418      	add	r0, r3
 801bf3c:	b280      	uxth	r0, r0
 801bf3e:	4770      	bx	lr

0801bf40 <_ZNK8touchgfx4Font13getFontHeightEv>:
 801bf40:	6803      	ldr	r3, [r0, #0]
 801bf42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801bf44:	4718      	bx	r3

0801bf46 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801bf46:	b40e      	push	{r1, r2, r3}
 801bf48:	b570      	push	{r4, r5, r6, lr}
 801bf4a:	b09d      	sub	sp, #116	@ 0x74
 801bf4c:	ab21      	add	r3, sp, #132	@ 0x84
 801bf4e:	4604      	mov	r4, r0
 801bf50:	f853 5b04 	ldr.w	r5, [r3], #4
 801bf54:	9302      	str	r3, [sp, #8]
 801bf56:	a803      	add	r0, sp, #12
 801bf58:	f001 f894 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 801bf5c:	6823      	ldr	r3, [r4, #0]
 801bf5e:	4620      	mov	r0, r4
 801bf60:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bf62:	4798      	blx	r3
 801bf64:	6823      	ldr	r3, [r4, #0]
 801bf66:	4606      	mov	r6, r0
 801bf68:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801bf6a:	4620      	mov	r0, r4
 801bf6c:	4798      	blx	r3
 801bf6e:	4633      	mov	r3, r6
 801bf70:	9000      	str	r0, [sp, #0]
 801bf72:	9a02      	ldr	r2, [sp, #8]
 801bf74:	4629      	mov	r1, r5
 801bf76:	a803      	add	r0, sp, #12
 801bf78:	f001 f8df 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801bf7c:	a803      	add	r0, sp, #12
 801bf7e:	f001 fcd7 	bl	801d930 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801bf82:	2401      	movs	r4, #1
 801bf84:	b2a3      	uxth	r3, r4
 801bf86:	b140      	cbz	r0, 801bf9a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801bf88:	280a      	cmp	r0, #10
 801bf8a:	bf08      	it	eq
 801bf8c:	3301      	addeq	r3, #1
 801bf8e:	a803      	add	r0, sp, #12
 801bf90:	bf08      	it	eq
 801bf92:	b21c      	sxtheq	r4, r3
 801bf94:	f001 fccc 	bl	801d930 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801bf98:	e7f4      	b.n	801bf84 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801bf9a:	4618      	mov	r0, r3
 801bf9c:	b01d      	add	sp, #116	@ 0x74
 801bf9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bfa2:	b003      	add	sp, #12
 801bfa4:	4770      	bx	lr

0801bfa6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801bfa6:	b40e      	push	{r1, r2, r3}
 801bfa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bfaa:	b09e      	sub	sp, #120	@ 0x78
 801bfac:	ab23      	add	r3, sp, #140	@ 0x8c
 801bfae:	4604      	mov	r4, r0
 801bfb0:	f853 5b04 	ldr.w	r5, [r3], #4
 801bfb4:	9303      	str	r3, [sp, #12]
 801bfb6:	a805      	add	r0, sp, #20
 801bfb8:	f001 f864 	bl	801d084 <_ZN8touchgfx12TextProviderC1Ev>
 801bfbc:	6823      	ldr	r3, [r4, #0]
 801bfbe:	4620      	mov	r0, r4
 801bfc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801bfc2:	4798      	blx	r3
 801bfc4:	6823      	ldr	r3, [r4, #0]
 801bfc6:	4606      	mov	r6, r0
 801bfc8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801bfca:	4620      	mov	r0, r4
 801bfcc:	4798      	blx	r3
 801bfce:	4633      	mov	r3, r6
 801bfd0:	4629      	mov	r1, r5
 801bfd2:	9000      	str	r0, [sp, #0]
 801bfd4:	9a03      	ldr	r2, [sp, #12]
 801bfd6:	a805      	add	r0, sp, #20
 801bfd8:	ad1e      	add	r5, sp, #120	@ 0x78
 801bfda:	f001 f8ae 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801bfde:	2100      	movs	r1, #0
 801bfe0:	f845 1d68 	str.w	r1, [r5, #-104]!
 801bfe4:	4622      	mov	r2, r4
 801bfe6:	462b      	mov	r3, r5
 801bfe8:	a805      	add	r0, sp, #20
 801bfea:	f001 fbd3 	bl	801d794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801bfee:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801bff2:	b1d8      	cbz	r0, 801c02c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801bff4:	280a      	cmp	r0, #10
 801bff6:	d012      	beq.n	801c01e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801bff8:	9804      	ldr	r0, [sp, #16]
 801bffa:	b180      	cbz	r0, 801c01e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801bffc:	7b47      	ldrb	r7, [r0, #13]
 801bffe:	88e2      	ldrh	r2, [r4, #6]
 801c000:	00fb      	lsls	r3, r7, #3
 801c002:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801c006:	7a03      	ldrb	r3, [r0, #8]
 801c008:	430b      	orrs	r3, r1
 801c00a:	0679      	lsls	r1, r7, #25
 801c00c:	bf44      	itt	mi
 801c00e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801c012:	b21b      	sxthmi	r3, r3
 801c014:	1ad3      	subs	r3, r2, r3
 801c016:	b21b      	sxth	r3, r3
 801c018:	429e      	cmp	r6, r3
 801c01a:	bfa8      	it	ge
 801c01c:	461e      	movge	r6, r3
 801c01e:	462b      	mov	r3, r5
 801c020:	4622      	mov	r2, r4
 801c022:	2100      	movs	r1, #0
 801c024:	a805      	add	r0, sp, #20
 801c026:	f001 fbb5 	bl	801d794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c02a:	e7e2      	b.n	801bff2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801c02c:	4630      	mov	r0, r6
 801c02e:	b01e      	add	sp, #120	@ 0x78
 801c030:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801c034:	b003      	add	sp, #12
 801c036:	4770      	bx	lr

0801c038 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801c038:	b513      	push	{r0, r1, r4, lr}
 801c03a:	6803      	ldr	r3, [r0, #0]
 801c03c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801c040:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c044:	f8ad 1004 	strh.w	r1, [sp, #4]
 801c048:	2400      	movs	r4, #0
 801c04a:	9400      	str	r4, [sp, #0]
 801c04c:	f8ad 2006 	strh.w	r2, [sp, #6]
 801c050:	691b      	ldr	r3, [r3, #16]
 801c052:	4669      	mov	r1, sp
 801c054:	4798      	blx	r3
 801c056:	b002      	add	sp, #8
 801c058:	bd10      	pop	{r4, pc}

0801c05a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801c05a:	b538      	push	{r3, r4, r5, lr}
 801c05c:	680b      	ldr	r3, [r1, #0]
 801c05e:	460c      	mov	r4, r1
 801c060:	68db      	ldr	r3, [r3, #12]
 801c062:	4605      	mov	r5, r0
 801c064:	4798      	blx	r3
 801c066:	6823      	ldr	r3, [r4, #0]
 801c068:	4620      	mov	r0, r4
 801c06a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c06c:	4629      	mov	r1, r5
 801c06e:	4798      	blx	r3
 801c070:	4628      	mov	r0, r5
 801c072:	bd38      	pop	{r3, r4, r5, pc}

0801c074 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801c074:	b410      	push	{r4}
 801c076:	880a      	ldrh	r2, [r1, #0]
 801c078:	8884      	ldrh	r4, [r0, #4]
 801c07a:	4422      	add	r2, r4
 801c07c:	800a      	strh	r2, [r1, #0]
 801c07e:	88c4      	ldrh	r4, [r0, #6]
 801c080:	884a      	ldrh	r2, [r1, #2]
 801c082:	4422      	add	r2, r4
 801c084:	804a      	strh	r2, [r1, #2]
 801c086:	6940      	ldr	r0, [r0, #20]
 801c088:	b120      	cbz	r0, 801c094 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801c08a:	6803      	ldr	r3, [r0, #0]
 801c08c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c090:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c092:	4718      	bx	r3
 801c094:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c098:	4770      	bx	lr

0801c09a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801c09a:	b570      	push	{r4, r5, r6, lr}
 801c09c:	8882      	ldrh	r2, [r0, #4]
 801c09e:	880b      	ldrh	r3, [r1, #0]
 801c0a0:	4413      	add	r3, r2
 801c0a2:	800b      	strh	r3, [r1, #0]
 801c0a4:	88c2      	ldrh	r2, [r0, #6]
 801c0a6:	884b      	ldrh	r3, [r1, #2]
 801c0a8:	460c      	mov	r4, r1
 801c0aa:	4413      	add	r3, r2
 801c0ac:	804b      	strh	r3, [r1, #2]
 801c0ae:	4605      	mov	r5, r0
 801c0b0:	1d01      	adds	r1, r0, #4
 801c0b2:	4620      	mov	r0, r4
 801c0b4:	f7f8 fe10 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801c0b8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801c0bc:	2b00      	cmp	r3, #0
 801c0be:	dd0b      	ble.n	801c0d8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c0c0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c0c4:	2b00      	cmp	r3, #0
 801c0c6:	dd07      	ble.n	801c0d8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c0c8:	6968      	ldr	r0, [r5, #20]
 801c0ca:	b128      	cbz	r0, 801c0d8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c0cc:	6803      	ldr	r3, [r0, #0]
 801c0ce:	4621      	mov	r1, r4
 801c0d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c0d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c0d6:	4718      	bx	r3
 801c0d8:	bd70      	pop	{r4, r5, r6, pc}
	...

0801c0dc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801c0dc:	b570      	push	{r4, r5, r6, lr}
 801c0de:	8882      	ldrh	r2, [r0, #4]
 801c0e0:	880b      	ldrh	r3, [r1, #0]
 801c0e2:	4413      	add	r3, r2
 801c0e4:	800b      	strh	r3, [r1, #0]
 801c0e6:	88c2      	ldrh	r2, [r0, #6]
 801c0e8:	884b      	ldrh	r3, [r1, #2]
 801c0ea:	460c      	mov	r4, r1
 801c0ec:	4413      	add	r3, r2
 801c0ee:	804b      	strh	r3, [r1, #2]
 801c0f0:	4605      	mov	r5, r0
 801c0f2:	1d01      	adds	r1, r0, #4
 801c0f4:	4620      	mov	r0, r4
 801c0f6:	f7f8 fdef 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801c0fa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801c0fe:	2b00      	cmp	r3, #0
 801c100:	dd19      	ble.n	801c136 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801c102:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c106:	2b00      	cmp	r3, #0
 801c108:	dd15      	ble.n	801c136 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801c10a:	6968      	ldr	r0, [r5, #20]
 801c10c:	b128      	cbz	r0, 801c11a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801c10e:	6803      	ldr	r3, [r0, #0]
 801c110:	4621      	mov	r1, r4
 801c112:	691b      	ldr	r3, [r3, #16]
 801c114:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c118:	4718      	bx	r3
 801c11a:	4b07      	ldr	r3, [pc, #28]	@ (801c138 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801c11c:	681b      	ldr	r3, [r3, #0]
 801c11e:	3304      	adds	r3, #4
 801c120:	429d      	cmp	r5, r3
 801c122:	d108      	bne.n	801c136 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801c124:	f7fe fdd6 	bl	801acd4 <_ZN8touchgfx11Application11getInstanceEv>
 801c128:	6803      	ldr	r3, [r0, #0]
 801c12a:	6821      	ldr	r1, [r4, #0]
 801c12c:	6862      	ldr	r2, [r4, #4]
 801c12e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801c130:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c134:	4718      	bx	r3
 801c136:	bd70      	pop	{r4, r5, r6, pc}
 801c138:	200138c8 	.word	0x200138c8

0801c13c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801c13c:	b570      	push	{r4, r5, r6, lr}
 801c13e:	4604      	mov	r4, r0
 801c140:	4616      	mov	r6, r2
 801c142:	460d      	mov	r5, r1
 801c144:	b901      	cbnz	r1, 801c148 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801c146:	b192      	cbz	r2, 801c16e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801c148:	6823      	ldr	r3, [r4, #0]
 801c14a:	4620      	mov	r0, r4
 801c14c:	699b      	ldr	r3, [r3, #24]
 801c14e:	4798      	blx	r3
 801c150:	88e2      	ldrh	r2, [r4, #6]
 801c152:	88a1      	ldrh	r1, [r4, #4]
 801c154:	4432      	add	r2, r6
 801c156:	4429      	add	r1, r5
 801c158:	4620      	mov	r0, r4
 801c15a:	b212      	sxth	r2, r2
 801c15c:	b209      	sxth	r1, r1
 801c15e:	f7e6 fc96 	bl	8002a8e <_ZN8touchgfx8Drawable5setXYEss>
 801c162:	6823      	ldr	r3, [r4, #0]
 801c164:	4620      	mov	r0, r4
 801c166:	699b      	ldr	r3, [r3, #24]
 801c168:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c16c:	4718      	bx	r3
 801c16e:	bd70      	pop	{r4, r5, r6, pc}

0801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801c170:	b510      	push	{r4, lr}
 801c172:	4604      	mov	r4, r0
 801c174:	4608      	mov	r0, r1
 801c176:	2300      	movs	r3, #0
 801c178:	8023      	strh	r3, [r4, #0]
 801c17a:	8063      	strh	r3, [r4, #2]
 801c17c:	6803      	ldr	r3, [r0, #0]
 801c17e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c182:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801c186:	80a1      	strh	r1, [r4, #4]
 801c188:	80e2      	strh	r2, [r4, #6]
 801c18a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c18c:	4621      	mov	r1, r4
 801c18e:	4798      	blx	r3
 801c190:	4620      	mov	r0, r4
 801c192:	bd10      	pop	{r4, pc}

0801c194 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 801c194:	4770      	bx	lr

0801c196 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 801c196:	b510      	push	{r4, lr}
 801c198:	211c      	movs	r1, #28
 801c19a:	4604      	mov	r4, r0
 801c19c:	f011 f82b 	bl	802d1f6 <_ZdlPvj>
 801c1a0:	4620      	mov	r0, r4
 801c1a2:	bd10      	pop	{r4, pc}

0801c1a4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 801c1a4:	4a04      	ldr	r2, [pc, #16]	@ (801c1b8 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 801c1a6:	6002      	str	r2, [r0, #0]
 801c1a8:	2200      	movs	r2, #0
 801c1aa:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801c1ae:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801c1b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801c1b6:	4770      	bx	lr
 801c1b8:	08032514 	.word	0x08032514

0801c1bc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 801c1bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1c0:	4604      	mov	r4, r0
 801c1c2:	b087      	sub	sp, #28
 801c1c4:	8b45      	ldrh	r5, [r0, #26]
 801c1c6:	f8b2 c000 	ldrh.w	ip, [r2]
 801c1ca:	9105      	str	r1, [sp, #20]
 801c1cc:	68e1      	ldr	r1, [r4, #12]
 801c1ce:	9203      	str	r2, [sp, #12]
 801c1d0:	1c68      	adds	r0, r5, #1
 801c1d2:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c1d6:	f01c 0501 	ands.w	r5, ip, #1
 801c1da:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c1de:	9502      	str	r5, [sp, #8]
 801c1e0:	b280      	uxth	r0, r0
 801c1e2:	d07d      	beq.n	801c2e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 801c1e4:	ee07 2a90 	vmov	s15, r2
 801c1e8:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 801c1ec:	8360      	strh	r0, [r4, #26]
 801c1ee:	edc1 6a00 	vstr	s13, [r1]
 801c1f2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801c1f6:	8b61      	ldrh	r1, [r4, #26]
 801c1f8:	ee07 2a10 	vmov	s14, r2
 801c1fc:	68e2      	ldr	r2, [r4, #12]
 801c1fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c202:	f04f 0e00 	mov.w	lr, #0
 801c206:	1c48      	adds	r0, r1, #1
 801c208:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 801c20c:	ee06 ea10 	vmov	s12, lr
 801c210:	8360      	strh	r0, [r4, #26]
 801c212:	ed82 7a00 	vstr	s14, [r2]
 801c216:	8b21      	ldrh	r1, [r4, #24]
 801c218:	68a2      	ldr	r2, [r4, #8]
 801c21a:	2501      	movs	r5, #1
 801c21c:	1c48      	adds	r0, r1, #1
 801c21e:	8320      	strh	r0, [r4, #24]
 801c220:	5455      	strb	r5, [r2, r1]
 801c222:	2200      	movs	r2, #0
 801c224:	3304      	adds	r3, #4
 801c226:	ee07 2a90 	vmov	s15, r2
 801c22a:	9300      	str	r3, [sp, #0]
 801c22c:	46aa      	mov	sl, r5
 801c22e:	4613      	mov	r3, r2
 801c230:	4611      	mov	r1, r2
 801c232:	462e      	mov	r6, r5
 801c234:	9201      	str	r2, [sp, #4]
 801c236:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801c23a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 801c23e:	9805      	ldr	r0, [sp, #20]
 801c240:	f8d4 b008 	ldr.w	fp, [r4, #8]
 801c244:	f108 0701 	add.w	r7, r8, #1
 801c248:	42a8      	cmp	r0, r5
 801c24a:	b2bf      	uxth	r7, r7
 801c24c:	eb0b 0908 	add.w	r9, fp, r8
 801c250:	f340 80db 	ble.w	801c40a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 801c254:	fa4c f906 	asr.w	r9, ip, r6
 801c258:	f009 0901 	and.w	r9, r9, #1
 801c25c:	fa5f f389 	uxtb.w	r3, r9
 801c260:	9304      	str	r3, [sp, #16]
 801c262:	9b00      	ldr	r3, [sp, #0]
 801c264:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c268:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c26c:	f1b9 0f00 	cmp.w	r9, #0
 801c270:	d07d      	beq.n	801c36e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 801c272:	ee05 1a10 	vmov	s10, r1
 801c276:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 801c27a:	ee05 3a10 	vmov	s10, r3
 801c27e:	8327      	strh	r7, [r4, #24]
 801c280:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 801c284:	f1ba 0f00 	cmp.w	sl, #0
 801c288:	d050      	beq.n	801c32c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 801c28a:	f04f 0002 	mov.w	r0, #2
 801c28e:	f80b 0008 	strb.w	r0, [fp, r8]
 801c292:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c296:	68e7      	ldr	r7, [r4, #12]
 801c298:	f108 0901 	add.w	r9, r8, #1
 801c29c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c2a0:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c2a4:	edc7 4a00 	vstr	s9, [r7]
 801c2a8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c2ac:	68e7      	ldr	r7, [r4, #12]
 801c2ae:	f108 0901 	add.w	r9, r8, #1
 801c2b2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c2b6:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c2ba:	ed87 5a00 	vstr	s10, [r7]
 801c2be:	3601      	adds	r6, #1
 801c2c0:	2e10      	cmp	r6, #16
 801c2c2:	d106      	bne.n	801c2d2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 801c2c4:	9e01      	ldr	r6, [sp, #4]
 801c2c6:	9803      	ldr	r0, [sp, #12]
 801c2c8:	3601      	adds	r6, #1
 801c2ca:	9601      	str	r6, [sp, #4]
 801c2cc:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 801c2d0:	2600      	movs	r6, #0
 801c2d2:	9800      	ldr	r0, [sp, #0]
 801c2d4:	f8dd a010 	ldr.w	sl, [sp, #16]
 801c2d8:	3004      	adds	r0, #4
 801c2da:	3501      	adds	r5, #1
 801c2dc:	9000      	str	r0, [sp, #0]
 801c2de:	e7ac      	b.n	801c23a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 801c2e0:	ee06 2a10 	vmov	s12, r2
 801c2e4:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 801c2e8:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801c2ec:	ee16 5a10 	vmov	r5, s12
 801c2f0:	442a      	add	r2, r5
 801c2f2:	ee06 2a90 	vmov	s13, r2
 801c2f6:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 801c2fa:	8360      	strh	r0, [r4, #26]
 801c2fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801c300:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801c304:	4472      	add	r2, lr
 801c306:	ee07 2a10 	vmov	s14, r2
 801c30a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801c30e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c312:	edc1 6a00 	vstr	s13, [r1]
 801c316:	8b61      	ldrh	r1, [r4, #26]
 801c318:	68e2      	ldr	r2, [r4, #12]
 801c31a:	ee27 7a27 	vmul.f32	s14, s14, s15
 801c31e:	1c48      	adds	r0, r1, #1
 801c320:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 801c324:	8360      	strh	r0, [r4, #26]
 801c326:	ed82 7a00 	vstr	s14, [r2]
 801c32a:	e774      	b.n	801c216 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 801c32c:	f04f 0005 	mov.w	r0, #5
 801c330:	f80b 0008 	strb.w	r0, [fp, r8]
 801c334:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c338:	68e7      	ldr	r7, [r4, #12]
 801c33a:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 801c33e:	f108 0901 	add.w	r9, r8, #1
 801c342:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c346:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c34a:	ed87 4a00 	vstr	s8, [r7]
 801c34e:	ee04 2a10 	vmov	s8, r2
 801c352:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c356:	68e7      	ldr	r7, [r4, #12]
 801c358:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 801c35c:	f108 0901 	add.w	r9, r8, #1
 801c360:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c364:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c368:	ed87 4a00 	vstr	s8, [r7]
 801c36c:	e791      	b.n	801c292 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 801c36e:	f1ba 0f00 	cmp.w	sl, #0
 801c372:	d146      	bne.n	801c402 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 801c374:	f04f 0005 	mov.w	r0, #5
 801c378:	8327      	strh	r7, [r4, #24]
 801c37a:	f80b 0008 	strb.w	r0, [fp, r8]
 801c37e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c382:	68e7      	ldr	r7, [r4, #12]
 801c384:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801c388:	f108 0901 	add.w	r9, r8, #1
 801c38c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c390:	ee17 0a90 	vmov	r0, s15
 801c394:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c398:	ed87 5a00 	vstr	s10, [r7]
 801c39c:	ee05 2a10 	vmov	s10, r2
 801c3a0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c3a4:	68e7      	ldr	r7, [r4, #12]
 801c3a6:	4408      	add	r0, r1
 801c3a8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 801c3ac:	ee07 0a90 	vmov	s15, r0
 801c3b0:	f108 0901 	add.w	r9, r8, #1
 801c3b4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c3b8:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c3bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c3c0:	ed87 5a00 	vstr	s10, [r7]
 801c3c4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c3c8:	68e7      	ldr	r7, [r4, #12]
 801c3ca:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c3ce:	f108 0901 	add.w	r9, r8, #1
 801c3d2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c3d6:	441a      	add	r2, r3
 801c3d8:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c3dc:	edc7 7a00 	vstr	s15, [r7]
 801c3e0:	ee07 2a90 	vmov	s15, r2
 801c3e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c3e8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c3ec:	68e7      	ldr	r7, [r4, #12]
 801c3ee:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c3f2:	f108 0901 	add.w	r9, r8, #1
 801c3f6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c3fa:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c3fe:	edc7 7a00 	vstr	s15, [r7]
 801c402:	461a      	mov	r2, r3
 801c404:	ee07 1a90 	vmov	s15, r1
 801c408:	e759      	b.n	801c2be <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 801c40a:	f1ba 0f00 	cmp.w	sl, #0
 801c40e:	d045      	beq.n	801c49c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801c410:	ee05 1a90 	vmov	s11, r1
 801c414:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c418:	eef4 5a66 	vcmp.f32	s11, s13
 801c41c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c420:	d108      	bne.n	801c434 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 801c422:	ee05 3a90 	vmov	s11, r3
 801c426:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c42a:	eef4 5a47 	vcmp.f32	s11, s14
 801c42e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c432:	d033      	beq.n	801c49c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801c434:	9b02      	ldr	r3, [sp, #8]
 801c436:	8327      	strh	r7, [r4, #24]
 801c438:	b1b3      	cbz	r3, 801c468 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 801c43a:	2302      	movs	r3, #2
 801c43c:	f889 3000 	strb.w	r3, [r9]
 801c440:	8b62      	ldrh	r2, [r4, #26]
 801c442:	68e3      	ldr	r3, [r4, #12]
 801c444:	1c51      	adds	r1, r2, #1
 801c446:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c44a:	8361      	strh	r1, [r4, #26]
 801c44c:	edc3 6a00 	vstr	s13, [r3]
 801c450:	8b62      	ldrh	r2, [r4, #26]
 801c452:	68e3      	ldr	r3, [r4, #12]
 801c454:	1c51      	adds	r1, r2, #1
 801c456:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c45a:	8361      	strh	r1, [r4, #26]
 801c45c:	ed83 7a00 	vstr	s14, [r3]
 801c460:	9800      	ldr	r0, [sp, #0]
 801c462:	b007      	add	sp, #28
 801c464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c468:	2305      	movs	r3, #5
 801c46a:	f889 3000 	strb.w	r3, [r9]
 801c46e:	8b62      	ldrh	r2, [r4, #26]
 801c470:	68e3      	ldr	r3, [r4, #12]
 801c472:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801c476:	1c51      	adds	r1, r2, #1
 801c478:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c47c:	8361      	strh	r1, [r4, #26]
 801c47e:	ee07 ea90 	vmov	s15, lr
 801c482:	ed83 6a00 	vstr	s12, [r3]
 801c486:	8b62      	ldrh	r2, [r4, #26]
 801c488:	68e3      	ldr	r3, [r4, #12]
 801c48a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c48e:	1c51      	adds	r1, r2, #1
 801c490:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c494:	8361      	strh	r1, [r4, #26]
 801c496:	edc3 7a00 	vstr	s15, [r3]
 801c49a:	e7d1      	b.n	801c440 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801c49c:	ee05 2a90 	vmov	s11, r2
 801c4a0:	9902      	ldr	r1, [sp, #8]
 801c4a2:	8327      	strh	r7, [r4, #24]
 801c4a4:	2305      	movs	r3, #5
 801c4a6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801c4aa:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801c4ae:	f889 3000 	strb.w	r3, [r9]
 801c4b2:	b181      	cbz	r1, 801c4d6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 801c4b4:	8b62      	ldrh	r2, [r4, #26]
 801c4b6:	68e3      	ldr	r3, [r4, #12]
 801c4b8:	1c51      	adds	r1, r2, #1
 801c4ba:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c4be:	8361      	strh	r1, [r4, #26]
 801c4c0:	ed83 5a00 	vstr	s10, [r3]
 801c4c4:	8b62      	ldrh	r2, [r4, #26]
 801c4c6:	68e3      	ldr	r3, [r4, #12]
 801c4c8:	1c51      	adds	r1, r2, #1
 801c4ca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801c4ce:	8361      	strh	r1, [r4, #26]
 801c4d0:	edc3 5a00 	vstr	s11, [r3]
 801c4d4:	e7b4      	b.n	801c440 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801c4d6:	8b65      	ldrh	r5, [r4, #26]
 801c4d8:	68e1      	ldr	r1, [r4, #12]
 801c4da:	1c6e      	adds	r6, r5, #1
 801c4dc:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c4e0:	8366      	strh	r6, [r4, #26]
 801c4e2:	ed81 5a00 	vstr	s10, [r1]
 801c4e6:	8b65      	ldrh	r5, [r4, #26]
 801c4e8:	68e1      	ldr	r1, [r4, #12]
 801c4ea:	1c6e      	adds	r6, r5, #1
 801c4ec:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c4f0:	8366      	strh	r6, [r4, #26]
 801c4f2:	edc1 5a00 	vstr	s11, [r1]
 801c4f6:	8b65      	ldrh	r5, [r4, #26]
 801c4f8:	68e1      	ldr	r1, [r4, #12]
 801c4fa:	1c6e      	adds	r6, r5, #1
 801c4fc:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c500:	ee17 0a90 	vmov	r0, s15
 801c504:	ee16 5a10 	vmov	r5, s12
 801c508:	4428      	add	r0, r5
 801c50a:	ee07 0a90 	vmov	s15, r0
 801c50e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c512:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801c516:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c51a:	4472      	add	r2, lr
 801c51c:	8366      	strh	r6, [r4, #26]
 801c51e:	edc1 7a00 	vstr	s15, [r1]
 801c522:	ee07 2a90 	vmov	s15, r2
 801c526:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c52a:	8b61      	ldrh	r1, [r4, #26]
 801c52c:	68e5      	ldr	r5, [r4, #12]
 801c52e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c532:	1c4e      	adds	r6, r1, #1
 801c534:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801c538:	8366      	strh	r6, [r4, #26]
 801c53a:	edc1 7a00 	vstr	s15, [r1]
 801c53e:	8b22      	ldrh	r2, [r4, #24]
 801c540:	68a1      	ldr	r1, [r4, #8]
 801c542:	1c55      	adds	r5, r2, #1
 801c544:	8325      	strh	r5, [r4, #24]
 801c546:	548b      	strb	r3, [r1, r2]
 801c548:	e791      	b.n	801c46e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

0801c54c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 801c54c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c550:	b08e      	sub	sp, #56	@ 0x38
 801c552:	4604      	mov	r4, r0
 801c554:	4688      	mov	r8, r1
 801c556:	4615      	mov	r5, r2
 801c558:	4699      	mov	r9, r3
 801c55a:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 801c55c:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 801c560:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 801c562:	f7e5 fb0f 	bl	8001b84 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 801c566:	6060      	str	r0, [r4, #4]
 801c568:	f1b9 0f00 	cmp.w	r9, #0
 801c56c:	f000 80e8 	beq.w	801c740 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801c570:	2800      	cmp	r0, #0
 801c572:	f000 80e5 	beq.w	801c740 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801c576:	a805      	add	r0, sp, #20
 801c578:	f000 f8f9 	bl	801c76e <_ZN8touchgfx9Matrix3x3C1Ev>
 801c57c:	6833      	ldr	r3, [r6, #0]
 801c57e:	4630      	mov	r0, r6
 801c580:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 801c582:	4798      	blx	r3
 801c584:	a805      	add	r0, sp, #20
 801c586:	eef0 0a40 	vmov.f32	s1, s0
 801c58a:	f000 f8f4 	bl	801c776 <_ZN8touchgfx9Matrix3x35scaleEff>
 801c58e:	6860      	ldr	r0, [r4, #4]
 801c590:	f1ba 0f03 	cmp.w	sl, #3
 801c594:	d83b      	bhi.n	801c60e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 801c596:	e8df f00a 	tbb	[pc, sl]
 801c59a:	1002      	.short	0x1002
 801c59c:	9f71      	.short	0x9f71
 801c59e:	6803      	ldr	r3, [r0, #0]
 801c5a0:	462a      	mov	r2, r5
 801c5a2:	689b      	ldr	r3, [r3, #8]
 801c5a4:	4641      	mov	r1, r8
 801c5a6:	4798      	blx	r3
 801c5a8:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 801c5ac:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801c5b0:	ee07 7a90 	vmov	s15, r7
 801c5b4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801c5b8:	e026      	b.n	801c608 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 801c5ba:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 801c5be:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801c5c2:	8869      	ldrh	r1, [r5, #2]
 801c5c4:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c5c8:	1a9b      	subs	r3, r3, r2
 801c5ca:	1a5b      	subs	r3, r3, r1
 801c5cc:	f8ad 300c 	strh.w	r3, [sp, #12]
 801c5d0:	882b      	ldrh	r3, [r5, #0]
 801c5d2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c5d6:	88ab      	ldrh	r3, [r5, #4]
 801c5d8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801c5dc:	6803      	ldr	r3, [r0, #0]
 801c5de:	aa03      	add	r2, sp, #12
 801c5e0:	689b      	ldr	r3, [r3, #8]
 801c5e2:	4641      	mov	r1, r8
 801c5e4:	4798      	blx	r3
 801c5e6:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 801c748 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 801c5ea:	a805      	add	r0, sp, #20
 801c5ec:	f000 f8e8 	bl	801c7c0 <_ZN8touchgfx9Matrix3x36rotateEf>
 801c5f0:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 801c5f4:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c5f6:	ee07 7a90 	vmov	s15, r7
 801c5fa:	1a9b      	subs	r3, r3, r2
 801c5fc:	ee00 3a10 	vmov	s0, r3
 801c600:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801c604:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 801c608:	a805      	add	r0, sp, #20
 801c60a:	f000 f927 	bl	801c85c <_ZN8touchgfx9Matrix3x39translateEff>
 801c60e:	6860      	ldr	r0, [r4, #4]
 801c610:	6803      	ldr	r3, [r0, #0]
 801c612:	a905      	add	r1, sp, #20
 801c614:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801c616:	4798      	blx	r3
 801c618:	6860      	ldr	r0, [r4, #4]
 801c61a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c61c:	6803      	ldr	r3, [r0, #0]
 801c61e:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 801c622:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c624:	4798      	blx	r3
 801c626:	6860      	ldr	r0, [r4, #4]
 801c628:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 801c62c:	6803      	ldr	r3, [r0, #0]
 801c62e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c630:	4798      	blx	r3
 801c632:	6860      	ldr	r0, [r4, #4]
 801c634:	6803      	ldr	r3, [r0, #0]
 801c636:	2101      	movs	r1, #1
 801c638:	68db      	ldr	r3, [r3, #12]
 801c63a:	2500      	movs	r5, #0
 801c63c:	4798      	blx	r3
 801c63e:	f8b9 7000 	ldrh.w	r7, [r9]
 801c642:	61a5      	str	r5, [r4, #24]
 801c644:	f104 0310 	add.w	r3, r4, #16
 801c648:	f104 0208 	add.w	r2, r4, #8
 801c64c:	f104 0114 	add.w	r1, r4, #20
 801c650:	f104 000c 	add.w	r0, r4, #12
 801c654:	f109 0602 	add.w	r6, r9, #2
 801c658:	f7ed fd5c 	bl	800a114 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 801c65c:	42af      	cmp	r7, r5
 801c65e:	dd60      	ble.n	801c722 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 801c660:	8831      	ldrh	r1, [r6, #0]
 801c662:	f101 030f 	add.w	r3, r1, #15
 801c666:	1cb2      	adds	r2, r6, #2
 801c668:	f3c3 1307 	ubfx	r3, r3, #4, #8
 801c66c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c670:	4620      	mov	r0, r4
 801c672:	f7ff fda3 	bl	801c1bc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 801c676:	3501      	adds	r5, #1
 801c678:	4606      	mov	r6, r0
 801c67a:	e7ef      	b.n	801c65c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 801c67c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801c680:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801c684:	8829      	ldrh	r1, [r5, #0]
 801c686:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c68a:	1a9b      	subs	r3, r3, r2
 801c68c:	1a5b      	subs	r3, r3, r1
 801c68e:	f8ad 300c 	strh.w	r3, [sp, #12]
 801c692:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801c696:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801c69a:	886d      	ldrh	r5, [r5, #2]
 801c69c:	f8ad 1012 	strh.w	r1, [sp, #18]
 801c6a0:	1a5b      	subs	r3, r3, r1
 801c6a2:	1b5b      	subs	r3, r3, r5
 801c6a4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c6a8:	6803      	ldr	r3, [r0, #0]
 801c6aa:	aa03      	add	r2, sp, #12
 801c6ac:	689b      	ldr	r3, [r3, #8]
 801c6ae:	4641      	mov	r1, r8
 801c6b0:	4798      	blx	r3
 801c6b2:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 801c74c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 801c6b6:	a805      	add	r0, sp, #20
 801c6b8:	f000 f882 	bl	801c7c0 <_ZN8touchgfx9Matrix3x36rotateEf>
 801c6bc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801c6c0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c6c2:	1a9b      	subs	r3, r3, r2
 801c6c4:	ee00 3a90 	vmov	s1, r3
 801c6c8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 801c6cc:	1bdb      	subs	r3, r3, r7
 801c6ce:	ee00 3a10 	vmov	s0, r3
 801c6d2:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801c6d6:	e795      	b.n	801c604 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 801c6d8:	886b      	ldrh	r3, [r5, #2]
 801c6da:	f8ad 300c 	strh.w	r3, [sp, #12]
 801c6de:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801c6e2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801c6e6:	8829      	ldrh	r1, [r5, #0]
 801c6e8:	f8ad 2012 	strh.w	r2, [sp, #18]
 801c6ec:	1a9b      	subs	r3, r3, r2
 801c6ee:	1a5b      	subs	r3, r3, r1
 801c6f0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c6f4:	88eb      	ldrh	r3, [r5, #6]
 801c6f6:	f8ad 3010 	strh.w	r3, [sp, #16]
 801c6fa:	6803      	ldr	r3, [r0, #0]
 801c6fc:	aa03      	add	r2, sp, #12
 801c6fe:	689b      	ldr	r3, [r3, #8]
 801c700:	4641      	mov	r1, r8
 801c702:	4798      	blx	r3
 801c704:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 801c750 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 801c708:	a805      	add	r0, sp, #20
 801c70a:	f000 f859 	bl	801c7c0 <_ZN8touchgfx9Matrix3x36rotateEf>
 801c70e:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801c712:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 801c716:	1bdb      	subs	r3, r3, r7
 801c718:	ee00 3a90 	vmov	s1, r3
 801c71c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801c720:	e748      	b.n	801c5b4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 801c722:	6860      	ldr	r0, [r4, #4]
 801c724:	8b22      	ldrh	r2, [r4, #24]
 801c726:	6803      	ldr	r3, [r0, #0]
 801c728:	2100      	movs	r1, #0
 801c72a:	9101      	str	r1, [sp, #4]
 801c72c:	8b61      	ldrh	r1, [r4, #26]
 801c72e:	9100      	str	r1, [sp, #0]
 801c730:	6a1d      	ldr	r5, [r3, #32]
 801c732:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 801c736:	47a8      	blx	r5
 801c738:	6860      	ldr	r0, [r4, #4]
 801c73a:	6803      	ldr	r3, [r0, #0]
 801c73c:	69db      	ldr	r3, [r3, #28]
 801c73e:	4798      	blx	r3
 801c740:	b00e      	add	sp, #56	@ 0x38
 801c742:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c746:	bf00      	nop
 801c748:	42b40000 	.word	0x42b40000
 801c74c:	43340000 	.word	0x43340000
 801c750:	43870000 	.word	0x43870000

0801c754 <_ZN8touchgfx9Matrix3x35resetEv>:
 801c754:	2300      	movs	r3, #0
 801c756:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801c75a:	6002      	str	r2, [r0, #0]
 801c75c:	6043      	str	r3, [r0, #4]
 801c75e:	6083      	str	r3, [r0, #8]
 801c760:	60c3      	str	r3, [r0, #12]
 801c762:	6102      	str	r2, [r0, #16]
 801c764:	6143      	str	r3, [r0, #20]
 801c766:	6183      	str	r3, [r0, #24]
 801c768:	61c3      	str	r3, [r0, #28]
 801c76a:	6202      	str	r2, [r0, #32]
 801c76c:	4770      	bx	lr

0801c76e <_ZN8touchgfx9Matrix3x3C1Ev>:
 801c76e:	b508      	push	{r3, lr}
 801c770:	f7ff fff0 	bl	801c754 <_ZN8touchgfx9Matrix3x35resetEv>
 801c774:	bd08      	pop	{r3, pc}

0801c776 <_ZN8touchgfx9Matrix3x35scaleEff>:
 801c776:	edd0 7a00 	vldr	s15, [r0]
 801c77a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c77e:	edc0 7a00 	vstr	s15, [r0]
 801c782:	edd0 7a01 	vldr	s15, [r0, #4]
 801c786:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c78a:	edc0 7a01 	vstr	s15, [r0, #4]
 801c78e:	edd0 7a02 	vldr	s15, [r0, #8]
 801c792:	ee27 0a80 	vmul.f32	s0, s15, s0
 801c796:	edd0 7a03 	vldr	s15, [r0, #12]
 801c79a:	ed80 0a02 	vstr	s0, [r0, #8]
 801c79e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801c7a2:	edc0 7a03 	vstr	s15, [r0, #12]
 801c7a6:	edd0 7a04 	vldr	s15, [r0, #16]
 801c7aa:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801c7ae:	edc0 7a04 	vstr	s15, [r0, #16]
 801c7b2:	edd0 7a05 	vldr	s15, [r0, #20]
 801c7b6:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801c7ba:	edc0 0a05 	vstr	s1, [r0, #20]
 801c7be:	4770      	bx	lr

0801c7c0 <_ZN8touchgfx9Matrix3x36rotateEf>:
 801c7c0:	b510      	push	{r4, lr}
 801c7c2:	eddf 7a24 	vldr	s15, [pc, #144]	@ 801c854 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 801c7c6:	ee20 0a27 	vmul.f32	s0, s0, s15
 801c7ca:	eddf 7a23 	vldr	s15, [pc, #140]	@ 801c858 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 801c7ce:	ed2d 8b02 	vpush	{d8}
 801c7d2:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801c7d6:	4604      	mov	r4, r0
 801c7d8:	eeb0 0a68 	vmov.f32	s0, s17
 801c7dc:	f010 fd54 	bl	802d288 <cosf>
 801c7e0:	eeb0 8a40 	vmov.f32	s16, s0
 801c7e4:	eeb0 0a68 	vmov.f32	s0, s17
 801c7e8:	f010 fd92 	bl	802d310 <sinf>
 801c7ec:	edd4 6a03 	vldr	s13, [r4, #12]
 801c7f0:	edd4 4a00 	vldr	s9, [r4]
 801c7f4:	ed94 7a04 	vldr	s14, [r4, #16]
 801c7f8:	ed94 5a01 	vldr	s10, [r4, #4]
 801c7fc:	edd4 5a02 	vldr	s11, [r4, #8]
 801c800:	ee60 7a66 	vnmul.f32	s15, s0, s13
 801c804:	ee66 6a88 	vmul.f32	s13, s13, s16
 801c808:	eee8 7a24 	vfma.f32	s15, s16, s9
 801c80c:	eee0 6a24 	vfma.f32	s13, s0, s9
 801c810:	edc4 7a00 	vstr	s15, [r4]
 801c814:	ee60 7a47 	vnmul.f32	s15, s0, s14
 801c818:	ee27 7a08 	vmul.f32	s14, s14, s16
 801c81c:	eee8 7a05 	vfma.f32	s15, s16, s10
 801c820:	eea0 7a05 	vfma.f32	s14, s0, s10
 801c824:	edc4 7a01 	vstr	s15, [r4, #4]
 801c828:	edd4 7a05 	vldr	s15, [r4, #20]
 801c82c:	edc4 6a03 	vstr	s13, [r4, #12]
 801c830:	ee20 6a67 	vnmul.f32	s12, s0, s15
 801c834:	ee67 7a88 	vmul.f32	s15, s15, s16
 801c838:	eea8 6a25 	vfma.f32	s12, s16, s11
 801c83c:	ecbd 8b02 	vpop	{d8}
 801c840:	eee0 7a25 	vfma.f32	s15, s0, s11
 801c844:	ed84 6a02 	vstr	s12, [r4, #8]
 801c848:	ed84 7a04 	vstr	s14, [r4, #16]
 801c84c:	edc4 7a05 	vstr	s15, [r4, #20]
 801c850:	bd10      	pop	{r4, pc}
 801c852:	bf00      	nop
 801c854:	40490fdb 	.word	0x40490fdb
 801c858:	43340000 	.word	0x43340000

0801c85c <_ZN8touchgfx9Matrix3x39translateEff>:
 801c85c:	ed90 6a06 	vldr	s12, [r0, #24]
 801c860:	edd0 7a00 	vldr	s15, [r0]
 801c864:	edd0 6a07 	vldr	s13, [r0, #28]
 801c868:	ed90 7a08 	vldr	s14, [r0, #32]
 801c86c:	eee6 7a00 	vfma.f32	s15, s12, s0
 801c870:	edc0 7a00 	vstr	s15, [r0]
 801c874:	edd0 7a01 	vldr	s15, [r0, #4]
 801c878:	eee6 7a80 	vfma.f32	s15, s13, s0
 801c87c:	edc0 7a01 	vstr	s15, [r0, #4]
 801c880:	edd0 7a02 	vldr	s15, [r0, #8]
 801c884:	eee7 7a00 	vfma.f32	s15, s14, s0
 801c888:	edc0 7a02 	vstr	s15, [r0, #8]
 801c88c:	edd0 7a03 	vldr	s15, [r0, #12]
 801c890:	eee6 7a20 	vfma.f32	s15, s12, s1
 801c894:	edc0 7a03 	vstr	s15, [r0, #12]
 801c898:	edd0 7a04 	vldr	s15, [r0, #16]
 801c89c:	eee6 7aa0 	vfma.f32	s15, s13, s1
 801c8a0:	edc0 7a04 	vstr	s15, [r0, #16]
 801c8a4:	edd0 7a05 	vldr	s15, [r0, #20]
 801c8a8:	eee7 7a20 	vfma.f32	s15, s14, s1
 801c8ac:	edc0 7a05 	vstr	s15, [r0, #20]
 801c8b0:	4770      	bx	lr

0801c8b2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 801c8b2:	edd0 6a01 	vldr	s13, [r0, #4]
 801c8b6:	edd0 7a04 	vldr	s15, [r0, #16]
 801c8ba:	ed90 7a03 	vldr	s14, [r0, #12]
 801c8be:	ee60 7aa7 	vmul.f32	s15, s1, s15
 801c8c2:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801c8c6:	edd0 6a00 	vldr	s13, [r0]
 801c8ca:	eee7 7a00 	vfma.f32	s15, s14, s0
 801c8ce:	b084      	sub	sp, #16
 801c8d0:	eee6 0a80 	vfma.f32	s1, s13, s0
 801c8d4:	ed90 7a05 	vldr	s14, [r0, #20]
 801c8d8:	ed90 0a02 	vldr	s0, [r0, #8]
 801c8dc:	ee30 0a80 	vadd.f32	s0, s1, s0
 801c8e0:	ee77 0a87 	vadd.f32	s1, s15, s14
 801c8e4:	b004      	add	sp, #16
 801c8e6:	4770      	bx	lr

0801c8e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801c8e8:	b530      	push	{r4, r5, lr}
 801c8ea:	8083      	strh	r3, [r0, #4]
 801c8ec:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801c8f0:	80c3      	strh	r3, [r0, #6]
 801c8f2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801c8f6:	7203      	strb	r3, [r0, #8]
 801c8f8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801c8fc:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801c900:	7243      	strb	r3, [r0, #9]
 801c902:	7a83      	ldrb	r3, [r0, #10]
 801c904:	6141      	str	r1, [r0, #20]
 801c906:	f365 0306 	bfi	r3, r5, #0, #7
 801c90a:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801c90e:	8302      	strh	r2, [r0, #24]
 801c910:	f365 13c7 	bfi	r3, r5, #7, #1
 801c914:	7283      	strb	r3, [r0, #10]
 801c916:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801c91a:	72c3      	strb	r3, [r0, #11]
 801c91c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 801c920:	7303      	strb	r3, [r0, #12]
 801c922:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801c926:	81c3      	strh	r3, [r0, #14]
 801c928:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801c92c:	8203      	strh	r3, [r0, #16]
 801c92e:	4b01      	ldr	r3, [pc, #4]	@ (801c934 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801c930:	6003      	str	r3, [r0, #0]
 801c932:	bd30      	pop	{r4, r5, pc}
 801c934:	08032528 	.word	0x08032528

0801c938 <_ZNK8touchgfx9ConstFont4findEt>:
 801c938:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c93a:	6944      	ldr	r4, [r0, #20]
 801c93c:	b3bc      	cbz	r4, 801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c93e:	88a3      	ldrh	r3, [r4, #4]
 801c940:	8b02      	ldrh	r2, [r0, #24]
 801c942:	1acb      	subs	r3, r1, r3
 801c944:	f102 32ff 	add.w	r2, r2, #4294967295
 801c948:	d431      	bmi.n	801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c94a:	4293      	cmp	r3, r2
 801c94c:	dd0c      	ble.n	801c968 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801c94e:	230e      	movs	r3, #14
 801c950:	fb03 4302 	mla	r3, r3, r2, r4
 801c954:	889b      	ldrh	r3, [r3, #4]
 801c956:	1a5b      	subs	r3, r3, r1
 801c958:	1ad3      	subs	r3, r2, r3
 801c95a:	429a      	cmp	r2, r3
 801c95c:	db27      	blt.n	801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c95e:	2b00      	cmp	r3, #0
 801c960:	bfbc      	itt	lt
 801c962:	2302      	movlt	r3, #2
 801c964:	fb92 f3f3 	sdivlt	r3, r2, r3
 801c968:	2500      	movs	r5, #0
 801c96a:	260e      	movs	r6, #14
 801c96c:	4295      	cmp	r5, r2
 801c96e:	dc1e      	bgt.n	801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c970:	fb06 4003 	mla	r0, r6, r3, r4
 801c974:	8887      	ldrh	r7, [r0, #4]
 801c976:	42b9      	cmp	r1, r7
 801c978:	d01a      	beq.n	801c9b0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801c97a:	d20d      	bcs.n	801c998 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801c97c:	1e5a      	subs	r2, r3, #1
 801c97e:	4295      	cmp	r5, r2
 801c980:	dc15      	bgt.n	801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c982:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801c986:	1a5b      	subs	r3, r3, r1
 801c988:	1ad3      	subs	r3, r2, r3
 801c98a:	429a      	cmp	r2, r3
 801c98c:	db0f      	blt.n	801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c98e:	429d      	cmp	r5, r3
 801c990:	ddec      	ble.n	801c96c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c992:	1953      	adds	r3, r2, r5
 801c994:	105b      	asrs	r3, r3, #1
 801c996:	e7e9      	b.n	801c96c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c998:	1c5d      	adds	r5, r3, #1
 801c99a:	42aa      	cmp	r2, r5
 801c99c:	db07      	blt.n	801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c99e:	8a43      	ldrh	r3, [r0, #18]
 801c9a0:	1acb      	subs	r3, r1, r3
 801c9a2:	442b      	add	r3, r5
 801c9a4:	429d      	cmp	r5, r3
 801c9a6:	dc02      	bgt.n	801c9ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c9a8:	429a      	cmp	r2, r3
 801c9aa:	dadf      	bge.n	801c96c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c9ac:	e7f1      	b.n	801c992 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801c9ae:	2000      	movs	r0, #0
 801c9b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c9b2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801c9b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c9b4:	4604      	mov	r4, r0
 801c9b6:	4617      	mov	r7, r2
 801c9b8:	461e      	mov	r6, r3
 801c9ba:	b911      	cbnz	r1, 801c9c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801c9bc:	2500      	movs	r5, #0
 801c9be:	4628      	mov	r0, r5
 801c9c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c9c2:	290a      	cmp	r1, #10
 801c9c4:	d0fa      	beq.n	801c9bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c9c6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801c9ca:	4291      	cmp	r1, r2
 801c9cc:	d0f6      	beq.n	801c9bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c9ce:	f242 020b 	movw	r2, #8203	@ 0x200b
 801c9d2:	4291      	cmp	r1, r2
 801c9d4:	d0f2      	beq.n	801c9bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c9d6:	f7ff ffaf 	bl	801c938 <_ZNK8touchgfx9ConstFont4findEt>
 801c9da:	4605      	mov	r5, r0
 801c9dc:	b950      	cbnz	r0, 801c9f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801c9de:	6823      	ldr	r3, [r4, #0]
 801c9e0:	4620      	mov	r0, r4
 801c9e2:	691b      	ldr	r3, [r3, #16]
 801c9e4:	4798      	blx	r3
 801c9e6:	4601      	mov	r1, r0
 801c9e8:	4620      	mov	r0, r4
 801c9ea:	f7ff ffa5 	bl	801c938 <_ZNK8touchgfx9ConstFont4findEt>
 801c9ee:	4605      	mov	r5, r0
 801c9f0:	2800      	cmp	r0, #0
 801c9f2:	d0e3      	beq.n	801c9bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c9f4:	6823      	ldr	r3, [r4, #0]
 801c9f6:	4629      	mov	r1, r5
 801c9f8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801c9fa:	4620      	mov	r0, r4
 801c9fc:	4798      	blx	r3
 801c9fe:	6038      	str	r0, [r7, #0]
 801ca00:	6823      	ldr	r3, [r4, #0]
 801ca02:	4620      	mov	r0, r4
 801ca04:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801ca06:	4798      	blx	r3
 801ca08:	7030      	strb	r0, [r6, #0]
 801ca0a:	e7d8      	b.n	801c9be <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801ca0c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801ca0c:	b538      	push	{r3, r4, r5, lr}
 801ca0e:	4605      	mov	r5, r0
 801ca10:	f001 fce8 	bl	801e3e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801ca14:	4604      	mov	r4, r0
 801ca16:	4628      	mov	r0, r5
 801ca18:	f001 fc28 	bl	801e26c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ca1c:	2800      	cmp	r0, #0
 801ca1e:	bf14      	ite	ne
 801ca20:	2002      	movne	r0, #2
 801ca22:	2000      	moveq	r0, #0
 801ca24:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801ca28:	b280      	uxth	r0, r0
 801ca2a:	bd38      	pop	{r3, r4, r5, pc}

0801ca2c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801ca2c:	b538      	push	{r3, r4, r5, lr}
 801ca2e:	4605      	mov	r5, r0
 801ca30:	f001 fcd8 	bl	801e3e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801ca34:	4604      	mov	r4, r0
 801ca36:	4628      	mov	r0, r5
 801ca38:	f001 fc18 	bl	801e26c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ca3c:	2800      	cmp	r0, #0
 801ca3e:	bf14      	ite	ne
 801ca40:	2002      	movne	r0, #2
 801ca42:	2000      	moveq	r0, #0
 801ca44:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801ca48:	f040 0001 	orr.w	r0, r0, #1
 801ca4c:	b280      	uxth	r0, r0
 801ca4e:	bd38      	pop	{r3, r4, r5, pc}

0801ca50 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801ca50:	2000      	movs	r0, #0
 801ca52:	4770      	bx	lr

0801ca54 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801ca54:	2001      	movs	r0, #1
 801ca56:	4770      	bx	lr

0801ca58 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801ca58:	2002      	movs	r0, #2
 801ca5a:	4770      	bx	lr

0801ca5c <_ZN8touchgfx6ScreenD1Ev>:
 801ca5c:	4770      	bx	lr

0801ca5e <_ZN8touchgfx12GestureEventD1Ev>:
 801ca5e:	4770      	bx	lr

0801ca60 <_ZN8touchgfx9DragEventD1Ev>:
 801ca60:	4770      	bx	lr

0801ca62 <_ZN8touchgfx10ClickEventD1Ev>:
 801ca62:	4770      	bx	lr

0801ca64 <_ZN8touchgfx10ClickEventD0Ev>:
 801ca64:	b510      	push	{r4, lr}
 801ca66:	210c      	movs	r1, #12
 801ca68:	4604      	mov	r4, r0
 801ca6a:	f010 fbc4 	bl	802d1f6 <_ZdlPvj>
 801ca6e:	4620      	mov	r0, r4
 801ca70:	bd10      	pop	{r4, pc}

0801ca72 <_ZN8touchgfx9DragEventD0Ev>:
 801ca72:	b510      	push	{r4, lr}
 801ca74:	2110      	movs	r1, #16
 801ca76:	4604      	mov	r4, r0
 801ca78:	f010 fbbd 	bl	802d1f6 <_ZdlPvj>
 801ca7c:	4620      	mov	r0, r4
 801ca7e:	bd10      	pop	{r4, pc}

0801ca80 <_ZN8touchgfx12GestureEventD0Ev>:
 801ca80:	b510      	push	{r4, lr}
 801ca82:	210c      	movs	r1, #12
 801ca84:	4604      	mov	r4, r0
 801ca86:	f010 fbb6 	bl	802d1f6 <_ZdlPvj>
 801ca8a:	4620      	mov	r0, r4
 801ca8c:	bd10      	pop	{r4, pc}

0801ca8e <_ZN8touchgfx6ScreenD0Ev>:
 801ca8e:	b510      	push	{r4, lr}
 801ca90:	213c      	movs	r1, #60	@ 0x3c
 801ca92:	4604      	mov	r4, r0
 801ca94:	f010 fbaf 	bl	802d1f6 <_ZdlPvj>
 801ca98:	4620      	mov	r0, r4
 801ca9a:	bd10      	pop	{r4, pc}

0801ca9c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801ca9c:	b530      	push	{r4, r5, lr}
 801ca9e:	460d      	mov	r5, r1
 801caa0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801caa2:	b087      	sub	sp, #28
 801caa4:	4604      	mov	r4, r0
 801caa6:	b301      	cbz	r1, 801caea <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801caa8:	a801      	add	r0, sp, #4
 801caaa:	f7ff fb61 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801caae:	892a      	ldrh	r2, [r5, #8]
 801cab0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801cab4:	7928      	ldrb	r0, [r5, #4]
 801cab6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801caba:	f88d 0010 	strb.w	r0, [sp, #16]
 801cabe:	1ad2      	subs	r2, r2, r3
 801cac0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801cac2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801cac4:	f8ad 1012 	strh.w	r1, [sp, #18]
 801cac8:	441a      	add	r2, r3
 801caca:	896b      	ldrh	r3, [r5, #10]
 801cacc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801cad0:	f8ad 2014 	strh.w	r2, [sp, #20]
 801cad4:	1b5b      	subs	r3, r3, r5
 801cad6:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 801cad8:	442b      	add	r3, r5
 801cada:	4d05      	ldr	r5, [pc, #20]	@ (801caf0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801cadc:	9503      	str	r5, [sp, #12]
 801cade:	f8ad 3016 	strh.w	r3, [sp, #22]
 801cae2:	6803      	ldr	r3, [r0, #0]
 801cae4:	a903      	add	r1, sp, #12
 801cae6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801cae8:	4798      	blx	r3
 801caea:	b007      	add	sp, #28
 801caec:	bd30      	pop	{r4, r5, pc}
 801caee:	bf00      	nop
 801caf0:	080325b8 	.word	0x080325b8

0801caf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801caf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801caf8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801cafa:	b08a      	sub	sp, #40	@ 0x28
 801cafc:	4604      	mov	r4, r0
 801cafe:	460d      	mov	r5, r1
 801cb00:	b113      	cbz	r3, 801cb08 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801cb02:	790b      	ldrb	r3, [r1, #4]
 801cb04:	2b00      	cmp	r3, #0
 801cb06:	d044      	beq.n	801cb92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801cb08:	f104 0804 	add.w	r8, r4, #4
 801cb0c:	4641      	mov	r1, r8
 801cb0e:	a803      	add	r0, sp, #12
 801cb10:	f7ff fb2e 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cb14:	792b      	ldrb	r3, [r5, #4]
 801cb16:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cb1a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801cb1e:	b983      	cbnz	r3, 801cb42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801cb20:	892a      	ldrh	r2, [r5, #8]
 801cb22:	88e9      	ldrh	r1, [r5, #6]
 801cb24:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 801cb28:	1b92      	subs	r2, r2, r6
 801cb2a:	1bc9      	subs	r1, r1, r7
 801cb2c:	9301      	str	r3, [sp, #4]
 801cb2e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801cb32:	9300      	str	r3, [sp, #0]
 801cb34:	b212      	sxth	r2, r2
 801cb36:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801cb3a:	b209      	sxth	r1, r1
 801cb3c:	4640      	mov	r0, r8
 801cb3e:	f7f7 ffe7 	bl	8014b10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801cb42:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801cb44:	b329      	cbz	r1, 801cb92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801cb46:	a805      	add	r0, sp, #20
 801cb48:	f7ff fb12 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cb4c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801cb50:	792b      	ldrb	r3, [r5, #4]
 801cb52:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801cb54:	f88d 3020 	strb.w	r3, [sp, #32]
 801cb58:	1abf      	subs	r7, r7, r2
 801cb5a:	88ea      	ldrh	r2, [r5, #6]
 801cb5c:	4417      	add	r7, r2
 801cb5e:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801cb60:	4417      	add	r7, r2
 801cb62:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801cb66:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801cb6a:	1ab6      	subs	r6, r6, r2
 801cb6c:	892a      	ldrh	r2, [r5, #8]
 801cb6e:	4416      	add	r6, r2
 801cb70:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801cb72:	4416      	add	r6, r2
 801cb74:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 801cb78:	4a07      	ldr	r2, [pc, #28]	@ (801cb98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801cb7a:	9207      	str	r2, [sp, #28]
 801cb7c:	2600      	movs	r6, #0
 801cb7e:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801cb82:	6803      	ldr	r3, [r0, #0]
 801cb84:	a907      	add	r1, sp, #28
 801cb86:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801cb88:	4798      	blx	r3
 801cb8a:	792b      	ldrb	r3, [r5, #4]
 801cb8c:	b10b      	cbz	r3, 801cb92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801cb8e:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801cb92:	b00a      	add	sp, #40	@ 0x28
 801cb94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cb98:	08032590 	.word	0x08032590

0801cb9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801cb9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cba0:	460c      	mov	r4, r1
 801cba2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801cba4:	b088      	sub	sp, #32
 801cba6:	4605      	mov	r5, r0
 801cba8:	2900      	cmp	r1, #0
 801cbaa:	d06d      	beq.n	801cc88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801cbac:	4668      	mov	r0, sp
 801cbae:	f7ff fadf 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cbb2:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 801cbb4:	88e3      	ldrh	r3, [r4, #6]
 801cbb6:	f9bd 8000 	ldrsh.w	r8, [sp]
 801cbba:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801cbbe:	440b      	add	r3, r1
 801cbc0:	b21b      	sxth	r3, r3
 801cbc2:	4543      	cmp	r3, r8
 801cbc4:	db31      	blt.n	801cc2a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cbc6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801cbca:	44c4      	add	ip, r8
 801cbcc:	fa0f fc8c 	sxth.w	ip, ip
 801cbd0:	4563      	cmp	r3, ip
 801cbd2:	da2a      	bge.n	801cc2a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cbd4:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801cbd6:	8926      	ldrh	r6, [r4, #8]
 801cbd8:	4416      	add	r6, r2
 801cbda:	b236      	sxth	r6, r6
 801cbdc:	42be      	cmp	r6, r7
 801cbde:	db24      	blt.n	801cc2a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cbe0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801cbe4:	4438      	add	r0, r7
 801cbe6:	b200      	sxth	r0, r0
 801cbe8:	4286      	cmp	r6, r0
 801cbea:	da1e      	bge.n	801cc2a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cbec:	8963      	ldrh	r3, [r4, #10]
 801cbee:	4419      	add	r1, r3
 801cbf0:	b209      	sxth	r1, r1
 801cbf2:	4541      	cmp	r1, r8
 801cbf4:	db08      	blt.n	801cc08 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801cbf6:	4561      	cmp	r1, ip
 801cbf8:	da06      	bge.n	801cc08 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801cbfa:	89a3      	ldrh	r3, [r4, #12]
 801cbfc:	441a      	add	r2, r3
 801cbfe:	b212      	sxth	r2, r2
 801cc00:	42ba      	cmp	r2, r7
 801cc02:	db01      	blt.n	801cc08 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801cc04:	4282      	cmp	r2, r0
 801cc06:	db10      	blt.n	801cc2a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801cc08:	4b21      	ldr	r3, [pc, #132]	@ (801cc90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801cc0a:	9304      	str	r3, [sp, #16]
 801cc0c:	2302      	movs	r3, #2
 801cc0e:	f88d 3014 	strb.w	r3, [sp, #20]
 801cc12:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801cc14:	2300      	movs	r3, #0
 801cc16:	f8ad 3016 	strh.w	r3, [sp, #22]
 801cc1a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801cc1e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801cc22:	6803      	ldr	r3, [r0, #0]
 801cc24:	a904      	add	r1, sp, #16
 801cc26:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801cc28:	4798      	blx	r3
 801cc2a:	1d29      	adds	r1, r5, #4
 801cc2c:	a802      	add	r0, sp, #8
 801cc2e:	f7ff fa9f 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cc32:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cc36:	88e0      	ldrh	r0, [r4, #6]
 801cc38:	7921      	ldrb	r1, [r4, #4]
 801cc3a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801cc3e:	8922      	ldrh	r2, [r4, #8]
 801cc40:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801cc42:	f88d 1014 	strb.w	r1, [sp, #20]
 801cc46:	eba3 0808 	sub.w	r8, r3, r8
 801cc4a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cc4e:	1bdf      	subs	r7, r3, r7
 801cc50:	b2bb      	uxth	r3, r7
 801cc52:	fa1f f888 	uxth.w	r8, r8
 801cc56:	8967      	ldrh	r7, [r4, #10]
 801cc58:	89a4      	ldrh	r4, [r4, #12]
 801cc5a:	4440      	add	r0, r8
 801cc5c:	4460      	add	r0, ip
 801cc5e:	441a      	add	r2, r3
 801cc60:	44b8      	add	r8, r7
 801cc62:	4423      	add	r3, r4
 801cc64:	f8ad 0016 	strh.w	r0, [sp, #22]
 801cc68:	4433      	add	r3, r6
 801cc6a:	4432      	add	r2, r6
 801cc6c:	44e0      	add	r8, ip
 801cc6e:	4c09      	ldr	r4, [pc, #36]	@ (801cc94 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801cc70:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801cc72:	9404      	str	r4, [sp, #16]
 801cc74:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cc78:	f8ad 801a 	strh.w	r8, [sp, #26]
 801cc7c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801cc80:	6803      	ldr	r3, [r0, #0]
 801cc82:	a904      	add	r1, sp, #16
 801cc84:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801cc86:	4798      	blx	r3
 801cc88:	b008      	add	sp, #32
 801cc8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cc8e:	bf00      	nop
 801cc90:	08032590 	.word	0x08032590
 801cc94:	080325a4 	.word	0x080325a4

0801cc98 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801cc98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801cc9a:	4604      	mov	r4, r0
 801cc9c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801cca0:	3201      	adds	r2, #1
 801cca2:	d112      	bne.n	801ccca <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801cca4:	6803      	ldr	r3, [r0, #0]
 801cca6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801ccaa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ccae:	f8ad 1004 	strh.w	r1, [sp, #4]
 801ccb2:	2500      	movs	r5, #0
 801ccb4:	9500      	str	r5, [sp, #0]
 801ccb6:	466d      	mov	r5, sp
 801ccb8:	4629      	mov	r1, r5
 801ccba:	f8ad 2006 	strh.w	r2, [sp, #6]
 801ccbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ccc0:	4798      	blx	r3
 801ccc2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801ccc6:	e884 0003 	stmia.w	r4, {r0, r1}
 801ccca:	4620      	mov	r0, r4
 801cccc:	b003      	add	sp, #12
 801ccce:	bd30      	pop	{r4, r5, pc}

0801ccd0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801ccd0:	b513      	push	{r0, r1, r4, lr}
 801ccd2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801ccd6:	3301      	adds	r3, #1
 801ccd8:	4604      	mov	r4, r0
 801ccda:	d109      	bne.n	801ccf0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801ccdc:	4601      	mov	r1, r0
 801ccde:	4668      	mov	r0, sp
 801cce0:	f7ff fa46 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cce4:	f8bd 3000 	ldrh.w	r3, [sp]
 801cce8:	8423      	strh	r3, [r4, #32]
 801ccea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801ccee:	8463      	strh	r3, [r4, #34]	@ 0x22
 801ccf0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801ccf4:	b002      	add	sp, #8
 801ccf6:	bd10      	pop	{r4, pc}

0801ccf8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801ccf8:	b513      	push	{r0, r1, r4, lr}
 801ccfa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801ccfe:	3301      	adds	r3, #1
 801cd00:	4604      	mov	r4, r0
 801cd02:	d109      	bne.n	801cd18 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801cd04:	4601      	mov	r1, r0
 801cd06:	4668      	mov	r0, sp
 801cd08:	f7ff fa32 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cd0c:	f8bd 3000 	ldrh.w	r3, [sp]
 801cd10:	8423      	strh	r3, [r4, #32]
 801cd12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801cd16:	8463      	strh	r3, [r4, #34]	@ 0x22
 801cd18:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801cd1c:	b002      	add	sp, #8
 801cd1e:	bd10      	pop	{r4, pc}

0801cd20 <_ZN8touchgfx6ScreenC1Ev>:
 801cd20:	b570      	push	{r4, r5, r6, lr}
 801cd22:	4605      	mov	r5, r0
 801cd24:	4b16      	ldr	r3, [pc, #88]	@ (801cd80 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801cd26:	f845 3b04 	str.w	r3, [r5], #4
 801cd2a:	2300      	movs	r3, #0
 801cd2c:	8103      	strh	r3, [r0, #8]
 801cd2e:	8143      	strh	r3, [r0, #10]
 801cd30:	8183      	strh	r3, [r0, #12]
 801cd32:	81c3      	strh	r3, [r0, #14]
 801cd34:	8203      	strh	r3, [r0, #16]
 801cd36:	8243      	strh	r3, [r0, #18]
 801cd38:	8283      	strh	r3, [r0, #20]
 801cd3a:	82c3      	strh	r3, [r0, #22]
 801cd3c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801cd40:	6203      	str	r3, [r0, #32]
 801cd42:	8483      	strh	r3, [r0, #36]	@ 0x24
 801cd44:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801cd46:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801cd4a:	4a0e      	ldr	r2, [pc, #56]	@ (801cd84 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801cd4c:	6343      	str	r3, [r0, #52]	@ 0x34
 801cd4e:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801cd52:	4b0d      	ldr	r3, [pc, #52]	@ (801cd88 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801cd54:	6042      	str	r2, [r0, #4]
 801cd56:	f9b3 6000 	ldrsh.w	r6, [r3]
 801cd5a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801cd5c:	4a0b      	ldr	r2, [pc, #44]	@ (801cd8c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801cd5e:	4604      	mov	r4, r0
 801cd60:	2101      	movs	r1, #1
 801cd62:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801cd66:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801cd6a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801cd6e:	4628      	mov	r0, r5
 801cd70:	4798      	blx	r3
 801cd72:	6863      	ldr	r3, [r4, #4]
 801cd74:	4628      	mov	r0, r5
 801cd76:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801cd78:	4631      	mov	r1, r6
 801cd7a:	4798      	blx	r3
 801cd7c:	4620      	mov	r0, r4
 801cd7e:	bd70      	pop	{r4, r5, r6, pc}
 801cd80:	080325cc 	.word	0x080325cc
 801cd84:	08032080 	.word	0x08032080
 801cd88:	2001387a 	.word	0x2001387a
 801cd8c:	20013878 	.word	0x20013878

0801cd90 <_ZN8touchgfx6Screen4drawEv>:
 801cd90:	b507      	push	{r0, r1, r2, lr}
 801cd92:	4b09      	ldr	r3, [pc, #36]	@ (801cdb8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801cd94:	f9b3 2000 	ldrsh.w	r2, [r3]
 801cd98:	4b08      	ldr	r3, [pc, #32]	@ (801cdbc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801cd9a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801cd9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801cda2:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cda6:	6803      	ldr	r3, [r0, #0]
 801cda8:	2100      	movs	r1, #0
 801cdaa:	9100      	str	r1, [sp, #0]
 801cdac:	689b      	ldr	r3, [r3, #8]
 801cdae:	4669      	mov	r1, sp
 801cdb0:	4798      	blx	r3
 801cdb2:	b003      	add	sp, #12
 801cdb4:	f85d fb04 	ldr.w	pc, [sp], #4
 801cdb8:	20013878 	.word	0x20013878
 801cdbc:	2001387a 	.word	0x2001387a

0801cdc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801cdc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdc4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801cdc8:	2b00      	cmp	r3, #0
 801cdca:	b089      	sub	sp, #36	@ 0x24
 801cdcc:	4680      	mov	r8, r0
 801cdce:	460c      	mov	r4, r1
 801cdd0:	4615      	mov	r5, r2
 801cdd2:	dd0e      	ble.n	801cdf2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cdd4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801cdd8:	2b00      	cmp	r3, #0
 801cdda:	dd0a      	ble.n	801cdf2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cddc:	4628      	mov	r0, r5
 801cdde:	f7ff ff5b 	bl	801cc98 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cde2:	4621      	mov	r1, r4
 801cde4:	f7fd fe97 	bl	801ab16 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801cde8:	69eb      	ldr	r3, [r5, #28]
 801cdea:	b928      	cbnz	r0, 801cdf8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801cdec:	461d      	mov	r5, r3
 801cdee:	2b00      	cmp	r3, #0
 801cdf0:	d1f4      	bne.n	801cddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801cdf2:	b009      	add	sp, #36	@ 0x24
 801cdf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdf8:	ae04      	add	r6, sp, #16
 801cdfa:	2b00      	cmp	r3, #0
 801cdfc:	f000 80b5 	beq.w	801cf6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ce00:	682b      	ldr	r3, [r5, #0]
 801ce02:	4629      	mov	r1, r5
 801ce04:	68db      	ldr	r3, [r3, #12]
 801ce06:	a802      	add	r0, sp, #8
 801ce08:	4798      	blx	r3
 801ce0a:	4628      	mov	r0, r5
 801ce0c:	f7ff ff60 	bl	801ccd0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801ce10:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801ce14:	4407      	add	r7, r0
 801ce16:	4628      	mov	r0, r5
 801ce18:	f7ff ff6e 	bl	801ccf8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801ce1c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ce20:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801ce24:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ce28:	4418      	add	r0, r3
 801ce2a:	4621      	mov	r1, r4
 801ce2c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801ce30:	f8ad 0012 	strh.w	r0, [sp, #18]
 801ce34:	b23f      	sxth	r7, r7
 801ce36:	4630      	mov	r0, r6
 801ce38:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ce3c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801ce40:	f7f7 ff4a 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801ce44:	4628      	mov	r0, r5
 801ce46:	f7ff ff27 	bl	801cc98 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ce4a:	4602      	mov	r2, r0
 801ce4c:	e896 0003 	ldmia.w	r6, {r0, r1}
 801ce50:	ab06      	add	r3, sp, #24
 801ce52:	e883 0003 	stmia.w	r3, {r0, r1}
 801ce56:	4611      	mov	r1, r2
 801ce58:	4618      	mov	r0, r3
 801ce5a:	f7f7 ff3d 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801ce5e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ce62:	f9b4 1000 	ldrsh.w	r1, [r4]
 801ce66:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801ce6a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801ce6e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801ce72:	4299      	cmp	r1, r3
 801ce74:	d10b      	bne.n	801ce8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ce76:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ce7a:	4552      	cmp	r2, sl
 801ce7c:	d107      	bne.n	801ce8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ce7e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801ce82:	455a      	cmp	r2, fp
 801ce84:	d103      	bne.n	801ce8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ce86:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801ce8a:	454a      	cmp	r2, r9
 801ce8c:	d06d      	beq.n	801cf6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ce8e:	f1bb 0f00 	cmp.w	fp, #0
 801ce92:	dd65      	ble.n	801cf60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801ce94:	f1b9 0f00 	cmp.w	r9, #0
 801ce98:	dd62      	ble.n	801cf60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801ce9a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ce9e:	fa1f f08a 	uxth.w	r0, sl
 801cea2:	4552      	cmp	r2, sl
 801cea4:	9000      	str	r0, [sp, #0]
 801cea6:	da12      	bge.n	801cece <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801cea8:	9301      	str	r3, [sp, #4]
 801ceaa:	9b00      	ldr	r3, [sp, #0]
 801ceac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ceb0:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ceb4:	1a9a      	subs	r2, r3, r2
 801ceb6:	f8ad 1010 	strh.w	r1, [sp, #16]
 801ceba:	f8ad 0014 	strh.w	r0, [sp, #20]
 801cebe:	f8ad 2016 	strh.w	r2, [sp, #22]
 801cec2:	69ea      	ldr	r2, [r5, #28]
 801cec4:	4631      	mov	r1, r6
 801cec6:	4640      	mov	r0, r8
 801cec8:	f7ff ff7a 	bl	801cdc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cecc:	9b01      	ldr	r3, [sp, #4]
 801cece:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ced2:	429a      	cmp	r2, r3
 801ced4:	b29f      	uxth	r7, r3
 801ced6:	da0d      	bge.n	801cef4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801ced8:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cedc:	1aba      	subs	r2, r7, r2
 801cede:	f8ad a012 	strh.w	sl, [sp, #18]
 801cee2:	f8ad 2014 	strh.w	r2, [sp, #20]
 801cee6:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ceea:	69ea      	ldr	r2, [r5, #28]
 801ceec:	4631      	mov	r1, r6
 801ceee:	4640      	mov	r0, r8
 801cef0:	f7ff ff66 	bl	801cdc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cef4:	8822      	ldrh	r2, [r4, #0]
 801cef6:	88a3      	ldrh	r3, [r4, #4]
 801cef8:	445f      	add	r7, fp
 801cefa:	4413      	add	r3, r2
 801cefc:	b29b      	uxth	r3, r3
 801cefe:	b2bf      	uxth	r7, r7
 801cf00:	b23a      	sxth	r2, r7
 801cf02:	b219      	sxth	r1, r3
 801cf04:	4291      	cmp	r1, r2
 801cf06:	dd0d      	ble.n	801cf24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801cf08:	1bdb      	subs	r3, r3, r7
 801cf0a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cf0e:	f8ad a012 	strh.w	sl, [sp, #18]
 801cf12:	f8ad 3014 	strh.w	r3, [sp, #20]
 801cf16:	f8ad 9016 	strh.w	r9, [sp, #22]
 801cf1a:	69ea      	ldr	r2, [r5, #28]
 801cf1c:	4631      	mov	r1, r6
 801cf1e:	4640      	mov	r0, r8
 801cf20:	f7ff ff4e 	bl	801cdc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cf24:	88e2      	ldrh	r2, [r4, #6]
 801cf26:	8863      	ldrh	r3, [r4, #2]
 801cf28:	4413      	add	r3, r2
 801cf2a:	9a00      	ldr	r2, [sp, #0]
 801cf2c:	444a      	add	r2, r9
 801cf2e:	b29b      	uxth	r3, r3
 801cf30:	fa1f f982 	uxth.w	r9, r2
 801cf34:	fa0f f289 	sxth.w	r2, r9
 801cf38:	b219      	sxth	r1, r3
 801cf3a:	428a      	cmp	r2, r1
 801cf3c:	da15      	bge.n	801cf6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801cf3e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cf42:	f9b4 0000 	ldrsh.w	r0, [r4]
 801cf46:	f8ad 1014 	strh.w	r1, [sp, #20]
 801cf4a:	eba3 0309 	sub.w	r3, r3, r9
 801cf4e:	f8ad 0010 	strh.w	r0, [sp, #16]
 801cf52:	f8ad 2012 	strh.w	r2, [sp, #18]
 801cf56:	f8ad 3016 	strh.w	r3, [sp, #22]
 801cf5a:	69ea      	ldr	r2, [r5, #28]
 801cf5c:	4631      	mov	r1, r6
 801cf5e:	e001      	b.n	801cf64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801cf60:	69ea      	ldr	r2, [r5, #28]
 801cf62:	4621      	mov	r1, r4
 801cf64:	4640      	mov	r0, r8
 801cf66:	f7ff ff2b 	bl	801cdc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cf6a:	4628      	mov	r0, r5
 801cf6c:	f7ff fe94 	bl	801cc98 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cf70:	6861      	ldr	r1, [r4, #4]
 801cf72:	4602      	mov	r2, r0
 801cf74:	6820      	ldr	r0, [r4, #0]
 801cf76:	4633      	mov	r3, r6
 801cf78:	c303      	stmia	r3!, {r0, r1}
 801cf7a:	4611      	mov	r1, r2
 801cf7c:	4630      	mov	r0, r6
 801cf7e:	f7f7 feab 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801cf82:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801cf86:	2b00      	cmp	r3, #0
 801cf88:	f77f af33 	ble.w	801cdf2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cf8c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801cf90:	2b00      	cmp	r3, #0
 801cf92:	f77f af2e 	ble.w	801cdf2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cf96:	4628      	mov	r0, r5
 801cf98:	f7ff fe9a 	bl	801ccd0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801cf9c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801cfa0:	1a18      	subs	r0, r3, r0
 801cfa2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801cfa6:	4628      	mov	r0, r5
 801cfa8:	f7ff fea6 	bl	801ccf8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801cfac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cfb0:	1a18      	subs	r0, r3, r0
 801cfb2:	f8ad 0012 	strh.w	r0, [sp, #18]
 801cfb6:	682b      	ldr	r3, [r5, #0]
 801cfb8:	4631      	mov	r1, r6
 801cfba:	689b      	ldr	r3, [r3, #8]
 801cfbc:	4628      	mov	r0, r5
 801cfbe:	4798      	blx	r3
 801cfc0:	e717      	b.n	801cdf2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801cfc2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801cfc2:	b570      	push	{r4, r5, r6, lr}
 801cfc4:	460c      	mov	r4, r1
 801cfc6:	b086      	sub	sp, #24
 801cfc8:	1d06      	adds	r6, r0, #4
 801cfca:	2300      	movs	r3, #0
 801cfcc:	4631      	mov	r1, r6
 801cfce:	4605      	mov	r5, r0
 801cfd0:	a802      	add	r0, sp, #8
 801cfd2:	9301      	str	r3, [sp, #4]
 801cfd4:	f7ff f8cc 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cfd8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cfdc:	8822      	ldrh	r2, [r4, #0]
 801cfde:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801cfe2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801cfe6:	f8ad 0014 	strh.w	r0, [sp, #20]
 801cfea:	1ad2      	subs	r2, r2, r3
 801cfec:	8863      	ldrh	r3, [r4, #2]
 801cfee:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cff2:	1a5b      	subs	r3, r3, r1
 801cff4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801cff8:	f8ad 1016 	strh.w	r1, [sp, #22]
 801cffc:	aa01      	add	r2, sp, #4
 801cffe:	a904      	add	r1, sp, #16
 801d000:	4630      	mov	r0, r6
 801d002:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d006:	f7f7 ff3f 	bl	8014e88 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801d00a:	9a01      	ldr	r2, [sp, #4]
 801d00c:	b11a      	cbz	r2, 801d016 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801d00e:	4621      	mov	r1, r4
 801d010:	4628      	mov	r0, r5
 801d012:	f7ff fed5 	bl	801cdc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801d016:	b006      	add	sp, #24
 801d018:	bd70      	pop	{r4, r5, r6, pc}

0801d01a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801d01a:	b530      	push	{r4, r5, lr}
 801d01c:	4602      	mov	r2, r0
 801d01e:	4604      	mov	r4, r0
 801d020:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801d024:	b085      	sub	sp, #20
 801d026:	460d      	mov	r5, r1
 801d028:	6851      	ldr	r1, [r2, #4]
 801d02a:	466b      	mov	r3, sp
 801d02c:	c303      	stmia	r3!, {r0, r1}
 801d02e:	4629      	mov	r1, r5
 801d030:	4668      	mov	r0, sp
 801d032:	f7f7 fe51 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 801d036:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801d03a:	b12b      	cbz	r3, 801d048 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801d03c:	4669      	mov	r1, sp
 801d03e:	4620      	mov	r0, r4
 801d040:	f7ff ffbf 	bl	801cfc2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801d044:	b005      	add	sp, #20
 801d046:	bd30      	pop	{r4, r5, pc}
 801d048:	3404      	adds	r4, #4
 801d04a:	4621      	mov	r1, r4
 801d04c:	a802      	add	r0, sp, #8
 801d04e:	f7ff f88f 	bl	801c170 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d052:	f8bd 3000 	ldrh.w	r3, [sp]
 801d056:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801d05a:	1a9b      	subs	r3, r3, r2
 801d05c:	f8ad 3000 	strh.w	r3, [sp]
 801d060:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d064:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801d068:	4669      	mov	r1, sp
 801d06a:	1a9b      	subs	r3, r3, r2
 801d06c:	4620      	mov	r0, r4
 801d06e:	f8ad 3002 	strh.w	r3, [sp, #2]
 801d072:	f7f7 fed0 	bl	8014e16 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801d076:	e7e5      	b.n	801d044 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801d078 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801d078:	680a      	ldr	r2, [r1, #0]
 801d07a:	460b      	mov	r3, r1
 801d07c:	6992      	ldr	r2, [r2, #24]
 801d07e:	1d01      	adds	r1, r0, #4
 801d080:	4618      	mov	r0, r3
 801d082:	4710      	bx	r2

0801d084 <_ZN8touchgfx12TextProviderC1Ev>:
 801d084:	b538      	push	{r3, r4, r5, lr}
 801d086:	2500      	movs	r5, #0
 801d088:	2302      	movs	r3, #2
 801d08a:	4604      	mov	r4, r0
 801d08c:	e9c0 5500 	strd	r5, r5, [r0]
 801d090:	7403      	strb	r3, [r0, #16]
 801d092:	6145      	str	r5, [r0, #20]
 801d094:	7605      	strb	r5, [r0, #24]
 801d096:	83c5      	strh	r5, [r0, #30]
 801d098:	8405      	strh	r5, [r0, #32]
 801d09a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801d09c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801d09e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801d0a0:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 801d0a4:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 801d0a8:	220e      	movs	r2, #14
 801d0aa:	4629      	mov	r1, r5
 801d0ac:	304c      	adds	r0, #76	@ 0x4c
 801d0ae:	f011 f9e6 	bl	802e47e <memset>
 801d0b2:	2301      	movs	r3, #1
 801d0b4:	4620      	mov	r0, r4
 801d0b6:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801d0ba:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d0be:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801d0c2:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801d0c6:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801d0ca:	f7ec ffab 	bl	800a024 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801d0ce:	4620      	mov	r0, r4
 801d0d0:	bd38      	pop	{r3, r4, r5, pc}

0801d0d2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801d0d2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d0d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0d8:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 801d0da:	fab0 f080 	clz	r0, r0
 801d0de:	0940      	lsrs	r0, r0, #5
 801d0e0:	4770      	bx	lr

0801d0e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801d0e2:	b530      	push	{r4, r5, lr}
 801d0e4:	2500      	movs	r5, #0
 801d0e6:	2401      	movs	r4, #1
 801d0e8:	6843      	ldr	r3, [r0, #4]
 801d0ea:	b913      	cbnz	r3, 801d0f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801d0ec:	6803      	ldr	r3, [r0, #0]
 801d0ee:	b313      	cbz	r3, 801d136 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801d0f0:	6043      	str	r3, [r0, #4]
 801d0f2:	7e03      	ldrb	r3, [r0, #24]
 801d0f4:	b143      	cbz	r3, 801d108 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801d0f6:	6943      	ldr	r3, [r0, #20]
 801d0f8:	b12b      	cbz	r3, 801d106 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801d0fa:	881a      	ldrh	r2, [r3, #0]
 801d0fc:	b11a      	cbz	r2, 801d106 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801d0fe:	1c9a      	adds	r2, r3, #2
 801d100:	6142      	str	r2, [r0, #20]
 801d102:	8818      	ldrh	r0, [r3, #0]
 801d104:	bd30      	pop	{r4, r5, pc}
 801d106:	7605      	strb	r5, [r0, #24]
 801d108:	6843      	ldr	r3, [r0, #4]
 801d10a:	8819      	ldrh	r1, [r3, #0]
 801d10c:	b199      	cbz	r1, 801d136 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801d10e:	1c9a      	adds	r2, r3, #2
 801d110:	2902      	cmp	r1, #2
 801d112:	6042      	str	r2, [r0, #4]
 801d114:	d1f5      	bne.n	801d102 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801d116:	7c03      	ldrb	r3, [r0, #16]
 801d118:	2b01      	cmp	r3, #1
 801d11a:	d8e5      	bhi.n	801d0e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d11c:	1c5a      	adds	r2, r3, #1
 801d11e:	3302      	adds	r3, #2
 801d120:	7402      	strb	r2, [r0, #16]
 801d122:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801d126:	6143      	str	r3, [r0, #20]
 801d128:	2b00      	cmp	r3, #0
 801d12a:	d0dd      	beq.n	801d0e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d12c:	881b      	ldrh	r3, [r3, #0]
 801d12e:	2b00      	cmp	r3, #0
 801d130:	d0da      	beq.n	801d0e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d132:	7604      	strb	r4, [r0, #24]
 801d134:	e7d8      	b.n	801d0e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d136:	2000      	movs	r0, #0
 801d138:	e7e4      	b.n	801d104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801d13a:	b430      	push	{r4, r5}
 801d13c:	6001      	str	r1, [r0, #0]
 801d13e:	2100      	movs	r1, #0
 801d140:	6041      	str	r1, [r0, #4]
 801d142:	6815      	ldr	r5, [r2, #0]
 801d144:	6085      	str	r5, [r0, #8]
 801d146:	6852      	ldr	r2, [r2, #4]
 801d148:	6443      	str	r3, [r0, #68]	@ 0x44
 801d14a:	9b02      	ldr	r3, [sp, #8]
 801d14c:	60c2      	str	r2, [r0, #12]
 801d14e:	7401      	strb	r1, [r0, #16]
 801d150:	6141      	str	r1, [r0, #20]
 801d152:	7601      	strb	r1, [r0, #24]
 801d154:	8701      	strh	r1, [r0, #56]	@ 0x38
 801d156:	8401      	strh	r1, [r0, #32]
 801d158:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 801d15c:	6483      	str	r3, [r0, #72]	@ 0x48
 801d15e:	bc30      	pop	{r4, r5}
 801d160:	f7ec bf60 	b.w	800a024 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801d164 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801d164:	b408      	push	{r3}
 801d166:	b510      	push	{r4, lr}
 801d168:	b085      	sub	sp, #20
 801d16a:	ac07      	add	r4, sp, #28
 801d16c:	f854 3b04 	ldr.w	r3, [r4], #4
 801d170:	9300      	str	r3, [sp, #0]
 801d172:	4613      	mov	r3, r2
 801d174:	4622      	mov	r2, r4
 801d176:	9403      	str	r4, [sp, #12]
 801d178:	f7ff ffdf 	bl	801d13a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801d17c:	b005      	add	sp, #20
 801d17e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d182:	b001      	add	sp, #4
 801d184:	4770      	bx	lr

0801d186 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801d186:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d188:	4605      	mov	r5, r0
 801d18a:	4608      	mov	r0, r1
 801d18c:	b1e9      	cbz	r1, 801d1ca <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801d18e:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 801d192:	460b      	mov	r3, r1
 801d194:	f101 0708 	add.w	r7, r1, #8
 801d198:	4622      	mov	r2, r4
 801d19a:	6818      	ldr	r0, [r3, #0]
 801d19c:	6859      	ldr	r1, [r3, #4]
 801d19e:	4626      	mov	r6, r4
 801d1a0:	c603      	stmia	r6!, {r0, r1}
 801d1a2:	3308      	adds	r3, #8
 801d1a4:	42bb      	cmp	r3, r7
 801d1a6:	4634      	mov	r4, r6
 801d1a8:	d1f7      	bne.n	801d19a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801d1aa:	6818      	ldr	r0, [r3, #0]
 801d1ac:	6030      	str	r0, [r6, #0]
 801d1ae:	889b      	ldrh	r3, [r3, #4]
 801d1b0:	80b3      	strh	r3, [r6, #4]
 801d1b2:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801d1b6:	015b      	lsls	r3, r3, #5
 801d1b8:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801d1bc:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 801d1c0:	430b      	orrs	r3, r1
 801d1c2:	425b      	negs	r3, r3
 801d1c4:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801d1c8:	4610      	mov	r0, r2
 801d1ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d1cc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801d1cc:	b538      	push	{r3, r4, r5, lr}
 801d1ce:	460c      	mov	r4, r1
 801d1d0:	6811      	ldr	r1, [r2, #0]
 801d1d2:	4610      	mov	r0, r2
 801d1d4:	68cd      	ldr	r5, [r1, #12]
 801d1d6:	4619      	mov	r1, r3
 801d1d8:	47a8      	blx	r5
 801d1da:	2800      	cmp	r0, #0
 801d1dc:	bf08      	it	eq
 801d1de:	4620      	moveq	r0, r4
 801d1e0:	bd38      	pop	{r3, r4, r5, pc}
	...

0801d1e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801d1e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d1e8:	468c      	mov	ip, r1
 801d1ea:	4605      	mov	r5, r0
 801d1ec:	4614      	mov	r4, r2
 801d1ee:	b942      	cbnz	r2, 801d202 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 801d1f0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801d1f4:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 801d1f8:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801d1fc:	4620      	mov	r0, r4
 801d1fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d202:	7b50      	ldrb	r0, [r2, #13]
 801d204:	8893      	ldrh	r3, [r2, #4]
 801d206:	0106      	lsls	r6, r0, #4
 801d208:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801d20c:	79e6      	ldrb	r6, [r4, #7]
 801d20e:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801d212:	4316      	orrs	r6, r2
 801d214:	185a      	adds	r2, r3, r1
 801d216:	b291      	uxth	r1, r2
 801d218:	291d      	cmp	r1, #29
 801d21a:	b2b7      	uxth	r7, r6
 801d21c:	d87e      	bhi.n	801d31c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801d21e:	2201      	movs	r2, #1
 801d220:	408a      	lsls	r2, r1
 801d222:	498a      	ldr	r1, [pc, #552]	@ (801d44c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 801d224:	420a      	tst	r2, r1
 801d226:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801d22a:	d12d      	bne.n	801d288 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801d22c:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801d230:	d074      	beq.n	801d31c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801d232:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d236:	4623      	mov	r3, r4
 801d238:	f104 0e08 	add.w	lr, r4, #8
 801d23c:	4614      	mov	r4, r2
 801d23e:	6818      	ldr	r0, [r3, #0]
 801d240:	6859      	ldr	r1, [r3, #4]
 801d242:	4694      	mov	ip, r2
 801d244:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801d248:	3308      	adds	r3, #8
 801d24a:	4573      	cmp	r3, lr
 801d24c:	4662      	mov	r2, ip
 801d24e:	d1f6      	bne.n	801d23e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801d250:	6818      	ldr	r0, [r3, #0]
 801d252:	f8cc 0000 	str.w	r0, [ip]
 801d256:	889b      	ldrh	r3, [r3, #4]
 801d258:	f8ac 3004 	strh.w	r3, [ip, #4]
 801d25c:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801d260:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 801d264:	b2b3      	uxth	r3, r6
 801d266:	1aca      	subs	r2, r1, r3
 801d268:	b292      	uxth	r2, r2
 801d26a:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 801d26e:	10d2      	asrs	r2, r2, #3
 801d270:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 801d274:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 801d278:	4302      	orrs	r2, r0
 801d27a:	1bcf      	subs	r7, r1, r7
 801d27c:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 801d280:	1afb      	subs	r3, r7, r3
 801d282:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 801d286:	e7b9      	b.n	801d1fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801d288:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d28c:	4623      	mov	r3, r4
 801d28e:	f104 0808 	add.w	r8, r4, #8
 801d292:	4614      	mov	r4, r2
 801d294:	6818      	ldr	r0, [r3, #0]
 801d296:	6859      	ldr	r1, [r3, #4]
 801d298:	4696      	mov	lr, r2
 801d29a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d29e:	3308      	adds	r3, #8
 801d2a0:	4543      	cmp	r3, r8
 801d2a2:	4672      	mov	r2, lr
 801d2a4:	d1f6      	bne.n	801d294 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 801d2a6:	6818      	ldr	r0, [r3, #0]
 801d2a8:	f8ce 0000 	str.w	r0, [lr]
 801d2ac:	889b      	ldrh	r3, [r3, #4]
 801d2ae:	f8ae 3004 	strh.w	r3, [lr, #4]
 801d2b2:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 801d2b4:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 801d2b8:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 801d2ba:	f640 6333 	movw	r3, #3635	@ 0xe33
 801d2be:	4299      	cmp	r1, r3
 801d2c0:	d111      	bne.n	801d2e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801d2c2:	f8dc 3000 	ldr.w	r3, [ip]
 801d2c6:	4660      	mov	r0, ip
 801d2c8:	68db      	ldr	r3, [r3, #12]
 801d2ca:	4798      	blx	r3
 801d2cc:	7b41      	ldrb	r1, [r0, #13]
 801d2ce:	00cb      	lsls	r3, r1, #3
 801d2d0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d2d4:	7a03      	ldrb	r3, [r0, #8]
 801d2d6:	4313      	orrs	r3, r2
 801d2d8:	064a      	lsls	r2, r1, #25
 801d2da:	bf44      	itt	mi
 801d2dc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d2e0:	b21b      	sxthmi	r3, r3
 801d2e2:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801d2e6:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801d2ea:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801d2ee:	443b      	add	r3, r7
 801d2f0:	4433      	add	r3, r6
 801d2f2:	b29b      	uxth	r3, r3
 801d2f4:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801d2f8:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801d2fc:	10db      	asrs	r3, r3, #3
 801d2fe:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801d302:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801d306:	4313      	orrs	r3, r2
 801d308:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801d30c:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801d310:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 801d314:	1a9b      	subs	r3, r3, r2
 801d316:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801d31a:	e76f      	b.n	801d1fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801d31c:	f023 0204 	bic.w	r2, r3, #4
 801d320:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801d324:	428a      	cmp	r2, r1
 801d326:	d003      	beq.n	801d330 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 801d328:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801d32c:	4293      	cmp	r3, r2
 801d32e:	d137      	bne.n	801d3a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 801d330:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 801d334:	4622      	mov	r2, r4
 801d336:	f104 0808 	add.w	r8, r4, #8
 801d33a:	4634      	mov	r4, r6
 801d33c:	6810      	ldr	r0, [r2, #0]
 801d33e:	6851      	ldr	r1, [r2, #4]
 801d340:	46b6      	mov	lr, r6
 801d342:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d346:	3208      	adds	r2, #8
 801d348:	4542      	cmp	r2, r8
 801d34a:	4676      	mov	r6, lr
 801d34c:	d1f6      	bne.n	801d33c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801d34e:	6810      	ldr	r0, [r2, #0]
 801d350:	f8ce 0000 	str.w	r0, [lr]
 801d354:	8892      	ldrh	r2, [r2, #4]
 801d356:	f8ae 2004 	strh.w	r2, [lr, #4]
 801d35a:	3b01      	subs	r3, #1
 801d35c:	b29b      	uxth	r3, r3
 801d35e:	4662      	mov	r2, ip
 801d360:	4621      	mov	r1, r4
 801d362:	4628      	mov	r0, r5
 801d364:	f7ff ff32 	bl	801d1cc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801d368:	7b41      	ldrb	r1, [r0, #13]
 801d36a:	00cb      	lsls	r3, r1, #3
 801d36c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d370:	7a03      	ldrb	r3, [r0, #8]
 801d372:	0648      	lsls	r0, r1, #25
 801d374:	ea43 0302 	orr.w	r3, r3, r2
 801d378:	bf44      	itt	mi
 801d37a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d37e:	b21b      	sxthmi	r3, r3
 801d380:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801d384:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801d388:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 801d38c:	005b      	lsls	r3, r3, #1
 801d38e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801d392:	4313      	orrs	r3, r2
 801d394:	115a      	asrs	r2, r3, #5
 801d396:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801d39a:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 801d39e:	e046      	b.n	801d42e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 801d3a0:	00c2      	lsls	r2, r0, #3
 801d3a2:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 801d3a6:	7a22      	ldrb	r2, [r4, #8]
 801d3a8:	430a      	orrs	r2, r1
 801d3aa:	0641      	lsls	r1, r0, #25
 801d3ac:	bf44      	itt	mi
 801d3ae:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 801d3b2:	b212      	sxthmi	r2, r2
 801d3b4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801d3b8:	f640 6109 	movw	r1, #3593	@ 0xe09
 801d3bc:	f023 0210 	bic.w	r2, r3, #16
 801d3c0:	428a      	cmp	r2, r1
 801d3c2:	d003      	beq.n	801d3cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 801d3c4:	f640 6213 	movw	r2, #3603	@ 0xe13
 801d3c8:	4293      	cmp	r3, r2
 801d3ca:	d13d      	bne.n	801d448 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 801d3cc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d3d0:	f104 0808 	add.w	r8, r4, #8
 801d3d4:	4696      	mov	lr, r2
 801d3d6:	6820      	ldr	r0, [r4, #0]
 801d3d8:	6861      	ldr	r1, [r4, #4]
 801d3da:	4616      	mov	r6, r2
 801d3dc:	c603      	stmia	r6!, {r0, r1}
 801d3de:	3408      	adds	r4, #8
 801d3e0:	4544      	cmp	r4, r8
 801d3e2:	4632      	mov	r2, r6
 801d3e4:	d1f7      	bne.n	801d3d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 801d3e6:	6820      	ldr	r0, [r4, #0]
 801d3e8:	6030      	str	r0, [r6, #0]
 801d3ea:	88a1      	ldrh	r1, [r4, #4]
 801d3ec:	80b1      	strh	r1, [r6, #4]
 801d3ee:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 801d3f2:	0076      	lsls	r6, r6, #1
 801d3f4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801d3f8:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801d3fc:	4316      	orrs	r6, r2
 801d3fe:	f640 6213 	movw	r2, #3603	@ 0xe13
 801d402:	4293      	cmp	r3, r2
 801d404:	bf1a      	itte	ne
 801d406:	f103 33ff 	addne.w	r3, r3, #4294967295
 801d40a:	b29b      	uxthne	r3, r3
 801d40c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 801d410:	4662      	mov	r2, ip
 801d412:	4671      	mov	r1, lr
 801d414:	4628      	mov	r0, r5
 801d416:	4674      	mov	r4, lr
 801d418:	f7ff fed8 	bl	801d1cc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801d41c:	7b43      	ldrb	r3, [r0, #13]
 801d41e:	7a82      	ldrb	r2, [r0, #10]
 801d420:	005b      	lsls	r3, r3, #1
 801d422:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801d426:	4313      	orrs	r3, r2
 801d428:	1af6      	subs	r6, r6, r3
 801d42a:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801d42e:	7b61      	ldrb	r1, [r4, #13]
 801d430:	00cb      	lsls	r3, r1, #3
 801d432:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d436:	7a23      	ldrb	r3, [r4, #8]
 801d438:	4313      	orrs	r3, r2
 801d43a:	064a      	lsls	r2, r1, #25
 801d43c:	bf44      	itt	mi
 801d43e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d442:	b21b      	sxthmi	r3, r3
 801d444:	1bdb      	subs	r3, r3, r7
 801d446:	e71c      	b.n	801d282 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801d448:	2300      	movs	r3, #0
 801d44a:	e7a6      	b.n	801d39a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 801d44c:	3fc00079 	.word	0x3fc00079

0801d450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801d450:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d454:	4604      	mov	r4, r0
 801d456:	b942      	cbnz	r2, 801d46a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801d458:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801d45c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801d460:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 801d464:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 801d468:	e047      	b.n	801d4fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801d46a:	7b51      	ldrb	r1, [r2, #13]
 801d46c:	8893      	ldrh	r3, [r2, #4]
 801d46e:	010d      	lsls	r5, r1, #4
 801d470:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 801d474:	79d5      	ldrb	r5, [r2, #7]
 801d476:	4305      	orrs	r5, r0
 801d478:	2d04      	cmp	r5, #4
 801d47a:	bfcc      	ite	gt
 801d47c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801d480:	f04f 0e01 	movle.w	lr, #1
 801d484:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 801d488:	f200 80ab 	bhi.w	801d5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801d48c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 801d490:	4283      	cmp	r3, r0
 801d492:	d216      	bcs.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d494:	f240 605b 	movw	r0, #1627	@ 0x65b
 801d498:	4283      	cmp	r3, r0
 801d49a:	d859      	bhi.n	801d550 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801d49c:	f240 6057 	movw	r0, #1623	@ 0x657
 801d4a0:	4283      	cmp	r3, r0
 801d4a2:	d20e      	bcs.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d4a4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801d4a8:	d24a      	bcs.n	801d540 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801d4aa:	f240 604e 	movw	r0, #1614	@ 0x64e
 801d4ae:	4283      	cmp	r3, r0
 801d4b0:	d207      	bcs.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d4b2:	f240 601a 	movw	r0, #1562	@ 0x61a
 801d4b6:	4283      	cmp	r3, r0
 801d4b8:	d02a      	beq.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d4ba:	d821      	bhi.n	801d500 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801d4bc:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801d4c0:	d35b      	bcc.n	801d57a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d4c2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 801d4c6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d4ca:	f040 80d0 	bne.w	801d66e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801d4ce:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801d4d2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d4d6:	f040 80ca 	bne.w	801d66e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801d4da:	00cb      	lsls	r3, r1, #3
 801d4dc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801d4e0:	7a13      	ldrb	r3, [r2, #8]
 801d4e2:	0649      	lsls	r1, r1, #25
 801d4e4:	ea43 0300 	orr.w	r3, r3, r0
 801d4e8:	bf44      	itt	mi
 801d4ea:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d4ee:	b21b      	sxthmi	r3, r3
 801d4f0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801d4f4:	1b5d      	subs	r5, r3, r5
 801d4f6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d4fa:	4610      	mov	r0, r2
 801d4fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d500:	f240 604b 	movw	r0, #1611	@ 0x64b
 801d504:	4283      	cmp	r3, r0
 801d506:	d338      	bcc.n	801d57a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d508:	f240 604c 	movw	r0, #1612	@ 0x64c
 801d50c:	4283      	cmp	r3, r0
 801d50e:	d9d8      	bls.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d510:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 801d514:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 801d518:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d51c:	f040 80f2 	bne.w	801d704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801d520:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d524:	f040 80ee 	bne.w	801d704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801d528:	00cb      	lsls	r3, r1, #3
 801d52a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801d52e:	7a13      	ldrb	r3, [r2, #8]
 801d530:	064e      	lsls	r6, r1, #25
 801d532:	ea43 0300 	orr.w	r3, r3, r0
 801d536:	bf44      	itt	mi
 801d538:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d53c:	b21b      	sxthmi	r3, r3
 801d53e:	e7d9      	b.n	801d4f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801d540:	f240 6054 	movw	r0, #1620	@ 0x654
 801d544:	4283      	cmp	r3, r0
 801d546:	d8e3      	bhi.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d548:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801d54c:	d9e0      	bls.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d54e:	e7b8      	b.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d550:	f240 6074 	movw	r0, #1652	@ 0x674
 801d554:	4283      	cmp	r3, r0
 801d556:	d0b4      	beq.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d558:	d82d      	bhi.n	801d5b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801d55a:	f240 605e 	movw	r0, #1630	@ 0x65e
 801d55e:	4283      	cmp	r3, r0
 801d560:	d804      	bhi.n	801d56c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801d562:	f240 605d 	movw	r0, #1629	@ 0x65d
 801d566:	4283      	cmp	r3, r0
 801d568:	d3d2      	bcc.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d56a:	e7aa      	b.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d56c:	f240 605f 	movw	r0, #1631	@ 0x65f
 801d570:	4283      	cmp	r3, r0
 801d572:	d0cd      	beq.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d574:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 801d578:	d0a3      	beq.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d57a:	00cb      	lsls	r3, r1, #3
 801d57c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801d580:	7a13      	ldrb	r3, [r2, #8]
 801d582:	0649      	lsls	r1, r1, #25
 801d584:	ea43 0300 	orr.w	r3, r3, r0
 801d588:	bf44      	itt	mi
 801d58a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d58e:	b21b      	sxthmi	r3, r3
 801d590:	1b5d      	subs	r5, r3, r5
 801d592:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801d596:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d59a:	7b53      	ldrb	r3, [r2, #13]
 801d59c:	015b      	lsls	r3, r3, #5
 801d59e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801d5a2:	7993      	ldrb	r3, [r2, #6]
 801d5a4:	430b      	orrs	r3, r1
 801d5a6:	005b      	lsls	r3, r3, #1
 801d5a8:	2105      	movs	r1, #5
 801d5aa:	fb93 f3f1 	sdiv	r3, r3, r1
 801d5ae:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801d5b2:	440b      	add	r3, r1
 801d5b4:	e756      	b.n	801d464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801d5b6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801d5ba:	4283      	cmp	r3, r0
 801d5bc:	d809      	bhi.n	801d5d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801d5be:	f240 60df 	movw	r0, #1759	@ 0x6df
 801d5c2:	4283      	cmp	r3, r0
 801d5c4:	f4bf af7d 	bcs.w	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d5c8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 801d5cc:	2b05      	cmp	r3, #5
 801d5ce:	d8d4      	bhi.n	801d57a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d5d0:	e777      	b.n	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d5d2:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 801d5d6:	4283      	cmp	r3, r0
 801d5d8:	d09a      	beq.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d5da:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801d5de:	4283      	cmp	r3, r0
 801d5e0:	e7ca      	b.n	801d578 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801d5e2:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 801d5e6:	d22b      	bcs.n	801d640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801d5e8:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801d5ec:	4283      	cmp	r3, r0
 801d5ee:	d28f      	bcs.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d5f0:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 801d5f4:	4283      	cmp	r3, r0
 801d5f6:	d816      	bhi.n	801d626 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801d5f8:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801d5fc:	4283      	cmp	r3, r0
 801d5fe:	f4bf af60 	bcs.w	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d602:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 801d606:	4283      	cmp	r3, r0
 801d608:	d80a      	bhi.n	801d620 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801d60a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801d60e:	4283      	cmp	r3, r0
 801d610:	f4bf af57 	bcs.w	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d614:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 801d618:	4283      	cmp	r3, r0
 801d61a:	f43f af79 	beq.w	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d61e:	e7ac      	b.n	801d57a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801d620:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 801d624:	e7f8      	b.n	801d618 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801d626:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801d62a:	4283      	cmp	r3, r0
 801d62c:	d802      	bhi.n	801d634 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801d62e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801d632:	e798      	b.n	801d566 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801d634:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 801d638:	4283      	cmp	r3, r0
 801d63a:	f47f af42 	bne.w	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d63e:	e767      	b.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d640:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 801d644:	4283      	cmp	r3, r0
 801d646:	f43f af63 	beq.w	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d64a:	d802      	bhi.n	801d652 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801d64c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801d650:	e7f2      	b.n	801d638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801d652:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801d656:	4283      	cmp	r3, r0
 801d658:	d805      	bhi.n	801d666 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801d65a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801d65e:	4283      	cmp	r3, r0
 801d660:	f4ff af2f 	bcc.w	801d4c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801d664:	e754      	b.n	801d510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801d666:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801d66a:	4283      	cmp	r3, r0
 801d66c:	e7af      	b.n	801d5ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801d66e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801d672:	4617      	mov	r7, r2
 801d674:	f102 0808 	add.w	r8, r2, #8
 801d678:	4666      	mov	r6, ip
 801d67a:	6838      	ldr	r0, [r7, #0]
 801d67c:	6879      	ldr	r1, [r7, #4]
 801d67e:	46e6      	mov	lr, ip
 801d680:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d684:	3708      	adds	r7, #8
 801d686:	4547      	cmp	r7, r8
 801d688:	46f4      	mov	ip, lr
 801d68a:	d1f6      	bne.n	801d67a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801d68c:	6838      	ldr	r0, [r7, #0]
 801d68e:	f8ce 0000 	str.w	r0, [lr]
 801d692:	88b9      	ldrh	r1, [r7, #4]
 801d694:	f8ae 1004 	strh.w	r1, [lr, #4]
 801d698:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801d69c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d6a0:	d009      	beq.n	801d6b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801d6a2:	7b51      	ldrb	r1, [r2, #13]
 801d6a4:	7992      	ldrb	r2, [r2, #6]
 801d6a6:	0149      	lsls	r1, r1, #5
 801d6a8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801d6ac:	4311      	orrs	r1, r2
 801d6ae:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801d6b2:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801d6b6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d6ba:	b2ad      	uxth	r5, r5
 801d6bc:	d00d      	beq.n	801d6da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801d6be:	442b      	add	r3, r5
 801d6c0:	b29b      	uxth	r3, r3
 801d6c2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801d6c6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801d6ca:	10db      	asrs	r3, r3, #3
 801d6cc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801d6d0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801d6d4:	4313      	orrs	r3, r2
 801d6d6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801d6da:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801d6de:	00cb      	lsls	r3, r1, #3
 801d6e0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d6e4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801d6e8:	064f      	lsls	r7, r1, #25
 801d6ea:	ea43 0302 	orr.w	r3, r3, r2
 801d6ee:	bf44      	itt	mi
 801d6f0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d6f4:	b21b      	sxthmi	r3, r3
 801d6f6:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801d6fa:	1b5b      	subs	r3, r3, r5
 801d6fc:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801d700:	4632      	mov	r2, r6
 801d702:	e6fa      	b.n	801d4fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801d704:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801d708:	4617      	mov	r7, r2
 801d70a:	f102 0908 	add.w	r9, r2, #8
 801d70e:	4666      	mov	r6, ip
 801d710:	6838      	ldr	r0, [r7, #0]
 801d712:	6879      	ldr	r1, [r7, #4]
 801d714:	46e0      	mov	r8, ip
 801d716:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801d71a:	3708      	adds	r7, #8
 801d71c:	454f      	cmp	r7, r9
 801d71e:	46c4      	mov	ip, r8
 801d720:	d1f6      	bne.n	801d710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801d722:	6838      	ldr	r0, [r7, #0]
 801d724:	f8c8 0000 	str.w	r0, [r8]
 801d728:	88b9      	ldrh	r1, [r7, #4]
 801d72a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801d72e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801d732:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801d736:	d009      	beq.n	801d74c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801d738:	7b51      	ldrb	r1, [r2, #13]
 801d73a:	7992      	ldrb	r2, [r2, #6]
 801d73c:	0149      	lsls	r1, r1, #5
 801d73e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801d742:	4311      	orrs	r1, r2
 801d744:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801d748:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801d74c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801d750:	d00e      	beq.n	801d770 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801d752:	eba3 030e 	sub.w	r3, r3, lr
 801d756:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801d75a:	b29b      	uxth	r3, r3
 801d75c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801d760:	10db      	asrs	r3, r3, #3
 801d762:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801d766:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801d76a:	4313      	orrs	r3, r2
 801d76c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801d770:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801d774:	00cb      	lsls	r3, r1, #3
 801d776:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801d77a:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801d77e:	0648      	lsls	r0, r1, #25
 801d780:	ea43 0302 	orr.w	r3, r3, r2
 801d784:	bf44      	itt	mi
 801d786:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801d78a:	b21b      	sxthmi	r3, r3
 801d78c:	1b5d      	subs	r5, r3, r5
 801d78e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d792:	e7b5      	b.n	801d700 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801d794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801d794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d798:	461e      	mov	r6, r3
 801d79a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d79c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d7a0:	4604      	mov	r4, r0
 801d7a2:	4617      	mov	r7, r2
 801d7a4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801d7a8:	f7ec fbfa 	bl	8009fa0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801d7ac:	4605      	mov	r5, r0
 801d7ae:	b918      	cbnz	r0, 801d7b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801d7b0:	6030      	str	r0, [r6, #0]
 801d7b2:	4628      	mov	r0, r5
 801d7b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d7b8:	683b      	ldr	r3, [r7, #0]
 801d7ba:	4601      	mov	r1, r0
 801d7bc:	68db      	ldr	r3, [r3, #12]
 801d7be:	4638      	mov	r0, r7
 801d7c0:	4798      	blx	r3
 801d7c2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801d7c6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801d7ca:	4602      	mov	r2, r0
 801d7cc:	6030      	str	r0, [r6, #0]
 801d7ce:	d213      	bcs.n	801d7f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801d7d0:	4643      	mov	r3, r8
 801d7d2:	4639      	mov	r1, r7
 801d7d4:	4620      	mov	r0, r4
 801d7d6:	f7ff fe3b 	bl	801d450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801d7da:	6030      	str	r0, [r6, #0]
 801d7dc:	6833      	ldr	r3, [r6, #0]
 801d7de:	b143      	cbz	r3, 801d7f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801d7e0:	7b5a      	ldrb	r2, [r3, #13]
 801d7e2:	7a9b      	ldrb	r3, [r3, #10]
 801d7e4:	0052      	lsls	r2, r2, #1
 801d7e6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801d7ea:	4313      	orrs	r3, r2
 801d7ec:	bf0c      	ite	eq
 801d7ee:	2301      	moveq	r3, #1
 801d7f0:	2300      	movne	r3, #0
 801d7f2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801d7f6:	e7dc      	b.n	801d7b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801d7f8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801d7fc:	b29b      	uxth	r3, r3
 801d7fe:	2b7f      	cmp	r3, #127	@ 0x7f
 801d800:	d804      	bhi.n	801d80c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801d802:	4639      	mov	r1, r7
 801d804:	4620      	mov	r0, r4
 801d806:	f7ff fced 	bl	801d1e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801d80a:	e7e6      	b.n	801d7da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801d80c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801d810:	2b00      	cmp	r3, #0
 801d812:	d0e3      	beq.n	801d7dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801d814:	f640 1302 	movw	r3, #2306	@ 0x902
 801d818:	429d      	cmp	r5, r3
 801d81a:	d1df      	bne.n	801d7dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801d81c:	4601      	mov	r1, r0
 801d81e:	4620      	mov	r0, r4
 801d820:	f7ff fcb1 	bl	801d186 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801d824:	e7d9      	b.n	801d7da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801d826 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801d826:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d82a:	461e      	mov	r6, r3
 801d82c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d82e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d832:	4604      	mov	r4, r0
 801d834:	4617      	mov	r7, r2
 801d836:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801d83a:	f7ec fbb1 	bl	8009fa0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801d83e:	4605      	mov	r5, r0
 801d840:	b918      	cbnz	r0, 801d84a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801d842:	6030      	str	r0, [r6, #0]
 801d844:	4628      	mov	r0, r5
 801d846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d84a:	683b      	ldr	r3, [r7, #0]
 801d84c:	4601      	mov	r1, r0
 801d84e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801d852:	4638      	mov	r0, r7
 801d854:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801d858:	47c8      	blx	r9
 801d85a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801d85e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801d862:	4602      	mov	r2, r0
 801d864:	6030      	str	r0, [r6, #0]
 801d866:	d213      	bcs.n	801d890 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801d868:	4643      	mov	r3, r8
 801d86a:	4639      	mov	r1, r7
 801d86c:	4620      	mov	r0, r4
 801d86e:	f7ff fdef 	bl	801d450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801d872:	6030      	str	r0, [r6, #0]
 801d874:	6833      	ldr	r3, [r6, #0]
 801d876:	b143      	cbz	r3, 801d88a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801d878:	7b5a      	ldrb	r2, [r3, #13]
 801d87a:	7a9b      	ldrb	r3, [r3, #10]
 801d87c:	0052      	lsls	r2, r2, #1
 801d87e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801d882:	4313      	orrs	r3, r2
 801d884:	bf0c      	ite	eq
 801d886:	2301      	moveq	r3, #1
 801d888:	2300      	movne	r3, #0
 801d88a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801d88e:	e7d9      	b.n	801d844 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801d890:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801d894:	b29b      	uxth	r3, r3
 801d896:	2b7f      	cmp	r3, #127	@ 0x7f
 801d898:	d804      	bhi.n	801d8a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801d89a:	4639      	mov	r1, r7
 801d89c:	4620      	mov	r0, r4
 801d89e:	f7ff fca1 	bl	801d1e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801d8a2:	e7e6      	b.n	801d872 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801d8a4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801d8a8:	2b00      	cmp	r3, #0
 801d8aa:	d0e3      	beq.n	801d874 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801d8ac:	f640 1302 	movw	r3, #2306	@ 0x902
 801d8b0:	429d      	cmp	r5, r3
 801d8b2:	d1df      	bne.n	801d874 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801d8b4:	4601      	mov	r1, r0
 801d8b6:	4620      	mov	r0, r4
 801d8b8:	f7ff fc65 	bl	801d186 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801d8bc:	e7d9      	b.n	801d872 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801d8be <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801d8be:	b510      	push	{r4, lr}
 801d8c0:	4604      	mov	r4, r0
 801d8c2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 801d8c6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801d8c8:	b1f1      	cbz	r1, 801d908 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801d8ca:	2b0a      	cmp	r3, #10
 801d8cc:	d02f      	beq.n	801d92e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801d8ce:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801d8d0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801d8d4:	3901      	subs	r1, #1
 801d8d6:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 801d8d8:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 801d8dc:	1c51      	adds	r1, r2, #1
 801d8de:	b289      	uxth	r1, r1
 801d8e0:	2901      	cmp	r1, #1
 801d8e2:	bf84      	itt	hi
 801d8e4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801d8e8:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801d8ea:	f103 0201 	add.w	r2, r3, #1
 801d8ee:	8722      	strh	r2, [r4, #56]	@ 0x38
 801d8f0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801d8f2:	bf98      	it	ls
 801d8f4:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801d8f6:	4413      	add	r3, r2
 801d8f8:	b29b      	uxth	r3, r3
 801d8fa:	2b09      	cmp	r3, #9
 801d8fc:	bf88      	it	hi
 801d8fe:	3b0a      	subhi	r3, #10
 801d900:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d904:	8458      	strh	r0, [r3, #34]	@ 0x22
 801d906:	e7dc      	b.n	801d8c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801d908:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801d90a:	2b0a      	cmp	r3, #10
 801d90c:	d00f      	beq.n	801d92e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801d90e:	4620      	mov	r0, r4
 801d910:	f7ff fbe7 	bl	801d0e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801d914:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801d916:	1c5a      	adds	r2, r3, #1
 801d918:	8722      	strh	r2, [r4, #56]	@ 0x38
 801d91a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801d91c:	4413      	add	r3, r2
 801d91e:	b29b      	uxth	r3, r3
 801d920:	2b09      	cmp	r3, #9
 801d922:	bf88      	it	hi
 801d924:	3b0a      	subhi	r3, #10
 801d926:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d92a:	8458      	strh	r0, [r3, #34]	@ 0x22
 801d92c:	e7ec      	b.n	801d908 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801d92e:	bd10      	pop	{r4, pc}

0801d930 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801d930:	b538      	push	{r3, r4, r5, lr}
 801d932:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d934:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801d938:	4604      	mov	r4, r0
 801d93a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 801d93c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801d93e:	3a01      	subs	r2, #1
 801d940:	8702      	strh	r2, [r0, #56]	@ 0x38
 801d942:	1c5a      	adds	r2, r3, #1
 801d944:	b292      	uxth	r2, r2
 801d946:	2a09      	cmp	r2, #9
 801d948:	bf86      	itte	hi
 801d94a:	3b09      	subhi	r3, #9
 801d94c:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801d94e:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801d950:	f7ff ffb5 	bl	801d8be <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801d954:	8c23      	ldrh	r3, [r4, #32]
 801d956:	2b01      	cmp	r3, #1
 801d958:	bf9c      	itt	ls
 801d95a:	3301      	addls	r3, #1
 801d95c:	8423      	strhls	r3, [r4, #32]
 801d95e:	8be3      	ldrh	r3, [r4, #30]
 801d960:	b90b      	cbnz	r3, 801d966 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801d962:	2302      	movs	r3, #2
 801d964:	83e3      	strh	r3, [r4, #30]
 801d966:	8be3      	ldrh	r3, [r4, #30]
 801d968:	3b01      	subs	r3, #1
 801d96a:	b29b      	uxth	r3, r3
 801d96c:	83e3      	strh	r3, [r4, #30]
 801d96e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d972:	4628      	mov	r0, r5
 801d974:	8365      	strh	r5, [r4, #26]
 801d976:	bd38      	pop	{r3, r4, r5, pc}

0801d978 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801d978:	428a      	cmp	r2, r1
 801d97a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d97e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801d980:	d931      	bls.n	801d9e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801d982:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 801d984:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 801d988:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 801d98c:	19ee      	adds	r6, r5, r7
 801d98e:	1a54      	subs	r4, r2, r1
 801d990:	3e01      	subs	r6, #1
 801d992:	fa1f fe84 	uxth.w	lr, r4
 801d996:	b2b4      	uxth	r4, r6
 801d998:	eba4 090e 	sub.w	r9, r4, lr
 801d99c:	fa1f f989 	uxth.w	r9, r9
 801d9a0:	2c09      	cmp	r4, #9
 801d9a2:	4626      	mov	r6, r4
 801d9a4:	bf88      	it	hi
 801d9a6:	f1a4 060a 	subhi.w	r6, r4, #10
 801d9aa:	f1bc 0f00 	cmp.w	ip, #0
 801d9ae:	bf08      	it	eq
 801d9b0:	f04f 0c02 	moveq.w	ip, #2
 801d9b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d9b8:	f10c 3cff 	add.w	ip, ip, #4294967295
 801d9bc:	fa1f fc8c 	uxth.w	ip, ip
 801d9c0:	3c01      	subs	r4, #1
 801d9c2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801d9c6:	b2a4      	uxth	r4, r4
 801d9c8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801d9cc:	454c      	cmp	r4, r9
 801d9ce:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801d9d2:	d1e5      	bne.n	801d9a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801d9d4:	eba5 050e 	sub.w	r5, r5, lr
 801d9d8:	eb0e 0408 	add.w	r4, lr, r8
 801d9dc:	8705      	strh	r5, [r0, #56]	@ 0x38
 801d9de:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801d9e2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 801d9e6:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 801d9e8:	1a64      	subs	r4, r4, r1
 801d9ea:	4439      	add	r1, r7
 801d9ec:	b289      	uxth	r1, r1
 801d9ee:	2909      	cmp	r1, #9
 801d9f0:	bf88      	it	hi
 801d9f2:	390a      	subhi	r1, #10
 801d9f4:	8704      	strh	r4, [r0, #56]	@ 0x38
 801d9f6:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801d9f8:	250a      	movs	r5, #10
 801d9fa:	b18a      	cbz	r2, 801da20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801d9fc:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801d9fe:	3a01      	subs	r2, #1
 801da00:	b292      	uxth	r2, r2
 801da02:	3101      	adds	r1, #1
 801da04:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801da08:	8701      	strh	r1, [r0, #56]	@ 0x38
 801da0a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801da0c:	b901      	cbnz	r1, 801da10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801da0e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801da10:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801da12:	3901      	subs	r1, #1
 801da14:	b289      	uxth	r1, r1
 801da16:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801da18:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801da1c:	844c      	strh	r4, [r1, #34]	@ 0x22
 801da1e:	e7ec      	b.n	801d9fa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801da20:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801da24:	f7ff bf4b 	b.w	801d8be <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801da28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801da28:	b570      	push	{r4, r5, r6, lr}
 801da2a:	2500      	movs	r5, #0
 801da2c:	4295      	cmp	r5, r2
 801da2e:	d011      	beq.n	801da54 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801da30:	8bc4      	ldrh	r4, [r0, #30]
 801da32:	f831 6b02 	ldrh.w	r6, [r1], #2
 801da36:	4414      	add	r4, r2
 801da38:	3c01      	subs	r4, #1
 801da3a:	1b64      	subs	r4, r4, r5
 801da3c:	b2a4      	uxth	r4, r4
 801da3e:	2c01      	cmp	r4, #1
 801da40:	bf88      	it	hi
 801da42:	3c02      	subhi	r4, #2
 801da44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801da48:	8b64      	ldrh	r4, [r4, #26]
 801da4a:	42b4      	cmp	r4, r6
 801da4c:	d117      	bne.n	801da7e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801da4e:	3501      	adds	r5, #1
 801da50:	b2ad      	uxth	r5, r5
 801da52:	e7eb      	b.n	801da2c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801da54:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801da58:	2400      	movs	r4, #0
 801da5a:	4413      	add	r3, r2
 801da5c:	b2a2      	uxth	r2, r4
 801da5e:	429a      	cmp	r2, r3
 801da60:	da0f      	bge.n	801da82 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801da62:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801da64:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801da68:	4432      	add	r2, r6
 801da6a:	b292      	uxth	r2, r2
 801da6c:	2a09      	cmp	r2, #9
 801da6e:	bf88      	it	hi
 801da70:	3a0a      	subhi	r2, #10
 801da72:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801da76:	3401      	adds	r4, #1
 801da78:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 801da7a:	42aa      	cmp	r2, r5
 801da7c:	d0ee      	beq.n	801da5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801da7e:	2000      	movs	r0, #0
 801da80:	bd70      	pop	{r4, r5, r6, pc}
 801da82:	2001      	movs	r0, #1
 801da84:	e7fc      	b.n	801da80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801da86 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801da86:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da8a:	4605      	mov	r5, r0
 801da8c:	4616      	mov	r6, r2
 801da8e:	1c8c      	adds	r4, r1, #2
 801da90:	8809      	ldrh	r1, [r1, #0]
 801da92:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801da96:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801da9a:	42b3      	cmp	r3, r6
 801da9c:	d124      	bne.n	801dae8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801da9e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801daa2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801daa6:	f001 070f 	and.w	r7, r1, #15
 801daaa:	f8cd 8000 	str.w	r8, [sp]
 801daae:	464b      	mov	r3, r9
 801dab0:	4652      	mov	r2, sl
 801dab2:	4621      	mov	r1, r4
 801dab4:	4628      	mov	r0, r5
 801dab6:	f7ff ffb7 	bl	801da28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801daba:	4683      	mov	fp, r0
 801dabc:	b168      	cbz	r0, 801dada <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801dabe:	eb0a 0109 	add.w	r1, sl, r9
 801dac2:	4441      	add	r1, r8
 801dac4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801dac8:	463a      	mov	r2, r7
 801daca:	4649      	mov	r1, r9
 801dacc:	4628      	mov	r0, r5
 801dace:	f7ff ff53 	bl	801d978 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801dad2:	4658      	mov	r0, fp
 801dad4:	b003      	add	sp, #12
 801dad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dada:	eb07 010a 	add.w	r1, r7, sl
 801dade:	4449      	add	r1, r9
 801dae0:	4441      	add	r1, r8
 801dae2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801dae6:	e7d2      	b.n	801da8e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801dae8:	f04f 0b00 	mov.w	fp, #0
 801daec:	e7f1      	b.n	801dad2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801daee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801daee:	b570      	push	{r4, r5, r6, lr}
 801daf0:	8810      	ldrh	r0, [r2, #0]
 801daf2:	4298      	cmp	r0, r3
 801daf4:	d817      	bhi.n	801db26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801daf6:	1e48      	subs	r0, r1, #1
 801daf8:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801dafc:	4298      	cmp	r0, r3
 801dafe:	d312      	bcc.n	801db26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801db00:	2400      	movs	r4, #0
 801db02:	428c      	cmp	r4, r1
 801db04:	d20f      	bcs.n	801db26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801db06:	1860      	adds	r0, r4, r1
 801db08:	1040      	asrs	r0, r0, #1
 801db0a:	0085      	lsls	r5, r0, #2
 801db0c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801db10:	42b3      	cmp	r3, r6
 801db12:	d902      	bls.n	801db1a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801db14:	3001      	adds	r0, #1
 801db16:	b284      	uxth	r4, r0
 801db18:	e7f3      	b.n	801db02 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801db1a:	d201      	bcs.n	801db20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801db1c:	b281      	uxth	r1, r0
 801db1e:	e7f0      	b.n	801db02 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801db20:	442a      	add	r2, r5
 801db22:	8850      	ldrh	r0, [r2, #2]
 801db24:	bd70      	pop	{r4, r5, r6, pc}
 801db26:	2000      	movs	r0, #0
 801db28:	e7fc      	b.n	801db24 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801db2a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801db2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801db2e:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801db30:	886f      	ldrh	r7, [r5, #2]
 801db32:	4604      	mov	r4, r0
 801db34:	087f      	lsrs	r7, r7, #1
 801db36:	260b      	movs	r6, #11
 801db38:	3e01      	subs	r6, #1
 801db3a:	d013      	beq.n	801db64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801db3c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801db3e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801db42:	462a      	mov	r2, r5
 801db44:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801db48:	4639      	mov	r1, r7
 801db4a:	4643      	mov	r3, r8
 801db4c:	4620      	mov	r0, r4
 801db4e:	f7ff ffce 	bl	801daee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801db52:	b138      	cbz	r0, 801db64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801db54:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801db58:	4642      	mov	r2, r8
 801db5a:	4620      	mov	r0, r4
 801db5c:	f7ff ff93 	bl	801da86 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801db60:	2800      	cmp	r0, #0
 801db62:	d1e9      	bne.n	801db38 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801db64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801db68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801db68:	b570      	push	{r4, r5, r6, lr}
 801db6a:	694a      	ldr	r2, [r1, #20]
 801db6c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801db6e:	684b      	ldr	r3, [r1, #4]
 801db70:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801db72:	1b54      	subs	r4, r2, r5
 801db74:	f000 8106 	beq.w	801dd84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801db78:	1b9b      	subs	r3, r3, r6
 801db7a:	d003      	beq.n	801db84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801db7c:	4363      	muls	r3, r4
 801db7e:	2210      	movs	r2, #16
 801db80:	fb93 f3f2 	sdiv	r3, r3, r2
 801db84:	680c      	ldr	r4, [r1, #0]
 801db86:	698a      	ldr	r2, [r1, #24]
 801db88:	1b65      	subs	r5, r4, r5
 801db8a:	f000 80fd 	beq.w	801dd88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801db8e:	1b92      	subs	r2, r2, r6
 801db90:	d003      	beq.n	801db9a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801db92:	436a      	muls	r2, r5
 801db94:	2410      	movs	r4, #16
 801db96:	fb92 f2f4 	sdiv	r2, r2, r4
 801db9a:	1a9b      	subs	r3, r3, r2
 801db9c:	ee07 3a90 	vmov	s15, r3
 801dba0:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 801ddc4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801dba4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801dba8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801dbac:	ee67 7a84 	vmul.f32	s15, s15, s8
 801dbb0:	460a      	mov	r2, r1
 801dbb2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801dbb6:	4603      	mov	r3, r0
 801dbb8:	f100 040c 	add.w	r4, r0, #12
 801dbbc:	eeb1 6a43 	vneg.f32	s12, s6
 801dbc0:	edd2 7a02 	vldr	s15, [r2, #8]
 801dbc4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801dbc8:	3214      	adds	r2, #20
 801dbca:	ece3 6a01 	vstmia	r3!, {s13}
 801dbce:	ed52 7a02 	vldr	s15, [r2, #-8]
 801dbd2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801dbd6:	429c      	cmp	r4, r3
 801dbd8:	edc3 7a02 	vstr	s15, [r3, #8]
 801dbdc:	ed52 7a01 	vldr	s15, [r2, #-4]
 801dbe0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801dbe4:	edc3 7a05 	vstr	s15, [r3, #20]
 801dbe8:	d1ea      	bne.n	801dbc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801dbea:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801dbec:	698b      	ldr	r3, [r1, #24]
 801dbee:	edd0 4a02 	vldr	s9, [r0, #8]
 801dbf2:	edd0 3a00 	vldr	s7, [r0]
 801dbf6:	edd0 6a01 	vldr	s13, [r0, #4]
 801dbfa:	ed90 5a05 	vldr	s10, [r0, #20]
 801dbfe:	ed90 2a03 	vldr	s4, [r0, #12]
 801dc02:	edd0 5a04 	vldr	s11, [r0, #16]
 801dc06:	ed90 1a07 	vldr	s2, [r0, #28]
 801dc0a:	edd0 2a06 	vldr	s5, [r0, #24]
 801dc0e:	1a9b      	subs	r3, r3, r2
 801dc10:	ee07 3a90 	vmov	s15, r3
 801dc14:	684b      	ldr	r3, [r1, #4]
 801dc16:	1a9b      	subs	r3, r3, r2
 801dc18:	ee07 3a10 	vmov	s14, r3
 801dc1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801dc20:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801dc24:	ee67 7a84 	vmul.f32	s15, s15, s8
 801dc28:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801dc2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc30:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801dc34:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc38:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801dc3c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801dc40:	ee32 5a45 	vsub.f32	s10, s4, s10
 801dc44:	ee67 7a83 	vmul.f32	s15, s15, s6
 801dc48:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801dc4c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801dc4e:	694a      	ldr	r2, [r1, #20]
 801dc50:	1b13      	subs	r3, r2, r4
 801dc52:	ee07 3a10 	vmov	s14, r3
 801dc56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc5a:	680b      	ldr	r3, [r1, #0]
 801dc5c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc60:	1b1b      	subs	r3, r3, r4
 801dc62:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801dc66:	ee07 3a10 	vmov	s14, r3
 801dc6a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc6e:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dc72:	eee6 4a87 	vfma.f32	s9, s13, s14
 801dc76:	ee64 4a86 	vmul.f32	s9, s9, s12
 801dc7a:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801dc7e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801dc80:	698b      	ldr	r3, [r1, #24]
 801dc82:	1a9b      	subs	r3, r3, r2
 801dc84:	ee06 3a90 	vmov	s13, r3
 801dc88:	684b      	ldr	r3, [r1, #4]
 801dc8a:	1a9b      	subs	r3, r3, r2
 801dc8c:	ee07 3a10 	vmov	s14, r3
 801dc90:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801dc94:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dc98:	ee66 6a84 	vmul.f32	s13, s13, s8
 801dc9c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dca0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801dca4:	eee5 6a87 	vfma.f32	s13, s11, s14
 801dca8:	ee66 6a83 	vmul.f32	s13, s13, s6
 801dcac:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801dcb0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801dcb2:	694a      	ldr	r2, [r1, #20]
 801dcb4:	1b13      	subs	r3, r2, r4
 801dcb6:	ee07 3a10 	vmov	s14, r3
 801dcba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dcbe:	680b      	ldr	r3, [r1, #0]
 801dcc0:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dcc4:	1b1b      	subs	r3, r3, r4
 801dcc6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801dcca:	ee07 3a10 	vmov	s14, r3
 801dcce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dcd2:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dcd6:	eea5 5a87 	vfma.f32	s10, s11, s14
 801dcda:	edd0 5a08 	vldr	s11, [r0, #32]
 801dcde:	ee25 5a06 	vmul.f32	s10, s10, s12
 801dce2:	ee31 1a65 	vsub.f32	s2, s2, s11
 801dce6:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801dcea:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801dcec:	698b      	ldr	r3, [r1, #24]
 801dcee:	1a9b      	subs	r3, r3, r2
 801dcf0:	ee07 3a10 	vmov	s14, r3
 801dcf4:	684b      	ldr	r3, [r1, #4]
 801dcf6:	1a9b      	subs	r3, r3, r2
 801dcf8:	ee01 3a90 	vmov	s3, r3
 801dcfc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dd00:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801dd04:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dd08:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801dd0c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801dd10:	ee61 1a84 	vmul.f32	s3, s3, s8
 801dd14:	eea1 7a21 	vfma.f32	s14, s2, s3
 801dd18:	ee27 7a03 	vmul.f32	s14, s14, s6
 801dd1c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801dd20:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801dd22:	694a      	ldr	r2, [r1, #20]
 801dd24:	1b13      	subs	r3, r2, r4
 801dd26:	ee03 3a10 	vmov	s6, r3
 801dd2a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801dd2e:	680b      	ldr	r3, [r1, #0]
 801dd30:	ee23 3a04 	vmul.f32	s6, s6, s8
 801dd34:	1b1b      	subs	r3, r3, r4
 801dd36:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801dd3a:	ee03 3a10 	vmov	s6, r3
 801dd3e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801dd42:	ee23 4a04 	vmul.f32	s8, s6, s8
 801dd46:	eee1 5a04 	vfma.f32	s11, s2, s8
 801dd4a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801dd4e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801dd52:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801dd56:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801dd5a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801dd5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dd62:	dd13      	ble.n	801dd8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801dd64:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801dd68:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801dd6c:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801dd6e:	eee3 7a87 	vfma.f32	s15, s7, s14
 801dd72:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801dd76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dd7a:	dd15      	ble.n	801dda8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801dd7c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801dd80:	6403      	str	r3, [r0, #64]	@ 0x40
 801dd82:	bd70      	pop	{r4, r5, r6, pc}
 801dd84:	4623      	mov	r3, r4
 801dd86:	e6fd      	b.n	801db84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801dd88:	462a      	mov	r2, r5
 801dd8a:	e706      	b.n	801db9a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801dd8c:	d502      	bpl.n	801dd94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801dd8e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801dd92:	e7e9      	b.n	801dd68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801dd94:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801dd98:	eea3 2a85 	vfma.f32	s4, s7, s10
 801dd9c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801dda0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dda4:	dade      	bge.n	801dd64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801dda6:	e7f2      	b.n	801dd8e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801dda8:	d502      	bpl.n	801ddb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801ddaa:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801ddae:	e7e7      	b.n	801dd80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801ddb0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801ddb4:	eee3 4a86 	vfma.f32	s9, s7, s12
 801ddb8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801ddbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ddc0:	dadc      	bge.n	801dd7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801ddc2:	e7f2      	b.n	801ddaa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801ddc4:	3d800000 	.word	0x3d800000

0801ddc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801ddc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ddcc:	2714      	movs	r7, #20
 801ddce:	435f      	muls	r7, r3
 801ddd0:	eb02 0c07 	add.w	ip, r2, r7
 801ddd4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801ddd8:	f115 0e0f 	adds.w	lr, r5, #15
 801dddc:	f100 80a2 	bmi.w	801df24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801dde0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801dde4:	9c08      	ldr	r4, [sp, #32]
 801dde6:	f8c0 e014 	str.w	lr, [r0, #20]
 801ddea:	2614      	movs	r6, #20
 801ddec:	4366      	muls	r6, r4
 801ddee:	eb02 0806 	add.w	r8, r2, r6
 801ddf2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ddf6:	f115 040f 	adds.w	r4, r5, #15
 801ddfa:	f100 809f 	bmi.w	801df3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801ddfe:	1124      	asrs	r4, r4, #4
 801de00:	eba4 040e 	sub.w	r4, r4, lr
 801de04:	6184      	str	r4, [r0, #24]
 801de06:	2c00      	cmp	r4, #0
 801de08:	f000 808a 	beq.w	801df20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801de0c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801de10:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801de14:	5995      	ldr	r5, [r2, r6]
 801de16:	eba4 0809 	sub.w	r8, r4, r9
 801de1a:	59d4      	ldr	r4, [r2, r7]
 801de1c:	eba5 0a04 	sub.w	sl, r5, r4
 801de20:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801de24:	fb0e fe05 	mul.w	lr, lr, r5
 801de28:	fb0a ee19 	mls	lr, sl, r9, lr
 801de2c:	fb08 e404 	mla	r4, r8, r4, lr
 801de30:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801de34:	3c01      	subs	r4, #1
 801de36:	19a4      	adds	r4, r4, r6
 801de38:	f100 808c 	bmi.w	801df54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801de3c:	fb94 fef6 	sdiv	lr, r4, r6
 801de40:	f8c0 e000 	str.w	lr, [r0]
 801de44:	fb06 441e 	mls	r4, r6, lr, r4
 801de48:	6104      	str	r4, [r0, #16]
 801de4a:	2d00      	cmp	r5, #0
 801de4c:	f2c0 8095 	blt.w	801df7a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801de50:	fb95 f4f6 	sdiv	r4, r5, r6
 801de54:	6044      	str	r4, [r0, #4]
 801de56:	fb06 5514 	mls	r5, r6, r4, r5
 801de5a:	6085      	str	r5, [r0, #8]
 801de5c:	60c6      	str	r6, [r0, #12]
 801de5e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801de62:	6945      	ldr	r5, [r0, #20]
 801de64:	59d2      	ldr	r2, [r2, r7]
 801de66:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 801df9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801de6a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801de6e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801de72:	ee07 4a10 	vmov	s14, r4
 801de76:	6804      	ldr	r4, [r0, #0]
 801de78:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801de7c:	ee07 2a90 	vmov	s15, r2
 801de80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801de84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801de88:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801de8c:	ee27 7a26 	vmul.f32	s14, s14, s13
 801de90:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801de94:	edd3 6a00 	vldr	s13, [r3]
 801de98:	eee6 6a07 	vfma.f32	s13, s12, s14
 801de9c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801dea0:	eee6 6a27 	vfma.f32	s13, s12, s15
 801dea4:	edc0 6a07 	vstr	s13, [r0, #28]
 801dea8:	edd0 6a01 	vldr	s13, [r0, #4]
 801deac:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801deb0:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801deb4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801deb8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801debc:	ed80 6a08 	vstr	s12, [r0, #32]
 801dec0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801dec2:	6242      	str	r2, [r0, #36]	@ 0x24
 801dec4:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801dec8:	ed93 6a03 	vldr	s12, [r3, #12]
 801decc:	eea5 6a87 	vfma.f32	s12, s11, s14
 801ded0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801ded4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801ded8:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801dedc:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801dee0:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 801dee4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801dee8:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801deec:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801deee:	6302      	str	r2, [r0, #48]	@ 0x30
 801def0:	ed93 6a06 	vldr	s12, [r3, #24]
 801def4:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801def8:	eea5 6a87 	vfma.f32	s12, s11, s14
 801defc:	eeb0 7a46 	vmov.f32	s14, s12
 801df00:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 801df04:	eea6 7a27 	vfma.f32	s14, s12, s15
 801df08:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801df0c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801df10:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 801df14:	eee6 7a87 	vfma.f32	s15, s13, s14
 801df18:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801df1c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801df1e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801df20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801df24:	f1c5 0501 	rsb	r5, r5, #1
 801df28:	f015 050f 	ands.w	r5, r5, #15
 801df2c:	bf18      	it	ne
 801df2e:	2501      	movne	r5, #1
 801df30:	2410      	movs	r4, #16
 801df32:	fb9e fef4 	sdiv	lr, lr, r4
 801df36:	ebae 0e05 	sub.w	lr, lr, r5
 801df3a:	e753      	b.n	801dde4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801df3c:	f1c5 0501 	rsb	r5, r5, #1
 801df40:	f015 050f 	ands.w	r5, r5, #15
 801df44:	bf18      	it	ne
 801df46:	2501      	movne	r5, #1
 801df48:	f04f 0910 	mov.w	r9, #16
 801df4c:	fb94 f4f9 	sdiv	r4, r4, r9
 801df50:	1b64      	subs	r4, r4, r5
 801df52:	e755      	b.n	801de00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801df54:	4264      	negs	r4, r4
 801df56:	fb94 fef6 	sdiv	lr, r4, r6
 801df5a:	f1ce 0800 	rsb	r8, lr, #0
 801df5e:	fb06 441e 	mls	r4, r6, lr, r4
 801df62:	f8c0 8000 	str.w	r8, [r0]
 801df66:	6104      	str	r4, [r0, #16]
 801df68:	2c00      	cmp	r4, #0
 801df6a:	f43f af6e 	beq.w	801de4a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801df6e:	ea6f 0e0e 	mvn.w	lr, lr
 801df72:	f8c0 e000 	str.w	lr, [r0]
 801df76:	1b34      	subs	r4, r6, r4
 801df78:	e766      	b.n	801de48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801df7a:	426d      	negs	r5, r5
 801df7c:	fb95 f4f6 	sdiv	r4, r5, r6
 801df80:	f1c4 0e00 	rsb	lr, r4, #0
 801df84:	fb06 5514 	mls	r5, r6, r4, r5
 801df88:	f8c0 e004 	str.w	lr, [r0, #4]
 801df8c:	6085      	str	r5, [r0, #8]
 801df8e:	2d00      	cmp	r5, #0
 801df90:	f43f af64 	beq.w	801de5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801df94:	43e4      	mvns	r4, r4
 801df96:	6044      	str	r4, [r0, #4]
 801df98:	1b75      	subs	r5, r6, r5
 801df9a:	e75e      	b.n	801de5a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801df9c:	3d800000 	.word	0x3d800000

0801dfa0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801dfa0:	4b01      	ldr	r3, [pc, #4]	@ (801dfa8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801dfa2:	6018      	str	r0, [r3, #0]
 801dfa4:	4770      	bx	lr
 801dfa6:	bf00      	nop
 801dfa8:	200138ec 	.word	0x200138ec

0801dfac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801dfac:	4b06      	ldr	r3, [pc, #24]	@ (801dfc8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801dfae:	881a      	ldrh	r2, [r3, #0]
 801dfb0:	4282      	cmp	r2, r0
 801dfb2:	d807      	bhi.n	801dfc4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801dfb4:	4b05      	ldr	r3, [pc, #20]	@ (801dfcc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801dfb6:	881b      	ldrh	r3, [r3, #0]
 801dfb8:	4413      	add	r3, r2
 801dfba:	4298      	cmp	r0, r3
 801dfbc:	bfac      	ite	ge
 801dfbe:	2000      	movge	r0, #0
 801dfc0:	2001      	movlt	r0, #1
 801dfc2:	4770      	bx	lr
 801dfc4:	2000      	movs	r0, #0
 801dfc6:	4770      	bx	lr
 801dfc8:	2001390c 	.word	0x2001390c
 801dfcc:	20013910 	.word	0x20013910

0801dfd0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801dfd0:	b508      	push	{r3, lr}
 801dfd2:	4601      	mov	r1, r0
 801dfd4:	f7ff ffea 	bl	801dfac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801dfd8:	b118      	cbz	r0, 801dfe2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801dfda:	4b02      	ldr	r3, [pc, #8]	@ (801dfe4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801dfdc:	681b      	ldr	r3, [r3, #0]
 801dfde:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801dfe2:	bd08      	pop	{r3, pc}
 801dfe4:	200138f0 	.word	0x200138f0

0801dfe8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801dfe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801dfea:	4c24      	ldr	r4, [pc, #144]	@ (801e07c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801dfec:	6823      	ldr	r3, [r4, #0]
 801dfee:	2b00      	cmp	r3, #0
 801dff0:	d042      	beq.n	801e078 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801dff2:	4a23      	ldr	r2, [pc, #140]	@ (801e080 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801dff4:	4d23      	ldr	r5, [pc, #140]	@ (801e084 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801dff6:	8811      	ldrh	r1, [r2, #0]
 801dff8:	f8b5 c000 	ldrh.w	ip, [r5]
 801dffc:	4822      	ldr	r0, [pc, #136]	@ (801e088 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801dffe:	4461      	add	r1, ip
 801e000:	1c4a      	adds	r2, r1, #1
 801e002:	f022 0201 	bic.w	r2, r2, #1
 801e006:	008f      	lsls	r7, r1, #2
 801e008:	0412      	lsls	r2, r2, #16
 801e00a:	19de      	adds	r6, r3, r7
 801e00c:	0c12      	lsrs	r2, r2, #16
 801e00e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801e012:	6006      	str	r6, [r0, #0]
 801e014:	4e1d      	ldr	r6, [pc, #116]	@ (801e08c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801e016:	19da      	adds	r2, r3, r7
 801e018:	6032      	str	r2, [r6, #0]
 801e01a:	220e      	movs	r2, #14
 801e01c:	fb02 f20c 	mul.w	r2, r2, ip
 801e020:	3203      	adds	r2, #3
 801e022:	f022 0203 	bic.w	r2, r2, #3
 801e026:	443a      	add	r2, r7
 801e028:	4f19      	ldr	r7, [pc, #100]	@ (801e090 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801e02a:	4413      	add	r3, r2
 801e02c:	603b      	str	r3, [r7, #0]
 801e02e:	4f19      	ldr	r7, [pc, #100]	@ (801e094 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801e030:	2300      	movs	r3, #0
 801e032:	803b      	strh	r3, [r7, #0]
 801e034:	4f18      	ldr	r7, [pc, #96]	@ (801e098 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801e036:	683f      	ldr	r7, [r7, #0]
 801e038:	1aba      	subs	r2, r7, r2
 801e03a:	4f18      	ldr	r7, [pc, #96]	@ (801e09c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801e03c:	603a      	str	r2, [r7, #0]
 801e03e:	4a18      	ldr	r2, [pc, #96]	@ (801e0a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801e040:	469c      	mov	ip, r3
 801e042:	8013      	strh	r3, [r2, #0]
 801e044:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801e048:	428b      	cmp	r3, r1
 801e04a:	d10d      	bne.n	801e068 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801e04c:	882d      	ldrh	r5, [r5, #0]
 801e04e:	6830      	ldr	r0, [r6, #0]
 801e050:	2300      	movs	r3, #0
 801e052:	240e      	movs	r4, #14
 801e054:	429d      	cmp	r5, r3
 801e056:	d90f      	bls.n	801e078 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801e058:	fb04 0203 	mla	r2, r4, r3, r0
 801e05c:	3301      	adds	r3, #1
 801e05e:	7b11      	ldrb	r1, [r2, #12]
 801e060:	f36f 1145 	bfc	r1, #5, #1
 801e064:	7311      	strb	r1, [r2, #12]
 801e066:	e7f5      	b.n	801e054 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801e068:	6822      	ldr	r2, [r4, #0]
 801e06a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801e06e:	6802      	ldr	r2, [r0, #0]
 801e070:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801e074:	3301      	adds	r3, #1
 801e076:	e7e7      	b.n	801e048 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801e078:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e07a:	bf00      	nop
 801e07c:	200138f0 	.word	0x200138f0
 801e080:	2001390c 	.word	0x2001390c
 801e084:	20013910 	.word	0x20013910
 801e088:	20013904 	.word	0x20013904
 801e08c:	200138f4 	.word	0x200138f4
 801e090:	200138fc 	.word	0x200138fc
 801e094:	2001390e 	.word	0x2001390e
 801e098:	200138f8 	.word	0x200138f8
 801e09c:	20013908 	.word	0x20013908
 801e0a0:	20013900 	.word	0x20013900

0801e0a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801e0a4:	4b06      	ldr	r3, [pc, #24]	@ (801e0c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801e0a6:	681b      	ldr	r3, [r3, #0]
 801e0a8:	b943      	cbnz	r3, 801e0bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801e0aa:	b139      	cbz	r1, 801e0bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801e0ac:	4b05      	ldr	r3, [pc, #20]	@ (801e0c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801e0ae:	801a      	strh	r2, [r3, #0]
 801e0b0:	4b05      	ldr	r3, [pc, #20]	@ (801e0c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801e0b2:	6019      	str	r1, [r3, #0]
 801e0b4:	4b05      	ldr	r3, [pc, #20]	@ (801e0cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801e0b6:	6018      	str	r0, [r3, #0]
 801e0b8:	f7ff bf96 	b.w	801dfe8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801e0bc:	4770      	bx	lr
 801e0be:	bf00      	nop
 801e0c0:	200138fc 	.word	0x200138fc
 801e0c4:	20013910 	.word	0x20013910
 801e0c8:	200138f8 	.word	0x200138f8
 801e0cc:	200138f0 	.word	0x200138f0

0801e0d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801e0d0:	b470      	push	{r4, r5, r6}
 801e0d2:	4c07      	ldr	r4, [pc, #28]	@ (801e0f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801e0d4:	6826      	ldr	r6, [r4, #0]
 801e0d6:	4605      	mov	r5, r0
 801e0d8:	4610      	mov	r0, r2
 801e0da:	9a03      	ldr	r2, [sp, #12]
 801e0dc:	b936      	cbnz	r6, 801e0ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801e0de:	6025      	str	r5, [r4, #0]
 801e0e0:	4c04      	ldr	r4, [pc, #16]	@ (801e0f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801e0e2:	8021      	strh	r1, [r4, #0]
 801e0e4:	bc70      	pop	{r4, r5, r6}
 801e0e6:	4619      	mov	r1, r3
 801e0e8:	f7ff bfdc 	b.w	801e0a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801e0ec:	bc70      	pop	{r4, r5, r6}
 801e0ee:	4770      	bx	lr
 801e0f0:	20013914 	.word	0x20013914
 801e0f4:	2001390c 	.word	0x2001390c

0801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801e0f8:	4a12      	ldr	r2, [pc, #72]	@ (801e144 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801e0fa:	8803      	ldrh	r3, [r0, #0]
 801e0fc:	8812      	ldrh	r2, [r2, #0]
 801e0fe:	4293      	cmp	r3, r2
 801e100:	d207      	bcs.n	801e112 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801e102:	4a11      	ldr	r2, [pc, #68]	@ (801e148 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801e104:	6812      	ldr	r2, [r2, #0]
 801e106:	2114      	movs	r1, #20
 801e108:	fb01 2303 	mla	r3, r1, r3, r2
 801e10c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801e110:	4770      	bx	lr
 801e112:	490e      	ldr	r1, [pc, #56]	@ (801e14c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801e114:	8809      	ldrh	r1, [r1, #0]
 801e116:	4411      	add	r1, r2
 801e118:	428b      	cmp	r3, r1
 801e11a:	da04      	bge.n	801e126 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801e11c:	1a9b      	subs	r3, r3, r2
 801e11e:	4a0c      	ldr	r2, [pc, #48]	@ (801e150 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801e120:	210e      	movs	r1, #14
 801e122:	6812      	ldr	r2, [r2, #0]
 801e124:	e7f0      	b.n	801e108 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801e126:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e12a:	4293      	cmp	r3, r2
 801e12c:	d108      	bne.n	801e140 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801e12e:	4b09      	ldr	r3, [pc, #36]	@ (801e154 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801e130:	781b      	ldrb	r3, [r3, #0]
 801e132:	b91b      	cbnz	r3, 801e13c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801e134:	4b08      	ldr	r3, [pc, #32]	@ (801e158 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801e136:	f9b3 0000 	ldrsh.w	r0, [r3]
 801e13a:	4770      	bx	lr
 801e13c:	4b07      	ldr	r3, [pc, #28]	@ (801e15c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801e13e:	e7fa      	b.n	801e136 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801e140:	2000      	movs	r0, #0
 801e142:	4770      	bx	lr
 801e144:	2001390c 	.word	0x2001390c
 801e148:	20013914 	.word	0x20013914
 801e14c:	20013910 	.word	0x20013910
 801e150:	200138f4 	.word	0x200138f4
 801e154:	2001387c 	.word	0x2001387c
 801e158:	2001387e 	.word	0x2001387e
 801e15c:	20013880 	.word	0x20013880

0801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801e160:	4a12      	ldr	r2, [pc, #72]	@ (801e1ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801e162:	8803      	ldrh	r3, [r0, #0]
 801e164:	8812      	ldrh	r2, [r2, #0]
 801e166:	4293      	cmp	r3, r2
 801e168:	d207      	bcs.n	801e17a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801e16a:	4a11      	ldr	r2, [pc, #68]	@ (801e1b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801e16c:	6812      	ldr	r2, [r2, #0]
 801e16e:	2114      	movs	r1, #20
 801e170:	fb01 2303 	mla	r3, r1, r3, r2
 801e174:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801e178:	4770      	bx	lr
 801e17a:	490e      	ldr	r1, [pc, #56]	@ (801e1b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801e17c:	8809      	ldrh	r1, [r1, #0]
 801e17e:	4411      	add	r1, r2
 801e180:	428b      	cmp	r3, r1
 801e182:	da04      	bge.n	801e18e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801e184:	1a9b      	subs	r3, r3, r2
 801e186:	4a0c      	ldr	r2, [pc, #48]	@ (801e1b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801e188:	210e      	movs	r1, #14
 801e18a:	6812      	ldr	r2, [r2, #0]
 801e18c:	e7f0      	b.n	801e170 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801e18e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e192:	4293      	cmp	r3, r2
 801e194:	d108      	bne.n	801e1a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801e196:	4b09      	ldr	r3, [pc, #36]	@ (801e1bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801e198:	781b      	ldrb	r3, [r3, #0]
 801e19a:	b91b      	cbnz	r3, 801e1a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801e19c:	4b08      	ldr	r3, [pc, #32]	@ (801e1c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801e19e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801e1a2:	4770      	bx	lr
 801e1a4:	4b07      	ldr	r3, [pc, #28]	@ (801e1c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801e1a6:	e7fa      	b.n	801e19e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801e1a8:	2000      	movs	r0, #0
 801e1aa:	4770      	bx	lr
 801e1ac:	2001390c 	.word	0x2001390c
 801e1b0:	20013914 	.word	0x20013914
 801e1b4:	20013910 	.word	0x20013910
 801e1b8:	200138f4 	.word	0x200138f4
 801e1bc:	2001387c 	.word	0x2001387c
 801e1c0:	20013880 	.word	0x20013880
 801e1c4:	2001387e 	.word	0x2001387e

0801e1c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801e1c8:	b530      	push	{r4, r5, lr}
 801e1ca:	4a22      	ldr	r2, [pc, #136]	@ (801e254 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801e1cc:	880b      	ldrh	r3, [r1, #0]
 801e1ce:	8812      	ldrh	r2, [r2, #0]
 801e1d0:	4293      	cmp	r3, r2
 801e1d2:	d213      	bcs.n	801e1fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801e1d4:	4a20      	ldr	r2, [pc, #128]	@ (801e258 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801e1d6:	6812      	ldr	r2, [r2, #0]
 801e1d8:	2114      	movs	r1, #20
 801e1da:	fb01 2303 	mla	r3, r1, r3, r2
 801e1de:	8a1a      	ldrh	r2, [r3, #16]
 801e1e0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801e1e4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801e1e8:	8a5b      	ldrh	r3, [r3, #18]
 801e1ea:	8004      	strh	r4, [r0, #0]
 801e1ec:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e1f0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801e1f4:	8041      	strh	r1, [r0, #2]
 801e1f6:	8082      	strh	r2, [r0, #4]
 801e1f8:	80c3      	strh	r3, [r0, #6]
 801e1fa:	e024      	b.n	801e246 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801e1fc:	4917      	ldr	r1, [pc, #92]	@ (801e25c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801e1fe:	8809      	ldrh	r1, [r1, #0]
 801e200:	4411      	add	r1, r2
 801e202:	428b      	cmp	r3, r1
 801e204:	da10      	bge.n	801e228 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801e206:	1a9b      	subs	r3, r3, r2
 801e208:	220e      	movs	r2, #14
 801e20a:	4353      	muls	r3, r2
 801e20c:	4a14      	ldr	r2, [pc, #80]	@ (801e260 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801e20e:	6811      	ldr	r1, [r2, #0]
 801e210:	18ca      	adds	r2, r1, r3
 801e212:	5ecd      	ldrsh	r5, [r1, r3]
 801e214:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801e218:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801e21c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801e220:	8005      	strh	r5, [r0, #0]
 801e222:	8044      	strh	r4, [r0, #2]
 801e224:	8081      	strh	r1, [r0, #4]
 801e226:	e7e7      	b.n	801e1f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801e228:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e22c:	4293      	cmp	r3, r2
 801e22e:	d10b      	bne.n	801e248 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801e230:	4b0c      	ldr	r3, [pc, #48]	@ (801e264 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801e232:	f9b3 1000 	ldrsh.w	r1, [r3]
 801e236:	4b0c      	ldr	r3, [pc, #48]	@ (801e268 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801e238:	8081      	strh	r1, [r0, #4]
 801e23a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e23e:	80c2      	strh	r2, [r0, #6]
 801e240:	2300      	movs	r3, #0
 801e242:	8003      	strh	r3, [r0, #0]
 801e244:	8043      	strh	r3, [r0, #2]
 801e246:	bd30      	pop	{r4, r5, pc}
 801e248:	2300      	movs	r3, #0
 801e24a:	8003      	strh	r3, [r0, #0]
 801e24c:	8043      	strh	r3, [r0, #2]
 801e24e:	8083      	strh	r3, [r0, #4]
 801e250:	e7d2      	b.n	801e1f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801e252:	bf00      	nop
 801e254:	2001390c 	.word	0x2001390c
 801e258:	20013914 	.word	0x20013914
 801e25c:	20013910 	.word	0x20013910
 801e260:	200138f4 	.word	0x200138f4
 801e264:	20013878 	.word	0x20013878
 801e268:	2001387a 	.word	0x2001387a

0801e26c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801e26c:	4a17      	ldr	r2, [pc, #92]	@ (801e2cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801e26e:	8803      	ldrh	r3, [r0, #0]
 801e270:	8812      	ldrh	r2, [r2, #0]
 801e272:	4293      	cmp	r3, r2
 801e274:	d213      	bcs.n	801e29e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801e276:	4a16      	ldr	r2, [pc, #88]	@ (801e2d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801e278:	6812      	ldr	r2, [r2, #0]
 801e27a:	2114      	movs	r1, #20
 801e27c:	fb01 2303 	mla	r3, r1, r3, r2
 801e280:	8a1a      	ldrh	r2, [r3, #16]
 801e282:	8919      	ldrh	r1, [r3, #8]
 801e284:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e288:	428a      	cmp	r2, r1
 801e28a:	db1d      	blt.n	801e2c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801e28c:	8a58      	ldrh	r0, [r3, #18]
 801e28e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801e292:	895b      	ldrh	r3, [r3, #10]
 801e294:	4298      	cmp	r0, r3
 801e296:	bfac      	ite	ge
 801e298:	2000      	movge	r0, #0
 801e29a:	2001      	movlt	r0, #1
 801e29c:	4770      	bx	lr
 801e29e:	490d      	ldr	r1, [pc, #52]	@ (801e2d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801e2a0:	8809      	ldrh	r1, [r1, #0]
 801e2a2:	4411      	add	r1, r2
 801e2a4:	428b      	cmp	r3, r1
 801e2a6:	da0d      	bge.n	801e2c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801e2a8:	1a9b      	subs	r3, r3, r2
 801e2aa:	4a0b      	ldr	r2, [pc, #44]	@ (801e2d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801e2ac:	6812      	ldr	r2, [r2, #0]
 801e2ae:	210e      	movs	r1, #14
 801e2b0:	fb01 2303 	mla	r3, r1, r3, r2
 801e2b4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801e2b8:	891a      	ldrh	r2, [r3, #8]
 801e2ba:	4291      	cmp	r1, r2
 801e2bc:	db04      	blt.n	801e2c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801e2be:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801e2c2:	e7e6      	b.n	801e292 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801e2c4:	2000      	movs	r0, #0
 801e2c6:	4770      	bx	lr
 801e2c8:	2001      	movs	r0, #1
 801e2ca:	4770      	bx	lr
 801e2cc:	2001390c 	.word	0x2001390c
 801e2d0:	20013914 	.word	0x20013914
 801e2d4:	20013910 	.word	0x20013910
 801e2d8:	200138f4 	.word	0x200138f4

0801e2dc <_ZNK8touchgfx6Bitmap7getDataEv>:
 801e2dc:	4a12      	ldr	r2, [pc, #72]	@ (801e328 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801e2de:	8803      	ldrh	r3, [r0, #0]
 801e2e0:	8811      	ldrh	r1, [r2, #0]
 801e2e2:	428b      	cmp	r3, r1
 801e2e4:	d20b      	bcs.n	801e2fe <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801e2e6:	4a11      	ldr	r2, [pc, #68]	@ (801e32c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801e2e8:	6812      	ldr	r2, [r2, #0]
 801e2ea:	b112      	cbz	r2, 801e2f2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801e2ec:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801e2f0:	b9c0      	cbnz	r0, 801e324 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801e2f2:	4a0f      	ldr	r2, [pc, #60]	@ (801e330 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801e2f4:	6811      	ldr	r1, [r2, #0]
 801e2f6:	2214      	movs	r2, #20
 801e2f8:	4353      	muls	r3, r2
 801e2fa:	58c8      	ldr	r0, [r1, r3]
 801e2fc:	4770      	bx	lr
 801e2fe:	4a0d      	ldr	r2, [pc, #52]	@ (801e334 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801e300:	8812      	ldrh	r2, [r2, #0]
 801e302:	440a      	add	r2, r1
 801e304:	4293      	cmp	r3, r2
 801e306:	da04      	bge.n	801e312 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801e308:	4a08      	ldr	r2, [pc, #32]	@ (801e32c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801e30a:	6812      	ldr	r2, [r2, #0]
 801e30c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801e310:	4770      	bx	lr
 801e312:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e316:	4293      	cmp	r3, r2
 801e318:	d103      	bne.n	801e322 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801e31a:	4b07      	ldr	r3, [pc, #28]	@ (801e338 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801e31c:	681b      	ldr	r3, [r3, #0]
 801e31e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801e320:	4770      	bx	lr
 801e322:	2000      	movs	r0, #0
 801e324:	4770      	bx	lr
 801e326:	bf00      	nop
 801e328:	2001390c 	.word	0x2001390c
 801e32c:	200138f0 	.word	0x200138f0
 801e330:	20013914 	.word	0x20013914
 801e334:	20013910 	.word	0x20013910
 801e338:	20013884 	.word	0x20013884

0801e33c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801e33c:	4b24      	ldr	r3, [pc, #144]	@ (801e3d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801e33e:	8802      	ldrh	r2, [r0, #0]
 801e340:	8818      	ldrh	r0, [r3, #0]
 801e342:	4282      	cmp	r2, r0
 801e344:	d221      	bcs.n	801e38a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801e346:	4b23      	ldr	r3, [pc, #140]	@ (801e3d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801e348:	6819      	ldr	r1, [r3, #0]
 801e34a:	2314      	movs	r3, #20
 801e34c:	fb03 1302 	mla	r3, r3, r2, r1
 801e350:	6858      	ldr	r0, [r3, #4]
 801e352:	2800      	cmp	r0, #0
 801e354:	d03a      	beq.n	801e3cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801e356:	4920      	ldr	r1, [pc, #128]	@ (801e3d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801e358:	6809      	ldr	r1, [r1, #0]
 801e35a:	2900      	cmp	r1, #0
 801e35c:	d036      	beq.n	801e3cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801e35e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801e362:	2900      	cmp	r1, #0
 801e364:	d032      	beq.n	801e3cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801e366:	891a      	ldrh	r2, [r3, #8]
 801e368:	8958      	ldrh	r0, [r3, #10]
 801e36a:	4350      	muls	r0, r2
 801e36c:	7c5a      	ldrb	r2, [r3, #17]
 801e36e:	7cdb      	ldrb	r3, [r3, #19]
 801e370:	0952      	lsrs	r2, r2, #5
 801e372:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801e376:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801e37a:	2b0b      	cmp	r3, #11
 801e37c:	bf18      	it	ne
 801e37e:	0040      	lslne	r0, r0, #1
 801e380:	3003      	adds	r0, #3
 801e382:	f020 0003 	bic.w	r0, r0, #3
 801e386:	4408      	add	r0, r1
 801e388:	4770      	bx	lr
 801e38a:	4b14      	ldr	r3, [pc, #80]	@ (801e3dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801e38c:	881b      	ldrh	r3, [r3, #0]
 801e38e:	4403      	add	r3, r0
 801e390:	429a      	cmp	r2, r3
 801e392:	da1a      	bge.n	801e3ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801e394:	4b12      	ldr	r3, [pc, #72]	@ (801e3e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801e396:	681b      	ldr	r3, [r3, #0]
 801e398:	1a10      	subs	r0, r2, r0
 801e39a:	210e      	movs	r1, #14
 801e39c:	fb01 3000 	mla	r0, r1, r0, r3
 801e3a0:	7b03      	ldrb	r3, [r0, #12]
 801e3a2:	f003 031f 	and.w	r3, r3, #31
 801e3a6:	2b0b      	cmp	r3, #11
 801e3a8:	d10b      	bne.n	801e3c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801e3aa:	8903      	ldrh	r3, [r0, #8]
 801e3ac:	8940      	ldrh	r0, [r0, #10]
 801e3ae:	4358      	muls	r0, r3
 801e3b0:	4b09      	ldr	r3, [pc, #36]	@ (801e3d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801e3b2:	6819      	ldr	r1, [r3, #0]
 801e3b4:	3003      	adds	r0, #3
 801e3b6:	f020 0303 	bic.w	r3, r0, #3
 801e3ba:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801e3be:	4418      	add	r0, r3
 801e3c0:	4770      	bx	lr
 801e3c2:	2b0d      	cmp	r3, #13
 801e3c4:	d101      	bne.n	801e3ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801e3c6:	300d      	adds	r0, #13
 801e3c8:	4770      	bx	lr
 801e3ca:	2000      	movs	r0, #0
 801e3cc:	4770      	bx	lr
 801e3ce:	bf00      	nop
 801e3d0:	2001390c 	.word	0x2001390c
 801e3d4:	20013914 	.word	0x20013914
 801e3d8:	200138f0 	.word	0x200138f0
 801e3dc:	20013910 	.word	0x20013910
 801e3e0:	200138f4 	.word	0x200138f4

0801e3e4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801e3e4:	b510      	push	{r4, lr}
 801e3e6:	4b1f      	ldr	r3, [pc, #124]	@ (801e464 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801e3e8:	8802      	ldrh	r2, [r0, #0]
 801e3ea:	881b      	ldrh	r3, [r3, #0]
 801e3ec:	429a      	cmp	r2, r3
 801e3ee:	d21a      	bcs.n	801e426 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 801e3f0:	4b1d      	ldr	r3, [pc, #116]	@ (801e468 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801e3f2:	681b      	ldr	r3, [r3, #0]
 801e3f4:	2114      	movs	r1, #20
 801e3f6:	fb01 3102 	mla	r1, r1, r2, r3
 801e3fa:	7c4b      	ldrb	r3, [r1, #17]
 801e3fc:	0958      	lsrs	r0, r3, #5
 801e3fe:	7ccb      	ldrb	r3, [r1, #19]
 801e400:	491a      	ldr	r1, [pc, #104]	@ (801e46c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801e402:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801e406:	6809      	ldr	r1, [r1, #0]
 801e408:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801e40c:	b2d8      	uxtb	r0, r3
 801e40e:	b149      	cbz	r1, 801e424 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801e410:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801e414:	b132      	cbz	r2, 801e424 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801e416:	2b0e      	cmp	r3, #14
 801e418:	d021      	beq.n	801e45e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801e41a:	280f      	cmp	r0, #15
 801e41c:	d01d      	beq.n	801e45a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801e41e:	2810      	cmp	r0, #16
 801e420:	bf08      	it	eq
 801e422:	2002      	moveq	r0, #2
 801e424:	bd10      	pop	{r4, pc}
 801e426:	4912      	ldr	r1, [pc, #72]	@ (801e470 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801e428:	8809      	ldrh	r1, [r1, #0]
 801e42a:	4419      	add	r1, r3
 801e42c:	428a      	cmp	r2, r1
 801e42e:	da09      	bge.n	801e444 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 801e430:	1ad3      	subs	r3, r2, r3
 801e432:	4a10      	ldr	r2, [pc, #64]	@ (801e474 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 801e434:	6812      	ldr	r2, [r2, #0]
 801e436:	210e      	movs	r1, #14
 801e438:	fb01 2303 	mla	r3, r1, r3, r2
 801e43c:	7b18      	ldrb	r0, [r3, #12]
 801e43e:	f000 001f 	and.w	r0, r0, #31
 801e442:	e7ef      	b.n	801e424 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801e444:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801e448:	429a      	cmp	r2, r3
 801e44a:	d108      	bne.n	801e45e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801e44c:	f7e5 fbaa 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 801e450:	6803      	ldr	r3, [r0, #0]
 801e452:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e456:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e458:	4718      	bx	r3
 801e45a:	2001      	movs	r0, #1
 801e45c:	e7e2      	b.n	801e424 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801e45e:	2000      	movs	r0, #0
 801e460:	e7e0      	b.n	801e424 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801e462:	bf00      	nop
 801e464:	2001390c 	.word	0x2001390c
 801e468:	20013914 	.word	0x20013914
 801e46c:	200138f0 	.word	0x200138f0
 801e470:	20013910 	.word	0x20013910
 801e474:	200138f4 	.word	0x200138f4

0801e478 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801e478:	2010      	movs	r0, #16
 801e47a:	4770      	bx	lr

0801e47c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801e47c:	2000      	movs	r0, #0
 801e47e:	4770      	bx	lr

0801e480 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801e480:	4b02      	ldr	r3, [pc, #8]	@ (801e48c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801e482:	8818      	ldrh	r0, [r3, #0]
 801e484:	0040      	lsls	r0, r0, #1
 801e486:	b280      	uxth	r0, r0
 801e488:	4770      	bx	lr
 801e48a:	bf00      	nop
 801e48c:	2001387e 	.word	0x2001387e

0801e490 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801e490:	2bff      	cmp	r3, #255	@ 0xff
 801e492:	d05e      	beq.n	801e552 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801e494:	2a0b      	cmp	r2, #11
 801e496:	d058      	beq.n	801e54a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801e498:	d80e      	bhi.n	801e4b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801e49a:	2a03      	cmp	r2, #3
 801e49c:	d04d      	beq.n	801e53a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 801e49e:	d804      	bhi.n	801e4aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801e4a0:	2a01      	cmp	r2, #1
 801e4a2:	d04c      	beq.n	801e53e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801e4a4:	d94d      	bls.n	801e542 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801e4a6:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801e4a8:	e031      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e4aa:	2a09      	cmp	r2, #9
 801e4ac:	d04d      	beq.n	801e54a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801e4ae:	d84a      	bhi.n	801e546 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801e4b0:	2a08      	cmp	r2, #8
 801e4b2:	d048      	beq.n	801e546 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801e4b4:	2300      	movs	r3, #0
 801e4b6:	e02a      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e4b8:	2a2f      	cmp	r2, #47	@ 0x2f
 801e4ba:	d02c      	beq.n	801e516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 801e4bc:	d811      	bhi.n	801e4e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801e4be:	2a2d      	cmp	r2, #45	@ 0x2d
 801e4c0:	d018      	beq.n	801e4f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801e4c2:	d831      	bhi.n	801e528 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801e4c4:	2a2c      	cmp	r2, #44	@ 0x2c
 801e4c6:	d1f5      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e4c8:	684a      	ldr	r2, [r1, #4]
 801e4ca:	7813      	ldrb	r3, [r2, #0]
 801e4cc:	7852      	ldrb	r2, [r2, #1]
 801e4ce:	2a00      	cmp	r2, #0
 801e4d0:	d1f0      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e4d2:	2b01      	cmp	r3, #1
 801e4d4:	d01d      	beq.n	801e512 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801e4d6:	2b00      	cmp	r3, #0
 801e4d8:	d02d      	beq.n	801e536 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801e4da:	2b02      	cmp	r3, #2
 801e4dc:	d1ea      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e4de:	68c3      	ldr	r3, [r0, #12]
 801e4e0:	e015      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e4e2:	2a31      	cmp	r2, #49	@ 0x31
 801e4e4:	d004      	beq.n	801e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801e4e6:	d332      	bcc.n	801e54e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801e4e8:	2a32      	cmp	r2, #50	@ 0x32
 801e4ea:	d030      	beq.n	801e54e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801e4ec:	2a33      	cmp	r2, #51	@ 0x33
 801e4ee:	d1e1      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e4f0:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801e4f2:	e00c      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e4f4:	684a      	ldr	r2, [r1, #4]
 801e4f6:	7813      	ldrb	r3, [r2, #0]
 801e4f8:	7852      	ldrb	r2, [r2, #1]
 801e4fa:	2a00      	cmp	r2, #0
 801e4fc:	d1da      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e4fe:	2b01      	cmp	r3, #1
 801e500:	d004      	beq.n	801e50c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801e502:	d30f      	bcc.n	801e524 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801e504:	2b02      	cmp	r3, #2
 801e506:	d1d5      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e508:	6943      	ldr	r3, [r0, #20]
 801e50a:	e000      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e50c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801e50e:	4618      	mov	r0, r3
 801e510:	4770      	bx	lr
 801e512:	69c3      	ldr	r3, [r0, #28]
 801e514:	e7fb      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e516:	684b      	ldr	r3, [r1, #4]
 801e518:	781a      	ldrb	r2, [r3, #0]
 801e51a:	785b      	ldrb	r3, [r3, #1]
 801e51c:	2b00      	cmp	r3, #0
 801e51e:	d1c9      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e520:	2a00      	cmp	r2, #0
 801e522:	d1f4      	bne.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e524:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801e526:	e7f2      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e528:	684b      	ldr	r3, [r1, #4]
 801e52a:	781a      	ldrb	r2, [r3, #0]
 801e52c:	785b      	ldrb	r3, [r3, #1]
 801e52e:	2b00      	cmp	r3, #0
 801e530:	d1c0      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e532:	2a00      	cmp	r2, #0
 801e534:	d1eb      	bne.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e536:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801e538:	e7e9      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e53a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801e53c:	e7e7      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e53e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 801e540:	e7e5      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e542:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801e544:	e7e3      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e546:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801e548:	e7e1      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e54a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801e54c:	e7df      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e54e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801e550:	e7dd      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e552:	2a0b      	cmp	r2, #11
 801e554:	d059      	beq.n	801e60a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801e556:	d80e      	bhi.n	801e576 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801e558:	2a03      	cmp	r2, #3
 801e55a:	d050      	beq.n	801e5fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801e55c:	d804      	bhi.n	801e568 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801e55e:	2a01      	cmp	r2, #1
 801e560:	d04f      	beq.n	801e602 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801e562:	d950      	bls.n	801e606 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801e564:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801e566:	e7d2      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e568:	2a09      	cmp	r2, #9
 801e56a:	d04e      	beq.n	801e60a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801e56c:	d801      	bhi.n	801e572 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801e56e:	2a08      	cmp	r2, #8
 801e570:	d1a0      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e572:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801e574:	e7cb      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e576:	2a2f      	cmp	r2, #47	@ 0x2f
 801e578:	d02d      	beq.n	801e5d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801e57a:	d811      	bhi.n	801e5a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801e57c:	2a2d      	cmp	r2, #45	@ 0x2d
 801e57e:	d018      	beq.n	801e5b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 801e580:	d833      	bhi.n	801e5ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801e582:	2a2c      	cmp	r2, #44	@ 0x2c
 801e584:	d196      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e586:	684a      	ldr	r2, [r1, #4]
 801e588:	7813      	ldrb	r3, [r2, #0]
 801e58a:	7852      	ldrb	r2, [r2, #1]
 801e58c:	2a00      	cmp	r2, #0
 801e58e:	d191      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e590:	2b01      	cmp	r3, #1
 801e592:	d01e      	beq.n	801e5d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801e594:	2b00      	cmp	r3, #0
 801e596:	d030      	beq.n	801e5fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801e598:	2b02      	cmp	r3, #2
 801e59a:	d18b      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e59c:	6903      	ldr	r3, [r0, #16]
 801e59e:	e7b6      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5a0:	2a31      	cmp	r2, #49	@ 0x31
 801e5a2:	d004      	beq.n	801e5ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801e5a4:	d333      	bcc.n	801e60e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801e5a6:	2a32      	cmp	r2, #50	@ 0x32
 801e5a8:	d031      	beq.n	801e60e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801e5aa:	2a33      	cmp	r2, #51	@ 0x33
 801e5ac:	d182      	bne.n	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e5ae:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 801e5b0:	e7ad      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5b2:	684a      	ldr	r2, [r1, #4]
 801e5b4:	7813      	ldrb	r3, [r2, #0]
 801e5b6:	7852      	ldrb	r2, [r2, #1]
 801e5b8:	2a00      	cmp	r2, #0
 801e5ba:	f47f af7b 	bne.w	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e5be:	2b01      	cmp	r3, #1
 801e5c0:	d005      	beq.n	801e5ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801e5c2:	d310      	bcc.n	801e5e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801e5c4:	2b02      	cmp	r3, #2
 801e5c6:	f47f af75 	bne.w	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e5ca:	6983      	ldr	r3, [r0, #24]
 801e5cc:	e79f      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5ce:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801e5d0:	e79d      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5d2:	6a03      	ldr	r3, [r0, #32]
 801e5d4:	e79b      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5d6:	684b      	ldr	r3, [r1, #4]
 801e5d8:	781a      	ldrb	r2, [r3, #0]
 801e5da:	785b      	ldrb	r3, [r3, #1]
 801e5dc:	2b00      	cmp	r3, #0
 801e5de:	f47f af69 	bne.w	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e5e2:	2a00      	cmp	r2, #0
 801e5e4:	d193      	bne.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5e6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801e5e8:	e791      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5ea:	684b      	ldr	r3, [r1, #4]
 801e5ec:	781a      	ldrb	r2, [r3, #0]
 801e5ee:	785b      	ldrb	r3, [r3, #1]
 801e5f0:	2b00      	cmp	r3, #0
 801e5f2:	f47f af5f 	bne.w	801e4b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801e5f6:	2a00      	cmp	r2, #0
 801e5f8:	d189      	bne.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5fa:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801e5fc:	e787      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e5fe:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801e600:	e785      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e602:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801e604:	e783      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e606:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801e608:	e781      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e60a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801e60c:	e77f      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801e60e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801e610:	e77d      	b.n	801e50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801e612 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e612:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e616:	b087      	sub	sp, #28
 801e618:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e61a:	9205      	str	r2, [sp, #20]
 801e61c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801e620:	9202      	str	r2, [sp, #8]
 801e622:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801e626:	9101      	str	r1, [sp, #4]
 801e628:	6841      	ldr	r1, [r0, #4]
 801e62a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801e62e:	fb01 2404 	mla	r4, r1, r4, r2
 801e632:	6802      	ldr	r2, [r0, #0]
 801e634:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e638:	f8de 2000 	ldr.w	r2, [lr]
 801e63c:	9203      	str	r2, [sp, #12]
 801e63e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801e642:	3204      	adds	r2, #4
 801e644:	9204      	str	r2, [sp, #16]
 801e646:	9a02      	ldr	r2, [sp, #8]
 801e648:	43d6      	mvns	r6, r2
 801e64a:	b2f6      	uxtb	r6, r6
 801e64c:	9a01      	ldr	r2, [sp, #4]
 801e64e:	2a00      	cmp	r2, #0
 801e650:	dc03      	bgt.n	801e65a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e652:	9a05      	ldr	r2, [sp, #20]
 801e654:	2a00      	cmp	r2, #0
 801e656:	f340 8129 	ble.w	801e8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801e65a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e65c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801e660:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801e664:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801e668:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801e66a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801e66e:	2b00      	cmp	r3, #0
 801e670:	dd0e      	ble.n	801e690 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e672:	1408      	asrs	r0, r1, #16
 801e674:	d405      	bmi.n	801e682 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e676:	4560      	cmp	r0, ip
 801e678:	da03      	bge.n	801e682 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e67a:	1410      	asrs	r0, r2, #16
 801e67c:	d401      	bmi.n	801e682 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e67e:	42b8      	cmp	r0, r7
 801e680:	db07      	blt.n	801e692 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e682:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e684:	4401      	add	r1, r0
 801e686:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801e688:	3b01      	subs	r3, #1
 801e68a:	4402      	add	r2, r0
 801e68c:	3402      	adds	r4, #2
 801e68e:	e7ee      	b.n	801e66e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e690:	d071      	beq.n	801e776 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e692:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e694:	1e58      	subs	r0, r3, #1
 801e696:	fb05 1500 	mla	r5, r5, r0, r1
 801e69a:	142d      	asrs	r5, r5, #16
 801e69c:	d45f      	bmi.n	801e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801e69e:	4565      	cmp	r5, ip
 801e6a0:	da5d      	bge.n	801e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801e6a2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e6a4:	fb05 2000 	mla	r0, r5, r0, r2
 801e6a8:	1400      	asrs	r0, r0, #16
 801e6aa:	d458      	bmi.n	801e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801e6ac:	42b8      	cmp	r0, r7
 801e6ae:	da56      	bge.n	801e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801e6b0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801e6b4:	4699      	mov	r9, r3
 801e6b6:	46a2      	mov	sl, r4
 801e6b8:	f1b9 0f00 	cmp.w	r9, #0
 801e6bc:	dd57      	ble.n	801e76e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801e6be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801e6c2:	9803      	ldr	r0, [sp, #12]
 801e6c4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801e6c8:	140d      	asrs	r5, r1, #16
 801e6ca:	fb07 000c 	mla	r0, r7, ip, r0
 801e6ce:	f109 39ff 	add.w	r9, r9, #4294967295
 801e6d2:	5d40      	ldrb	r0, [r0, r5]
 801e6d4:	9d04      	ldr	r5, [sp, #16]
 801e6d6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801e6da:	f8ba 5000 	ldrh.w	r5, [sl]
 801e6de:	122f      	asrs	r7, r5, #8
 801e6e0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e6e4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801e6e8:	fb17 f706 	smulbb	r7, r7, r6
 801e6ec:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801e6f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e6f4:	00ed      	lsls	r5, r5, #3
 801e6f6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801e6fa:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801e6fe:	10c7      	asrs	r7, r0, #3
 801e700:	b2ed      	uxtb	r5, r5
 801e702:	00c0      	lsls	r0, r0, #3
 801e704:	fb18 f806 	smulbb	r8, r8, r6
 801e708:	fb15 f506 	smulbb	r5, r5, r6
 801e70c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e710:	b2c0      	uxtb	r0, r0
 801e712:	fa1f fc8c 	uxth.w	ip, ip
 801e716:	fb07 870b 	mla	r7, r7, fp, r8
 801e71a:	fb00 500b 	mla	r0, r0, fp, r5
 801e71e:	b280      	uxth	r0, r0
 801e720:	b2bf      	uxth	r7, r7
 801e722:	f10c 0501 	add.w	r5, ip, #1
 801e726:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e72a:	f107 0801 	add.w	r8, r7, #1
 801e72e:	1c45      	adds	r5, r0, #1
 801e730:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e734:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801e738:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e73a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e73e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e742:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e746:	ea45 0c0c 	orr.w	ip, r5, ip
 801e74a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801e74e:	4401      	add	r1, r0
 801e750:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801e752:	ea4c 0c08 	orr.w	ip, ip, r8
 801e756:	f82a cb02 	strh.w	ip, [sl], #2
 801e75a:	4402      	add	r2, r0
 801e75c:	e7ac      	b.n	801e6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e75e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801e762:	f04f 0800 	mov.w	r8, #0
 801e766:	eb03 0008 	add.w	r0, r3, r8
 801e76a:	2800      	cmp	r0, #0
 801e76c:	dc41      	bgt.n	801e7f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801e76e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e772:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e776:	9b01      	ldr	r3, [sp, #4]
 801e778:	2b00      	cmp	r3, #0
 801e77a:	f340 8097 	ble.w	801e8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801e77e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e782:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e786:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e78a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e78c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e790:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e794:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e798:	eef0 6a62 	vmov.f32	s13, s5
 801e79c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e7a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e7a8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801e7ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e7b0:	eef0 6a43 	vmov.f32	s13, s6
 801e7b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e7b8:	ee12 2a90 	vmov	r2, s5
 801e7bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e7c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7c4:	ee13 2a10 	vmov	r2, s6
 801e7c8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e7ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e7cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7d0:	9314      	str	r3, [sp, #80]	@ 0x50
 801e7d2:	9b01      	ldr	r3, [sp, #4]
 801e7d4:	9a05      	ldr	r2, [sp, #20]
 801e7d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7da:	3b01      	subs	r3, #1
 801e7dc:	9301      	str	r3, [sp, #4]
 801e7de:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801e7e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e7e4:	eeb0 3a67 	vmov.f32	s6, s15
 801e7e8:	bf08      	it	eq
 801e7ea:	4613      	moveq	r3, r2
 801e7ec:	eef0 2a47 	vmov.f32	s5, s14
 801e7f0:	e72c      	b.n	801e64c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e7f2:	140f      	asrs	r7, r1, #16
 801e7f4:	d453      	bmi.n	801e89e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e7f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801e7fa:	42bd      	cmp	r5, r7
 801e7fc:	dd4f      	ble.n	801e89e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e7fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e802:	d44c      	bmi.n	801e89e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e804:	f8de 000c 	ldr.w	r0, [lr, #12]
 801e808:	4560      	cmp	r0, ip
 801e80a:	dd48      	ble.n	801e89e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e80c:	9803      	ldr	r0, [sp, #12]
 801e80e:	b22d      	sxth	r5, r5
 801e810:	fb0c 0505 	mla	r5, ip, r5, r0
 801e814:	5de8      	ldrb	r0, [r5, r7]
 801e816:	9d04      	ldr	r5, [sp, #16]
 801e818:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801e81c:	f06f 0501 	mvn.w	r5, #1
 801e820:	fb05 fb08 	mul.w	fp, r5, r8
 801e824:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e828:	f834 500b 	ldrh.w	r5, [r4, fp]
 801e82c:	122f      	asrs	r7, r5, #8
 801e82e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801e832:	fb17 f706 	smulbb	r7, r7, r6
 801e836:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e83a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e83e:	00ed      	lsls	r5, r5, #3
 801e840:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801e844:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801e848:	10c7      	asrs	r7, r0, #3
 801e84a:	b2ed      	uxtb	r5, r5
 801e84c:	00c0      	lsls	r0, r0, #3
 801e84e:	fb19 f906 	smulbb	r9, r9, r6
 801e852:	fb15 f506 	smulbb	r5, r5, r6
 801e856:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e85a:	b2c0      	uxtb	r0, r0
 801e85c:	fa1f fc8c 	uxth.w	ip, ip
 801e860:	fb07 970a 	mla	r7, r7, sl, r9
 801e864:	fb00 500a 	mla	r0, r0, sl, r5
 801e868:	b2bf      	uxth	r7, r7
 801e86a:	b280      	uxth	r0, r0
 801e86c:	f10c 0501 	add.w	r5, ip, #1
 801e870:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e874:	f107 0901 	add.w	r9, r7, #1
 801e878:	1c45      	adds	r5, r0, #1
 801e87a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e87e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801e882:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e886:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e88a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e88e:	ea45 0c0c 	orr.w	ip, r5, ip
 801e892:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e896:	ea4c 0c09 	orr.w	ip, ip, r9
 801e89a:	f824 c00b 	strh.w	ip, [r4, fp]
 801e89e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e8a0:	4401      	add	r1, r0
 801e8a2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801e8a4:	f108 38ff 	add.w	r8, r8, #4294967295
 801e8a8:	4402      	add	r2, r0
 801e8aa:	e75c      	b.n	801e766 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801e8ac:	b007      	add	sp, #28
 801e8ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e8b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8b6:	b085      	sub	sp, #20
 801e8b8:	4693      	mov	fp, r2
 801e8ba:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801e8bc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e8be:	6870      	ldr	r0, [r6, #4]
 801e8c0:	9100      	str	r1, [sp, #0]
 801e8c2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801e8c6:	fb00 2404 	mla	r4, r0, r4, r2
 801e8ca:	6832      	ldr	r2, [r6, #0]
 801e8cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e8d0:	682a      	ldr	r2, [r5, #0]
 801e8d2:	9201      	str	r2, [sp, #4]
 801e8d4:	686a      	ldr	r2, [r5, #4]
 801e8d6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801e8da:	3204      	adds	r2, #4
 801e8dc:	9202      	str	r2, [sp, #8]
 801e8de:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801e8e2:	9a00      	ldr	r2, [sp, #0]
 801e8e4:	2a00      	cmp	r2, #0
 801e8e6:	dc03      	bgt.n	801e8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e8e8:	f1bb 0f00 	cmp.w	fp, #0
 801e8ec:	f340 80a0 	ble.w	801ea30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801e8f0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e8f2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801e8f6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801e8fa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801e8fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e900:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801e904:	2b00      	cmp	r3, #0
 801e906:	dd0c      	ble.n	801e922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e908:	1406      	asrs	r6, r0, #16
 801e90a:	d405      	bmi.n	801e918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e90c:	454e      	cmp	r6, r9
 801e90e:	da03      	bge.n	801e918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e910:	1416      	asrs	r6, r2, #16
 801e912:	d401      	bmi.n	801e918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e914:	4546      	cmp	r6, r8
 801e916:	db05      	blt.n	801e924 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e918:	4470      	add	r0, lr
 801e91a:	4462      	add	r2, ip
 801e91c:	3b01      	subs	r3, #1
 801e91e:	3402      	adds	r4, #2
 801e920:	e7f0      	b.n	801e904 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e922:	d00f      	beq.n	801e944 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e924:	1e5e      	subs	r6, r3, #1
 801e926:	fb0e 0706 	mla	r7, lr, r6, r0
 801e92a:	143f      	asrs	r7, r7, #16
 801e92c:	d541      	bpl.n	801e9b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801e92e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801e932:	4698      	mov	r8, r3
 801e934:	9603      	str	r6, [sp, #12]
 801e936:	f1b8 0f00 	cmp.w	r8, #0
 801e93a:	dc59      	bgt.n	801e9f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e93c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e940:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e944:	9b00      	ldr	r3, [sp, #0]
 801e946:	2b00      	cmp	r3, #0
 801e948:	dd72      	ble.n	801ea30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801e94a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e94e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e952:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e956:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e958:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e95c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e960:	eeb0 6a62 	vmov.f32	s12, s5
 801e964:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e968:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e96c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e970:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801e974:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e978:	eeb0 6a43 	vmov.f32	s12, s6
 801e97c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e980:	ee12 2a90 	vmov	r2, s5
 801e984:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e988:	fb92 fef3 	sdiv	lr, r2, r3
 801e98c:	ee13 2a10 	vmov	r2, s6
 801e990:	fb92 fcf3 	sdiv	ip, r2, r3
 801e994:	9b00      	ldr	r3, [sp, #0]
 801e996:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e99a:	3b01      	subs	r3, #1
 801e99c:	9300      	str	r3, [sp, #0]
 801e99e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801e9a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e9a4:	eeb0 3a67 	vmov.f32	s6, s15
 801e9a8:	bf08      	it	eq
 801e9aa:	465b      	moveq	r3, fp
 801e9ac:	eef0 2a47 	vmov.f32	s5, s14
 801e9b0:	e797      	b.n	801e8e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e9b2:	454f      	cmp	r7, r9
 801e9b4:	dabb      	bge.n	801e92e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e9b6:	fb0c 2606 	mla	r6, ip, r6, r2
 801e9ba:	1436      	asrs	r6, r6, #16
 801e9bc:	d4b7      	bmi.n	801e92e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e9be:	4546      	cmp	r6, r8
 801e9c0:	dab5      	bge.n	801e92e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e9c2:	461e      	mov	r6, r3
 801e9c4:	46a0      	mov	r8, r4
 801e9c6:	2e00      	cmp	r6, #0
 801e9c8:	ddb8      	ble.n	801e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e9ca:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801e9ce:	9901      	ldr	r1, [sp, #4]
 801e9d0:	1417      	asrs	r7, r2, #16
 801e9d2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801e9d6:	fb0a 1707 	mla	r7, sl, r7, r1
 801e9da:	9902      	ldr	r1, [sp, #8]
 801e9dc:	f817 7009 	ldrb.w	r7, [r7, r9]
 801e9e0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801e9e4:	f828 7b02 	strh.w	r7, [r8], #2
 801e9e8:	4470      	add	r0, lr
 801e9ea:	4462      	add	r2, ip
 801e9ec:	3e01      	subs	r6, #1
 801e9ee:	e7ea      	b.n	801e9c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801e9f0:	ea5f 4920 	movs.w	r9, r0, asr #16
 801e9f4:	d417      	bmi.n	801ea26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801e9f6:	68ae      	ldr	r6, [r5, #8]
 801e9f8:	454e      	cmp	r6, r9
 801e9fa:	dd14      	ble.n	801ea26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801e9fc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801ea00:	d411      	bmi.n	801ea26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ea02:	68ef      	ldr	r7, [r5, #12]
 801ea04:	4557      	cmp	r7, sl
 801ea06:	dd0e      	ble.n	801ea26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ea08:	9f01      	ldr	r7, [sp, #4]
 801ea0a:	b236      	sxth	r6, r6
 801ea0c:	fb0a 7606 	mla	r6, sl, r6, r7
 801ea10:	9f02      	ldr	r7, [sp, #8]
 801ea12:	f816 6009 	ldrb.w	r6, [r6, r9]
 801ea16:	f06f 0101 	mvn.w	r1, #1
 801ea1a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801ea1e:	fb01 f608 	mul.w	r6, r1, r8
 801ea22:	9903      	ldr	r1, [sp, #12]
 801ea24:	538f      	strh	r7, [r1, r6]
 801ea26:	4470      	add	r0, lr
 801ea28:	4462      	add	r2, ip
 801ea2a:	f108 38ff 	add.w	r8, r8, #4294967295
 801ea2e:	e782      	b.n	801e936 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ea30:	b005      	add	sp, #20
 801ea32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ea36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea3a:	b087      	sub	sp, #28
 801ea3c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ea3e:	9205      	str	r2, [sp, #20]
 801ea40:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801ea44:	9203      	str	r2, [sp, #12]
 801ea46:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801ea4a:	9102      	str	r1, [sp, #8]
 801ea4c:	6861      	ldr	r1, [r4, #4]
 801ea4e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801ea52:	fb01 2000 	mla	r0, r1, r0, r2
 801ea56:	6822      	ldr	r2, [r4, #0]
 801ea58:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801ea5c:	9200      	str	r2, [sp, #0]
 801ea5e:	f8dc 2000 	ldr.w	r2, [ip]
 801ea62:	9204      	str	r2, [sp, #16]
 801ea64:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ea68:	3204      	adds	r2, #4
 801ea6a:	9201      	str	r2, [sp, #4]
 801ea6c:	9a03      	ldr	r2, [sp, #12]
 801ea6e:	43d5      	mvns	r5, r2
 801ea70:	b2ed      	uxtb	r5, r5
 801ea72:	9a02      	ldr	r2, [sp, #8]
 801ea74:	2a00      	cmp	r2, #0
 801ea76:	dc03      	bgt.n	801ea80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ea78:	9a05      	ldr	r2, [sp, #20]
 801ea7a:	2a00      	cmp	r2, #0
 801ea7c:	f340 812c 	ble.w	801ecd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ea80:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ea82:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801ea86:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801ea8a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ea8e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ea90:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ea94:	2b00      	cmp	r3, #0
 801ea96:	dd10      	ble.n	801eaba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ea98:	140c      	asrs	r4, r1, #16
 801ea9a:	d405      	bmi.n	801eaa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ea9c:	4574      	cmp	r4, lr
 801ea9e:	da03      	bge.n	801eaa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eaa0:	1414      	asrs	r4, r2, #16
 801eaa2:	d401      	bmi.n	801eaa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eaa4:	42bc      	cmp	r4, r7
 801eaa6:	db09      	blt.n	801eabc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801eaa8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801eaaa:	9800      	ldr	r0, [sp, #0]
 801eaac:	4421      	add	r1, r4
 801eaae:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801eab0:	3002      	adds	r0, #2
 801eab2:	4422      	add	r2, r4
 801eab4:	3b01      	subs	r3, #1
 801eab6:	9000      	str	r0, [sp, #0]
 801eab8:	e7ec      	b.n	801ea94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801eaba:	d071      	beq.n	801eba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801eabc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801eabe:	1e5c      	subs	r4, r3, #1
 801eac0:	fb06 1604 	mla	r6, r6, r4, r1
 801eac4:	1436      	asrs	r6, r6, #16
 801eac6:	d45d      	bmi.n	801eb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801eac8:	4576      	cmp	r6, lr
 801eaca:	da5b      	bge.n	801eb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801eacc:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801eace:	fb06 2404 	mla	r4, r6, r4, r2
 801ead2:	1424      	asrs	r4, r4, #16
 801ead4:	d456      	bmi.n	801eb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ead6:	42bc      	cmp	r4, r7
 801ead8:	da54      	bge.n	801eb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801eada:	f8dd 9000 	ldr.w	r9, [sp]
 801eade:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801eae2:	4698      	mov	r8, r3
 801eae4:	f1b8 0f00 	cmp.w	r8, #0
 801eae8:	dd54      	ble.n	801eb94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801eaea:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801eaee:	9804      	ldr	r0, [sp, #16]
 801eaf0:	1414      	asrs	r4, r2, #16
 801eaf2:	fb07 0404 	mla	r4, r7, r4, r0
 801eaf6:	140e      	asrs	r6, r1, #16
 801eaf8:	9801      	ldr	r0, [sp, #4]
 801eafa:	f814 e006 	ldrb.w	lr, [r4, r6]
 801eafe:	f8b9 4000 	ldrh.w	r4, [r9]
 801eb02:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801eb06:	eb00 0b0e 	add.w	fp, r0, lr
 801eb0a:	1227      	asrs	r7, r4, #8
 801eb0c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801eb10:	f89b b001 	ldrb.w	fp, [fp, #1]
 801eb14:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801eb18:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801eb1a:	fb16 f60a 	smulbb	r6, r6, sl
 801eb1e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801eb22:	fb07 6705 	mla	r7, r7, r5, r6
 801eb26:	10e6      	asrs	r6, r4, #3
 801eb28:	00e4      	lsls	r4, r4, #3
 801eb2a:	b2e4      	uxtb	r4, r4
 801eb2c:	fb1b fb0a 	smulbb	fp, fp, sl
 801eb30:	fb14 f405 	smulbb	r4, r4, r5
 801eb34:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801eb38:	b2bf      	uxth	r7, r7
 801eb3a:	fb06 b605 	mla	r6, r6, r5, fp
 801eb3e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801eb42:	b2b6      	uxth	r6, r6
 801eb44:	fa1f fe8e 	uxth.w	lr, lr
 801eb48:	1c7c      	adds	r4, r7, #1
 801eb4a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801eb4e:	f106 0b01 	add.w	fp, r6, #1
 801eb52:	f10e 0401 	add.w	r4, lr, #1
 801eb56:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801eb5a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801eb5e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801eb62:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801eb66:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801eb6a:	4327      	orrs	r7, r4
 801eb6c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801eb70:	4401      	add	r1, r0
 801eb72:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801eb74:	ea47 070b 	orr.w	r7, r7, fp
 801eb78:	f829 7b02 	strh.w	r7, [r9], #2
 801eb7c:	4402      	add	r2, r0
 801eb7e:	f108 38ff 	add.w	r8, r8, #4294967295
 801eb82:	e7af      	b.n	801eae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801eb84:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801eb88:	f04f 0e00 	mov.w	lr, #0
 801eb8c:	eb03 040e 	add.w	r4, r3, lr
 801eb90:	2c00      	cmp	r4, #0
 801eb92:	dc43      	bgt.n	801ec1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801eb94:	9a00      	ldr	r2, [sp, #0]
 801eb96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801eb9a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eb9e:	9300      	str	r3, [sp, #0]
 801eba0:	9b02      	ldr	r3, [sp, #8]
 801eba2:	2b00      	cmp	r3, #0
 801eba4:	f340 8098 	ble.w	801ecd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801eba8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ebac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ebb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ebb4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ebb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ebba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ebbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ebc2:	eef0 6a62 	vmov.f32	s13, s5
 801ebc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ebca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ebce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ebd2:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801ebd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ebda:	eef0 6a43 	vmov.f32	s13, s6
 801ebde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ebe2:	ee12 2a90 	vmov	r2, s5
 801ebe6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ebea:	fb92 f3f3 	sdiv	r3, r2, r3
 801ebee:	ee13 2a10 	vmov	r2, s6
 801ebf2:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ebf4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ebf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ebfa:	9314      	str	r3, [sp, #80]	@ 0x50
 801ebfc:	9b02      	ldr	r3, [sp, #8]
 801ebfe:	9a05      	ldr	r2, [sp, #20]
 801ec00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ec04:	3b01      	subs	r3, #1
 801ec06:	9302      	str	r3, [sp, #8]
 801ec08:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801ec0c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ec0e:	eeb0 3a67 	vmov.f32	s6, s15
 801ec12:	bf08      	it	eq
 801ec14:	4613      	moveq	r3, r2
 801ec16:	eef0 2a47 	vmov.f32	s5, s14
 801ec1a:	e72a      	b.n	801ea72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ec1c:	140f      	asrs	r7, r1, #16
 801ec1e:	d454      	bmi.n	801ecca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ec20:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801ec24:	42be      	cmp	r6, r7
 801ec26:	dd50      	ble.n	801ecca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ec28:	ea5f 4822 	movs.w	r8, r2, asr #16
 801ec2c:	d44d      	bmi.n	801ecca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ec2e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801ec32:	4544      	cmp	r4, r8
 801ec34:	dd49      	ble.n	801ecca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ec36:	9c04      	ldr	r4, [sp, #16]
 801ec38:	b236      	sxth	r6, r6
 801ec3a:	fb08 4606 	mla	r6, r8, r6, r4
 801ec3e:	f06f 0001 	mvn.w	r0, #1
 801ec42:	f816 8007 	ldrb.w	r8, [r6, r7]
 801ec46:	9c01      	ldr	r4, [sp, #4]
 801ec48:	fb00 fa0e 	mul.w	sl, r0, lr
 801ec4c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ec50:	9800      	ldr	r0, [sp, #0]
 801ec52:	eb04 0b08 	add.w	fp, r4, r8
 801ec56:	f830 400a 	ldrh.w	r4, [r0, sl]
 801ec5a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ec5e:	9801      	ldr	r0, [sp, #4]
 801ec60:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ec64:	f810 8008 	ldrb.w	r8, [r0, r8]
 801ec68:	9800      	ldr	r0, [sp, #0]
 801ec6a:	1227      	asrs	r7, r4, #8
 801ec6c:	fb16 f609 	smulbb	r6, r6, r9
 801ec70:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ec74:	fb07 6705 	mla	r7, r7, r5, r6
 801ec78:	10e6      	asrs	r6, r4, #3
 801ec7a:	00e4      	lsls	r4, r4, #3
 801ec7c:	b2e4      	uxtb	r4, r4
 801ec7e:	fb1b fb09 	smulbb	fp, fp, r9
 801ec82:	fb14 f405 	smulbb	r4, r4, r5
 801ec86:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801ec8a:	b2bf      	uxth	r7, r7
 801ec8c:	fb06 b605 	mla	r6, r6, r5, fp
 801ec90:	fb08 4809 	mla	r8, r8, r9, r4
 801ec94:	b2b6      	uxth	r6, r6
 801ec96:	fa1f f888 	uxth.w	r8, r8
 801ec9a:	1c7c      	adds	r4, r7, #1
 801ec9c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801eca0:	f106 0b01 	add.w	fp, r6, #1
 801eca4:	f108 0401 	add.w	r4, r8, #1
 801eca8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801ecac:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801ecb0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801ecb4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801ecb8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801ecbc:	4327      	orrs	r7, r4
 801ecbe:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801ecc2:	ea47 070b 	orr.w	r7, r7, fp
 801ecc6:	f820 700a 	strh.w	r7, [r0, sl]
 801ecca:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801eccc:	4401      	add	r1, r0
 801ecce:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ecd0:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ecd4:	4402      	add	r2, r0
 801ecd6:	e759      	b.n	801eb8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ecd8:	b007      	add	sp, #28
 801ecda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801ece0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ece0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ece4:	b085      	sub	sp, #20
 801ece6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ecea:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801ecec:	9203      	str	r2, [sp, #12]
 801ecee:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801ecf2:	6870      	ldr	r0, [r6, #4]
 801ecf4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ecf6:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801ecfa:	686f      	ldr	r7, [r5, #4]
 801ecfc:	9101      	str	r1, [sp, #4]
 801ecfe:	fb00 2404 	mla	r4, r0, r4, r2
 801ed02:	6832      	ldr	r2, [r6, #0]
 801ed04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ed08:	682a      	ldr	r2, [r5, #0]
 801ed0a:	9202      	str	r2, [sp, #8]
 801ed0c:	3704      	adds	r7, #4
 801ed0e:	9a01      	ldr	r2, [sp, #4]
 801ed10:	2a00      	cmp	r2, #0
 801ed12:	dc03      	bgt.n	801ed1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ed14:	9a03      	ldr	r2, [sp, #12]
 801ed16:	2a00      	cmp	r2, #0
 801ed18:	f340 80cc 	ble.w	801eeb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ed1c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ed1e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ed22:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ed26:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801ed2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ed2c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ed30:	2b00      	cmp	r3, #0
 801ed32:	dd0d      	ble.n	801ed50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed34:	1406      	asrs	r6, r0, #16
 801ed36:	d405      	bmi.n	801ed44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ed38:	454e      	cmp	r6, r9
 801ed3a:	da03      	bge.n	801ed44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ed3c:	1416      	asrs	r6, r2, #16
 801ed3e:	d401      	bmi.n	801ed44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ed40:	4546      	cmp	r6, r8
 801ed42:	db06      	blt.n	801ed52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ed44:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801ed46:	4460      	add	r0, ip
 801ed48:	4432      	add	r2, r6
 801ed4a:	3b01      	subs	r3, #1
 801ed4c:	3402      	adds	r4, #2
 801ed4e:	e7ef      	b.n	801ed30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ed50:	d00f      	beq.n	801ed72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ed52:	1e5e      	subs	r6, r3, #1
 801ed54:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ed58:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ed5c:	d543      	bpl.n	801ede6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ed5e:	4698      	mov	r8, r3
 801ed60:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ed64:	f1b8 0f00 	cmp.w	r8, #0
 801ed68:	dc71      	bgt.n	801ee4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ed6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ed6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ed72:	9b01      	ldr	r3, [sp, #4]
 801ed74:	2b00      	cmp	r3, #0
 801ed76:	f340 809d 	ble.w	801eeb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ed7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ed86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ed88:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed8c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed90:	eeb0 6a62 	vmov.f32	s12, s5
 801ed94:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ed9c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eda0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801eda4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eda8:	eeb0 6a43 	vmov.f32	s12, s6
 801edac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edb0:	ee12 2a90 	vmov	r2, s5
 801edb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edb8:	fb92 fcf3 	sdiv	ip, r2, r3
 801edbc:	ee13 2a10 	vmov	r2, s6
 801edc0:	fb92 f3f3 	sdiv	r3, r2, r3
 801edc4:	9312      	str	r3, [sp, #72]	@ 0x48
 801edc6:	9b01      	ldr	r3, [sp, #4]
 801edc8:	9a03      	ldr	r2, [sp, #12]
 801edca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801edce:	3b01      	subs	r3, #1
 801edd0:	9301      	str	r3, [sp, #4]
 801edd2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801edd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801edd8:	eeb0 3a67 	vmov.f32	s6, s15
 801eddc:	bf08      	it	eq
 801edde:	4613      	moveq	r3, r2
 801ede0:	eef0 2a47 	vmov.f32	s5, s14
 801ede4:	e793      	b.n	801ed0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801ede6:	45ce      	cmp	lr, r9
 801ede8:	dab9      	bge.n	801ed5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801edea:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801edec:	fb01 2606 	mla	r6, r1, r6, r2
 801edf0:	1436      	asrs	r6, r6, #16
 801edf2:	d4b4      	bmi.n	801ed5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801edf4:	4546      	cmp	r6, r8
 801edf6:	dab2      	bge.n	801ed5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801edf8:	4698      	mov	r8, r3
 801edfa:	46a2      	mov	sl, r4
 801edfc:	f1b8 0f00 	cmp.w	r8, #0
 801ee00:	ddb3      	ble.n	801ed6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ee02:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ee06:	9902      	ldr	r1, [sp, #8]
 801ee08:	1416      	asrs	r6, r2, #16
 801ee0a:	fb09 1606 	mla	r6, r9, r6, r1
 801ee0e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801ee12:	492a      	ldr	r1, [pc, #168]	@ (801eebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801ee14:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801ee18:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ee1c:	eb07 0b0e 	add.w	fp, r7, lr
 801ee20:	4460      	add	r0, ip
 801ee22:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801ee26:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801ee2a:	00f6      	lsls	r6, r6, #3
 801ee2c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801ee30:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801ee34:	ea49 0606 	orr.w	r6, r9, r6
 801ee38:	f817 900e 	ldrb.w	r9, [r7, lr]
 801ee3c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ee3e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801ee42:	f82a 6b02 	strh.w	r6, [sl], #2
 801ee46:	440a      	add	r2, r1
 801ee48:	f108 38ff 	add.w	r8, r8, #4294967295
 801ee4c:	e7d6      	b.n	801edfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ee4e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ee52:	d429      	bmi.n	801eea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ee54:	68ae      	ldr	r6, [r5, #8]
 801ee56:	454e      	cmp	r6, r9
 801ee58:	dd26      	ble.n	801eea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ee5a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801ee5e:	d423      	bmi.n	801eea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ee60:	68e9      	ldr	r1, [r5, #12]
 801ee62:	4559      	cmp	r1, fp
 801ee64:	dd20      	ble.n	801eea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ee66:	9902      	ldr	r1, [sp, #8]
 801ee68:	fa0f fe86 	sxth.w	lr, r6
 801ee6c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801ee70:	f06f 0101 	mvn.w	r1, #1
 801ee74:	f81e e009 	ldrb.w	lr, [lr, r9]
 801ee78:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ee7c:	eb07 060e 	add.w	r6, r7, lr
 801ee80:	fb01 f908 	mul.w	r9, r1, r8
 801ee84:	f896 b002 	ldrb.w	fp, [r6, #2]
 801ee88:	7876      	ldrb	r6, [r6, #1]
 801ee8a:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801ee8e:	00f6      	lsls	r6, r6, #3
 801ee90:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801ee94:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801ee98:	ea4b 0606 	orr.w	r6, fp, r6
 801ee9c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801eea0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801eea4:	f82a 6009 	strh.w	r6, [sl, r9]
 801eea8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801eeaa:	4460      	add	r0, ip
 801eeac:	440a      	add	r2, r1
 801eeae:	f108 38ff 	add.w	r8, r8, #4294967295
 801eeb2:	e757      	b.n	801ed64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801eeb4:	b005      	add	sp, #20
 801eeb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eeba:	bf00      	nop
 801eebc:	fffff800 	.word	0xfffff800

0801eec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eec4:	b087      	sub	sp, #28
 801eec6:	468b      	mov	fp, r1
 801eec8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801eeca:	9204      	str	r2, [sp, #16]
 801eecc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801eed0:	9205      	str	r2, [sp, #20]
 801eed2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801eed6:	6841      	ldr	r1, [r0, #4]
 801eed8:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801eedc:	fb01 2404 	mla	r4, r1, r4, r2
 801eee0:	6802      	ldr	r2, [r0, #0]
 801eee2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801eee6:	f8dc 2000 	ldr.w	r2, [ip]
 801eeea:	9201      	str	r2, [sp, #4]
 801eeec:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801eef0:	3204      	adds	r2, #4
 801eef2:	9202      	str	r2, [sp, #8]
 801eef4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801eef8:	f1bb 0f00 	cmp.w	fp, #0
 801eefc:	dc03      	bgt.n	801ef06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801eefe:	9a04      	ldr	r2, [sp, #16]
 801ef00:	2a00      	cmp	r2, #0
 801ef02:	f340 8138 	ble.w	801f176 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ef06:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ef08:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ef0c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801ef10:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801ef14:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ef16:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ef1a:	2b00      	cmp	r3, #0
 801ef1c:	dd0e      	ble.n	801ef3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ef1e:	1402      	asrs	r2, r0, #16
 801ef20:	d405      	bmi.n	801ef2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ef22:	42ba      	cmp	r2, r7
 801ef24:	da03      	bge.n	801ef2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ef26:	140a      	asrs	r2, r1, #16
 801ef28:	d401      	bmi.n	801ef2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ef2a:	42b2      	cmp	r2, r6
 801ef2c:	db07      	blt.n	801ef3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ef2e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ef30:	4410      	add	r0, r2
 801ef32:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ef34:	3b01      	subs	r3, #1
 801ef36:	4411      	add	r1, r2
 801ef38:	3402      	adds	r4, #2
 801ef3a:	e7ee      	b.n	801ef1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ef3c:	d019      	beq.n	801ef72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ef3e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ef40:	1e5a      	subs	r2, r3, #1
 801ef42:	fb05 0502 	mla	r5, r5, r2, r0
 801ef46:	142d      	asrs	r5, r5, #16
 801ef48:	d409      	bmi.n	801ef5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ef4a:	42bd      	cmp	r5, r7
 801ef4c:	da07      	bge.n	801ef5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ef4e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ef50:	fb05 1202 	mla	r2, r5, r2, r1
 801ef54:	1412      	asrs	r2, r2, #16
 801ef56:	d402      	bmi.n	801ef5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ef58:	42b2      	cmp	r2, r6
 801ef5a:	f2c0 80ac 	blt.w	801f0b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801ef5e:	f04f 0e00 	mov.w	lr, #0
 801ef62:	eb03 020e 	add.w	r2, r3, lr
 801ef66:	2a00      	cmp	r2, #0
 801ef68:	dc3e      	bgt.n	801efe8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ef6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ef6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef72:	f1bb 0f00 	cmp.w	fp, #0
 801ef76:	f340 80fe 	ble.w	801f176 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ef7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ef7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ef82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ef86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ef88:	f1bb 0b01 	subs.w	fp, fp, #1
 801ef8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ef90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ef94:	eeb0 6a62 	vmov.f32	s12, s5
 801ef98:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ef9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801efa0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801efa4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801efa8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801efac:	eeb0 6a43 	vmov.f32	s12, s6
 801efb0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801efb4:	ee12 2a90 	vmov	r2, s5
 801efb8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801efbc:	fb92 f3f3 	sdiv	r3, r2, r3
 801efc0:	ee13 2a10 	vmov	r2, s6
 801efc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801efc8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801efca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801efcc:	fb92 f3f3 	sdiv	r3, r2, r3
 801efd0:	9a04      	ldr	r2, [sp, #16]
 801efd2:	9314      	str	r3, [sp, #80]	@ 0x50
 801efd4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801efd8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801efda:	eeb0 3a67 	vmov.f32	s6, s15
 801efde:	bf08      	it	eq
 801efe0:	4613      	moveq	r3, r2
 801efe2:	eef0 2a47 	vmov.f32	s5, s14
 801efe6:	e787      	b.n	801eef8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801efe8:	1406      	asrs	r6, r0, #16
 801efea:	d45d      	bmi.n	801f0a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801efec:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801eff0:	42b5      	cmp	r5, r6
 801eff2:	dd59      	ble.n	801f0a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801eff4:	140f      	asrs	r7, r1, #16
 801eff6:	d457      	bmi.n	801f0a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801eff8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801effc:	42ba      	cmp	r2, r7
 801effe:	dd53      	ble.n	801f0a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f000:	9a01      	ldr	r2, [sp, #4]
 801f002:	b22d      	sxth	r5, r5
 801f004:	fb07 2505 	mla	r5, r7, r5, r2
 801f008:	5daa      	ldrb	r2, [r5, r6]
 801f00a:	9d02      	ldr	r5, [sp, #8]
 801f00c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f010:	0e2e      	lsrs	r6, r5, #24
 801f012:	d049      	beq.n	801f0a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f014:	f06f 0201 	mvn.w	r2, #1
 801f018:	fb02 f20e 	mul.w	r2, r2, lr
 801f01c:	9203      	str	r2, [sp, #12]
 801f01e:	f834 8002 	ldrh.w	r8, [r4, r2]
 801f022:	9a05      	ldr	r2, [sp, #20]
 801f024:	4356      	muls	r6, r2
 801f026:	1c72      	adds	r2, r6, #1
 801f028:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f02c:	1212      	asrs	r2, r2, #8
 801f02e:	fa1f f982 	uxth.w	r9, r2
 801f032:	ea4f 2728 	mov.w	r7, r8, asr #8
 801f036:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f03a:	43d2      	mvns	r2, r2
 801f03c:	b2d2      	uxtb	r2, r2
 801f03e:	fb16 f609 	smulbb	r6, r6, r9
 801f042:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f046:	fb07 6702 	mla	r7, r7, r2, r6
 801f04a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f04e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801f052:	b2ed      	uxtb	r5, r5
 801f054:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f058:	fa5f f888 	uxtb.w	r8, r8
 801f05c:	fb15 f509 	smulbb	r5, r5, r9
 801f060:	fb08 5502 	mla	r5, r8, r2, r5
 801f064:	b2bf      	uxth	r7, r7
 801f066:	fb1a fa09 	smulbb	sl, sl, r9
 801f06a:	b2ad      	uxth	r5, r5
 801f06c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f070:	fb06 a602 	mla	r6, r6, r2, sl
 801f074:	1c7a      	adds	r2, r7, #1
 801f076:	f105 0a01 	add.w	sl, r5, #1
 801f07a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f07e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f082:	b2b6      	uxth	r6, r6
 801f084:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f088:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f08c:	ea4a 0707 	orr.w	r7, sl, r7
 801f090:	f106 0a01 	add.w	sl, r6, #1
 801f094:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f098:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f09c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f0a0:	9a03      	ldr	r2, [sp, #12]
 801f0a2:	ea47 070a 	orr.w	r7, r7, sl
 801f0a6:	52a7      	strh	r7, [r4, r2]
 801f0a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f0aa:	4410      	add	r0, r2
 801f0ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f0ae:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f0b2:	4411      	add	r1, r2
 801f0b4:	e755      	b.n	801ef62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801f0b6:	f04f 0800 	mov.w	r8, #0
 801f0ba:	eba3 0208 	sub.w	r2, r3, r8
 801f0be:	2a00      	cmp	r2, #0
 801f0c0:	f77f af53 	ble.w	801ef6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801f0c4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801f0c8:	9f01      	ldr	r7, [sp, #4]
 801f0ca:	140a      	asrs	r2, r1, #16
 801f0cc:	1405      	asrs	r5, r0, #16
 801f0ce:	fb06 7202 	mla	r2, r6, r2, r7
 801f0d2:	5d52      	ldrb	r2, [r2, r5]
 801f0d4:	9d02      	ldr	r5, [sp, #8]
 801f0d6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f0da:	0e2e      	lsrs	r6, r5, #24
 801f0dc:	d044      	beq.n	801f168 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f0de:	9a05      	ldr	r2, [sp, #20]
 801f0e0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801f0e4:	4356      	muls	r6, r2
 801f0e6:	1c72      	adds	r2, r6, #1
 801f0e8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f0ec:	1212      	asrs	r2, r2, #8
 801f0ee:	fa1f f982 	uxth.w	r9, r2
 801f0f2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801f0f6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f0fa:	43d2      	mvns	r2, r2
 801f0fc:	b2d2      	uxtb	r2, r2
 801f0fe:	fb16 f609 	smulbb	r6, r6, r9
 801f102:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f106:	fb07 6702 	mla	r7, r7, r2, r6
 801f10a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f10e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f112:	b2ed      	uxtb	r5, r5
 801f114:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f118:	fa5f fe8e 	uxtb.w	lr, lr
 801f11c:	fb15 f509 	smulbb	r5, r5, r9
 801f120:	fb0e 5502 	mla	r5, lr, r2, r5
 801f124:	b2bf      	uxth	r7, r7
 801f126:	fb1a fa09 	smulbb	sl, sl, r9
 801f12a:	b2ad      	uxth	r5, r5
 801f12c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f130:	fb06 a602 	mla	r6, r6, r2, sl
 801f134:	1c7a      	adds	r2, r7, #1
 801f136:	f105 0a01 	add.w	sl, r5, #1
 801f13a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f13e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f142:	b2b6      	uxth	r6, r6
 801f144:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f148:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f14c:	ea4a 0707 	orr.w	r7, sl, r7
 801f150:	f106 0a01 	add.w	sl, r6, #1
 801f154:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f158:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f15c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f160:	ea47 070a 	orr.w	r7, r7, sl
 801f164:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801f168:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f16a:	4410      	add	r0, r2
 801f16c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f16e:	f108 0801 	add.w	r8, r8, #1
 801f172:	4411      	add	r1, r2
 801f174:	e7a1      	b.n	801f0ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801f176:	b007      	add	sp, #28
 801f178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f17c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f17c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f180:	b085      	sub	sp, #20
 801f182:	468b      	mov	fp, r1
 801f184:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f186:	9203      	str	r2, [sp, #12]
 801f188:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801f18c:	6841      	ldr	r1, [r0, #4]
 801f18e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801f192:	fb01 2404 	mla	r4, r1, r4, r2
 801f196:	6802      	ldr	r2, [r0, #0]
 801f198:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f19c:	f8de 2000 	ldr.w	r2, [lr]
 801f1a0:	9200      	str	r2, [sp, #0]
 801f1a2:	f8de 2004 	ldr.w	r2, [lr, #4]
 801f1a6:	3204      	adds	r2, #4
 801f1a8:	9201      	str	r2, [sp, #4]
 801f1aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f1ae:	f1bb 0f00 	cmp.w	fp, #0
 801f1b2:	dc03      	bgt.n	801f1bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f1b4:	9a03      	ldr	r2, [sp, #12]
 801f1b6:	2a00      	cmp	r2, #0
 801f1b8:	f340 8153 	ble.w	801f462 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f1bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f1be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801f1c2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801f1c6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f1ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f1cc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f1d0:	2b00      	cmp	r3, #0
 801f1d2:	dd0e      	ble.n	801f1f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f1d4:	1408      	asrs	r0, r1, #16
 801f1d6:	d405      	bmi.n	801f1e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f1d8:	42b8      	cmp	r0, r7
 801f1da:	da03      	bge.n	801f1e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f1dc:	1410      	asrs	r0, r2, #16
 801f1de:	d401      	bmi.n	801f1e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f1e0:	42b0      	cmp	r0, r6
 801f1e2:	db07      	blt.n	801f1f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1e4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f1e6:	4401      	add	r1, r0
 801f1e8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f1ea:	3b01      	subs	r3, #1
 801f1ec:	4402      	add	r2, r0
 801f1ee:	3402      	adds	r4, #2
 801f1f0:	e7ee      	b.n	801f1d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f1f2:	d017      	beq.n	801f224 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801f1f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f1f6:	1e58      	subs	r0, r3, #1
 801f1f8:	fb05 1500 	mla	r5, r5, r0, r1
 801f1fc:	142d      	asrs	r5, r5, #16
 801f1fe:	d409      	bmi.n	801f214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f200:	42bd      	cmp	r5, r7
 801f202:	da07      	bge.n	801f214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f204:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f206:	fb05 2000 	mla	r0, r5, r0, r2
 801f20a:	1400      	asrs	r0, r0, #16
 801f20c:	d402      	bmi.n	801f214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f20e:	42b0      	cmp	r0, r6
 801f210:	f2c0 80bc 	blt.w	801f38c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801f214:	2600      	movs	r6, #0
 801f216:	1998      	adds	r0, r3, r6
 801f218:	2800      	cmp	r0, #0
 801f21a:	dc3e      	bgt.n	801f29a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801f21c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f220:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f224:	f1bb 0f00 	cmp.w	fp, #0
 801f228:	f340 811b 	ble.w	801f462 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f22c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f230:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f234:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f238:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f23a:	f1bb 0b01 	subs.w	fp, fp, #1
 801f23e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f242:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f246:	eeb0 6a62 	vmov.f32	s12, s5
 801f24a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f24e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f252:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f256:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f25a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f25e:	eeb0 6a43 	vmov.f32	s12, s6
 801f262:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f266:	ee12 2a90 	vmov	r2, s5
 801f26a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f26e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f272:	ee13 2a10 	vmov	r2, s6
 801f276:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f27a:	9311      	str	r3, [sp, #68]	@ 0x44
 801f27c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f27e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f282:	9a03      	ldr	r2, [sp, #12]
 801f284:	9312      	str	r3, [sp, #72]	@ 0x48
 801f286:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f28a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f28c:	eeb0 3a67 	vmov.f32	s6, s15
 801f290:	bf08      	it	eq
 801f292:	4613      	moveq	r3, r2
 801f294:	eef0 2a47 	vmov.f32	s5, s14
 801f298:	e789      	b.n	801f1ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f29a:	140f      	asrs	r7, r1, #16
 801f29c:	d426      	bmi.n	801f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f29e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801f2a2:	42bd      	cmp	r5, r7
 801f2a4:	dd22      	ble.n	801f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f2a6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801f2aa:	d41f      	bmi.n	801f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f2ac:	f8de 000c 	ldr.w	r0, [lr, #12]
 801f2b0:	4560      	cmp	r0, ip
 801f2b2:	dd1b      	ble.n	801f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f2b4:	9800      	ldr	r0, [sp, #0]
 801f2b6:	b22d      	sxth	r5, r5
 801f2b8:	fb0c 0505 	mla	r5, ip, r5, r0
 801f2bc:	5de8      	ldrb	r0, [r5, r7]
 801f2be:	9d01      	ldr	r5, [sp, #4]
 801f2c0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801f2c4:	0e07      	lsrs	r7, r0, #24
 801f2c6:	2fff      	cmp	r7, #255	@ 0xff
 801f2c8:	d116      	bne.n	801f2f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801f2ca:	f06f 0501 	mvn.w	r5, #1
 801f2ce:	fb05 f706 	mul.w	r7, r5, r6
 801f2d2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801f2d6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801f2da:	0945      	lsrs	r5, r0, #5
 801f2dc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f2e0:	ea4c 0505 	orr.w	r5, ip, r5
 801f2e4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801f2e8:	4305      	orrs	r5, r0
 801f2ea:	53e5      	strh	r5, [r4, r7]
 801f2ec:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f2ee:	4401      	add	r1, r0
 801f2f0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f2f2:	3e01      	subs	r6, #1
 801f2f4:	4402      	add	r2, r0
 801f2f6:	e78e      	b.n	801f216 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f2f8:	b2fd      	uxtb	r5, r7
 801f2fa:	2f00      	cmp	r7, #0
 801f2fc:	d0f6      	beq.n	801f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f2fe:	f06f 0701 	mvn.w	r7, #1
 801f302:	4377      	muls	r7, r6
 801f304:	fa1f f985 	uxth.w	r9, r5
 801f308:	f834 8007 	ldrh.w	r8, [r4, r7]
 801f30c:	9702      	str	r7, [sp, #8]
 801f30e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801f312:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801f316:	43ed      	mvns	r5, r5
 801f318:	b2ed      	uxtb	r5, r5
 801f31a:	fb17 f709 	smulbb	r7, r7, r9
 801f31e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f322:	fb0c 7c05 	mla	ip, ip, r5, r7
 801f326:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801f32a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801f32e:	b2c0      	uxtb	r0, r0
 801f330:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f334:	fa5f f888 	uxtb.w	r8, r8
 801f338:	fb10 f009 	smulbb	r0, r0, r9
 801f33c:	fb08 0005 	mla	r0, r8, r5, r0
 801f340:	b280      	uxth	r0, r0
 801f342:	fa1f fc8c 	uxth.w	ip, ip
 801f346:	fb1a fa09 	smulbb	sl, sl, r9
 801f34a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f34e:	fb07 a705 	mla	r7, r7, r5, sl
 801f352:	f100 0a01 	add.w	sl, r0, #1
 801f356:	f10c 0501 	add.w	r5, ip, #1
 801f35a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801f35e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801f362:	b2bf      	uxth	r7, r7
 801f364:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f368:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f36c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801f370:	f107 0a01 	add.w	sl, r7, #1
 801f374:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801f378:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f37c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f380:	9802      	ldr	r0, [sp, #8]
 801f382:	ea4c 0c0a 	orr.w	ip, ip, sl
 801f386:	f824 c000 	strh.w	ip, [r4, r0]
 801f38a:	e7af      	b.n	801f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f38c:	f04f 0800 	mov.w	r8, #0
 801f390:	eba3 0008 	sub.w	r0, r3, r8
 801f394:	2800      	cmp	r0, #0
 801f396:	f77f af41 	ble.w	801f21c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801f39a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801f39e:	9f00      	ldr	r7, [sp, #0]
 801f3a0:	1410      	asrs	r0, r2, #16
 801f3a2:	140d      	asrs	r5, r1, #16
 801f3a4:	fb06 7000 	mla	r0, r6, r0, r7
 801f3a8:	5d40      	ldrb	r0, [r0, r5]
 801f3aa:	9d01      	ldr	r5, [sp, #4]
 801f3ac:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801f3b0:	0e2e      	lsrs	r6, r5, #24
 801f3b2:	2eff      	cmp	r6, #255	@ 0xff
 801f3b4:	d112      	bne.n	801f3dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801f3b6:	482c      	ldr	r0, [pc, #176]	@ (801f468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801f3b8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801f3bc:	0968      	lsrs	r0, r5, #5
 801f3be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f3c2:	4330      	orrs	r0, r6
 801f3c4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801f3c8:	4328      	orrs	r0, r5
 801f3ca:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801f3ce:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f3d0:	4401      	add	r1, r0
 801f3d2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f3d4:	f108 0801 	add.w	r8, r8, #1
 801f3d8:	4402      	add	r2, r0
 801f3da:	e7d9      	b.n	801f390 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f3dc:	b2f0      	uxtb	r0, r6
 801f3de:	2e00      	cmp	r6, #0
 801f3e0:	d0f5      	beq.n	801f3ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f3e2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801f3e6:	fa1f f980 	uxth.w	r9, r0
 801f3ea:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f3ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f3f2:	43c0      	mvns	r0, r0
 801f3f4:	b2c0      	uxtb	r0, r0
 801f3f6:	fb16 f609 	smulbb	r6, r6, r9
 801f3fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f3fe:	fb07 6700 	mla	r7, r7, r0, r6
 801f402:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f406:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801f40a:	b2ed      	uxtb	r5, r5
 801f40c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f410:	fa5f fc8c 	uxtb.w	ip, ip
 801f414:	fb15 f509 	smulbb	r5, r5, r9
 801f418:	fb0c 5500 	mla	r5, ip, r0, r5
 801f41c:	b2bf      	uxth	r7, r7
 801f41e:	fb1a fa09 	smulbb	sl, sl, r9
 801f422:	b2ad      	uxth	r5, r5
 801f424:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f428:	fb06 a600 	mla	r6, r6, r0, sl
 801f42c:	1c78      	adds	r0, r7, #1
 801f42e:	f105 0a01 	add.w	sl, r5, #1
 801f432:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801f436:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f43a:	b2b6      	uxth	r6, r6
 801f43c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f440:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f444:	ea4a 0707 	orr.w	r7, sl, r7
 801f448:	f106 0a01 	add.w	sl, r6, #1
 801f44c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f450:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f454:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f458:	ea47 070a 	orr.w	r7, r7, sl
 801f45c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801f460:	e7b5      	b.n	801f3ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f462:	b005      	add	sp, #20
 801f464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f468:	fffff800 	.word	0xfffff800

0801f46c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f470:	b087      	sub	sp, #28
 801f472:	468b      	mov	fp, r1
 801f474:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f476:	9204      	str	r2, [sp, #16]
 801f478:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801f47c:	9205      	str	r2, [sp, #20]
 801f47e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801f482:	6861      	ldr	r1, [r4, #4]
 801f484:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801f488:	fb01 2000 	mla	r0, r1, r0, r2
 801f48c:	6822      	ldr	r2, [r4, #0]
 801f48e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801f492:	f8de 2000 	ldr.w	r2, [lr]
 801f496:	9201      	str	r2, [sp, #4]
 801f498:	f8de 2004 	ldr.w	r2, [lr, #4]
 801f49c:	9202      	str	r2, [sp, #8]
 801f49e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f4a2:	f1bb 0f00 	cmp.w	fp, #0
 801f4a6:	dc03      	bgt.n	801f4b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801f4a8:	9a04      	ldr	r2, [sp, #16]
 801f4aa:	2a00      	cmp	r2, #0
 801f4ac:	f340 8142 	ble.w	801f734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801f4b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f4b2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801f4b6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801f4ba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f4be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f4c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f4c4:	2b00      	cmp	r3, #0
 801f4c6:	dd0e      	ble.n	801f4e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f4c8:	140c      	asrs	r4, r1, #16
 801f4ca:	d405      	bmi.n	801f4d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801f4cc:	42bc      	cmp	r4, r7
 801f4ce:	da03      	bge.n	801f4d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801f4d0:	1414      	asrs	r4, r2, #16
 801f4d2:	d401      	bmi.n	801f4d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801f4d4:	42b4      	cmp	r4, r6
 801f4d6:	db07      	blt.n	801f4e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f4d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801f4da:	4421      	add	r1, r4
 801f4dc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f4de:	3b01      	subs	r3, #1
 801f4e0:	4422      	add	r2, r4
 801f4e2:	3002      	adds	r0, #2
 801f4e4:	e7ee      	b.n	801f4c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f4e6:	d019      	beq.n	801f51c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801f4e8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f4ea:	1e5c      	subs	r4, r3, #1
 801f4ec:	fb05 1504 	mla	r5, r5, r4, r1
 801f4f0:	142d      	asrs	r5, r5, #16
 801f4f2:	d409      	bmi.n	801f508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f4f4:	42bd      	cmp	r5, r7
 801f4f6:	da07      	bge.n	801f508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f4f8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f4fa:	fb05 2404 	mla	r4, r5, r4, r2
 801f4fe:	1424      	asrs	r4, r4, #16
 801f500:	d402      	bmi.n	801f508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f502:	42b4      	cmp	r4, r6
 801f504:	f2c0 80b1 	blt.w	801f66a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801f508:	f04f 0800 	mov.w	r8, #0
 801f50c:	eb03 0408 	add.w	r4, r3, r8
 801f510:	2c00      	cmp	r4, #0
 801f512:	dc3e      	bgt.n	801f592 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f514:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f518:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f51c:	f1bb 0f00 	cmp.w	fp, #0
 801f520:	f340 8108 	ble.w	801f734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801f524:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f528:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f52c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f530:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f532:	f1bb 0b01 	subs.w	fp, fp, #1
 801f536:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f53a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f53e:	eeb0 6a62 	vmov.f32	s12, s5
 801f542:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f546:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f54a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f54e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801f552:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f556:	eeb0 6a43 	vmov.f32	s12, s6
 801f55a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f55e:	ee12 2a90 	vmov	r2, s5
 801f562:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f566:	fb92 f3f3 	sdiv	r3, r2, r3
 801f56a:	ee13 2a10 	vmov	r2, s6
 801f56e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f572:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f574:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f576:	fb92 f3f3 	sdiv	r3, r2, r3
 801f57a:	9a04      	ldr	r2, [sp, #16]
 801f57c:	9314      	str	r3, [sp, #80]	@ 0x50
 801f57e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801f582:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f584:	eeb0 3a67 	vmov.f32	s6, s15
 801f588:	bf08      	it	eq
 801f58a:	4613      	moveq	r3, r2
 801f58c:	eef0 2a47 	vmov.f32	s5, s14
 801f590:	e787      	b.n	801f4a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801f592:	140e      	asrs	r6, r1, #16
 801f594:	d462      	bmi.n	801f65c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f596:	f8de 5008 	ldr.w	r5, [lr, #8]
 801f59a:	42b5      	cmp	r5, r6
 801f59c:	dd5e      	ble.n	801f65c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f59e:	1417      	asrs	r7, r2, #16
 801f5a0:	d45c      	bmi.n	801f65c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f5a2:	f8de 400c 	ldr.w	r4, [lr, #12]
 801f5a6:	42bc      	cmp	r4, r7
 801f5a8:	dd58      	ble.n	801f65c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f5aa:	b22d      	sxth	r5, r5
 801f5ac:	fb07 6505 	mla	r5, r7, r5, r6
 801f5b0:	9c02      	ldr	r4, [sp, #8]
 801f5b2:	5d66      	ldrb	r6, [r4, r5]
 801f5b4:	2e00      	cmp	r6, #0
 801f5b6:	d051      	beq.n	801f65c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f5b8:	9c01      	ldr	r4, [sp, #4]
 801f5ba:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801f5be:	f06f 0401 	mvn.w	r4, #1
 801f5c2:	fb04 f408 	mul.w	r4, r4, r8
 801f5c6:	9403      	str	r4, [sp, #12]
 801f5c8:	5b05      	ldrh	r5, [r0, r4]
 801f5ca:	9c05      	ldr	r4, [sp, #20]
 801f5cc:	4366      	muls	r6, r4
 801f5ce:	1c74      	adds	r4, r6, #1
 801f5d0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801f5d4:	1224      	asrs	r4, r4, #8
 801f5d6:	b2a7      	uxth	r7, r4
 801f5d8:	122e      	asrs	r6, r5, #8
 801f5da:	43e4      	mvns	r4, r4
 801f5dc:	b2e4      	uxtb	r4, r4
 801f5de:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801f5e2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801f5e6:	fb16 f604 	smulbb	r6, r6, r4
 801f5ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f5ee:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f5f2:	00ed      	lsls	r5, r5, #3
 801f5f4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f5f8:	b2ed      	uxtb	r5, r5
 801f5fa:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801f5fe:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801f602:	fb15 f504 	smulbb	r5, r5, r4
 801f606:	fa5f f989 	uxtb.w	r9, r9
 801f60a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801f60e:	fb09 5507 	mla	r5, r9, r7, r5
 801f612:	fb1a fa04 	smulbb	sl, sl, r4
 801f616:	fa1f fc8c 	uxth.w	ip, ip
 801f61a:	b2ad      	uxth	r5, r5
 801f61c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f620:	fb06 a607 	mla	r6, r6, r7, sl
 801f624:	f10c 0401 	add.w	r4, ip, #1
 801f628:	f105 0a01 	add.w	sl, r5, #1
 801f62c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801f630:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f634:	b2b6      	uxth	r6, r6
 801f636:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f63a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f63e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801f642:	f106 0a01 	add.w	sl, r6, #1
 801f646:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f64a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f64e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f652:	9c03      	ldr	r4, [sp, #12]
 801f654:	ea4c 0c0a 	orr.w	ip, ip, sl
 801f658:	f820 c004 	strh.w	ip, [r0, r4]
 801f65c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801f65e:	4421      	add	r1, r4
 801f660:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f662:	f108 38ff 	add.w	r8, r8, #4294967295
 801f666:	4422      	add	r2, r4
 801f668:	e750      	b.n	801f50c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801f66a:	f04f 0900 	mov.w	r9, #0
 801f66e:	eba3 0409 	sub.w	r4, r3, r9
 801f672:	2c00      	cmp	r4, #0
 801f674:	f77f af4e 	ble.w	801f514 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801f678:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801f67c:	140d      	asrs	r5, r1, #16
 801f67e:	1414      	asrs	r4, r2, #16
 801f680:	fb06 5404 	mla	r4, r6, r4, r5
 801f684:	9d02      	ldr	r5, [sp, #8]
 801f686:	5d2e      	ldrb	r6, [r5, r4]
 801f688:	2e00      	cmp	r6, #0
 801f68a:	d04c      	beq.n	801f726 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801f68c:	9d01      	ldr	r5, [sp, #4]
 801f68e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801f692:	9c05      	ldr	r4, [sp, #20]
 801f694:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801f698:	4366      	muls	r6, r4
 801f69a:	1c74      	adds	r4, r6, #1
 801f69c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801f6a0:	1224      	asrs	r4, r4, #8
 801f6a2:	b2a7      	uxth	r7, r4
 801f6a4:	122e      	asrs	r6, r5, #8
 801f6a6:	43e4      	mvns	r4, r4
 801f6a8:	b2e4      	uxtb	r4, r4
 801f6aa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801f6ae:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801f6b2:	fb16 f604 	smulbb	r6, r6, r4
 801f6b6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f6ba:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f6be:	00ed      	lsls	r5, r5, #3
 801f6c0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f6c4:	b2ed      	uxtb	r5, r5
 801f6c6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801f6ca:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f6ce:	fb15 f504 	smulbb	r5, r5, r4
 801f6d2:	fa5f f888 	uxtb.w	r8, r8
 801f6d6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801f6da:	fb08 5507 	mla	r5, r8, r7, r5
 801f6de:	fb1a fa04 	smulbb	sl, sl, r4
 801f6e2:	fa1f fc8c 	uxth.w	ip, ip
 801f6e6:	b2ad      	uxth	r5, r5
 801f6e8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f6ec:	fb06 a607 	mla	r6, r6, r7, sl
 801f6f0:	f10c 0401 	add.w	r4, ip, #1
 801f6f4:	f105 0a01 	add.w	sl, r5, #1
 801f6f8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801f6fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f700:	b2b6      	uxth	r6, r6
 801f702:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f706:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f70a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801f70e:	f106 0a01 	add.w	sl, r6, #1
 801f712:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f716:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f71a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f71e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801f722:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801f726:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801f728:	4421      	add	r1, r4
 801f72a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f72c:	f109 0901 	add.w	r9, r9, #1
 801f730:	4422      	add	r2, r4
 801f732:	e79c      	b.n	801f66e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801f734:	b007      	add	sp, #28
 801f736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f73a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f73a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f73e:	b085      	sub	sp, #20
 801f740:	468b      	mov	fp, r1
 801f742:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801f744:	9203      	str	r2, [sp, #12]
 801f746:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801f74a:	6861      	ldr	r1, [r4, #4]
 801f74c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801f750:	fb01 2000 	mla	r0, r1, r0, r2
 801f754:	6822      	ldr	r2, [r4, #0]
 801f756:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801f75a:	f8d8 2000 	ldr.w	r2, [r8]
 801f75e:	9200      	str	r2, [sp, #0]
 801f760:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801f764:	9201      	str	r2, [sp, #4]
 801f766:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f76a:	f1bb 0f00 	cmp.w	fp, #0
 801f76e:	dc03      	bgt.n	801f778 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f770:	9a03      	ldr	r2, [sp, #12]
 801f772:	2a00      	cmp	r2, #0
 801f774:	f340 8146 	ble.w	801fa04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801f778:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f77a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801f77e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801f782:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f786:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f788:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f78c:	2b00      	cmp	r3, #0
 801f78e:	dd0e      	ble.n	801f7ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f790:	140c      	asrs	r4, r1, #16
 801f792:	d405      	bmi.n	801f7a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f794:	42bc      	cmp	r4, r7
 801f796:	da03      	bge.n	801f7a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f798:	1414      	asrs	r4, r2, #16
 801f79a:	d401      	bmi.n	801f7a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f79c:	42b4      	cmp	r4, r6
 801f79e:	db07      	blt.n	801f7b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f7a0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f7a2:	4421      	add	r1, r4
 801f7a4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801f7a6:	3b01      	subs	r3, #1
 801f7a8:	4422      	add	r2, r4
 801f7aa:	3002      	adds	r0, #2
 801f7ac:	e7ee      	b.n	801f78c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f7ae:	d017      	beq.n	801f7e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801f7b0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f7b2:	1e5c      	subs	r4, r3, #1
 801f7b4:	fb05 1504 	mla	r5, r5, r4, r1
 801f7b8:	142d      	asrs	r5, r5, #16
 801f7ba:	d409      	bmi.n	801f7d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f7bc:	42bd      	cmp	r5, r7
 801f7be:	da07      	bge.n	801f7d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f7c0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f7c2:	fb05 2404 	mla	r4, r5, r4, r2
 801f7c6:	1424      	asrs	r4, r4, #16
 801f7c8:	d402      	bmi.n	801f7d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f7ca:	42b4      	cmp	r4, r6
 801f7cc:	f2c0 80b3 	blt.w	801f936 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801f7d0:	2600      	movs	r6, #0
 801f7d2:	199c      	adds	r4, r3, r6
 801f7d4:	2c00      	cmp	r4, #0
 801f7d6:	dc3e      	bgt.n	801f856 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f7d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f7dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f7e0:	f1bb 0f00 	cmp.w	fp, #0
 801f7e4:	f340 810e 	ble.w	801fa04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801f7e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f7ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f7f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f7f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f7f6:	f1bb 0b01 	subs.w	fp, fp, #1
 801f7fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f7fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f802:	eeb0 6a62 	vmov.f32	s12, s5
 801f806:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f80a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f80e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f812:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f816:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f81a:	eeb0 6a43 	vmov.f32	s12, s6
 801f81e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f822:	ee12 2a90 	vmov	r2, s5
 801f826:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f82a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f82e:	ee13 2a10 	vmov	r2, s6
 801f832:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f836:	9311      	str	r3, [sp, #68]	@ 0x44
 801f838:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f83a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f83e:	9a03      	ldr	r2, [sp, #12]
 801f840:	9312      	str	r3, [sp, #72]	@ 0x48
 801f842:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f846:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f848:	eeb0 3a67 	vmov.f32	s6, s15
 801f84c:	bf08      	it	eq
 801f84e:	4613      	moveq	r3, r2
 801f850:	eef0 2a47 	vmov.f32	s5, s14
 801f854:	e789      	b.n	801f76a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801f856:	140f      	asrs	r7, r1, #16
 801f858:	d418      	bmi.n	801f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f85a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801f85e:	42bd      	cmp	r5, r7
 801f860:	dd14      	ble.n	801f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f862:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801f866:	d411      	bmi.n	801f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f868:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801f86c:	4564      	cmp	r4, ip
 801f86e:	dd0d      	ble.n	801f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f870:	b22d      	sxth	r5, r5
 801f872:	fb0c 7505 	mla	r5, ip, r5, r7
 801f876:	9c01      	ldr	r4, [sp, #4]
 801f878:	5d64      	ldrb	r4, [r4, r5]
 801f87a:	2cff      	cmp	r4, #255	@ 0xff
 801f87c:	d10c      	bne.n	801f898 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801f87e:	9c00      	ldr	r4, [sp, #0]
 801f880:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801f884:	f06f 0401 	mvn.w	r4, #1
 801f888:	4374      	muls	r4, r6
 801f88a:	5305      	strh	r5, [r0, r4]
 801f88c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f88e:	4421      	add	r1, r4
 801f890:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801f892:	3e01      	subs	r6, #1
 801f894:	4422      	add	r2, r4
 801f896:	e79c      	b.n	801f7d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f898:	2c00      	cmp	r4, #0
 801f89a:	d0f7      	beq.n	801f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f89c:	9f00      	ldr	r7, [sp, #0]
 801f89e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801f8a2:	f06f 0501 	mvn.w	r5, #1
 801f8a6:	4375      	muls	r5, r6
 801f8a8:	9502      	str	r5, [sp, #8]
 801f8aa:	5b45      	ldrh	r5, [r0, r5]
 801f8ac:	fa1f fc84 	uxth.w	ip, r4
 801f8b0:	122f      	asrs	r7, r5, #8
 801f8b2:	43e4      	mvns	r4, r4
 801f8b4:	b2e4      	uxtb	r4, r4
 801f8b6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801f8ba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f8be:	fb17 f704 	smulbb	r7, r7, r4
 801f8c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f8c6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f8ca:	00ed      	lsls	r5, r5, #3
 801f8cc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801f8d0:	b2ed      	uxtb	r5, r5
 801f8d2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801f8d6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801f8da:	fb15 f504 	smulbb	r5, r5, r4
 801f8de:	fa5f f989 	uxtb.w	r9, r9
 801f8e2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801f8e6:	fb09 550c 	mla	r5, r9, ip, r5
 801f8ea:	fb1a fa04 	smulbb	sl, sl, r4
 801f8ee:	fa1f fe8e 	uxth.w	lr, lr
 801f8f2:	b2ad      	uxth	r5, r5
 801f8f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f8f8:	fb07 a70c 	mla	r7, r7, ip, sl
 801f8fc:	f10e 0401 	add.w	r4, lr, #1
 801f900:	f105 0a01 	add.w	sl, r5, #1
 801f904:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801f908:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f90c:	b2bf      	uxth	r7, r7
 801f90e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f912:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801f916:	ea4a 0e0e 	orr.w	lr, sl, lr
 801f91a:	f107 0a01 	add.w	sl, r7, #1
 801f91e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801f922:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f926:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f92a:	9c02      	ldr	r4, [sp, #8]
 801f92c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801f930:	f820 e004 	strh.w	lr, [r0, r4]
 801f934:	e7aa      	b.n	801f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f936:	f04f 0900 	mov.w	r9, #0
 801f93a:	eba3 0409 	sub.w	r4, r3, r9
 801f93e:	2c00      	cmp	r4, #0
 801f940:	f77f af4a 	ble.w	801f7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f944:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801f948:	1414      	asrs	r4, r2, #16
 801f94a:	140d      	asrs	r5, r1, #16
 801f94c:	fb06 5504 	mla	r5, r6, r4, r5
 801f950:	9c01      	ldr	r4, [sp, #4]
 801f952:	5d64      	ldrb	r4, [r4, r5]
 801f954:	2cff      	cmp	r4, #255	@ 0xff
 801f956:	d10b      	bne.n	801f970 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801f958:	9c00      	ldr	r4, [sp, #0]
 801f95a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801f95e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801f962:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801f964:	4421      	add	r1, r4
 801f966:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801f968:	f109 0901 	add.w	r9, r9, #1
 801f96c:	4422      	add	r2, r4
 801f96e:	e7e4      	b.n	801f93a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f970:	2c00      	cmp	r4, #0
 801f972:	d0f6      	beq.n	801f962 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f974:	9e00      	ldr	r6, [sp, #0]
 801f976:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801f97a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801f97e:	b2a7      	uxth	r7, r4
 801f980:	122e      	asrs	r6, r5, #8
 801f982:	43e4      	mvns	r4, r4
 801f984:	b2e4      	uxtb	r4, r4
 801f986:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f98a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801f98e:	fb16 f604 	smulbb	r6, r6, r4
 801f992:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f996:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f99a:	00ed      	lsls	r5, r5, #3
 801f99c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f9a0:	b2ed      	uxtb	r5, r5
 801f9a2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f9a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f9aa:	fb15 f504 	smulbb	r5, r5, r4
 801f9ae:	fa5f fe8e 	uxtb.w	lr, lr
 801f9b2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801f9b6:	fb0e 5507 	mla	r5, lr, r7, r5
 801f9ba:	fb1a fa04 	smulbb	sl, sl, r4
 801f9be:	fa1f fc8c 	uxth.w	ip, ip
 801f9c2:	b2ad      	uxth	r5, r5
 801f9c4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f9c8:	fb06 a607 	mla	r6, r6, r7, sl
 801f9cc:	f10c 0401 	add.w	r4, ip, #1
 801f9d0:	f105 0a01 	add.w	sl, r5, #1
 801f9d4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801f9d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f9dc:	b2b6      	uxth	r6, r6
 801f9de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f9e2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f9e6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801f9ea:	f106 0a01 	add.w	sl, r6, #1
 801f9ee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f9f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f9f6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f9fa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801f9fe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801fa02:	e7ae      	b.n	801f962 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fa04:	b005      	add	sp, #20
 801fa06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fa0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa0e:	b085      	sub	sp, #20
 801fa10:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801fa12:	9203      	str	r2, [sp, #12]
 801fa14:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801fa18:	9201      	str	r2, [sp, #4]
 801fa1a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801fa1e:	9100      	str	r1, [sp, #0]
 801fa20:	6841      	ldr	r1, [r0, #4]
 801fa22:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801fa26:	fb01 2404 	mla	r4, r1, r4, r2
 801fa2a:	6802      	ldr	r2, [r0, #0]
 801fa2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801fa30:	f8de 2000 	ldr.w	r2, [lr]
 801fa34:	9202      	str	r2, [sp, #8]
 801fa36:	9a01      	ldr	r2, [sp, #4]
 801fa38:	43d6      	mvns	r6, r2
 801fa3a:	b2f6      	uxtb	r6, r6
 801fa3c:	9a00      	ldr	r2, [sp, #0]
 801fa3e:	2a00      	cmp	r2, #0
 801fa40:	dc03      	bgt.n	801fa4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fa42:	9a03      	ldr	r2, [sp, #12]
 801fa44:	2a00      	cmp	r2, #0
 801fa46:	f340 8124 	ble.w	801fc92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801fa4a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fa4c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801fa50:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801fa54:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801fa58:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fa5a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801fa5e:	2b00      	cmp	r3, #0
 801fa60:	dd0e      	ble.n	801fa80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fa62:	1408      	asrs	r0, r1, #16
 801fa64:	d405      	bmi.n	801fa72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fa66:	4560      	cmp	r0, ip
 801fa68:	da03      	bge.n	801fa72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fa6a:	1410      	asrs	r0, r2, #16
 801fa6c:	d401      	bmi.n	801fa72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fa6e:	42b8      	cmp	r0, r7
 801fa70:	db07      	blt.n	801fa82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fa72:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fa74:	4401      	add	r1, r0
 801fa76:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801fa78:	3b01      	subs	r3, #1
 801fa7a:	4402      	add	r2, r0
 801fa7c:	3402      	adds	r4, #2
 801fa7e:	e7ee      	b.n	801fa5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801fa80:	d06e      	beq.n	801fb60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801fa82:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fa84:	1e58      	subs	r0, r3, #1
 801fa86:	fb05 1500 	mla	r5, r5, r0, r1
 801fa8a:	142d      	asrs	r5, r5, #16
 801fa8c:	d45c      	bmi.n	801fb48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801fa8e:	4565      	cmp	r5, ip
 801fa90:	da5a      	bge.n	801fb48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801fa92:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fa94:	fb05 2000 	mla	r0, r5, r0, r2
 801fa98:	1400      	asrs	r0, r0, #16
 801fa9a:	d455      	bmi.n	801fb48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801fa9c:	42b8      	cmp	r0, r7
 801fa9e:	da53      	bge.n	801fb48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801faa0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801faa4:	4699      	mov	r9, r3
 801faa6:	46a2      	mov	sl, r4
 801faa8:	f1b9 0f00 	cmp.w	r9, #0
 801faac:	dd54      	ble.n	801fb58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801faae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801fab2:	140d      	asrs	r5, r1, #16
 801fab4:	1410      	asrs	r0, r2, #16
 801fab6:	fb07 5000 	mla	r0, r7, r0, r5
 801faba:	9d02      	ldr	r5, [sp, #8]
 801fabc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801fac0:	f8ba 5000 	ldrh.w	r5, [sl]
 801fac4:	122f      	asrs	r7, r5, #8
 801fac6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801faca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801face:	fb17 f706 	smulbb	r7, r7, r6
 801fad2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801fad6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fada:	00ed      	lsls	r5, r5, #3
 801fadc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801fae0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801fae4:	10c7      	asrs	r7, r0, #3
 801fae6:	b2ed      	uxtb	r5, r5
 801fae8:	00c0      	lsls	r0, r0, #3
 801faea:	fb18 f806 	smulbb	r8, r8, r6
 801faee:	fb15 f506 	smulbb	r5, r5, r6
 801faf2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801faf6:	b2c0      	uxtb	r0, r0
 801faf8:	fa1f fc8c 	uxth.w	ip, ip
 801fafc:	fb07 870b 	mla	r7, r7, fp, r8
 801fb00:	fb00 500b 	mla	r0, r0, fp, r5
 801fb04:	b280      	uxth	r0, r0
 801fb06:	b2bf      	uxth	r7, r7
 801fb08:	f10c 0501 	add.w	r5, ip, #1
 801fb0c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801fb10:	f107 0801 	add.w	r8, r7, #1
 801fb14:	1c45      	adds	r5, r0, #1
 801fb16:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801fb1a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801fb1e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fb20:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fb24:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801fb28:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801fb2c:	ea45 0c0c 	orr.w	ip, r5, ip
 801fb30:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801fb34:	4401      	add	r1, r0
 801fb36:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801fb38:	ea4c 0c08 	orr.w	ip, ip, r8
 801fb3c:	f82a cb02 	strh.w	ip, [sl], #2
 801fb40:	4402      	add	r2, r0
 801fb42:	f109 39ff 	add.w	r9, r9, #4294967295
 801fb46:	e7af      	b.n	801faa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801fb48:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801fb4c:	f04f 0800 	mov.w	r8, #0
 801fb50:	eb03 0008 	add.w	r0, r3, r8
 801fb54:	2800      	cmp	r0, #0
 801fb56:	dc41      	bgt.n	801fbdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801fb58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fb5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801fb60:	9b00      	ldr	r3, [sp, #0]
 801fb62:	2b00      	cmp	r3, #0
 801fb64:	f340 8095 	ble.w	801fc92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801fb68:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb6c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fb70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fb74:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fb76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fb7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb82:	eef0 6a62 	vmov.f32	s13, s5
 801fb86:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb92:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801fb96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb9a:	eef0 6a43 	vmov.f32	s13, s6
 801fb9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fba2:	ee12 2a90 	vmov	r2, s5
 801fba6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbaa:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbae:	ee13 2a10 	vmov	r2, s6
 801fbb2:	9311      	str	r3, [sp, #68]	@ 0x44
 801fbb4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fbb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbba:	9312      	str	r3, [sp, #72]	@ 0x48
 801fbbc:	9b00      	ldr	r3, [sp, #0]
 801fbbe:	9a03      	ldr	r2, [sp, #12]
 801fbc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbc4:	3b01      	subs	r3, #1
 801fbc6:	9300      	str	r3, [sp, #0]
 801fbc8:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801fbcc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fbce:	eeb0 3a67 	vmov.f32	s6, s15
 801fbd2:	bf08      	it	eq
 801fbd4:	4613      	moveq	r3, r2
 801fbd6:	eef0 2a47 	vmov.f32	s5, s14
 801fbda:	e72f      	b.n	801fa3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fbdc:	140f      	asrs	r7, r1, #16
 801fbde:	d451      	bmi.n	801fc84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801fbe0:	f8de 5008 	ldr.w	r5, [lr, #8]
 801fbe4:	42bd      	cmp	r5, r7
 801fbe6:	dd4d      	ble.n	801fc84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801fbe8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801fbec:	d44a      	bmi.n	801fc84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801fbee:	f8de 000c 	ldr.w	r0, [lr, #12]
 801fbf2:	4560      	cmp	r0, ip
 801fbf4:	dd46      	ble.n	801fc84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801fbf6:	b22d      	sxth	r5, r5
 801fbf8:	fb0c 7505 	mla	r5, ip, r5, r7
 801fbfc:	9802      	ldr	r0, [sp, #8]
 801fbfe:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801fc02:	f06f 0501 	mvn.w	r5, #1
 801fc06:	fb05 fb08 	mul.w	fp, r5, r8
 801fc0a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801fc0e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801fc12:	122f      	asrs	r7, r5, #8
 801fc14:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801fc18:	fb17 f706 	smulbb	r7, r7, r6
 801fc1c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801fc20:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fc24:	00ed      	lsls	r5, r5, #3
 801fc26:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801fc2a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801fc2e:	10c7      	asrs	r7, r0, #3
 801fc30:	b2ed      	uxtb	r5, r5
 801fc32:	00c0      	lsls	r0, r0, #3
 801fc34:	fb19 f906 	smulbb	r9, r9, r6
 801fc38:	fb15 f506 	smulbb	r5, r5, r6
 801fc3c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801fc40:	b2c0      	uxtb	r0, r0
 801fc42:	fa1f fc8c 	uxth.w	ip, ip
 801fc46:	fb07 970a 	mla	r7, r7, sl, r9
 801fc4a:	fb00 500a 	mla	r0, r0, sl, r5
 801fc4e:	b2bf      	uxth	r7, r7
 801fc50:	b280      	uxth	r0, r0
 801fc52:	f10c 0501 	add.w	r5, ip, #1
 801fc56:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801fc5a:	f107 0901 	add.w	r9, r7, #1
 801fc5e:	1c45      	adds	r5, r0, #1
 801fc60:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801fc64:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801fc68:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fc6c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801fc70:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fc74:	ea45 0c0c 	orr.w	ip, r5, ip
 801fc78:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801fc7c:	ea4c 0c09 	orr.w	ip, ip, r9
 801fc80:	f824 c00b 	strh.w	ip, [r4, fp]
 801fc84:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fc86:	4401      	add	r1, r0
 801fc88:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801fc8a:	f108 38ff 	add.w	r8, r8, #4294967295
 801fc8e:	4402      	add	r2, r0
 801fc90:	e75e      	b.n	801fb50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801fc92:	b005      	add	sp, #20
 801fc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fc98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc9c:	b085      	sub	sp, #20
 801fc9e:	4693      	mov	fp, r2
 801fca0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801fca2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801fca4:	6870      	ldr	r0, [r6, #4]
 801fca6:	9101      	str	r1, [sp, #4]
 801fca8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801fcac:	fb00 2404 	mla	r4, r0, r4, r2
 801fcb0:	6832      	ldr	r2, [r6, #0]
 801fcb2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801fcb6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801fcba:	682a      	ldr	r2, [r5, #0]
 801fcbc:	9202      	str	r2, [sp, #8]
 801fcbe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801fcc2:	9a01      	ldr	r2, [sp, #4]
 801fcc4:	2a00      	cmp	r2, #0
 801fcc6:	dc03      	bgt.n	801fcd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801fcc8:	f1bb 0f00 	cmp.w	fp, #0
 801fccc:	f340 809a 	ble.w	801fe04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801fcd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fcd2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801fcd6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801fcda:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801fcde:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fce0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801fce4:	2b00      	cmp	r3, #0
 801fce6:	dd0c      	ble.n	801fd02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801fce8:	1406      	asrs	r6, r0, #16
 801fcea:	d405      	bmi.n	801fcf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801fcec:	454e      	cmp	r6, r9
 801fcee:	da03      	bge.n	801fcf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801fcf0:	1416      	asrs	r6, r2, #16
 801fcf2:	d401      	bmi.n	801fcf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801fcf4:	4546      	cmp	r6, r8
 801fcf6:	db05      	blt.n	801fd04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fcf8:	4470      	add	r0, lr
 801fcfa:	4462      	add	r2, ip
 801fcfc:	3b01      	subs	r3, #1
 801fcfe:	3402      	adds	r4, #2
 801fd00:	e7f0      	b.n	801fce4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fd02:	d00f      	beq.n	801fd24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801fd04:	1e5e      	subs	r6, r3, #1
 801fd06:	fb0e 0706 	mla	r7, lr, r6, r0
 801fd0a:	143f      	asrs	r7, r7, #16
 801fd0c:	d541      	bpl.n	801fd92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801fd0e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801fd12:	4698      	mov	r8, r3
 801fd14:	9603      	str	r6, [sp, #12]
 801fd16:	f1b8 0f00 	cmp.w	r8, #0
 801fd1a:	dc56      	bgt.n	801fdca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801fd1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fd20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801fd24:	9b01      	ldr	r3, [sp, #4]
 801fd26:	2b00      	cmp	r3, #0
 801fd28:	dd6c      	ble.n	801fe04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801fd2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fd2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fd32:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801fd36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fd38:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fd3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fd40:	eeb0 6a62 	vmov.f32	s12, s5
 801fd44:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fd48:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fd4c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fd50:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801fd54:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fd58:	eeb0 6a43 	vmov.f32	s12, s6
 801fd5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fd60:	ee12 2a90 	vmov	r2, s5
 801fd64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fd68:	fb92 fef3 	sdiv	lr, r2, r3
 801fd6c:	ee13 2a10 	vmov	r2, s6
 801fd70:	fb92 fcf3 	sdiv	ip, r2, r3
 801fd74:	9b01      	ldr	r3, [sp, #4]
 801fd76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fd7a:	3b01      	subs	r3, #1
 801fd7c:	9301      	str	r3, [sp, #4]
 801fd7e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801fd82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fd84:	eeb0 3a67 	vmov.f32	s6, s15
 801fd88:	bf08      	it	eq
 801fd8a:	465b      	moveq	r3, fp
 801fd8c:	eef0 2a47 	vmov.f32	s5, s14
 801fd90:	e797      	b.n	801fcc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801fd92:	454f      	cmp	r7, r9
 801fd94:	dabb      	bge.n	801fd0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fd96:	fb0c 2606 	mla	r6, ip, r6, r2
 801fd9a:	1436      	asrs	r6, r6, #16
 801fd9c:	d4b7      	bmi.n	801fd0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fd9e:	4546      	cmp	r6, r8
 801fda0:	dab5      	bge.n	801fd0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fda2:	461e      	mov	r6, r3
 801fda4:	46a0      	mov	r8, r4
 801fda6:	2e00      	cmp	r6, #0
 801fda8:	ddb8      	ble.n	801fd1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801fdaa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801fdae:	9902      	ldr	r1, [sp, #8]
 801fdb0:	1417      	asrs	r7, r2, #16
 801fdb2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801fdb6:	fb0a 9707 	mla	r7, sl, r7, r9
 801fdba:	4470      	add	r0, lr
 801fdbc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801fdc0:	f828 7b02 	strh.w	r7, [r8], #2
 801fdc4:	4462      	add	r2, ip
 801fdc6:	3e01      	subs	r6, #1
 801fdc8:	e7ed      	b.n	801fda6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801fdca:	ea5f 4920 	movs.w	r9, r0, asr #16
 801fdce:	d414      	bmi.n	801fdfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801fdd0:	68ae      	ldr	r6, [r5, #8]
 801fdd2:	454e      	cmp	r6, r9
 801fdd4:	dd11      	ble.n	801fdfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801fdd6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801fdda:	d40e      	bmi.n	801fdfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801fddc:	68ef      	ldr	r7, [r5, #12]
 801fdde:	4557      	cmp	r7, sl
 801fde0:	dd0b      	ble.n	801fdfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801fde2:	b236      	sxth	r6, r6
 801fde4:	fb0a 9606 	mla	r6, sl, r6, r9
 801fde8:	9f02      	ldr	r7, [sp, #8]
 801fdea:	f06f 0101 	mvn.w	r1, #1
 801fdee:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801fdf2:	fb01 f608 	mul.w	r6, r1, r8
 801fdf6:	9903      	ldr	r1, [sp, #12]
 801fdf8:	538f      	strh	r7, [r1, r6]
 801fdfa:	4470      	add	r0, lr
 801fdfc:	4462      	add	r2, ip
 801fdfe:	f108 38ff 	add.w	r8, r8, #4294967295
 801fe02:	e788      	b.n	801fd16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801fe04:	b005      	add	sp, #20
 801fe06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fe0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe0e:	b087      	sub	sp, #28
 801fe10:	468b      	mov	fp, r1
 801fe12:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fe14:	9203      	str	r2, [sp, #12]
 801fe16:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801fe1a:	9204      	str	r2, [sp, #16]
 801fe1c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801fe20:	6841      	ldr	r1, [r0, #4]
 801fe22:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801fe26:	fb01 2505 	mla	r5, r1, r5, r2
 801fe2a:	6802      	ldr	r2, [r0, #0]
 801fe2c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801fe30:	f8d9 2000 	ldr.w	r2, [r9]
 801fe34:	9201      	str	r2, [sp, #4]
 801fe36:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801fe3a:	f1bb 0f00 	cmp.w	fp, #0
 801fe3e:	dc03      	bgt.n	801fe48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fe40:	9a03      	ldr	r2, [sp, #12]
 801fe42:	2a00      	cmp	r2, #0
 801fe44:	f340 8159 	ble.w	80200fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801fe48:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fe4a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801fe4e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801fe52:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801fe56:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801fe58:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801fe5c:	2b00      	cmp	r3, #0
 801fe5e:	dd0e      	ble.n	801fe7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801fe60:	1402      	asrs	r2, r0, #16
 801fe62:	d405      	bmi.n	801fe70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe64:	42ba      	cmp	r2, r7
 801fe66:	da03      	bge.n	801fe70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe68:	140a      	asrs	r2, r1, #16
 801fe6a:	d401      	bmi.n	801fe70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fe6c:	42b2      	cmp	r2, r6
 801fe6e:	db07      	blt.n	801fe80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fe70:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fe72:	4410      	add	r0, r2
 801fe74:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fe76:	3b01      	subs	r3, #1
 801fe78:	4411      	add	r1, r2
 801fe7a:	3502      	adds	r5, #2
 801fe7c:	e7ee      	b.n	801fe5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fe7e:	d017      	beq.n	801feb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801fe80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fe82:	1e5a      	subs	r2, r3, #1
 801fe84:	fb04 0402 	mla	r4, r4, r2, r0
 801fe88:	1424      	asrs	r4, r4, #16
 801fe8a:	d409      	bmi.n	801fea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fe8c:	42bc      	cmp	r4, r7
 801fe8e:	da07      	bge.n	801fea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fe90:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801fe92:	fb04 1202 	mla	r2, r4, r2, r1
 801fe96:	1412      	asrs	r2, r2, #16
 801fe98:	d402      	bmi.n	801fea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fe9a:	42b2      	cmp	r2, r6
 801fe9c:	f2c0 80bf 	blt.w	802001e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fea0:	2700      	movs	r7, #0
 801fea2:	19da      	adds	r2, r3, r7
 801fea4:	2a00      	cmp	r2, #0
 801fea6:	dc3e      	bgt.n	801ff26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fea8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801feac:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801feb0:	f1bb 0f00 	cmp.w	fp, #0
 801feb4:	f340 8121 	ble.w	80200fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801feb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801febc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fec0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801fec4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fec6:	f1bb 0b01 	subs.w	fp, fp, #1
 801feca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fece:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fed2:	eeb0 6a62 	vmov.f32	s12, s5
 801fed6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801feda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fede:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fee2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801fee6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801feea:	eeb0 6a43 	vmov.f32	s12, s6
 801feee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fef2:	ee12 2a90 	vmov	r2, s5
 801fef6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fefa:	fb92 f3f3 	sdiv	r3, r2, r3
 801fefe:	ee13 2a10 	vmov	r2, s6
 801ff02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ff06:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ff08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ff0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff0e:	9a03      	ldr	r2, [sp, #12]
 801ff10:	9314      	str	r3, [sp, #80]	@ 0x50
 801ff12:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801ff16:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ff18:	eeb0 3a67 	vmov.f32	s6, s15
 801ff1c:	bf08      	it	eq
 801ff1e:	4613      	moveq	r3, r2
 801ff20:	eef0 2a47 	vmov.f32	s5, s14
 801ff24:	e789      	b.n	801fe3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ff26:	1406      	asrs	r6, r0, #16
 801ff28:	d42d      	bmi.n	801ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ff2a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801ff2e:	42b4      	cmp	r4, r6
 801ff30:	dd29      	ble.n	801ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ff32:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801ff36:	d426      	bmi.n	801ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ff38:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ff3c:	4562      	cmp	r2, ip
 801ff3e:	dd22      	ble.n	801ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ff40:	b224      	sxth	r4, r4
 801ff42:	9a01      	ldr	r2, [sp, #4]
 801ff44:	fb0c 6404 	mla	r4, ip, r4, r6
 801ff48:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801ff4c:	0e22      	lsrs	r2, r4, #24
 801ff4e:	d01a      	beq.n	801ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ff50:	9e04      	ldr	r6, [sp, #16]
 801ff52:	4372      	muls	r2, r6
 801ff54:	1c56      	adds	r6, r2, #1
 801ff56:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801ff5a:	1212      	asrs	r2, r2, #8
 801ff5c:	0a26      	lsrs	r6, r4, #8
 801ff5e:	2aff      	cmp	r2, #255	@ 0xff
 801ff60:	9605      	str	r6, [sp, #20]
 801ff62:	d116      	bne.n	801ff92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801ff64:	f06f 0201 	mvn.w	r2, #1
 801ff68:	fb02 fc07 	mul.w	ip, r2, r7
 801ff6c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801ff70:	0962      	lsrs	r2, r4, #5
 801ff72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ff76:	f026 0607 	bic.w	r6, r6, #7
 801ff7a:	4316      	orrs	r6, r2
 801ff7c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ff80:	4326      	orrs	r6, r4
 801ff82:	f825 600c 	strh.w	r6, [r5, ip]
 801ff86:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ff88:	4410      	add	r0, r2
 801ff8a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ff8c:	3f01      	subs	r7, #1
 801ff8e:	4411      	add	r1, r2
 801ff90:	e787      	b.n	801fea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ff92:	f06f 0601 	mvn.w	r6, #1
 801ff96:	437e      	muls	r6, r7
 801ff98:	fa1f fa82 	uxth.w	sl, r2
 801ff9c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801ffa0:	9602      	str	r6, [sp, #8]
 801ffa2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ffa6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801ffaa:	43d2      	mvns	r2, r2
 801ffac:	b2d2      	uxtb	r2, r2
 801ffae:	fb1c fc0a 	smulbb	ip, ip, sl
 801ffb2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ffb6:	fb0e ce02 	mla	lr, lr, r2, ip
 801ffba:	b2e4      	uxtb	r4, r4
 801ffbc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ffc0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ffc4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ffc8:	fa5f f888 	uxtb.w	r8, r8
 801ffcc:	fb14 f40a 	smulbb	r4, r4, sl
 801ffd0:	fb08 4402 	mla	r4, r8, r2, r4
 801ffd4:	fa1f fe8e 	uxth.w	lr, lr
 801ffd8:	fb16 f60a 	smulbb	r6, r6, sl
 801ffdc:	b2a4      	uxth	r4, r4
 801ffde:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ffe2:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ffe6:	f10e 0201 	add.w	r2, lr, #1
 801ffea:	1c66      	adds	r6, r4, #1
 801ffec:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801fff0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801fff4:	fa1f fc8c 	uxth.w	ip, ip
 801fff8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801fffc:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8020000:	ea46 0e0e 	orr.w	lr, r6, lr
 8020004:	f10c 0601 	add.w	r6, ip, #1
 8020008:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 802000c:	0976      	lsrs	r6, r6, #5
 802000e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020012:	9a02      	ldr	r2, [sp, #8]
 8020014:	ea4e 0e06 	orr.w	lr, lr, r6
 8020018:	f825 e002 	strh.w	lr, [r5, r2]
 802001c:	e7b3      	b.n	801ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 802001e:	f04f 0800 	mov.w	r8, #0
 8020022:	eba3 0208 	sub.w	r2, r3, r8
 8020026:	2a00      	cmp	r2, #0
 8020028:	f77f af3e 	ble.w	801fea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802002c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8020030:	1404      	asrs	r4, r0, #16
 8020032:	140a      	asrs	r2, r1, #16
 8020034:	fb06 4202 	mla	r2, r6, r2, r4
 8020038:	9c01      	ldr	r4, [sp, #4]
 802003a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 802003e:	0e22      	lsrs	r2, r4, #24
 8020040:	d016      	beq.n	8020070 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8020042:	9e04      	ldr	r6, [sp, #16]
 8020044:	4372      	muls	r2, r6
 8020046:	1c56      	adds	r6, r2, #1
 8020048:	eb06 2222 	add.w	r2, r6, r2, asr #8
 802004c:	1212      	asrs	r2, r2, #8
 802004e:	2aff      	cmp	r2, #255	@ 0xff
 8020050:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8020054:	d113      	bne.n	802007e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8020056:	0962      	lsrs	r2, r4, #5
 8020058:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 802005c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020060:	f026 0607 	bic.w	r6, r6, #7
 8020064:	4316      	orrs	r6, r2
 8020066:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 802006a:	4326      	orrs	r6, r4
 802006c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8020070:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020072:	4410      	add	r0, r2
 8020074:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020076:	f108 0801 	add.w	r8, r8, #1
 802007a:	4411      	add	r1, r2
 802007c:	e7d1      	b.n	8020022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 802007e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8020082:	fa1f fa82 	uxth.w	sl, r2
 8020086:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 802008a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 802008e:	43d2      	mvns	r2, r2
 8020090:	b2d2      	uxtb	r2, r2
 8020092:	fb17 f70a 	smulbb	r7, r7, sl
 8020096:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802009a:	fb0c 7c02 	mla	ip, ip, r2, r7
 802009e:	b2e4      	uxtb	r4, r4
 80200a0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80200a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80200a8:	fa5f fe8e 	uxtb.w	lr, lr
 80200ac:	fb14 f40a 	smulbb	r4, r4, sl
 80200b0:	fb0e 4402 	mla	r4, lr, r2, r4
 80200b4:	b2f6      	uxtb	r6, r6
 80200b6:	fa1f fc8c 	uxth.w	ip, ip
 80200ba:	fb16 f60a 	smulbb	r6, r6, sl
 80200be:	b2a4      	uxth	r4, r4
 80200c0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80200c4:	fb07 6702 	mla	r7, r7, r2, r6
 80200c8:	f10c 0201 	add.w	r2, ip, #1
 80200cc:	1c66      	adds	r6, r4, #1
 80200ce:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80200d2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80200d6:	b2bf      	uxth	r7, r7
 80200d8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80200dc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80200e0:	ea46 0c0c 	orr.w	ip, r6, ip
 80200e4:	1c7e      	adds	r6, r7, #1
 80200e6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80200ea:	0976      	lsrs	r6, r6, #5
 80200ec:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80200f0:	ea4c 0c06 	orr.w	ip, ip, r6
 80200f4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80200f8:	e7ba      	b.n	8020070 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80200fa:	b007      	add	sp, #28
 80200fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020100 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020104:	b085      	sub	sp, #20
 8020106:	468b      	mov	fp, r1
 8020108:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802010a:	9203      	str	r2, [sp, #12]
 802010c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8020110:	6841      	ldr	r1, [r0, #4]
 8020112:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8020116:	fb01 2404 	mla	r4, r1, r4, r2
 802011a:	6802      	ldr	r2, [r0, #0]
 802011c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020120:	f8d8 2000 	ldr.w	r2, [r8]
 8020124:	9201      	str	r2, [sp, #4]
 8020126:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802012a:	f1bb 0f00 	cmp.w	fp, #0
 802012e:	dc03      	bgt.n	8020138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020130:	9a03      	ldr	r2, [sp, #12]
 8020132:	2a00      	cmp	r2, #0
 8020134:	f340 814f 	ble.w	80203d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8020138:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802013a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 802013e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8020142:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020146:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020148:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802014c:	2b00      	cmp	r3, #0
 802014e:	dd0e      	ble.n	802016e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020150:	1408      	asrs	r0, r1, #16
 8020152:	d405      	bmi.n	8020160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020154:	42b8      	cmp	r0, r7
 8020156:	da03      	bge.n	8020160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020158:	1410      	asrs	r0, r2, #16
 802015a:	d401      	bmi.n	8020160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802015c:	42b0      	cmp	r0, r6
 802015e:	db07      	blt.n	8020170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020160:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020162:	4401      	add	r1, r0
 8020164:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020166:	3b01      	subs	r3, #1
 8020168:	4402      	add	r2, r0
 802016a:	3402      	adds	r4, #2
 802016c:	e7ee      	b.n	802014c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802016e:	d017      	beq.n	80201a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020170:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020172:	1e58      	subs	r0, r3, #1
 8020174:	fb05 1500 	mla	r5, r5, r0, r1
 8020178:	142d      	asrs	r5, r5, #16
 802017a:	d409      	bmi.n	8020190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802017c:	42bd      	cmp	r5, r7
 802017e:	da07      	bge.n	8020190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020180:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020182:	fb05 2000 	mla	r0, r5, r0, r2
 8020186:	1400      	asrs	r0, r0, #16
 8020188:	d402      	bmi.n	8020190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802018a:	42b0      	cmp	r0, r6
 802018c:	f2c0 80ba 	blt.w	8020304 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020190:	2600      	movs	r6, #0
 8020192:	1998      	adds	r0, r3, r6
 8020194:	2800      	cmp	r0, #0
 8020196:	dc3e      	bgt.n	8020216 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020198:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802019c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80201a0:	f1bb 0f00 	cmp.w	fp, #0
 80201a4:	f340 8117 	ble.w	80203d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80201a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80201ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80201b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80201b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80201b6:	f1bb 0b01 	subs.w	fp, fp, #1
 80201ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80201be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80201c2:	eeb0 6a62 	vmov.f32	s12, s5
 80201c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80201ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80201ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80201d2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80201d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80201da:	eeb0 6a43 	vmov.f32	s12, s6
 80201de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80201e2:	ee12 2a90 	vmov	r2, s5
 80201e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80201ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80201ee:	ee13 2a10 	vmov	r2, s6
 80201f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80201f6:	9311      	str	r3, [sp, #68]	@ 0x44
 80201f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80201fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80201fe:	9a03      	ldr	r2, [sp, #12]
 8020200:	9312      	str	r3, [sp, #72]	@ 0x48
 8020202:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8020206:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020208:	eeb0 3a67 	vmov.f32	s6, s15
 802020c:	bf08      	it	eq
 802020e:	4613      	moveq	r3, r2
 8020210:	eef0 2a47 	vmov.f32	s5, s14
 8020214:	e789      	b.n	802012a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8020216:	140f      	asrs	r7, r1, #16
 8020218:	d424      	bmi.n	8020264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802021a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 802021e:	42bd      	cmp	r5, r7
 8020220:	dd20      	ble.n	8020264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020222:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8020226:	d41d      	bmi.n	8020264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020228:	f8d8 000c 	ldr.w	r0, [r8, #12]
 802022c:	4560      	cmp	r0, ip
 802022e:	dd19      	ble.n	8020264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020230:	b22d      	sxth	r5, r5
 8020232:	fb0c 7505 	mla	r5, ip, r5, r7
 8020236:	9801      	ldr	r0, [sp, #4]
 8020238:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 802023c:	0e07      	lsrs	r7, r0, #24
 802023e:	2fff      	cmp	r7, #255	@ 0xff
 8020240:	d116      	bne.n	8020270 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8020242:	f06f 0501 	mvn.w	r5, #1
 8020246:	fb05 f706 	mul.w	r7, r5, r6
 802024a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 802024e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8020252:	0945      	lsrs	r5, r0, #5
 8020254:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020258:	ea4c 0505 	orr.w	r5, ip, r5
 802025c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8020260:	4305      	orrs	r5, r0
 8020262:	53e5      	strh	r5, [r4, r7]
 8020264:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020266:	4401      	add	r1, r0
 8020268:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802026a:	3e01      	subs	r6, #1
 802026c:	4402      	add	r2, r0
 802026e:	e790      	b.n	8020192 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020270:	b2fd      	uxtb	r5, r7
 8020272:	2f00      	cmp	r7, #0
 8020274:	d0f6      	beq.n	8020264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020276:	f06f 0701 	mvn.w	r7, #1
 802027a:	4377      	muls	r7, r6
 802027c:	fa1f f985 	uxth.w	r9, r5
 8020280:	f834 e007 	ldrh.w	lr, [r4, r7]
 8020284:	9702      	str	r7, [sp, #8]
 8020286:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 802028a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 802028e:	43ed      	mvns	r5, r5
 8020290:	b2ed      	uxtb	r5, r5
 8020292:	fb17 f709 	smulbb	r7, r7, r9
 8020296:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802029a:	fb0c 7c05 	mla	ip, ip, r5, r7
 802029e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80202a2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80202a6:	b2c0      	uxtb	r0, r0
 80202a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80202ac:	fa5f fe8e 	uxtb.w	lr, lr
 80202b0:	fb10 f009 	smulbb	r0, r0, r9
 80202b4:	fb0e 0005 	mla	r0, lr, r5, r0
 80202b8:	b280      	uxth	r0, r0
 80202ba:	fa1f fc8c 	uxth.w	ip, ip
 80202be:	fb1a fa09 	smulbb	sl, sl, r9
 80202c2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80202c6:	fb07 a705 	mla	r7, r7, r5, sl
 80202ca:	f100 0a01 	add.w	sl, r0, #1
 80202ce:	f10c 0501 	add.w	r5, ip, #1
 80202d2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80202d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80202da:	b2bf      	uxth	r7, r7
 80202dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80202e0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80202e4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80202e8:	f107 0a01 	add.w	sl, r7, #1
 80202ec:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80202f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80202f4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80202f8:	9802      	ldr	r0, [sp, #8]
 80202fa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80202fe:	f824 c000 	strh.w	ip, [r4, r0]
 8020302:	e7af      	b.n	8020264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020304:	f04f 0e00 	mov.w	lr, #0
 8020308:	eba3 000e 	sub.w	r0, r3, lr
 802030c:	2800      	cmp	r0, #0
 802030e:	f77f af43 	ble.w	8020198 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8020312:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8020316:	140d      	asrs	r5, r1, #16
 8020318:	1410      	asrs	r0, r2, #16
 802031a:	fb06 5000 	mla	r0, r6, r0, r5
 802031e:	9d01      	ldr	r5, [sp, #4]
 8020320:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8020324:	0e2e      	lsrs	r6, r5, #24
 8020326:	2eff      	cmp	r6, #255	@ 0xff
 8020328:	d112      	bne.n	8020350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 802032a:	482c      	ldr	r0, [pc, #176]	@ (80203dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 802032c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8020330:	0968      	lsrs	r0, r5, #5
 8020332:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020336:	4330      	orrs	r0, r6
 8020338:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802033c:	4328      	orrs	r0, r5
 802033e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8020342:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020344:	4401      	add	r1, r0
 8020346:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020348:	f10e 0e01 	add.w	lr, lr, #1
 802034c:	4402      	add	r2, r0
 802034e:	e7db      	b.n	8020308 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8020350:	b2f0      	uxtb	r0, r6
 8020352:	2e00      	cmp	r6, #0
 8020354:	d0f5      	beq.n	8020342 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020356:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 802035a:	fa1f f980 	uxth.w	r9, r0
 802035e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020362:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8020366:	43c0      	mvns	r0, r0
 8020368:	b2c0      	uxtb	r0, r0
 802036a:	fb16 f609 	smulbb	r6, r6, r9
 802036e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020372:	fb07 6700 	mla	r7, r7, r0, r6
 8020376:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 802037a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 802037e:	b2ed      	uxtb	r5, r5
 8020380:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020384:	fa5f fc8c 	uxtb.w	ip, ip
 8020388:	fb15 f509 	smulbb	r5, r5, r9
 802038c:	fb0c 5500 	mla	r5, ip, r0, r5
 8020390:	b2bf      	uxth	r7, r7
 8020392:	fb1a fa09 	smulbb	sl, sl, r9
 8020396:	b2ad      	uxth	r5, r5
 8020398:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802039c:	fb06 a600 	mla	r6, r6, r0, sl
 80203a0:	1c78      	adds	r0, r7, #1
 80203a2:	f105 0a01 	add.w	sl, r5, #1
 80203a6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80203aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80203ae:	b2b6      	uxth	r6, r6
 80203b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80203b4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80203b8:	ea4a 0707 	orr.w	r7, sl, r7
 80203bc:	f106 0a01 	add.w	sl, r6, #1
 80203c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80203c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80203c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80203cc:	ea47 070a 	orr.w	r7, r7, sl
 80203d0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80203d4:	e7b5      	b.n	8020342 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80203d6:	b005      	add	sp, #20
 80203d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203dc:	fffff800 	.word	0xfffff800

080203e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80203e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203e4:	b087      	sub	sp, #28
 80203e6:	468b      	mov	fp, r1
 80203e8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80203ea:	9203      	str	r2, [sp, #12]
 80203ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80203f0:	9204      	str	r2, [sp, #16]
 80203f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80203f6:	6841      	ldr	r1, [r0, #4]
 80203f8:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80203fc:	fb01 2404 	mla	r4, r1, r4, r2
 8020400:	6802      	ldr	r2, [r0, #0]
 8020402:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020406:	f8d9 2008 	ldr.w	r2, [r9, #8]
 802040a:	3201      	adds	r2, #1
 802040c:	f022 0201 	bic.w	r2, r2, #1
 8020410:	9200      	str	r2, [sp, #0]
 8020412:	f8d9 2000 	ldr.w	r2, [r9]
 8020416:	9201      	str	r2, [sp, #4]
 8020418:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802041c:	f1bb 0f00 	cmp.w	fp, #0
 8020420:	dc03      	bgt.n	802042a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020422:	9a03      	ldr	r2, [sp, #12]
 8020424:	2a00      	cmp	r2, #0
 8020426:	f340 8169 	ble.w	80206fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802042a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802042c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8020430:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8020434:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8020438:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802043a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 802043e:	2b00      	cmp	r3, #0
 8020440:	dd0e      	ble.n	8020460 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020442:	1402      	asrs	r2, r0, #16
 8020444:	d405      	bmi.n	8020452 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020446:	42ba      	cmp	r2, r7
 8020448:	da03      	bge.n	8020452 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802044a:	140a      	asrs	r2, r1, #16
 802044c:	d401      	bmi.n	8020452 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802044e:	42b2      	cmp	r2, r6
 8020450:	db07      	blt.n	8020462 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020452:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020454:	4410      	add	r0, r2
 8020456:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020458:	3b01      	subs	r3, #1
 802045a:	4411      	add	r1, r2
 802045c:	3402      	adds	r4, #2
 802045e:	e7ee      	b.n	802043e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8020460:	d017      	beq.n	8020492 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8020462:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020464:	1e5a      	subs	r2, r3, #1
 8020466:	fb05 0502 	mla	r5, r5, r2, r0
 802046a:	142d      	asrs	r5, r5, #16
 802046c:	d409      	bmi.n	8020482 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 802046e:	42bd      	cmp	r5, r7
 8020470:	da07      	bge.n	8020482 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020472:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020474:	fb05 1202 	mla	r2, r5, r2, r1
 8020478:	1412      	asrs	r2, r2, #16
 802047a:	d402      	bmi.n	8020482 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 802047c:	42b2      	cmp	r2, r6
 802047e:	f2c0 80c7 	blt.w	8020610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8020482:	2700      	movs	r7, #0
 8020484:	19da      	adds	r2, r3, r7
 8020486:	2a00      	cmp	r2, #0
 8020488:	dc3e      	bgt.n	8020508 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 802048a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802048e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020492:	f1bb 0f00 	cmp.w	fp, #0
 8020496:	f340 8131 	ble.w	80206fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802049a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802049e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80204a2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80204a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80204a8:	f1bb 0b01 	subs.w	fp, fp, #1
 80204ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80204b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80204b4:	eeb0 6a62 	vmov.f32	s12, s5
 80204b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80204bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80204c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80204c4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80204c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80204cc:	eeb0 6a43 	vmov.f32	s12, s6
 80204d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80204d4:	ee12 2a90 	vmov	r2, s5
 80204d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80204dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80204e0:	ee13 2a10 	vmov	r2, s6
 80204e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80204e8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80204ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80204ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80204f0:	9a03      	ldr	r2, [sp, #12]
 80204f2:	9314      	str	r3, [sp, #80]	@ 0x50
 80204f4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80204f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80204fa:	eeb0 3a67 	vmov.f32	s6, s15
 80204fe:	bf08      	it	eq
 8020500:	4613      	moveq	r3, r2
 8020502:	eef0 2a47 	vmov.f32	s5, s14
 8020506:	e789      	b.n	802041c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020508:	1405      	asrs	r5, r0, #16
 802050a:	d435      	bmi.n	8020578 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802050c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8020510:	42aa      	cmp	r2, r5
 8020512:	dd31      	ble.n	8020578 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020514:	140e      	asrs	r6, r1, #16
 8020516:	d42f      	bmi.n	8020578 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020518:	f8d9 200c 	ldr.w	r2, [r9, #12]
 802051c:	42b2      	cmp	r2, r6
 802051e:	dd2b      	ble.n	8020578 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020520:	9a00      	ldr	r2, [sp, #0]
 8020522:	fb06 5502 	mla	r5, r6, r2, r5
 8020526:	086a      	lsrs	r2, r5, #1
 8020528:	9e01      	ldr	r6, [sp, #4]
 802052a:	5cb2      	ldrb	r2, [r6, r2]
 802052c:	07ee      	lsls	r6, r5, #31
 802052e:	bf54      	ite	pl
 8020530:	f002 020f 	andpl.w	r2, r2, #15
 8020534:	1112      	asrmi	r2, r2, #4
 8020536:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802053a:	b2d2      	uxtb	r2, r2
 802053c:	b1e2      	cbz	r2, 8020578 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802053e:	9d04      	ldr	r5, [sp, #16]
 8020540:	436a      	muls	r2, r5
 8020542:	1c55      	adds	r5, r2, #1
 8020544:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8020548:	4d6e      	ldr	r5, [pc, #440]	@ (8020704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 802054a:	682d      	ldr	r5, [r5, #0]
 802054c:	1212      	asrs	r2, r2, #8
 802054e:	0a2e      	lsrs	r6, r5, #8
 8020550:	2aff      	cmp	r2, #255	@ 0xff
 8020552:	9605      	str	r6, [sp, #20]
 8020554:	d116      	bne.n	8020584 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020556:	f06f 0201 	mvn.w	r2, #1
 802055a:	fb02 fc07 	mul.w	ip, r2, r7
 802055e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8020562:	096a      	lsrs	r2, r5, #5
 8020564:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020568:	f026 0607 	bic.w	r6, r6, #7
 802056c:	4316      	orrs	r6, r2
 802056e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020572:	432e      	orrs	r6, r5
 8020574:	f824 600c 	strh.w	r6, [r4, ip]
 8020578:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802057a:	4410      	add	r0, r2
 802057c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802057e:	3f01      	subs	r7, #1
 8020580:	4411      	add	r1, r2
 8020582:	e77f      	b.n	8020484 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8020584:	f06f 0601 	mvn.w	r6, #1
 8020588:	437e      	muls	r6, r7
 802058a:	fa1f fa82 	uxth.w	sl, r2
 802058e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8020592:	9602      	str	r6, [sp, #8]
 8020594:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8020598:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 802059c:	43d2      	mvns	r2, r2
 802059e:	b2d2      	uxtb	r2, r2
 80205a0:	fb1c fc0a 	smulbb	ip, ip, sl
 80205a4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80205a8:	fb0e ce02 	mla	lr, lr, r2, ip
 80205ac:	b2ed      	uxtb	r5, r5
 80205ae:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80205b2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80205b6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80205ba:	fa5f f888 	uxtb.w	r8, r8
 80205be:	fb15 f50a 	smulbb	r5, r5, sl
 80205c2:	fb08 5502 	mla	r5, r8, r2, r5
 80205c6:	fa1f fe8e 	uxth.w	lr, lr
 80205ca:	fb16 f60a 	smulbb	r6, r6, sl
 80205ce:	b2ad      	uxth	r5, r5
 80205d0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80205d4:	fb0c 6c02 	mla	ip, ip, r2, r6
 80205d8:	f10e 0201 	add.w	r2, lr, #1
 80205dc:	1c6e      	adds	r6, r5, #1
 80205de:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80205e2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80205e6:	fa1f fc8c 	uxth.w	ip, ip
 80205ea:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80205ee:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80205f2:	ea46 0e0e 	orr.w	lr, r6, lr
 80205f6:	f10c 0601 	add.w	r6, ip, #1
 80205fa:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80205fe:	0976      	lsrs	r6, r6, #5
 8020600:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020604:	9a02      	ldr	r2, [sp, #8]
 8020606:	ea4e 0e06 	orr.w	lr, lr, r6
 802060a:	f824 e002 	strh.w	lr, [r4, r2]
 802060e:	e7b3      	b.n	8020578 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020610:	f04f 0800 	mov.w	r8, #0
 8020614:	eba3 0208 	sub.w	r2, r3, r8
 8020618:	2a00      	cmp	r2, #0
 802061a:	f77f af36 	ble.w	802048a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802061e:	9e00      	ldr	r6, [sp, #0]
 8020620:	1402      	asrs	r2, r0, #16
 8020622:	140d      	asrs	r5, r1, #16
 8020624:	fb06 2505 	mla	r5, r6, r5, r2
 8020628:	086a      	lsrs	r2, r5, #1
 802062a:	9e01      	ldr	r6, [sp, #4]
 802062c:	5cb2      	ldrb	r2, [r6, r2]
 802062e:	07ed      	lsls	r5, r5, #31
 8020630:	bf54      	ite	pl
 8020632:	f002 020f 	andpl.w	r2, r2, #15
 8020636:	1112      	asrmi	r2, r2, #4
 8020638:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802063c:	b2d2      	uxtb	r2, r2
 802063e:	b1c2      	cbz	r2, 8020672 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8020640:	9d04      	ldr	r5, [sp, #16]
 8020642:	436a      	muls	r2, r5
 8020644:	1c55      	adds	r5, r2, #1
 8020646:	eb05 2222 	add.w	r2, r5, r2, asr #8
 802064a:	4d2e      	ldr	r5, [pc, #184]	@ (8020704 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 802064c:	1212      	asrs	r2, r2, #8
 802064e:	682e      	ldr	r6, [r5, #0]
 8020650:	2aff      	cmp	r2, #255	@ 0xff
 8020652:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8020656:	d113      	bne.n	8020680 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8020658:	0972      	lsrs	r2, r6, #5
 802065a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 802065e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020662:	f025 0507 	bic.w	r5, r5, #7
 8020666:	4315      	orrs	r5, r2
 8020668:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 802066c:	4335      	orrs	r5, r6
 802066e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8020672:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020674:	4410      	add	r0, r2
 8020676:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020678:	f108 0801 	add.w	r8, r8, #1
 802067c:	4411      	add	r1, r2
 802067e:	e7c9      	b.n	8020614 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020680:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8020684:	fa1f fa82 	uxth.w	sl, r2
 8020688:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 802068c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8020690:	43d2      	mvns	r2, r2
 8020692:	b2d2      	uxtb	r2, r2
 8020694:	fb17 f70a 	smulbb	r7, r7, sl
 8020698:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802069c:	fb0c 7c02 	mla	ip, ip, r2, r7
 80206a0:	b2f6      	uxtb	r6, r6
 80206a2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80206a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80206aa:	fa5f fe8e 	uxtb.w	lr, lr
 80206ae:	fb16 f60a 	smulbb	r6, r6, sl
 80206b2:	fb0e 6602 	mla	r6, lr, r2, r6
 80206b6:	b2ed      	uxtb	r5, r5
 80206b8:	fa1f fc8c 	uxth.w	ip, ip
 80206bc:	fb15 f50a 	smulbb	r5, r5, sl
 80206c0:	b2b6      	uxth	r6, r6
 80206c2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80206c6:	fb07 5702 	mla	r7, r7, r2, r5
 80206ca:	f10c 0201 	add.w	r2, ip, #1
 80206ce:	1c75      	adds	r5, r6, #1
 80206d0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80206d4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80206d8:	b2bf      	uxth	r7, r7
 80206da:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80206de:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80206e2:	ea45 0c0c 	orr.w	ip, r5, ip
 80206e6:	1c7d      	adds	r5, r7, #1
 80206e8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80206ec:	096d      	lsrs	r5, r5, #5
 80206ee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80206f2:	ea4c 0c05 	orr.w	ip, ip, r5
 80206f6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80206fa:	e7ba      	b.n	8020672 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80206fc:	b007      	add	sp, #28
 80206fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020702:	bf00      	nop
 8020704:	20013894 	.word	0x20013894

08020708 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802070c:	b087      	sub	sp, #28
 802070e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8020a1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8020712:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020714:	9205      	str	r2, [sp, #20]
 8020716:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 802071a:	9101      	str	r1, [sp, #4]
 802071c:	6841      	ldr	r1, [r0, #4]
 802071e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8020722:	fb01 2404 	mla	r4, r1, r4, r2
 8020726:	6802      	ldr	r2, [r0, #0]
 8020728:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 802072c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8020730:	3201      	adds	r2, #1
 8020732:	f022 0201 	bic.w	r2, r2, #1
 8020736:	9202      	str	r2, [sp, #8]
 8020738:	f8db 2000 	ldr.w	r2, [fp]
 802073c:	9203      	str	r2, [sp, #12]
 802073e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8020742:	9a01      	ldr	r2, [sp, #4]
 8020744:	2a00      	cmp	r2, #0
 8020746:	dc03      	bgt.n	8020750 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020748:	9a05      	ldr	r2, [sp, #20]
 802074a:	2a00      	cmp	r2, #0
 802074c:	f340 8162 	ble.w	8020a14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020750:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020752:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8020756:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 802075a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 802075e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020760:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020764:	2b00      	cmp	r3, #0
 8020766:	dd0e      	ble.n	8020786 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8020768:	1402      	asrs	r2, r0, #16
 802076a:	d405      	bmi.n	8020778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802076c:	42ba      	cmp	r2, r7
 802076e:	da03      	bge.n	8020778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020770:	140a      	asrs	r2, r1, #16
 8020772:	d401      	bmi.n	8020778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020774:	42b2      	cmp	r2, r6
 8020776:	db07      	blt.n	8020788 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020778:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802077a:	4410      	add	r0, r2
 802077c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802077e:	3b01      	subs	r3, #1
 8020780:	4411      	add	r1, r2
 8020782:	3402      	adds	r4, #2
 8020784:	e7ee      	b.n	8020764 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8020786:	d017      	beq.n	80207b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8020788:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802078a:	1e5a      	subs	r2, r3, #1
 802078c:	fb05 0502 	mla	r5, r5, r2, r0
 8020790:	142d      	asrs	r5, r5, #16
 8020792:	d409      	bmi.n	80207a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020794:	42bd      	cmp	r5, r7
 8020796:	da07      	bge.n	80207a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020798:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802079a:	fb05 1202 	mla	r2, r5, r2, r1
 802079e:	1412      	asrs	r2, r2, #16
 80207a0:	d402      	bmi.n	80207a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80207a2:	42b2      	cmp	r2, r6
 80207a4:	f2c0 80c3 	blt.w	802092e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80207a8:	2500      	movs	r5, #0
 80207aa:	195a      	adds	r2, r3, r5
 80207ac:	2a00      	cmp	r2, #0
 80207ae:	dc3f      	bgt.n	8020830 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80207b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80207b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80207b8:	9b01      	ldr	r3, [sp, #4]
 80207ba:	2b00      	cmp	r3, #0
 80207bc:	f340 812a 	ble.w	8020a14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80207c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80207c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80207c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80207cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80207ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80207d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80207d6:	eeb0 6a62 	vmov.f32	s12, s5
 80207da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80207de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80207e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80207e6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80207ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80207ee:	eeb0 6a43 	vmov.f32	s12, s6
 80207f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80207f6:	ee12 2a90 	vmov	r2, s5
 80207fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80207fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8020802:	ee13 2a10 	vmov	r2, s6
 8020806:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020808:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802080a:	fb92 f3f3 	sdiv	r3, r2, r3
 802080e:	9314      	str	r3, [sp, #80]	@ 0x50
 8020810:	9b01      	ldr	r3, [sp, #4]
 8020812:	9a05      	ldr	r2, [sp, #20]
 8020814:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020818:	3b01      	subs	r3, #1
 802081a:	9301      	str	r3, [sp, #4]
 802081c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8020820:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020822:	eeb0 3a67 	vmov.f32	s6, s15
 8020826:	bf08      	it	eq
 8020828:	4613      	moveq	r3, r2
 802082a:	eef0 2a47 	vmov.f32	s5, s14
 802082e:	e788      	b.n	8020742 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020830:	1406      	asrs	r6, r0, #16
 8020832:	d42c      	bmi.n	802088e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020834:	f8db 2008 	ldr.w	r2, [fp, #8]
 8020838:	42b2      	cmp	r2, r6
 802083a:	dd28      	ble.n	802088e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802083c:	140f      	asrs	r7, r1, #16
 802083e:	d426      	bmi.n	802088e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020840:	f8db 200c 	ldr.w	r2, [fp, #12]
 8020844:	42ba      	cmp	r2, r7
 8020846:	dd22      	ble.n	802088e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020848:	9a02      	ldr	r2, [sp, #8]
 802084a:	fb07 6602 	mla	r6, r7, r2, r6
 802084e:	0872      	lsrs	r2, r6, #1
 8020850:	9f03      	ldr	r7, [sp, #12]
 8020852:	5cba      	ldrb	r2, [r7, r2]
 8020854:	07f6      	lsls	r6, r6, #31
 8020856:	bf54      	ite	pl
 8020858:	f002 020f 	andpl.w	r2, r2, #15
 802085c:	1112      	asrmi	r2, r2, #4
 802085e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020862:	b2d2      	uxtb	r2, r2
 8020864:	2aff      	cmp	r2, #255	@ 0xff
 8020866:	d118      	bne.n	802089a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8020868:	f8d8 2000 	ldr.w	r2, [r8]
 802086c:	f06f 0601 	mvn.w	r6, #1
 8020870:	fb06 f705 	mul.w	r7, r6, r5
 8020874:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8020878:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 802087c:	0956      	lsrs	r6, r2, #5
 802087e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020882:	ea4c 0606 	orr.w	r6, ip, r6
 8020886:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802088a:	4316      	orrs	r6, r2
 802088c:	53e6      	strh	r6, [r4, r7]
 802088e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020890:	4410      	add	r0, r2
 8020892:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020894:	3d01      	subs	r5, #1
 8020896:	4411      	add	r1, r2
 8020898:	e787      	b.n	80207aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 802089a:	2a00      	cmp	r2, #0
 802089c:	d0f7      	beq.n	802088e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802089e:	f06f 0601 	mvn.w	r6, #1
 80208a2:	436e      	muls	r6, r5
 80208a4:	f8d8 c000 	ldr.w	ip, [r8]
 80208a8:	f834 e006 	ldrh.w	lr, [r4, r6]
 80208ac:	9604      	str	r6, [sp, #16]
 80208ae:	fa1f f982 	uxth.w	r9, r2
 80208b2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80208b6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80208ba:	43d2      	mvns	r2, r2
 80208bc:	b2d2      	uxtb	r2, r2
 80208be:	fb16 f609 	smulbb	r6, r6, r9
 80208c2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80208c6:	fb07 6702 	mla	r7, r7, r2, r6
 80208ca:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80208ce:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80208d2:	fa5f fc8c 	uxtb.w	ip, ip
 80208d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80208da:	fa5f fe8e 	uxtb.w	lr, lr
 80208de:	fb1c fc09 	smulbb	ip, ip, r9
 80208e2:	fb0e cc02 	mla	ip, lr, r2, ip
 80208e6:	b2bf      	uxth	r7, r7
 80208e8:	fb1a fa09 	smulbb	sl, sl, r9
 80208ec:	fa1f fc8c 	uxth.w	ip, ip
 80208f0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80208f4:	fb06 a602 	mla	r6, r6, r2, sl
 80208f8:	1c7a      	adds	r2, r7, #1
 80208fa:	f10c 0a01 	add.w	sl, ip, #1
 80208fe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8020902:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8020906:	b2b6      	uxth	r6, r6
 8020908:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 802090c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8020910:	ea4a 0707 	orr.w	r7, sl, r7
 8020914:	f106 0a01 	add.w	sl, r6, #1
 8020918:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 802091c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020920:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8020924:	9a04      	ldr	r2, [sp, #16]
 8020926:	ea47 070a 	orr.w	r7, r7, sl
 802092a:	52a7      	strh	r7, [r4, r2]
 802092c:	e7af      	b.n	802088e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802092e:	f04f 0e00 	mov.w	lr, #0
 8020932:	eba3 020e 	sub.w	r2, r3, lr
 8020936:	2a00      	cmp	r2, #0
 8020938:	f77f af3a 	ble.w	80207b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802093c:	9e02      	ldr	r6, [sp, #8]
 802093e:	1402      	asrs	r2, r0, #16
 8020940:	140d      	asrs	r5, r1, #16
 8020942:	fb06 2505 	mla	r5, r6, r5, r2
 8020946:	086a      	lsrs	r2, r5, #1
 8020948:	9e03      	ldr	r6, [sp, #12]
 802094a:	5cb2      	ldrb	r2, [r6, r2]
 802094c:	07ed      	lsls	r5, r5, #31
 802094e:	bf54      	ite	pl
 8020950:	f002 020f 	andpl.w	r2, r2, #15
 8020954:	1112      	asrmi	r2, r2, #4
 8020956:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802095a:	b2d2      	uxtb	r2, r2
 802095c:	2aff      	cmp	r2, #255	@ 0xff
 802095e:	d115      	bne.n	802098c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8020960:	f8d8 5000 	ldr.w	r5, [r8]
 8020964:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8020968:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 802096c:	096a      	lsrs	r2, r5, #5
 802096e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020972:	4332      	orrs	r2, r6
 8020974:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020978:	432a      	orrs	r2, r5
 802097a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 802097e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020980:	4410      	add	r0, r2
 8020982:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020984:	f10e 0e01 	add.w	lr, lr, #1
 8020988:	4411      	add	r1, r2
 802098a:	e7d2      	b.n	8020932 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802098c:	2a00      	cmp	r2, #0
 802098e:	d0f6      	beq.n	802097e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020990:	f8d8 7000 	ldr.w	r7, [r8]
 8020994:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8020998:	fa1f f982 	uxth.w	r9, r2
 802099c:	ea4f 262c 	mov.w	r6, ip, asr #8
 80209a0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80209a4:	43d2      	mvns	r2, r2
 80209a6:	b2d2      	uxtb	r2, r2
 80209a8:	fb15 f509 	smulbb	r5, r5, r9
 80209ac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80209b0:	fb06 5602 	mla	r6, r6, r2, r5
 80209b4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80209b8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80209bc:	b2ff      	uxtb	r7, r7
 80209be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80209c2:	fa5f fc8c 	uxtb.w	ip, ip
 80209c6:	fb17 f709 	smulbb	r7, r7, r9
 80209ca:	fb0c 7702 	mla	r7, ip, r2, r7
 80209ce:	b2b6      	uxth	r6, r6
 80209d0:	fb1a fa09 	smulbb	sl, sl, r9
 80209d4:	b2bf      	uxth	r7, r7
 80209d6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80209da:	fb05 a502 	mla	r5, r5, r2, sl
 80209de:	1c72      	adds	r2, r6, #1
 80209e0:	f107 0a01 	add.w	sl, r7, #1
 80209e4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80209e8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80209ec:	b2ad      	uxth	r5, r5
 80209ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80209f2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80209f6:	ea4a 0606 	orr.w	r6, sl, r6
 80209fa:	f105 0a01 	add.w	sl, r5, #1
 80209fe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020a02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020a06:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8020a0a:	ea46 060a 	orr.w	r6, r6, sl
 8020a0e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8020a12:	e7b4      	b.n	802097e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020a14:	b007      	add	sp, #28
 8020a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a1a:	bf00      	nop
 8020a1c:	20013894 	.word	0x20013894

08020a20 <_ZN8touchgfx8LCD16bppD1Ev>:
 8020a20:	4770      	bx	lr

08020a22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8020a22:	4770      	bx	lr

08020a24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8020a24:	4770      	bx	lr

08020a26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8020a26:	4770      	bx	lr

08020a28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8020a28:	4770      	bx	lr

08020a2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8020a2a:	4770      	bx	lr

08020a2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8020a2c:	4770      	bx	lr

08020a2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8020a2e:	4770      	bx	lr

08020a30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8020a30:	4770      	bx	lr

08020a32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8020a32:	4770      	bx	lr

08020a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8020a34:	4770      	bx	lr

08020a36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8020a36:	4770      	bx	lr

08020a38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8020a38:	4770      	bx	lr

08020a3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8020a3a:	4770      	bx	lr

08020a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8020a3c:	4770      	bx	lr

08020a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8020a3e:	4770      	bx	lr

08020a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8020a40:	4770      	bx	lr

08020a42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8020a42:	4770      	bx	lr

08020a44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8020a44:	4770      	bx	lr

08020a46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8020a46:	4770      	bx	lr

08020a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8020a48:	4770      	bx	lr

08020a4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8020a4a:	4770      	bx	lr

08020a4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8020a4c:	4770      	bx	lr

08020a4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8020a4e:	4770      	bx	lr

08020a50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8020a50:	4770      	bx	lr

08020a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8020a52:	4770      	bx	lr

08020a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8020a54:	4770      	bx	lr

08020a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8020a56:	4770      	bx	lr

08020a58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8020a58:	4770      	bx	lr

08020a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8020a5a:	4770      	bx	lr

08020a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8020a5c:	4770      	bx	lr

08020a5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8020a5e:	4770      	bx	lr

08020a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8020a60:	4770      	bx	lr

08020a62 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8020a62:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020a66:	b088      	sub	sp, #32
 8020a68:	ac08      	add	r4, sp, #32
 8020a6a:	4606      	mov	r6, r0
 8020a6c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8020a70:	4620      	mov	r0, r4
 8020a72:	4688      	mov	r8, r1
 8020a74:	4691      	mov	r9, r2
 8020a76:	f7fd fc31 	bl	801e2dc <_ZNK8touchgfx6Bitmap7getDataEv>
 8020a7a:	6833      	ldr	r3, [r6, #0]
 8020a7c:	4605      	mov	r5, r0
 8020a7e:	4620      	mov	r0, r4
 8020a80:	699f      	ldr	r7, [r3, #24]
 8020a82:	f7fd fb39 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8020a86:	4682      	mov	sl, r0
 8020a88:	4620      	mov	r0, r4
 8020a8a:	f7fd fb69 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8020a8e:	9500      	str	r5, [sp, #0]
 8020a90:	e9cd a001 	strd	sl, r0, [sp, #4]
 8020a94:	464b      	mov	r3, r9
 8020a96:	a806      	add	r0, sp, #24
 8020a98:	4642      	mov	r2, r8
 8020a9a:	4631      	mov	r1, r6
 8020a9c:	47b8      	blx	r7
 8020a9e:	4628      	mov	r0, r5
 8020aa0:	b008      	add	sp, #32
 8020aa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08020aa8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8020aa8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020aac:	2300      	movs	r3, #0
 8020aae:	9300      	str	r3, [sp, #0]
 8020ab0:	4b3d      	ldr	r3, [pc, #244]	@ (8020ba8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8020ab2:	781b      	ldrb	r3, [r3, #0]
 8020ab4:	2b00      	cmp	r3, #0
 8020ab6:	d137      	bne.n	8020b28 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8020ab8:	4a3c      	ldr	r2, [pc, #240]	@ (8020bac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8020aba:	f9b2 2000 	ldrsh.w	r2, [r2]
 8020abe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8020ac2:	2b00      	cmp	r3, #0
 8020ac4:	d132      	bne.n	8020b2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8020ac6:	4b3a      	ldr	r3, [pc, #232]	@ (8020bb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8020ac8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8020acc:	6808      	ldr	r0, [r1, #0]
 8020ace:	6849      	ldr	r1, [r1, #4]
 8020ad0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020ad4:	ac02      	add	r4, sp, #8
 8020ad6:	ab02      	add	r3, sp, #8
 8020ad8:	c303      	stmia	r3!, {r0, r1}
 8020ada:	4669      	mov	r1, sp
 8020adc:	4620      	mov	r0, r4
 8020ade:	f7f9 ff89 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ae2:	4668      	mov	r0, sp
 8020ae4:	f7f9 ff42 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ae8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8020aec:	f8bd 2000 	ldrh.w	r2, [sp]
 8020af0:	4d30      	ldr	r5, [pc, #192]	@ (8020bb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8020af2:	4413      	add	r3, r2
 8020af4:	f8ad 3008 	strh.w	r3, [sp, #8]
 8020af8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020afc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8020b00:	6828      	ldr	r0, [r5, #0]
 8020b02:	4413      	add	r3, r2
 8020b04:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020b08:	6803      	ldr	r3, [r0, #0]
 8020b0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8020b0c:	4798      	blx	r3
 8020b0e:	f010 0f01 	tst.w	r0, #1
 8020b12:	462f      	mov	r7, r5
 8020b14:	d00c      	beq.n	8020b30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8020b16:	6828      	ldr	r0, [r5, #0]
 8020b18:	6803      	ldr	r3, [r0, #0]
 8020b1a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8020b1e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8020b20:	4798      	blx	r3
 8020b22:	b004      	add	sp, #16
 8020b24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b28:	4a21      	ldr	r2, [pc, #132]	@ (8020bb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8020b2a:	e7c6      	b.n	8020aba <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8020b2c:	4b1f      	ldr	r3, [pc, #124]	@ (8020bac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8020b2e:	e7cb      	b.n	8020ac8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8020b30:	6838      	ldr	r0, [r7, #0]
 8020b32:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8020b36:	6803      	ldr	r3, [r0, #0]
 8020b38:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8020b3c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8020b3e:	4798      	blx	r3
 8020b40:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8020b44:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020b48:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8020b4c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8020b50:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020b54:	6838      	ldr	r0, [r7, #0]
 8020b56:	6803      	ldr	r3, [r0, #0]
 8020b58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020b5a:	4798      	blx	r3
 8020b5c:	4a13      	ldr	r2, [pc, #76]	@ (8020bac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8020b5e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8020b62:	8813      	ldrh	r3, [r2, #0]
 8020b64:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020b68:	fb03 1404 	mla	r4, r3, r4, r1
 8020b6c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020b70:	435d      	muls	r5, r3
 8020b72:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8020b76:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8020b7a:	4691      	mov	r9, r2
 8020b7c:	6838      	ldr	r0, [r7, #0]
 8020b7e:	42ac      	cmp	r4, r5
 8020b80:	6803      	ldr	r3, [r0, #0]
 8020b82:	d20e      	bcs.n	8020ba2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8020b84:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8020b88:	4632      	mov	r2, r6
 8020b8a:	4643      	mov	r3, r8
 8020b8c:	4621      	mov	r1, r4
 8020b8e:	47d0      	blx	sl
 8020b90:	f8b9 3000 	ldrh.w	r3, [r9]
 8020b94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020b98:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020b9c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8020ba0:	e7ec      	b.n	8020b7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8020ba2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020ba4:	4798      	blx	r3
 8020ba6:	e7bc      	b.n	8020b22 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8020ba8:	2001387c 	.word	0x2001387c
 8020bac:	2001387e 	.word	0x2001387e
 8020bb0:	20013880 	.word	0x20013880
 8020bb4:	20013884 	.word	0x20013884

08020bb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8020bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bbc:	b08b      	sub	sp, #44	@ 0x2c
 8020bbe:	460f      	mov	r7, r1
 8020bc0:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8020bc4:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8020bc8:	4616      	mov	r6, r2
 8020bca:	f1bb 0f00 	cmp.w	fp, #0
 8020bce:	d04a      	beq.n	8020c66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8020bd0:	6810      	ldr	r0, [r2, #0]
 8020bd2:	6851      	ldr	r1, [r2, #4]
 8020bd4:	ad06      	add	r5, sp, #24
 8020bd6:	c503      	stmia	r5!, {r0, r1}
 8020bd8:	6818      	ldr	r0, [r3, #0]
 8020bda:	6859      	ldr	r1, [r3, #4]
 8020bdc:	ad08      	add	r5, sp, #32
 8020bde:	c503      	stmia	r5!, {r0, r1}
 8020be0:	a806      	add	r0, sp, #24
 8020be2:	f7f9 fec3 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020be6:	4631      	mov	r1, r6
 8020be8:	a808      	add	r0, sp, #32
 8020bea:	f7f9 ff03 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020bee:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8020bf2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8020bf6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8020bfa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8020bfe:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8020c02:	fb16 2103 	smlabb	r1, r6, r3, r2
 8020c06:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8020c0a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8020c0e:	4f5f      	ldr	r7, [pc, #380]	@ (8020d8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8020c10:	440a      	add	r2, r1
 8020c12:	f8ad 2020 	strh.w	r2, [sp, #32]
 8020c16:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8020c1a:	6838      	ldr	r0, [r7, #0]
 8020c1c:	4413      	add	r3, r2
 8020c1e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8020c22:	6803      	ldr	r3, [r0, #0]
 8020c24:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8020c26:	4798      	blx	r3
 8020c28:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8020c2c:	46b9      	mov	r9, r7
 8020c2e:	d11d      	bne.n	8020c6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8020c30:	b9fc      	cbnz	r4, 8020c72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8020c32:	f010 0f01 	tst.w	r0, #1
 8020c36:	d01c      	beq.n	8020c72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8020c38:	f8d9 0000 	ldr.w	r0, [r9]
 8020c3c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8020c40:	6801      	ldr	r1, [r0, #0]
 8020c42:	f8cd b00c 	str.w	fp, [sp, #12]
 8020c46:	2700      	movs	r7, #0
 8020c48:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8020c4c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8020c50:	9402      	str	r4, [sp, #8]
 8020c52:	b2ad      	uxth	r5, r5
 8020c54:	fa1f f488 	uxth.w	r4, r8
 8020c58:	9501      	str	r5, [sp, #4]
 8020c5a:	9400      	str	r4, [sp, #0]
 8020c5c:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8020c5e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020c62:	4631      	mov	r1, r6
 8020c64:	47a0      	blx	r4
 8020c66:	b00b      	add	sp, #44	@ 0x2c
 8020c68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c6c:	f010 0f04 	tst.w	r0, #4
 8020c70:	e7e1      	b.n	8020c36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8020c72:	f8d9 0000 	ldr.w	r0, [r9]
 8020c76:	6803      	ldr	r3, [r0, #0]
 8020c78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020c7a:	4798      	blx	r3
 8020c7c:	4b44      	ldr	r3, [pc, #272]	@ (8020d90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8020c7e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8020c82:	881a      	ldrh	r2, [r3, #0]
 8020c84:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8020c88:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8020c8c:	fb02 1404 	mla	r4, r2, r4, r1
 8020c90:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020c94:	469a      	mov	sl, r3
 8020c96:	fb05 f502 	mul.w	r5, r5, r2
 8020c9a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8020c9e:	d059      	beq.n	8020d54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8020ca0:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8020ca4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8020ca8:	fa1f f28b 	uxth.w	r2, fp
 8020cac:	fa1f f989 	uxth.w	r9, r9
 8020cb0:	469e      	mov	lr, r3
 8020cb2:	42ac      	cmp	r4, r5
 8020cb4:	d264      	bcs.n	8020d80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8020cb6:	eb04 0a07 	add.w	sl, r4, r7
 8020cba:	4554      	cmp	r4, sl
 8020cbc:	d23d      	bcs.n	8020d3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8020cbe:	8821      	ldrh	r1, [r4, #0]
 8020cc0:	f836 3b02 	ldrh.w	r3, [r6], #2
 8020cc4:	1208      	asrs	r0, r1, #8
 8020cc6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020cca:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020cce:	fb10 f009 	smulbb	r0, r0, r9
 8020cd2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8020cd6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020cda:	00c9      	lsls	r1, r1, #3
 8020cdc:	fb0c 0c02 	mla	ip, ip, r2, r0
 8020ce0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8020ce4:	10d8      	asrs	r0, r3, #3
 8020ce6:	b2c9      	uxtb	r1, r1
 8020ce8:	00db      	lsls	r3, r3, #3
 8020cea:	fa1f fc8c 	uxth.w	ip, ip
 8020cee:	fb1b fb09 	smulbb	fp, fp, r9
 8020cf2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020cf6:	b2db      	uxtb	r3, r3
 8020cf8:	fb11 f109 	smulbb	r1, r1, r9
 8020cfc:	fb00 b002 	mla	r0, r0, r2, fp
 8020d00:	fb03 1302 	mla	r3, r3, r2, r1
 8020d04:	f10c 0b01 	add.w	fp, ip, #1
 8020d08:	b29b      	uxth	r3, r3
 8020d0a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8020d0e:	b280      	uxth	r0, r0
 8020d10:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8020d14:	f103 0c01 	add.w	ip, r3, #1
 8020d18:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020d1c:	1c43      	adds	r3, r0, #1
 8020d1e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020d22:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020d26:	0940      	lsrs	r0, r0, #5
 8020d28:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020d2c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020d30:	ea4c 0c00 	orr.w	ip, ip, r0
 8020d34:	f824 cb02 	strh.w	ip, [r4], #2
 8020d38:	e7bf      	b.n	8020cba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8020d3a:	f8be 3000 	ldrh.w	r3, [lr]
 8020d3e:	eba3 0308 	sub.w	r3, r3, r8
 8020d42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020d46:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8020d4a:	eba3 0308 	sub.w	r3, r3, r8
 8020d4e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8020d52:	e7ae      	b.n	8020cb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8020d54:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8020d58:	f8d9 0000 	ldr.w	r0, [r9]
 8020d5c:	42ac      	cmp	r4, r5
 8020d5e:	6803      	ldr	r3, [r0, #0]
 8020d60:	d20e      	bcs.n	8020d80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8020d62:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 8020d66:	4632      	mov	r2, r6
 8020d68:	463b      	mov	r3, r7
 8020d6a:	4621      	mov	r1, r4
 8020d6c:	47c0      	blx	r8
 8020d6e:	f8ba 3000 	ldrh.w	r3, [sl]
 8020d72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020d76:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8020d7a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8020d7e:	e7eb      	b.n	8020d58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8020d80:	4b02      	ldr	r3, [pc, #8]	@ (8020d8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8020d82:	6818      	ldr	r0, [r3, #0]
 8020d84:	6803      	ldr	r3, [r0, #0]
 8020d86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020d88:	4798      	blx	r3
 8020d8a:	e76c      	b.n	8020c66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8020d8c:	20013884 	.word	0x20013884
 8020d90:	2001387e 	.word	0x2001387e

08020d94 <_ZN8touchgfx8LCD16bppD0Ev>:
 8020d94:	b510      	push	{r4, lr}
 8020d96:	218c      	movs	r1, #140	@ 0x8c
 8020d98:	4604      	mov	r4, r0
 8020d9a:	f00c fa2c 	bl	802d1f6 <_ZdlPvj>
 8020d9e:	4620      	mov	r0, r4
 8020da0:	bd10      	pop	{r4, pc}

08020da2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8020da2:	b510      	push	{r4, lr}
 8020da4:	2104      	movs	r1, #4
 8020da6:	4604      	mov	r4, r0
 8020da8:	f00c fa25 	bl	802d1f6 <_ZdlPvj>
 8020dac:	4620      	mov	r0, r4
 8020dae:	bd10      	pop	{r4, pc}

08020db0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8020db0:	b510      	push	{r4, lr}
 8020db2:	2104      	movs	r1, #4
 8020db4:	4604      	mov	r4, r0
 8020db6:	f00c fa1e 	bl	802d1f6 <_ZdlPvj>
 8020dba:	4620      	mov	r0, r4
 8020dbc:	bd10      	pop	{r4, pc}

08020dbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8020dbe:	b510      	push	{r4, lr}
 8020dc0:	f640 0144 	movw	r1, #2116	@ 0x844
 8020dc4:	4604      	mov	r4, r0
 8020dc6:	f00c fa16 	bl	802d1f6 <_ZdlPvj>
 8020dca:	4620      	mov	r0, r4
 8020dcc:	bd10      	pop	{r4, pc}

08020dce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8020dce:	b510      	push	{r4, lr}
 8020dd0:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8020dd4:	4604      	mov	r4, r0
 8020dd6:	f00c fa0e 	bl	802d1f6 <_ZdlPvj>
 8020dda:	4620      	mov	r0, r4
 8020ddc:	bd10      	pop	{r4, pc}

08020dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8020dde:	b510      	push	{r4, lr}
 8020de0:	2104      	movs	r1, #4
 8020de2:	4604      	mov	r4, r0
 8020de4:	f00c fa07 	bl	802d1f6 <_ZdlPvj>
 8020de8:	4620      	mov	r0, r4
 8020dea:	bd10      	pop	{r4, pc}

08020dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8020dec:	b510      	push	{r4, lr}
 8020dee:	2104      	movs	r1, #4
 8020df0:	4604      	mov	r4, r0
 8020df2:	f00c fa00 	bl	802d1f6 <_ZdlPvj>
 8020df6:	4620      	mov	r0, r4
 8020df8:	bd10      	pop	{r4, pc}

08020dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8020dfa:	b510      	push	{r4, lr}
 8020dfc:	2104      	movs	r1, #4
 8020dfe:	4604      	mov	r4, r0
 8020e00:	f00c f9f9 	bl	802d1f6 <_ZdlPvj>
 8020e04:	4620      	mov	r0, r4
 8020e06:	bd10      	pop	{r4, pc}

08020e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8020e08:	b510      	push	{r4, lr}
 8020e0a:	2104      	movs	r1, #4
 8020e0c:	4604      	mov	r4, r0
 8020e0e:	f00c f9f2 	bl	802d1f6 <_ZdlPvj>
 8020e12:	4620      	mov	r0, r4
 8020e14:	bd10      	pop	{r4, pc}

08020e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8020e16:	b510      	push	{r4, lr}
 8020e18:	2104      	movs	r1, #4
 8020e1a:	4604      	mov	r4, r0
 8020e1c:	f00c f9eb 	bl	802d1f6 <_ZdlPvj>
 8020e20:	4620      	mov	r0, r4
 8020e22:	bd10      	pop	{r4, pc}

08020e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8020e24:	b510      	push	{r4, lr}
 8020e26:	2104      	movs	r1, #4
 8020e28:	4604      	mov	r4, r0
 8020e2a:	f00c f9e4 	bl	802d1f6 <_ZdlPvj>
 8020e2e:	4620      	mov	r0, r4
 8020e30:	bd10      	pop	{r4, pc}

08020e32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8020e32:	b510      	push	{r4, lr}
 8020e34:	2104      	movs	r1, #4
 8020e36:	4604      	mov	r4, r0
 8020e38:	f00c f9dd 	bl	802d1f6 <_ZdlPvj>
 8020e3c:	4620      	mov	r0, r4
 8020e3e:	bd10      	pop	{r4, pc}

08020e40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8020e40:	b510      	push	{r4, lr}
 8020e42:	2104      	movs	r1, #4
 8020e44:	4604      	mov	r4, r0
 8020e46:	f00c f9d6 	bl	802d1f6 <_ZdlPvj>
 8020e4a:	4620      	mov	r0, r4
 8020e4c:	bd10      	pop	{r4, pc}

08020e4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8020e4e:	b510      	push	{r4, lr}
 8020e50:	2104      	movs	r1, #4
 8020e52:	4604      	mov	r4, r0
 8020e54:	f00c f9cf 	bl	802d1f6 <_ZdlPvj>
 8020e58:	4620      	mov	r0, r4
 8020e5a:	bd10      	pop	{r4, pc}

08020e5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8020e5c:	b510      	push	{r4, lr}
 8020e5e:	2104      	movs	r1, #4
 8020e60:	4604      	mov	r4, r0
 8020e62:	f00c f9c8 	bl	802d1f6 <_ZdlPvj>
 8020e66:	4620      	mov	r0, r4
 8020e68:	bd10      	pop	{r4, pc}

08020e6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8020e6a:	b510      	push	{r4, lr}
 8020e6c:	2104      	movs	r1, #4
 8020e6e:	4604      	mov	r4, r0
 8020e70:	f00c f9c1 	bl	802d1f6 <_ZdlPvj>
 8020e74:	4620      	mov	r0, r4
 8020e76:	bd10      	pop	{r4, pc}

08020e78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8020e78:	b510      	push	{r4, lr}
 8020e7a:	2104      	movs	r1, #4
 8020e7c:	4604      	mov	r4, r0
 8020e7e:	f00c f9ba 	bl	802d1f6 <_ZdlPvj>
 8020e82:	4620      	mov	r0, r4
 8020e84:	bd10      	pop	{r4, pc}

08020e86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8020e86:	b510      	push	{r4, lr}
 8020e88:	2104      	movs	r1, #4
 8020e8a:	4604      	mov	r4, r0
 8020e8c:	f00c f9b3 	bl	802d1f6 <_ZdlPvj>
 8020e90:	4620      	mov	r0, r4
 8020e92:	bd10      	pop	{r4, pc}

08020e94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8020e94:	b510      	push	{r4, lr}
 8020e96:	2104      	movs	r1, #4
 8020e98:	4604      	mov	r4, r0
 8020e9a:	f00c f9ac 	bl	802d1f6 <_ZdlPvj>
 8020e9e:	4620      	mov	r0, r4
 8020ea0:	bd10      	pop	{r4, pc}

08020ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8020ea2:	b510      	push	{r4, lr}
 8020ea4:	2104      	movs	r1, #4
 8020ea6:	4604      	mov	r4, r0
 8020ea8:	f00c f9a5 	bl	802d1f6 <_ZdlPvj>
 8020eac:	4620      	mov	r0, r4
 8020eae:	bd10      	pop	{r4, pc}

08020eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8020eb0:	b510      	push	{r4, lr}
 8020eb2:	2104      	movs	r1, #4
 8020eb4:	4604      	mov	r4, r0
 8020eb6:	f00c f99e 	bl	802d1f6 <_ZdlPvj>
 8020eba:	4620      	mov	r0, r4
 8020ebc:	bd10      	pop	{r4, pc}

08020ebe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8020ebe:	b510      	push	{r4, lr}
 8020ec0:	2104      	movs	r1, #4
 8020ec2:	4604      	mov	r4, r0
 8020ec4:	f00c f997 	bl	802d1f6 <_ZdlPvj>
 8020ec8:	4620      	mov	r0, r4
 8020eca:	bd10      	pop	{r4, pc}

08020ecc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8020ecc:	b510      	push	{r4, lr}
 8020ece:	2104      	movs	r1, #4
 8020ed0:	4604      	mov	r4, r0
 8020ed2:	f00c f990 	bl	802d1f6 <_ZdlPvj>
 8020ed6:	4620      	mov	r0, r4
 8020ed8:	bd10      	pop	{r4, pc}

08020eda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8020eda:	b510      	push	{r4, lr}
 8020edc:	2104      	movs	r1, #4
 8020ede:	4604      	mov	r4, r0
 8020ee0:	f00c f989 	bl	802d1f6 <_ZdlPvj>
 8020ee4:	4620      	mov	r0, r4
 8020ee6:	bd10      	pop	{r4, pc}

08020ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8020ee8:	b510      	push	{r4, lr}
 8020eea:	2104      	movs	r1, #4
 8020eec:	4604      	mov	r4, r0
 8020eee:	f00c f982 	bl	802d1f6 <_ZdlPvj>
 8020ef2:	4620      	mov	r0, r4
 8020ef4:	bd10      	pop	{r4, pc}

08020ef6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8020ef6:	b510      	push	{r4, lr}
 8020ef8:	2104      	movs	r1, #4
 8020efa:	4604      	mov	r4, r0
 8020efc:	f00c f97b 	bl	802d1f6 <_ZdlPvj>
 8020f00:	4620      	mov	r0, r4
 8020f02:	bd10      	pop	{r4, pc}

08020f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8020f04:	b510      	push	{r4, lr}
 8020f06:	2104      	movs	r1, #4
 8020f08:	4604      	mov	r4, r0
 8020f0a:	f00c f974 	bl	802d1f6 <_ZdlPvj>
 8020f0e:	4620      	mov	r0, r4
 8020f10:	bd10      	pop	{r4, pc}

08020f12 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8020f12:	b510      	push	{r4, lr}
 8020f14:	2104      	movs	r1, #4
 8020f16:	4604      	mov	r4, r0
 8020f18:	f00c f96d 	bl	802d1f6 <_ZdlPvj>
 8020f1c:	4620      	mov	r0, r4
 8020f1e:	bd10      	pop	{r4, pc}

08020f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8020f20:	b510      	push	{r4, lr}
 8020f22:	2104      	movs	r1, #4
 8020f24:	4604      	mov	r4, r0
 8020f26:	f00c f966 	bl	802d1f6 <_ZdlPvj>
 8020f2a:	4620      	mov	r0, r4
 8020f2c:	bd10      	pop	{r4, pc}

08020f2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8020f2e:	b510      	push	{r4, lr}
 8020f30:	2104      	movs	r1, #4
 8020f32:	4604      	mov	r4, r0
 8020f34:	f00c f95f 	bl	802d1f6 <_ZdlPvj>
 8020f38:	4620      	mov	r0, r4
 8020f3a:	bd10      	pop	{r4, pc}

08020f3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8020f3c:	b510      	push	{r4, lr}
 8020f3e:	2104      	movs	r1, #4
 8020f40:	4604      	mov	r4, r0
 8020f42:	f00c f958 	bl	802d1f6 <_ZdlPvj>
 8020f46:	4620      	mov	r0, r4
 8020f48:	bd10      	pop	{r4, pc}

08020f4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8020f4a:	b510      	push	{r4, lr}
 8020f4c:	2104      	movs	r1, #4
 8020f4e:	4604      	mov	r4, r0
 8020f50:	f00c f951 	bl	802d1f6 <_ZdlPvj>
 8020f54:	4620      	mov	r0, r4
 8020f56:	bd10      	pop	{r4, pc}

08020f58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8020f58:	b510      	push	{r4, lr}
 8020f5a:	2104      	movs	r1, #4
 8020f5c:	4604      	mov	r4, r0
 8020f5e:	f00c f94a 	bl	802d1f6 <_ZdlPvj>
 8020f62:	4620      	mov	r0, r4
 8020f64:	bd10      	pop	{r4, pc}
	...

08020f68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8020f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f6c:	b08f      	sub	sp, #60	@ 0x3c
 8020f6e:	4616      	mov	r6, r2
 8020f70:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 8020f74:	9205      	str	r2, [sp, #20]
 8020f76:	4682      	mov	sl, r0
 8020f78:	460d      	mov	r5, r1
 8020f7a:	2a00      	cmp	r2, #0
 8020f7c:	f000 82b7 	beq.w	80214ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8020f80:	6830      	ldr	r0, [r6, #0]
 8020f82:	6871      	ldr	r1, [r6, #4]
 8020f84:	ac0a      	add	r4, sp, #40	@ 0x28
 8020f86:	c403      	stmia	r4!, {r0, r1}
 8020f88:	6818      	ldr	r0, [r3, #0]
 8020f8a:	6859      	ldr	r1, [r3, #4]
 8020f8c:	ac0c      	add	r4, sp, #48	@ 0x30
 8020f8e:	c403      	stmia	r4!, {r0, r1}
 8020f90:	a80a      	add	r0, sp, #40	@ 0x28
 8020f92:	f7f9 fceb 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020f96:	4631      	mov	r1, r6
 8020f98:	a80c      	add	r0, sp, #48	@ 0x30
 8020f9a:	f7f9 fd2b 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020f9e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8020fa2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8020fa6:	bfd7      	itett	le
 8020fa8:	b293      	uxthle	r3, r2
 8020faa:	2301      	movgt	r3, #1
 8020fac:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8020fb0:	fb91 f3f3 	sdivle	r3, r1, r3
 8020fb4:	9300      	str	r3, [sp, #0]
 8020fb6:	f105 0308 	add.w	r3, r5, #8
 8020fba:	9900      	ldr	r1, [sp, #0]
 8020fbc:	9306      	str	r3, [sp, #24]
 8020fbe:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8020fc2:	440b      	add	r3, r1
 8020fc4:	3b01      	subs	r3, #1
 8020fc6:	fb93 f3f1 	sdiv	r3, r3, r1
 8020fca:	9906      	ldr	r1, [sp, #24]
 8020fcc:	3b01      	subs	r3, #1
 8020fce:	b29b      	uxth	r3, r3
 8020fd0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8020fd4:	9307      	str	r3, [sp, #28]
 8020fd6:	9900      	ldr	r1, [sp, #0]
 8020fd8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8020fdc:	fb93 f0f1 	sdiv	r0, r3, r1
 8020fe0:	b284      	uxth	r4, r0
 8020fe2:	9402      	str	r4, [sp, #8]
 8020fe4:	9d02      	ldr	r5, [sp, #8]
 8020fe6:	9c00      	ldr	r4, [sp, #0]
 8020fe8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8020fec:	fb05 3414 	mls	r4, r5, r4, r3
 8020ff0:	fb14 f402 	smulbb	r4, r4, r2
 8020ff4:	440c      	add	r4, r1
 8020ff6:	b2a4      	uxth	r4, r4
 8020ff8:	2d00      	cmp	r5, #0
 8020ffa:	d06c      	beq.n	80210d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8020ffc:	1e6a      	subs	r2, r5, #1
 8020ffe:	9806      	ldr	r0, [sp, #24]
 8021000:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8021004:	9a07      	ldr	r2, [sp, #28]
 8021006:	ba36      	rev	r6, r6
 8021008:	4416      	add	r6, r2
 802100a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 802100e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8021012:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8021348 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8021016:	4411      	add	r1, r2
 8021018:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 802101c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8021020:	4413      	add	r3, r2
 8021022:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8021026:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802102a:	9301      	str	r3, [sp, #4]
 802102c:	4bc4      	ldr	r3, [pc, #784]	@ (8021340 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 802102e:	6818      	ldr	r0, [r3, #0]
 8021030:	6803      	ldr	r3, [r0, #0]
 8021032:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021034:	4798      	blx	r3
 8021036:	4bc3      	ldr	r3, [pc, #780]	@ (8021344 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8021038:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802103c:	881b      	ldrh	r3, [r3, #0]
 802103e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8021042:	fb03 2808 	mla	r8, r3, r8, r2
 8021046:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 802104a:	436b      	muls	r3, r5
 802104c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8021050:	9309      	str	r3, [sp, #36]	@ 0x24
 8021052:	2500      	movs	r5, #0
 8021054:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021058:	fb94 f3f3 	sdiv	r3, r4, r3
 802105c:	9304      	str	r3, [sp, #16]
 802105e:	f10a 0304 	add.w	r3, sl, #4
 8021062:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8021066:	4629      	mov	r1, r5
 8021068:	4618      	mov	r0, r3
 802106a:	9308      	str	r3, [sp, #32]
 802106c:	f00d fa07 	bl	802e47e <memset>
 8021070:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021072:	4543      	cmp	r3, r8
 8021074:	f240 8236 	bls.w	80214e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8021078:	2203      	movs	r2, #3
 802107a:	2107      	movs	r1, #7
 802107c:	200b      	movs	r0, #11
 802107e:	2c00      	cmp	r4, #0
 8021080:	f000 8131 	beq.w	80212e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8021084:	7833      	ldrb	r3, [r6, #0]
 8021086:	b2db      	uxtb	r3, r3
 8021088:	2bfe      	cmp	r3, #254	@ 0xfe
 802108a:	d126      	bne.n	80210da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 802108c:	f896 e001 	ldrb.w	lr, [r6, #1]
 8021090:	f896 c002 	ldrb.w	ip, [r6, #2]
 8021094:	f896 b003 	ldrb.w	fp, [r6, #3]
 8021098:	fa5f fe8e 	uxtb.w	lr, lr
 802109c:	fa5f fc8c 	uxtb.w	ip, ip
 80210a0:	f36e 0507 	bfi	r5, lr, #0, #8
 80210a4:	f36c 250f 	bfi	r5, ip, #8, #8
 80210a8:	fa5f fb8b 	uxtb.w	fp, fp
 80210ac:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80210b0:	f36b 4517 	bfi	r5, fp, #16, #8
 80210b4:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80210b8:	0e2b      	lsrs	r3, r5, #24
 80210ba:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80210be:	fb10 c303 	smlabb	r3, r0, r3, ip
 80210c2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80210c6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80210ca:	3c01      	subs	r4, #1
 80210cc:	1d37      	adds	r7, r6, #4
 80210ce:	b2a4      	uxth	r4, r4
 80210d0:	605d      	str	r5, [r3, #4]
 80210d2:	463e      	mov	r6, r7
 80210d4:	e7d3      	b.n	802107e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 80210d6:	9e07      	ldr	r6, [sp, #28]
 80210d8:	e797      	b.n	802100a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 80210da:	2bff      	cmp	r3, #255	@ 0xff
 80210dc:	d127      	bne.n	802112e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 80210de:	f896 c001 	ldrb.w	ip, [r6, #1]
 80210e2:	78b3      	ldrb	r3, [r6, #2]
 80210e4:	f896 e003 	ldrb.w	lr, [r6, #3]
 80210e8:	f896 b004 	ldrb.w	fp, [r6, #4]
 80210ec:	fa5f fc8c 	uxtb.w	ip, ip
 80210f0:	b2db      	uxtb	r3, r3
 80210f2:	f36c 0507 	bfi	r5, ip, #0, #8
 80210f6:	f363 250f 	bfi	r5, r3, #8, #8
 80210fa:	fa5f fe8e 	uxtb.w	lr, lr
 80210fe:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8021102:	fb12 330e 	smlabb	r3, r2, lr, r3
 8021106:	fa5f fb8b 	uxtb.w	fp, fp
 802110a:	f36e 4517 	bfi	r5, lr, #16, #8
 802110e:	fb11 330c 	smlabb	r3, r1, ip, r3
 8021112:	f36b 651f 	bfi	r5, fp, #24, #8
 8021116:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 802111a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 802111e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8021122:	3c01      	subs	r4, #1
 8021124:	1d77      	adds	r7, r6, #5
 8021126:	b2a4      	uxth	r4, r4
 8021128:	f8cb 5004 	str.w	r5, [fp, #4]
 802112c:	e7d1      	b.n	80210d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 802112e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8021132:	f106 0701 	add.w	r7, r6, #1
 8021136:	d107      	bne.n	8021148 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8021138:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 802113c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8021140:	685d      	ldr	r5, [r3, #4]
 8021142:	3c01      	subs	r4, #1
 8021144:	b2a4      	uxth	r4, r4
 8021146:	e7c4      	b.n	80210d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8021148:	f1bc 0f01 	cmp.w	ip, #1
 802114c:	d12c      	bne.n	80211a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 802114e:	f003 0e03 	and.w	lr, r3, #3
 8021152:	f1ae 0e02 	sub.w	lr, lr, #2
 8021156:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 802115a:	fa5f fe8e 	uxtb.w	lr, lr
 802115e:	f003 0c0c 	and.w	ip, r3, #12
 8021162:	f36e 0507 	bfi	r5, lr, #0, #8
 8021166:	f1ac 0c08 	sub.w	ip, ip, #8
 802116a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 802116e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8021172:	f36c 250f 	bfi	r5, ip, #8, #8
 8021176:	f3c3 1301 	ubfx	r3, r3, #4, #2
 802117a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 802117e:	3b02      	subs	r3, #2
 8021180:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8021184:	b2db      	uxtb	r3, r3
 8021186:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 802118a:	f363 4517 	bfi	r5, r3, #16, #8
 802118e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8021192:	0e2e      	lsrs	r6, r5, #24
 8021194:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8021198:	fb10 c606 	smlabb	r6, r0, r6, ip
 802119c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80211a0:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 80211a4:	6075      	str	r5, [r6, #4]
 80211a6:	e7cc      	b.n	8021142 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 80211a8:	f1bc 0f02 	cmp.w	ip, #2
 80211ac:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80211b0:	d12a      	bne.n	8021208 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 80211b2:	1cb7      	adds	r7, r6, #2
 80211b4:	7876      	ldrb	r6, [r6, #1]
 80211b6:	b2f6      	uxtb	r6, r6
 80211b8:	f006 0c0f 	and.w	ip, r6, #15
 80211bc:	3b20      	subs	r3, #32
 80211be:	f1ac 0c08 	sub.w	ip, ip, #8
 80211c2:	449c      	add	ip, r3
 80211c4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 80211c8:	fa5f fc8c 	uxtb.w	ip, ip
 80211cc:	f36c 0507 	bfi	r5, ip, #0, #8
 80211d0:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 80211d4:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 80211d8:	fa5f fe8e 	uxtb.w	lr, lr
 80211dc:	1136      	asrs	r6, r6, #4
 80211de:	f36e 250f 	bfi	r5, lr, #8, #8
 80211e2:	3e08      	subs	r6, #8
 80211e4:	4433      	add	r3, r6
 80211e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80211ea:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80211ee:	b2db      	uxtb	r3, r3
 80211f0:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 80211f4:	f363 4517 	bfi	r5, r3, #16, #8
 80211f8:	fb12 ee03 	smlabb	lr, r2, r3, lr
 80211fc:	0e2e      	lsrs	r6, r5, #24
 80211fe:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8021202:	fb10 e606 	smlabb	r6, r0, r6, lr
 8021206:	e7c9      	b.n	802119c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8021208:	1c5e      	adds	r6, r3, #1
 802120a:	42a6      	cmp	r6, r4
 802120c:	dd4e      	ble.n	80212ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 802120e:	1b36      	subs	r6, r6, r4
 8021210:	2e00      	cmp	r6, #0
 8021212:	dc4e      	bgt.n	80212b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8021214:	f8dd b004 	ldr.w	fp, [sp, #4]
 8021218:	2400      	movs	r4, #0
 802121a:	f1bb 0f00 	cmp.w	fp, #0
 802121e:	f340 8122 	ble.w	8021466 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8021222:	1c7b      	adds	r3, r7, #1
 8021224:	9303      	str	r3, [sp, #12]
 8021226:	783b      	ldrb	r3, [r7, #0]
 8021228:	b2db      	uxtb	r3, r3
 802122a:	2bfe      	cmp	r3, #254	@ 0xfe
 802122c:	d160      	bne.n	80212f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 802122e:	7879      	ldrb	r1, [r7, #1]
 8021230:	78ba      	ldrb	r2, [r7, #2]
 8021232:	78f8      	ldrb	r0, [r7, #3]
 8021234:	b2c9      	uxtb	r1, r1
 8021236:	f361 0507 	bfi	r5, r1, #0, #8
 802123a:	b2d2      	uxtb	r2, r2
 802123c:	1d3b      	adds	r3, r7, #4
 802123e:	f362 250f 	bfi	r5, r2, #8, #8
 8021242:	b2c0      	uxtb	r0, r0
 8021244:	9303      	str	r3, [sp, #12]
 8021246:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 802124a:	2303      	movs	r3, #3
 802124c:	fb13 2200 	smlabb	r2, r3, r0, r2
 8021250:	f360 4517 	bfi	r5, r0, #16, #8
 8021254:	2307      	movs	r3, #7
 8021256:	fb13 2101 	smlabb	r1, r3, r1, r2
 802125a:	0e2e      	lsrs	r6, r5, #24
 802125c:	230b      	movs	r3, #11
 802125e:	fb13 1306 	smlabb	r3, r3, r6, r1
 8021262:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021266:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 802126a:	605d      	str	r5, [r3, #4]
 802126c:	2601      	movs	r6, #1
 802126e:	4637      	mov	r7, r6
 8021270:	0e2b      	lsrs	r3, r5, #24
 8021272:	ebab 0b07 	sub.w	fp, fp, r7
 8021276:	eba6 0607 	sub.w	r6, r6, r7
 802127a:	f040 80d3 	bne.w	8021424 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 802127e:	b18c      	cbz	r4, 80212a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8021280:	4648      	mov	r0, r9
 8021282:	00a1      	lsls	r1, r4, #2
 8021284:	f7e0 f96a 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8021288:	9b05      	ldr	r3, [sp, #20]
 802128a:	4622      	mov	r2, r4
 802128c:	4649      	mov	r1, r9
 802128e:	4640      	mov	r0, r8
 8021290:	f7e0 f9b2 	bl	80015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8021294:	4b2c      	ldr	r3, [pc, #176]	@ (8021348 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8021296:	4a2d      	ldr	r2, [pc, #180]	@ (802134c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8021298:	4599      	cmp	r9, r3
 802129a:	bf08      	it	eq
 802129c:	4613      	moveq	r3, r2
 802129e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80212a2:	4699      	mov	r9, r3
 80212a4:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 80212a8:	2400      	movs	r4, #0
 80212aa:	e0da      	b.n	8021462 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 80212ac:	1ba6      	subs	r6, r4, r6
 80212ae:	b2b4      	uxth	r4, r6
 80212b0:	e70f      	b.n	80210d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80212b2:	9b01      	ldr	r3, [sp, #4]
 80212b4:	9a01      	ldr	r2, [sp, #4]
 80212b6:	42b3      	cmp	r3, r6
 80212b8:	bfa8      	it	ge
 80212ba:	4633      	movge	r3, r6
 80212bc:	0e2c      	lsrs	r4, r5, #24
 80212be:	eba2 0b03 	sub.w	fp, r2, r3
 80212c2:	eba6 0603 	sub.w	r6, r6, r3
 80212c6:	d00b      	beq.n	80212e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 80212c8:	f1a9 0104 	sub.w	r1, r9, #4
 80212cc:	461a      	mov	r2, r3
 80212ce:	2a00      	cmp	r2, #0
 80212d0:	dc02      	bgt.n	80212d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 80212d2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80212d6:	e7a0      	b.n	802121a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80212d8:	f841 5f04 	str.w	r5, [r1, #4]!
 80212dc:	3a01      	subs	r2, #1
 80212de:	e7f6      	b.n	80212ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 80212e0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80212e4:	e799      	b.n	802121a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80212e6:	4637      	mov	r7, r6
 80212e8:	f8dd b004 	ldr.w	fp, [sp, #4]
 80212ec:	4626      	mov	r6, r4
 80212ee:	e794      	b.n	802121a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80212f0:	2bff      	cmp	r3, #255	@ 0xff
 80212f2:	d11d      	bne.n	8021330 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 80212f4:	7878      	ldrb	r0, [r7, #1]
 80212f6:	78ba      	ldrb	r2, [r7, #2]
 80212f8:	78fe      	ldrb	r6, [r7, #3]
 80212fa:	1d7b      	adds	r3, r7, #5
 80212fc:	b2c0      	uxtb	r0, r0
 80212fe:	9303      	str	r3, [sp, #12]
 8021300:	793b      	ldrb	r3, [r7, #4]
 8021302:	f360 0507 	bfi	r5, r0, #0, #8
 8021306:	b2d2      	uxtb	r2, r2
 8021308:	b2d9      	uxtb	r1, r3
 802130a:	f362 250f 	bfi	r5, r2, #8, #8
 802130e:	b2f6      	uxtb	r6, r6
 8021310:	2303      	movs	r3, #3
 8021312:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8021316:	fb13 2206 	smlabb	r2, r3, r6, r2
 802131a:	2307      	movs	r3, #7
 802131c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8021320:	f366 4517 	bfi	r5, r6, #16, #8
 8021324:	230b      	movs	r3, #11
 8021326:	f361 651f 	bfi	r5, r1, #24, #8
 802132a:	fb13 0301 	smlabb	r3, r3, r1, r0
 802132e:	e798      	b.n	8021262 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8021330:	119e      	asrs	r6, r3, #6
 8021332:	d10d      	bne.n	8021350 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8021334:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021338:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 802133c:	685d      	ldr	r5, [r3, #4]
 802133e:	e795      	b.n	802126c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8021340:	20013884 	.word	0x20013884
 8021344:	2001387e 	.word	0x2001387e
 8021348:	20000180 	.word	0x20000180
 802134c:	20000280 	.word	0x20000280
 8021350:	2e01      	cmp	r6, #1
 8021352:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8021356:	d12b      	bne.n	80213b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8021358:	f003 0003 	and.w	r0, r3, #3
 802135c:	3802      	subs	r0, #2
 802135e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8021362:	b2c0      	uxtb	r0, r0
 8021364:	f003 020c 	and.w	r2, r3, #12
 8021368:	f360 0507 	bfi	r5, r0, #0, #8
 802136c:	3a08      	subs	r2, #8
 802136e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8021372:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8021376:	f362 250f 	bfi	r5, r2, #8, #8
 802137a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 802137e:	1e9f      	subs	r7, r3, #2
 8021380:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8021384:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8021388:	b2db      	uxtb	r3, r3
 802138a:	2703      	movs	r7, #3
 802138c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8021390:	fb17 2203 	smlabb	r2, r7, r3, r2
 8021394:	2707      	movs	r7, #7
 8021396:	f363 4517 	bfi	r5, r3, #16, #8
 802139a:	fb17 2000 	smlabb	r0, r7, r0, r2
 802139e:	230b      	movs	r3, #11
 80213a0:	fb13 0101 	smlabb	r1, r3, r1, r0
 80213a4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 80213a8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 80213ac:	604d      	str	r5, [r1, #4]
 80213ae:	e75e      	b.n	802126e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 80213b0:	2e02      	cmp	r6, #2
 80213b2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80213b6:	d12f      	bne.n	8021418 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 80213b8:	7878      	ldrb	r0, [r7, #1]
 80213ba:	1cba      	adds	r2, r7, #2
 80213bc:	b2c0      	uxtb	r0, r0
 80213be:	9203      	str	r2, [sp, #12]
 80213c0:	f000 020f 	and.w	r2, r0, #15
 80213c4:	3b20      	subs	r3, #32
 80213c6:	3a08      	subs	r2, #8
 80213c8:	441a      	add	r2, r3
 80213ca:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 80213ce:	b2d2      	uxtb	r2, r2
 80213d0:	f362 0507 	bfi	r5, r2, #0, #8
 80213d4:	f3c5 2607 	ubfx	r6, r5, #8, #8
 80213d8:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 80213dc:	b2f6      	uxtb	r6, r6
 80213de:	1100      	asrs	r0, r0, #4
 80213e0:	f366 250f 	bfi	r5, r6, #8, #8
 80213e4:	3808      	subs	r0, #8
 80213e6:	4403      	add	r3, r0
 80213e8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80213ec:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80213f0:	b2db      	uxtb	r3, r3
 80213f2:	2003      	movs	r0, #3
 80213f4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 80213f8:	fb10 6603 	smlabb	r6, r0, r3, r6
 80213fc:	2007      	movs	r0, #7
 80213fe:	f363 4517 	bfi	r5, r3, #16, #8
 8021402:	fb10 6202 	smlabb	r2, r0, r2, r6
 8021406:	230b      	movs	r3, #11
 8021408:	fb13 2101 	smlabb	r1, r3, r1, r2
 802140c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8021410:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8021414:	604d      	str	r5, [r1, #4]
 8021416:	e729      	b.n	802126c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8021418:	1c5e      	adds	r6, r3, #1
 802141a:	45b3      	cmp	fp, r6
 802141c:	465f      	mov	r7, fp
 802141e:	bfa8      	it	ge
 8021420:	4637      	movge	r7, r6
 8021422:	e725      	b.n	8021270 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8021424:	193b      	adds	r3, r7, r4
 8021426:	2b40      	cmp	r3, #64	@ 0x40
 8021428:	dd13      	ble.n	8021452 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 802142a:	4648      	mov	r0, r9
 802142c:	00a1      	lsls	r1, r4, #2
 802142e:	f7e0 f895 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8021432:	4649      	mov	r1, r9
 8021434:	9b05      	ldr	r3, [sp, #20]
 8021436:	4622      	mov	r2, r4
 8021438:	4640      	mov	r0, r8
 802143a:	f7e0 f8dd 	bl	80015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 802143e:	4b2d      	ldr	r3, [pc, #180]	@ (80214f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8021440:	4599      	cmp	r9, r3
 8021442:	bf0c      	ite	eq
 8021444:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8021500 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8021448:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 80214f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 802144c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021450:	2400      	movs	r4, #0
 8021452:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8021456:	463b      	mov	r3, r7
 8021458:	3b01      	subs	r3, #1
 802145a:	f842 5b04 	str.w	r5, [r2], #4
 802145e:	d1fb      	bne.n	8021458 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8021460:	443c      	add	r4, r7
 8021462:	9f03      	ldr	r7, [sp, #12]
 8021464:	e6d9      	b.n	802121a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8021466:	b15c      	cbz	r4, 8021480 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8021468:	00a1      	lsls	r1, r4, #2
 802146a:	4648      	mov	r0, r9
 802146c:	f7e0 f876 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8021470:	4640      	mov	r0, r8
 8021472:	9b05      	ldr	r3, [sp, #20]
 8021474:	4622      	mov	r2, r4
 8021476:	4649      	mov	r1, r9
 8021478:	f7e0 f8be 	bl	80015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 802147c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021480:	4b1d      	ldr	r3, [pc, #116]	@ (80214f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8021482:	9a01      	ldr	r2, [sp, #4]
 8021484:	881b      	ldrh	r3, [r3, #0]
 8021486:	1a9b      	subs	r3, r3, r2
 8021488:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 802148c:	9b04      	ldr	r3, [sp, #16]
 802148e:	3301      	adds	r3, #1
 8021490:	9304      	str	r3, [sp, #16]
 8021492:	9a04      	ldr	r2, [sp, #16]
 8021494:	9b00      	ldr	r3, [sp, #0]
 8021496:	4293      	cmp	r3, r2
 8021498:	d11d      	bne.n	80214d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 802149a:	9b02      	ldr	r3, [sp, #8]
 802149c:	9a02      	ldr	r2, [sp, #8]
 802149e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 80214a2:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 80214a6:	9808      	ldr	r0, [sp, #32]
 80214a8:	f103 0b01 	add.w	fp, r3, #1
 80214ac:	9b06      	ldr	r3, [sp, #24]
 80214ae:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80214b2:	9b07      	ldr	r3, [sp, #28]
 80214b4:	2500      	movs	r5, #0
 80214b6:	ba3f      	rev	r7, r7
 80214b8:	1ba4      	subs	r4, r4, r6
 80214ba:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80214be:	4629      	mov	r1, r5
 80214c0:	441f      	add	r7, r3
 80214c2:	b2a4      	uxth	r4, r4
 80214c4:	f00c ffdb 	bl	802e47e <memset>
 80214c8:	f8cd b008 	str.w	fp, [sp, #8]
 80214cc:	9504      	str	r5, [sp, #16]
 80214ce:	f7e0 f83b 	bl	8001548 <_ZN8touchgfx5paint8tearDownEv>
 80214d2:	463e      	mov	r6, r7
 80214d4:	e5cc      	b.n	8021070 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 80214d6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80214da:	9b01      	ldr	r3, [sp, #4]
 80214dc:	1ae4      	subs	r4, r4, r3
 80214de:	1ba4      	subs	r4, r4, r6
 80214e0:	b2a4      	uxth	r4, r4
 80214e2:	e7f4      	b.n	80214ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 80214e4:	4b05      	ldr	r3, [pc, #20]	@ (80214fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 80214e6:	6818      	ldr	r0, [r3, #0]
 80214e8:	6803      	ldr	r3, [r0, #0]
 80214ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80214ec:	4798      	blx	r3
 80214ee:	b00f      	add	sp, #60	@ 0x3c
 80214f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214f4:	20000180 	.word	0x20000180
 80214f8:	2001387e 	.word	0x2001387e
 80214fc:	20013884 	.word	0x20013884
 8021500:	20000280 	.word	0x20000280

08021504 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021508:	b08f      	sub	sp, #60	@ 0x3c
 802150a:	461c      	mov	r4, r3
 802150c:	9205      	str	r2, [sp, #20]
 802150e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021512:	9100      	str	r1, [sp, #0]
 8021514:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021516:	9201      	str	r2, [sp, #4]
 8021518:	2a00      	cmp	r2, #0
 802151a:	f000 8115 	beq.w	8021748 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 802151e:	6820      	ldr	r0, [r4, #0]
 8021520:	6861      	ldr	r1, [r4, #4]
 8021522:	aa0a      	add	r2, sp, #40	@ 0x28
 8021524:	c203      	stmia	r2!, {r0, r1}
 8021526:	6818      	ldr	r0, [r3, #0]
 8021528:	6859      	ldr	r1, [r3, #4]
 802152a:	aa0c      	add	r2, sp, #48	@ 0x30
 802152c:	c203      	stmia	r2!, {r0, r1}
 802152e:	a80a      	add	r0, sp, #40	@ 0x28
 8021530:	f7f9 fa1c 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021534:	4621      	mov	r1, r4
 8021536:	a80c      	add	r0, sp, #48	@ 0x30
 8021538:	f7f9 fa5c 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802153c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8021540:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8021544:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8021548:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 802154c:	bfde      	ittt	le
 802154e:	b2b3      	uxthle	r3, r6
 8021550:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8021554:	fb92 f3f3 	sdivle	r3, r2, r3
 8021558:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 802155c:	bfc8      	it	gt
 802155e:	2301      	movgt	r3, #1
 8021560:	fb92 f1f3 	sdiv	r1, r2, r3
 8021564:	fa1f fc81 	uxth.w	ip, r1
 8021568:	fb0c 2413 	mls	r4, ip, r3, r2
 802156c:	fb14 f406 	smulbb	r4, r4, r6
 8021570:	441d      	add	r5, r3
 8021572:	4404      	add	r4, r0
 8021574:	4661      	mov	r1, ip
 8021576:	3d01      	subs	r5, #1
 8021578:	b2a4      	uxth	r4, r4
 802157a:	fb95 f5f3 	sdiv	r5, r5, r3
 802157e:	b131      	cbz	r1, 802158e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8021580:	9b05      	ldr	r3, [sp, #20]
 8021582:	9900      	ldr	r1, [sp, #0]
 8021584:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8021588:	ba1b      	rev	r3, r3
 802158a:	4419      	add	r1, r3
 802158c:	9100      	str	r1, [sp, #0]
 802158e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8021592:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8021596:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 802159a:	4418      	add	r0, r3
 802159c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80215a0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80215a4:	441a      	add	r2, r3
 80215a6:	4b6a      	ldr	r3, [pc, #424]	@ (8021750 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80215a8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80215ac:	6818      	ldr	r0, [r3, #0]
 80215ae:	6803      	ldr	r3, [r0, #0]
 80215b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80215b2:	4798      	blx	r3
 80215b4:	4967      	ldr	r1, [pc, #412]	@ (8021754 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80215b6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80215ba:	880b      	ldrh	r3, [r1, #0]
 80215bc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80215c0:	9109      	str	r1, [sp, #36]	@ 0x24
 80215c2:	fb03 c202 	mla	r2, r3, r2, ip
 80215c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80215ca:	4373      	muls	r3, r6
 80215cc:	b2ad      	uxth	r5, r5
 80215ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80215d2:	00ad      	lsls	r5, r5, #2
 80215d4:	9306      	str	r3, [sp, #24]
 80215d6:	1d2b      	adds	r3, r5, #4
 80215d8:	9307      	str	r3, [sp, #28]
 80215da:	9b01      	ldr	r3, [sp, #4]
 80215dc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80215e0:	9103      	str	r1, [sp, #12]
 80215e2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 80215e6:	2c00      	cmp	r4, #0
 80215e8:	bf0c      	ite	eq
 80215ea:	46c6      	moveq	lr, r8
 80215ec:	f04f 0e00 	movne.w	lr, #0
 80215f0:	2300      	movs	r3, #0
 80215f2:	b292      	uxth	r2, r2
 80215f4:	fa1f fe8e 	uxth.w	lr, lr
 80215f8:	9302      	str	r3, [sp, #8]
 80215fa:	9204      	str	r2, [sp, #16]
 80215fc:	9a06      	ldr	r2, [sp, #24]
 80215fe:	4282      	cmp	r2, r0
 8021600:	f240 809d 	bls.w	802173e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8021604:	b963      	cbnz	r3, 8021620 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8021606:	9b00      	ldr	r3, [sp, #0]
 8021608:	781a      	ldrb	r2, [r3, #0]
 802160a:	0993      	lsrs	r3, r2, #6
 802160c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8021610:	9202      	str	r2, [sp, #8]
 8021612:	1e5a      	subs	r2, r3, #1
 8021614:	2a02      	cmp	r2, #2
 8021616:	d815      	bhi.n	8021644 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8021618:	9a00      	ldr	r2, [sp, #0]
 802161a:	3201      	adds	r2, #1
 802161c:	9200      	str	r2, [sp, #0]
 802161e:	b29b      	uxth	r3, r3
 8021620:	b1b4      	cbz	r4, 8021650 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8021622:	429c      	cmp	r4, r3
 8021624:	bf95      	itete	ls
 8021626:	1b1c      	subls	r4, r3, r4
 8021628:	1ae4      	subhi	r4, r4, r3
 802162a:	fa1f fa84 	uxthls.w	sl, r4
 802162e:	b2a4      	uxthhi	r4, r4
 8021630:	bf87      	ittee	hi
 8021632:	4671      	movhi	r1, lr
 8021634:	f04f 0a00 	movhi.w	sl, #0
 8021638:	fa1f f188 	uxthls.w	r1, r8
 802163c:	2400      	movls	r4, #0
 802163e:	4653      	mov	r3, sl
 8021640:	468e      	mov	lr, r1
 8021642:	e7db      	b.n	80215fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8021644:	9a00      	ldr	r2, [sp, #0]
 8021646:	9b00      	ldr	r3, [sp, #0]
 8021648:	3202      	adds	r2, #2
 802164a:	785b      	ldrb	r3, [r3, #1]
 802164c:	9200      	str	r2, [sp, #0]
 802164e:	e7e7      	b.n	8021620 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8021650:	2202      	movs	r2, #2
 8021652:	4615      	mov	r5, r2
 8021654:	9907      	ldr	r1, [sp, #28]
 8021656:	9a02      	ldr	r2, [sp, #8]
 8021658:	fb15 1202 	smlabb	r2, r5, r2, r1
 802165c:	9905      	ldr	r1, [sp, #20]
 802165e:	4573      	cmp	r3, lr
 8021660:	f831 c002 	ldrh.w	ip, [r1, r2]
 8021664:	9a01      	ldr	r2, [sp, #4]
 8021666:	bf2b      	itete	cs
 8021668:	eba3 0a0e 	subcs.w	sl, r3, lr
 802166c:	ebae 0103 	subcc.w	r1, lr, r3
 8021670:	46f1      	movcs	r9, lr
 8021672:	4699      	movcc	r9, r3
 8021674:	bf27      	ittee	cs
 8021676:	fa1f fa8a 	uxthcs.w	sl, sl
 802167a:	4621      	movcs	r1, r4
 802167c:	b289      	uxthcc	r1, r1
 802167e:	46a2      	movcc	sl, r4
 8021680:	2aff      	cmp	r2, #255	@ 0xff
 8021682:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021686:	d105      	bne.n	8021694 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8021688:	4481      	add	r9, r0
 802168a:	4581      	cmp	r9, r0
 802168c:	d045      	beq.n	802171a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 802168e:	f820 cb02 	strh.w	ip, [r0], #2
 8021692:	e7fa      	b.n	802168a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8021694:	9d03      	ldr	r5, [sp, #12]
 8021696:	ea4f 222c 	mov.w	r2, ip, asr #8
 802169a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802169e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80216a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80216a6:	436a      	muls	r2, r5
 80216a8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80216ac:	fa5f fc8c 	uxtb.w	ip, ip
 80216b0:	9208      	str	r2, [sp, #32]
 80216b2:	fb0b fb05 	mul.w	fp, fp, r5
 80216b6:	fb0c fc05 	mul.w	ip, ip, r5
 80216ba:	4481      	add	r9, r0
 80216bc:	4581      	cmp	r9, r0
 80216be:	d02c      	beq.n	802171a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80216c0:	8802      	ldrh	r2, [r0, #0]
 80216c2:	9d04      	ldr	r5, [sp, #16]
 80216c4:	9f04      	ldr	r7, [sp, #16]
 80216c6:	1216      	asrs	r6, r2, #8
 80216c8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80216cc:	fb16 f605 	smulbb	r6, r6, r5
 80216d0:	9d08      	ldr	r5, [sp, #32]
 80216d2:	442e      	add	r6, r5
 80216d4:	10d5      	asrs	r5, r2, #3
 80216d6:	00d2      	lsls	r2, r2, #3
 80216d8:	b2d2      	uxtb	r2, r2
 80216da:	fb12 f207 	smulbb	r2, r2, r7
 80216de:	b2b6      	uxth	r6, r6
 80216e0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80216e4:	4462      	add	r2, ip
 80216e6:	fb15 f507 	smulbb	r5, r5, r7
 80216ea:	b292      	uxth	r2, r2
 80216ec:	1c77      	adds	r7, r6, #1
 80216ee:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80216f2:	1c57      	adds	r7, r2, #1
 80216f4:	445d      	add	r5, fp
 80216f6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 80216fa:	b2ad      	uxth	r5, r5
 80216fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021700:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8021704:	4316      	orrs	r6, r2
 8021706:	1c6a      	adds	r2, r5, #1
 8021708:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 802170c:	096d      	lsrs	r5, r5, #5
 802170e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021712:	432e      	orrs	r6, r5
 8021714:	f820 6b02 	strh.w	r6, [r0], #2
 8021718:	e7d0      	b.n	80216bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 802171a:	4573      	cmp	r3, lr
 802171c:	d38f      	bcc.n	802163e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 802171e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8021722:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021724:	fa1f f188 	uxth.w	r1, r8
 8021728:	1a64      	subs	r4, r4, r1
 802172a:	881b      	ldrh	r3, [r3, #0]
 802172c:	b2a4      	uxth	r4, r4
 802172e:	2c00      	cmp	r4, #0
 8021730:	eba3 0308 	sub.w	r3, r3, r8
 8021734:	bf18      	it	ne
 8021736:	2100      	movne	r1, #0
 8021738:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802173c:	e77f      	b.n	802163e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 802173e:	4b04      	ldr	r3, [pc, #16]	@ (8021750 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8021740:	6818      	ldr	r0, [r3, #0]
 8021742:	6803      	ldr	r3, [r0, #0]
 8021744:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021746:	4798      	blx	r3
 8021748:	b00f      	add	sp, #60	@ 0x3c
 802174a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802174e:	bf00      	nop
 8021750:	20013884 	.word	0x20013884
 8021754:	2001387e 	.word	0x2001387e

08021758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802175c:	b09f      	sub	sp, #124	@ 0x7c
 802175e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8021762:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8021766:	9209      	str	r2, [sp, #36]	@ 0x24
 8021768:	461d      	mov	r5, r3
 802176a:	4604      	mov	r4, r0
 802176c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802176e:	2a00      	cmp	r2, #0
 8021770:	f000 81eb 	beq.w	8021b4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8021774:	6828      	ldr	r0, [r5, #0]
 8021776:	6869      	ldr	r1, [r5, #4]
 8021778:	aa1a      	add	r2, sp, #104	@ 0x68
 802177a:	c203      	stmia	r2!, {r0, r1}
 802177c:	6818      	ldr	r0, [r3, #0]
 802177e:	6859      	ldr	r1, [r3, #4]
 8021780:	aa1c      	add	r2, sp, #112	@ 0x70
 8021782:	c203      	stmia	r2!, {r0, r1}
 8021784:	a81a      	add	r0, sp, #104	@ 0x68
 8021786:	f7f9 f8f1 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802178a:	4629      	mov	r1, r5
 802178c:	a81c      	add	r0, sp, #112	@ 0x70
 802178e:	f7f9 f931 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021792:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8021796:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 802179a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 802179e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80217a2:	bfd7      	itett	le
 80217a4:	b29a      	uxthle	r2, r3
 80217a6:	2201      	movgt	r2, #1
 80217a8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80217ac:	fb91 f2f2 	sdivle	r2, r1, r2
 80217b0:	9202      	str	r2, [sp, #8]
 80217b2:	9802      	ldr	r0, [sp, #8]
 80217b4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80217b8:	fb92 f0f0 	sdiv	r0, r2, r0
 80217bc:	b280      	uxth	r0, r0
 80217be:	9010      	str	r0, [sp, #64]	@ 0x40
 80217c0:	9902      	ldr	r1, [sp, #8]
 80217c2:	9802      	ldr	r0, [sp, #8]
 80217c4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80217c6:	4488      	add	r8, r1
 80217c8:	fb05 2510 	mls	r5, r5, r0, r2
 80217cc:	fb15 f503 	smulbb	r5, r5, r3
 80217d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80217d4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80217d8:	fb98 f8f1 	sdiv	r8, r8, r1
 80217dc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80217e0:	440d      	add	r5, r1
 80217e2:	4419      	add	r1, r3
 80217e4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 80217e8:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80217ec:	441a      	add	r2, r3
 80217ee:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 80217f2:	9304      	str	r3, [sp, #16]
 80217f4:	4b95      	ldr	r3, [pc, #596]	@ (8021a4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80217f6:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 80217fa:	6818      	ldr	r0, [r3, #0]
 80217fc:	6803      	ldr	r3, [r0, #0]
 80217fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021800:	4798      	blx	r3
 8021802:	4b93      	ldr	r3, [pc, #588]	@ (8021a50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8021804:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8021808:	881a      	ldrh	r2, [r3, #0]
 802180a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 802180e:	9318      	str	r3, [sp, #96]	@ 0x60
 8021810:	fb02 7101 	mla	r1, r2, r1, r7
 8021814:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8021818:	4356      	muls	r6, r2
 802181a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 802181e:	f108 0801 	add.w	r8, r8, #1
 8021822:	920a      	str	r2, [sp, #40]	@ 0x28
 8021824:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021826:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 802182a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802182c:	fa1f f888 	uxth.w	r8, r8
 8021830:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8021834:	f108 0204 	add.w	r2, r8, #4
 8021838:	9211      	str	r2, [sp, #68]	@ 0x44
 802183a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802183c:	4b85      	ldr	r3, [pc, #532]	@ (8021a54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 802183e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8021842:	b2ad      	uxth	r5, r5
 8021844:	9215      	str	r2, [sp, #84]	@ 0x54
 8021846:	2d00      	cmp	r5, #0
 8021848:	9a04      	ldr	r2, [sp, #16]
 802184a:	f04f 0100 	mov.w	r1, #0
 802184e:	bf18      	it	ne
 8021850:	2200      	movne	r2, #0
 8021852:	1b1b      	subs	r3, r3, r4
 8021854:	b292      	uxth	r2, r2
 8021856:	910d      	str	r1, [sp, #52]	@ 0x34
 8021858:	9319      	str	r3, [sp, #100]	@ 0x64
 802185a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802185c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802185e:	fa11 f383 	uxtah	r3, r1, r3
 8021862:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8021864:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8021868:	3304      	adds	r3, #4
 802186a:	9306      	str	r3, [sp, #24]
 802186c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802186e:	4283      	cmp	r3, r0
 8021870:	f240 8166 	bls.w	8021b40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8021874:	9902      	ldr	r1, [sp, #8]
 8021876:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 802187a:	fbb5 f3f3 	udiv	r3, r5, r3
 802187e:	1acb      	subs	r3, r1, r3
 8021880:	b29b      	uxth	r3, r3
 8021882:	9316      	str	r3, [sp, #88]	@ 0x58
 8021884:	9b06      	ldr	r3, [sp, #24]
 8021886:	9e06      	ldr	r6, [sp, #24]
 8021888:	7859      	ldrb	r1, [r3, #1]
 802188a:	789b      	ldrb	r3, [r3, #2]
 802188c:	7836      	ldrb	r6, [r6, #0]
 802188e:	9612      	str	r6, [sp, #72]	@ 0x48
 8021890:	021b      	lsls	r3, r3, #8
 8021892:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8021896:	9906      	ldr	r1, [sp, #24]
 8021898:	78c9      	ldrb	r1, [r1, #3]
 802189a:	430b      	orrs	r3, r1
 802189c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 802189e:	3601      	adds	r6, #1
 80218a0:	4419      	add	r1, r3
 80218a2:	9605      	str	r6, [sp, #20]
 80218a4:	1c4e      	adds	r6, r1, #1
 80218a6:	9603      	str	r6, [sp, #12]
 80218a8:	7849      	ldrb	r1, [r1, #1]
 80218aa:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80218ac:	0209      	lsls	r1, r1, #8
 80218ae:	5cf3      	ldrb	r3, [r6, r3]
 80218b0:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80218b4:	4319      	orrs	r1, r3
 80218b6:	b28b      	uxth	r3, r1
 80218b8:	930c      	str	r3, [sp, #48]	@ 0x30
 80218ba:	2300      	movs	r3, #0
 80218bc:	f04f 0a01 	mov.w	sl, #1
 80218c0:	9307      	str	r3, [sp, #28]
 80218c2:	469c      	mov	ip, r3
 80218c4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80218c8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80218cc:	46d3      	mov	fp, sl
 80218ce:	4657      	mov	r7, sl
 80218d0:	930e      	str	r3, [sp, #56]	@ 0x38
 80218d2:	2d00      	cmp	r5, #0
 80218d4:	d07e      	beq.n	80219d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 80218d6:	42af      	cmp	r7, r5
 80218d8:	d26e      	bcs.n	80219b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 80218da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80218dc:	9201      	str	r2, [sp, #4]
 80218de:	1bed      	subs	r5, r5, r7
 80218e0:	4283      	cmp	r3, r0
 80218e2:	b2ad      	uxth	r5, r5
 80218e4:	d802      	bhi.n	80218ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80218e6:	e073      	b.n	80219d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 80218e8:	2b00      	cmp	r3, #0
 80218ea:	d15f      	bne.n	80219ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 80218ec:	9b03      	ldr	r3, [sp, #12]
 80218ee:	785b      	ldrb	r3, [r3, #1]
 80218f0:	f1cb 0207 	rsb	r2, fp, #7
 80218f4:	4093      	lsls	r3, r2
 80218f6:	005b      	lsls	r3, r3, #1
 80218f8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80218fc:	9b03      	ldr	r3, [sp, #12]
 80218fe:	781b      	ldrb	r3, [r3, #0]
 8021900:	fa43 f30b 	asr.w	r3, r3, fp
 8021904:	b2db      	uxtb	r3, r3
 8021906:	4313      	orrs	r3, r2
 8021908:	f10b 0201 	add.w	r2, fp, #1
 802190c:	fa5f fb82 	uxtb.w	fp, r2
 8021910:	9a03      	ldr	r2, [sp, #12]
 8021912:	f1bb 0f08 	cmp.w	fp, #8
 8021916:	bf15      	itete	ne
 8021918:	3201      	addne	r2, #1
 802191a:	3202      	addeq	r2, #2
 802191c:	9203      	strne	r2, [sp, #12]
 802191e:	9203      	streq	r2, [sp, #12]
 8021920:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8021922:	b29f      	uxth	r7, r3
 8021924:	bf08      	it	eq
 8021926:	f04f 0b00 	moveq.w	fp, #0
 802192a:	42ba      	cmp	r2, r7
 802192c:	d309      	bcc.n	8021942 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 802192e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8021932:	2301      	movs	r3, #1
 8021934:	9a05      	ldr	r2, [sp, #20]
 8021936:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 802193a:	d30e      	bcc.n	802195a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 802193c:	469a      	mov	sl, r3
 802193e:	2600      	movs	r6, #0
 8021940:	e035      	b.n	80219ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8021942:	9b05      	ldr	r3, [sp, #20]
 8021944:	429f      	cmp	r7, r3
 8021946:	d318      	bcc.n	802197a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8021948:	eb04 030a 	add.w	r3, r4, sl
 802194c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8021950:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8021954:	f10a 0301 	add.w	r3, sl, #1
 8021958:	b29b      	uxth	r3, r3
 802195a:	9a05      	ldr	r2, [sp, #20]
 802195c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8021960:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8021962:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8021966:	7116      	strb	r6, [r2, #4]
 8021968:	f10a 0601 	add.w	r6, sl, #1
 802196c:	80d1      	strh	r1, [r2, #6]
 802196e:	7156      	strb	r6, [r2, #5]
 8021970:	9a05      	ldr	r2, [sp, #20]
 8021972:	3201      	adds	r2, #1
 8021974:	b292      	uxth	r2, r2
 8021976:	9205      	str	r2, [sp, #20]
 8021978:	e7e0      	b.n	802193c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 802197a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 802197e:	463a      	mov	r2, r7
 8021980:	795b      	ldrb	r3, [r3, #5]
 8021982:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8021986:	4426      	add	r6, r4
 8021988:	9919      	ldr	r1, [sp, #100]	@ 0x64
 802198a:	eb01 0c06 	add.w	ip, r1, r6
 802198e:	f1bc 0f00 	cmp.w	ip, #0
 8021992:	dd07      	ble.n	80219a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8021994:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8021998:	f892 c004 	ldrb.w	ip, [r2, #4]
 802199c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80219a0:	88d2      	ldrh	r2, [r2, #6]
 80219a2:	e7f1      	b.n	8021988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80219a4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80219a8:	b29b      	uxth	r3, r3
 80219aa:	e7c3      	b.n	8021934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80219ac:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80219ae:	970c      	str	r7, [sp, #48]	@ 0x30
 80219b0:	9a01      	ldr	r2, [sp, #4]
 80219b2:	46b4      	mov	ip, r6
 80219b4:	461f      	mov	r7, r3
 80219b6:	e78c      	b.n	80218d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80219b8:	1b7b      	subs	r3, r7, r5
 80219ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80219be:	9201      	str	r2, [sp, #4]
 80219c0:	eb0c 0605 	add.w	r6, ip, r5
 80219c4:	b29b      	uxth	r3, r3
 80219c6:	b2b6      	uxth	r6, r6
 80219c8:	2500      	movs	r5, #0
 80219ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80219cc:	4282      	cmp	r2, r0
 80219ce:	d88b      	bhi.n	80218e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80219d0:	9a01      	ldr	r2, [sp, #4]
 80219d2:	e74b      	b.n	802186c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 80219d4:	4297      	cmp	r7, r2
 80219d6:	d332      	bcc.n	8021a3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 80219d8:	1abb      	subs	r3, r7, r2
 80219da:	b29b      	uxth	r3, r3
 80219dc:	9208      	str	r2, [sp, #32]
 80219de:	9501      	str	r5, [sp, #4]
 80219e0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80219e2:	29ff      	cmp	r1, #255	@ 0xff
 80219e4:	9908      	ldr	r1, [sp, #32]
 80219e6:	eb0c 0601 	add.w	r6, ip, r1
 80219ea:	d135      	bne.n	8021a58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 80219ec:	f1a0 0e02 	sub.w	lr, r0, #2
 80219f0:	b2b6      	uxth	r6, r6
 80219f2:	45b4      	cmp	ip, r6
 80219f4:	f040 808c 	bne.w	8021b10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 80219f8:	9908      	ldr	r1, [sp, #32]
 80219fa:	4297      	cmp	r7, r2
 80219fc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8021a00:	d3e2      	bcc.n	80219c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8021a02:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8021a04:	9904      	ldr	r1, [sp, #16]
 8021a06:	8812      	ldrh	r2, [r2, #0]
 8021a08:	1a52      	subs	r2, r2, r1
 8021a0a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021a0e:	9a07      	ldr	r2, [sp, #28]
 8021a10:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8021a12:	3201      	adds	r2, #1
 8021a14:	428a      	cmp	r2, r1
 8021a16:	9207      	str	r2, [sp, #28]
 8021a18:	f040 8087 	bne.w	8021b2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8021a1c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8021a20:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8021a24:	9b04      	ldr	r3, [sp, #16]
 8021a26:	1bed      	subs	r5, r5, r7
 8021a28:	b2ad      	uxth	r5, r5
 8021a2a:	2d00      	cmp	r5, #0
 8021a2c:	bf08      	it	eq
 8021a2e:	461a      	moveq	r2, r3
 8021a30:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021a32:	bf18      	it	ne
 8021a34:	2200      	movne	r2, #0
 8021a36:	3301      	adds	r3, #1
 8021a38:	930d      	str	r3, [sp, #52]	@ 0x34
 8021a3a:	b292      	uxth	r2, r2
 8021a3c:	e70d      	b.n	802185a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8021a3e:	1bd1      	subs	r1, r2, r7
 8021a40:	b28b      	uxth	r3, r1
 8021a42:	9301      	str	r3, [sp, #4]
 8021a44:	9708      	str	r7, [sp, #32]
 8021a46:	462b      	mov	r3, r5
 8021a48:	e7ca      	b.n	80219e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8021a4a:	bf00      	nop
 8021a4c:	20013884 	.word	0x20013884
 8021a50:	2001387e 	.word	0x2001387e
 8021a54:	fffff7fb 	.word	0xfffff7fb
 8021a58:	b2b6      	uxth	r6, r6
 8021a5a:	900b      	str	r0, [sp, #44]	@ 0x2c
 8021a5c:	45b4      	cmp	ip, r6
 8021a5e:	d0cb      	beq.n	80219f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8021a60:	f10c 0101 	add.w	r1, ip, #1
 8021a64:	44a4      	add	ip, r4
 8021a66:	9117      	str	r1, [sp, #92]	@ 0x5c
 8021a68:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8021a6c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8021a6e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8021a72:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8021a74:	f8b1 c000 	ldrh.w	ip, [r1]
 8021a78:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8021a7a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8021a7e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8021a82:	fb1e fe01 	smulbb	lr, lr, r1
 8021a86:	ea4f 2825 	mov.w	r8, r5, asr #8
 8021a8a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8021a8c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8021a90:	fb08 e801 	mla	r8, r8, r1, lr
 8021a94:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8021a98:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8021a9a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8021a9e:	fb19 f901 	smulbb	r9, r9, r1
 8021aa2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8021aa6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8021aa8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8021aac:	fb0e 9e01 	mla	lr, lr, r1, r9
 8021ab0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021ab4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8021ab6:	fa5f fc8c 	uxtb.w	ip, ip
 8021aba:	fb1c fc01 	smulbb	ip, ip, r1
 8021abe:	00ed      	lsls	r5, r5, #3
 8021ac0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8021ac2:	b2ed      	uxtb	r5, r5
 8021ac4:	fb05 c501 	mla	r5, r5, r1, ip
 8021ac8:	fa1f f888 	uxth.w	r8, r8
 8021acc:	fa1f fe8e 	uxth.w	lr, lr
 8021ad0:	b2ad      	uxth	r5, r5
 8021ad2:	f108 0c01 	add.w	ip, r8, #1
 8021ad6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8021ada:	f10e 0901 	add.w	r9, lr, #1
 8021ade:	f105 0c01 	add.w	ip, r5, #1
 8021ae2:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8021ae6:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8021aea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021aee:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8021af2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021af6:	ea4c 0808 	orr.w	r8, ip, r8
 8021afa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8021afc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8021b00:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021b04:	ea48 0809 	orr.w	r8, r8, r9
 8021b08:	f821 8b02 	strh.w	r8, [r1], #2
 8021b0c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8021b0e:	e7a5      	b.n	8021a5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8021b10:	f10c 0801 	add.w	r8, ip, #1
 8021b14:	44a4      	add	ip, r4
 8021b16:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8021b18:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8021b1c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8021b20:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8021b24:	fa1f fc88 	uxth.w	ip, r8
 8021b28:	e763      	b.n	80219f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8021b2a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021b2e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8021b32:	1aad      	subs	r5, r5, r2
 8021b34:	b2ad      	uxth	r5, r5
 8021b36:	2d00      	cmp	r5, #0
 8021b38:	bf18      	it	ne
 8021b3a:	2200      	movne	r2, #0
 8021b3c:	9201      	str	r2, [sp, #4]
 8021b3e:	e744      	b.n	80219ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8021b40:	4b03      	ldr	r3, [pc, #12]	@ (8021b50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8021b42:	6818      	ldr	r0, [r3, #0]
 8021b44:	6803      	ldr	r3, [r0, #0]
 8021b46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021b48:	4798      	blx	r3
 8021b4a:	b01f      	add	sp, #124	@ 0x7c
 8021b4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b50:	20013884 	.word	0x20013884

08021b54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8021b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b58:	b093      	sub	sp, #76	@ 0x4c
 8021b5a:	4616      	mov	r6, r2
 8021b5c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8021b60:	9003      	str	r0, [sp, #12]
 8021b62:	460d      	mov	r5, r1
 8021b64:	9201      	str	r2, [sp, #4]
 8021b66:	2a00      	cmp	r2, #0
 8021b68:	f000 8304 	beq.w	8022174 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8021b6c:	6830      	ldr	r0, [r6, #0]
 8021b6e:	6871      	ldr	r1, [r6, #4]
 8021b70:	ac0e      	add	r4, sp, #56	@ 0x38
 8021b72:	c403      	stmia	r4!, {r0, r1}
 8021b74:	6818      	ldr	r0, [r3, #0]
 8021b76:	6859      	ldr	r1, [r3, #4]
 8021b78:	ac10      	add	r4, sp, #64	@ 0x40
 8021b7a:	c403      	stmia	r4!, {r0, r1}
 8021b7c:	a80e      	add	r0, sp, #56	@ 0x38
 8021b7e:	f7f8 fef5 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021b82:	4631      	mov	r1, r6
 8021b84:	a810      	add	r0, sp, #64	@ 0x40
 8021b86:	f7f8 ff35 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021b8a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8021b8e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8021b92:	bfd7      	itett	le
 8021b94:	b293      	uxthle	r3, r2
 8021b96:	2301      	movgt	r3, #1
 8021b98:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8021b9c:	fb91 f3f3 	sdivle	r3, r1, r3
 8021ba0:	9304      	str	r3, [sp, #16]
 8021ba2:	f105 0308 	add.w	r3, r5, #8
 8021ba6:	9904      	ldr	r1, [sp, #16]
 8021ba8:	9308      	str	r3, [sp, #32]
 8021baa:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8021bae:	440b      	add	r3, r1
 8021bb0:	3b01      	subs	r3, #1
 8021bb2:	fb93 f3f1 	sdiv	r3, r3, r1
 8021bb6:	9908      	ldr	r1, [sp, #32]
 8021bb8:	3b01      	subs	r3, #1
 8021bba:	b29b      	uxth	r3, r3
 8021bbc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8021bc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8021bc2:	9904      	ldr	r1, [sp, #16]
 8021bc4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8021bc8:	fb93 f0f1 	sdiv	r0, r3, r1
 8021bcc:	b284      	uxth	r4, r0
 8021bce:	9405      	str	r4, [sp, #20]
 8021bd0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8021bd4:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8021bd8:	fb05 3914 	mls	r9, r5, r4, r3
 8021bdc:	fb19 f902 	smulbb	r9, r9, r2
 8021be0:	4489      	add	r9, r1
 8021be2:	fa1f f989 	uxth.w	r9, r9
 8021be6:	2d00      	cmp	r5, #0
 8021be8:	d05d      	beq.n	8021ca6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8021bea:	1e6a      	subs	r2, r5, #1
 8021bec:	9808      	ldr	r0, [sp, #32]
 8021bee:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8021bf2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021bf4:	fa9a fa8a 	rev.w	sl, sl
 8021bf8:	4492      	add	sl, r2
 8021bfa:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8021bfe:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8021c02:	4411      	add	r1, r2
 8021c04:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8021c08:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8021c0c:	4413      	add	r3, r2
 8021c0e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8021c12:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8021c16:	9302      	str	r3, [sp, #8]
 8021c18:	4bcb      	ldr	r3, [pc, #812]	@ (8021f48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8021c1a:	6818      	ldr	r0, [r3, #0]
 8021c1c:	6803      	ldr	r3, [r0, #0]
 8021c1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021c20:	4798      	blx	r3
 8021c22:	4bca      	ldr	r3, [pc, #808]	@ (8021f4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8021c24:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8021c28:	881b      	ldrh	r3, [r3, #0]
 8021c2a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8021c2e:	fb03 2404 	mla	r4, r3, r4, r2
 8021c32:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021c36:	436b      	muls	r3, r5
 8021c38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021c3c:	930d      	str	r3, [sp, #52]	@ 0x34
 8021c3e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8021c42:	fb99 f3f3 	sdiv	r3, r9, r3
 8021c46:	9306      	str	r3, [sp, #24]
 8021c48:	9b01      	ldr	r3, [sp, #4]
 8021c4a:	43db      	mvns	r3, r3
 8021c4c:	b2db      	uxtb	r3, r3
 8021c4e:	930a      	str	r3, [sp, #40]	@ 0x28
 8021c50:	9b03      	ldr	r3, [sp, #12]
 8021c52:	3304      	adds	r3, #4
 8021c54:	4618      	mov	r0, r3
 8021c56:	2280      	movs	r2, #128	@ 0x80
 8021c58:	2100      	movs	r1, #0
 8021c5a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021c5c:	f00c fc0f 	bl	802e47e <memset>
 8021c60:	4bbb      	ldr	r3, [pc, #748]	@ (8021f50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8021c62:	9300      	str	r3, [sp, #0]
 8021c64:	2300      	movs	r3, #0
 8021c66:	f04f 0600 	mov.w	r6, #0
 8021c6a:	9307      	str	r3, [sp, #28]
 8021c6c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021c6e:	42a3      	cmp	r3, r4
 8021c70:	f240 827b 	bls.w	802216a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8021c74:	f04f 0e07 	mov.w	lr, #7
 8021c78:	f1b9 0f00 	cmp.w	r9, #0
 8021c7c:	f000 8159 	beq.w	8021f32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8021c80:	f89a 5000 	ldrb.w	r5, [sl]
 8021c84:	b2ed      	uxtb	r5, r5
 8021c86:	11aa      	asrs	r2, r5, #6
 8021c88:	f10a 0701 	add.w	r7, sl, #1
 8021c8c:	d10e      	bne.n	8021cac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8021c8e:	9b03      	ldr	r3, [sp, #12]
 8021c90:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8021c94:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8021c98:	88ae      	ldrh	r6, [r5, #4]
 8021c9a:	f109 39ff 	add.w	r9, r9, #4294967295
 8021c9e:	fa1f f989 	uxth.w	r9, r9
 8021ca2:	46ba      	mov	sl, r7
 8021ca4:	e7e8      	b.n	8021c78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8021ca6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8021caa:	e7a6      	b.n	8021bfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8021cac:	2a01      	cmp	r2, #1
 8021cae:	d129      	bne.n	8021d04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8021cb0:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8021cb4:	f005 0203 	and.w	r2, r5, #3
 8021cb8:	3b02      	subs	r3, #2
 8021cba:	4413      	add	r3, r2
 8021cbc:	f003 031f 	and.w	r3, r3, #31
 8021cc0:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8021cc4:	f363 0604 	bfi	r6, r3, #0, #5
 8021cc8:	3a02      	subs	r2, #2
 8021cca:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8021cce:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8021cd2:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8021cd6:	f362 164a 	bfi	r6, r2, #5, #6
 8021cda:	3d02      	subs	r5, #2
 8021cdc:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8021ce0:	f005 051f 	and.w	r5, r5, #31
 8021ce4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8021ce8:	2103      	movs	r1, #3
 8021cea:	fb11 2205 	smlabb	r2, r1, r5, r2
 8021cee:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8021cf2:	9a03      	ldr	r2, [sp, #12]
 8021cf4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021cf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021cfc:	f365 26cf 	bfi	r6, r5, #11, #5
 8021d00:	809e      	strh	r6, [r3, #4]
 8021d02:	e7ca      	b.n	8021c9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8021d04:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8021d08:	2a02      	cmp	r2, #2
 8021d0a:	b2ab      	uxth	r3, r5
 8021d0c:	d136      	bne.n	8021d7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8021d0e:	2101      	movs	r1, #1
 8021d10:	fb12 1205 	smlabb	r2, r2, r5, r1
 8021d14:	4492      	add	sl, r2
 8021d16:	463a      	mov	r2, r7
 8021d18:	4552      	cmp	r2, sl
 8021d1a:	d01c      	beq.n	8021d56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8021d1c:	4694      	mov	ip, r2
 8021d1e:	f04f 0b03 	mov.w	fp, #3
 8021d22:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8021d26:	7852      	ldrb	r2, [r2, #1]
 8021d28:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8021d2c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8021d30:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8021d34:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8021d38:	f001 021f 	and.w	r2, r1, #31
 8021d3c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8021d40:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8021d44:	9a03      	ldr	r2, [sp, #12]
 8021d46:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8021d4a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8021d4e:	460e      	mov	r6, r1
 8021d50:	8081      	strh	r1, [r0, #4]
 8021d52:	4662      	mov	r2, ip
 8021d54:	e7e0      	b.n	8021d18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8021d56:	4599      	cmp	r9, r3
 8021d58:	d20b      	bcs.n	8021d72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8021d5a:	eba5 0509 	sub.w	r5, r5, r9
 8021d5e:	2d00      	cmp	r5, #0
 8021d60:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8021d64:	f300 8209 	bgt.w	802217a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8021d68:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8021d6c:	2301      	movs	r3, #1
 8021d6e:	9307      	str	r3, [sp, #28]
 8021d70:	e00c      	b.n	8021d8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8021d72:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8021d76:	eba9 0903 	sub.w	r9, r9, r3
 8021d7a:	e790      	b.n	8021c9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8021d7c:	4599      	cmp	r9, r3
 8021d7e:	d2fa      	bcs.n	8021d76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8021d80:	eba5 0509 	sub.w	r5, r5, r9
 8021d84:	2d00      	cmp	r5, #0
 8021d86:	dc1d      	bgt.n	8021dc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8021d88:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8021d8c:	f04f 0b00 	mov.w	fp, #0
 8021d90:	f1b8 0f00 	cmp.w	r8, #0
 8021d94:	f340 81a1 	ble.w	80220da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8021d98:	783b      	ldrb	r3, [r7, #0]
 8021d9a:	b2db      	uxtb	r3, r3
 8021d9c:	119a      	asrs	r2, r3, #6
 8021d9e:	f107 0a01 	add.w	sl, r7, #1
 8021da2:	f040 80d7 	bne.w	8021f54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8021da6:	9a03      	ldr	r2, [sp, #12]
 8021da8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021dac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021db0:	889e      	ldrh	r6, [r3, #4]
 8021db2:	9b01      	ldr	r3, [sp, #4]
 8021db4:	2bff      	cmp	r3, #255	@ 0xff
 8021db6:	f040 81e9 	bne.w	802218c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8021dba:	8026      	strh	r6, [r4, #0]
 8021dbc:	f108 38ff 	add.w	r8, r8, #4294967295
 8021dc0:	3402      	adds	r4, #2
 8021dc2:	e0be      	b.n	8021f42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8021dc4:	9b02      	ldr	r3, [sp, #8]
 8021dc6:	9a02      	ldr	r2, [sp, #8]
 8021dc8:	42ab      	cmp	r3, r5
 8021dca:	bfa8      	it	ge
 8021dcc:	462b      	movge	r3, r5
 8021dce:	eba2 0803 	sub.w	r8, r2, r3
 8021dd2:	9a07      	ldr	r2, [sp, #28]
 8021dd4:	1aed      	subs	r5, r5, r3
 8021dd6:	2a00      	cmp	r2, #0
 8021dd8:	d05a      	beq.n	8021e90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8021dda:	9a01      	ldr	r2, [sp, #4]
 8021ddc:	2aff      	cmp	r2, #255	@ 0xff
 8021dde:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021de2:	d049      	beq.n	8021e78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8021de4:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8021de8:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8021dec:	42a3      	cmp	r3, r4
 8021dee:	f240 80a5 	bls.w	8021f3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8021df2:	46bc      	mov	ip, r7
 8021df4:	8820      	ldrh	r0, [r4, #0]
 8021df6:	f81c 2b02 	ldrb.w	r2, [ip], #2
 8021dfa:	7879      	ldrb	r1, [r7, #1]
 8021dfc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8021e00:	b212      	sxth	r2, r2
 8021e02:	b291      	uxth	r1, r2
 8021e04:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8021e08:	120f      	asrs	r7, r1, #8
 8021e0a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8021e0e:	fb1a fa09 	smulbb	sl, sl, r9
 8021e12:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8021e16:	fb07 a70e 	mla	r7, r7, lr, sl
 8021e1a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8021e1e:	00c0      	lsls	r0, r0, #3
 8021e20:	10c9      	asrs	r1, r1, #3
 8021e22:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8021e26:	00d2      	lsls	r2, r2, #3
 8021e28:	b2c0      	uxtb	r0, r0
 8021e2a:	fb1a fa09 	smulbb	sl, sl, r9
 8021e2e:	fb10 f009 	smulbb	r0, r0, r9
 8021e32:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021e36:	b2d2      	uxtb	r2, r2
 8021e38:	b2bf      	uxth	r7, r7
 8021e3a:	fb01 a10e 	mla	r1, r1, lr, sl
 8021e3e:	fb02 020e 	mla	r2, r2, lr, r0
 8021e42:	b289      	uxth	r1, r1
 8021e44:	b292      	uxth	r2, r2
 8021e46:	1c78      	adds	r0, r7, #1
 8021e48:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8021e4c:	f101 0a01 	add.w	sl, r1, #1
 8021e50:	1c50      	adds	r0, r2, #1
 8021e52:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021e56:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8021e5a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8021e5e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021e62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021e66:	4307      	orrs	r7, r0
 8021e68:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8021e6c:	ea47 070a 	orr.w	r7, r7, sl
 8021e70:	f824 7b02 	strh.w	r7, [r4], #2
 8021e74:	4667      	mov	r7, ip
 8021e76:	e7b9      	b.n	8021dec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 8021e78:	42a3      	cmp	r3, r4
 8021e7a:	d95f      	bls.n	8021f3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8021e7c:	463a      	mov	r2, r7
 8021e7e:	f812 1b02 	ldrb.w	r1, [r2], #2
 8021e82:	7878      	ldrb	r0, [r7, #1]
 8021e84:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8021e88:	f824 1b02 	strh.w	r1, [r4], #2
 8021e8c:	4617      	mov	r7, r2
 8021e8e:	e7f3      	b.n	8021e78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8021e90:	9901      	ldr	r1, [sp, #4]
 8021e92:	29ff      	cmp	r1, #255	@ 0xff
 8021e94:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021e98:	b2b2      	uxth	r2, r6
 8021e9a:	d044      	beq.n	8021f26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8021e9c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8021ea0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8021ea4:	ea4f 2922 	mov.w	r9, r2, asr #8
 8021ea8:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021eac:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8021eb0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8021eb4:	4608      	mov	r0, r1
 8021eb6:	fb09 f901 	mul.w	r9, r9, r1
 8021eba:	fb0e fe01 	mul.w	lr, lr, r1
 8021ebe:	00d1      	lsls	r1, r2, #3
 8021ec0:	b2c9      	uxtb	r1, r1
 8021ec2:	4341      	muls	r1, r0
 8021ec4:	429c      	cmp	r4, r3
 8021ec6:	f4bf af61 	bcs.w	8021d8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8021eca:	8822      	ldrh	r2, [r4, #0]
 8021ecc:	1210      	asrs	r0, r2, #8
 8021ece:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8021ed2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021ed6:	00d2      	lsls	r2, r2, #3
 8021ed8:	fb00 900a 	mla	r0, r0, sl, r9
 8021edc:	b2d2      	uxtb	r2, r2
 8021ede:	b280      	uxth	r0, r0
 8021ee0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8021ee4:	fb02 120a 	mla	r2, r2, sl, r1
 8021ee8:	b292      	uxth	r2, r2
 8021eea:	f100 0b01 	add.w	fp, r0, #1
 8021eee:	fb0c ec0a 	mla	ip, ip, sl, lr
 8021ef2:	fa1f fc8c 	uxth.w	ip, ip
 8021ef6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8021efa:	1c50      	adds	r0, r2, #1
 8021efc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021f00:	f10c 0201 	add.w	r2, ip, #1
 8021f04:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021f08:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8021f0c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021f10:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021f14:	ea40 0b0b 	orr.w	fp, r0, fp
 8021f18:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021f1c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8021f20:	f824 bb02 	strh.w	fp, [r4], #2
 8021f24:	e7ce      	b.n	8021ec4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8021f26:	429c      	cmp	r4, r3
 8021f28:	f4bf af30 	bcs.w	8021d8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8021f2c:	f824 2b02 	strh.w	r2, [r4], #2
 8021f30:	e7f9      	b.n	8021f26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8021f32:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8021f36:	4657      	mov	r7, sl
 8021f38:	464d      	mov	r5, r9
 8021f3a:	e727      	b.n	8021d8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8021f3c:	2300      	movs	r3, #0
 8021f3e:	e716      	b.n	8021d6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8021f40:	44bb      	add	fp, r7
 8021f42:	4657      	mov	r7, sl
 8021f44:	e724      	b.n	8021d90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8021f46:	bf00      	nop
 8021f48:	20013884 	.word	0x20013884
 8021f4c:	2001387e 	.word	0x2001387e
 8021f50:	20000180 	.word	0x20000180
 8021f54:	2a01      	cmp	r2, #1
 8021f56:	d12a      	bne.n	8021fae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8021f58:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8021f5c:	f003 0203 	and.w	r2, r3, #3
 8021f60:	3902      	subs	r1, #2
 8021f62:	4411      	add	r1, r2
 8021f64:	f001 011f 	and.w	r1, r1, #31
 8021f68:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8021f6c:	f361 0604 	bfi	r6, r1, #0, #5
 8021f70:	3802      	subs	r0, #2
 8021f72:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 8021f76:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8021f7a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8021f7e:	f360 164a 	bfi	r6, r0, #5, #6
 8021f82:	3b02      	subs	r3, #2
 8021f84:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8021f88:	f002 031f 	and.w	r3, r2, #31
 8021f8c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8021f90:	2203      	movs	r2, #3
 8021f92:	f363 26cf 	bfi	r6, r3, #11, #5
 8021f96:	fb12 0303 	smlabb	r3, r2, r3, r0
 8021f9a:	2207      	movs	r2, #7
 8021f9c:	fb12 3301 	smlabb	r3, r2, r1, r3
 8021fa0:	9a03      	ldr	r2, [sp, #12]
 8021fa2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021fa6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021faa:	809e      	strh	r6, [r3, #4]
 8021fac:	e701      	b.n	8021db2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8021fae:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8021fb2:	45a8      	cmp	r8, r5
 8021fb4:	4647      	mov	r7, r8
 8021fb6:	bfa8      	it	ge
 8021fb8:	462f      	movge	r7, r5
 8021fba:	2a02      	cmp	r2, #2
 8021fbc:	d154      	bne.n	8022068 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8021fbe:	9b01      	ldr	r3, [sp, #4]
 8021fc0:	2bff      	cmp	r3, #255	@ 0xff
 8021fc2:	d01a      	beq.n	8021ffa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8021fc4:	eb0b 0307 	add.w	r3, fp, r7
 8021fc8:	2b40      	cmp	r3, #64	@ 0x40
 8021fca:	dd16      	ble.n	8021ffa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8021fcc:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8021fd0:	4649      	mov	r1, r9
 8021fd2:	9800      	ldr	r0, [sp, #0]
 8021fd4:	f7df fac2 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8021fd8:	465a      	mov	r2, fp
 8021fda:	9b01      	ldr	r3, [sp, #4]
 8021fdc:	9900      	ldr	r1, [sp, #0]
 8021fde:	4620      	mov	r0, r4
 8021fe0:	f7df fae6 	bl	80015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8021fe4:	9b00      	ldr	r3, [sp, #0]
 8021fe6:	461a      	mov	r2, r3
 8021fe8:	4b6c      	ldr	r3, [pc, #432]	@ (802219c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8021fea:	429a      	cmp	r2, r3
 8021fec:	bf0c      	ite	eq
 8021fee:	4b6c      	ldreq	r3, [pc, #432]	@ (80221a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8021ff0:	4b6a      	ldrne	r3, [pc, #424]	@ (802219c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8021ff2:	9300      	str	r3, [sp, #0]
 8021ff4:	444c      	add	r4, r9
 8021ff6:	f04f 0b00 	mov.w	fp, #0
 8021ffa:	4652      	mov	r2, sl
 8021ffc:	2100      	movs	r1, #0
 8021ffe:	42a9      	cmp	r1, r5
 8022000:	da2c      	bge.n	802205c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8022002:	4694      	mov	ip, r2
 8022004:	f04f 0903 	mov.w	r9, #3
 8022008:	f81c 3b02 	ldrb.w	r3, [ip], #2
 802200c:	7852      	ldrb	r2, [r2, #1]
 802200e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8022012:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8022016:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 802201a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802201e:	f003 021f 	and.w	r2, r3, #31
 8022022:	fb19 000e 	smlabb	r0, r9, lr, r0
 8022026:	f04f 0e07 	mov.w	lr, #7
 802202a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 802202e:	9a03      	ldr	r2, [sp, #12]
 8022030:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8022034:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8022038:	42b9      	cmp	r1, r7
 802203a:	461e      	mov	r6, r3
 802203c:	8083      	strh	r3, [r0, #4]
 802203e:	da0a      	bge.n	8022056 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8022040:	9a01      	ldr	r2, [sp, #4]
 8022042:	2aff      	cmp	r2, #255	@ 0xff
 8022044:	bf15      	itete	ne
 8022046:	9a00      	ldrne	r2, [sp, #0]
 8022048:	8023      	strheq	r3, [r4, #0]
 802204a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 802204e:	3402      	addeq	r4, #2
 8022050:	bf18      	it	ne
 8022052:	f10b 0b01 	addne.w	fp, fp, #1
 8022056:	3101      	adds	r1, #1
 8022058:	4662      	mov	r2, ip
 802205a:	e7d0      	b.n	8021ffe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 802205c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8022060:	eba8 0807 	sub.w	r8, r8, r7
 8022064:	1bed      	subs	r5, r5, r7
 8022066:	e76c      	b.n	8021f42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8022068:	9b01      	ldr	r3, [sp, #4]
 802206a:	2bff      	cmp	r3, #255	@ 0xff
 802206c:	eba8 0807 	sub.w	r8, r8, r7
 8022070:	eba5 0507 	sub.w	r5, r5, r7
 8022074:	fa1f f986 	uxth.w	r9, r6
 8022078:	d027      	beq.n	80220ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 802207a:	eb0b 0307 	add.w	r3, fp, r7
 802207e:	2b40      	cmp	r3, #64	@ 0x40
 8022080:	dd18      	ble.n	80220b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 8022082:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8022086:	4619      	mov	r1, r3
 8022088:	9800      	ldr	r0, [sp, #0]
 802208a:	930c      	str	r3, [sp, #48]	@ 0x30
 802208c:	f7df fa66 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8022090:	465a      	mov	r2, fp
 8022092:	9b01      	ldr	r3, [sp, #4]
 8022094:	9900      	ldr	r1, [sp, #0]
 8022096:	4620      	mov	r0, r4
 8022098:	f7df fa8a 	bl	80015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 802209c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802209e:	441c      	add	r4, r3
 80220a0:	9b00      	ldr	r3, [sp, #0]
 80220a2:	461a      	mov	r2, r3
 80220a4:	4b3d      	ldr	r3, [pc, #244]	@ (802219c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80220a6:	429a      	cmp	r2, r3
 80220a8:	bf0c      	ite	eq
 80220aa:	4b3d      	ldreq	r3, [pc, #244]	@ (80221a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80220ac:	4b3b      	ldrne	r3, [pc, #236]	@ (802219c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80220ae:	9300      	str	r3, [sp, #0]
 80220b0:	f04f 0b00 	mov.w	fp, #0
 80220b4:	9b00      	ldr	r3, [sp, #0]
 80220b6:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80220ba:	463b      	mov	r3, r7
 80220bc:	2b00      	cmp	r3, #0
 80220be:	f43f af3f 	beq.w	8021f40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 80220c2:	f822 9b02 	strh.w	r9, [r2], #2
 80220c6:	3b01      	subs	r3, #1
 80220c8:	e7f8      	b.n	80220bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 80220ca:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80220ce:	42a7      	cmp	r7, r4
 80220d0:	f67f af37 	bls.w	8021f42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80220d4:	f824 9b02 	strh.w	r9, [r4], #2
 80220d8:	e7f9      	b.n	80220ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 80220da:	f1bb 0f00 	cmp.w	fp, #0
 80220de:	d00c      	beq.n	80220fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 80220e0:	ea4f 084b 	mov.w	r8, fp, lsl #1
 80220e4:	4641      	mov	r1, r8
 80220e6:	9800      	ldr	r0, [sp, #0]
 80220e8:	f7df fa38 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 80220ec:	4620      	mov	r0, r4
 80220ee:	9b01      	ldr	r3, [sp, #4]
 80220f0:	9900      	ldr	r1, [sp, #0]
 80220f2:	465a      	mov	r2, fp
 80220f4:	f7df fa5c 	bl	80015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80220f8:	4444      	add	r4, r8
 80220fa:	4b2a      	ldr	r3, [pc, #168]	@ (80221a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 80220fc:	9a02      	ldr	r2, [sp, #8]
 80220fe:	881b      	ldrh	r3, [r3, #0]
 8022100:	1a9b      	subs	r3, r3, r2
 8022102:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022106:	9b06      	ldr	r3, [sp, #24]
 8022108:	3301      	adds	r3, #1
 802210a:	9306      	str	r3, [sp, #24]
 802210c:	9a06      	ldr	r2, [sp, #24]
 802210e:	9b04      	ldr	r3, [sp, #16]
 8022110:	4293      	cmp	r3, r2
 8022112:	d120      	bne.n	8022156 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8022114:	9b05      	ldr	r3, [sp, #20]
 8022116:	9a05      	ldr	r2, [sp, #20]
 8022118:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 802211c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8022120:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8022122:	f103 0801 	add.w	r8, r3, #1
 8022126:	9b08      	ldr	r3, [sp, #32]
 8022128:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 802212c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802212e:	ba3f      	rev	r7, r7
 8022130:	2280      	movs	r2, #128	@ 0x80
 8022132:	2100      	movs	r1, #0
 8022134:	441f      	add	r7, r3
 8022136:	eba9 0905 	sub.w	r9, r9, r5
 802213a:	f00c f9a0 	bl	802e47e <memset>
 802213e:	2300      	movs	r3, #0
 8022140:	fa1f f989 	uxth.w	r9, r9
 8022144:	f04f 0600 	mov.w	r6, #0
 8022148:	f8cd 8014 	str.w	r8, [sp, #20]
 802214c:	9306      	str	r3, [sp, #24]
 802214e:	f7df f9fb 	bl	8001548 <_ZN8touchgfx5paint8tearDownEv>
 8022152:	46ba      	mov	sl, r7
 8022154:	e58a      	b.n	8021c6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8022156:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 802215a:	9b02      	ldr	r3, [sp, #8]
 802215c:	eba9 0903 	sub.w	r9, r9, r3
 8022160:	eba9 0505 	sub.w	r5, r9, r5
 8022164:	fa1f f985 	uxth.w	r9, r5
 8022168:	e7f1      	b.n	802214e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 802216a:	4b0f      	ldr	r3, [pc, #60]	@ (80221a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 802216c:	6818      	ldr	r0, [r3, #0]
 802216e:	6803      	ldr	r3, [r0, #0]
 8022170:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022172:	4798      	blx	r3
 8022174:	b013      	add	sp, #76	@ 0x4c
 8022176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802217a:	9b02      	ldr	r3, [sp, #8]
 802217c:	9a02      	ldr	r2, [sp, #8]
 802217e:	42ab      	cmp	r3, r5
 8022180:	bfa8      	it	ge
 8022182:	462b      	movge	r3, r5
 8022184:	eba2 0803 	sub.w	r8, r2, r3
 8022188:	1aed      	subs	r5, r5, r3
 802218a:	e626      	b.n	8021dda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 802218c:	f108 38ff 	add.w	r8, r8, #4294967295
 8022190:	fa1f f986 	uxth.w	r9, r6
 8022194:	2500      	movs	r5, #0
 8022196:	2701      	movs	r7, #1
 8022198:	e76f      	b.n	802207a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 802219a:	bf00      	nop
 802219c:	20000180 	.word	0x20000180
 80221a0:	20000280 	.word	0x20000280
 80221a4:	2001387e 	.word	0x2001387e
 80221a8:	20013884 	.word	0x20013884

080221ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80221ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221b0:	b08f      	sub	sp, #60	@ 0x3c
 80221b2:	461c      	mov	r4, r3
 80221b4:	9203      	str	r2, [sp, #12]
 80221b6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80221ba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80221bc:	9202      	str	r2, [sp, #8]
 80221be:	460f      	mov	r7, r1
 80221c0:	2a00      	cmp	r2, #0
 80221c2:	f000 8128 	beq.w	8022416 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80221c6:	6820      	ldr	r0, [r4, #0]
 80221c8:	6861      	ldr	r1, [r4, #4]
 80221ca:	aa0a      	add	r2, sp, #40	@ 0x28
 80221cc:	c203      	stmia	r2!, {r0, r1}
 80221ce:	6818      	ldr	r0, [r3, #0]
 80221d0:	6859      	ldr	r1, [r3, #4]
 80221d2:	aa0c      	add	r2, sp, #48	@ 0x30
 80221d4:	c203      	stmia	r2!, {r0, r1}
 80221d6:	a80a      	add	r0, sp, #40	@ 0x28
 80221d8:	f7f8 fbc8 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80221dc:	4621      	mov	r1, r4
 80221de:	a80c      	add	r0, sp, #48	@ 0x30
 80221e0:	f7f8 fc08 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80221e4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80221e8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80221ec:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80221f0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80221f4:	bfde      	ittt	le
 80221f6:	b2b3      	uxthle	r3, r6
 80221f8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80221fc:	fb92 f3f3 	sdivle	r3, r2, r3
 8022200:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8022204:	bfc8      	it	gt
 8022206:	2301      	movgt	r3, #1
 8022208:	fb92 f1f3 	sdiv	r1, r2, r3
 802220c:	fa1f fc81 	uxth.w	ip, r1
 8022210:	fb0c 2413 	mls	r4, ip, r3, r2
 8022214:	fb14 f406 	smulbb	r4, r4, r6
 8022218:	441d      	add	r5, r3
 802221a:	4404      	add	r4, r0
 802221c:	4661      	mov	r1, ip
 802221e:	3d01      	subs	r5, #1
 8022220:	b2a4      	uxth	r4, r4
 8022222:	fb95 f5f3 	sdiv	r5, r5, r3
 8022226:	b121      	cbz	r1, 8022232 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8022228:	9b03      	ldr	r3, [sp, #12]
 802222a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802222e:	ba1b      	rev	r3, r3
 8022230:	441f      	add	r7, r3
 8022232:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022236:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802223a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 802223e:	4418      	add	r0, r3
 8022240:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022244:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8022248:	441a      	add	r2, r3
 802224a:	4b74      	ldr	r3, [pc, #464]	@ (802241c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 802224c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8022250:	6818      	ldr	r0, [r3, #0]
 8022252:	6803      	ldr	r3, [r0, #0]
 8022254:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022256:	4798      	blx	r3
 8022258:	4a71      	ldr	r2, [pc, #452]	@ (8022420 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 802225a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802225e:	8813      	ldrh	r3, [r2, #0]
 8022260:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8022264:	9209      	str	r2, [sp, #36]	@ 0x24
 8022266:	fb03 c101 	mla	r1, r3, r1, ip
 802226a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802226e:	4373      	muls	r3, r6
 8022270:	b2ad      	uxth	r5, r5
 8022272:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8022276:	00ad      	lsls	r5, r5, #2
 8022278:	2c00      	cmp	r4, #0
 802227a:	9304      	str	r3, [sp, #16]
 802227c:	f105 0304 	add.w	r3, r5, #4
 8022280:	9305      	str	r3, [sp, #20]
 8022282:	bf0c      	ite	eq
 8022284:	46c8      	moveq	r8, r9
 8022286:	f04f 0800 	movne.w	r8, #0
 802228a:	2300      	movs	r3, #0
 802228c:	fa1f f888 	uxth.w	r8, r8
 8022290:	9301      	str	r3, [sp, #4]
 8022292:	9a04      	ldr	r2, [sp, #16]
 8022294:	4282      	cmp	r2, r0
 8022296:	f240 80b9 	bls.w	802240c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 802229a:	b95b      	cbnz	r3, 80222b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 802229c:	783a      	ldrb	r2, [r7, #0]
 802229e:	0993      	lsrs	r3, r2, #6
 80222a0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80222a4:	9201      	str	r2, [sp, #4]
 80222a6:	1e5a      	subs	r2, r3, #1
 80222a8:	2a02      	cmp	r2, #2
 80222aa:	bf8d      	iteet	hi
 80222ac:	787b      	ldrbhi	r3, [r7, #1]
 80222ae:	3701      	addls	r7, #1
 80222b0:	b29b      	uxthls	r3, r3
 80222b2:	3702      	addhi	r7, #2
 80222b4:	b184      	cbz	r4, 80222d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 80222b6:	429c      	cmp	r4, r3
 80222b8:	bf95      	itete	ls
 80222ba:	1b1c      	subls	r4, r3, r4
 80222bc:	1ae4      	subhi	r4, r4, r3
 80222be:	fa1f fa84 	uxthls.w	sl, r4
 80222c2:	b2a4      	uxthhi	r4, r4
 80222c4:	bf87      	ittee	hi
 80222c6:	46c4      	movhi	ip, r8
 80222c8:	f04f 0a00 	movhi.w	sl, #0
 80222cc:	fa1f fc89 	uxthls.w	ip, r9
 80222d0:	2400      	movls	r4, #0
 80222d2:	4653      	mov	r3, sl
 80222d4:	46e0      	mov	r8, ip
 80222d6:	e7dc      	b.n	8022292 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 80222d8:	2204      	movs	r2, #4
 80222da:	4615      	mov	r5, r2
 80222dc:	9905      	ldr	r1, [sp, #20]
 80222de:	9a01      	ldr	r2, [sp, #4]
 80222e0:	fb15 1202 	smlabb	r2, r5, r2, r1
 80222e4:	9903      	ldr	r1, [sp, #12]
 80222e6:	588a      	ldr	r2, [r1, r2]
 80222e8:	4543      	cmp	r3, r8
 80222ea:	bf27      	ittee	cs
 80222ec:	eba3 0a08 	subcs.w	sl, r3, r8
 80222f0:	46c6      	movcs	lr, r8
 80222f2:	eba8 0c03 	subcc.w	ip, r8, r3
 80222f6:	469e      	movcc	lr, r3
 80222f8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80222fc:	bf27      	ittee	cs
 80222fe:	fa1f fa8a 	uxthcs.w	sl, sl
 8022302:	46a4      	movcs	ip, r4
 8022304:	fa1f fc8c 	uxthcc.w	ip, ip
 8022308:	46a2      	movcc	sl, r4
 802230a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 802230e:	2900      	cmp	r1, #0
 8022310:	d066      	beq.n	80223e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8022312:	29ff      	cmp	r1, #255	@ 0xff
 8022314:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8022318:	d114      	bne.n	8022344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 802231a:	9d02      	ldr	r5, [sp, #8]
 802231c:	2dff      	cmp	r5, #255	@ 0xff
 802231e:	d111      	bne.n	8022344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8022320:	0951      	lsrs	r1, r2, #5
 8022322:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8022326:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802232a:	f026 0607 	bic.w	r6, r6, #7
 802232e:	430e      	orrs	r6, r1
 8022330:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022334:	4316      	orrs	r6, r2
 8022336:	b2b6      	uxth	r6, r6
 8022338:	4486      	add	lr, r0
 802233a:	4586      	cmp	lr, r0
 802233c:	d051      	beq.n	80223e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 802233e:	f820 6b02 	strh.w	r6, [r0], #2
 8022342:	e7fa      	b.n	802233a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8022344:	9d02      	ldr	r5, [sp, #8]
 8022346:	4369      	muls	r1, r5
 8022348:	1c4d      	adds	r5, r1, #1
 802234a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 802234e:	122d      	asrs	r5, r5, #8
 8022350:	ea6f 0b05 	mvn.w	fp, r5
 8022354:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022358:	b2ad      	uxth	r5, r5
 802235a:	b2f6      	uxtb	r6, r6
 802235c:	b2d2      	uxtb	r2, r2
 802235e:	fb11 f105 	smulbb	r1, r1, r5
 8022362:	fb16 f605 	smulbb	r6, r6, r5
 8022366:	fb12 f205 	smulbb	r2, r2, r5
 802236a:	b289      	uxth	r1, r1
 802236c:	b2b6      	uxth	r6, r6
 802236e:	b292      	uxth	r2, r2
 8022370:	9106      	str	r1, [sp, #24]
 8022372:	9607      	str	r6, [sp, #28]
 8022374:	9208      	str	r2, [sp, #32]
 8022376:	4486      	add	lr, r0
 8022378:	fa5f fb8b 	uxtb.w	fp, fp
 802237c:	4586      	cmp	lr, r0
 802237e:	d030      	beq.n	80223e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8022380:	8802      	ldrh	r2, [r0, #0]
 8022382:	9906      	ldr	r1, [sp, #24]
 8022384:	1216      	asrs	r6, r2, #8
 8022386:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802238a:	10d5      	asrs	r5, r2, #3
 802238c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8022390:	fb06 160b 	mla	r6, r6, fp, r1
 8022394:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022398:	9907      	ldr	r1, [sp, #28]
 802239a:	00d2      	lsls	r2, r2, #3
 802239c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80223a0:	fb05 150b 	mla	r5, r5, fp, r1
 80223a4:	b2d2      	uxtb	r2, r2
 80223a6:	9908      	ldr	r1, [sp, #32]
 80223a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80223ac:	b2b6      	uxth	r6, r6
 80223ae:	fb02 120b 	mla	r2, r2, fp, r1
 80223b2:	b292      	uxth	r2, r2
 80223b4:	1c71      	adds	r1, r6, #1
 80223b6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 80223ba:	1c51      	adds	r1, r2, #1
 80223bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80223c0:	b2ad      	uxth	r5, r5
 80223c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80223c6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80223ca:	4316      	orrs	r6, r2
 80223cc:	1c6a      	adds	r2, r5, #1
 80223ce:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80223d2:	096d      	lsrs	r5, r5, #5
 80223d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80223d8:	432e      	orrs	r6, r5
 80223da:	f820 6b02 	strh.w	r6, [r0], #2
 80223de:	e7cd      	b.n	802237c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80223e0:	4470      	add	r0, lr
 80223e2:	4543      	cmp	r3, r8
 80223e4:	f4ff af75 	bcc.w	80222d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 80223e8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80223ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80223ee:	fa1f fc89 	uxth.w	ip, r9
 80223f2:	eba4 040c 	sub.w	r4, r4, ip
 80223f6:	881b      	ldrh	r3, [r3, #0]
 80223f8:	b2a4      	uxth	r4, r4
 80223fa:	2c00      	cmp	r4, #0
 80223fc:	eba3 0309 	sub.w	r3, r3, r9
 8022400:	bf18      	it	ne
 8022402:	f04f 0c00 	movne.w	ip, #0
 8022406:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802240a:	e762      	b.n	80222d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 802240c:	4b03      	ldr	r3, [pc, #12]	@ (802241c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 802240e:	6818      	ldr	r0, [r3, #0]
 8022410:	6803      	ldr	r3, [r0, #0]
 8022412:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022414:	4798      	blx	r3
 8022416:	b00f      	add	sp, #60	@ 0x3c
 8022418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802241c:	20013884 	.word	0x20013884
 8022420:	2001387e 	.word	0x2001387e

08022424 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8022424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022428:	b093      	sub	sp, #76	@ 0x4c
 802242a:	461c      	mov	r4, r3
 802242c:	9205      	str	r2, [sp, #20]
 802242e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8022432:	9101      	str	r1, [sp, #4]
 8022434:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022436:	9202      	str	r2, [sp, #8]
 8022438:	2a00      	cmp	r2, #0
 802243a:	f000 812c 	beq.w	8022696 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 802243e:	6820      	ldr	r0, [r4, #0]
 8022440:	6861      	ldr	r1, [r4, #4]
 8022442:	aa0e      	add	r2, sp, #56	@ 0x38
 8022444:	c203      	stmia	r2!, {r0, r1}
 8022446:	6818      	ldr	r0, [r3, #0]
 8022448:	6859      	ldr	r1, [r3, #4]
 802244a:	aa10      	add	r2, sp, #64	@ 0x40
 802244c:	c203      	stmia	r2!, {r0, r1}
 802244e:	a80e      	add	r0, sp, #56	@ 0x38
 8022450:	f7f8 fa8c 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022454:	4621      	mov	r1, r4
 8022456:	a810      	add	r0, sp, #64	@ 0x40
 8022458:	f7f8 facc 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802245c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8022460:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8022464:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8022468:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 802246c:	bfde      	ittt	le
 802246e:	b2b3      	uxthle	r3, r6
 8022470:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8022474:	fb92 f3f3 	sdivle	r3, r2, r3
 8022478:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 802247c:	bfc8      	it	gt
 802247e:	2301      	movgt	r3, #1
 8022480:	fb92 f1f3 	sdiv	r1, r2, r3
 8022484:	fa1f fc81 	uxth.w	ip, r1
 8022488:	fb0c 2413 	mls	r4, ip, r3, r2
 802248c:	fb14 f406 	smulbb	r4, r4, r6
 8022490:	441d      	add	r5, r3
 8022492:	4404      	add	r4, r0
 8022494:	4661      	mov	r1, ip
 8022496:	3d01      	subs	r5, #1
 8022498:	b2a4      	uxth	r4, r4
 802249a:	fb95 f5f3 	sdiv	r5, r5, r3
 802249e:	b131      	cbz	r1, 80224ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 80224a0:	9b05      	ldr	r3, [sp, #20]
 80224a2:	9901      	ldr	r1, [sp, #4]
 80224a4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80224a8:	ba1b      	rev	r3, r3
 80224aa:	4419      	add	r1, r3
 80224ac:	9101      	str	r1, [sp, #4]
 80224ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80224b2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80224b6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 80224ba:	4418      	add	r0, r3
 80224bc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 80224c0:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 80224c4:	441a      	add	r2, r3
 80224c6:	4b75      	ldr	r3, [pc, #468]	@ (802269c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80224c8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 80224cc:	6818      	ldr	r0, [r3, #0]
 80224ce:	6803      	ldr	r3, [r0, #0]
 80224d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80224d2:	4798      	blx	r3
 80224d4:	4972      	ldr	r1, [pc, #456]	@ (80226a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80224d6:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 80224da:	880b      	ldrh	r3, [r1, #0]
 80224dc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80224e0:	910d      	str	r1, [sp, #52]	@ 0x34
 80224e2:	fb03 c202 	mla	r2, r3, r2, ip
 80224e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80224ea:	4373      	muls	r3, r6
 80224ec:	b2ad      	uxth	r5, r5
 80224ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80224f2:	00ad      	lsls	r5, r5, #2
 80224f4:	9308      	str	r3, [sp, #32]
 80224f6:	1d2b      	adds	r3, r5, #4
 80224f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80224fa:	9b02      	ldr	r3, [sp, #8]
 80224fc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8022500:	9106      	str	r1, [sp, #24]
 8022502:	43da      	mvns	r2, r3
 8022504:	2c00      	cmp	r4, #0
 8022506:	bf0c      	ite	eq
 8022508:	46dc      	moveq	ip, fp
 802250a:	f04f 0c00 	movne.w	ip, #0
 802250e:	2300      	movs	r3, #0
 8022510:	b2d2      	uxtb	r2, r2
 8022512:	fa1f fc8c 	uxth.w	ip, ip
 8022516:	9303      	str	r3, [sp, #12]
 8022518:	9207      	str	r2, [sp, #28]
 802251a:	9a08      	ldr	r2, [sp, #32]
 802251c:	4282      	cmp	r2, r0
 802251e:	f240 80b5 	bls.w	802268c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8022522:	b963      	cbnz	r3, 802253e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8022524:	9b01      	ldr	r3, [sp, #4]
 8022526:	781a      	ldrb	r2, [r3, #0]
 8022528:	0993      	lsrs	r3, r2, #6
 802252a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802252e:	9203      	str	r2, [sp, #12]
 8022530:	1e5a      	subs	r2, r3, #1
 8022532:	2a02      	cmp	r2, #2
 8022534:	d815      	bhi.n	8022562 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8022536:	9a01      	ldr	r2, [sp, #4]
 8022538:	3201      	adds	r2, #1
 802253a:	9201      	str	r2, [sp, #4]
 802253c:	b29b      	uxth	r3, r3
 802253e:	b1b4      	cbz	r4, 802256e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8022540:	429c      	cmp	r4, r3
 8022542:	bf95      	itete	ls
 8022544:	1b1c      	subls	r4, r3, r4
 8022546:	1ae4      	subhi	r4, r4, r3
 8022548:	fa1f f884 	uxthls.w	r8, r4
 802254c:	b2a4      	uxthhi	r4, r4
 802254e:	bf87      	ittee	hi
 8022550:	4666      	movhi	r6, ip
 8022552:	f04f 0800 	movhi.w	r8, #0
 8022556:	fa1f f68b 	uxthls.w	r6, fp
 802255a:	2400      	movls	r4, #0
 802255c:	4643      	mov	r3, r8
 802255e:	46b4      	mov	ip, r6
 8022560:	e7db      	b.n	802251a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8022562:	9a01      	ldr	r2, [sp, #4]
 8022564:	9b01      	ldr	r3, [sp, #4]
 8022566:	3202      	adds	r2, #2
 8022568:	785b      	ldrb	r3, [r3, #1]
 802256a:	9201      	str	r2, [sp, #4]
 802256c:	e7e7      	b.n	802253e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 802256e:	2203      	movs	r2, #3
 8022570:	4615      	mov	r5, r2
 8022572:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8022574:	9a03      	ldr	r2, [sp, #12]
 8022576:	fb15 1202 	smlabb	r2, r5, r2, r1
 802257a:	9905      	ldr	r1, [sp, #20]
 802257c:	4563      	cmp	r3, ip
 802257e:	eb01 0502 	add.w	r5, r1, r2
 8022582:	9902      	ldr	r1, [sp, #8]
 8022584:	bf29      	itett	cs
 8022586:	eba3 080c 	subcs.w	r8, r3, ip
 802258a:	ebac 0603 	subcc.w	r6, ip, r3
 802258e:	fa1f f888 	uxthcs.w	r8, r8
 8022592:	46e1      	movcs	r9, ip
 8022594:	bf2f      	iteee	cs
 8022596:	4626      	movcs	r6, r4
 8022598:	b2b6      	uxthcc	r6, r6
 802259a:	4699      	movcc	r9, r3
 802259c:	46a0      	movcc	r8, r4
 802259e:	29ff      	cmp	r1, #255	@ 0xff
 80225a0:	d04a      	beq.n	8022638 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80225a2:	9f06      	ldr	r7, [sp, #24]
 80225a4:	78a9      	ldrb	r1, [r5, #2]
 80225a6:	9004      	str	r0, [sp, #16]
 80225a8:	4379      	muls	r1, r7
 80225aa:	910a      	str	r1, [sp, #40]	@ 0x28
 80225ac:	7869      	ldrb	r1, [r5, #1]
 80225ae:	4379      	muls	r1, r7
 80225b0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80225b2:	9905      	ldr	r1, [sp, #20]
 80225b4:	5c8a      	ldrb	r2, [r1, r2]
 80225b6:	437a      	muls	r2, r7
 80225b8:	920c      	str	r2, [sp, #48]	@ 0x30
 80225ba:	46ca      	mov	sl, r9
 80225bc:	f1ba 0f00 	cmp.w	sl, #0
 80225c0:	d03d      	beq.n	802263e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80225c2:	9a04      	ldr	r2, [sp, #16]
 80225c4:	9f07      	ldr	r7, [sp, #28]
 80225c6:	8812      	ldrh	r2, [r2, #0]
 80225c8:	1215      	asrs	r5, r2, #8
 80225ca:	46be      	mov	lr, r7
 80225cc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80225d0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80225d2:	10d1      	asrs	r1, r2, #3
 80225d4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80225d8:	fb05 750e 	mla	r5, r5, lr, r7
 80225dc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80225e0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80225e2:	00d2      	lsls	r2, r2, #3
 80225e4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80225e8:	fb01 710e 	mla	r1, r1, lr, r7
 80225ec:	b2d2      	uxtb	r2, r2
 80225ee:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80225f0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80225f4:	b2ad      	uxth	r5, r5
 80225f6:	fb02 720e 	mla	r2, r2, lr, r7
 80225fa:	b292      	uxth	r2, r2
 80225fc:	f105 0e01 	add.w	lr, r5, #1
 8022600:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8022604:	f102 0e01 	add.w	lr, r2, #1
 8022608:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 802260c:	b289      	uxth	r1, r1
 802260e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022612:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022616:	4315      	orrs	r5, r2
 8022618:	1c4a      	adds	r2, r1, #1
 802261a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802261e:	0949      	lsrs	r1, r1, #5
 8022620:	9a04      	ldr	r2, [sp, #16]
 8022622:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022626:	430d      	orrs	r5, r1
 8022628:	f822 5b02 	strh.w	r5, [r2], #2
 802262c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022630:	9204      	str	r2, [sp, #16]
 8022632:	fa1f fa8a 	uxth.w	sl, sl
 8022636:	e7c1      	b.n	80225bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8022638:	4649      	mov	r1, r9
 802263a:	4686      	mov	lr, r0
 802263c:	b999      	cbnz	r1, 8022666 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 802263e:	4563      	cmp	r3, ip
 8022640:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8022644:	d38a      	bcc.n	802255c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8022646:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 802264a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802264c:	fa1f f68b 	uxth.w	r6, fp
 8022650:	1ba4      	subs	r4, r4, r6
 8022652:	881b      	ldrh	r3, [r3, #0]
 8022654:	b2a4      	uxth	r4, r4
 8022656:	2c00      	cmp	r4, #0
 8022658:	eba3 030b 	sub.w	r3, r3, fp
 802265c:	bf18      	it	ne
 802265e:	2600      	movne	r6, #0
 8022660:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8022664:	e77a      	b.n	802255c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8022666:	78aa      	ldrb	r2, [r5, #2]
 8022668:	4f0e      	ldr	r7, [pc, #56]	@ (80226a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 802266a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 802266e:	786a      	ldrb	r2, [r5, #1]
 8022670:	00d2      	lsls	r2, r2, #3
 8022672:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022676:	ea4a 0202 	orr.w	r2, sl, r2
 802267a:	f895 a000 	ldrb.w	sl, [r5]
 802267e:	3901      	subs	r1, #1
 8022680:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8022684:	f82e 2b02 	strh.w	r2, [lr], #2
 8022688:	b289      	uxth	r1, r1
 802268a:	e7d7      	b.n	802263c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 802268c:	4b03      	ldr	r3, [pc, #12]	@ (802269c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 802268e:	6818      	ldr	r0, [r3, #0]
 8022690:	6803      	ldr	r3, [r0, #0]
 8022692:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022694:	4798      	blx	r3
 8022696:	b013      	add	sp, #76	@ 0x4c
 8022698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802269c:	20013884 	.word	0x20013884
 80226a0:	2001387e 	.word	0x2001387e
 80226a4:	fffff800 	.word	0xfffff800

080226a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80226a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226ac:	b09d      	sub	sp, #116	@ 0x74
 80226ae:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 80226b2:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 80226b6:	920e      	str	r2, [sp, #56]	@ 0x38
 80226b8:	461c      	mov	r4, r3
 80226ba:	4683      	mov	fp, r0
 80226bc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80226be:	2a00      	cmp	r2, #0
 80226c0:	f000 81e0 	beq.w	8022a84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 80226c4:	6820      	ldr	r0, [r4, #0]
 80226c6:	6861      	ldr	r1, [r4, #4]
 80226c8:	aa18      	add	r2, sp, #96	@ 0x60
 80226ca:	c203      	stmia	r2!, {r0, r1}
 80226cc:	6818      	ldr	r0, [r3, #0]
 80226ce:	6859      	ldr	r1, [r3, #4]
 80226d0:	aa1a      	add	r2, sp, #104	@ 0x68
 80226d2:	c203      	stmia	r2!, {r0, r1}
 80226d4:	a818      	add	r0, sp, #96	@ 0x60
 80226d6:	f7f8 f949 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80226da:	4621      	mov	r1, r4
 80226dc:	a81a      	add	r0, sp, #104	@ 0x68
 80226de:	f7f8 f989 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80226e2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 80226e6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 80226ea:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80226ee:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80226f2:	bfd7      	itett	le
 80226f4:	b29a      	uxthle	r2, r3
 80226f6:	2201      	movgt	r2, #1
 80226f8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80226fc:	fb91 f2f2 	sdivle	r2, r1, r2
 8022700:	9202      	str	r2, [sp, #8]
 8022702:	9802      	ldr	r0, [sp, #8]
 8022704:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8022708:	fb92 f0f0 	sdiv	r0, r2, r0
 802270c:	b280      	uxth	r0, r0
 802270e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8022710:	9902      	ldr	r1, [sp, #8]
 8022712:	9802      	ldr	r0, [sp, #8]
 8022714:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022716:	440c      	add	r4, r1
 8022718:	fb05 2510 	mls	r5, r5, r0, r2
 802271c:	fb15 f503 	smulbb	r5, r5, r3
 8022720:	3c01      	subs	r4, #1
 8022722:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8022726:	fb94 f4f1 	sdiv	r4, r4, r1
 802272a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 802272e:	440d      	add	r5, r1
 8022730:	4419      	add	r1, r3
 8022732:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8022736:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 802273a:	441a      	add	r2, r3
 802273c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8022740:	9306      	str	r3, [sp, #24]
 8022742:	4bb3      	ldr	r3, [pc, #716]	@ (8022a10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8022744:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8022748:	6818      	ldr	r0, [r3, #0]
 802274a:	6803      	ldr	r3, [r0, #0]
 802274c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802274e:	4798      	blx	r3
 8022750:	4bb0      	ldr	r3, [pc, #704]	@ (8022a14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8022752:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8022756:	881a      	ldrh	r2, [r3, #0]
 8022758:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 802275c:	9316      	str	r3, [sp, #88]	@ 0x58
 802275e:	fb02 7101 	mla	r1, r2, r1, r7
 8022762:	3401      	adds	r4, #1
 8022764:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8022768:	b2a4      	uxth	r4, r4
 802276a:	4356      	muls	r6, r2
 802276c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8022770:	00a4      	lsls	r4, r4, #2
 8022772:	920a      	str	r2, [sp, #40]	@ 0x28
 8022774:	1d22      	adds	r2, r4, #4
 8022776:	b2ad      	uxth	r5, r5
 8022778:	9213      	str	r2, [sp, #76]	@ 0x4c
 802277a:	4ba7      	ldr	r3, [pc, #668]	@ (8022a18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 802277c:	9a06      	ldr	r2, [sp, #24]
 802277e:	2d00      	cmp	r5, #0
 8022780:	bf0c      	ite	eq
 8022782:	4611      	moveq	r1, r2
 8022784:	2100      	movne	r1, #0
 8022786:	2200      	movs	r2, #0
 8022788:	eba3 030b 	sub.w	r3, r3, fp
 802278c:	b289      	uxth	r1, r1
 802278e:	920d      	str	r2, [sp, #52]	@ 0x34
 8022790:	9317      	str	r3, [sp, #92]	@ 0x5c
 8022792:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022794:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022796:	fa12 f383 	uxtah	r3, r2, r3
 802279a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802279c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80227a0:	3304      	adds	r3, #4
 80227a2:	9308      	str	r3, [sp, #32]
 80227a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80227a6:	4543      	cmp	r3, r8
 80227a8:	f240 8167 	bls.w	8022a7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80227ac:	9a02      	ldr	r2, [sp, #8]
 80227ae:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80227b2:	fbb5 f3f3 	udiv	r3, r5, r3
 80227b6:	1ad3      	subs	r3, r2, r3
 80227b8:	b29b      	uxth	r3, r3
 80227ba:	9314      	str	r3, [sp, #80]	@ 0x50
 80227bc:	9b08      	ldr	r3, [sp, #32]
 80227be:	9808      	ldr	r0, [sp, #32]
 80227c0:	785a      	ldrb	r2, [r3, #1]
 80227c2:	789b      	ldrb	r3, [r3, #2]
 80227c4:	7800      	ldrb	r0, [r0, #0]
 80227c6:	9010      	str	r0, [sp, #64]	@ 0x40
 80227c8:	021b      	lsls	r3, r3, #8
 80227ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80227ce:	9a08      	ldr	r2, [sp, #32]
 80227d0:	78d2      	ldrb	r2, [r2, #3]
 80227d2:	4313      	orrs	r3, r2
 80227d4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80227d6:	3001      	adds	r0, #1
 80227d8:	441a      	add	r2, r3
 80227da:	9007      	str	r0, [sp, #28]
 80227dc:	1c50      	adds	r0, r2, #1
 80227de:	9005      	str	r0, [sp, #20]
 80227e0:	7852      	ldrb	r2, [r2, #1]
 80227e2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80227e4:	0212      	lsls	r2, r2, #8
 80227e6:	5cc3      	ldrb	r3, [r0, r3]
 80227e8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80227ec:	431a      	orrs	r2, r3
 80227ee:	b293      	uxth	r3, r2
 80227f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80227f2:	2300      	movs	r3, #0
 80227f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80227f6:	2301      	movs	r3, #1
 80227f8:	9301      	str	r3, [sp, #4]
 80227fa:	9304      	str	r3, [sp, #16]
 80227fc:	2300      	movs	r3, #0
 80227fe:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8022802:	9303      	str	r3, [sp, #12]
 8022804:	f04f 0e01 	mov.w	lr, #1
 8022808:	2d00      	cmp	r5, #0
 802280a:	d07c      	beq.n	8022906 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 802280c:	45ae      	cmp	lr, r5
 802280e:	d26b      	bcs.n	80228e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8022810:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022812:	eba5 050e 	sub.w	r5, r5, lr
 8022816:	4543      	cmp	r3, r8
 8022818:	b2ad      	uxth	r5, r5
 802281a:	460c      	mov	r4, r1
 802281c:	d802      	bhi.n	8022824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 802281e:	e070      	b.n	8022902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8022820:	2b00      	cmp	r3, #0
 8022822:	d15c      	bne.n	80228de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8022824:	9b05      	ldr	r3, [sp, #20]
 8022826:	9a04      	ldr	r2, [sp, #16]
 8022828:	785b      	ldrb	r3, [r3, #1]
 802282a:	9904      	ldr	r1, [sp, #16]
 802282c:	f1c2 0207 	rsb	r2, r2, #7
 8022830:	4093      	lsls	r3, r2
 8022832:	005b      	lsls	r3, r3, #1
 8022834:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8022838:	9b05      	ldr	r3, [sp, #20]
 802283a:	781b      	ldrb	r3, [r3, #0]
 802283c:	410b      	asrs	r3, r1
 802283e:	3101      	adds	r1, #1
 8022840:	b2c9      	uxtb	r1, r1
 8022842:	2908      	cmp	r1, #8
 8022844:	9104      	str	r1, [sp, #16]
 8022846:	9905      	ldr	r1, [sp, #20]
 8022848:	bf0a      	itet	eq
 802284a:	3102      	addeq	r1, #2
 802284c:	3101      	addne	r1, #1
 802284e:	9105      	streq	r1, [sp, #20]
 8022850:	b2db      	uxtb	r3, r3
 8022852:	bf0a      	itet	eq
 8022854:	2100      	moveq	r1, #0
 8022856:	9105      	strne	r1, [sp, #20]
 8022858:	9104      	streq	r1, [sp, #16]
 802285a:	4313      	orrs	r3, r2
 802285c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 802285e:	b29a      	uxth	r2, r3
 8022860:	4291      	cmp	r1, r2
 8022862:	d30a      	bcc.n	802287a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8022864:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8022868:	2301      	movs	r3, #1
 802286a:	9907      	ldr	r1, [sp, #28]
 802286c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8022870:	d30f      	bcc.n	8022892 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8022872:	2100      	movs	r1, #0
 8022874:	9301      	str	r3, [sp, #4]
 8022876:	9103      	str	r1, [sp, #12]
 8022878:	e032      	b.n	80228e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 802287a:	9b07      	ldr	r3, [sp, #28]
 802287c:	429a      	cmp	r2, r3
 802287e:	d318      	bcc.n	80228b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8022880:	9b01      	ldr	r3, [sp, #4]
 8022882:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8022886:	445b      	add	r3, fp
 8022888:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 802288c:	9b01      	ldr	r3, [sp, #4]
 802288e:	3301      	adds	r3, #1
 8022890:	b29b      	uxth	r3, r3
 8022892:	9907      	ldr	r1, [sp, #28]
 8022894:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8022898:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 802289c:	7108      	strb	r0, [r1, #4]
 802289e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80228a0:	80c8      	strh	r0, [r1, #6]
 80228a2:	9801      	ldr	r0, [sp, #4]
 80228a4:	3001      	adds	r0, #1
 80228a6:	7148      	strb	r0, [r1, #5]
 80228a8:	9907      	ldr	r1, [sp, #28]
 80228aa:	3101      	adds	r1, #1
 80228ac:	b289      	uxth	r1, r1
 80228ae:	9107      	str	r1, [sp, #28]
 80228b0:	e7df      	b.n	8022872 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80228b2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80228b6:	4611      	mov	r1, r2
 80228b8:	795b      	ldrb	r3, [r3, #5]
 80228ba:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80228be:	4458      	add	r0, fp
 80228c0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80228c2:	4406      	add	r6, r0
 80228c4:	2e00      	cmp	r6, #0
 80228c6:	dd06      	ble.n	80228d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80228c8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80228cc:	790e      	ldrb	r6, [r1, #4]
 80228ce:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80228d2:	88c9      	ldrh	r1, [r1, #6]
 80228d4:	e7f4      	b.n	80228c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 80228d6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 80228da:	b29b      	uxth	r3, r3
 80228dc:	e7c5      	b.n	802286a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 80228de:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80228e0:	920b      	str	r2, [sp, #44]	@ 0x2c
 80228e2:	4621      	mov	r1, r4
 80228e4:	469e      	mov	lr, r3
 80228e6:	e78f      	b.n	8022808 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 80228e8:	9a03      	ldr	r2, [sp, #12]
 80228ea:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80228ee:	442a      	add	r2, r5
 80228f0:	ebae 0305 	sub.w	r3, lr, r5
 80228f4:	b292      	uxth	r2, r2
 80228f6:	b29b      	uxth	r3, r3
 80228f8:	9203      	str	r2, [sp, #12]
 80228fa:	2500      	movs	r5, #0
 80228fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80228fe:	4542      	cmp	r2, r8
 8022900:	d88e      	bhi.n	8022820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8022902:	4621      	mov	r1, r4
 8022904:	e74e      	b.n	80227a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8022906:	458e      	cmp	lr, r1
 8022908:	bf29      	itett	cs
 802290a:	ebae 0301 	subcs.w	r3, lr, r1
 802290e:	eba1 040e 	subcc.w	r4, r1, lr
 8022912:	b29b      	uxthcs	r3, r3
 8022914:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8022916:	bf2f      	iteee	cs
 8022918:	462c      	movcs	r4, r5
 802291a:	b2a4      	uxthcc	r4, r4
 802291c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8022920:	462b      	movcc	r3, r5
 8022922:	f04f 0900 	mov.w	r9, #0
 8022926:	9a03      	ldr	r2, [sp, #12]
 8022928:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802292a:	444a      	add	r2, r9
 802292c:	4548      	cmp	r0, r9
 802292e:	b292      	uxth	r2, r2
 8022930:	d074      	beq.n	8022a1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8022932:	445a      	add	r2, fp
 8022934:	2004      	movs	r0, #4
 8022936:	4605      	mov	r5, r0
 8022938:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 802293c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802293e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8022942:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8022944:	5880      	ldr	r0, [r0, r2]
 8022946:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 802294a:	d014      	beq.n	8022976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 802294c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8022950:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8022954:	d112      	bne.n	802297c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8022956:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8022958:	2aff      	cmp	r2, #255	@ 0xff
 802295a:	d10f      	bne.n	802297c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 802295c:	0942      	lsrs	r2, r0, #5
 802295e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8022962:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022966:	f025 0507 	bic.w	r5, r5, #7
 802296a:	4315      	orrs	r5, r2
 802296c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8022970:	4305      	orrs	r5, r0
 8022972:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8022976:	f109 0901 	add.w	r9, r9, #1
 802297a:	e7d4      	b.n	8022926 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 802297c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8022980:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8022984:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8022988:	9215      	str	r2, [sp, #84]	@ 0x54
 802298a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802298c:	fb02 fa0a 	mul.w	sl, r2, sl
 8022990:	f10a 0201 	add.w	r2, sl, #1
 8022994:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8022998:	ea4f 272c 	mov.w	r7, ip, asr #8
 802299c:	1212      	asrs	r2, r2, #8
 802299e:	fa1f fa82 	uxth.w	sl, r2
 80229a2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80229a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80229aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80229ae:	43d2      	mvns	r2, r2
 80229b0:	b2d2      	uxtb	r2, r2
 80229b2:	fb16 f60a 	smulbb	r6, r6, sl
 80229b6:	fa5f fc8c 	uxtb.w	ip, ip
 80229ba:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80229be:	b2c0      	uxtb	r0, r0
 80229c0:	fb07 6702 	mla	r7, r7, r2, r6
 80229c4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80229c8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80229ca:	fb10 f00a 	smulbb	r0, r0, sl
 80229ce:	fb0c 0002 	mla	r0, ip, r2, r0
 80229d2:	b2ed      	uxtb	r5, r5
 80229d4:	b2bf      	uxth	r7, r7
 80229d6:	fb15 f50a 	smulbb	r5, r5, sl
 80229da:	b280      	uxth	r0, r0
 80229dc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80229e0:	fb06 5602 	mla	r6, r6, r2, r5
 80229e4:	1c7a      	adds	r2, r7, #1
 80229e6:	1c45      	adds	r5, r0, #1
 80229e8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80229ec:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80229f0:	b2b6      	uxth	r6, r6
 80229f2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80229f6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80229fa:	432f      	orrs	r7, r5
 80229fc:	1c75      	adds	r5, r6, #1
 80229fe:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8022a02:	096d      	lsrs	r5, r5, #5
 8022a04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022a08:	432f      	orrs	r7, r5
 8022a0a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8022a0e:	e7b2      	b.n	8022976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8022a10:	20013884 	.word	0x20013884
 8022a14:	2001387e 	.word	0x2001387e
 8022a18:	fffff7fb 	.word	0xfffff7fb
 8022a1c:	9203      	str	r2, [sp, #12]
 8022a1e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022a20:	458e      	cmp	lr, r1
 8022a22:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8022a26:	f4ff af68 	bcc.w	80228fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8022a2a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8022a2c:	9906      	ldr	r1, [sp, #24]
 8022a2e:	8812      	ldrh	r2, [r2, #0]
 8022a30:	1a52      	subs	r2, r2, r1
 8022a32:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8022a36:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022a38:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8022a3a:	3201      	adds	r2, #1
 8022a3c:	428a      	cmp	r2, r1
 8022a3e:	9209      	str	r2, [sp, #36]	@ 0x24
 8022a40:	d111      	bne.n	8022a66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8022a42:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8022a46:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8022a4a:	9b06      	ldr	r3, [sp, #24]
 8022a4c:	eba5 0509 	sub.w	r5, r5, r9
 8022a50:	b2ad      	uxth	r5, r5
 8022a52:	2d00      	cmp	r5, #0
 8022a54:	bf08      	it	eq
 8022a56:	4619      	moveq	r1, r3
 8022a58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022a5a:	bf18      	it	ne
 8022a5c:	2100      	movne	r1, #0
 8022a5e:	3301      	adds	r3, #1
 8022a60:	930d      	str	r3, [sp, #52]	@ 0x34
 8022a62:	b289      	uxth	r1, r1
 8022a64:	e695      	b.n	8022792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8022a66:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8022a6a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8022a6e:	1b2d      	subs	r5, r5, r4
 8022a70:	b2ad      	uxth	r5, r5
 8022a72:	2d00      	cmp	r5, #0
 8022a74:	bf18      	it	ne
 8022a76:	2400      	movne	r4, #0
 8022a78:	e740      	b.n	80228fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8022a7a:	4b04      	ldr	r3, [pc, #16]	@ (8022a8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8022a7c:	6818      	ldr	r0, [r3, #0]
 8022a7e:	6803      	ldr	r3, [r0, #0]
 8022a80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022a82:	4798      	blx	r3
 8022a84:	b01d      	add	sp, #116	@ 0x74
 8022a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a8a:	bf00      	nop
 8022a8c:	20013884 	.word	0x20013884

08022a90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8022a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a94:	b09f      	sub	sp, #124	@ 0x7c
 8022a96:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8022a9a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8022a9e:	920a      	str	r2, [sp, #40]	@ 0x28
 8022aa0:	461d      	mov	r5, r3
 8022aa2:	4604      	mov	r4, r0
 8022aa4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022aa6:	2a00      	cmp	r2, #0
 8022aa8:	f000 81fa 	beq.w	8022ea0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8022aac:	6828      	ldr	r0, [r5, #0]
 8022aae:	6869      	ldr	r1, [r5, #4]
 8022ab0:	aa1a      	add	r2, sp, #104	@ 0x68
 8022ab2:	c203      	stmia	r2!, {r0, r1}
 8022ab4:	6818      	ldr	r0, [r3, #0]
 8022ab6:	6859      	ldr	r1, [r3, #4]
 8022ab8:	aa1c      	add	r2, sp, #112	@ 0x70
 8022aba:	c203      	stmia	r2!, {r0, r1}
 8022abc:	a81a      	add	r0, sp, #104	@ 0x68
 8022abe:	f7f7 ff55 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022ac2:	4629      	mov	r1, r5
 8022ac4:	a81c      	add	r0, sp, #112	@ 0x70
 8022ac6:	f7f7 ff95 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022aca:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8022ace:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8022ad2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8022ad6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8022ada:	bfd7      	itett	le
 8022adc:	b29a      	uxthle	r2, r3
 8022ade:	2201      	movgt	r2, #1
 8022ae0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8022ae4:	fb91 f2f2 	sdivle	r2, r1, r2
 8022ae8:	9201      	str	r2, [sp, #4]
 8022aea:	9801      	ldr	r0, [sp, #4]
 8022aec:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8022af0:	fb92 f0f0 	sdiv	r0, r2, r0
 8022af4:	b280      	uxth	r0, r0
 8022af6:	9010      	str	r0, [sp, #64]	@ 0x40
 8022af8:	9901      	ldr	r1, [sp, #4]
 8022afa:	9801      	ldr	r0, [sp, #4]
 8022afc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8022afe:	440e      	add	r6, r1
 8022b00:	fb05 2510 	mls	r5, r5, r0, r2
 8022b04:	fb15 f503 	smulbb	r5, r5, r3
 8022b08:	3e01      	subs	r6, #1
 8022b0a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8022b0e:	fb96 f6f1 	sdiv	r6, r6, r1
 8022b12:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8022b16:	440d      	add	r5, r1
 8022b18:	4419      	add	r1, r3
 8022b1a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8022b1e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8022b22:	441a      	add	r2, r3
 8022b24:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8022b28:	9304      	str	r3, [sp, #16]
 8022b2a:	4b96      	ldr	r3, [pc, #600]	@ (8022d84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8022b2c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8022b30:	6818      	ldr	r0, [r3, #0]
 8022b32:	6803      	ldr	r3, [r0, #0]
 8022b34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022b36:	4798      	blx	r3
 8022b38:	4b93      	ldr	r3, [pc, #588]	@ (8022d88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8022b3a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8022b3e:	881a      	ldrh	r2, [r3, #0]
 8022b40:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8022b44:	9318      	str	r3, [sp, #96]	@ 0x60
 8022b46:	fb02 c101 	mla	r1, r2, r1, ip
 8022b4a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8022b4e:	4357      	muls	r7, r2
 8022b50:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8022b54:	3601      	adds	r6, #1
 8022b56:	920b      	str	r2, [sp, #44]	@ 0x2c
 8022b58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8022b5a:	4b8c      	ldr	r3, [pc, #560]	@ (8022d8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8022b5c:	b2b6      	uxth	r6, r6
 8022b5e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8022b62:	1d32      	adds	r2, r6, #4
 8022b64:	9206      	str	r2, [sp, #24]
 8022b66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022b68:	43d2      	mvns	r2, r2
 8022b6a:	b2d2      	uxtb	r2, r2
 8022b6c:	b2ad      	uxth	r5, r5
 8022b6e:	9215      	str	r2, [sp, #84]	@ 0x54
 8022b70:	9a04      	ldr	r2, [sp, #16]
 8022b72:	2d00      	cmp	r5, #0
 8022b74:	bf0c      	ite	eq
 8022b76:	4611      	moveq	r1, r2
 8022b78:	2100      	movne	r1, #0
 8022b7a:	2200      	movs	r2, #0
 8022b7c:	1b1b      	subs	r3, r3, r4
 8022b7e:	b289      	uxth	r1, r1
 8022b80:	920d      	str	r2, [sp, #52]	@ 0x34
 8022b82:	9319      	str	r3, [sp, #100]	@ 0x64
 8022b84:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022b86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022b88:	fa12 f383 	uxtah	r3, r2, r3
 8022b8c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8022b8e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8022b92:	3304      	adds	r3, #4
 8022b94:	9307      	str	r3, [sp, #28]
 8022b96:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022b98:	455b      	cmp	r3, fp
 8022b9a:	f240 817c 	bls.w	8022e96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8022b9e:	9a01      	ldr	r2, [sp, #4]
 8022ba0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8022ba4:	fbb5 f3f3 	udiv	r3, r5, r3
 8022ba8:	1ad3      	subs	r3, r2, r3
 8022baa:	b29b      	uxth	r3, r3
 8022bac:	9316      	str	r3, [sp, #88]	@ 0x58
 8022bae:	9b07      	ldr	r3, [sp, #28]
 8022bb0:	9807      	ldr	r0, [sp, #28]
 8022bb2:	785a      	ldrb	r2, [r3, #1]
 8022bb4:	789b      	ldrb	r3, [r3, #2]
 8022bb6:	7800      	ldrb	r0, [r0, #0]
 8022bb8:	9011      	str	r0, [sp, #68]	@ 0x44
 8022bba:	021b      	lsls	r3, r3, #8
 8022bbc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8022bc0:	9a07      	ldr	r2, [sp, #28]
 8022bc2:	78d2      	ldrb	r2, [r2, #3]
 8022bc4:	4313      	orrs	r3, r2
 8022bc6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8022bc8:	3001      	adds	r0, #1
 8022bca:	441a      	add	r2, r3
 8022bcc:	9005      	str	r0, [sp, #20]
 8022bce:	1c50      	adds	r0, r2, #1
 8022bd0:	9003      	str	r0, [sp, #12]
 8022bd2:	7852      	ldrb	r2, [r2, #1]
 8022bd4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8022bd6:	0212      	lsls	r2, r2, #8
 8022bd8:	5cc3      	ldrb	r3, [r0, r3]
 8022bda:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8022bde:	431a      	orrs	r2, r3
 8022be0:	b293      	uxth	r3, r2
 8022be2:	930c      	str	r3, [sp, #48]	@ 0x30
 8022be4:	2300      	movs	r3, #0
 8022be6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8022bea:	9308      	str	r3, [sp, #32]
 8022bec:	461a      	mov	r2, r3
 8022bee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022bf2:	930e      	str	r3, [sp, #56]	@ 0x38
 8022bf4:	f04f 0801 	mov.w	r8, #1
 8022bf8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8022bfc:	f8cd 8008 	str.w	r8, [sp, #8]
 8022c00:	46c4      	mov	ip, r8
 8022c02:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022c04:	2d00      	cmp	r5, #0
 8022c06:	d07c      	beq.n	8022d02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8022c08:	45ac      	cmp	ip, r5
 8022c0a:	d26c      	bcs.n	8022ce6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8022c0c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022c0e:	eba5 050c 	sub.w	r5, r5, ip
 8022c12:	455b      	cmp	r3, fp
 8022c14:	b2ad      	uxth	r5, r5
 8022c16:	4608      	mov	r0, r1
 8022c18:	d802      	bhi.n	8022c20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8022c1a:	e070      	b.n	8022cfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8022c1c:	2b00      	cmp	r3, #0
 8022c1e:	d15c      	bne.n	8022cda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8022c20:	9b03      	ldr	r3, [sp, #12]
 8022c22:	9a02      	ldr	r2, [sp, #8]
 8022c24:	785b      	ldrb	r3, [r3, #1]
 8022c26:	9902      	ldr	r1, [sp, #8]
 8022c28:	f1c2 0207 	rsb	r2, r2, #7
 8022c2c:	4093      	lsls	r3, r2
 8022c2e:	005b      	lsls	r3, r3, #1
 8022c30:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8022c34:	9b03      	ldr	r3, [sp, #12]
 8022c36:	781b      	ldrb	r3, [r3, #0]
 8022c38:	410b      	asrs	r3, r1
 8022c3a:	3101      	adds	r1, #1
 8022c3c:	b2c9      	uxtb	r1, r1
 8022c3e:	2908      	cmp	r1, #8
 8022c40:	9102      	str	r1, [sp, #8]
 8022c42:	9903      	ldr	r1, [sp, #12]
 8022c44:	bf0a      	itet	eq
 8022c46:	3102      	addeq	r1, #2
 8022c48:	3101      	addne	r1, #1
 8022c4a:	9103      	streq	r1, [sp, #12]
 8022c4c:	b2db      	uxtb	r3, r3
 8022c4e:	bf0a      	itet	eq
 8022c50:	2100      	moveq	r1, #0
 8022c52:	9103      	strne	r1, [sp, #12]
 8022c54:	9102      	streq	r1, [sp, #8]
 8022c56:	4313      	orrs	r3, r2
 8022c58:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8022c5a:	b29a      	uxth	r2, r3
 8022c5c:	4291      	cmp	r1, r2
 8022c5e:	d30a      	bcc.n	8022c76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8022c60:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8022c64:	2301      	movs	r3, #1
 8022c66:	9905      	ldr	r1, [sp, #20]
 8022c68:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8022c6c:	d30f      	bcc.n	8022c8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8022c6e:	2100      	movs	r1, #0
 8022c70:	4698      	mov	r8, r3
 8022c72:	9100      	str	r1, [sp, #0]
 8022c74:	e032      	b.n	8022cdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8022c76:	9b05      	ldr	r3, [sp, #20]
 8022c78:	429a      	cmp	r2, r3
 8022c7a:	d318      	bcc.n	8022cae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8022c7c:	eb04 0308 	add.w	r3, r4, r8
 8022c80:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8022c84:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8022c88:	f108 0301 	add.w	r3, r8, #1
 8022c8c:	b29b      	uxth	r3, r3
 8022c8e:	9905      	ldr	r1, [sp, #20]
 8022c90:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8022c94:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8022c98:	710e      	strb	r6, [r1, #4]
 8022c9a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8022c9c:	80ce      	strh	r6, [r1, #6]
 8022c9e:	f108 0601 	add.w	r6, r8, #1
 8022ca2:	714e      	strb	r6, [r1, #5]
 8022ca4:	9905      	ldr	r1, [sp, #20]
 8022ca6:	3101      	adds	r1, #1
 8022ca8:	b289      	uxth	r1, r1
 8022caa:	9105      	str	r1, [sp, #20]
 8022cac:	e7df      	b.n	8022c6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8022cae:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8022cb2:	4611      	mov	r1, r2
 8022cb4:	795b      	ldrb	r3, [r3, #5]
 8022cb6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8022cba:	4426      	add	r6, r4
 8022cbc:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8022cbe:	4437      	add	r7, r6
 8022cc0:	2f00      	cmp	r7, #0
 8022cc2:	dd06      	ble.n	8022cd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8022cc4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8022cc8:	790f      	ldrb	r7, [r1, #4]
 8022cca:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8022cce:	88c9      	ldrh	r1, [r1, #6]
 8022cd0:	e7f4      	b.n	8022cbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8022cd2:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8022cd6:	b29b      	uxth	r3, r3
 8022cd8:	e7c5      	b.n	8022c66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8022cda:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022cdc:	920c      	str	r2, [sp, #48]	@ 0x30
 8022cde:	4601      	mov	r1, r0
 8022ce0:	9a00      	ldr	r2, [sp, #0]
 8022ce2:	469c      	mov	ip, r3
 8022ce4:	e78e      	b.n	8022c04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8022ce6:	1957      	adds	r7, r2, r5
 8022ce8:	ebac 0305 	sub.w	r3, ip, r5
 8022cec:	b2ba      	uxth	r2, r7
 8022cee:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8022cf2:	9200      	str	r2, [sp, #0]
 8022cf4:	b29b      	uxth	r3, r3
 8022cf6:	2500      	movs	r5, #0
 8022cf8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022cfa:	455a      	cmp	r2, fp
 8022cfc:	d88e      	bhi.n	8022c1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8022cfe:	4601      	mov	r1, r0
 8022d00:	e749      	b.n	8022b96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8022d02:	458c      	cmp	ip, r1
 8022d04:	bf2c      	ite	cs
 8022d06:	4628      	movcs	r0, r5
 8022d08:	462b      	movcc	r3, r5
 8022d0a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8022d0c:	bf27      	ittee	cs
 8022d0e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8022d10:	ebac 0301 	subcs.w	r3, ip, r1
 8022d14:	eba1 000c 	subcc.w	r0, r1, ip
 8022d18:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8022d1c:	bf2c      	ite	cs
 8022d1e:	b29b      	uxthcs	r3, r3
 8022d20:	b280      	uxthcc	r0, r0
 8022d22:	2dff      	cmp	r5, #255	@ 0xff
 8022d24:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8022d26:	eb02 0705 	add.w	r7, r2, r5
 8022d2a:	b2bd      	uxth	r5, r7
 8022d2c:	9500      	str	r5, [sp, #0]
 8022d2e:	d12f      	bne.n	8022d90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8022d30:	465e      	mov	r6, fp
 8022d32:	9d00      	ldr	r5, [sp, #0]
 8022d34:	42aa      	cmp	r2, r5
 8022d36:	f040 8084 	bne.w	8022e42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8022d3a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022d3c:	458c      	cmp	ip, r1
 8022d3e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8022d42:	d3d8      	bcc.n	8022cf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8022d44:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8022d46:	9904      	ldr	r1, [sp, #16]
 8022d48:	8812      	ldrh	r2, [r2, #0]
 8022d4a:	1a52      	subs	r2, r2, r1
 8022d4c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8022d50:	9a08      	ldr	r2, [sp, #32]
 8022d52:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8022d54:	3201      	adds	r2, #1
 8022d56:	428a      	cmp	r2, r1
 8022d58:	9208      	str	r2, [sp, #32]
 8022d5a:	f040 8092 	bne.w	8022e82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8022d5e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8022d62:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8022d66:	9b04      	ldr	r3, [sp, #16]
 8022d68:	eba5 050c 	sub.w	r5, r5, ip
 8022d6c:	b2ad      	uxth	r5, r5
 8022d6e:	2d00      	cmp	r5, #0
 8022d70:	bf08      	it	eq
 8022d72:	4619      	moveq	r1, r3
 8022d74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022d76:	bf18      	it	ne
 8022d78:	2100      	movne	r1, #0
 8022d7a:	3301      	adds	r3, #1
 8022d7c:	930d      	str	r3, [sp, #52]	@ 0x34
 8022d7e:	b289      	uxth	r1, r1
 8022d80:	e700      	b.n	8022b84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8022d82:	bf00      	nop
 8022d84:	20013884 	.word	0x20013884
 8022d88:	2001387e 	.word	0x2001387e
 8022d8c:	fffff7fb 	.word	0xfffff7fb
 8022d90:	46d9      	mov	r9, fp
 8022d92:	9d00      	ldr	r5, [sp, #0]
 8022d94:	42aa      	cmp	r2, r5
 8022d96:	d0d0      	beq.n	8022d3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8022d98:	1c55      	adds	r5, r2, #1
 8022d9a:	4422      	add	r2, r4
 8022d9c:	9517      	str	r5, [sp, #92]	@ 0x5c
 8022d9e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8022da2:	9a06      	ldr	r2, [sp, #24]
 8022da4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8022da8:	4472      	add	r2, lr
 8022daa:	9212      	str	r2, [sp, #72]	@ 0x48
 8022dac:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8022dae:	f8b9 2000 	ldrh.w	r2, [r9]
 8022db2:	f897 a002 	ldrb.w	sl, [r7, #2]
 8022db6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8022db8:	1216      	asrs	r6, r2, #8
 8022dba:	fb1a fa07 	smulbb	sl, sl, r7
 8022dbe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8022dc2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8022dc4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8022dc8:	fb06 a607 	mla	r6, r6, r7, sl
 8022dcc:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8022dce:	f897 a001 	ldrb.w	sl, [r7, #1]
 8022dd2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8022dd4:	10d5      	asrs	r5, r2, #3
 8022dd6:	fb1a fa07 	smulbb	sl, sl, r7
 8022dda:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022dde:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8022de0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8022de4:	fb05 a507 	mla	r5, r5, r7, sl
 8022de8:	9f06      	ldr	r7, [sp, #24]
 8022dea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8022dee:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8022df0:	00d2      	lsls	r2, r2, #3
 8022df2:	fb1e fe07 	smulbb	lr, lr, r7
 8022df6:	b2d2      	uxtb	r2, r2
 8022df8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8022dfa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022dfe:	b2b6      	uxth	r6, r6
 8022e00:	fb02 e207 	mla	r2, r2, r7, lr
 8022e04:	b292      	uxth	r2, r2
 8022e06:	b2ad      	uxth	r5, r5
 8022e08:	f106 0a01 	add.w	sl, r6, #1
 8022e0c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8022e10:	f102 0e01 	add.w	lr, r2, #1
 8022e14:	f105 0a01 	add.w	sl, r5, #1
 8022e18:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8022e1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8022e20:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8022e24:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8022e28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022e2c:	ea4e 0606 	orr.w	r6, lr, r6
 8022e30:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8022e34:	ea46 060a 	orr.w	r6, r6, sl
 8022e38:	f829 6b02 	strh.w	r6, [r9], #2
 8022e3c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8022e40:	e7a7      	b.n	8022d92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8022e42:	f102 0e01 	add.w	lr, r2, #1
 8022e46:	4422      	add	r2, r4
 8022e48:	9f06      	ldr	r7, [sp, #24]
 8022e4a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8022e4e:	9a06      	ldr	r2, [sp, #24]
 8022e50:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8022e54:	eb02 0a05 	add.w	sl, r2, r5
 8022e58:	4a13      	ldr	r2, [pc, #76]	@ (8022ea8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8022e5a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8022e5e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8022e62:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022e66:	00d2      	lsls	r2, r2, #3
 8022e68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022e6c:	ea49 0202 	orr.w	r2, r9, r2
 8022e70:	f817 9005 	ldrb.w	r9, [r7, r5]
 8022e74:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8022e78:	f826 2b02 	strh.w	r2, [r6], #2
 8022e7c:	fa1f f28e 	uxth.w	r2, lr
 8022e80:	e757      	b.n	8022d32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8022e82:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8022e86:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8022e8a:	1a2d      	subs	r5, r5, r0
 8022e8c:	b2ad      	uxth	r5, r5
 8022e8e:	2d00      	cmp	r5, #0
 8022e90:	bf18      	it	ne
 8022e92:	2000      	movne	r0, #0
 8022e94:	e730      	b.n	8022cf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8022e96:	4b05      	ldr	r3, [pc, #20]	@ (8022eac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8022e98:	6818      	ldr	r0, [r3, #0]
 8022e9a:	6803      	ldr	r3, [r0, #0]
 8022e9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022e9e:	4798      	blx	r3
 8022ea0:	b01f      	add	sp, #124	@ 0x7c
 8022ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ea6:	bf00      	nop
 8022ea8:	fffff800 	.word	0xfffff800
 8022eac:	20013884 	.word	0x20013884

08022eb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8022eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022eb4:	b091      	sub	sp, #68	@ 0x44
 8022eb6:	469b      	mov	fp, r3
 8022eb8:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8022ebc:	4616      	mov	r6, r2
 8022ebe:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8022ec2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8022ec6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8022eca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8022ece:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8022ed2:	4604      	mov	r4, r0
 8022ed4:	460d      	mov	r5, r1
 8022ed6:	4640      	mov	r0, r8
 8022ed8:	4659      	mov	r1, fp
 8022eda:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8022ede:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8022ee2:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8022ee6:	f7f1 fef7 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8022eea:	4631      	mov	r1, r6
 8022eec:	4640      	mov	r0, r8
 8022eee:	f7f1 fef3 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8022ef2:	4b74      	ldr	r3, [pc, #464]	@ (80230c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8022ef4:	8818      	ldrh	r0, [r3, #0]
 8022ef6:	4b74      	ldr	r3, [pc, #464]	@ (80230c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8022ef8:	8819      	ldrh	r1, [r3, #0]
 8022efa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8022efe:	2b00      	cmp	r3, #0
 8022f00:	b202      	sxth	r2, r0
 8022f02:	b20e      	sxth	r6, r1
 8022f04:	da07      	bge.n	8022f16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8022f06:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8022f0a:	4463      	add	r3, ip
 8022f0c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8022f10:	2300      	movs	r3, #0
 8022f12:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8022f16:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8022f1a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8022f1e:	1ad2      	subs	r2, r2, r3
 8022f20:	4594      	cmp	ip, r2
 8022f22:	bfc4      	itt	gt
 8022f24:	1ac2      	subgt	r2, r0, r3
 8022f26:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8022f2a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8022f2e:	2a00      	cmp	r2, #0
 8022f30:	da07      	bge.n	8022f42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8022f32:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8022f36:	4462      	add	r2, ip
 8022f38:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8022f3c:	2200      	movs	r2, #0
 8022f3e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8022f42:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8022f46:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8022f4a:	eba6 060a 	sub.w	r6, r6, sl
 8022f4e:	42b2      	cmp	r2, r6
 8022f50:	bfc4      	itt	gt
 8022f52:	eba1 020a 	subgt.w	r2, r1, sl
 8022f56:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8022f5a:	4a5c      	ldr	r2, [pc, #368]	@ (80230cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8022f5c:	7812      	ldrb	r2, [r2, #0]
 8022f5e:	b9a2      	cbnz	r2, 8022f8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8022f60:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8022f64:	4286      	cmp	r6, r0
 8022f66:	4640      	mov	r0, r8
 8022f68:	9303      	str	r3, [sp, #12]
 8022f6a:	bf14      	ite	ne
 8022f6c:	2600      	movne	r6, #0
 8022f6e:	2601      	moveq	r6, #1
 8022f70:	f7f1 fef5 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8022f74:	9b03      	ldr	r3, [sp, #12]
 8022f76:	b160      	cbz	r0, 8022f92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8022f78:	2300      	movs	r3, #0
 8022f7a:	8023      	strh	r3, [r4, #0]
 8022f7c:	8063      	strh	r3, [r4, #2]
 8022f7e:	80a3      	strh	r3, [r4, #4]
 8022f80:	4620      	mov	r0, r4
 8022f82:	80e3      	strh	r3, [r4, #6]
 8022f84:	b011      	add	sp, #68	@ 0x44
 8022f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f8a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8022f8e:	428e      	cmp	r6, r1
 8022f90:	e7e9      	b.n	8022f66 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8022f92:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8022f96:	9205      	str	r2, [sp, #20]
 8022f98:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8022f9c:	9206      	str	r2, [sp, #24]
 8022f9e:	f8bb 2000 	ldrh.w	r2, [fp]
 8022fa2:	900e      	str	r0, [sp, #56]	@ 0x38
 8022fa4:	1a9b      	subs	r3, r3, r2
 8022fa6:	b21b      	sxth	r3, r3
 8022fa8:	9303      	str	r3, [sp, #12]
 8022faa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022fae:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8022fb2:	ebaa 0a03 	sub.w	sl, sl, r3
 8022fb6:	fa0f f38a 	sxth.w	r3, sl
 8022fba:	9304      	str	r3, [sp, #16]
 8022fbc:	9b03      	ldr	r3, [sp, #12]
 8022fbe:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8022fc2:	9b04      	ldr	r3, [sp, #16]
 8022fc4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8022fc8:	9b05      	ldr	r3, [sp, #20]
 8022fca:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8022fce:	a90e      	add	r1, sp, #56	@ 0x38
 8022fd0:	9b06      	ldr	r3, [sp, #24]
 8022fd2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8022fd6:	a80c      	add	r0, sp, #48	@ 0x30
 8022fd8:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8022fdc:	f7f7 fd0a 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022fe0:	4640      	mov	r0, r8
 8022fe2:	f7f7 fcc3 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022fe6:	a80e      	add	r0, sp, #56	@ 0x38
 8022fe8:	f7f7 fcc0 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022fec:	4b38      	ldr	r3, [pc, #224]	@ (80230d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8022fee:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8022ff2:	881b      	ldrh	r3, [r3, #0]
 8022ff4:	9307      	str	r3, [sp, #28]
 8022ff6:	682b      	ldr	r3, [r5, #0]
 8022ff8:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 80230d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8022ffc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022ffe:	4628      	mov	r0, r5
 8023000:	4798      	blx	r3
 8023002:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8023006:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 802300a:	4681      	mov	r9, r0
 802300c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8023010:	f8db 0000 	ldr.w	r0, [fp]
 8023014:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8023016:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802301a:	6803      	ldr	r3, [r0, #0]
 802301c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 802301e:	4798      	blx	r3
 8023020:	4607      	mov	r7, r0
 8023022:	f8db 0000 	ldr.w	r0, [fp]
 8023026:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 802302a:	6803      	ldr	r3, [r0, #0]
 802302c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8023030:	9109      	str	r1, [sp, #36]	@ 0x24
 8023032:	9208      	str	r2, [sp, #32]
 8023034:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023036:	4798      	blx	r3
 8023038:	f010 0f01 	tst.w	r0, #1
 802303c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023040:	d012      	beq.n	8023068 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8023042:	f8db 0000 	ldr.w	r0, [fp]
 8023046:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 802304a:	6803      	ldr	r3, [r0, #0]
 802304c:	9200      	str	r2, [sp, #0]
 802304e:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8023050:	e898 0006 	ldmia.w	r8, {r1, r2}
 8023054:	462b      	mov	r3, r5
 8023056:	47b0      	blx	r6
 8023058:	9b03      	ldr	r3, [sp, #12]
 802305a:	8023      	strh	r3, [r4, #0]
 802305c:	9b04      	ldr	r3, [sp, #16]
 802305e:	8063      	strh	r3, [r4, #2]
 8023060:	9b05      	ldr	r3, [sp, #20]
 8023062:	80a3      	strh	r3, [r4, #4]
 8023064:	9b06      	ldr	r3, [sp, #24]
 8023066:	e78b      	b.n	8022f80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8023068:	fb09 f202 	mul.w	r2, r9, r2
 802306c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8023070:	440f      	add	r7, r1
 8023072:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8023076:	b166      	cbz	r6, 8023092 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8023078:	9a07      	ldr	r2, [sp, #28]
 802307a:	4592      	cmp	sl, r2
 802307c:	d109      	bne.n	8023092 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802307e:	f8db 0000 	ldr.w	r0, [fp]
 8023082:	6802      	ldr	r2, [r0, #0]
 8023084:	fb09 f303 	mul.w	r3, r9, r3
 8023088:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 802308a:	4629      	mov	r1, r5
 802308c:	463a      	mov	r2, r7
 802308e:	47b0      	blx	r6
 8023090:	e7e2      	b.n	8023058 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8023092:	fb0a f303 	mul.w	r3, sl, r3
 8023096:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 80230d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 802309a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 802309e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80230a2:	4545      	cmp	r5, r8
 80230a4:	d2d8      	bcs.n	8023058 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80230a6:	f8db 0000 	ldr.w	r0, [fp]
 80230aa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80230ae:	6802      	ldr	r2, [r0, #0]
 80230b0:	4629      	mov	r1, r5
 80230b2:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 80230b6:	005b      	lsls	r3, r3, #1
 80230b8:	463a      	mov	r2, r7
 80230ba:	47d0      	blx	sl
 80230bc:	444f      	add	r7, r9
 80230be:	4435      	add	r5, r6
 80230c0:	e7ef      	b.n	80230a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80230c2:	bf00      	nop
 80230c4:	20013878 	.word	0x20013878
 80230c8:	2001387a 	.word	0x2001387a
 80230cc:	2001387c 	.word	0x2001387c
 80230d0:	2001387e 	.word	0x2001387e
 80230d4:	20013884 	.word	0x20013884

080230d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80230d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80230da:	4606      	mov	r6, r0
 80230dc:	b087      	sub	sp, #28
 80230de:	460c      	mov	r4, r1
 80230e0:	4617      	mov	r7, r2
 80230e2:	461d      	mov	r5, r3
 80230e4:	b333      	cbz	r3, 8023134 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80230e6:	4608      	mov	r0, r1
 80230e8:	f7f1 fe39 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 80230ec:	bb10      	cbnz	r0, 8023134 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80230ee:	6820      	ldr	r0, [r4, #0]
 80230f0:	6861      	ldr	r1, [r4, #4]
 80230f2:	4c1c      	ldr	r4, [pc, #112]	@ (8023164 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80230f4:	ab04      	add	r3, sp, #16
 80230f6:	c303      	stmia	r3!, {r0, r1}
 80230f8:	a804      	add	r0, sp, #16
 80230fa:	f7f7 fc37 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80230fe:	6820      	ldr	r0, [r4, #0]
 8023100:	6803      	ldr	r3, [r0, #0]
 8023102:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023104:	4798      	blx	r3
 8023106:	2dff      	cmp	r5, #255	@ 0xff
 8023108:	d016      	beq.n	8023138 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 802310a:	f010 0f08 	tst.w	r0, #8
 802310e:	6820      	ldr	r0, [r4, #0]
 8023110:	d015      	beq.n	802313e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8023112:	2400      	movs	r4, #0
 8023114:	6801      	ldr	r1, [r0, #0]
 8023116:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 802311a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 802311e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8023122:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8023126:	9401      	str	r4, [sp, #4]
 8023128:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 802312c:	9400      	str	r4, [sp, #0]
 802312e:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8023130:	4639      	mov	r1, r7
 8023132:	47a0      	blx	r4
 8023134:	b007      	add	sp, #28
 8023136:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023138:	f010 0f02 	tst.w	r0, #2
 802313c:	e7e7      	b.n	802310e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 802313e:	6803      	ldr	r3, [r0, #0]
 8023140:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023142:	4798      	blx	r3
 8023144:	4b08      	ldr	r3, [pc, #32]	@ (8023168 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8023146:	881a      	ldrh	r2, [r3, #0]
 8023148:	6833      	ldr	r3, [r6, #0]
 802314a:	e9cd 7500 	strd	r7, r5, [sp]
 802314e:	4601      	mov	r1, r0
 8023150:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8023152:	4630      	mov	r0, r6
 8023154:	ab04      	add	r3, sp, #16
 8023156:	47a8      	blx	r5
 8023158:	6820      	ldr	r0, [r4, #0]
 802315a:	6803      	ldr	r3, [r0, #0]
 802315c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802315e:	4798      	blx	r3
 8023160:	e7e8      	b.n	8023134 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8023162:	bf00      	nop
 8023164:	20013884 	.word	0x20013884
 8023168:	2001387e 	.word	0x2001387e

0802316c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 802316c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023170:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8023174:	9e08      	ldr	r6, [sp, #32]
 8023176:	4688      	mov	r8, r1
 8023178:	4614      	mov	r4, r2
 802317a:	461d      	mov	r5, r3
 802317c:	2f00      	cmp	r7, #0
 802317e:	f000 80a9 	beq.w	80232d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8023182:	4618      	mov	r0, r3
 8023184:	f7f1 fdeb 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8023188:	2800      	cmp	r0, #0
 802318a:	f040 80a3 	bne.w	80232d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802318e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8023192:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8023196:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 802319a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 802319e:	fb04 1303 	mla	r3, r4, r3, r1
 80231a2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80231a6:	4365      	muls	r5, r4
 80231a8:	2fff      	cmp	r7, #255	@ 0xff
 80231aa:	eba4 0200 	sub.w	r2, r4, r0
 80231ae:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80231b2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80231b6:	d04a      	beq.n	802324e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80231b8:	b2bc      	uxth	r4, r7
 80231ba:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 80231be:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80231c2:	fa5f f788 	uxtb.w	r7, r8
 80231c6:	b2f3      	uxtb	r3, r6
 80231c8:	0040      	lsls	r0, r0, #1
 80231ca:	fb0e fe04 	mul.w	lr, lr, r4
 80231ce:	4367      	muls	r7, r4
 80231d0:	4363      	muls	r3, r4
 80231d2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80231d6:	fa1f fc8c 	uxth.w	ip, ip
 80231da:	42a9      	cmp	r1, r5
 80231dc:	d27a      	bcs.n	80232d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80231de:	eb01 0900 	add.w	r9, r1, r0
 80231e2:	4549      	cmp	r1, r9
 80231e4:	d231      	bcs.n	802324a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80231e6:	880a      	ldrh	r2, [r1, #0]
 80231e8:	1214      	asrs	r4, r2, #8
 80231ea:	10d6      	asrs	r6, r2, #3
 80231ec:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80231f0:	00d2      	lsls	r2, r2, #3
 80231f2:	b2d2      	uxtb	r2, r2
 80231f4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80231f8:	fb14 f40c 	smulbb	r4, r4, ip
 80231fc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023200:	4474      	add	r4, lr
 8023202:	fb12 f20c 	smulbb	r2, r2, ip
 8023206:	b2a4      	uxth	r4, r4
 8023208:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802320c:	441a      	add	r2, r3
 802320e:	b292      	uxth	r2, r2
 8023210:	f104 0a01 	add.w	sl, r4, #1
 8023214:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8023218:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802321c:	fb16 f60c 	smulbb	r6, r6, ip
 8023220:	f102 0a01 	add.w	sl, r2, #1
 8023224:	443e      	add	r6, r7
 8023226:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802322a:	b2b6      	uxth	r6, r6
 802322c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8023230:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023234:	4322      	orrs	r2, r4
 8023236:	1c74      	adds	r4, r6, #1
 8023238:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 802323c:	0976      	lsrs	r6, r6, #5
 802323e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8023242:	4332      	orrs	r2, r6
 8023244:	f821 2b02 	strh.w	r2, [r1], #2
 8023248:	e7cb      	b.n	80231e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 802324a:	4441      	add	r1, r8
 802324c:	e7c5      	b.n	80231da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 802324e:	4f22      	ldr	r7, [pc, #136]	@ (80232d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8023250:	0973      	lsrs	r3, r6, #5
 8023252:	ea08 0707 	and.w	r7, r8, r7
 8023256:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802325a:	433b      	orrs	r3, r7
 802325c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8023260:	4333      	orrs	r3, r6
 8023262:	07e7      	lsls	r7, r4, #31
 8023264:	b29b      	uxth	r3, r3
 8023266:	d50b      	bpl.n	8023280 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8023268:	0040      	lsls	r0, r0, #1
 802326a:	0052      	lsls	r2, r2, #1
 802326c:	42a9      	cmp	r1, r5
 802326e:	d231      	bcs.n	80232d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8023270:	180c      	adds	r4, r1, r0
 8023272:	42a1      	cmp	r1, r4
 8023274:	d202      	bcs.n	802327c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8023276:	f821 3b02 	strh.w	r3, [r1], #2
 802327a:	e7fa      	b.n	8023272 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 802327c:	4411      	add	r1, r2
 802327e:	e7f5      	b.n	802326c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8023280:	078e      	lsls	r6, r1, #30
 8023282:	d008      	beq.n	8023296 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8023284:	0066      	lsls	r6, r4, #1
 8023286:	460a      	mov	r2, r1
 8023288:	42aa      	cmp	r2, r5
 802328a:	d202      	bcs.n	8023292 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 802328c:	8013      	strh	r3, [r2, #0]
 802328e:	4432      	add	r2, r6
 8023290:	e7fa      	b.n	8023288 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8023292:	3102      	adds	r1, #2
 8023294:	3801      	subs	r0, #1
 8023296:	07c2      	lsls	r2, r0, #31
 8023298:	d50b      	bpl.n	80232b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 802329a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 802329e:	3a01      	subs	r2, #1
 80232a0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80232a4:	0066      	lsls	r6, r4, #1
 80232a6:	42aa      	cmp	r2, r5
 80232a8:	d202      	bcs.n	80232b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80232aa:	8013      	strh	r3, [r2, #0]
 80232ac:	4432      	add	r2, r6
 80232ae:	e7fa      	b.n	80232a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80232b0:	3801      	subs	r0, #1
 80232b2:	b178      	cbz	r0, 80232d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80232b4:	1040      	asrs	r0, r0, #1
 80232b6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80232ba:	0080      	lsls	r0, r0, #2
 80232bc:	0064      	lsls	r4, r4, #1
 80232be:	42a9      	cmp	r1, r5
 80232c0:	d208      	bcs.n	80232d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80232c2:	180e      	adds	r6, r1, r0
 80232c4:	460a      	mov	r2, r1
 80232c6:	42b2      	cmp	r2, r6
 80232c8:	d202      	bcs.n	80232d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80232ca:	f842 3b04 	str.w	r3, [r2], #4
 80232ce:	e7fa      	b.n	80232c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80232d0:	4421      	add	r1, r4
 80232d2:	e7f4      	b.n	80232be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80232d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80232d8:	00fff800 	.word	0x00fff800

080232dc <_ZN8touchgfx8LCD16bppC1Ev>:
 80232dc:	2200      	movs	r2, #0
 80232de:	4912      	ldr	r1, [pc, #72]	@ (8023328 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80232e0:	6001      	str	r1, [r0, #0]
 80232e2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80232e6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80232ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80232ee:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80232f2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80232f6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80232fa:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80232fe:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8023302:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8023306:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 802330a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 802330e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8023312:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8023316:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 802331a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 802331e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8023322:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8023326:	4770      	bx	lr
 8023328:	0803289c 	.word	0x0803289c

0802332c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 802332c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023330:	460d      	mov	r5, r1
 8023332:	b08d      	sub	sp, #52	@ 0x34
 8023334:	4604      	mov	r4, r0
 8023336:	6808      	ldr	r0, [r1, #0]
 8023338:	6849      	ldr	r1, [r1, #4]
 802333a:	4699      	mov	r9, r3
 802333c:	ab08      	add	r3, sp, #32
 802333e:	c303      	stmia	r3!, {r0, r1}
 8023340:	6810      	ldr	r0, [r2, #0]
 8023342:	6851      	ldr	r1, [r2, #4]
 8023344:	ab0a      	add	r3, sp, #40	@ 0x28
 8023346:	c303      	stmia	r3!, {r0, r1}
 8023348:	a808      	add	r0, sp, #32
 802334a:	f7f7 fb0f 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802334e:	4629      	mov	r1, r5
 8023350:	a80a      	add	r0, sp, #40	@ 0x28
 8023352:	f7f7 fb4f 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023356:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802335a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 802335e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8023362:	4d63      	ldr	r5, [pc, #396]	@ (80234f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8023364:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8023368:	6828      	ldr	r0, [r5, #0]
 802336a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 802336e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023372:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8023376:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 802337a:	440a      	add	r2, r1
 802337c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8023380:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8023384:	4413      	add	r3, r2
 8023386:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 802338a:	6803      	ldr	r3, [r0, #0]
 802338c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 802338e:	4798      	blx	r3
 8023390:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023394:	d119      	bne.n	80233ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8023396:	f010 0f20 	tst.w	r0, #32
 802339a:	6828      	ldr	r0, [r5, #0]
 802339c:	d018      	beq.n	80233d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 802339e:	2500      	movs	r5, #0
 80233a0:	6801      	ldr	r1, [r0, #0]
 80233a2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80233a6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80233aa:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80233ae:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 80233b2:	9502      	str	r5, [sp, #8]
 80233b4:	b2b6      	uxth	r6, r6
 80233b6:	fa1f f588 	uxth.w	r5, r8
 80233ba:	9601      	str	r6, [sp, #4]
 80233bc:	9500      	str	r5, [sp, #0]
 80233be:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 80233c0:	4621      	mov	r1, r4
 80233c2:	47a8      	blx	r5
 80233c4:	b00d      	add	sp, #52	@ 0x34
 80233c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80233ca:	f010 0f40 	tst.w	r0, #64	@ 0x40
 80233ce:	e7e4      	b.n	802339a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80233d0:	6803      	ldr	r3, [r0, #0]
 80233d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80233d4:	4798      	blx	r3
 80233d6:	4947      	ldr	r1, [pc, #284]	@ (80234f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80233d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80233dc:	880b      	ldrh	r3, [r1, #0]
 80233de:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 80233e2:	fb03 5202 	mla	r2, r3, r2, r5
 80233e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80233ea:	4373      	muls	r3, r6
 80233ec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80233f0:	9307      	str	r3, [sp, #28]
 80233f2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80233f6:	9306      	str	r3, [sp, #24]
 80233f8:	468a      	mov	sl, r1
 80233fa:	9b07      	ldr	r3, [sp, #28]
 80233fc:	4298      	cmp	r0, r3
 80233fe:	d270      	bcs.n	80234e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8023400:	9b06      	ldr	r3, [sp, #24]
 8023402:	4621      	mov	r1, r4
 8023404:	eb00 0b03 	add.w	fp, r0, r3
 8023408:	4558      	cmp	r0, fp
 802340a:	d25d      	bcs.n	80234c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 802340c:	f851 4b04 	ldr.w	r4, [r1], #4
 8023410:	0e23      	lsrs	r3, r4, #24
 8023412:	d014      	beq.n	802343e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8023414:	2bff      	cmp	r3, #255	@ 0xff
 8023416:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 802341a:	d112      	bne.n	8023442 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 802341c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023420:	d10f      	bne.n	8023442 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8023422:	0963      	lsrs	r3, r4, #5
 8023424:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8023428:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802342c:	f02c 0c07 	bic.w	ip, ip, #7
 8023430:	ea43 0c0c 	orr.w	ip, r3, ip
 8023434:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8023438:	ea4c 0404 	orr.w	r4, ip, r4
 802343c:	8004      	strh	r4, [r0, #0]
 802343e:	3002      	adds	r0, #2
 8023440:	e7e2      	b.n	8023408 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8023442:	fb09 f303 	mul.w	r3, r9, r3
 8023446:	8807      	ldrh	r7, [r0, #0]
 8023448:	1c5a      	adds	r2, r3, #1
 802344a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 802344e:	1212      	asrs	r2, r2, #8
 8023450:	123e      	asrs	r6, r7, #8
 8023452:	b293      	uxth	r3, r2
 8023454:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8023458:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 802345c:	43d2      	mvns	r2, r2
 802345e:	b2d2      	uxtb	r2, r2
 8023460:	10fd      	asrs	r5, r7, #3
 8023462:	fb1e fe03 	smulbb	lr, lr, r3
 8023466:	00ff      	lsls	r7, r7, #3
 8023468:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802346c:	fb06 e602 	mla	r6, r6, r2, lr
 8023470:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023474:	b2ff      	uxtb	r7, r7
 8023476:	fa5f fc8c 	uxtb.w	ip, ip
 802347a:	b2e4      	uxtb	r4, r4
 802347c:	b2b6      	uxth	r6, r6
 802347e:	fb1c fc03 	smulbb	ip, ip, r3
 8023482:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8023486:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 802348a:	fb14 f403 	smulbb	r4, r4, r3
 802348e:	fb05 c502 	mla	r5, r5, r2, ip
 8023492:	f106 0e01 	add.w	lr, r6, #1
 8023496:	fb07 4702 	mla	r7, r7, r2, r4
 802349a:	b2ad      	uxth	r5, r5
 802349c:	b2bf      	uxth	r7, r7
 802349e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80234a2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 80234a6:	f105 0c01 	add.w	ip, r5, #1
 80234aa:	1c7e      	adds	r6, r7, #1
 80234ac:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80234b0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80234b4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80234b8:	096d      	lsrs	r5, r5, #5
 80234ba:	ea46 060e 	orr.w	r6, r6, lr
 80234be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80234c2:	432e      	orrs	r6, r5
 80234c4:	8006      	strh	r6, [r0, #0]
 80234c6:	e7ba      	b.n	802343e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80234c8:	f8ba 3000 	ldrh.w	r3, [sl]
 80234cc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 80234d0:	eba3 0308 	sub.w	r3, r3, r8
 80234d4:	eba4 0408 	sub.w	r4, r4, r8
 80234d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80234dc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80234e0:	e78b      	b.n	80233fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80234e2:	4b03      	ldr	r3, [pc, #12]	@ (80234f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80234e4:	6818      	ldr	r0, [r3, #0]
 80234e6:	6803      	ldr	r3, [r0, #0]
 80234e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80234ea:	4798      	blx	r3
 80234ec:	e76a      	b.n	80233c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80234ee:	bf00      	nop
 80234f0:	20013884 	.word	0x20013884
 80234f4:	2001387e 	.word	0x2001387e

080234f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80234f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80234fc:	460c      	mov	r4, r1
 80234fe:	b085      	sub	sp, #20
 8023500:	6810      	ldr	r0, [r2, #0]
 8023502:	6851      	ldr	r1, [r2, #4]
 8023504:	466d      	mov	r5, sp
 8023506:	c503      	stmia	r5!, {r0, r1}
 8023508:	6818      	ldr	r0, [r3, #0]
 802350a:	6859      	ldr	r1, [r3, #4]
 802350c:	4616      	mov	r6, r2
 802350e:	c503      	stmia	r5!, {r0, r1}
 8023510:	4668      	mov	r0, sp
 8023512:	f7f7 fa2b 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023516:	4631      	mov	r1, r6
 8023518:	a802      	add	r0, sp, #8
 802351a:	f7f7 fa6b 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802351e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8023522:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8023526:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 802352a:	4d28      	ldr	r5, [pc, #160]	@ (80235cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 802352c:	4e28      	ldr	r6, [pc, #160]	@ (80235d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 802352e:	6828      	ldr	r0, [r5, #0]
 8023530:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8023534:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8023538:	fb11 2103 	smlabb	r1, r1, r3, r2
 802353c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8023540:	f8bd 1000 	ldrh.w	r1, [sp]
 8023544:	440a      	add	r2, r1
 8023546:	f8ad 2008 	strh.w	r2, [sp, #8]
 802354a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 802354e:	4413      	add	r3, r2
 8023550:	f8ad 300a 	strh.w	r3, [sp, #10]
 8023554:	6803      	ldr	r3, [r0, #0]
 8023556:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023558:	4798      	blx	r3
 802355a:	8833      	ldrh	r3, [r6, #0]
 802355c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8023560:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8023564:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 80235d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8023568:	fb03 1202 	mla	r2, r3, r2, r1
 802356c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023570:	fb08 f303 	mul.w	r3, r8, r3
 8023574:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8023578:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 802357c:	4298      	cmp	r0, r3
 802357e:	d21d      	bcs.n	80235bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8023580:	eb00 080c 	add.w	r8, r0, ip
 8023584:	4540      	cmp	r0, r8
 8023586:	d20f      	bcs.n	80235a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8023588:	f854 1b04 	ldr.w	r1, [r4], #4
 802358c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8023590:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8023594:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8023598:	ea42 0209 	orr.w	r2, r2, r9
 802359c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80235a0:	430a      	orrs	r2, r1
 80235a2:	f820 2b02 	strh.w	r2, [r0], #2
 80235a6:	e7ed      	b.n	8023584 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80235a8:	8832      	ldrh	r2, [r6, #0]
 80235aa:	1bd2      	subs	r2, r2, r7
 80235ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80235b0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80235b4:	1bd2      	subs	r2, r2, r7
 80235b6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80235ba:	e7df      	b.n	802357c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80235bc:	6828      	ldr	r0, [r5, #0]
 80235be:	6803      	ldr	r3, [r0, #0]
 80235c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80235c2:	4798      	blx	r3
 80235c4:	b005      	add	sp, #20
 80235c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80235ca:	bf00      	nop
 80235cc:	20013884 	.word	0x20013884
 80235d0:	2001387e 	.word	0x2001387e
 80235d4:	fffff800 	.word	0xfffff800

080235d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80235d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80235dc:	460e      	mov	r6, r1
 80235de:	b08e      	sub	sp, #56	@ 0x38
 80235e0:	4604      	mov	r4, r0
 80235e2:	6808      	ldr	r0, [r1, #0]
 80235e4:	6849      	ldr	r1, [r1, #4]
 80235e6:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 80237c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80235ea:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 80237c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80235ee:	461d      	mov	r5, r3
 80235f0:	ab0a      	add	r3, sp, #40	@ 0x28
 80235f2:	c303      	stmia	r3!, {r0, r1}
 80235f4:	6810      	ldr	r0, [r2, #0]
 80235f6:	6851      	ldr	r1, [r2, #4]
 80235f8:	ab0c      	add	r3, sp, #48	@ 0x30
 80235fa:	c303      	stmia	r3!, {r0, r1}
 80235fc:	a80a      	add	r0, sp, #40	@ 0x28
 80235fe:	f7f7 f9b5 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023602:	4631      	mov	r1, r6
 8023604:	a80c      	add	r0, sp, #48	@ 0x30
 8023606:	f7f7 f9f5 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802360a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802360e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8023612:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8023616:	f8d8 0000 	ldr.w	r0, [r8]
 802361a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 802361e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8023622:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023626:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802362a:	440c      	add	r4, r1
 802362c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8023630:	440a      	add	r2, r1
 8023632:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023636:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 802363a:	4413      	add	r3, r2
 802363c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8023640:	6803      	ldr	r3, [r0, #0]
 8023642:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023644:	4798      	blx	r3
 8023646:	2dff      	cmp	r5, #255	@ 0xff
 8023648:	d124      	bne.n	8023694 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 802364a:	f010 0f01 	tst.w	r0, #1
 802364e:	f8d8 0000 	ldr.w	r0, [r8]
 8023652:	d022      	beq.n	802369a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8023654:	2100      	movs	r1, #0
 8023656:	f8d0 c000 	ldr.w	ip, [r0]
 802365a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 802365e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8023662:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8023666:	f04f 0e01 	mov.w	lr, #1
 802366a:	f8cd e018 	str.w	lr, [sp, #24]
 802366e:	f8b9 e000 	ldrh.w	lr, [r9]
 8023672:	9503      	str	r5, [sp, #12]
 8023674:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8023678:	b2b6      	uxth	r6, r6
 802367a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 802367e:	9102      	str	r1, [sp, #8]
 8023680:	b2bf      	uxth	r7, r7
 8023682:	9601      	str	r6, [sp, #4]
 8023684:	9700      	str	r7, [sp, #0]
 8023686:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 802368a:	4621      	mov	r1, r4
 802368c:	47a8      	blx	r5
 802368e:	b00e      	add	sp, #56	@ 0x38
 8023690:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023694:	f010 0f04 	tst.w	r0, #4
 8023698:	e7d9      	b.n	802364e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 802369a:	6803      	ldr	r3, [r0, #0]
 802369c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802369e:	4798      	blx	r3
 80236a0:	f8b9 3000 	ldrh.w	r3, [r9]
 80236a4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80236a8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 80236ac:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80236b0:	fb03 1202 	mla	r2, r3, r2, r1
 80236b4:	ebac 0c07 	sub.w	ip, ip, r7
 80236b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80236bc:	435e      	muls	r6, r3
 80236be:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80236c2:	2dff      	cmp	r5, #255	@ 0xff
 80236c4:	eba3 0707 	sub.w	r7, r3, r7
 80236c8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80236cc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80236d0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80236d4:	d049      	beq.n	802376a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80236d6:	43eb      	mvns	r3, r5
 80236d8:	fa1f f985 	uxth.w	r9, r5
 80236dc:	b2db      	uxtb	r3, r3
 80236de:	42b0      	cmp	r0, r6
 80236e0:	d266      	bcs.n	80237b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80236e2:	eb00 0a0e 	add.w	sl, r0, lr
 80236e6:	4550      	cmp	r0, sl
 80236e8:	4621      	mov	r1, r4
 80236ea:	f104 0403 	add.w	r4, r4, #3
 80236ee:	d25b      	bcs.n	80237a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80236f0:	8802      	ldrh	r2, [r0, #0]
 80236f2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80236f6:	ea4f 2822 	mov.w	r8, r2, asr #8
 80236fa:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80236fe:	fb11 f109 	smulbb	r1, r1, r9
 8023702:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8023706:	10d5      	asrs	r5, r2, #3
 8023708:	fb08 1803 	mla	r8, r8, r3, r1
 802370c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8023710:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023714:	fb11 f109 	smulbb	r1, r1, r9
 8023718:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802371c:	fb05 1503 	mla	r5, r5, r3, r1
 8023720:	00d2      	lsls	r2, r2, #3
 8023722:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8023726:	b2d2      	uxtb	r2, r2
 8023728:	fb11 f109 	smulbb	r1, r1, r9
 802372c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023730:	fa1f f888 	uxth.w	r8, r8
 8023734:	fb02 1203 	mla	r2, r2, r3, r1
 8023738:	b292      	uxth	r2, r2
 802373a:	f108 0101 	add.w	r1, r8, #1
 802373e:	b2ad      	uxth	r5, r5
 8023740:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8023744:	1c51      	adds	r1, r2, #1
 8023746:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802374a:	1c69      	adds	r1, r5, #1
 802374c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023750:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8023754:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023758:	096d      	lsrs	r5, r5, #5
 802375a:	ea42 0208 	orr.w	r2, r2, r8
 802375e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023762:	432a      	orrs	r2, r5
 8023764:	f820 2b02 	strh.w	r2, [r0], #2
 8023768:	e7bd      	b.n	80236e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 802376a:	4a14      	ldr	r2, [pc, #80]	@ (80237bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 802376c:	42b0      	cmp	r0, r6
 802376e:	d21f      	bcs.n	80237b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8023770:	eb00 050e 	add.w	r5, r0, lr
 8023774:	42a8      	cmp	r0, r5
 8023776:	4621      	mov	r1, r4
 8023778:	f104 0403 	add.w	r4, r4, #3
 802377c:	d210      	bcs.n	80237a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 802377e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8023782:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8023786:	00db      	lsls	r3, r3, #3
 8023788:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 802378c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023790:	430b      	orrs	r3, r1
 8023792:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8023796:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 802379a:	f820 3b02 	strh.w	r3, [r0], #2
 802379e:	e7e9      	b.n	8023774 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80237a0:	4438      	add	r0, r7
 80237a2:	eb01 040c 	add.w	r4, r1, ip
 80237a6:	e7e1      	b.n	802376c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80237a8:	4438      	add	r0, r7
 80237aa:	eb01 040c 	add.w	r4, r1, ip
 80237ae:	e796      	b.n	80236de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80237b0:	4b03      	ldr	r3, [pc, #12]	@ (80237c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80237b2:	6818      	ldr	r0, [r3, #0]
 80237b4:	6803      	ldr	r3, [r0, #0]
 80237b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80237b8:	4798      	blx	r3
 80237ba:	e768      	b.n	802368e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80237bc:	fffff800 	.word	0xfffff800
 80237c0:	20013884 	.word	0x20013884
 80237c4:	2001387e 	.word	0x2001387e

080237c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80237c8:	b4f0      	push	{r4, r5, r6, r7}
 80237ca:	4616      	mov	r6, r2
 80237cc:	2e01      	cmp	r6, #1
 80237ce:	461c      	mov	r4, r3
 80237d0:	460d      	mov	r5, r1
 80237d2:	9a04      	ldr	r2, [sp, #16]
 80237d4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80237d8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80237dc:	d012      	beq.n	8023804 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80237de:	d303      	bcc.n	80237e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80237e0:	2e02      	cmp	r6, #2
 80237e2:	d00a      	beq.n	80237fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80237e4:	bcf0      	pop	{r4, r5, r6, r7}
 80237e6:	4770      	bx	lr
 80237e8:	6805      	ldr	r5, [r0, #0]
 80237ea:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80237ee:	68ed      	ldr	r5, [r5, #12]
 80237f0:	4613      	mov	r3, r2
 80237f2:	46ac      	mov	ip, r5
 80237f4:	4622      	mov	r2, r4
 80237f6:	bcf0      	pop	{r4, r5, r6, r7}
 80237f8:	4760      	bx	ip
 80237fa:	4621      	mov	r1, r4
 80237fc:	4628      	mov	r0, r5
 80237fe:	bcf0      	pop	{r4, r5, r6, r7}
 8023800:	f7ff bd94 	b.w	802332c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8023804:	4621      	mov	r1, r4
 8023806:	4628      	mov	r0, r5
 8023808:	bcf0      	pop	{r4, r5, r6, r7}
 802380a:	f7ff bee5 	b.w	80235d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08023810 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8023810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023814:	4681      	mov	r9, r0
 8023816:	b093      	sub	sp, #76	@ 0x4c
 8023818:	6810      	ldr	r0, [r2, #0]
 802381a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 802381e:	4f6d      	ldr	r7, [pc, #436]	@ (80239d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8023820:	4688      	mov	r8, r1
 8023822:	6851      	ldr	r1, [r2, #4]
 8023824:	ac0e      	add	r4, sp, #56	@ 0x38
 8023826:	c403      	stmia	r4!, {r0, r1}
 8023828:	6818      	ldr	r0, [r3, #0]
 802382a:	6859      	ldr	r1, [r3, #4]
 802382c:	ac10      	add	r4, sp, #64	@ 0x40
 802382e:	4616      	mov	r6, r2
 8023830:	c403      	stmia	r4!, {r0, r1}
 8023832:	a80e      	add	r0, sp, #56	@ 0x38
 8023834:	f7f7 f89a 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023838:	4631      	mov	r1, r6
 802383a:	a810      	add	r0, sp, #64	@ 0x40
 802383c:	f7f7 f8da 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023840:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8023844:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8023848:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 802384c:	4e62      	ldr	r6, [pc, #392]	@ (80239d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 802384e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8023852:	6830      	ldr	r0, [r6, #0]
 8023854:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8023858:	fb11 2103 	smlabb	r1, r1, r3, r2
 802385c:	4489      	add	r9, r1
 802385e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8023862:	440a      	add	r2, r1
 8023864:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8023868:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 802386c:	4413      	add	r3, r2
 802386e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8023872:	6803      	ldr	r3, [r0, #0]
 8023874:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023876:	4798      	blx	r3
 8023878:	f010 0f80 	tst.w	r0, #128	@ 0x80
 802387c:	6830      	ldr	r0, [r6, #0]
 802387e:	d01d      	beq.n	80238bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8023880:	2200      	movs	r2, #0
 8023882:	6801      	ldr	r1, [r0, #0]
 8023884:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8023888:	e9cd 2208 	strd	r2, r2, [sp, #32]
 802388c:	220b      	movs	r2, #11
 802388e:	9207      	str	r2, [sp, #28]
 8023890:	883a      	ldrh	r2, [r7, #0]
 8023892:	9206      	str	r2, [sp, #24]
 8023894:	2201      	movs	r2, #1
 8023896:	e9cd a204 	strd	sl, r2, [sp, #16]
 802389a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 802389e:	9203      	str	r2, [sp, #12]
 80238a0:	b2a4      	uxth	r4, r4
 80238a2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80238a6:	9200      	str	r2, [sp, #0]
 80238a8:	b2ad      	uxth	r5, r5
 80238aa:	9502      	str	r5, [sp, #8]
 80238ac:	9401      	str	r4, [sp, #4]
 80238ae:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 80238b0:	4642      	mov	r2, r8
 80238b2:	4649      	mov	r1, r9
 80238b4:	47a0      	blx	r4
 80238b6:	b013      	add	sp, #76	@ 0x4c
 80238b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80238bc:	6803      	ldr	r3, [r0, #0]
 80238be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80238c0:	4798      	blx	r3
 80238c2:	883b      	ldrh	r3, [r7, #0]
 80238c4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80238c8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80238cc:	fb03 1202 	mla	r2, r3, r2, r1
 80238d0:	435d      	muls	r5, r3
 80238d2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80238d6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80238da:	920c      	str	r2, [sp, #48]	@ 0x30
 80238dc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80238e0:	1b12      	subs	r2, r2, r4
 80238e2:	920d      	str	r2, [sp, #52]	@ 0x34
 80238e4:	0062      	lsls	r2, r4, #1
 80238e6:	1b1c      	subs	r4, r3, r4
 80238e8:	0063      	lsls	r3, r4, #1
 80238ea:	920a      	str	r2, [sp, #40]	@ 0x28
 80238ec:	930b      	str	r3, [sp, #44]	@ 0x2c
 80238ee:	f04f 0e04 	mov.w	lr, #4
 80238f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80238f4:	4298      	cmp	r0, r3
 80238f6:	d266      	bcs.n	80239c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80238f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80238fa:	eb00 0b03 	add.w	fp, r0, r3
 80238fe:	4558      	cmp	r0, fp
 8023900:	d25c      	bcs.n	80239bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8023902:	f819 3b01 	ldrb.w	r3, [r9], #1
 8023906:	fb1e e303 	smlabb	r3, lr, r3, lr
 802390a:	f858 2003 	ldr.w	r2, [r8, r3]
 802390e:	0e11      	lsrs	r1, r2, #24
 8023910:	d012      	beq.n	8023938 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8023912:	29ff      	cmp	r1, #255	@ 0xff
 8023914:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8023918:	d110      	bne.n	802393c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 802391a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802391e:	d10d      	bne.n	802393c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8023920:	0953      	lsrs	r3, r2, #5
 8023922:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8023926:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802392a:	f027 0707 	bic.w	r7, r7, #7
 802392e:	431f      	orrs	r7, r3
 8023930:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023934:	433a      	orrs	r2, r7
 8023936:	8002      	strh	r2, [r0, #0]
 8023938:	3002      	adds	r0, #2
 802393a:	e7e0      	b.n	80238fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 802393c:	fb0a f101 	mul.w	r1, sl, r1
 8023940:	8806      	ldrh	r6, [r0, #0]
 8023942:	1c4b      	adds	r3, r1, #1
 8023944:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8023948:	1235      	asrs	r5, r6, #8
 802394a:	10f4      	asrs	r4, r6, #3
 802394c:	121b      	asrs	r3, r3, #8
 802394e:	00f6      	lsls	r6, r6, #3
 8023950:	b299      	uxth	r1, r3
 8023952:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8023956:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802395a:	b2f6      	uxtb	r6, r6
 802395c:	43db      	mvns	r3, r3
 802395e:	b2d2      	uxtb	r2, r2
 8023960:	b2db      	uxtb	r3, r3
 8023962:	fb1c fc01 	smulbb	ip, ip, r1
 8023966:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 802396a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802396e:	fb12 f201 	smulbb	r2, r2, r1
 8023972:	fb05 c503 	mla	r5, r5, r3, ip
 8023976:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802397a:	b2ff      	uxtb	r7, r7
 802397c:	fb06 2203 	mla	r2, r6, r3, r2
 8023980:	b2ad      	uxth	r5, r5
 8023982:	fb17 f701 	smulbb	r7, r7, r1
 8023986:	b292      	uxth	r2, r2
 8023988:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 802398c:	fb04 7403 	mla	r4, r4, r3, r7
 8023990:	f105 0c01 	add.w	ip, r5, #1
 8023994:	1c57      	adds	r7, r2, #1
 8023996:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802399a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802399e:	b2a4      	uxth	r4, r4
 80239a0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80239a4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80239a8:	433d      	orrs	r5, r7
 80239aa:	1c67      	adds	r7, r4, #1
 80239ac:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80239b0:	0964      	lsrs	r4, r4, #5
 80239b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80239b6:	4325      	orrs	r5, r4
 80239b8:	8005      	strh	r5, [r0, #0]
 80239ba:	e7bd      	b.n	8023938 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80239bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80239be:	4418      	add	r0, r3
 80239c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80239c2:	4499      	add	r9, r3
 80239c4:	e795      	b.n	80238f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80239c6:	4b04      	ldr	r3, [pc, #16]	@ (80239d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80239c8:	6818      	ldr	r0, [r3, #0]
 80239ca:	6803      	ldr	r3, [r0, #0]
 80239cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80239ce:	4798      	blx	r3
 80239d0:	e771      	b.n	80238b6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80239d2:	bf00      	nop
 80239d4:	2001387e 	.word	0x2001387e
 80239d8:	20013884 	.word	0x20013884

080239dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80239dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239e0:	b087      	sub	sp, #28
 80239e2:	4680      	mov	r8, r0
 80239e4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 80239e8:	460d      	mov	r5, r1
 80239ea:	4614      	mov	r4, r2
 80239ec:	2e00      	cmp	r6, #0
 80239ee:	f000 80b9 	beq.w	8023b64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80239f2:	6810      	ldr	r0, [r2, #0]
 80239f4:	6851      	ldr	r1, [r2, #4]
 80239f6:	af02      	add	r7, sp, #8
 80239f8:	c703      	stmia	r7!, {r0, r1}
 80239fa:	6818      	ldr	r0, [r3, #0]
 80239fc:	6859      	ldr	r1, [r3, #4]
 80239fe:	af04      	add	r7, sp, #16
 8023a00:	c703      	stmia	r7!, {r0, r1}
 8023a02:	a802      	add	r0, sp, #8
 8023a04:	f7f6 ffb2 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023a08:	4621      	mov	r1, r4
 8023a0a:	a804      	add	r0, sp, #16
 8023a0c:	f7f6 fff2 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023a10:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8023a14:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8023a18:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8023a1c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8023a20:	fb14 2103 	smlabb	r1, r4, r3, r2
 8023a24:	eb08 0401 	add.w	r4, r8, r1
 8023a28:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8023a2c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8023a30:	440a      	add	r2, r1
 8023a32:	f8ad 2010 	strh.w	r2, [sp, #16]
 8023a36:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8023a3a:	4413      	add	r3, r2
 8023a3c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8023a40:	4b4a      	ldr	r3, [pc, #296]	@ (8023b6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8023a42:	6818      	ldr	r0, [r3, #0]
 8023a44:	6803      	ldr	r3, [r0, #0]
 8023a46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023a48:	4798      	blx	r3
 8023a4a:	4b49      	ldr	r3, [pc, #292]	@ (8023b70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8023a4c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8023a50:	881a      	ldrh	r2, [r3, #0]
 8023a52:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8023a56:	2eff      	cmp	r6, #255	@ 0xff
 8023a58:	fb02 c101 	mla	r1, r2, r1, ip
 8023a5c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8023a60:	fb02 f207 	mul.w	r2, r2, r7
 8023a64:	f105 0104 	add.w	r1, r5, #4
 8023a68:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8023a6c:	461d      	mov	r5, r3
 8023a6e:	d05a      	beq.n	8023b26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8023a70:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8023a74:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8023a78:	b2b6      	uxth	r6, r6
 8023a7a:	fa1f fe8e 	uxth.w	lr, lr
 8023a7e:	9301      	str	r3, [sp, #4]
 8023a80:	4282      	cmp	r2, r0
 8023a82:	d96a      	bls.n	8023b5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8023a84:	eb00 0b0a 	add.w	fp, r0, sl
 8023a88:	4583      	cmp	fp, r0
 8023a8a:	d940      	bls.n	8023b0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8023a8c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8023a90:	8805      	ldrh	r5, [r0, #0]
 8023a92:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8023a96:	122f      	asrs	r7, r5, #8
 8023a98:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023a9c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8023aa0:	fb17 f70e 	smulbb	r7, r7, lr
 8023aa4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8023aa8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8023aac:	00ed      	lsls	r5, r5, #3
 8023aae:	fb0c 7c06 	mla	ip, ip, r6, r7
 8023ab2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8023ab6:	10df      	asrs	r7, r3, #3
 8023ab8:	b2ed      	uxtb	r5, r5
 8023aba:	00db      	lsls	r3, r3, #3
 8023abc:	fa1f fc8c 	uxth.w	ip, ip
 8023ac0:	fb19 f90e 	smulbb	r9, r9, lr
 8023ac4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8023ac8:	b2db      	uxtb	r3, r3
 8023aca:	fb15 f50e 	smulbb	r5, r5, lr
 8023ace:	fb07 9706 	mla	r7, r7, r6, r9
 8023ad2:	fb03 5306 	mla	r3, r3, r6, r5
 8023ad6:	f10c 0901 	add.w	r9, ip, #1
 8023ada:	b29b      	uxth	r3, r3
 8023adc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8023ae0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8023ae4:	f103 0c01 	add.w	ip, r3, #1
 8023ae8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023aec:	b2bf      	uxth	r7, r7
 8023aee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023af2:	ea4c 0c09 	orr.w	ip, ip, r9
 8023af6:	f107 0901 	add.w	r9, r7, #1
 8023afa:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8023afe:	097f      	lsrs	r7, r7, #5
 8023b00:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023b04:	ea4c 0c07 	orr.w	ip, ip, r7
 8023b08:	f820 cb02 	strh.w	ip, [r0], #2
 8023b0c:	e7bc      	b.n	8023a88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8023b0e:	9b01      	ldr	r3, [sp, #4]
 8023b10:	881b      	ldrh	r3, [r3, #0]
 8023b12:	eba3 0308 	sub.w	r3, r3, r8
 8023b16:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023b1a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8023b1e:	eba3 0308 	sub.w	r3, r3, r8
 8023b22:	441c      	add	r4, r3
 8023b24:	e7ac      	b.n	8023a80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8023b26:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8023b2a:	4282      	cmp	r2, r0
 8023b2c:	d915      	bls.n	8023b5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8023b2e:	eb00 060a 	add.w	r6, r0, sl
 8023b32:	4286      	cmp	r6, r0
 8023b34:	d906      	bls.n	8023b44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8023b36:	f814 3b01 	ldrb.w	r3, [r4], #1
 8023b3a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8023b3e:	f820 3b02 	strh.w	r3, [r0], #2
 8023b42:	e7f6      	b.n	8023b32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8023b44:	882b      	ldrh	r3, [r5, #0]
 8023b46:	eba3 0308 	sub.w	r3, r3, r8
 8023b4a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023b4e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8023b52:	eba3 0308 	sub.w	r3, r3, r8
 8023b56:	441c      	add	r4, r3
 8023b58:	e7e7      	b.n	8023b2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8023b5a:	4b04      	ldr	r3, [pc, #16]	@ (8023b6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8023b5c:	6818      	ldr	r0, [r3, #0]
 8023b5e:	6803      	ldr	r3, [r0, #0]
 8023b60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023b62:	4798      	blx	r3
 8023b64:	b007      	add	sp, #28
 8023b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023b6a:	bf00      	nop
 8023b6c:	20013884 	.word	0x20013884
 8023b70:	2001387e 	.word	0x2001387e

08023b74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8023b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b78:	b091      	sub	sp, #68	@ 0x44
 8023b7a:	4680      	mov	r8, r0
 8023b7c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8023b80:	460f      	mov	r7, r1
 8023b82:	4614      	mov	r4, r2
 8023b84:	2d00      	cmp	r5, #0
 8023b86:	d051      	beq.n	8023c2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8023b88:	6810      	ldr	r0, [r2, #0]
 8023b8a:	6851      	ldr	r1, [r2, #4]
 8023b8c:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8023d90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8023b90:	ae0c      	add	r6, sp, #48	@ 0x30
 8023b92:	c603      	stmia	r6!, {r0, r1}
 8023b94:	6818      	ldr	r0, [r3, #0]
 8023b96:	6859      	ldr	r1, [r3, #4]
 8023b98:	ae0e      	add	r6, sp, #56	@ 0x38
 8023b9a:	c603      	stmia	r6!, {r0, r1}
 8023b9c:	a80c      	add	r0, sp, #48	@ 0x30
 8023b9e:	f7f6 fee5 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023ba2:	4621      	mov	r1, r4
 8023ba4:	a80e      	add	r0, sp, #56	@ 0x38
 8023ba6:	f7f6 ff25 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023baa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8023bae:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8023bb2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8023bb6:	f8d9 0000 	ldr.w	r0, [r9]
 8023bba:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8023bbe:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8023bc2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023bc6:	eb08 0401 	add.w	r4, r8, r1
 8023bca:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8023bce:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8023d94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8023bd2:	440a      	add	r2, r1
 8023bd4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8023bd8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8023bdc:	4413      	add	r3, r2
 8023bde:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8023be2:	6803      	ldr	r3, [r0, #0]
 8023be4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023be6:	4798      	blx	r3
 8023be8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8023bec:	f8d9 0000 	ldr.w	r0, [r9]
 8023bf0:	d01f      	beq.n	8023c32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8023bf2:	2200      	movs	r2, #0
 8023bf4:	6801      	ldr	r1, [r0, #0]
 8023bf6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8023bfa:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8023bfe:	220b      	movs	r2, #11
 8023c00:	9207      	str	r2, [sp, #28]
 8023c02:	f8b8 2000 	ldrh.w	r2, [r8]
 8023c06:	9206      	str	r2, [sp, #24]
 8023c08:	2201      	movs	r2, #1
 8023c0a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8023c0e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8023c12:	9203      	str	r2, [sp, #12]
 8023c14:	fa1f f28a 	uxth.w	r2, sl
 8023c18:	9202      	str	r2, [sp, #8]
 8023c1a:	b2b6      	uxth	r6, r6
 8023c1c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8023c20:	9200      	str	r2, [sp, #0]
 8023c22:	9601      	str	r6, [sp, #4]
 8023c24:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8023c26:	463a      	mov	r2, r7
 8023c28:	4621      	mov	r1, r4
 8023c2a:	47a8      	blx	r5
 8023c2c:	b011      	add	sp, #68	@ 0x44
 8023c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c32:	6803      	ldr	r3, [r0, #0]
 8023c34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023c36:	4798      	blx	r3
 8023c38:	f8b8 2000 	ldrh.w	r2, [r8]
 8023c3c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8023c40:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8023c44:	2dff      	cmp	r5, #255	@ 0xff
 8023c46:	fb02 1303 	mla	r3, r2, r3, r1
 8023c4a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023c4e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8023c52:	fb0a fa02 	mul.w	sl, sl, r2
 8023c56:	d062      	beq.n	8023d1e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8023c58:	ea6f 0c05 	mvn.w	ip, r5
 8023c5c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8023c60:	930a      	str	r3, [sp, #40]	@ 0x28
 8023c62:	b2ad      	uxth	r5, r5
 8023c64:	fa5f fc8c 	uxtb.w	ip, ip
 8023c68:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8023c6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023c6e:	4298      	cmp	r0, r3
 8023c70:	f080 8085 	bcs.w	8023d7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8023c74:	eb00 0b09 	add.w	fp, r0, r9
 8023c78:	4558      	cmp	r0, fp
 8023c7a:	d246      	bcs.n	8023d0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8023c7c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8023c80:	2303      	movs	r3, #3
 8023c82:	2204      	movs	r2, #4
 8023c84:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8023c88:	eb07 0a0e 	add.w	sl, r7, lr
 8023c8c:	8803      	ldrh	r3, [r0, #0]
 8023c8e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8023c92:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023c96:	1219      	asrs	r1, r3, #8
 8023c98:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023c9c:	fb18 f805 	smulbb	r8, r8, r5
 8023ca0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8023ca4:	10da      	asrs	r2, r3, #3
 8023ca6:	fb01 810c 	mla	r1, r1, ip, r8
 8023caa:	00db      	lsls	r3, r3, #3
 8023cac:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023cb0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023cb4:	b2db      	uxtb	r3, r3
 8023cb6:	fb18 f805 	smulbb	r8, r8, r5
 8023cba:	fb1e fe05 	smulbb	lr, lr, r5
 8023cbe:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8023cc2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8023cc6:	b289      	uxth	r1, r1
 8023cc8:	fb02 820c 	mla	r2, r2, ip, r8
 8023ccc:	fb03 e30c 	mla	r3, r3, ip, lr
 8023cd0:	b292      	uxth	r2, r2
 8023cd2:	b29b      	uxth	r3, r3
 8023cd4:	f101 0801 	add.w	r8, r1, #1
 8023cd8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8023cdc:	f103 0e01 	add.w	lr, r3, #1
 8023ce0:	f102 0801 	add.w	r8, r2, #1
 8023ce4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8023ce8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8023cec:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023cf0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023cf4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8023cf8:	ea4e 0101 	orr.w	r1, lr, r1
 8023cfc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8023d00:	ea41 0108 	orr.w	r1, r1, r8
 8023d04:	f820 1b02 	strh.w	r1, [r0], #2
 8023d08:	e7b6      	b.n	8023c78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8023d0a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8023d0c:	881b      	ldrh	r3, [r3, #0]
 8023d0e:	1b9b      	subs	r3, r3, r6
 8023d10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023d14:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8023d18:	1b9b      	subs	r3, r3, r6
 8023d1a:	441c      	add	r4, r3
 8023d1c:	e7a6      	b.n	8023c6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8023d1e:	491b      	ldr	r1, [pc, #108]	@ (8023d8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8023d20:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8023d24:	2203      	movs	r2, #3
 8023d26:	2504      	movs	r5, #4
 8023d28:	4550      	cmp	r0, sl
 8023d2a:	d228      	bcs.n	8023d7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8023d2c:	eb00 0c09 	add.w	ip, r0, r9
 8023d30:	4560      	cmp	r0, ip
 8023d32:	4623      	mov	r3, r4
 8023d34:	d219      	bcs.n	8023d6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8023d36:	f893 e000 	ldrb.w	lr, [r3]
 8023d3a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8023d3e:	eb07 0b0e 	add.w	fp, r7, lr
 8023d42:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023d46:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8023d4a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8023d4e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8023d52:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8023d56:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8023d5a:	ea43 030b 	orr.w	r3, r3, fp
 8023d5e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8023d62:	3401      	adds	r4, #1
 8023d64:	f820 3b02 	strh.w	r3, [r0], #2
 8023d68:	e7e2      	b.n	8023d30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8023d6a:	f8b8 3000 	ldrh.w	r3, [r8]
 8023d6e:	1b9b      	subs	r3, r3, r6
 8023d70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023d74:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8023d78:	1b9b      	subs	r3, r3, r6
 8023d7a:	441c      	add	r4, r3
 8023d7c:	e7d4      	b.n	8023d28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8023d7e:	4b04      	ldr	r3, [pc, #16]	@ (8023d90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8023d80:	6818      	ldr	r0, [r3, #0]
 8023d82:	6803      	ldr	r3, [r0, #0]
 8023d84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023d86:	4798      	blx	r3
 8023d88:	e750      	b.n	8023c2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8023d8a:	bf00      	nop
 8023d8c:	fffff800 	.word	0xfffff800
 8023d90:	20013884 	.word	0x20013884
 8023d94:	2001387e 	.word	0x2001387e

08023d98 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8023d98:	b4f0      	push	{r4, r5, r6, r7}
 8023d9a:	460c      	mov	r4, r1
 8023d9c:	4611      	mov	r1, r2
 8023d9e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8023da2:	780f      	ldrb	r7, [r1, #0]
 8023da4:	784e      	ldrb	r6, [r1, #1]
 8023da6:	2f01      	cmp	r7, #1
 8023da8:	461a      	mov	r2, r3
 8023daa:	9b04      	ldr	r3, [sp, #16]
 8023dac:	d038      	beq.n	8023e20 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8023dae:	d31f      	bcc.n	8023df0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8023db0:	2f02      	cmp	r7, #2
 8023db2:	d14d      	bne.n	8023e50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8023db4:	2e03      	cmp	r6, #3
 8023db6:	d84b      	bhi.n	8023e50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8023db8:	e8df f006 	tbb	[pc, r6]
 8023dbc:	17140702 	.word	0x17140702
 8023dc0:	9504      	str	r5, [sp, #16]
 8023dc2:	4620      	mov	r0, r4
 8023dc4:	bcf0      	pop	{r4, r5, r6, r7}
 8023dc6:	f7ff be09 	b.w	80239dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8023dca:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8023dcc:	2800      	cmp	r0, #0
 8023dce:	d03f      	beq.n	8023e50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8023dd0:	6806      	ldr	r6, [r0, #0]
 8023dd2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8023dd6:	68b5      	ldr	r5, [r6, #8]
 8023dd8:	4613      	mov	r3, r2
 8023dda:	46ac      	mov	ip, r5
 8023ddc:	460a      	mov	r2, r1
 8023dde:	4621      	mov	r1, r4
 8023de0:	bcf0      	pop	{r4, r5, r6, r7}
 8023de2:	4760      	bx	ip
 8023de4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8023de8:	e7f0      	b.n	8023dcc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8023dea:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8023dee:	e7ed      	b.n	8023dcc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8023df0:	2e03      	cmp	r6, #3
 8023df2:	d82d      	bhi.n	8023e50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8023df4:	e8df f006 	tbb	[pc, r6]
 8023df8:	110e0702 	.word	0x110e0702
 8023dfc:	9504      	str	r5, [sp, #16]
 8023dfe:	4620      	mov	r0, r4
 8023e00:	bcf0      	pop	{r4, r5, r6, r7}
 8023e02:	f7ff bd05 	b.w	8023810 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8023e06:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8023e08:	b310      	cbz	r0, 8023e50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8023e0a:	6806      	ldr	r6, [r0, #0]
 8023e0c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8023e10:	68f5      	ldr	r5, [r6, #12]
 8023e12:	e7e1      	b.n	8023dd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8023e14:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8023e18:	e7f6      	b.n	8023e08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8023e1a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8023e1e:	e7f3      	b.n	8023e08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8023e20:	2e03      	cmp	r6, #3
 8023e22:	d815      	bhi.n	8023e50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8023e24:	e8df f006 	tbb	[pc, r6]
 8023e28:	110e0702 	.word	0x110e0702
 8023e2c:	9504      	str	r5, [sp, #16]
 8023e2e:	4620      	mov	r0, r4
 8023e30:	bcf0      	pop	{r4, r5, r6, r7}
 8023e32:	f7ff be9f 	b.w	8023b74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8023e36:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8023e38:	b150      	cbz	r0, 8023e50 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8023e3a:	6806      	ldr	r6, [r0, #0]
 8023e3c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8023e40:	6935      	ldr	r5, [r6, #16]
 8023e42:	e7c9      	b.n	8023dd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8023e44:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8023e48:	e7f6      	b.n	8023e38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8023e4a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8023e4e:	e7f3      	b.n	8023e38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8023e50:	bcf0      	pop	{r4, r5, r6, r7}
 8023e52:	4770      	bx	lr

08023e54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8023e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023e58:	4604      	mov	r4, r0
 8023e5a:	b087      	sub	sp, #28
 8023e5c:	6810      	ldr	r0, [r2, #0]
 8023e5e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8023e62:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 802409c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8023e66:	460e      	mov	r6, r1
 8023e68:	6851      	ldr	r1, [r2, #4]
 8023e6a:	ad02      	add	r5, sp, #8
 8023e6c:	c503      	stmia	r5!, {r0, r1}
 8023e6e:	6818      	ldr	r0, [r3, #0]
 8023e70:	6859      	ldr	r1, [r3, #4]
 8023e72:	ad04      	add	r5, sp, #16
 8023e74:	4617      	mov	r7, r2
 8023e76:	c503      	stmia	r5!, {r0, r1}
 8023e78:	a802      	add	r0, sp, #8
 8023e7a:	f7f6 fd77 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023e7e:	4639      	mov	r1, r7
 8023e80:	a804      	add	r0, sp, #16
 8023e82:	f7f6 fdb7 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023e86:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8023e8a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8023e8e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8023e92:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8023e96:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8023e9a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023e9e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8023ea2:	440e      	add	r6, r1
 8023ea4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8023ea8:	440a      	add	r2, r1
 8023eaa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8023eae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8023eb2:	4413      	add	r3, r2
 8023eb4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8023eb8:	4b77      	ldr	r3, [pc, #476]	@ (8024098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8023eba:	6818      	ldr	r0, [r3, #0]
 8023ebc:	6803      	ldr	r3, [r0, #0]
 8023ebe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023ec0:	4798      	blx	r3
 8023ec2:	f8b9 b000 	ldrh.w	fp, [r9]
 8023ec6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8023eca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8023ece:	fb0b 2303 	mla	r3, fp, r3, r2
 8023ed2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023ed6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8023eda:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8023ede:	fb05 f50b 	mul.w	r5, r5, fp
 8023ee2:	9300      	str	r3, [sp, #0]
 8023ee4:	d069      	beq.n	8023fba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8023ee6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8023eea:	4558      	cmp	r0, fp
 8023eec:	f080 80cc 	bcs.w	8024088 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8023ef0:	9b00      	ldr	r3, [sp, #0]
 8023ef2:	18c3      	adds	r3, r0, r3
 8023ef4:	9301      	str	r3, [sp, #4]
 8023ef6:	4631      	mov	r1, r6
 8023ef8:	9b01      	ldr	r3, [sp, #4]
 8023efa:	4298      	cmp	r0, r3
 8023efc:	d24f      	bcs.n	8023f9e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8023efe:	f811 2b01 	ldrb.w	r2, [r1], #1
 8023f02:	2a00      	cmp	r2, #0
 8023f04:	d048      	beq.n	8023f98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8023f06:	fb0a f202 	mul.w	r2, sl, r2
 8023f0a:	1c53      	adds	r3, r2, #1
 8023f0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023f10:	121b      	asrs	r3, r3, #8
 8023f12:	d041      	beq.n	8023f98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8023f14:	8802      	ldrh	r2, [r0, #0]
 8023f16:	f8b4 c000 	ldrh.w	ip, [r4]
 8023f1a:	b29e      	uxth	r6, r3
 8023f1c:	1215      	asrs	r5, r2, #8
 8023f1e:	43db      	mvns	r3, r3
 8023f20:	b2db      	uxtb	r3, r3
 8023f22:	ea4f 272c 	mov.w	r7, ip, asr #8
 8023f26:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8023f2a:	fb15 f503 	smulbb	r5, r5, r3
 8023f2e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8023f32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8023f36:	00d2      	lsls	r2, r2, #3
 8023f38:	fb07 5706 	mla	r7, r7, r6, r5
 8023f3c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8023f40:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023f44:	b2d2      	uxtb	r2, r2
 8023f46:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023f4a:	b2bf      	uxth	r7, r7
 8023f4c:	fb1e fe03 	smulbb	lr, lr, r3
 8023f50:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023f54:	fa5f fc8c 	uxtb.w	ip, ip
 8023f58:	fb12 f203 	smulbb	r2, r2, r3
 8023f5c:	fb05 e506 	mla	r5, r5, r6, lr
 8023f60:	fb0c 2c06 	mla	ip, ip, r6, r2
 8023f64:	f107 0e01 	add.w	lr, r7, #1
 8023f68:	fa1f fc8c 	uxth.w	ip, ip
 8023f6c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8023f70:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8023f74:	f10c 0701 	add.w	r7, ip, #1
 8023f78:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023f7c:	b2ad      	uxth	r5, r5
 8023f7e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023f82:	ea47 070e 	orr.w	r7, r7, lr
 8023f86:	f105 0e01 	add.w	lr, r5, #1
 8023f8a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8023f8e:	096d      	lsrs	r5, r5, #5
 8023f90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023f94:	432f      	orrs	r7, r5
 8023f96:	8007      	strh	r7, [r0, #0]
 8023f98:	3002      	adds	r0, #2
 8023f9a:	3402      	adds	r4, #2
 8023f9c:	e7ac      	b.n	8023ef8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8023f9e:	f8b9 3000 	ldrh.w	r3, [r9]
 8023fa2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8023fa6:	eba3 0308 	sub.w	r3, r3, r8
 8023faa:	eba6 0608 	sub.w	r6, r6, r8
 8023fae:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8023fb2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023fb6:	440e      	add	r6, r1
 8023fb8:	e797      	b.n	8023eea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8023fba:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8023fbe:	42a8      	cmp	r0, r5
 8023fc0:	d262      	bcs.n	8024088 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8023fc2:	9b00      	ldr	r3, [sp, #0]
 8023fc4:	4631      	mov	r1, r6
 8023fc6:	eb00 0b03 	add.w	fp, r0, r3
 8023fca:	4558      	cmp	r0, fp
 8023fcc:	d24e      	bcs.n	802406c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8023fce:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023fd2:	b12b      	cbz	r3, 8023fe0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8023fd4:	2bff      	cmp	r3, #255	@ 0xff
 8023fd6:	f8b4 e000 	ldrh.w	lr, [r4]
 8023fda:	d104      	bne.n	8023fe6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8023fdc:	f8a0 e000 	strh.w	lr, [r0]
 8023fe0:	3002      	adds	r0, #2
 8023fe2:	3402      	adds	r4, #2
 8023fe4:	e7f1      	b.n	8023fca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8023fe6:	8802      	ldrh	r2, [r0, #0]
 8023fe8:	b29f      	uxth	r7, r3
 8023fea:	1216      	asrs	r6, r2, #8
 8023fec:	43db      	mvns	r3, r3
 8023fee:	b2db      	uxtb	r3, r3
 8023ff0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8023ff4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8023ff8:	fb16 f603 	smulbb	r6, r6, r3
 8023ffc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8024000:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024004:	00d2      	lsls	r2, r2, #3
 8024006:	fb0c 6c07 	mla	ip, ip, r7, r6
 802400a:	b2d2      	uxtb	r2, r2
 802400c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8024010:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8024014:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024018:	fb1a fa03 	smulbb	sl, sl, r3
 802401c:	fa1f fc8c 	uxth.w	ip, ip
 8024020:	fb12 f303 	smulbb	r3, r2, r3
 8024024:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8024028:	fa5f fe8e 	uxtb.w	lr, lr
 802402c:	fb06 a607 	mla	r6, r6, r7, sl
 8024030:	f10c 0201 	add.w	r2, ip, #1
 8024034:	fb0e 3307 	mla	r3, lr, r7, r3
 8024038:	b2b6      	uxth	r6, r6
 802403a:	b29b      	uxth	r3, r3
 802403c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8024040:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8024044:	f106 0a01 	add.w	sl, r6, #1
 8024048:	f103 0c01 	add.w	ip, r3, #1
 802404c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024050:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8024054:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024058:	0976      	lsrs	r6, r6, #5
 802405a:	ea4c 0c02 	orr.w	ip, ip, r2
 802405e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8024062:	ea4c 0c06 	orr.w	ip, ip, r6
 8024066:	f8a0 c000 	strh.w	ip, [r0]
 802406a:	e7b9      	b.n	8023fe0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802406c:	f8b9 3000 	ldrh.w	r3, [r9]
 8024070:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8024074:	eba3 0308 	sub.w	r3, r3, r8
 8024078:	eba6 0608 	sub.w	r6, r6, r8
 802407c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8024080:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8024084:	440e      	add	r6, r1
 8024086:	e79a      	b.n	8023fbe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8024088:	4b03      	ldr	r3, [pc, #12]	@ (8024098 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802408a:	6818      	ldr	r0, [r3, #0]
 802408c:	6803      	ldr	r3, [r0, #0]
 802408e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024090:	4798      	blx	r3
 8024092:	b007      	add	sp, #28
 8024094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024098:	20013884 	.word	0x20013884
 802409c:	2001387e 	.word	0x2001387e

080240a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80240a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240a4:	b089      	sub	sp, #36	@ 0x24
 80240a6:	4607      	mov	r7, r0
 80240a8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 80240ac:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80240ae:	4688      	mov	r8, r1
 80240b0:	4692      	mov	sl, r2
 80240b2:	4699      	mov	r9, r3
 80240b4:	2e00      	cmp	r6, #0
 80240b6:	d048      	beq.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80240b8:	4608      	mov	r0, r1
 80240ba:	f7fa f81d 	bl	801e0f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80240be:	4605      	mov	r5, r0
 80240c0:	4640      	mov	r0, r8
 80240c2:	f7fa f84d 	bl	801e160 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80240c6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80240ca:	4640      	mov	r0, r8
 80240cc:	f8ad a008 	strh.w	sl, [sp, #8]
 80240d0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80240d4:	f8ad 900a 	strh.w	r9, [sp, #10]
 80240d8:	f7fa f900 	bl	801e2dc <_ZNK8touchgfx6Bitmap7getDataEv>
 80240dc:	4605      	mov	r5, r0
 80240de:	4640      	mov	r0, r8
 80240e0:	f7fa f92c 	bl	801e33c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80240e4:	4682      	mov	sl, r0
 80240e6:	4640      	mov	r0, r8
 80240e8:	f7fa f97c 	bl	801e3e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80240ec:	2810      	cmp	r0, #16
 80240ee:	d82c      	bhi.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80240f0:	e8df f010 	tbh	[pc, r0, lsl #1]
 80240f4:	00ba00ca 	.word	0x00ba00ca
 80240f8:	002b0011 	.word	0x002b0011
 80240fc:	002b002b 	.word	0x002b002b
 8024100:	002b002b 	.word	0x002b002b
 8024104:	002b002b 	.word	0x002b002b
 8024108:	00c1002b 	.word	0x00c1002b
 802410c:	002b002b 	.word	0x002b002b
 8024110:	002b0180 	.word	0x002b0180
 8024114:	0173      	.short	0x0173
 8024116:	4bbc      	ldr	r3, [pc, #752]	@ (8024408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8024118:	6818      	ldr	r0, [r3, #0]
 802411a:	6803      	ldr	r3, [r0, #0]
 802411c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 802411e:	4798      	blx	r3
 8024120:	2eff      	cmp	r6, #255	@ 0xff
 8024122:	d101      	bne.n	8024128 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8024124:	0683      	lsls	r3, r0, #26
 8024126:	d506      	bpl.n	8024136 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8024128:	4633      	mov	r3, r6
 802412a:	4622      	mov	r2, r4
 802412c:	a902      	add	r1, sp, #8
 802412e:	4628      	mov	r0, r5
 8024130:	f7ff f8fc 	bl	802332c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8024134:	e009      	b.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024136:	4640      	mov	r0, r8
 8024138:	f7fa f898 	bl	801e26c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802413c:	b940      	cbnz	r0, 8024150 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 802413e:	4623      	mov	r3, r4
 8024140:	aa02      	add	r2, sp, #8
 8024142:	4629      	mov	r1, r5
 8024144:	4638      	mov	r0, r7
 8024146:	f7ff f9d7 	bl	80234f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 802414a:	b009      	add	sp, #36	@ 0x24
 802414c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024150:	f10d 0918 	add.w	r9, sp, #24
 8024154:	4641      	mov	r1, r8
 8024156:	4648      	mov	r0, r9
 8024158:	f7fa f836 	bl	801e1c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802415c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8024160:	f10d 0810 	add.w	r8, sp, #16
 8024164:	e888 0003 	stmia.w	r8, {r0, r1}
 8024168:	4640      	mov	r0, r8
 802416a:	4621      	mov	r1, r4
 802416c:	f7f0 fdb4 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 8024170:	4640      	mov	r0, r8
 8024172:	f7f0 fdf4 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8024176:	2800      	cmp	r0, #0
 8024178:	d1d6      	bne.n	8024128 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 802417a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802417e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8024182:	4293      	cmp	r3, r2
 8024184:	dd12      	ble.n	80241ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8024186:	1a9b      	subs	r3, r3, r2
 8024188:	f9b4 0000 	ldrsh.w	r0, [r4]
 802418c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024190:	f8ad 0018 	strh.w	r0, [sp, #24]
 8024194:	f8ad 201a 	strh.w	r2, [sp, #26]
 8024198:	f8ad 101c 	strh.w	r1, [sp, #28]
 802419c:	f8ad 301e 	strh.w	r3, [sp, #30]
 80241a0:	464a      	mov	r2, r9
 80241a2:	4633      	mov	r3, r6
 80241a4:	a902      	add	r1, sp, #8
 80241a6:	4628      	mov	r0, r5
 80241a8:	f7ff f8c0 	bl	802332c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80241ac:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80241b0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80241b4:	4293      	cmp	r3, r2
 80241b6:	dd12      	ble.n	80241de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 80241b8:	1a9b      	subs	r3, r3, r2
 80241ba:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80241be:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80241c2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80241c6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80241ca:	f8ad 301c 	strh.w	r3, [sp, #28]
 80241ce:	f8ad 101e 	strh.w	r1, [sp, #30]
 80241d2:	23ff      	movs	r3, #255	@ 0xff
 80241d4:	464a      	mov	r2, r9
 80241d6:	a902      	add	r1, sp, #8
 80241d8:	4628      	mov	r0, r5
 80241da:	f7ff f8a7 	bl	802332c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80241de:	4643      	mov	r3, r8
 80241e0:	aa02      	add	r2, sp, #8
 80241e2:	4629      	mov	r1, r5
 80241e4:	4638      	mov	r0, r7
 80241e6:	f7ff f987 	bl	80234f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80241ea:	88a2      	ldrh	r2, [r4, #4]
 80241ec:	8823      	ldrh	r3, [r4, #0]
 80241ee:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80241f2:	4413      	add	r3, r2
 80241f4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80241f8:	440a      	add	r2, r1
 80241fa:	b29b      	uxth	r3, r3
 80241fc:	b292      	uxth	r2, r2
 80241fe:	b211      	sxth	r1, r2
 8024200:	b218      	sxth	r0, r3
 8024202:	4288      	cmp	r0, r1
 8024204:	dd12      	ble.n	802422c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8024206:	1a9b      	subs	r3, r3, r2
 8024208:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 802420c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8024210:	f8ad 1018 	strh.w	r1, [sp, #24]
 8024214:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024218:	f8ad 001e 	strh.w	r0, [sp, #30]
 802421c:	23ff      	movs	r3, #255	@ 0xff
 802421e:	464a      	mov	r2, r9
 8024220:	a902      	add	r1, sp, #8
 8024222:	4628      	mov	r0, r5
 8024224:	f8ad 601a 	strh.w	r6, [sp, #26]
 8024228:	f7ff f880 	bl	802332c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802422c:	88e2      	ldrh	r2, [r4, #6]
 802422e:	8863      	ldrh	r3, [r4, #2]
 8024230:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8024234:	4413      	add	r3, r2
 8024236:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 802423a:	440a      	add	r2, r1
 802423c:	b29b      	uxth	r3, r3
 802423e:	b292      	uxth	r2, r2
 8024240:	b211      	sxth	r1, r2
 8024242:	b218      	sxth	r0, r3
 8024244:	4288      	cmp	r0, r1
 8024246:	dd80      	ble.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024248:	1a9b      	subs	r3, r3, r2
 802424a:	f9b4 6000 	ldrsh.w	r6, [r4]
 802424e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8024252:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024256:	f8ad 6018 	strh.w	r6, [sp, #24]
 802425a:	f8ad 101a 	strh.w	r1, [sp, #26]
 802425e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8024262:	23ff      	movs	r3, #255	@ 0xff
 8024264:	464a      	mov	r2, r9
 8024266:	e761      	b.n	802412c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8024268:	4633      	mov	r3, r6
 802426a:	4622      	mov	r2, r4
 802426c:	a902      	add	r1, sp, #8
 802426e:	4628      	mov	r0, r5
 8024270:	f7ff f9b2 	bl	80235d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8024274:	e769      	b.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024276:	e9cd 4600 	strd	r4, r6, [sp]
 802427a:	ab02      	add	r3, sp, #8
 802427c:	4652      	mov	r2, sl
 802427e:	4629      	mov	r1, r5
 8024280:	4638      	mov	r0, r7
 8024282:	f7ff fd89 	bl	8023d98 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8024286:	e760      	b.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024288:	4640      	mov	r0, r8
 802428a:	f7f9 ffef 	bl	801e26c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802428e:	b948      	cbnz	r0, 80242a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8024290:	683b      	ldr	r3, [r7, #0]
 8024292:	e9cd 6000 	strd	r6, r0, [sp]
 8024296:	aa02      	add	r2, sp, #8
 8024298:	68de      	ldr	r6, [r3, #12]
 802429a:	4629      	mov	r1, r5
 802429c:	4623      	mov	r3, r4
 802429e:	4638      	mov	r0, r7
 80242a0:	47b0      	blx	r6
 80242a2:	e752      	b.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80242a4:	f10d 0918 	add.w	r9, sp, #24
 80242a8:	4641      	mov	r1, r8
 80242aa:	4648      	mov	r0, r9
 80242ac:	f7f9 ff8c 	bl	801e1c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80242b0:	e899 0003 	ldmia.w	r9, {r0, r1}
 80242b4:	f10d 0810 	add.w	r8, sp, #16
 80242b8:	e888 0003 	stmia.w	r8, {r0, r1}
 80242bc:	4640      	mov	r0, r8
 80242be:	4621      	mov	r1, r4
 80242c0:	f7f0 fd0a 	bl	8014cd8 <_ZN8touchgfx4RectaNERKS0_>
 80242c4:	4640      	mov	r0, r8
 80242c6:	f7f0 fd4a 	bl	8014d5e <_ZNK8touchgfx4Rect7isEmptyEv>
 80242ca:	b138      	cbz	r0, 80242dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 80242cc:	9600      	str	r6, [sp, #0]
 80242ce:	4623      	mov	r3, r4
 80242d0:	aa02      	add	r2, sp, #8
 80242d2:	4651      	mov	r1, sl
 80242d4:	4628      	mov	r0, r5
 80242d6:	f7ff fdbd 	bl	8023e54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80242da:	e736      	b.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80242dc:	683b      	ldr	r3, [r7, #0]
 80242de:	e9cd 6000 	strd	r6, r0, [sp]
 80242e2:	aa02      	add	r2, sp, #8
 80242e4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80242e8:	4629      	mov	r1, r5
 80242ea:	4643      	mov	r3, r8
 80242ec:	4638      	mov	r0, r7
 80242ee:	47d8      	blx	fp
 80242f0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80242f4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80242f8:	4293      	cmp	r3, r2
 80242fa:	dd13      	ble.n	8024324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 80242fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8024300:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024304:	f8ad 0018 	strh.w	r0, [sp, #24]
 8024308:	1a9b      	subs	r3, r3, r2
 802430a:	f8ad 201a 	strh.w	r2, [sp, #26]
 802430e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8024312:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024316:	9600      	str	r6, [sp, #0]
 8024318:	464b      	mov	r3, r9
 802431a:	aa02      	add	r2, sp, #8
 802431c:	4651      	mov	r1, sl
 802431e:	4628      	mov	r0, r5
 8024320:	f7ff fd98 	bl	8023e54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024324:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8024328:	f9b4 2000 	ldrsh.w	r2, [r4]
 802432c:	4293      	cmp	r3, r2
 802432e:	dd13      	ble.n	8024358 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8024330:	1a9b      	subs	r3, r3, r2
 8024332:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8024336:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802433a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802433e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8024342:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024346:	f8ad 101e 	strh.w	r1, [sp, #30]
 802434a:	9600      	str	r6, [sp, #0]
 802434c:	464b      	mov	r3, r9
 802434e:	aa02      	add	r2, sp, #8
 8024350:	4651      	mov	r1, sl
 8024352:	4628      	mov	r0, r5
 8024354:	f7ff fd7e 	bl	8023e54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024358:	88a2      	ldrh	r2, [r4, #4]
 802435a:	8823      	ldrh	r3, [r4, #0]
 802435c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8024360:	4413      	add	r3, r2
 8024362:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8024366:	440a      	add	r2, r1
 8024368:	b29b      	uxth	r3, r3
 802436a:	b292      	uxth	r2, r2
 802436c:	b211      	sxth	r1, r2
 802436e:	b218      	sxth	r0, r3
 8024370:	4288      	cmp	r0, r1
 8024372:	dd13      	ble.n	802439c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8024374:	1a9b      	subs	r3, r3, r2
 8024376:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 802437a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 802437e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8024382:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024386:	f8ad 001e 	strh.w	r0, [sp, #30]
 802438a:	9600      	str	r6, [sp, #0]
 802438c:	464b      	mov	r3, r9
 802438e:	aa02      	add	r2, sp, #8
 8024390:	4651      	mov	r1, sl
 8024392:	4628      	mov	r0, r5
 8024394:	f8ad 701a 	strh.w	r7, [sp, #26]
 8024398:	f7ff fd5c 	bl	8023e54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802439c:	88e2      	ldrh	r2, [r4, #6]
 802439e:	8863      	ldrh	r3, [r4, #2]
 80243a0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80243a4:	4413      	add	r3, r2
 80243a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80243aa:	440a      	add	r2, r1
 80243ac:	b29b      	uxth	r3, r3
 80243ae:	b292      	uxth	r2, r2
 80243b0:	b211      	sxth	r1, r2
 80243b2:	b218      	sxth	r0, r3
 80243b4:	4288      	cmp	r0, r1
 80243b6:	f77f aec8 	ble.w	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80243ba:	f9b4 7000 	ldrsh.w	r7, [r4]
 80243be:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80243c2:	f8ad 7018 	strh.w	r7, [sp, #24]
 80243c6:	1a9b      	subs	r3, r3, r2
 80243c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80243cc:	f8ad 101a 	strh.w	r1, [sp, #26]
 80243d0:	f8ad 001c 	strh.w	r0, [sp, #28]
 80243d4:	9600      	str	r6, [sp, #0]
 80243d6:	464b      	mov	r3, r9
 80243d8:	e77a      	b.n	80242d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 80243da:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 80243de:	2800      	cmp	r0, #0
 80243e0:	f43f aeb3 	beq.w	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80243e4:	6803      	ldr	r3, [r0, #0]
 80243e6:	9600      	str	r6, [sp, #0]
 80243e8:	68de      	ldr	r6, [r3, #12]
 80243ea:	4623      	mov	r3, r4
 80243ec:	aa02      	add	r2, sp, #8
 80243ee:	4629      	mov	r1, r5
 80243f0:	47b0      	blx	r6
 80243f2:	e6aa      	b.n	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80243f4:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 80243f8:	2800      	cmp	r0, #0
 80243fa:	f43f aea6 	beq.w	802414a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80243fe:	6803      	ldr	r3, [r0, #0]
 8024400:	9600      	str	r6, [sp, #0]
 8024402:	689e      	ldr	r6, [r3, #8]
 8024404:	e7f1      	b.n	80243ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8024406:	bf00      	nop
 8024408:	20013884 	.word	0x20013884

0802440c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 802440c:	b180      	cbz	r0, 8024430 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 802440e:	2903      	cmp	r1, #3
 8024410:	d81c      	bhi.n	802444c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8024412:	e8df f001 	tbb	[pc, r1]
 8024416:	1d02      	.short	0x1d02
 8024418:	1f08      	.short	0x1f08
 802441a:	4b10      	ldr	r3, [pc, #64]	@ (802445c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 802441c:	8818      	ldrh	r0, [r3, #0]
 802441e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024422:	4240      	negs	r0, r0
 8024424:	4770      	bx	lr
 8024426:	4b0d      	ldr	r3, [pc, #52]	@ (802445c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8024428:	8818      	ldrh	r0, [r3, #0]
 802442a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802442e:	4770      	bx	lr
 8024430:	2903      	cmp	r1, #3
 8024432:	d80b      	bhi.n	802444c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8024434:	a301      	add	r3, pc, #4	@ (adr r3, 802443c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8024436:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802443a:	bf00      	nop
 802443c:	08024451 	.word	0x08024451
 8024440:	08024427 	.word	0x08024427
 8024444:	08024455 	.word	0x08024455
 8024448:	0802441b 	.word	0x0802441b
 802444c:	2000      	movs	r0, #0
 802444e:	4770      	bx	lr
 8024450:	2001      	movs	r0, #1
 8024452:	4770      	bx	lr
 8024454:	f04f 30ff 	mov.w	r0, #4294967295
 8024458:	4770      	bx	lr
 802445a:	bf00      	nop
 802445c:	2001387e 	.word	0x2001387e

08024460 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8024460:	b180      	cbz	r0, 8024484 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8024462:	2903      	cmp	r1, #3
 8024464:	d81c      	bhi.n	80244a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8024466:	e8df f001 	tbb	[pc, r1]
 802446a:	021d      	.short	0x021d
 802446c:	071f      	.short	0x071f
 802446e:	4b10      	ldr	r3, [pc, #64]	@ (80244b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8024470:	8818      	ldrh	r0, [r3, #0]
 8024472:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024476:	4770      	bx	lr
 8024478:	4b0d      	ldr	r3, [pc, #52]	@ (80244b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 802447a:	8818      	ldrh	r0, [r3, #0]
 802447c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024480:	4240      	negs	r0, r0
 8024482:	4770      	bx	lr
 8024484:	2903      	cmp	r1, #3
 8024486:	d80b      	bhi.n	80244a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8024488:	a301      	add	r3, pc, #4	@ (adr r3, 8024490 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 802448a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802448e:	bf00      	nop
 8024490:	0802446f 	.word	0x0802446f
 8024494:	080244a9 	.word	0x080244a9
 8024498:	08024479 	.word	0x08024479
 802449c:	080244a5 	.word	0x080244a5
 80244a0:	2000      	movs	r0, #0
 80244a2:	4770      	bx	lr
 80244a4:	2001      	movs	r0, #1
 80244a6:	4770      	bx	lr
 80244a8:	f04f 30ff 	mov.w	r0, #4294967295
 80244ac:	4770      	bx	lr
 80244ae:	bf00      	nop
 80244b0:	2001387e 	.word	0x2001387e

080244b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80244b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244b8:	b099      	sub	sp, #100	@ 0x64
 80244ba:	910d      	str	r1, [sp, #52]	@ 0x34
 80244bc:	a914      	add	r1, sp, #80	@ 0x50
 80244be:	e881 000c 	stmia.w	r1, {r2, r3}
 80244c2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 80244c6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80244c8:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 80244cc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80244d0:	9310      	str	r3, [sp, #64]	@ 0x40
 80244d2:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80244d6:	9308      	str	r3, [sp, #32]
 80244d8:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 80244dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80244de:	7b4b      	ldrb	r3, [r1, #13]
 80244e0:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 80244e4:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 80244e8:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 80244ec:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 80244ee:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 80244f2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 80244f6:	ea4f 1843 	mov.w	r8, r3, lsl #5
 80244fa:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 80244fe:	f891 8006 	ldrb.w	r8, [r1, #6]
 8024502:	ea58 0800 	orrs.w	r8, r8, r0
 8024506:	f000 81ce 	beq.w	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 802450a:	011b      	lsls	r3, r3, #4
 802450c:	79c8      	ldrb	r0, [r1, #7]
 802450e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8024512:	4303      	orrs	r3, r0
 8024514:	930c      	str	r3, [sp, #48]	@ 0x30
 8024516:	f000 81c6 	beq.w	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 802451a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 802451e:	b29b      	uxth	r3, r3
 8024520:	2d00      	cmp	r5, #0
 8024522:	f000 812c 	beq.w	802477e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8024526:	1aed      	subs	r5, r5, r3
 8024528:	b2ad      	uxth	r5, r5
 802452a:	0429      	lsls	r1, r5, #16
 802452c:	d502      	bpl.n	8024534 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 802452e:	1b64      	subs	r4, r4, r5
 8024530:	b224      	sxth	r4, r4
 8024532:	2500      	movs	r5, #0
 8024534:	f9b2 0000 	ldrsh.w	r0, [r2]
 8024538:	8891      	ldrh	r1, [r2, #4]
 802453a:	4284      	cmp	r4, r0
 802453c:	b283      	uxth	r3, r0
 802453e:	bfb8      	it	lt
 8024540:	18ed      	addlt	r5, r5, r3
 8024542:	440b      	add	r3, r1
 8024544:	b21b      	sxth	r3, r3
 8024546:	930a      	str	r3, [sp, #40]	@ 0x28
 8024548:	88d3      	ldrh	r3, [r2, #6]
 802454a:	8852      	ldrh	r2, [r2, #2]
 802454c:	4413      	add	r3, r2
 802454e:	b21b      	sxth	r3, r3
 8024550:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024552:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024554:	930e      	str	r3, [sp, #56]	@ 0x38
 8024556:	bfb8      	it	lt
 8024558:	1b2c      	sublt	r4, r5, r4
 802455a:	4bb5      	ldr	r3, [pc, #724]	@ (8024830 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 802455c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802455e:	f893 b000 	ldrb.w	fp, [r3]
 8024562:	bfbc      	itt	lt
 8024564:	b2a5      	uxthlt	r5, r4
 8024566:	4604      	movlt	r4, r0
 8024568:	4653      	mov	r3, sl
 802456a:	4621      	mov	r1, r4
 802456c:	a814      	add	r0, sp, #80	@ 0x50
 802456e:	f7f6 f872 	bl	801a656 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8024572:	4621      	mov	r1, r4
 8024574:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8024578:	4653      	mov	r3, sl
 802457a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802457c:	a814      	add	r0, sp, #80	@ 0x50
 802457e:	f7f6 f887 	bl	801a690 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8024582:	a918      	add	r1, sp, #96	@ 0x60
 8024584:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8024588:	a817      	add	r0, sp, #92	@ 0x5c
 802458a:	f7f6 f9ad 	bl	801a8e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 802458e:	f1ba 0f00 	cmp.w	sl, #0
 8024592:	f040 80f7 	bne.w	8024784 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8024596:	f1bb 0f01 	cmp.w	fp, #1
 802459a:	f040 80fb 	bne.w	8024794 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 802459e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80245a0:	2b00      	cmp	r3, #0
 80245a2:	f040 81a8 	bne.w	80248f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 80245a6:	fa1f f288 	uxth.w	r2, r8
 80245aa:	b905      	cbnz	r5, 80245ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 80245ac:	b15e      	cbz	r6, 80245c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 80245ae:	9808      	ldr	r0, [sp, #32]
 80245b0:	fb06 5302 	mla	r3, r6, r2, r5
 80245b4:	4343      	muls	r3, r0
 80245b6:	4631      	mov	r1, r6
 80245b8:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 80245bc:	f003 0607 	and.w	r6, r3, #7
 80245c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80245c2:	1a5b      	subs	r3, r3, r1
 80245c4:	930e      	str	r3, [sp, #56]	@ 0x38
 80245c6:	f10b 31ff 	add.w	r1, fp, #4294967295
 80245ca:	424b      	negs	r3, r1
 80245cc:	414b      	adcs	r3, r1
 80245ce:	4618      	mov	r0, r3
 80245d0:	4651      	mov	r1, sl
 80245d2:	930c      	str	r3, [sp, #48]	@ 0x30
 80245d4:	f7ff ff1a 	bl	802440c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80245d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80245da:	4683      	mov	fp, r0
 80245dc:	4618      	mov	r0, r3
 80245de:	f7ff ff3f 	bl	8024460 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80245e2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80245e4:	4603      	mov	r3, r0
 80245e6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80245e8:	eba1 0a00 	sub.w	sl, r1, r0
 80245ec:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80245ee:	458a      	cmp	sl, r1
 80245f0:	bfa8      	it	ge
 80245f2:	468a      	movge	sl, r1
 80245f4:	f1ba 0f00 	cmp.w	sl, #0
 80245f8:	f340 8155 	ble.w	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80245fc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80245fe:	1b64      	subs	r4, r4, r5
 8024600:	1b0c      	subs	r4, r1, r4
 8024602:	4544      	cmp	r4, r8
 8024604:	bfd4      	ite	le
 8024606:	ebc5 0504 	rsble	r5, r5, r4
 802460a:	ebc5 0508 	rsbgt	r5, r5, r8
 802460e:	2d00      	cmp	r5, #0
 8024610:	f340 8149 	ble.w	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024614:	9908      	ldr	r1, [sp, #32]
 8024616:	1b52      	subs	r2, r2, r5
 8024618:	434a      	muls	r2, r1
 802461a:	920e      	str	r2, [sp, #56]	@ 0x38
 802461c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802461e:	2a00      	cmp	r2, #0
 8024620:	f040 8175 	bne.w	802490e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8024624:	4a83      	ldr	r2, [pc, #524]	@ (8024834 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8024626:	930a      	str	r3, [sp, #40]	@ 0x28
 8024628:	6810      	ldr	r0, [r2, #0]
 802462a:	6802      	ldr	r2, [r0, #0]
 802462c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 802462e:	4790      	blx	r2
 8024630:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024632:	9908      	ldr	r1, [sp, #32]
 8024634:	2201      	movs	r2, #1
 8024636:	408a      	lsls	r2, r1
 8024638:	3a01      	subs	r2, #1
 802463a:	497f      	ldr	r1, [pc, #508]	@ (8024838 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 802463c:	b2d2      	uxtb	r2, r2
 802463e:	880c      	ldrh	r4, [r1, #0]
 8024640:	920c      	str	r2, [sp, #48]	@ 0x30
 8024642:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8024646:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 802464a:	fb04 1202 	mla	r2, r4, r2, r1
 802464e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8024652:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8024656:	920a      	str	r2, [sp, #40]	@ 0x28
 8024658:	f3c9 4207 	ubfx	r2, r9, #16, #8
 802465c:	9212      	str	r2, [sp, #72]	@ 0x48
 802465e:	b2e2      	uxtb	r2, r4
 8024660:	9211      	str	r2, [sp, #68]	@ 0x44
 8024662:	fa5f f289 	uxtb.w	r2, r9
 8024666:	9210      	str	r2, [sp, #64]	@ 0x40
 8024668:	4a74      	ldr	r2, [pc, #464]	@ (802483c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 802466a:	ea4f 1159 	mov.w	r1, r9, lsr #5
 802466e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024672:	4022      	ands	r2, r4
 8024674:	430a      	orrs	r2, r1
 8024676:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 802467a:	ea42 0209 	orr.w	r2, r2, r9
 802467e:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8024682:	b292      	uxth	r2, r2
 8024684:	fb05 3b1b 	mls	fp, r5, fp, r3
 8024688:	920f      	str	r2, [sp, #60]	@ 0x3c
 802468a:	460b      	mov	r3, r1
 802468c:	783a      	ldrb	r2, [r7, #0]
 802468e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024690:	436b      	muls	r3, r5
 8024692:	4132      	asrs	r2, r6
 8024694:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8024698:	b2d2      	uxtb	r2, r2
 802469a:	9313      	str	r3, [sp, #76]	@ 0x4c
 802469c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80246a0:	f0c0 8149 	bcc.w	8024936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 80246a4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80246a8:	46a9      	mov	r9, r5
 80246aa:	f119 39ff 	adds.w	r9, r9, #4294967295
 80246ae:	f0c0 8132 	bcc.w	8024916 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 80246b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80246b4:	4013      	ands	r3, r2
 80246b6:	d054      	beq.n	8024762 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 80246b8:	20ff      	movs	r0, #255	@ 0xff
 80246ba:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80246bc:	fb90 f1f1 	sdiv	r1, r0, r1
 80246c0:	434b      	muls	r3, r1
 80246c2:	2bfe      	cmp	r3, #254	@ 0xfe
 80246c4:	dd03      	ble.n	80246ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 80246c6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80246c8:	4281      	cmp	r1, r0
 80246ca:	f000 8122 	beq.w	8024912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 80246ce:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80246d0:	f8b8 4000 	ldrh.w	r4, [r8]
 80246d4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80246d6:	fb11 f303 	smulbb	r3, r1, r3
 80246da:	b29b      	uxth	r3, r3
 80246dc:	1c59      	adds	r1, r3, #1
 80246de:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80246e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80246e6:	fa1f fe83 	uxth.w	lr, r3
 80246ea:	1221      	asrs	r1, r4, #8
 80246ec:	fb10 fb0e 	smulbb	fp, r0, lr
 80246f0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80246f4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80246f6:	43db      	mvns	r3, r3
 80246f8:	b2db      	uxtb	r3, r3
 80246fa:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80246fe:	fb01 b103 	mla	r1, r1, r3, fp
 8024702:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8024706:	fb10 fb0e 	smulbb	fp, r0, lr
 802470a:	00e4      	lsls	r4, r4, #3
 802470c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802470e:	b2e4      	uxtb	r4, r4
 8024710:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024714:	fb10 fe0e 	smulbb	lr, r0, lr
 8024718:	fb04 e403 	mla	r4, r4, r3, lr
 802471c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8024720:	b289      	uxth	r1, r1
 8024722:	b2a4      	uxth	r4, r4
 8024724:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8024728:	fb0c bc03 	mla	ip, ip, r3, fp
 802472c:	1c4b      	adds	r3, r1, #1
 802472e:	f104 0b01 	add.w	fp, r4, #1
 8024732:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024736:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 802473a:	fa1f fc8c 	uxth.w	ip, ip
 802473e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024742:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8024746:	ea4b 0101 	orr.w	r1, fp, r1
 802474a:	f10c 0b01 	add.w	fp, ip, #1
 802474e:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8024752:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8024756:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802475a:	ea41 010b 	orr.w	r1, r1, fp
 802475e:	f8a8 1000 	strh.w	r1, [r8]
 8024762:	9b08      	ldr	r3, [sp, #32]
 8024764:	441e      	add	r6, r3
 8024766:	b2b6      	uxth	r6, r6
 8024768:	2e07      	cmp	r6, #7
 802476a:	bf98      	it	ls
 802476c:	411a      	asrls	r2, r3
 802476e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024770:	bf89      	itett	hi
 8024772:	787a      	ldrbhi	r2, [r7, #1]
 8024774:	b2d2      	uxtbls	r2, r2
 8024776:	3701      	addhi	r7, #1
 8024778:	2600      	movhi	r6, #0
 802477a:	4498      	add	r8, r3
 802477c:	e795      	b.n	80246aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 802477e:	441c      	add	r4, r3
 8024780:	b224      	sxth	r4, r4
 8024782:	e6d7      	b.n	8024534 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8024784:	f1ba 0f01 	cmp.w	sl, #1
 8024788:	f47f af09 	bne.w	802459e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 802478c:	f1bb 0f01 	cmp.w	fp, #1
 8024790:	f47f af05 	bne.w	802459e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024794:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024796:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024798:	1a99      	subs	r1, r3, r2
 802479a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802479c:	1b9b      	subs	r3, r3, r6
 802479e:	4299      	cmp	r1, r3
 80247a0:	bfa8      	it	ge
 80247a2:	4619      	movge	r1, r3
 80247a4:	2900      	cmp	r1, #0
 80247a6:	9112      	str	r1, [sp, #72]	@ 0x48
 80247a8:	dd7d      	ble.n	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80247aa:	4a22      	ldr	r2, [pc, #136]	@ (8024834 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 80247ac:	9211      	str	r2, [sp, #68]	@ 0x44
 80247ae:	6810      	ldr	r0, [r2, #0]
 80247b0:	6803      	ldr	r3, [r0, #0]
 80247b2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80247b4:	4798      	blx	r3
 80247b6:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 80247ba:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80247bc:	d006      	beq.n	80247cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80247be:	9b08      	ldr	r3, [sp, #32]
 80247c0:	2b04      	cmp	r3, #4
 80247c2:	d133      	bne.n	802482c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 80247c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80247c6:	3300      	adds	r3, #0
 80247c8:	bf18      	it	ne
 80247ca:	2301      	movne	r3, #1
 80247cc:	0582      	lsls	r2, r0, #22
 80247ce:	fa1f fc88 	uxth.w	ip, r8
 80247d2:	f140 80b9 	bpl.w	8024948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 80247d6:	9808      	ldr	r0, [sp, #32]
 80247d8:	2808      	cmp	r0, #8
 80247da:	f040 80b5 	bne.w	8024948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 80247de:	2b00      	cmp	r3, #0
 80247e0:	d064      	beq.n	80248ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 80247e2:	f10c 0c01 	add.w	ip, ip, #1
 80247e6:	f02c 0301 	bic.w	r3, ip, #1
 80247ea:	b29b      	uxth	r3, r3
 80247ec:	bb45      	cbnz	r5, 8024840 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 80247ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80247f0:	eb08 0004 	add.w	r0, r8, r4
 80247f4:	4290      	cmp	r0, r2
 80247f6:	dc23      	bgt.n	8024840 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 80247f8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80247fa:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 80247fe:	6810      	ldr	r0, [r2, #0]
 8024800:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024804:	6804      	ldr	r4, [r0, #0]
 8024806:	9506      	str	r5, [sp, #24]
 8024808:	f44f 7580 	mov.w	r5, #256	@ 0x100
 802480c:	9505      	str	r5, [sp, #20]
 802480e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024810:	9302      	str	r3, [sp, #8]
 8024812:	b289      	uxth	r1, r1
 8024814:	e9cd 3100 	strd	r3, r1, [sp]
 8024818:	e9cd 9503 	strd	r9, r5, [sp, #12]
 802481c:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8024820:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8024822:	4673      	mov	r3, lr
 8024824:	fb06 710c 	mla	r1, r6, ip, r7
 8024828:	47a0      	blx	r4
 802482a:	e03c      	b.n	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 802482c:	2300      	movs	r3, #0
 802482e:	e7cd      	b.n	80247cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8024830:	2001387c 	.word	0x2001387c
 8024834:	20013884 	.word	0x20013884
 8024838:	2001387e 	.word	0x2001387e
 802483c:	00fff800 	.word	0x00fff800
 8024840:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024842:	eba4 0e05 	sub.w	lr, r4, r5
 8024846:	eba2 0e0e 	sub.w	lr, r2, lr
 802484a:	45c6      	cmp	lr, r8
 802484c:	bfd4      	ite	le
 802484e:	ebc5 0e0e 	rsble	lr, r5, lr
 8024852:	ebc5 0e08 	rsbgt	lr, r5, r8
 8024856:	f1be 0f00 	cmp.w	lr, #0
 802485a:	d024      	beq.n	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 802485c:	07e8      	lsls	r0, r5, #31
 802485e:	f53f ae9e 	bmi.w	802459e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024862:	f01e 0001 	ands.w	r0, lr, #1
 8024866:	f47f ae9a 	bne.w	802459e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 802486a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802486c:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8024870:	6814      	ldr	r4, [r2, #0]
 8024872:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024876:	086d      	lsrs	r5, r5, #1
 8024878:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 802487c:	fb06 560c 	mla	r6, r6, ip, r5
 8024880:	6825      	ldr	r5, [r4, #0]
 8024882:	9006      	str	r0, [sp, #24]
 8024884:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8024888:	9005      	str	r0, [sp, #20]
 802488a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802488c:	9302      	str	r3, [sp, #8]
 802488e:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8024892:	b289      	uxth	r1, r1
 8024894:	fa1f f38e 	uxth.w	r3, lr
 8024898:	9101      	str	r1, [sp, #4]
 802489a:	9300      	str	r3, [sp, #0]
 802489c:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 802489e:	4643      	mov	r3, r8
 80248a0:	19b9      	adds	r1, r7, r6
 80248a2:	4620      	mov	r0, r4
 80248a4:	47a8      	blx	r5
 80248a6:	b019      	add	sp, #100	@ 0x64
 80248a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80248ac:	4a28      	ldr	r2, [pc, #160]	@ (8024950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 80248ae:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 80248b2:	6810      	ldr	r0, [r2, #0]
 80248b4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80248b8:	f8d0 a000 	ldr.w	sl, [r0]
 80248bc:	9306      	str	r3, [sp, #24]
 80248be:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80248c2:	9305      	str	r3, [sp, #20]
 80248c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80248c6:	f8cd c008 	str.w	ip, [sp, #8]
 80248ca:	e9cd 9303 	strd	r9, r3, [sp, #12]
 80248ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80248d0:	1b64      	subs	r4, r4, r5
 80248d2:	1b1c      	subs	r4, r3, r4
 80248d4:	fb06 5608 	mla	r6, r6, r8, r5
 80248d8:	4544      	cmp	r4, r8
 80248da:	bfd4      	ite	le
 80248dc:	ebc5 0504 	rsble	r5, r5, r4
 80248e0:	ebc5 0508 	rsbgt	r5, r5, r8
 80248e4:	b289      	uxth	r1, r1
 80248e6:	b2ad      	uxth	r5, r5
 80248e8:	9101      	str	r1, [sp, #4]
 80248ea:	9500      	str	r5, [sp, #0]
 80248ec:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 80248f0:	4673      	mov	r3, lr
 80248f2:	19b9      	adds	r1, r7, r6
 80248f4:	e798      	b.n	8024828 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 80248f6:	2208      	movs	r2, #8
 80248f8:	9b08      	ldr	r3, [sp, #32]
 80248fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80248fe:	1e5a      	subs	r2, r3, #1
 8024900:	4442      	add	r2, r8
 8024902:	fb92 f2f3 	sdiv	r2, r2, r3
 8024906:	fb12 f203 	smulbb	r2, r2, r3
 802490a:	b292      	uxth	r2, r2
 802490c:	e64d      	b.n	80245aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 802490e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024910:	e68f      	b.n	8024632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8024912:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024914:	e723      	b.n	802475e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8024916:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024918:	b143      	cbz	r3, 802492c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 802491a:	441e      	add	r6, r3
 802491c:	b2b6      	uxth	r6, r6
 802491e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8024922:	f006 0607 	and.w	r6, r6, #7
 8024926:	783a      	ldrb	r2, [r7, #0]
 8024928:	4132      	asrs	r2, r6
 802492a:	b2d2      	uxtb	r2, r2
 802492c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802492e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8024930:	4419      	add	r1, r3
 8024932:	910a      	str	r1, [sp, #40]	@ 0x28
 8024934:	e6b2      	b.n	802469c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8024936:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024938:	2b00      	cmp	r3, #0
 802493a:	d1b4      	bne.n	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 802493c:	4b04      	ldr	r3, [pc, #16]	@ (8024950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 802493e:	6818      	ldr	r0, [r3, #0]
 8024940:	6803      	ldr	r3, [r0, #0]
 8024942:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024944:	4798      	blx	r3
 8024946:	e7ae      	b.n	80248a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024948:	2b00      	cmp	r3, #0
 802494a:	f47f af4a 	bne.w	80247e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 802494e:	e626      	b.n	802459e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024950:	20013884 	.word	0x20013884

08024954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8024954:	b538      	push	{r3, r4, r5, lr}
 8024956:	4c15      	ldr	r4, [pc, #84]	@ (80249ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8024958:	7823      	ldrb	r3, [r4, #0]
 802495a:	f3bf 8f5b 	dmb	ish
 802495e:	07da      	lsls	r2, r3, #31
 8024960:	4605      	mov	r5, r0
 8024962:	d40b      	bmi.n	802497c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8024964:	4620      	mov	r0, r4
 8024966:	f008 fc48 	bl	802d1fa <__cxa_guard_acquire>
 802496a:	b138      	cbz	r0, 802497c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802496c:	4620      	mov	r0, r4
 802496e:	f008 fc50 	bl	802d212 <__cxa_guard_release>
 8024972:	4a0f      	ldr	r2, [pc, #60]	@ (80249b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8024974:	490f      	ldr	r1, [pc, #60]	@ (80249b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8024976:	4810      	ldr	r0, [pc, #64]	@ (80249b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8024978:	f008 fc38 	bl	802d1ec <__aeabi_atexit>
 802497c:	4c0f      	ldr	r4, [pc, #60]	@ (80249bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802497e:	7823      	ldrb	r3, [r4, #0]
 8024980:	f3bf 8f5b 	dmb	ish
 8024984:	07db      	lsls	r3, r3, #31
 8024986:	d40b      	bmi.n	80249a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8024988:	4620      	mov	r0, r4
 802498a:	f008 fc36 	bl	802d1fa <__cxa_guard_acquire>
 802498e:	b138      	cbz	r0, 80249a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8024990:	4620      	mov	r0, r4
 8024992:	f008 fc3e 	bl	802d212 <__cxa_guard_release>
 8024996:	4a06      	ldr	r2, [pc, #24]	@ (80249b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8024998:	4909      	ldr	r1, [pc, #36]	@ (80249c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802499a:	480a      	ldr	r0, [pc, #40]	@ (80249c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802499c:	f008 fc26 	bl	802d1ec <__aeabi_atexit>
 80249a0:	4b05      	ldr	r3, [pc, #20]	@ (80249b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80249a2:	616b      	str	r3, [r5, #20]
 80249a4:	4b07      	ldr	r3, [pc, #28]	@ (80249c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80249a6:	61ab      	str	r3, [r5, #24]
 80249a8:	bd38      	pop	{r3, r4, r5, pc}
 80249aa:	bf00      	nop
 80249ac:	20013968 	.word	0x20013968
 80249b0:	20000000 	.word	0x20000000
 80249b4:	08020a5d 	.word	0x08020a5d
 80249b8:	200000d0 	.word	0x200000d0
 80249bc:	2001396c 	.word	0x2001396c
 80249c0:	08020a5b 	.word	0x08020a5b
 80249c4:	200000d4 	.word	0x200000d4

080249c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80249c8:	b538      	push	{r3, r4, r5, lr}
 80249ca:	4c15      	ldr	r4, [pc, #84]	@ (8024a20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80249cc:	7823      	ldrb	r3, [r4, #0]
 80249ce:	f3bf 8f5b 	dmb	ish
 80249d2:	07da      	lsls	r2, r3, #31
 80249d4:	4605      	mov	r5, r0
 80249d6:	d40b      	bmi.n	80249f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80249d8:	4620      	mov	r0, r4
 80249da:	f008 fc0e 	bl	802d1fa <__cxa_guard_acquire>
 80249de:	b138      	cbz	r0, 80249f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80249e0:	4620      	mov	r0, r4
 80249e2:	f008 fc16 	bl	802d212 <__cxa_guard_release>
 80249e6:	4a0f      	ldr	r2, [pc, #60]	@ (8024a24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80249e8:	490f      	ldr	r1, [pc, #60]	@ (8024a28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80249ea:	4810      	ldr	r0, [pc, #64]	@ (8024a2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80249ec:	f008 fbfe 	bl	802d1ec <__aeabi_atexit>
 80249f0:	4c0f      	ldr	r4, [pc, #60]	@ (8024a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80249f2:	7823      	ldrb	r3, [r4, #0]
 80249f4:	f3bf 8f5b 	dmb	ish
 80249f8:	07db      	lsls	r3, r3, #31
 80249fa:	d40b      	bmi.n	8024a14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80249fc:	4620      	mov	r0, r4
 80249fe:	f008 fbfc 	bl	802d1fa <__cxa_guard_acquire>
 8024a02:	b138      	cbz	r0, 8024a14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8024a04:	4620      	mov	r0, r4
 8024a06:	f008 fc04 	bl	802d212 <__cxa_guard_release>
 8024a0a:	4a06      	ldr	r2, [pc, #24]	@ (8024a24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8024a0c:	4909      	ldr	r1, [pc, #36]	@ (8024a34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8024a0e:	480a      	ldr	r0, [pc, #40]	@ (8024a38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8024a10:	f008 fbec 	bl	802d1ec <__aeabi_atexit>
 8024a14:	4b05      	ldr	r3, [pc, #20]	@ (8024a2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8024a16:	60eb      	str	r3, [r5, #12]
 8024a18:	4b07      	ldr	r3, [pc, #28]	@ (8024a38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8024a1a:	612b      	str	r3, [r5, #16]
 8024a1c:	bd38      	pop	{r3, r4, r5, pc}
 8024a1e:	bf00      	nop
 8024a20:	20013940 	.word	0x20013940
 8024a24:	20000000 	.word	0x20000000
 8024a28:	08020a61 	.word	0x08020a61
 8024a2c:	200000a8 	.word	0x200000a8
 8024a30:	20013944 	.word	0x20013944
 8024a34:	08020a5f 	.word	0x08020a5f
 8024a38:	200000ac 	.word	0x200000ac

08024a3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8024a3c:	b510      	push	{r4, lr}
 8024a3e:	4604      	mov	r4, r0
 8024a40:	f7ff ff88 	bl	8024954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8024a44:	4620      	mov	r0, r4
 8024a46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024a4a:	f7ff bfbd 	b.w	80249c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08024a50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8024a50:	b538      	push	{r3, r4, r5, lr}
 8024a52:	4c15      	ldr	r4, [pc, #84]	@ (8024aa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8024a54:	7823      	ldrb	r3, [r4, #0]
 8024a56:	f3bf 8f5b 	dmb	ish
 8024a5a:	07da      	lsls	r2, r3, #31
 8024a5c:	4605      	mov	r5, r0
 8024a5e:	d40b      	bmi.n	8024a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8024a60:	4620      	mov	r0, r4
 8024a62:	f008 fbca 	bl	802d1fa <__cxa_guard_acquire>
 8024a66:	b138      	cbz	r0, 8024a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8024a68:	4620      	mov	r0, r4
 8024a6a:	f008 fbd2 	bl	802d212 <__cxa_guard_release>
 8024a6e:	4a0f      	ldr	r2, [pc, #60]	@ (8024aac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8024a70:	490f      	ldr	r1, [pc, #60]	@ (8024ab0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8024a72:	4810      	ldr	r0, [pc, #64]	@ (8024ab4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8024a74:	f008 fbba 	bl	802d1ec <__aeabi_atexit>
 8024a78:	4c0f      	ldr	r4, [pc, #60]	@ (8024ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8024a7a:	7823      	ldrb	r3, [r4, #0]
 8024a7c:	f3bf 8f5b 	dmb	ish
 8024a80:	07db      	lsls	r3, r3, #31
 8024a82:	d40b      	bmi.n	8024a9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8024a84:	4620      	mov	r0, r4
 8024a86:	f008 fbb8 	bl	802d1fa <__cxa_guard_acquire>
 8024a8a:	b138      	cbz	r0, 8024a9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8024a8c:	4620      	mov	r0, r4
 8024a8e:	f008 fbc0 	bl	802d212 <__cxa_guard_release>
 8024a92:	4a06      	ldr	r2, [pc, #24]	@ (8024aac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8024a94:	4909      	ldr	r1, [pc, #36]	@ (8024abc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8024a96:	480a      	ldr	r0, [pc, #40]	@ (8024ac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8024a98:	f008 fba8 	bl	802d1ec <__aeabi_atexit>
 8024a9c:	4b05      	ldr	r3, [pc, #20]	@ (8024ab4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8024a9e:	626b      	str	r3, [r5, #36]	@ 0x24
 8024aa0:	4b07      	ldr	r3, [pc, #28]	@ (8024ac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8024aa2:	62ab      	str	r3, [r5, #40]	@ 0x28
 8024aa4:	bd38      	pop	{r3, r4, r5, pc}
 8024aa6:	bf00      	nop
 8024aa8:	20013970 	.word	0x20013970
 8024aac:	20000000 	.word	0x20000000
 8024ab0:	08020a55 	.word	0x08020a55
 8024ab4:	200000d8 	.word	0x200000d8
 8024ab8:	20013974 	.word	0x20013974
 8024abc:	08020a53 	.word	0x08020a53
 8024ac0:	200000dc 	.word	0x200000dc

08024ac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8024ac4:	b538      	push	{r3, r4, r5, lr}
 8024ac6:	4c15      	ldr	r4, [pc, #84]	@ (8024b1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8024ac8:	7823      	ldrb	r3, [r4, #0]
 8024aca:	f3bf 8f5b 	dmb	ish
 8024ace:	07da      	lsls	r2, r3, #31
 8024ad0:	4605      	mov	r5, r0
 8024ad2:	d40b      	bmi.n	8024aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8024ad4:	4620      	mov	r0, r4
 8024ad6:	f008 fb90 	bl	802d1fa <__cxa_guard_acquire>
 8024ada:	b138      	cbz	r0, 8024aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8024adc:	4620      	mov	r0, r4
 8024ade:	f008 fb98 	bl	802d212 <__cxa_guard_release>
 8024ae2:	4a0f      	ldr	r2, [pc, #60]	@ (8024b20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8024ae4:	490f      	ldr	r1, [pc, #60]	@ (8024b24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8024ae6:	4810      	ldr	r0, [pc, #64]	@ (8024b28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8024ae8:	f008 fb80 	bl	802d1ec <__aeabi_atexit>
 8024aec:	4c0f      	ldr	r4, [pc, #60]	@ (8024b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8024aee:	7823      	ldrb	r3, [r4, #0]
 8024af0:	f3bf 8f5b 	dmb	ish
 8024af4:	07db      	lsls	r3, r3, #31
 8024af6:	d40b      	bmi.n	8024b10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8024af8:	4620      	mov	r0, r4
 8024afa:	f008 fb7e 	bl	802d1fa <__cxa_guard_acquire>
 8024afe:	b138      	cbz	r0, 8024b10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8024b00:	4620      	mov	r0, r4
 8024b02:	f008 fb86 	bl	802d212 <__cxa_guard_release>
 8024b06:	4a06      	ldr	r2, [pc, #24]	@ (8024b20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8024b08:	4909      	ldr	r1, [pc, #36]	@ (8024b30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8024b0a:	480a      	ldr	r0, [pc, #40]	@ (8024b34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8024b0c:	f008 fb6e 	bl	802d1ec <__aeabi_atexit>
 8024b10:	4b05      	ldr	r3, [pc, #20]	@ (8024b28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8024b12:	61eb      	str	r3, [r5, #28]
 8024b14:	4b07      	ldr	r3, [pc, #28]	@ (8024b34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8024b16:	622b      	str	r3, [r5, #32]
 8024b18:	bd38      	pop	{r3, r4, r5, pc}
 8024b1a:	bf00      	nop
 8024b1c:	20013948 	.word	0x20013948
 8024b20:	20000000 	.word	0x20000000
 8024b24:	08020a59 	.word	0x08020a59
 8024b28:	200000b0 	.word	0x200000b0
 8024b2c:	2001394c 	.word	0x2001394c
 8024b30:	08020a57 	.word	0x08020a57
 8024b34:	200000b4 	.word	0x200000b4

08024b38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8024b38:	b510      	push	{r4, lr}
 8024b3a:	4604      	mov	r4, r0
 8024b3c:	f7ff ff88 	bl	8024a50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8024b40:	4620      	mov	r0, r4
 8024b42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024b46:	f7ff bfbd 	b.w	8024ac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08024b4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8024b4c:	b538      	push	{r3, r4, r5, lr}
 8024b4e:	4c15      	ldr	r4, [pc, #84]	@ (8024ba4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8024b50:	7823      	ldrb	r3, [r4, #0]
 8024b52:	f3bf 8f5b 	dmb	ish
 8024b56:	07da      	lsls	r2, r3, #31
 8024b58:	4605      	mov	r5, r0
 8024b5a:	d40b      	bmi.n	8024b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8024b5c:	4620      	mov	r0, r4
 8024b5e:	f008 fb4c 	bl	802d1fa <__cxa_guard_acquire>
 8024b62:	b138      	cbz	r0, 8024b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8024b64:	4620      	mov	r0, r4
 8024b66:	f008 fb54 	bl	802d212 <__cxa_guard_release>
 8024b6a:	4a0f      	ldr	r2, [pc, #60]	@ (8024ba8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8024b6c:	490f      	ldr	r1, [pc, #60]	@ (8024bac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8024b6e:	4810      	ldr	r0, [pc, #64]	@ (8024bb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8024b70:	f008 fb3c 	bl	802d1ec <__aeabi_atexit>
 8024b74:	4c0f      	ldr	r4, [pc, #60]	@ (8024bb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8024b76:	7823      	ldrb	r3, [r4, #0]
 8024b78:	f3bf 8f5b 	dmb	ish
 8024b7c:	07db      	lsls	r3, r3, #31
 8024b7e:	d40b      	bmi.n	8024b98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8024b80:	4620      	mov	r0, r4
 8024b82:	f008 fb3a 	bl	802d1fa <__cxa_guard_acquire>
 8024b86:	b138      	cbz	r0, 8024b98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8024b88:	4620      	mov	r0, r4
 8024b8a:	f008 fb42 	bl	802d212 <__cxa_guard_release>
 8024b8e:	4a06      	ldr	r2, [pc, #24]	@ (8024ba8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8024b90:	4909      	ldr	r1, [pc, #36]	@ (8024bb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8024b92:	480a      	ldr	r0, [pc, #40]	@ (8024bbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8024b94:	f008 fb2a 	bl	802d1ec <__aeabi_atexit>
 8024b98:	4b05      	ldr	r3, [pc, #20]	@ (8024bb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8024b9a:	636b      	str	r3, [r5, #52]	@ 0x34
 8024b9c:	4b07      	ldr	r3, [pc, #28]	@ (8024bbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8024b9e:	63ab      	str	r3, [r5, #56]	@ 0x38
 8024ba0:	bd38      	pop	{r3, r4, r5, pc}
 8024ba2:	bf00      	nop
 8024ba4:	20013980 	.word	0x20013980
 8024ba8:	20000000 	.word	0x20000000
 8024bac:	08020a4d 	.word	0x08020a4d
 8024bb0:	200000e8 	.word	0x200000e8
 8024bb4:	20013984 	.word	0x20013984
 8024bb8:	08020a4b 	.word	0x08020a4b
 8024bbc:	200000ec 	.word	0x200000ec

08024bc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8024bc0:	b538      	push	{r3, r4, r5, lr}
 8024bc2:	4c15      	ldr	r4, [pc, #84]	@ (8024c18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8024bc4:	7823      	ldrb	r3, [r4, #0]
 8024bc6:	f3bf 8f5b 	dmb	ish
 8024bca:	07da      	lsls	r2, r3, #31
 8024bcc:	4605      	mov	r5, r0
 8024bce:	d40b      	bmi.n	8024be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8024bd0:	4620      	mov	r0, r4
 8024bd2:	f008 fb12 	bl	802d1fa <__cxa_guard_acquire>
 8024bd6:	b138      	cbz	r0, 8024be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8024bd8:	4620      	mov	r0, r4
 8024bda:	f008 fb1a 	bl	802d212 <__cxa_guard_release>
 8024bde:	4a0f      	ldr	r2, [pc, #60]	@ (8024c1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8024be0:	490f      	ldr	r1, [pc, #60]	@ (8024c20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8024be2:	4810      	ldr	r0, [pc, #64]	@ (8024c24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8024be4:	f008 fb02 	bl	802d1ec <__aeabi_atexit>
 8024be8:	4c0f      	ldr	r4, [pc, #60]	@ (8024c28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8024bea:	7823      	ldrb	r3, [r4, #0]
 8024bec:	f3bf 8f5b 	dmb	ish
 8024bf0:	07db      	lsls	r3, r3, #31
 8024bf2:	d40b      	bmi.n	8024c0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8024bf4:	4620      	mov	r0, r4
 8024bf6:	f008 fb00 	bl	802d1fa <__cxa_guard_acquire>
 8024bfa:	b138      	cbz	r0, 8024c0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8024bfc:	4620      	mov	r0, r4
 8024bfe:	f008 fb08 	bl	802d212 <__cxa_guard_release>
 8024c02:	4a06      	ldr	r2, [pc, #24]	@ (8024c1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8024c04:	4909      	ldr	r1, [pc, #36]	@ (8024c2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8024c06:	480a      	ldr	r0, [pc, #40]	@ (8024c30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8024c08:	f008 faf0 	bl	802d1ec <__aeabi_atexit>
 8024c0c:	4b05      	ldr	r3, [pc, #20]	@ (8024c24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8024c0e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8024c10:	4b07      	ldr	r3, [pc, #28]	@ (8024c30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8024c12:	632b      	str	r3, [r5, #48]	@ 0x30
 8024c14:	bd38      	pop	{r3, r4, r5, pc}
 8024c16:	bf00      	nop
 8024c18:	20013950 	.word	0x20013950
 8024c1c:	20000000 	.word	0x20000000
 8024c20:	08020a51 	.word	0x08020a51
 8024c24:	200000b8 	.word	0x200000b8
 8024c28:	20013954 	.word	0x20013954
 8024c2c:	08020a4f 	.word	0x08020a4f
 8024c30:	200000bc 	.word	0x200000bc

08024c34 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8024c34:	b510      	push	{r4, lr}
 8024c36:	4604      	mov	r4, r0
 8024c38:	f7ff ff88 	bl	8024b4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8024c3c:	4620      	mov	r0, r4
 8024c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024c42:	f7ff bfbd 	b.w	8024bc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08024c48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8024c48:	b538      	push	{r3, r4, r5, lr}
 8024c4a:	4c15      	ldr	r4, [pc, #84]	@ (8024ca0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8024c4c:	7823      	ldrb	r3, [r4, #0]
 8024c4e:	f3bf 8f5b 	dmb	ish
 8024c52:	07da      	lsls	r2, r3, #31
 8024c54:	4605      	mov	r5, r0
 8024c56:	d40b      	bmi.n	8024c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8024c58:	4620      	mov	r0, r4
 8024c5a:	f008 face 	bl	802d1fa <__cxa_guard_acquire>
 8024c5e:	b138      	cbz	r0, 8024c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8024c60:	4620      	mov	r0, r4
 8024c62:	f008 fad6 	bl	802d212 <__cxa_guard_release>
 8024c66:	4a0f      	ldr	r2, [pc, #60]	@ (8024ca4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8024c68:	490f      	ldr	r1, [pc, #60]	@ (8024ca8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8024c6a:	4810      	ldr	r0, [pc, #64]	@ (8024cac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8024c6c:	f008 fabe 	bl	802d1ec <__aeabi_atexit>
 8024c70:	4c0f      	ldr	r4, [pc, #60]	@ (8024cb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8024c72:	7823      	ldrb	r3, [r4, #0]
 8024c74:	f3bf 8f5b 	dmb	ish
 8024c78:	07db      	lsls	r3, r3, #31
 8024c7a:	d40b      	bmi.n	8024c94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8024c7c:	4620      	mov	r0, r4
 8024c7e:	f008 fabc 	bl	802d1fa <__cxa_guard_acquire>
 8024c82:	b138      	cbz	r0, 8024c94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8024c84:	4620      	mov	r0, r4
 8024c86:	f008 fac4 	bl	802d212 <__cxa_guard_release>
 8024c8a:	4a06      	ldr	r2, [pc, #24]	@ (8024ca4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8024c8c:	4909      	ldr	r1, [pc, #36]	@ (8024cb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8024c8e:	480a      	ldr	r0, [pc, #40]	@ (8024cb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8024c90:	f008 faac 	bl	802d1ec <__aeabi_atexit>
 8024c94:	4b05      	ldr	r3, [pc, #20]	@ (8024cac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8024c96:	656b      	str	r3, [r5, #84]	@ 0x54
 8024c98:	4b07      	ldr	r3, [pc, #28]	@ (8024cb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8024c9a:	65ab      	str	r3, [r5, #88]	@ 0x58
 8024c9c:	bd38      	pop	{r3, r4, r5, pc}
 8024c9e:	bf00      	nop
 8024ca0:	20013988 	.word	0x20013988
 8024ca4:	20000000 	.word	0x20000000
 8024ca8:	08020a3d 	.word	0x08020a3d
 8024cac:	200000f0 	.word	0x200000f0
 8024cb0:	2001398c 	.word	0x2001398c
 8024cb4:	08020a3b 	.word	0x08020a3b
 8024cb8:	200000f4 	.word	0x200000f4

08024cbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8024cbc:	b538      	push	{r3, r4, r5, lr}
 8024cbe:	4c15      	ldr	r4, [pc, #84]	@ (8024d14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8024cc0:	7823      	ldrb	r3, [r4, #0]
 8024cc2:	f3bf 8f5b 	dmb	ish
 8024cc6:	07da      	lsls	r2, r3, #31
 8024cc8:	4605      	mov	r5, r0
 8024cca:	d40b      	bmi.n	8024ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8024ccc:	4620      	mov	r0, r4
 8024cce:	f008 fa94 	bl	802d1fa <__cxa_guard_acquire>
 8024cd2:	b138      	cbz	r0, 8024ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8024cd4:	4620      	mov	r0, r4
 8024cd6:	f008 fa9c 	bl	802d212 <__cxa_guard_release>
 8024cda:	4a0f      	ldr	r2, [pc, #60]	@ (8024d18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8024cdc:	490f      	ldr	r1, [pc, #60]	@ (8024d1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8024cde:	4810      	ldr	r0, [pc, #64]	@ (8024d20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8024ce0:	f008 fa84 	bl	802d1ec <__aeabi_atexit>
 8024ce4:	4c0f      	ldr	r4, [pc, #60]	@ (8024d24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8024ce6:	7823      	ldrb	r3, [r4, #0]
 8024ce8:	f3bf 8f5b 	dmb	ish
 8024cec:	07db      	lsls	r3, r3, #31
 8024cee:	d40b      	bmi.n	8024d08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8024cf0:	4620      	mov	r0, r4
 8024cf2:	f008 fa82 	bl	802d1fa <__cxa_guard_acquire>
 8024cf6:	b138      	cbz	r0, 8024d08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8024cf8:	4620      	mov	r0, r4
 8024cfa:	f008 fa8a 	bl	802d212 <__cxa_guard_release>
 8024cfe:	4a06      	ldr	r2, [pc, #24]	@ (8024d18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8024d00:	4909      	ldr	r1, [pc, #36]	@ (8024d28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8024d02:	480a      	ldr	r0, [pc, #40]	@ (8024d2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8024d04:	f008 fa72 	bl	802d1ec <__aeabi_atexit>
 8024d08:	4b05      	ldr	r3, [pc, #20]	@ (8024d20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8024d0a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8024d0c:	4b07      	ldr	r3, [pc, #28]	@ (8024d2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8024d0e:	652b      	str	r3, [r5, #80]	@ 0x50
 8024d10:	bd38      	pop	{r3, r4, r5, pc}
 8024d12:	bf00      	nop
 8024d14:	20013990 	.word	0x20013990
 8024d18:	20000000 	.word	0x20000000
 8024d1c:	08020a41 	.word	0x08020a41
 8024d20:	200000f8 	.word	0x200000f8
 8024d24:	20013994 	.word	0x20013994
 8024d28:	08020a3f 	.word	0x08020a3f
 8024d2c:	200000fc 	.word	0x200000fc

08024d30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8024d30:	b538      	push	{r3, r4, r5, lr}
 8024d32:	4c15      	ldr	r4, [pc, #84]	@ (8024d88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8024d34:	7823      	ldrb	r3, [r4, #0]
 8024d36:	f3bf 8f5b 	dmb	ish
 8024d3a:	07da      	lsls	r2, r3, #31
 8024d3c:	4605      	mov	r5, r0
 8024d3e:	d40b      	bmi.n	8024d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8024d40:	4620      	mov	r0, r4
 8024d42:	f008 fa5a 	bl	802d1fa <__cxa_guard_acquire>
 8024d46:	b138      	cbz	r0, 8024d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8024d48:	4620      	mov	r0, r4
 8024d4a:	f008 fa62 	bl	802d212 <__cxa_guard_release>
 8024d4e:	4a0f      	ldr	r2, [pc, #60]	@ (8024d8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8024d50:	490f      	ldr	r1, [pc, #60]	@ (8024d90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8024d52:	4810      	ldr	r0, [pc, #64]	@ (8024d94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8024d54:	f008 fa4a 	bl	802d1ec <__aeabi_atexit>
 8024d58:	4c0f      	ldr	r4, [pc, #60]	@ (8024d98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8024d5a:	7823      	ldrb	r3, [r4, #0]
 8024d5c:	f3bf 8f5b 	dmb	ish
 8024d60:	07db      	lsls	r3, r3, #31
 8024d62:	d40b      	bmi.n	8024d7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8024d64:	4620      	mov	r0, r4
 8024d66:	f008 fa48 	bl	802d1fa <__cxa_guard_acquire>
 8024d6a:	b138      	cbz	r0, 8024d7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8024d6c:	4620      	mov	r0, r4
 8024d6e:	f008 fa50 	bl	802d212 <__cxa_guard_release>
 8024d72:	4a06      	ldr	r2, [pc, #24]	@ (8024d8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8024d74:	4909      	ldr	r1, [pc, #36]	@ (8024d9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8024d76:	480a      	ldr	r0, [pc, #40]	@ (8024da0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8024d78:	f008 fa38 	bl	802d1ec <__aeabi_atexit>
 8024d7c:	4b05      	ldr	r3, [pc, #20]	@ (8024d94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8024d7e:	646b      	str	r3, [r5, #68]	@ 0x44
 8024d80:	4b07      	ldr	r3, [pc, #28]	@ (8024da0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8024d82:	64ab      	str	r3, [r5, #72]	@ 0x48
 8024d84:	bd38      	pop	{r3, r4, r5, pc}
 8024d86:	bf00      	nop
 8024d88:	20013958 	.word	0x20013958
 8024d8c:	20000000 	.word	0x20000000
 8024d90:	08020a45 	.word	0x08020a45
 8024d94:	200000c0 	.word	0x200000c0
 8024d98:	2001395c 	.word	0x2001395c
 8024d9c:	08020a43 	.word	0x08020a43
 8024da0:	200000c4 	.word	0x200000c4

08024da4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8024da4:	b538      	push	{r3, r4, r5, lr}
 8024da6:	4c15      	ldr	r4, [pc, #84]	@ (8024dfc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8024da8:	7823      	ldrb	r3, [r4, #0]
 8024daa:	f3bf 8f5b 	dmb	ish
 8024dae:	07da      	lsls	r2, r3, #31
 8024db0:	4605      	mov	r5, r0
 8024db2:	d40b      	bmi.n	8024dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8024db4:	4620      	mov	r0, r4
 8024db6:	f008 fa20 	bl	802d1fa <__cxa_guard_acquire>
 8024dba:	b138      	cbz	r0, 8024dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8024dbc:	4620      	mov	r0, r4
 8024dbe:	f008 fa28 	bl	802d212 <__cxa_guard_release>
 8024dc2:	4a0f      	ldr	r2, [pc, #60]	@ (8024e00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8024dc4:	490f      	ldr	r1, [pc, #60]	@ (8024e04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8024dc6:	4810      	ldr	r0, [pc, #64]	@ (8024e08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8024dc8:	f008 fa10 	bl	802d1ec <__aeabi_atexit>
 8024dcc:	4c0f      	ldr	r4, [pc, #60]	@ (8024e0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8024dce:	7823      	ldrb	r3, [r4, #0]
 8024dd0:	f3bf 8f5b 	dmb	ish
 8024dd4:	07db      	lsls	r3, r3, #31
 8024dd6:	d40b      	bmi.n	8024df0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8024dd8:	4620      	mov	r0, r4
 8024dda:	f008 fa0e 	bl	802d1fa <__cxa_guard_acquire>
 8024dde:	b138      	cbz	r0, 8024df0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8024de0:	4620      	mov	r0, r4
 8024de2:	f008 fa16 	bl	802d212 <__cxa_guard_release>
 8024de6:	4a06      	ldr	r2, [pc, #24]	@ (8024e00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8024de8:	4909      	ldr	r1, [pc, #36]	@ (8024e10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8024dea:	480a      	ldr	r0, [pc, #40]	@ (8024e14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8024dec:	f008 f9fe 	bl	802d1ec <__aeabi_atexit>
 8024df0:	4b05      	ldr	r3, [pc, #20]	@ (8024e08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8024df2:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8024df4:	4b07      	ldr	r3, [pc, #28]	@ (8024e14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8024df6:	642b      	str	r3, [r5, #64]	@ 0x40
 8024df8:	bd38      	pop	{r3, r4, r5, pc}
 8024dfa:	bf00      	nop
 8024dfc:	20013978 	.word	0x20013978
 8024e00:	20000000 	.word	0x20000000
 8024e04:	08020a49 	.word	0x08020a49
 8024e08:	200000e0 	.word	0x200000e0
 8024e0c:	2001397c 	.word	0x2001397c
 8024e10:	08020a47 	.word	0x08020a47
 8024e14:	200000e4 	.word	0x200000e4

08024e18 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8024e18:	b510      	push	{r4, lr}
 8024e1a:	4604      	mov	r4, r0
 8024e1c:	f7ff ff14 	bl	8024c48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8024e20:	4620      	mov	r0, r4
 8024e22:	f7ff ff85 	bl	8024d30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8024e26:	4620      	mov	r0, r4
 8024e28:	f7ff ff48 	bl	8024cbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8024e2c:	4620      	mov	r0, r4
 8024e2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024e32:	f7ff bfb7 	b.w	8024da4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08024e38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8024e38:	b538      	push	{r3, r4, r5, lr}
 8024e3a:	4c15      	ldr	r4, [pc, #84]	@ (8024e90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8024e3c:	7823      	ldrb	r3, [r4, #0]
 8024e3e:	f3bf 8f5b 	dmb	ish
 8024e42:	07da      	lsls	r2, r3, #31
 8024e44:	4605      	mov	r5, r0
 8024e46:	d40b      	bmi.n	8024e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8024e48:	4620      	mov	r0, r4
 8024e4a:	f008 f9d6 	bl	802d1fa <__cxa_guard_acquire>
 8024e4e:	b138      	cbz	r0, 8024e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8024e50:	4620      	mov	r0, r4
 8024e52:	f008 f9de 	bl	802d212 <__cxa_guard_release>
 8024e56:	4a0f      	ldr	r2, [pc, #60]	@ (8024e94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8024e58:	490f      	ldr	r1, [pc, #60]	@ (8024e98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8024e5a:	4810      	ldr	r0, [pc, #64]	@ (8024e9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8024e5c:	f008 f9c6 	bl	802d1ec <__aeabi_atexit>
 8024e60:	4c0f      	ldr	r4, [pc, #60]	@ (8024ea0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8024e62:	7823      	ldrb	r3, [r4, #0]
 8024e64:	f3bf 8f5b 	dmb	ish
 8024e68:	07db      	lsls	r3, r3, #31
 8024e6a:	d40b      	bmi.n	8024e84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8024e6c:	4620      	mov	r0, r4
 8024e6e:	f008 f9c4 	bl	802d1fa <__cxa_guard_acquire>
 8024e72:	b138      	cbz	r0, 8024e84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8024e74:	4620      	mov	r0, r4
 8024e76:	f008 f9cc 	bl	802d212 <__cxa_guard_release>
 8024e7a:	4a06      	ldr	r2, [pc, #24]	@ (8024e94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8024e7c:	4909      	ldr	r1, [pc, #36]	@ (8024ea4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8024e7e:	480a      	ldr	r0, [pc, #40]	@ (8024ea8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8024e80:	f008 f9b4 	bl	802d1ec <__aeabi_atexit>
 8024e84:	4b05      	ldr	r3, [pc, #20]	@ (8024e9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8024e86:	666b      	str	r3, [r5, #100]	@ 0x64
 8024e88:	4b07      	ldr	r3, [pc, #28]	@ (8024ea8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8024e8a:	66ab      	str	r3, [r5, #104]	@ 0x68
 8024e8c:	bd38      	pop	{r3, r4, r5, pc}
 8024e8e:	bf00      	nop
 8024e90:	20013960 	.word	0x20013960
 8024e94:	20000000 	.word	0x20000000
 8024e98:	08020a35 	.word	0x08020a35
 8024e9c:	200000c8 	.word	0x200000c8
 8024ea0:	20013964 	.word	0x20013964
 8024ea4:	08020a33 	.word	0x08020a33
 8024ea8:	200000cc 	.word	0x200000cc

08024eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8024eac:	b538      	push	{r3, r4, r5, lr}
 8024eae:	4c15      	ldr	r4, [pc, #84]	@ (8024f04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8024eb0:	7823      	ldrb	r3, [r4, #0]
 8024eb2:	f3bf 8f5b 	dmb	ish
 8024eb6:	07da      	lsls	r2, r3, #31
 8024eb8:	4605      	mov	r5, r0
 8024eba:	d40b      	bmi.n	8024ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8024ebc:	4620      	mov	r0, r4
 8024ebe:	f008 f99c 	bl	802d1fa <__cxa_guard_acquire>
 8024ec2:	b138      	cbz	r0, 8024ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8024ec4:	4620      	mov	r0, r4
 8024ec6:	f008 f9a4 	bl	802d212 <__cxa_guard_release>
 8024eca:	4a0f      	ldr	r2, [pc, #60]	@ (8024f08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8024ecc:	490f      	ldr	r1, [pc, #60]	@ (8024f0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8024ece:	4810      	ldr	r0, [pc, #64]	@ (8024f10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8024ed0:	f008 f98c 	bl	802d1ec <__aeabi_atexit>
 8024ed4:	4c0f      	ldr	r4, [pc, #60]	@ (8024f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8024ed6:	7823      	ldrb	r3, [r4, #0]
 8024ed8:	f3bf 8f5b 	dmb	ish
 8024edc:	07db      	lsls	r3, r3, #31
 8024ede:	d40b      	bmi.n	8024ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8024ee0:	4620      	mov	r0, r4
 8024ee2:	f008 f98a 	bl	802d1fa <__cxa_guard_acquire>
 8024ee6:	b138      	cbz	r0, 8024ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8024ee8:	4620      	mov	r0, r4
 8024eea:	f008 f992 	bl	802d212 <__cxa_guard_release>
 8024eee:	4a06      	ldr	r2, [pc, #24]	@ (8024f08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8024ef0:	4909      	ldr	r1, [pc, #36]	@ (8024f18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8024ef2:	480a      	ldr	r0, [pc, #40]	@ (8024f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8024ef4:	f008 f97a 	bl	802d1ec <__aeabi_atexit>
 8024ef8:	4b05      	ldr	r3, [pc, #20]	@ (8024f10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8024efa:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8024efc:	4b07      	ldr	r3, [pc, #28]	@ (8024f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8024efe:	662b      	str	r3, [r5, #96]	@ 0x60
 8024f00:	bd38      	pop	{r3, r4, r5, pc}
 8024f02:	bf00      	nop
 8024f04:	20013938 	.word	0x20013938
 8024f08:	20000000 	.word	0x20000000
 8024f0c:	08020a39 	.word	0x08020a39
 8024f10:	200000a0 	.word	0x200000a0
 8024f14:	2001393c 	.word	0x2001393c
 8024f18:	08020a37 	.word	0x08020a37
 8024f1c:	200000a4 	.word	0x200000a4

08024f20 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8024f20:	b510      	push	{r4, lr}
 8024f22:	4604      	mov	r4, r0
 8024f24:	f7ff ff88 	bl	8024e38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8024f28:	4620      	mov	r0, r4
 8024f2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024f2e:	f7ff bfbd 	b.w	8024eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08024f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8024f34:	b538      	push	{r3, r4, r5, lr}
 8024f36:	4c15      	ldr	r4, [pc, #84]	@ (8024f8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8024f38:	7823      	ldrb	r3, [r4, #0]
 8024f3a:	f3bf 8f5b 	dmb	ish
 8024f3e:	07da      	lsls	r2, r3, #31
 8024f40:	4605      	mov	r5, r0
 8024f42:	d40b      	bmi.n	8024f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8024f44:	4620      	mov	r0, r4
 8024f46:	f008 f958 	bl	802d1fa <__cxa_guard_acquire>
 8024f4a:	b138      	cbz	r0, 8024f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8024f4c:	4620      	mov	r0, r4
 8024f4e:	f008 f960 	bl	802d212 <__cxa_guard_release>
 8024f52:	4a0f      	ldr	r2, [pc, #60]	@ (8024f90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8024f54:	490f      	ldr	r1, [pc, #60]	@ (8024f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8024f56:	4810      	ldr	r0, [pc, #64]	@ (8024f98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8024f58:	f008 f948 	bl	802d1ec <__aeabi_atexit>
 8024f5c:	4c0f      	ldr	r4, [pc, #60]	@ (8024f9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8024f5e:	7823      	ldrb	r3, [r4, #0]
 8024f60:	f3bf 8f5b 	dmb	ish
 8024f64:	07db      	lsls	r3, r3, #31
 8024f66:	d40b      	bmi.n	8024f80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8024f68:	4620      	mov	r0, r4
 8024f6a:	f008 f946 	bl	802d1fa <__cxa_guard_acquire>
 8024f6e:	b138      	cbz	r0, 8024f80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8024f70:	4620      	mov	r0, r4
 8024f72:	f008 f94e 	bl	802d212 <__cxa_guard_release>
 8024f76:	4a06      	ldr	r2, [pc, #24]	@ (8024f90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8024f78:	4909      	ldr	r1, [pc, #36]	@ (8024fa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8024f7a:	480a      	ldr	r0, [pc, #40]	@ (8024fa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8024f7c:	f008 f936 	bl	802d1ec <__aeabi_atexit>
 8024f80:	4b05      	ldr	r3, [pc, #20]	@ (8024f98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8024f82:	676b      	str	r3, [r5, #116]	@ 0x74
 8024f84:	4b07      	ldr	r3, [pc, #28]	@ (8024fa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8024f86:	67ab      	str	r3, [r5, #120]	@ 0x78
 8024f88:	bd38      	pop	{r3, r4, r5, pc}
 8024f8a:	bf00      	nop
 8024f8c:	20013930 	.word	0x20013930
 8024f90:	20000000 	.word	0x20000000
 8024f94:	08020a2d 	.word	0x08020a2d
 8024f98:	20000098 	.word	0x20000098
 8024f9c:	20013934 	.word	0x20013934
 8024fa0:	08020a2b 	.word	0x08020a2b
 8024fa4:	2000009c 	.word	0x2000009c

08024fa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8024fa8:	b538      	push	{r3, r4, r5, lr}
 8024faa:	4c15      	ldr	r4, [pc, #84]	@ (8025000 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8024fac:	7823      	ldrb	r3, [r4, #0]
 8024fae:	f3bf 8f5b 	dmb	ish
 8024fb2:	07da      	lsls	r2, r3, #31
 8024fb4:	4605      	mov	r5, r0
 8024fb6:	d40b      	bmi.n	8024fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8024fb8:	4620      	mov	r0, r4
 8024fba:	f008 f91e 	bl	802d1fa <__cxa_guard_acquire>
 8024fbe:	b138      	cbz	r0, 8024fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8024fc0:	4620      	mov	r0, r4
 8024fc2:	f008 f926 	bl	802d212 <__cxa_guard_release>
 8024fc6:	4a0f      	ldr	r2, [pc, #60]	@ (8025004 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8024fc8:	490f      	ldr	r1, [pc, #60]	@ (8025008 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8024fca:	4810      	ldr	r0, [pc, #64]	@ (802500c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8024fcc:	f008 f90e 	bl	802d1ec <__aeabi_atexit>
 8024fd0:	4c0f      	ldr	r4, [pc, #60]	@ (8025010 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8024fd2:	7823      	ldrb	r3, [r4, #0]
 8024fd4:	f3bf 8f5b 	dmb	ish
 8024fd8:	07db      	lsls	r3, r3, #31
 8024fda:	d40b      	bmi.n	8024ff4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8024fdc:	4620      	mov	r0, r4
 8024fde:	f008 f90c 	bl	802d1fa <__cxa_guard_acquire>
 8024fe2:	b138      	cbz	r0, 8024ff4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8024fe4:	4620      	mov	r0, r4
 8024fe6:	f008 f914 	bl	802d212 <__cxa_guard_release>
 8024fea:	4a06      	ldr	r2, [pc, #24]	@ (8025004 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8024fec:	4909      	ldr	r1, [pc, #36]	@ (8025014 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8024fee:	480a      	ldr	r0, [pc, #40]	@ (8025018 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8024ff0:	f008 f8fc 	bl	802d1ec <__aeabi_atexit>
 8024ff4:	4b05      	ldr	r3, [pc, #20]	@ (802500c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8024ff6:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8024ff8:	4b07      	ldr	r3, [pc, #28]	@ (8025018 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8024ffa:	672b      	str	r3, [r5, #112]	@ 0x70
 8024ffc:	bd38      	pop	{r3, r4, r5, pc}
 8024ffe:	bf00      	nop
 8025000:	20013928 	.word	0x20013928
 8025004:	20000000 	.word	0x20000000
 8025008:	08020a31 	.word	0x08020a31
 802500c:	20000090 	.word	0x20000090
 8025010:	2001392c 	.word	0x2001392c
 8025014:	08020a2f 	.word	0x08020a2f
 8025018:	20000094 	.word	0x20000094

0802501c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802501c:	b510      	push	{r4, lr}
 802501e:	4604      	mov	r4, r0
 8025020:	f7ff ff88 	bl	8024f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8025024:	4620      	mov	r0, r4
 8025026:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802502a:	f7ff bfbd 	b.w	8024fa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802502e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802502e:	b510      	push	{r4, lr}
 8025030:	4604      	mov	r4, r0
 8025032:	f7ff fff3 	bl	802501c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8025036:	4620      	mov	r0, r4
 8025038:	f7ff ff72 	bl	8024f20 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802503c:	4620      	mov	r0, r4
 802503e:	f7ff fdf9 	bl	8024c34 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8025042:	4620      	mov	r0, r4
 8025044:	f7ff fcfa 	bl	8024a3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8025048:	4620      	mov	r0, r4
 802504a:	f7ff fd75 	bl	8024b38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802504e:	4620      	mov	r0, r4
 8025050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025054:	f7ff bee0 	b.w	8024e18 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08025058 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8025058:	b538      	push	{r3, r4, r5, lr}
 802505a:	4c0b      	ldr	r4, [pc, #44]	@ (8025088 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802505c:	7823      	ldrb	r3, [r4, #0]
 802505e:	f3bf 8f5b 	dmb	ish
 8025062:	07db      	lsls	r3, r3, #31
 8025064:	4605      	mov	r5, r0
 8025066:	d40b      	bmi.n	8025080 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8025068:	4620      	mov	r0, r4
 802506a:	f008 f8c6 	bl	802d1fa <__cxa_guard_acquire>
 802506e:	b138      	cbz	r0, 8025080 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8025070:	4620      	mov	r0, r4
 8025072:	f008 f8ce 	bl	802d212 <__cxa_guard_release>
 8025076:	4a05      	ldr	r2, [pc, #20]	@ (802508c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8025078:	4905      	ldr	r1, [pc, #20]	@ (8025090 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802507a:	4806      	ldr	r0, [pc, #24]	@ (8025094 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802507c:	f008 f8b6 	bl	802d1ec <__aeabi_atexit>
 8025080:	4b04      	ldr	r3, [pc, #16]	@ (8025094 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8025082:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8025084:	bd38      	pop	{r3, r4, r5, pc}
 8025086:	bf00      	nop
 8025088:	2001391c 	.word	0x2001391c
 802508c:	20000000 	.word	0x20000000
 8025090:	08020a29 	.word	0x08020a29
 8025094:	20000088 	.word	0x20000088

08025098 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8025098:	b538      	push	{r3, r4, r5, lr}
 802509a:	4c0b      	ldr	r4, [pc, #44]	@ (80250c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802509c:	7823      	ldrb	r3, [r4, #0]
 802509e:	f3bf 8f5b 	dmb	ish
 80250a2:	07db      	lsls	r3, r3, #31
 80250a4:	4605      	mov	r5, r0
 80250a6:	d40b      	bmi.n	80250c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80250a8:	4620      	mov	r0, r4
 80250aa:	f008 f8a6 	bl	802d1fa <__cxa_guard_acquire>
 80250ae:	b138      	cbz	r0, 80250c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80250b0:	4620      	mov	r0, r4
 80250b2:	f008 f8ae 	bl	802d212 <__cxa_guard_release>
 80250b6:	4a05      	ldr	r2, [pc, #20]	@ (80250cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80250b8:	4905      	ldr	r1, [pc, #20]	@ (80250d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80250ba:	4806      	ldr	r0, [pc, #24]	@ (80250d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80250bc:	f008 f896 	bl	802d1ec <__aeabi_atexit>
 80250c0:	4b04      	ldr	r3, [pc, #16]	@ (80250d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80250c2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80250c6:	bd38      	pop	{r3, r4, r5, pc}
 80250c8:	20013920 	.word	0x20013920
 80250cc:	20000000 	.word	0x20000000
 80250d0:	08020a27 	.word	0x08020a27
 80250d4:	2000008c 	.word	0x2000008c

080250d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80250d8:	b570      	push	{r4, r5, r6, lr}
 80250da:	4d0d      	ldr	r5, [pc, #52]	@ (8025110 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80250dc:	4c0d      	ldr	r4, [pc, #52]	@ (8025114 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80250de:	782b      	ldrb	r3, [r5, #0]
 80250e0:	f3bf 8f5b 	dmb	ish
 80250e4:	f013 0f01 	tst.w	r3, #1
 80250e8:	4606      	mov	r6, r0
 80250ea:	d10d      	bne.n	8025108 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80250ec:	4628      	mov	r0, r5
 80250ee:	f008 f884 	bl	802d1fa <__cxa_guard_acquire>
 80250f2:	b148      	cbz	r0, 8025108 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80250f4:	4b08      	ldr	r3, [pc, #32]	@ (8025118 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80250f6:	6023      	str	r3, [r4, #0]
 80250f8:	4628      	mov	r0, r5
 80250fa:	f008 f88a 	bl	802d212 <__cxa_guard_release>
 80250fe:	4a07      	ldr	r2, [pc, #28]	@ (802511c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8025100:	4907      	ldr	r1, [pc, #28]	@ (8025120 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8025102:	4620      	mov	r0, r4
 8025104:	f008 f872 	bl	802d1ec <__aeabi_atexit>
 8025108:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 802510c:	bd70      	pop	{r4, r5, r6, pc}
 802510e:	bf00      	nop
 8025110:	20013924 	.word	0x20013924
 8025114:	20013a9c 	.word	0x20013a9c
 8025118:	08032638 	.word	0x08032638
 802511c:	20000000 	.word	0x20000000
 8025120:	08020a25 	.word	0x08020a25

08025124 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8025124:	b510      	push	{r4, lr}
 8025126:	4604      	mov	r4, r0
 8025128:	f7ff ff96 	bl	8025058 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802512c:	4620      	mov	r0, r4
 802512e:	f7ff ffb3 	bl	8025098 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8025132:	4620      	mov	r0, r4
 8025134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025138:	f7ff bfce 	b.w	80250d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802513c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 802513c:	b570      	push	{r4, r5, r6, lr}
 802513e:	4d0d      	ldr	r5, [pc, #52]	@ (8025174 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8025140:	4c0d      	ldr	r4, [pc, #52]	@ (8025178 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8025142:	782b      	ldrb	r3, [r5, #0]
 8025144:	f3bf 8f5b 	dmb	ish
 8025148:	f013 0f01 	tst.w	r3, #1
 802514c:	4606      	mov	r6, r0
 802514e:	d10d      	bne.n	802516c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8025150:	4628      	mov	r0, r5
 8025152:	f008 f852 	bl	802d1fa <__cxa_guard_acquire>
 8025156:	b148      	cbz	r0, 802516c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8025158:	4b08      	ldr	r3, [pc, #32]	@ (802517c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 802515a:	6023      	str	r3, [r4, #0]
 802515c:	4628      	mov	r0, r5
 802515e:	f008 f858 	bl	802d212 <__cxa_guard_release>
 8025162:	4a07      	ldr	r2, [pc, #28]	@ (8025180 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8025164:	4907      	ldr	r1, [pc, #28]	@ (8025184 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8025166:	4620      	mov	r0, r4
 8025168:	f008 f840 	bl	802d1ec <__aeabi_atexit>
 802516c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8025170:	bd70      	pop	{r4, r5, r6, pc}
 8025172:	bf00      	nop
 8025174:	20013918 	.word	0x20013918
 8025178:	20013998 	.word	0x20013998
 802517c:	08032654 	.word	0x08032654
 8025180:	20000000 	.word	0x20000000
 8025184:	08020a23 	.word	0x08020a23

08025188 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8025188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802518c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8025190:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8025194:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8025198:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 802519c:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 80251a0:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 80251a4:	8808      	ldrh	r0, [r1, #0]
 80251a6:	fb05 4c0e 	mla	ip, r5, lr, r4
 80251aa:	2d00      	cmp	r5, #0
 80251ac:	eb02 0a0c 	add.w	sl, r2, ip
 80251b0:	f2c0 80b0 	blt.w	8025314 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80251b4:	45ab      	cmp	fp, r5
 80251b6:	f340 80ad 	ble.w	8025314 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80251ba:	2c00      	cmp	r4, #0
 80251bc:	f2c0 80a8 	blt.w	8025310 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80251c0:	45a6      	cmp	lr, r4
 80251c2:	f340 80a5 	ble.w	8025310 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80251c6:	f812 200c 	ldrb.w	r2, [r2, ip]
 80251ca:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80251ce:	1c62      	adds	r2, r4, #1
 80251d0:	f100 80a3 	bmi.w	802531a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80251d4:	4596      	cmp	lr, r2
 80251d6:	f340 80a0 	ble.w	802531a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80251da:	f1b9 0f00 	cmp.w	r9, #0
 80251de:	f000 809c 	beq.w	802531a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80251e2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80251e6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80251ea:	3501      	adds	r5, #1
 80251ec:	f100 8099 	bmi.w	8025322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80251f0:	45ab      	cmp	fp, r5
 80251f2:	f340 8096 	ble.w	8025322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80251f6:	2f00      	cmp	r7, #0
 80251f8:	f000 8093 	beq.w	8025322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80251fc:	2c00      	cmp	r4, #0
 80251fe:	f2c0 808e 	blt.w	802531e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8025202:	45a6      	cmp	lr, r4
 8025204:	f340 808b 	ble.w	802531e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8025208:	f81a 200e 	ldrb.w	r2, [sl, lr]
 802520c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8025210:	3401      	adds	r4, #1
 8025212:	f100 8089 	bmi.w	8025328 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8025216:	45a6      	cmp	lr, r4
 8025218:	f340 8086 	ble.w	8025328 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802521c:	f1b9 0f00 	cmp.w	r9, #0
 8025220:	f000 8082 	beq.w	8025328 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8025224:	44d6      	add	lr, sl
 8025226:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802522a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 802522e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8025232:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8025236:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 802523a:	fb19 fe07 	smulbb	lr, r9, r7
 802523e:	ea44 0808 	orr.w	r8, r4, r8
 8025242:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8025246:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802524a:	f1c7 0210 	rsb	r2, r7, #16
 802524e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8025252:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025256:	ea44 0c0c 	orr.w	ip, r4, ip
 802525a:	eba2 0209 	sub.w	r2, r2, r9
 802525e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8025262:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8025266:	fb04 f40c 	mul.w	r4, r4, ip
 802526a:	fb02 4808 	mla	r8, r2, r8, r4
 802526e:	041a      	lsls	r2, r3, #16
 8025270:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025274:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025278:	4313      	orrs	r3, r2
 802527a:	042a      	lsls	r2, r5, #16
 802527c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025280:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8025284:	fb0e 8303 	mla	r3, lr, r3, r8
 8025288:	432a      	orrs	r2, r5
 802528a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802528e:	fb07 3202 	mla	r2, r7, r2, r3
 8025292:	0d53      	lsrs	r3, r2, #21
 8025294:	0952      	lsrs	r2, r2, #5
 8025296:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802529a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802529e:	431a      	orrs	r2, r3
 80252a0:	b293      	uxth	r3, r2
 80252a2:	b2b4      	uxth	r4, r6
 80252a4:	1202      	asrs	r2, r0, #8
 80252a6:	43f6      	mvns	r6, r6
 80252a8:	b2f6      	uxtb	r6, r6
 80252aa:	121d      	asrs	r5, r3, #8
 80252ac:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80252b0:	fb12 f206 	smulbb	r2, r2, r6
 80252b4:	10c7      	asrs	r7, r0, #3
 80252b6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80252ba:	00c0      	lsls	r0, r0, #3
 80252bc:	fb05 2504 	mla	r5, r5, r4, r2
 80252c0:	b2c0      	uxtb	r0, r0
 80252c2:	10da      	asrs	r2, r3, #3
 80252c4:	00db      	lsls	r3, r3, #3
 80252c6:	b2db      	uxtb	r3, r3
 80252c8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80252cc:	fb10 f006 	smulbb	r0, r0, r6
 80252d0:	b2ad      	uxth	r5, r5
 80252d2:	fb03 0004 	mla	r0, r3, r4, r0
 80252d6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80252da:	fb17 f706 	smulbb	r7, r7, r6
 80252de:	b280      	uxth	r0, r0
 80252e0:	1c6b      	adds	r3, r5, #1
 80252e2:	fb02 7204 	mla	r2, r2, r4, r7
 80252e6:	b292      	uxth	r2, r2
 80252e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80252ec:	1c43      	adds	r3, r0, #1
 80252ee:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80252f2:	1c50      	adds	r0, r2, #1
 80252f4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80252f8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80252fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025300:	0952      	lsrs	r2, r2, #5
 8025302:	432b      	orrs	r3, r5
 8025304:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025308:	4313      	orrs	r3, r2
 802530a:	800b      	strh	r3, [r1, #0]
 802530c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025310:	4680      	mov	r8, r0
 8025312:	e75c      	b.n	80251ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8025314:	4684      	mov	ip, r0
 8025316:	4680      	mov	r8, r0
 8025318:	e767      	b.n	80251ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802531a:	4684      	mov	ip, r0
 802531c:	e765      	b.n	80251ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802531e:	4605      	mov	r5, r0
 8025320:	e776      	b.n	8025210 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8025322:	4603      	mov	r3, r0
 8025324:	4605      	mov	r5, r0
 8025326:	e782      	b.n	802522e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8025328:	4603      	mov	r3, r0
 802532a:	e780      	b.n	802522e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0802532c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802532c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025330:	b099      	sub	sp, #100	@ 0x64
 8025332:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8025336:	9215      	str	r2, [sp, #84]	@ 0x54
 8025338:	9309      	str	r3, [sp, #36]	@ 0x24
 802533a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 802533c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8025340:	930d      	str	r3, [sp, #52]	@ 0x34
 8025342:	910c      	str	r1, [sp, #48]	@ 0x30
 8025344:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8025348:	9016      	str	r0, [sp, #88]	@ 0x58
 802534a:	6850      	ldr	r0, [r2, #4]
 802534c:	6812      	ldr	r2, [r2, #0]
 802534e:	fb00 1303 	mla	r3, r0, r3, r1
 8025352:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8025356:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025358:	681b      	ldr	r3, [r3, #0]
 802535a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802535c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802535e:	685e      	ldr	r6, [r3, #4]
 8025360:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025362:	43db      	mvns	r3, r3
 8025364:	b2db      	uxtb	r3, r3
 8025366:	3604      	adds	r6, #4
 8025368:	930a      	str	r3, [sp, #40]	@ 0x28
 802536a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802536c:	2b00      	cmp	r3, #0
 802536e:	dc03      	bgt.n	8025378 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8025370:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8025372:	2b00      	cmp	r3, #0
 8025374:	f340 8225 	ble.w	80257c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8025378:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802537a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802537e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025382:	1e48      	subs	r0, r1, #1
 8025384:	1e57      	subs	r7, r2, #1
 8025386:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025388:	2b00      	cmp	r3, #0
 802538a:	f340 80e3 	ble.w	8025554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 802538e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8025392:	ea4f 4325 	mov.w	r3, r5, asr #16
 8025396:	d406      	bmi.n	80253a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025398:	4584      	cmp	ip, r0
 802539a:	da04      	bge.n	80253a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802539c:	2b00      	cmp	r3, #0
 802539e:	db02      	blt.n	80253a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80253a0:	42bb      	cmp	r3, r7
 80253a2:	f2c0 80d8 	blt.w	8025556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80253a6:	f11c 0c01 	adds.w	ip, ip, #1
 80253aa:	f100 80c9 	bmi.w	8025540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80253ae:	4561      	cmp	r1, ip
 80253b0:	f2c0 80c6 	blt.w	8025540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80253b4:	3301      	adds	r3, #1
 80253b6:	f100 80c3 	bmi.w	8025540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80253ba:	429a      	cmp	r2, r3
 80253bc:	f2c0 80c0 	blt.w	8025540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80253c0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80253c4:	4647      	mov	r7, r8
 80253c6:	f1bb 0f00 	cmp.w	fp, #0
 80253ca:	f340 80e3 	ble.w	8025594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80253ce:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80253d0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80253d2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80253d6:	689b      	ldr	r3, [r3, #8]
 80253d8:	ea5f 422a 	movs.w	r2, sl, asr #16
 80253dc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80253e0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80253e4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80253e8:	f100 8121 	bmi.w	802562e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80253ec:	f103 39ff 	add.w	r9, r3, #4294967295
 80253f0:	454a      	cmp	r2, r9
 80253f2:	f280 811c 	bge.w	802562e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80253f6:	f1bc 0f00 	cmp.w	ip, #0
 80253fa:	f2c0 8118 	blt.w	802562e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80253fe:	f10e 39ff 	add.w	r9, lr, #4294967295
 8025402:	45cc      	cmp	ip, r9
 8025404:	f280 8113 	bge.w	802562e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025408:	b21b      	sxth	r3, r3
 802540a:	fb0c 2203 	mla	r2, ip, r3, r2
 802540e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025410:	eb04 0902 	add.w	r9, r4, r2
 8025414:	5ca2      	ldrb	r2, [r4, r2]
 8025416:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802541a:	2800      	cmp	r0, #0
 802541c:	f000 80fe 	beq.w	802561c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025420:	f899 2001 	ldrb.w	r2, [r9, #1]
 8025424:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025428:	9211      	str	r2, [sp, #68]	@ 0x44
 802542a:	b151      	cbz	r1, 8025442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802542c:	eb09 0203 	add.w	r2, r9, r3
 8025430:	f819 3003 	ldrb.w	r3, [r9, r3]
 8025434:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025438:	930f      	str	r3, [sp, #60]	@ 0x3c
 802543a:	7853      	ldrb	r3, [r2, #1]
 802543c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025440:	9312      	str	r3, [sp, #72]	@ 0x48
 8025442:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025444:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8025446:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802544a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802544e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025452:	ea4c 0c03 	orr.w	ip, ip, r3
 8025456:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8025458:	041b      	lsls	r3, r3, #16
 802545a:	fb10 f201 	smulbb	r2, r0, r1
 802545e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8025462:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025466:	10d2      	asrs	r2, r2, #3
 8025468:	4323      	orrs	r3, r4
 802546a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 802546e:	4353      	muls	r3, r2
 8025470:	fb09 330c 	mla	r3, r9, ip, r3
 8025474:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8025478:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802547c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8025480:	ea4c 0e0e 	orr.w	lr, ip, lr
 8025484:	f1c1 0c10 	rsb	ip, r1, #16
 8025488:	ebac 0c00 	sub.w	ip, ip, r0
 802548c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8025490:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8025494:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025496:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025498:	0418      	lsls	r0, r3, #16
 802549a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802549e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80254a2:	4318      	orrs	r0, r3
 80254a4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80254a8:	fb02 c200 	mla	r2, r2, r0, ip
 80254ac:	0d53      	lsrs	r3, r2, #21
 80254ae:	0952      	lsrs	r2, r2, #5
 80254b0:	8838      	ldrh	r0, [r7, #0]
 80254b2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80254b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80254ba:	431a      	orrs	r2, r3
 80254bc:	b292      	uxth	r2, r2
 80254be:	1201      	asrs	r1, r0, #8
 80254c0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 80254c4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80254c8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80254cc:	fb11 f104 	smulbb	r1, r1, r4
 80254d0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80254d4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80254d8:	00c0      	lsls	r0, r0, #3
 80254da:	fb0c 1c03 	mla	ip, ip, r3, r1
 80254de:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80254e2:	10d1      	asrs	r1, r2, #3
 80254e4:	b2c0      	uxtb	r0, r0
 80254e6:	00d2      	lsls	r2, r2, #3
 80254e8:	b2d2      	uxtb	r2, r2
 80254ea:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80254ee:	fb1e fe04 	smulbb	lr, lr, r4
 80254f2:	fb10 f004 	smulbb	r0, r0, r4
 80254f6:	fa1f fc8c 	uxth.w	ip, ip
 80254fa:	fb01 e103 	mla	r1, r1, r3, lr
 80254fe:	fb02 0303 	mla	r3, r2, r3, r0
 8025502:	b29a      	uxth	r2, r3
 8025504:	f10c 0301 	add.w	r3, ip, #1
 8025508:	b289      	uxth	r1, r1
 802550a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802550e:	1c53      	adds	r3, r2, #1
 8025510:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025514:	1c4a      	adds	r2, r1, #1
 8025516:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802551a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802551e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025522:	0949      	lsrs	r1, r1, #5
 8025524:	ea43 030c 	orr.w	r3, r3, ip
 8025528:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802552c:	430b      	orrs	r3, r1
 802552e:	803b      	strh	r3, [r7, #0]
 8025530:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025532:	449a      	add	sl, r3
 8025534:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025536:	3702      	adds	r7, #2
 8025538:	441d      	add	r5, r3
 802553a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802553e:	e742      	b.n	80253c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025540:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025542:	449a      	add	sl, r3
 8025544:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025546:	441d      	add	r5, r3
 8025548:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802554a:	3b01      	subs	r3, #1
 802554c:	9309      	str	r3, [sp, #36]	@ 0x24
 802554e:	f108 0802 	add.w	r8, r8, #2
 8025552:	e718      	b.n	8025386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8025554:	d023      	beq.n	802559e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8025556:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025558:	9825      	ldr	r0, [sp, #148]	@ 0x94
 802555a:	3b01      	subs	r3, #1
 802555c:	fb00 a003 	mla	r0, r0, r3, sl
 8025560:	1400      	asrs	r0, r0, #16
 8025562:	f53f af2d 	bmi.w	80253c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025566:	3901      	subs	r1, #1
 8025568:	4288      	cmp	r0, r1
 802556a:	f6bf af29 	bge.w	80253c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802556e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8025570:	fb01 5303 	mla	r3, r1, r3, r5
 8025574:	141b      	asrs	r3, r3, #16
 8025576:	f53f af23 	bmi.w	80253c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802557a:	3a01      	subs	r2, #1
 802557c:	4293      	cmp	r3, r2
 802557e:	f6bf af1f 	bge.w	80253c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025582:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8025586:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 802558a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 802558e:	f1be 0f00 	cmp.w	lr, #0
 8025592:	dc6c      	bgt.n	802566e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8025594:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025596:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802559a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 802559e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80255a0:	2b00      	cmp	r3, #0
 80255a2:	f340 810e 	ble.w	80257c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80255a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80255aa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80255ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80255b2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80255b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80255b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80255bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80255c0:	eef0 6a62 	vmov.f32	s13, s5
 80255c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80255c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80255cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80255d0:	ee16 aa90 	vmov	sl, s13
 80255d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80255d8:	eef0 6a43 	vmov.f32	s13, s6
 80255dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80255e0:	ee12 2a90 	vmov	r2, s5
 80255e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80255e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80255ec:	ee13 2a10 	vmov	r2, s6
 80255f0:	9325      	str	r3, [sp, #148]	@ 0x94
 80255f2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80255f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80255f8:	9326      	str	r3, [sp, #152]	@ 0x98
 80255fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80255fc:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80255fe:	3b01      	subs	r3, #1
 8025600:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025604:	930c      	str	r3, [sp, #48]	@ 0x30
 8025606:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8025608:	bf08      	it	eq
 802560a:	4613      	moveq	r3, r2
 802560c:	ee16 5a90 	vmov	r5, s13
 8025610:	9309      	str	r3, [sp, #36]	@ 0x24
 8025612:	eeb0 3a67 	vmov.f32	s6, s15
 8025616:	eef0 2a47 	vmov.f32	s5, s14
 802561a:	e6a6      	b.n	802536a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802561c:	2900      	cmp	r1, #0
 802561e:	f43f af10 	beq.w	8025442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8025622:	f819 3003 	ldrb.w	r3, [r9, r3]
 8025626:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802562a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802562c:	e709      	b.n	8025442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802562e:	f112 0901 	adds.w	r9, r2, #1
 8025632:	f53f af7d 	bmi.w	8025530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025636:	454b      	cmp	r3, r9
 8025638:	f6ff af7a 	blt.w	8025530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802563c:	f11c 0901 	adds.w	r9, ip, #1
 8025640:	f53f af76 	bmi.w	8025530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025644:	45ce      	cmp	lr, r9
 8025646:	f6ff af73 	blt.w	8025530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802564a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802564c:	9202      	str	r2, [sp, #8]
 802564e:	b21b      	sxth	r3, r3
 8025650:	fa0f f28e 	sxth.w	r2, lr
 8025654:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8025658:	e9cd c003 	strd	ip, r0, [sp, #12]
 802565c:	9201      	str	r2, [sp, #4]
 802565e:	9300      	str	r3, [sp, #0]
 8025660:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025662:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8025664:	4633      	mov	r3, r6
 8025666:	4639      	mov	r1, r7
 8025668:	f7ff fd8e 	bl	8025188 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 802566c:	e760      	b.n	8025530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802566e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025670:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025672:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025676:	ea4f 422a 	mov.w	r2, sl, asr #16
 802567a:	1429      	asrs	r1, r5, #16
 802567c:	fb03 2101 	mla	r1, r3, r1, r2
 8025680:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025682:	440a      	add	r2, r1
 8025684:	5c61      	ldrb	r1, [r4, r1]
 8025686:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802568a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802568e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8025692:	f1bc 0f00 	cmp.w	ip, #0
 8025696:	f000 808c 	beq.w	80257b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 802569a:	7857      	ldrb	r7, [r2, #1]
 802569c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80256a0:	9413      	str	r4, [sp, #76]	@ 0x4c
 80256a2:	b140      	cbz	r0, 80256b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80256a4:	18d7      	adds	r7, r2, r3
 80256a6:	5cd3      	ldrb	r3, [r2, r3]
 80256a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80256ac:	9310      	str	r3, [sp, #64]	@ 0x40
 80256ae:	787b      	ldrb	r3, [r7, #1]
 80256b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80256b4:	9314      	str	r3, [sp, #80]	@ 0x50
 80256b6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80256b8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80256ba:	fb1c f200 	smulbb	r2, ip, r0
 80256be:	041f      	lsls	r7, r3, #16
 80256c0:	10d2      	asrs	r2, r2, #3
 80256c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80256c6:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 80256ca:	431f      	orrs	r7, r3
 80256cc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80256d0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80256d2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80256d4:	041b      	lsls	r3, r3, #16
 80256d6:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 80256da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80256de:	ea43 030b 	orr.w	r3, r3, fp
 80256e2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80256e4:	4353      	muls	r3, r2
 80256e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80256ea:	fb04 3707 	mla	r7, r4, r7, r3
 80256ee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80256f2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80256f6:	ea43 0b01 	orr.w	fp, r3, r1
 80256fa:	f1c0 0110 	rsb	r1, r0, #16
 80256fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8025700:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025702:	eba1 0c0c 	sub.w	ip, r1, ip
 8025706:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802570a:	fb0c 770b 	mla	r7, ip, fp, r7
 802570e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8025712:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8025716:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802571a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802571e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8025722:	fb02 770c 	mla	r7, r2, ip, r7
 8025726:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8025728:	0d79      	lsrs	r1, r7, #21
 802572a:	097f      	lsrs	r7, r7, #5
 802572c:	8812      	ldrh	r2, [r2, #0]
 802572e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025732:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025736:	430f      	orrs	r7, r1
 8025738:	b2bb      	uxth	r3, r7
 802573a:	1211      	asrs	r1, r2, #8
 802573c:	1218      	asrs	r0, r3, #8
 802573e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025742:	fb11 f104 	smulbb	r1, r1, r4
 8025746:	10d7      	asrs	r7, r2, #3
 8025748:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802574c:	00d2      	lsls	r2, r2, #3
 802574e:	fb00 1009 	mla	r0, r0, r9, r1
 8025752:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8025756:	10d9      	asrs	r1, r3, #3
 8025758:	b2d2      	uxtb	r2, r2
 802575a:	00db      	lsls	r3, r3, #3
 802575c:	fb17 f704 	smulbb	r7, r7, r4
 8025760:	fb12 f204 	smulbb	r2, r2, r4
 8025764:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025768:	b2db      	uxtb	r3, r3
 802576a:	b280      	uxth	r0, r0
 802576c:	fb01 7109 	mla	r1, r1, r9, r7
 8025770:	fb03 2309 	mla	r3, r3, r9, r2
 8025774:	b29b      	uxth	r3, r3
 8025776:	b289      	uxth	r1, r1
 8025778:	1c42      	adds	r2, r0, #1
 802577a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802577e:	1c4f      	adds	r7, r1, #1
 8025780:	1c5a      	adds	r2, r3, #1
 8025782:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025786:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802578a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802578e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025792:	0949      	lsrs	r1, r1, #5
 8025794:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025796:	4310      	orrs	r0, r2
 8025798:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802579c:	4308      	orrs	r0, r1
 802579e:	f823 0b02 	strh.w	r0, [r3], #2
 80257a2:	930e      	str	r3, [sp, #56]	@ 0x38
 80257a4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80257a6:	449a      	add	sl, r3
 80257a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80257aa:	f10e 3eff 	add.w	lr, lr, #4294967295
 80257ae:	441d      	add	r5, r3
 80257b0:	e6ed      	b.n	802558e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80257b2:	2800      	cmp	r0, #0
 80257b4:	f43f af7f 	beq.w	80256b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80257b8:	5cd3      	ldrb	r3, [r2, r3]
 80257ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80257be:	9310      	str	r3, [sp, #64]	@ 0x40
 80257c0:	e779      	b.n	80256b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80257c2:	b019      	add	sp, #100	@ 0x64
 80257c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080257c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80257c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80257cc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 80257d0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80257d4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 80257d8:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 80257dc:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 80257e0:	8808      	ldrh	r0, [r1, #0]
 80257e2:	fb08 470e 	mla	r7, r8, lr, r4
 80257e6:	f1b8 0f00 	cmp.w	r8, #0
 80257ea:	eb02 0907 	add.w	r9, r2, r7
 80257ee:	db67      	blt.n	80258c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80257f0:	45c2      	cmp	sl, r8
 80257f2:	dd65      	ble.n	80258c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80257f4:	2c00      	cmp	r4, #0
 80257f6:	db61      	blt.n	80258bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80257f8:	45a6      	cmp	lr, r4
 80257fa:	dd5f      	ble.n	80258bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80257fc:	5dd2      	ldrb	r2, [r2, r7]
 80257fe:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8025802:	1c62      	adds	r2, r4, #1
 8025804:	d45f      	bmi.n	80258c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8025806:	4596      	cmp	lr, r2
 8025808:	dd5d      	ble.n	80258c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802580a:	2d00      	cmp	r5, #0
 802580c:	d05b      	beq.n	80258c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802580e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8025812:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8025816:	f118 0801 	adds.w	r8, r8, #1
 802581a:	d458      	bmi.n	80258ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802581c:	45c2      	cmp	sl, r8
 802581e:	dd56      	ble.n	80258ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025820:	2e00      	cmp	r6, #0
 8025822:	d054      	beq.n	80258ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025824:	2c00      	cmp	r4, #0
 8025826:	db50      	blt.n	80258ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8025828:	45a6      	cmp	lr, r4
 802582a:	dd4e      	ble.n	80258ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802582c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8025830:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8025834:	3401      	adds	r4, #1
 8025836:	d407      	bmi.n	8025848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8025838:	45a6      	cmp	lr, r4
 802583a:	dd05      	ble.n	8025848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802583c:	b125      	cbz	r5, 8025848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802583e:	44ce      	add	lr, r9
 8025840:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8025844:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8025848:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802584c:	fb15 f406 	smulbb	r4, r5, r6
 8025850:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025854:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8025858:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802585c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025860:	ea43 0c0c 	orr.w	ip, r3, ip
 8025864:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8025868:	f1c6 0310 	rsb	r3, r6, #16
 802586c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025870:	1b5b      	subs	r3, r3, r5
 8025872:	ea4e 0707 	orr.w	r7, lr, r7
 8025876:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802587a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802587e:	437d      	muls	r5, r7
 8025880:	fb03 5c0c 	mla	ip, r3, ip, r5
 8025884:	0403      	lsls	r3, r0, #16
 8025886:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802588a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802588e:	4318      	orrs	r0, r3
 8025890:	0413      	lsls	r3, r2, #16
 8025892:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025896:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802589a:	4313      	orrs	r3, r2
 802589c:	fb04 c000 	mla	r0, r4, r0, ip
 80258a0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80258a4:	fb06 0003 	mla	r0, r6, r3, r0
 80258a8:	0d43      	lsrs	r3, r0, #21
 80258aa:	0940      	lsrs	r0, r0, #5
 80258ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80258b0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80258b4:	4318      	orrs	r0, r3
 80258b6:	8008      	strh	r0, [r1, #0]
 80258b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80258bc:	4684      	mov	ip, r0
 80258be:	e7a0      	b.n	8025802 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80258c0:	4607      	mov	r7, r0
 80258c2:	4684      	mov	ip, r0
 80258c4:	e7a7      	b.n	8025816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80258c6:	4607      	mov	r7, r0
 80258c8:	e7a5      	b.n	8025816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80258ca:	4602      	mov	r2, r0
 80258cc:	e7b2      	b.n	8025834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80258ce:	4602      	mov	r2, r0
 80258d0:	e7ba      	b.n	8025848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080258d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80258d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80258d6:	b093      	sub	sp, #76	@ 0x4c
 80258d8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80258dc:	920f      	str	r2, [sp, #60]	@ 0x3c
 80258de:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80258e0:	9108      	str	r1, [sp, #32]
 80258e2:	9306      	str	r3, [sp, #24]
 80258e4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80258e8:	9010      	str	r0, [sp, #64]	@ 0x40
 80258ea:	6850      	ldr	r0, [r2, #4]
 80258ec:	6812      	ldr	r2, [r2, #0]
 80258ee:	fb00 1303 	mla	r3, r0, r3, r1
 80258f2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80258f6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80258f8:	681b      	ldr	r3, [r3, #0]
 80258fa:	9307      	str	r3, [sp, #28]
 80258fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80258fe:	685f      	ldr	r7, [r3, #4]
 8025900:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8025904:	3704      	adds	r7, #4
 8025906:	9b08      	ldr	r3, [sp, #32]
 8025908:	2b00      	cmp	r3, #0
 802590a:	dc03      	bgt.n	8025914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802590c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802590e:	2b00      	cmp	r3, #0
 8025910:	f340 81b2 	ble.w	8025c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025914:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025916:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802591a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802591e:	1e48      	subs	r0, r1, #1
 8025920:	f102 3cff 	add.w	ip, r2, #4294967295
 8025924:	9b06      	ldr	r3, [sp, #24]
 8025926:	2b00      	cmp	r3, #0
 8025928:	f340 80a9 	ble.w	8025a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802592c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025930:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025934:	d406      	bmi.n	8025944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8025936:	4586      	cmp	lr, r0
 8025938:	da04      	bge.n	8025944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802593a:	2b00      	cmp	r3, #0
 802593c:	db02      	blt.n	8025944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802593e:	4563      	cmp	r3, ip
 8025940:	f2c0 809e 	blt.w	8025a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8025944:	f11e 0e01 	adds.w	lr, lr, #1
 8025948:	f100 808f 	bmi.w	8025a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802594c:	4571      	cmp	r1, lr
 802594e:	f2c0 808c 	blt.w	8025a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8025952:	3301      	adds	r3, #1
 8025954:	f100 8089 	bmi.w	8025a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8025958:	429a      	cmp	r2, r3
 802595a:	f2c0 8086 	blt.w	8025a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802595e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8025962:	46c8      	mov	r8, r9
 8025964:	f1bb 0f00 	cmp.w	fp, #0
 8025968:	f340 80a6 	ble.w	8025ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 802596c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802596e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025970:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025974:	689b      	ldr	r3, [r3, #8]
 8025976:	1422      	asrs	r2, r4, #16
 8025978:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802597c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025980:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025984:	f100 80e3 	bmi.w	8025b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8025988:	f103 3aff 	add.w	sl, r3, #4294967295
 802598c:	4552      	cmp	r2, sl
 802598e:	f280 80de 	bge.w	8025b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8025992:	f1bc 0f00 	cmp.w	ip, #0
 8025996:	f2c0 80da 	blt.w	8025b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802599a:	f10e 3aff 	add.w	sl, lr, #4294967295
 802599e:	45d4      	cmp	ip, sl
 80259a0:	f280 80d5 	bge.w	8025b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80259a4:	b21b      	sxth	r3, r3
 80259a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80259aa:	9d07      	ldr	r5, [sp, #28]
 80259ac:	eb05 0a02 	add.w	sl, r5, r2
 80259b0:	5caa      	ldrb	r2, [r5, r2]
 80259b2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80259b6:	2800      	cmp	r0, #0
 80259b8:	f000 80c0 	beq.w	8025b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80259bc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80259c0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80259c4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80259c6:	b151      	cbz	r1, 80259de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80259c8:	eb0a 0203 	add.w	r2, sl, r3
 80259cc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80259d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80259d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80259d6:	7853      	ldrb	r3, [r2, #1]
 80259d8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80259dc:	930c      	str	r3, [sp, #48]	@ 0x30
 80259de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80259e0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80259e2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80259e6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80259ea:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80259ee:	ea4c 0c03 	orr.w	ip, ip, r3
 80259f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80259f4:	041b      	lsls	r3, r3, #16
 80259f6:	fb10 f201 	smulbb	r2, r0, r1
 80259fa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80259fe:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8025a02:	10d2      	asrs	r2, r2, #3
 8025a04:	432b      	orrs	r3, r5
 8025a06:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8025a0a:	4353      	muls	r3, r2
 8025a0c:	fb0a 330c 	mla	r3, sl, ip, r3
 8025a10:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8025a14:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025a18:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8025a1c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8025a20:	f1c1 0c10 	rsb	ip, r1, #16
 8025a24:	ebac 0c00 	sub.w	ip, ip, r0
 8025a28:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8025a2c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8025a30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025a32:	0418      	lsls	r0, r3, #16
 8025a34:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025a38:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025a3c:	4318      	orrs	r0, r3
 8025a3e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8025a42:	fb02 c200 	mla	r2, r2, r0, ip
 8025a46:	0d53      	lsrs	r3, r2, #21
 8025a48:	0952      	lsrs	r2, r2, #5
 8025a4a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025a4e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025a52:	431a      	orrs	r2, r3
 8025a54:	f8a8 2000 	strh.w	r2, [r8]
 8025a58:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025a5a:	441c      	add	r4, r3
 8025a5c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025a5e:	f108 0802 	add.w	r8, r8, #2
 8025a62:	441e      	add	r6, r3
 8025a64:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025a68:	e77c      	b.n	8025964 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025a6a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025a6c:	441c      	add	r4, r3
 8025a6e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025a70:	441e      	add	r6, r3
 8025a72:	9b06      	ldr	r3, [sp, #24]
 8025a74:	3b01      	subs	r3, #1
 8025a76:	9306      	str	r3, [sp, #24]
 8025a78:	f109 0902 	add.w	r9, r9, #2
 8025a7c:	e752      	b.n	8025924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025a7e:	d020      	beq.n	8025ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8025a80:	9b06      	ldr	r3, [sp, #24]
 8025a82:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8025a84:	3b01      	subs	r3, #1
 8025a86:	fb00 4003 	mla	r0, r0, r3, r4
 8025a8a:	1400      	asrs	r0, r0, #16
 8025a8c:	f53f af67 	bmi.w	802595e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8025a90:	3901      	subs	r1, #1
 8025a92:	4288      	cmp	r0, r1
 8025a94:	f6bf af63 	bge.w	802595e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8025a98:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8025a9a:	fb01 6303 	mla	r3, r1, r3, r6
 8025a9e:	141b      	asrs	r3, r3, #16
 8025aa0:	f53f af5d 	bmi.w	802595e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8025aa4:	3a01      	subs	r2, #1
 8025aa6:	4293      	cmp	r3, r2
 8025aa8:	f6bf af59 	bge.w	802595e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8025aac:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8025ab0:	46ca      	mov	sl, r9
 8025ab2:	f1b8 0f00 	cmp.w	r8, #0
 8025ab6:	dc67      	bgt.n	8025b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8025ab8:	9b06      	ldr	r3, [sp, #24]
 8025aba:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025abe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025ac2:	9b08      	ldr	r3, [sp, #32]
 8025ac4:	2b00      	cmp	r3, #0
 8025ac6:	f340 80d7 	ble.w	8025c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025aca:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025ace:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025ad2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8025ad6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025ad8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025adc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025ae0:	eeb0 6a62 	vmov.f32	s12, s5
 8025ae4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025ae8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8025aec:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025af0:	ee16 4a10 	vmov	r4, s12
 8025af4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025af8:	eeb0 6a43 	vmov.f32	s12, s6
 8025afc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025b00:	ee12 2a90 	vmov	r2, s5
 8025b04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025b08:	fb92 f3f3 	sdiv	r3, r2, r3
 8025b0c:	ee13 2a10 	vmov	r2, s6
 8025b10:	931f      	str	r3, [sp, #124]	@ 0x7c
 8025b12:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025b14:	fb92 f3f3 	sdiv	r3, r2, r3
 8025b18:	9320      	str	r3, [sp, #128]	@ 0x80
 8025b1a:	9b08      	ldr	r3, [sp, #32]
 8025b1c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8025b1e:	3b01      	subs	r3, #1
 8025b20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8025b24:	9308      	str	r3, [sp, #32]
 8025b26:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025b28:	bf08      	it	eq
 8025b2a:	4613      	moveq	r3, r2
 8025b2c:	ee16 6a10 	vmov	r6, s12
 8025b30:	9306      	str	r3, [sp, #24]
 8025b32:	eeb0 3a67 	vmov.f32	s6, s15
 8025b36:	eef0 2a47 	vmov.f32	s5, s14
 8025b3a:	e6e4      	b.n	8025906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8025b3c:	2900      	cmp	r1, #0
 8025b3e:	f43f af4e 	beq.w	80259de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8025b42:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8025b46:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8025b4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8025b4c:	e747      	b.n	80259de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8025b4e:	f112 0a01 	adds.w	sl, r2, #1
 8025b52:	d481      	bmi.n	8025a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025b54:	4553      	cmp	r3, sl
 8025b56:	f6ff af7f 	blt.w	8025a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025b5a:	f11c 0a01 	adds.w	sl, ip, #1
 8025b5e:	f53f af7b 	bmi.w	8025a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025b62:	45d6      	cmp	lr, sl
 8025b64:	f6ff af78 	blt.w	8025a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025b68:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8025b6c:	b21b      	sxth	r3, r3
 8025b6e:	fa0f f28e 	sxth.w	r2, lr
 8025b72:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8025b76:	9201      	str	r2, [sp, #4]
 8025b78:	9300      	str	r3, [sp, #0]
 8025b7a:	9a07      	ldr	r2, [sp, #28]
 8025b7c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8025b7e:	463b      	mov	r3, r7
 8025b80:	4641      	mov	r1, r8
 8025b82:	f7ff fe21 	bl	80257c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8025b86:	e767      	b.n	8025a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025b88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025b8a:	9d07      	ldr	r5, [sp, #28]
 8025b8c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025b90:	1422      	asrs	r2, r4, #16
 8025b92:	1431      	asrs	r1, r6, #16
 8025b94:	fb03 2101 	mla	r1, r3, r1, r2
 8025b98:	9a07      	ldr	r2, [sp, #28]
 8025b9a:	440a      	add	r2, r1
 8025b9c:	5c69      	ldrb	r1, [r5, r1]
 8025b9e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8025ba2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025ba6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8025baa:	f1be 0f00 	cmp.w	lr, #0
 8025bae:	d05c      	beq.n	8025c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025bb0:	f892 c001 	ldrb.w	ip, [r2, #1]
 8025bb4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8025bb8:	950d      	str	r5, [sp, #52]	@ 0x34
 8025bba:	b150      	cbz	r0, 8025bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8025bbc:	eb02 0c03 	add.w	ip, r2, r3
 8025bc0:	5cd3      	ldrb	r3, [r2, r3]
 8025bc2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8025bc6:	930a      	str	r3, [sp, #40]	@ 0x28
 8025bc8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8025bcc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8025bd0:	930e      	str	r3, [sp, #56]	@ 0x38
 8025bd2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025bd4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025bd6:	fb1e f200 	smulbb	r2, lr, r0
 8025bda:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8025bde:	10d2      	asrs	r2, r2, #3
 8025be0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025be4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025be8:	ea4c 0c03 	orr.w	ip, ip, r3
 8025bec:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8025bf0:	9311      	str	r3, [sp, #68]	@ 0x44
 8025bf2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025bf4:	041b      	lsls	r3, r3, #16
 8025bf6:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8025bfa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025bfe:	ea43 030b 	orr.w	r3, r3, fp
 8025c02:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025c04:	4353      	muls	r3, r2
 8025c06:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025c0a:	fb05 3c0c 	mla	ip, r5, ip, r3
 8025c0e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8025c12:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8025c16:	ea43 0b01 	orr.w	fp, r3, r1
 8025c1a:	f1c0 0110 	rsb	r1, r0, #16
 8025c1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025c20:	eba1 0e0e 	sub.w	lr, r1, lr
 8025c24:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8025c28:	fb0e cc0b 	mla	ip, lr, fp, ip
 8025c2c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8025c30:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8025c34:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8025c38:	ea4b 0e0e 	orr.w	lr, fp, lr
 8025c3c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8025c40:	fb02 cc0e 	mla	ip, r2, lr, ip
 8025c44:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8025c48:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025c4c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025c50:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025c54:	ea43 0c0c 	orr.w	ip, r3, ip
 8025c58:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025c5a:	f82a cb02 	strh.w	ip, [sl], #2
 8025c5e:	441c      	add	r4, r3
 8025c60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025c62:	f108 38ff 	add.w	r8, r8, #4294967295
 8025c66:	441e      	add	r6, r3
 8025c68:	e723      	b.n	8025ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8025c6a:	2800      	cmp	r0, #0
 8025c6c:	d0b1      	beq.n	8025bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8025c6e:	5cd3      	ldrb	r3, [r2, r3]
 8025c70:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8025c74:	930a      	str	r3, [sp, #40]	@ 0x28
 8025c76:	e7ac      	b.n	8025bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8025c78:	b013      	add	sp, #76	@ 0x4c
 8025c7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8025c7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c82:	880d      	ldrh	r5, [r1, #0]
 8025c84:	b087      	sub	sp, #28
 8025c86:	10ef      	asrs	r7, r5, #3
 8025c88:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8025c8c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8025c90:	00ed      	lsls	r5, r5, #3
 8025c92:	9701      	str	r7, [sp, #4]
 8025c94:	b2ed      	uxtb	r5, r5
 8025c96:	9502      	str	r5, [sp, #8]
 8025c98:	9d01      	ldr	r5, [sp, #4]
 8025c9a:	9103      	str	r1, [sp, #12]
 8025c9c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8025ca0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8025ca4:	9902      	ldr	r1, [sp, #8]
 8025ca6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8025caa:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8025cae:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8025cb2:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8025cb6:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8025cba:	022d      	lsls	r5, r5, #8
 8025cbc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8025cc0:	fb06 0709 	mla	r7, r6, r9, r0
 8025cc4:	430d      	orrs	r5, r1
 8025cc6:	2e00      	cmp	r6, #0
 8025cc8:	eb02 0c07 	add.w	ip, r2, r7
 8025ccc:	9505      	str	r5, [sp, #20]
 8025cce:	f2c0 80b6 	blt.w	8025e3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8025cd2:	45b3      	cmp	fp, r6
 8025cd4:	f340 80b3 	ble.w	8025e3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8025cd8:	2800      	cmp	r0, #0
 8025cda:	f2c0 80ae 	blt.w	8025e3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8025cde:	4581      	cmp	r9, r0
 8025ce0:	f340 80ab 	ble.w	8025e3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8025ce4:	5dd7      	ldrb	r7, [r2, r7]
 8025ce6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8025cea:	441f      	add	r7, r3
 8025cec:	1c42      	adds	r2, r0, #1
 8025cee:	f100 80a9 	bmi.w	8025e44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8025cf2:	4591      	cmp	r9, r2
 8025cf4:	f340 80a6 	ble.w	8025e44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8025cf8:	2c00      	cmp	r4, #0
 8025cfa:	f000 80a3 	beq.w	8025e44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8025cfe:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8025d02:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8025d06:	441d      	add	r5, r3
 8025d08:	3601      	adds	r6, #1
 8025d0a:	f100 809f 	bmi.w	8025e4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8025d0e:	45b3      	cmp	fp, r6
 8025d10:	f340 809c 	ble.w	8025e4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8025d14:	f1be 0f00 	cmp.w	lr, #0
 8025d18:	f000 8098 	beq.w	8025e4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8025d1c:	2800      	cmp	r0, #0
 8025d1e:	f2c0 8093 	blt.w	8025e48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8025d22:	4581      	cmp	r9, r0
 8025d24:	f340 8090 	ble.w	8025e48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8025d28:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8025d2c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8025d30:	441e      	add	r6, r3
 8025d32:	3001      	adds	r0, #1
 8025d34:	f100 808d 	bmi.w	8025e52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8025d38:	4581      	cmp	r9, r0
 8025d3a:	f340 808a 	ble.w	8025e52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8025d3e:	2c00      	cmp	r4, #0
 8025d40:	f000 8087 	beq.w	8025e52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8025d44:	44e1      	add	r9, ip
 8025d46:	f899 2001 	ldrb.w	r2, [r9, #1]
 8025d4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8025d4e:	4413      	add	r3, r2
 8025d50:	b2a4      	uxth	r4, r4
 8025d52:	fa1f fe8e 	uxth.w	lr, lr
 8025d56:	fb04 fb0e 	mul.w	fp, r4, lr
 8025d5a:	0124      	lsls	r4, r4, #4
 8025d5c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8025d60:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8025d64:	eba4 040b 	sub.w	r4, r4, fp
 8025d68:	fa1f f08e 	uxth.w	r0, lr
 8025d6c:	b2a2      	uxth	r2, r4
 8025d6e:	78ac      	ldrb	r4, [r5, #2]
 8025d70:	f897 c002 	ldrb.w	ip, [r7, #2]
 8025d74:	9901      	ldr	r1, [sp, #4]
 8025d76:	eba9 0900 	sub.w	r9, r9, r0
 8025d7a:	fa1f f989 	uxth.w	r9, r9
 8025d7e:	4354      	muls	r4, r2
 8025d80:	fb09 440c 	mla	r4, r9, ip, r4
 8025d84:	f896 c002 	ldrb.w	ip, [r6, #2]
 8025d88:	fb00 440c 	mla	r4, r0, ip, r4
 8025d8c:	f893 c002 	ldrb.w	ip, [r3, #2]
 8025d90:	fa1f fe88 	uxth.w	lr, r8
 8025d94:	ea6f 0808 	mvn.w	r8, r8
 8025d98:	fa5f f888 	uxtb.w	r8, r8
 8025d9c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8025da0:	fb1a fa08 	smulbb	sl, sl, r8
 8025da4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8025da8:	fb0c ac0e 	mla	ip, ip, lr, sl
 8025dac:	f895 a001 	ldrb.w	sl, [r5, #1]
 8025db0:	787c      	ldrb	r4, [r7, #1]
 8025db2:	782d      	ldrb	r5, [r5, #0]
 8025db4:	783f      	ldrb	r7, [r7, #0]
 8025db6:	fb02 fa0a 	mul.w	sl, r2, sl
 8025dba:	fb09 aa04 	mla	sl, r9, r4, sl
 8025dbe:	7874      	ldrb	r4, [r6, #1]
 8025dc0:	436a      	muls	r2, r5
 8025dc2:	7835      	ldrb	r5, [r6, #0]
 8025dc4:	fb00 aa04 	mla	sl, r0, r4, sl
 8025dc8:	fb09 2207 	mla	r2, r9, r7, r2
 8025dcc:	785c      	ldrb	r4, [r3, #1]
 8025dce:	781b      	ldrb	r3, [r3, #0]
 8025dd0:	fb00 2005 	mla	r0, r0, r5, r2
 8025dd4:	fb0b a404 	mla	r4, fp, r4, sl
 8025dd8:	fb0b 0b03 	mla	fp, fp, r3, r0
 8025ddc:	9b02      	ldr	r3, [sp, #8]
 8025dde:	fb11 fa08 	smulbb	sl, r1, r8
 8025de2:	fa1f fc8c 	uxth.w	ip, ip
 8025de6:	fb13 f808 	smulbb	r8, r3, r8
 8025dea:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8025dee:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8025df2:	fb04 a40e 	mla	r4, r4, lr, sl
 8025df6:	f10c 0301 	add.w	r3, ip, #1
 8025dfa:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8025dfe:	fa1f fe8e 	uxth.w	lr, lr
 8025e02:	b2a4      	uxth	r4, r4
 8025e04:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025e08:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8025e0c:	f104 0a01 	add.w	sl, r4, #1
 8025e10:	f10e 0c01 	add.w	ip, lr, #1
 8025e14:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025e18:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8025e1c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025e20:	0964      	lsrs	r4, r4, #5
 8025e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8025e26:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025e2a:	9b03      	ldr	r3, [sp, #12]
 8025e2c:	ea4c 0c04 	orr.w	ip, ip, r4
 8025e30:	f8a3 c000 	strh.w	ip, [r3]
 8025e34:	b007      	add	sp, #28
 8025e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e3a:	af05      	add	r7, sp, #20
 8025e3c:	e756      	b.n	8025cec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8025e3e:	ad05      	add	r5, sp, #20
 8025e40:	462f      	mov	r7, r5
 8025e42:	e761      	b.n	8025d08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8025e44:	ad05      	add	r5, sp, #20
 8025e46:	e75f      	b.n	8025d08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8025e48:	ae05      	add	r6, sp, #20
 8025e4a:	e772      	b.n	8025d32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8025e4c:	ab05      	add	r3, sp, #20
 8025e4e:	461e      	mov	r6, r3
 8025e50:	e77e      	b.n	8025d50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8025e52:	ab05      	add	r3, sp, #20
 8025e54:	e77c      	b.n	8025d50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08025e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025e56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e5a:	b095      	sub	sp, #84	@ 0x54
 8025e5c:	9212      	str	r2, [sp, #72]	@ 0x48
 8025e5e:	9309      	str	r3, [sp, #36]	@ 0x24
 8025e60:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8025e62:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8025e66:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025e68:	910e      	str	r1, [sp, #56]	@ 0x38
 8025e6a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8025e6e:	9013      	str	r0, [sp, #76]	@ 0x4c
 8025e70:	6850      	ldr	r0, [r2, #4]
 8025e72:	6812      	ldr	r2, [r2, #0]
 8025e74:	fb00 1303 	mla	r3, r0, r3, r1
 8025e78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025e7c:	930a      	str	r3, [sp, #40]	@ 0x28
 8025e7e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025e80:	681b      	ldr	r3, [r3, #0]
 8025e82:	930d      	str	r3, [sp, #52]	@ 0x34
 8025e84:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025e86:	685c      	ldr	r4, [r3, #4]
 8025e88:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025e8a:	43db      	mvns	r3, r3
 8025e8c:	b2db      	uxtb	r3, r3
 8025e8e:	3404      	adds	r4, #4
 8025e90:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025e92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025e94:	2b00      	cmp	r3, #0
 8025e96:	dc03      	bgt.n	8025ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8025e98:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8025e9a:	2b00      	cmp	r3, #0
 8025e9c:	f340 8255 	ble.w	802634a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8025ea0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025ea2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ea6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025eaa:	1e48      	subs	r0, r1, #1
 8025eac:	1e55      	subs	r5, r2, #1
 8025eae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025eb0:	2b00      	cmp	r3, #0
 8025eb2:	f340 80f9 	ble.w	80260a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8025eb6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8025eb8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025eba:	1436      	asrs	r6, r6, #16
 8025ebc:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025ec0:	d406      	bmi.n	8025ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025ec2:	4286      	cmp	r6, r0
 8025ec4:	da04      	bge.n	8025ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025ec6:	2b00      	cmp	r3, #0
 8025ec8:	db02      	blt.n	8025ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025eca:	42ab      	cmp	r3, r5
 8025ecc:	f2c0 80ed 	blt.w	80260aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8025ed0:	3601      	adds	r6, #1
 8025ed2:	f100 80da 	bmi.w	802608a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025ed6:	42b1      	cmp	r1, r6
 8025ed8:	f2c0 80d7 	blt.w	802608a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025edc:	3301      	adds	r3, #1
 8025ede:	f100 80d4 	bmi.w	802608a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025ee2:	429a      	cmp	r2, r3
 8025ee4:	f2c0 80d1 	blt.w	802608a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025ee8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025eea:	9311      	str	r3, [sp, #68]	@ 0x44
 8025eec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025eee:	930c      	str	r3, [sp, #48]	@ 0x30
 8025ef0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025ef2:	2b00      	cmp	r3, #0
 8025ef4:	f340 80fa 	ble.w	80260ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8025ef8:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8025efa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025efc:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8025efe:	68c6      	ldr	r6, [r0, #12]
 8025f00:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8025f02:	141d      	asrs	r5, r3, #16
 8025f04:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8025f08:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025f0a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8025f0c:	1400      	asrs	r0, r0, #16
 8025f0e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8025f12:	6892      	ldr	r2, [r2, #8]
 8025f14:	f100 813e 	bmi.w	8026194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8025f18:	1e57      	subs	r7, r2, #1
 8025f1a:	42b8      	cmp	r0, r7
 8025f1c:	f280 813a 	bge.w	8026194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8025f20:	2d00      	cmp	r5, #0
 8025f22:	f2c0 8137 	blt.w	8026194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8025f26:	1e77      	subs	r7, r6, #1
 8025f28:	42bd      	cmp	r5, r7
 8025f2a:	f280 8133 	bge.w	8026194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8025f2e:	b212      	sxth	r2, r2
 8025f30:	fb05 0002 	mla	r0, r5, r2, r0
 8025f34:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025f36:	f815 a000 	ldrb.w	sl, [r5, r0]
 8025f3a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8025f3e:	182e      	adds	r6, r5, r0
 8025f40:	eb04 050a 	add.w	r5, r4, sl
 8025f44:	2b00      	cmp	r3, #0
 8025f46:	f000 8117 	beq.w	8026178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8025f4a:	f896 c001 	ldrb.w	ip, [r6, #1]
 8025f4e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8025f52:	44a4      	add	ip, r4
 8025f54:	2900      	cmp	r1, #0
 8025f56:	f000 8117 	beq.w	8026188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8025f5a:	18b0      	adds	r0, r6, r2
 8025f5c:	5cb2      	ldrb	r2, [r6, r2]
 8025f5e:	7840      	ldrb	r0, [r0, #1]
 8025f60:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8025f64:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025f68:	4422      	add	r2, r4
 8025f6a:	4420      	add	r0, r4
 8025f6c:	b29b      	uxth	r3, r3
 8025f6e:	b289      	uxth	r1, r1
 8025f70:	fb03 f901 	mul.w	r9, r3, r1
 8025f74:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025f78:	011b      	lsls	r3, r3, #4
 8025f7a:	b289      	uxth	r1, r1
 8025f7c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8025f80:	f895 b002 	ldrb.w	fp, [r5, #2]
 8025f84:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8025f86:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8025f8a:	f8b6 e000 	ldrh.w	lr, [r6]
 8025f8e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8025f92:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8025f96:	eba3 0309 	sub.w	r3, r3, r9
 8025f9a:	b29b      	uxth	r3, r3
 8025f9c:	eba8 0801 	sub.w	r8, r8, r1
 8025fa0:	fa1f f888 	uxth.w	r8, r8
 8025fa4:	435f      	muls	r7, r3
 8025fa6:	fb08 770b 	mla	r7, r8, fp, r7
 8025faa:	f892 b002 	ldrb.w	fp, [r2, #2]
 8025fae:	9310      	str	r3, [sp, #64]	@ 0x40
 8025fb0:	fb01 770b 	mla	r7, r1, fp, r7
 8025fb4:	f890 b002 	ldrb.w	fp, [r0, #2]
 8025fb8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025fba:	fb09 770b 	mla	r7, r9, fp, r7
 8025fbe:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8025fc2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8025fc6:	fb1b fb03 	smulbb	fp, fp, r3
 8025fca:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025fce:	fb07 b706 	mla	r7, r7, r6, fp
 8025fd2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8025fd4:	f895 b001 	ldrb.w	fp, [r5, #1]
 8025fd8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8025fdc:	f89c c000 	ldrb.w	ip, [ip]
 8025fe0:	435d      	muls	r5, r3
 8025fe2:	fb08 550b 	mla	r5, r8, fp, r5
 8025fe6:	f892 b001 	ldrb.w	fp, [r2, #1]
 8025fea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025fec:	fb01 550b 	mla	r5, r1, fp, r5
 8025ff0:	f890 b001 	ldrb.w	fp, [r0, #1]
 8025ff4:	fb09 550b 	mla	r5, r9, fp, r5
 8025ff8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8025ffc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8026000:	fb1b fb03 	smulbb	fp, fp, r3
 8026004:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026006:	fb03 f30c 	mul.w	r3, r3, ip
 802600a:	f892 c000 	ldrb.w	ip, [r2]
 802600e:	fb08 330a 	mla	r3, r8, sl, r3
 8026012:	fb01 330c 	mla	r3, r1, ip, r3
 8026016:	f890 c000 	ldrb.w	ip, [r0]
 802601a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802601e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026022:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026024:	fa5f fe8e 	uxtb.w	lr, lr
 8026028:	b2bf      	uxth	r7, r7
 802602a:	fb1e fe03 	smulbb	lr, lr, r3
 802602e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026032:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8026036:	fb05 b506 	mla	r5, r5, r6, fp
 802603a:	1c7b      	adds	r3, r7, #1
 802603c:	fb0c e606 	mla	r6, ip, r6, lr
 8026040:	b2ad      	uxth	r5, r5
 8026042:	b2b6      	uxth	r6, r6
 8026044:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8026048:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 802604c:	f105 0b01 	add.w	fp, r5, #1
 8026050:	1c77      	adds	r7, r6, #1
 8026052:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8026056:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802605a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802605e:	096d      	lsrs	r5, r5, #5
 8026060:	431f      	orrs	r7, r3
 8026062:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8026066:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026068:	433d      	orrs	r5, r7
 802606a:	801d      	strh	r5, [r3, #0]
 802606c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802606e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8026070:	3302      	adds	r3, #2
 8026072:	930c      	str	r3, [sp, #48]	@ 0x30
 8026074:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026076:	4413      	add	r3, r2
 8026078:	931f      	str	r3, [sp, #124]	@ 0x7c
 802607a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802607c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802607e:	4413      	add	r3, r2
 8026080:	9320      	str	r3, [sp, #128]	@ 0x80
 8026082:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8026084:	3b01      	subs	r3, #1
 8026086:	9311      	str	r3, [sp, #68]	@ 0x44
 8026088:	e732      	b.n	8025ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802608a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802608c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 802608e:	4433      	add	r3, r6
 8026090:	931f      	str	r3, [sp, #124]	@ 0x7c
 8026092:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8026094:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026096:	4433      	add	r3, r6
 8026098:	9320      	str	r3, [sp, #128]	@ 0x80
 802609a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802609c:	3b01      	subs	r3, #1
 802609e:	9309      	str	r3, [sp, #36]	@ 0x24
 80260a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80260a2:	3302      	adds	r3, #2
 80260a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80260a6:	e702      	b.n	8025eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80260a8:	d027      	beq.n	80260fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80260aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80260ac:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80260ae:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 80260b0:	3b01      	subs	r3, #1
 80260b2:	fb00 5003 	mla	r0, r0, r3, r5
 80260b6:	1400      	asrs	r0, r0, #16
 80260b8:	f53f af16 	bmi.w	8025ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80260bc:	3901      	subs	r1, #1
 80260be:	4288      	cmp	r0, r1
 80260c0:	f6bf af12 	bge.w	8025ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80260c4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 80260c6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80260c8:	fb01 0303 	mla	r3, r1, r3, r0
 80260cc:	141b      	asrs	r3, r3, #16
 80260ce:	f53f af0b 	bmi.w	8025ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80260d2:	3a01      	subs	r2, #1
 80260d4:	4293      	cmp	r3, r2
 80260d6:	f6bf af07 	bge.w	8025ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80260da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80260dc:	9311      	str	r3, [sp, #68]	@ 0x44
 80260de:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 80260e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80260e4:	930c      	str	r3, [sp, #48]	@ 0x30
 80260e6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80260e8:	2b00      	cmp	r3, #0
 80260ea:	dc70      	bgt.n	80261ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80260ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80260ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80260f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80260f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80260f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80260fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80260fc:	2b00      	cmp	r3, #0
 80260fe:	f340 8124 	ble.w	802634a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8026102:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026106:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802610a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802610e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026110:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026114:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026118:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802611c:	eef0 6a62 	vmov.f32	s13, s5
 8026120:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026124:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026128:	ee77 2a62 	vsub.f32	s5, s14, s5
 802612c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8026130:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026134:	eef0 6a43 	vmov.f32	s13, s6
 8026138:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802613c:	ee12 2a90 	vmov	r2, s5
 8026140:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026144:	fb92 f3f3 	sdiv	r3, r2, r3
 8026148:	ee13 2a10 	vmov	r2, s6
 802614c:	9321      	str	r3, [sp, #132]	@ 0x84
 802614e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026150:	fb92 f3f3 	sdiv	r3, r2, r3
 8026154:	9322      	str	r3, [sp, #136]	@ 0x88
 8026156:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026158:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802615a:	3b01      	subs	r3, #1
 802615c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026160:	930e      	str	r3, [sp, #56]	@ 0x38
 8026162:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026164:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8026168:	bf08      	it	eq
 802616a:	4613      	moveq	r3, r2
 802616c:	9309      	str	r3, [sp, #36]	@ 0x24
 802616e:	eeb0 3a67 	vmov.f32	s6, s15
 8026172:	eef0 2a47 	vmov.f32	s5, s14
 8026176:	e68c      	b.n	8025e92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8026178:	b149      	cbz	r1, 802618e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802617a:	5cb2      	ldrb	r2, [r6, r2]
 802617c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026180:	4422      	add	r2, r4
 8026182:	4628      	mov	r0, r5
 8026184:	46ac      	mov	ip, r5
 8026186:	e6f1      	b.n	8025f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8026188:	4628      	mov	r0, r5
 802618a:	462a      	mov	r2, r5
 802618c:	e6ee      	b.n	8025f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802618e:	4628      	mov	r0, r5
 8026190:	462a      	mov	r2, r5
 8026192:	e7f7      	b.n	8026184 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8026194:	1c47      	adds	r7, r0, #1
 8026196:	f53f af69 	bmi.w	802606c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802619a:	42ba      	cmp	r2, r7
 802619c:	f6ff af66 	blt.w	802606c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80261a0:	1c6f      	adds	r7, r5, #1
 80261a2:	f53f af63 	bmi.w	802606c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80261a6:	42be      	cmp	r6, r7
 80261a8:	f6ff af60 	blt.w	802606c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80261ac:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80261ae:	9002      	str	r0, [sp, #8]
 80261b0:	b236      	sxth	r6, r6
 80261b2:	b212      	sxth	r2, r2
 80261b4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80261b8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80261bc:	9200      	str	r2, [sp, #0]
 80261be:	9601      	str	r6, [sp, #4]
 80261c0:	4623      	mov	r3, r4
 80261c2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 80261c6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80261c8:	f7ff fd59 	bl	8025c7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80261cc:	e74e      	b.n	802606c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80261ce:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80261d0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80261d2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 80261d4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80261d6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80261da:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80261dc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80261e0:	142d      	asrs	r5, r5, #16
 80261e2:	1400      	asrs	r0, r0, #16
 80261e4:	fb02 5000 	mla	r0, r2, r0, r5
 80261e8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80261ea:	f815 9000 	ldrb.w	r9, [r5, r0]
 80261ee:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80261f2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80261f6:	182e      	adds	r6, r5, r0
 80261f8:	eb04 0509 	add.w	r5, r4, r9
 80261fc:	2b00      	cmp	r3, #0
 80261fe:	f000 8096 	beq.w	802632e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026202:	7877      	ldrb	r7, [r6, #1]
 8026204:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8026208:	4427      	add	r7, r4
 802620a:	2900      	cmp	r1, #0
 802620c:	f000 8097 	beq.w	802633e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8026210:	18b0      	adds	r0, r6, r2
 8026212:	5cb2      	ldrb	r2, [r6, r2]
 8026214:	7840      	ldrb	r0, [r0, #1]
 8026216:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802621a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802621e:	4422      	add	r2, r4
 8026220:	4420      	add	r0, r4
 8026222:	b29b      	uxth	r3, r3
 8026224:	b289      	uxth	r1, r1
 8026226:	fb03 f801 	mul.w	r8, r3, r1
 802622a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802622c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8026230:	f8b6 c000 	ldrh.w	ip, [r6]
 8026234:	78be      	ldrb	r6, [r7, #2]
 8026236:	f814 9009 	ldrb.w	r9, [r4, r9]
 802623a:	011b      	lsls	r3, r3, #4
 802623c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8026240:	b289      	uxth	r1, r1
 8026242:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8026246:	eba3 0308 	sub.w	r3, r3, r8
 802624a:	b29b      	uxth	r3, r3
 802624c:	ebae 0e01 	sub.w	lr, lr, r1
 8026250:	fa1f fe8e 	uxth.w	lr, lr
 8026254:	435e      	muls	r6, r3
 8026256:	fb0e 660b 	mla	r6, lr, fp, r6
 802625a:	f892 b002 	ldrb.w	fp, [r2, #2]
 802625e:	9310      	str	r3, [sp, #64]	@ 0x40
 8026260:	fb01 660b 	mla	r6, r1, fp, r6
 8026264:	f890 b002 	ldrb.w	fp, [r0, #2]
 8026268:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802626a:	fb08 660b 	mla	r6, r8, fp, r6
 802626e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8026272:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8026276:	fb1b fb03 	smulbb	fp, fp, r3
 802627a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802627e:	fb06 b60a 	mla	r6, r6, sl, fp
 8026282:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026284:	f895 b001 	ldrb.w	fp, [r5, #1]
 8026288:	787d      	ldrb	r5, [r7, #1]
 802628a:	783f      	ldrb	r7, [r7, #0]
 802628c:	435d      	muls	r5, r3
 802628e:	fb0e 550b 	mla	r5, lr, fp, r5
 8026292:	f892 b001 	ldrb.w	fp, [r2, #1]
 8026296:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026298:	fb01 550b 	mla	r5, r1, fp, r5
 802629c:	f890 b001 	ldrb.w	fp, [r0, #1]
 80262a0:	fb08 550b 	mla	r5, r8, fp, r5
 80262a4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80262a8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80262ac:	fb1b fb03 	smulbb	fp, fp, r3
 80262b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80262b2:	437b      	muls	r3, r7
 80262b4:	7817      	ldrb	r7, [r2, #0]
 80262b6:	fb0e 3309 	mla	r3, lr, r9, r3
 80262ba:	fb01 3307 	mla	r3, r1, r7, r3
 80262be:	7807      	ldrb	r7, [r0, #0]
 80262c0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80262c4:	fb08 3707 	mla	r7, r8, r7, r3
 80262c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80262ca:	fa5f fc8c 	uxtb.w	ip, ip
 80262ce:	fb1c fc03 	smulbb	ip, ip, r3
 80262d2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80262d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80262da:	fb05 b50a 	mla	r5, r5, sl, fp
 80262de:	fb07 c70a 	mla	r7, r7, sl, ip
 80262e2:	b2b6      	uxth	r6, r6
 80262e4:	b2ad      	uxth	r5, r5
 80262e6:	b2bf      	uxth	r7, r7
 80262e8:	1c73      	adds	r3, r6, #1
 80262ea:	1c7a      	adds	r2, r7, #1
 80262ec:	f105 0b01 	add.w	fp, r5, #1
 80262f0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80262f4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80262f8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80262fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026300:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8026304:	096d      	lsrs	r5, r5, #5
 8026306:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026308:	4316      	orrs	r6, r2
 802630a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802630e:	432e      	orrs	r6, r5
 8026310:	f823 6b02 	strh.w	r6, [r3], #2
 8026314:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8026316:	930c      	str	r3, [sp, #48]	@ 0x30
 8026318:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802631a:	4413      	add	r3, r2
 802631c:	931f      	str	r3, [sp, #124]	@ 0x7c
 802631e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8026320:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026322:	4413      	add	r3, r2
 8026324:	9320      	str	r3, [sp, #128]	@ 0x80
 8026326:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8026328:	3b01      	subs	r3, #1
 802632a:	9311      	str	r3, [sp, #68]	@ 0x44
 802632c:	e6db      	b.n	80260e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 802632e:	b149      	cbz	r1, 8026344 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8026330:	5cb2      	ldrb	r2, [r6, r2]
 8026332:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026336:	4422      	add	r2, r4
 8026338:	4628      	mov	r0, r5
 802633a:	462f      	mov	r7, r5
 802633c:	e771      	b.n	8026222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802633e:	4628      	mov	r0, r5
 8026340:	462a      	mov	r2, r5
 8026342:	e76e      	b.n	8026222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8026344:	4628      	mov	r0, r5
 8026346:	462a      	mov	r2, r5
 8026348:	e7f7      	b.n	802633a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802634a:	b015      	add	sp, #84	@ 0x54
 802634c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8026350:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026354:	880f      	ldrh	r7, [r1, #0]
 8026356:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 802635a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802635e:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8026362:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8026366:	023c      	lsls	r4, r7, #8
 8026368:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 802636c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8026370:	017c      	lsls	r4, r7, #5
 8026372:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8026376:	00ff      	lsls	r7, r7, #3
 8026378:	ea4b 0404 	orr.w	r4, fp, r4
 802637c:	b2ff      	uxtb	r7, r7
 802637e:	fb05 ca0e 	mla	sl, r5, lr, ip
 8026382:	4327      	orrs	r7, r4
 8026384:	2d00      	cmp	r5, #0
 8026386:	eb02 080a 	add.w	r8, r2, sl
 802638a:	9701      	str	r7, [sp, #4]
 802638c:	db7e      	blt.n	802648c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802638e:	45a9      	cmp	r9, r5
 8026390:	dd7c      	ble.n	802648c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8026392:	f1bc 0f00 	cmp.w	ip, #0
 8026396:	db77      	blt.n	8026488 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8026398:	45e6      	cmp	lr, ip
 802639a:	dd75      	ble.n	8026488 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802639c:	f812 700a 	ldrb.w	r7, [r2, sl]
 80263a0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80263a4:	441f      	add	r7, r3
 80263a6:	f11c 0201 	adds.w	r2, ip, #1
 80263aa:	d472      	bmi.n	8026492 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80263ac:	4596      	cmp	lr, r2
 80263ae:	dd70      	ble.n	8026492 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80263b0:	2800      	cmp	r0, #0
 80263b2:	d06e      	beq.n	8026492 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80263b4:	f898 4001 	ldrb.w	r4, [r8, #1]
 80263b8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80263bc:	441c      	add	r4, r3
 80263be:	3501      	adds	r5, #1
 80263c0:	d46b      	bmi.n	802649a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80263c2:	45a9      	cmp	r9, r5
 80263c4:	dd69      	ble.n	802649a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80263c6:	2e00      	cmp	r6, #0
 80263c8:	d067      	beq.n	802649a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80263ca:	f1bc 0f00 	cmp.w	ip, #0
 80263ce:	db62      	blt.n	8026496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80263d0:	45e6      	cmp	lr, ip
 80263d2:	dd60      	ble.n	8026496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80263d4:	f818 500e 	ldrb.w	r5, [r8, lr]
 80263d8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80263dc:	441d      	add	r5, r3
 80263de:	f11c 0201 	adds.w	r2, ip, #1
 80263e2:	d45d      	bmi.n	80264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80263e4:	4596      	cmp	lr, r2
 80263e6:	dd5b      	ble.n	80264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80263e8:	2800      	cmp	r0, #0
 80263ea:	d059      	beq.n	80264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80263ec:	44c6      	add	lr, r8
 80263ee:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80263f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80263f6:	4413      	add	r3, r2
 80263f8:	b280      	uxth	r0, r0
 80263fa:	b2b2      	uxth	r2, r6
 80263fc:	fb00 f602 	mul.w	r6, r0, r2
 8026400:	0100      	lsls	r0, r0, #4
 8026402:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8026406:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 802640a:	1b80      	subs	r0, r0, r6
 802640c:	fa1f fc82 	uxth.w	ip, r2
 8026410:	b282      	uxth	r2, r0
 8026412:	78a0      	ldrb	r0, [r4, #2]
 8026414:	f897 e002 	ldrb.w	lr, [r7, #2]
 8026418:	f897 9000 	ldrb.w	r9, [r7]
 802641c:	787f      	ldrb	r7, [r7, #1]
 802641e:	eba8 080c 	sub.w	r8, r8, ip
 8026422:	fa1f f888 	uxth.w	r8, r8
 8026426:	4350      	muls	r0, r2
 8026428:	fb08 0e0e 	mla	lr, r8, lr, r0
 802642c:	78a8      	ldrb	r0, [r5, #2]
 802642e:	fb0c e000 	mla	r0, ip, r0, lr
 8026432:	f893 e002 	ldrb.w	lr, [r3, #2]
 8026436:	fb06 0e0e 	mla	lr, r6, lr, r0
 802643a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 802643e:	f894 e000 	ldrb.w	lr, [r4]
 8026442:	fb02 fe0e 	mul.w	lr, r2, lr
 8026446:	fb08 e909 	mla	r9, r8, r9, lr
 802644a:	f895 e000 	ldrb.w	lr, [r5]
 802644e:	fb0c 990e 	mla	r9, ip, lr, r9
 8026452:	f893 e000 	ldrb.w	lr, [r3]
 8026456:	785b      	ldrb	r3, [r3, #1]
 8026458:	fb06 9e0e 	mla	lr, r6, lr, r9
 802645c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8026460:	ea4e 0e00 	orr.w	lr, lr, r0
 8026464:	7860      	ldrb	r0, [r4, #1]
 8026466:	4350      	muls	r0, r2
 8026468:	786a      	ldrb	r2, [r5, #1]
 802646a:	fb08 0007 	mla	r0, r8, r7, r0
 802646e:	fb0c 0202 	mla	r2, ip, r2, r0
 8026472:	fb06 2303 	mla	r3, r6, r3, r2
 8026476:	095b      	lsrs	r3, r3, #5
 8026478:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802647c:	ea4e 0303 	orr.w	r3, lr, r3
 8026480:	800b      	strh	r3, [r1, #0]
 8026482:	b003      	add	sp, #12
 8026484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026488:	af01      	add	r7, sp, #4
 802648a:	e78c      	b.n	80263a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 802648c:	ac01      	add	r4, sp, #4
 802648e:	4627      	mov	r7, r4
 8026490:	e795      	b.n	80263be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8026492:	ac01      	add	r4, sp, #4
 8026494:	e793      	b.n	80263be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8026496:	ad01      	add	r5, sp, #4
 8026498:	e7a1      	b.n	80263de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802649a:	ab01      	add	r3, sp, #4
 802649c:	461d      	mov	r5, r3
 802649e:	e7ab      	b.n	80263f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80264a0:	ab01      	add	r3, sp, #4
 80264a2:	e7a9      	b.n	80263f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080264a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80264a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80264a8:	b08f      	sub	sp, #60	@ 0x3c
 80264aa:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 80264ae:	920c      	str	r2, [sp, #48]	@ 0x30
 80264b0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80264b2:	910a      	str	r1, [sp, #40]	@ 0x28
 80264b4:	9306      	str	r3, [sp, #24]
 80264b6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 80264ba:	900d      	str	r0, [sp, #52]	@ 0x34
 80264bc:	6850      	ldr	r0, [r2, #4]
 80264be:	6812      	ldr	r2, [r2, #0]
 80264c0:	fb00 1303 	mla	r3, r0, r3, r1
 80264c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80264c8:	9307      	str	r3, [sp, #28]
 80264ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80264cc:	681b      	ldr	r3, [r3, #0]
 80264ce:	9308      	str	r3, [sp, #32]
 80264d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80264d2:	685c      	ldr	r4, [r3, #4]
 80264d4:	3404      	adds	r4, #4
 80264d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80264d8:	2b00      	cmp	r3, #0
 80264da:	dc03      	bgt.n	80264e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80264dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80264de:	2b00      	cmp	r3, #0
 80264e0:	f340 81d6 	ble.w	8026890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80264e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80264e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80264ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80264ee:	1e48      	subs	r0, r1, #1
 80264f0:	1e56      	subs	r6, r2, #1
 80264f2:	9b06      	ldr	r3, [sp, #24]
 80264f4:	2b00      	cmp	r3, #0
 80264f6:	f340 80b7 	ble.w	8026668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80264fa:	ea5f 472b 	movs.w	r7, fp, asr #16
 80264fe:	ea4f 4325 	mov.w	r3, r5, asr #16
 8026502:	d406      	bmi.n	8026512 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026504:	4287      	cmp	r7, r0
 8026506:	da04      	bge.n	8026512 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026508:	2b00      	cmp	r3, #0
 802650a:	db02      	blt.n	8026512 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802650c:	42b3      	cmp	r3, r6
 802650e:	f2c0 80ac 	blt.w	802666a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8026512:	3701      	adds	r7, #1
 8026514:	f100 809d 	bmi.w	8026652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026518:	42b9      	cmp	r1, r7
 802651a:	f2c0 809a 	blt.w	8026652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802651e:	3301      	adds	r3, #1
 8026520:	f100 8097 	bmi.w	8026652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026524:	429a      	cmp	r2, r3
 8026526:	f2c0 8094 	blt.w	8026652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802652a:	9b06      	ldr	r3, [sp, #24]
 802652c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802652e:	9b07      	ldr	r3, [sp, #28]
 8026530:	9309      	str	r3, [sp, #36]	@ 0x24
 8026532:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026534:	2b00      	cmp	r3, #0
 8026536:	f340 80b5 	ble.w	80266a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802653a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802653c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802653e:	68c7      	ldr	r7, [r0, #12]
 8026540:	6892      	ldr	r2, [r2, #8]
 8026542:	ea5f 402b 	movs.w	r0, fp, asr #16
 8026546:	ea4f 4625 	mov.w	r6, r5, asr #16
 802654a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802654e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8026552:	f100 80fb 	bmi.w	802674c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026556:	f102 3cff 	add.w	ip, r2, #4294967295
 802655a:	4560      	cmp	r0, ip
 802655c:	f280 80f6 	bge.w	802674c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026560:	2e00      	cmp	r6, #0
 8026562:	f2c0 80f3 	blt.w	802674c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026566:	f107 3cff 	add.w	ip, r7, #4294967295
 802656a:	4566      	cmp	r6, ip
 802656c:	f280 80ee 	bge.w	802674c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026570:	b212      	sxth	r2, r2
 8026572:	fb06 0002 	mla	r0, r6, r2, r0
 8026576:	9e08      	ldr	r6, [sp, #32]
 8026578:	1837      	adds	r7, r6, r0
 802657a:	5c30      	ldrb	r0, [r6, r0]
 802657c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8026580:	eb04 0c08 	add.w	ip, r4, r8
 8026584:	2b00      	cmp	r3, #0
 8026586:	f000 80d3 	beq.w	8026730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802658a:	787e      	ldrb	r6, [r7, #1]
 802658c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026590:	4426      	add	r6, r4
 8026592:	2900      	cmp	r1, #0
 8026594:	f000 80d4 	beq.w	8026740 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8026598:	18b8      	adds	r0, r7, r2
 802659a:	5cba      	ldrb	r2, [r7, r2]
 802659c:	7840      	ldrb	r0, [r0, #1]
 802659e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80265a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80265a6:	4422      	add	r2, r4
 80265a8:	4420      	add	r0, r4
 80265aa:	b29b      	uxth	r3, r3
 80265ac:	b289      	uxth	r1, r1
 80265ae:	fb03 f901 	mul.w	r9, r3, r1
 80265b2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80265b6:	011b      	lsls	r3, r3, #4
 80265b8:	b289      	uxth	r1, r1
 80265ba:	78b7      	ldrb	r7, [r6, #2]
 80265bc:	f89c a002 	ldrb.w	sl, [ip, #2]
 80265c0:	f89c c001 	ldrb.w	ip, [ip, #1]
 80265c4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80265c8:	eba3 0309 	sub.w	r3, r3, r9
 80265cc:	b29b      	uxth	r3, r3
 80265ce:	ebae 0e01 	sub.w	lr, lr, r1
 80265d2:	fa1f fe8e 	uxth.w	lr, lr
 80265d6:	435f      	muls	r7, r3
 80265d8:	fb0e 770a 	mla	r7, lr, sl, r7
 80265dc:	f892 a002 	ldrb.w	sl, [r2, #2]
 80265e0:	fb01 770a 	mla	r7, r1, sl, r7
 80265e4:	f890 a002 	ldrb.w	sl, [r0, #2]
 80265e8:	fb09 7a0a 	mla	sl, r9, sl, r7
 80265ec:	f814 7008 	ldrb.w	r7, [r4, r8]
 80265f0:	f896 8000 	ldrb.w	r8, [r6]
 80265f4:	7876      	ldrb	r6, [r6, #1]
 80265f6:	fb03 f808 	mul.w	r8, r3, r8
 80265fa:	fb0e 8807 	mla	r8, lr, r7, r8
 80265fe:	7817      	ldrb	r7, [r2, #0]
 8026600:	fb01 8807 	mla	r8, r1, r7, r8
 8026604:	7807      	ldrb	r7, [r0, #0]
 8026606:	fb09 8707 	mla	r7, r9, r7, r8
 802660a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 802660e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8026612:	ea47 070a 	orr.w	r7, r7, sl
 8026616:	4373      	muls	r3, r6
 8026618:	f892 a001 	ldrb.w	sl, [r2, #1]
 802661c:	fb0e 330c 	mla	r3, lr, ip, r3
 8026620:	fb01 310a 	mla	r1, r1, sl, r3
 8026624:	f890 a001 	ldrb.w	sl, [r0, #1]
 8026628:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802662a:	fb09 1a0a 	mla	sl, r9, sl, r1
 802662e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8026632:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8026636:	ea47 070a 	orr.w	r7, r7, sl
 802663a:	801f      	strh	r7, [r3, #0]
 802663c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802663e:	3302      	adds	r3, #2
 8026640:	9309      	str	r3, [sp, #36]	@ 0x24
 8026642:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026644:	449b      	add	fp, r3
 8026646:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026648:	441d      	add	r5, r3
 802664a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802664c:	3b01      	subs	r3, #1
 802664e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026650:	e76f      	b.n	8026532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026652:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026654:	449b      	add	fp, r3
 8026656:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026658:	441d      	add	r5, r3
 802665a:	9b06      	ldr	r3, [sp, #24]
 802665c:	3b01      	subs	r3, #1
 802665e:	9306      	str	r3, [sp, #24]
 8026660:	9b07      	ldr	r3, [sp, #28]
 8026662:	3302      	adds	r3, #2
 8026664:	9307      	str	r3, [sp, #28]
 8026666:	e744      	b.n	80264f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8026668:	d023      	beq.n	80266b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802666a:	9b06      	ldr	r3, [sp, #24]
 802666c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802666e:	3b01      	subs	r3, #1
 8026670:	fb00 b003 	mla	r0, r0, r3, fp
 8026674:	1400      	asrs	r0, r0, #16
 8026676:	f53f af58 	bmi.w	802652a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802667a:	3901      	subs	r1, #1
 802667c:	4288      	cmp	r0, r1
 802667e:	f6bf af54 	bge.w	802652a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026682:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8026684:	fb01 5303 	mla	r3, r1, r3, r5
 8026688:	141b      	asrs	r3, r3, #16
 802668a:	f53f af4e 	bmi.w	802652a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802668e:	3a01      	subs	r2, #1
 8026690:	4293      	cmp	r3, r2
 8026692:	f6bf af4a 	bge.w	802652a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026696:	9b06      	ldr	r3, [sp, #24]
 8026698:	9309      	str	r3, [sp, #36]	@ 0x24
 802669a:	9b07      	ldr	r3, [sp, #28]
 802669c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802669e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80266a0:	2b00      	cmp	r3, #0
 80266a2:	dc70      	bgt.n	8026786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80266a4:	9b06      	ldr	r3, [sp, #24]
 80266a6:	9a07      	ldr	r2, [sp, #28]
 80266a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80266ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80266b0:	9307      	str	r3, [sp, #28]
 80266b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80266b4:	2b00      	cmp	r3, #0
 80266b6:	f340 80eb 	ble.w	8026890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80266ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80266be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80266c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80266c6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80266c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80266cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80266d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80266d4:	eef0 6a62 	vmov.f32	s13, s5
 80266d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80266dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80266e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80266e4:	ee16 ba90 	vmov	fp, s13
 80266e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80266ec:	eef0 6a43 	vmov.f32	s13, s6
 80266f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80266f4:	ee12 2a90 	vmov	r2, s5
 80266f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80266fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8026700:	ee13 2a10 	vmov	r2, s6
 8026704:	931b      	str	r3, [sp, #108]	@ 0x6c
 8026706:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026708:	fb92 f3f3 	sdiv	r3, r2, r3
 802670c:	931c      	str	r3, [sp, #112]	@ 0x70
 802670e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026710:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8026712:	3b01      	subs	r3, #1
 8026714:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026718:	930a      	str	r3, [sp, #40]	@ 0x28
 802671a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802671c:	bf08      	it	eq
 802671e:	4613      	moveq	r3, r2
 8026720:	ee16 5a90 	vmov	r5, s13
 8026724:	9306      	str	r3, [sp, #24]
 8026726:	eeb0 3a67 	vmov.f32	s6, s15
 802672a:	eef0 2a47 	vmov.f32	s5, s14
 802672e:	e6d2      	b.n	80264d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8026730:	b149      	cbz	r1, 8026746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8026732:	5cba      	ldrb	r2, [r7, r2]
 8026734:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026738:	4422      	add	r2, r4
 802673a:	4660      	mov	r0, ip
 802673c:	4666      	mov	r6, ip
 802673e:	e734      	b.n	80265aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8026740:	4660      	mov	r0, ip
 8026742:	4662      	mov	r2, ip
 8026744:	e731      	b.n	80265aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8026746:	4660      	mov	r0, ip
 8026748:	4662      	mov	r2, ip
 802674a:	e7f7      	b.n	802673c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 802674c:	f110 0c01 	adds.w	ip, r0, #1
 8026750:	f53f af74 	bmi.w	802663c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026754:	4562      	cmp	r2, ip
 8026756:	f6ff af71 	blt.w	802663c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802675a:	f116 0c01 	adds.w	ip, r6, #1
 802675e:	f53f af6d 	bmi.w	802663c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026762:	4567      	cmp	r7, ip
 8026764:	f6ff af6a 	blt.w	802663c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026768:	b23f      	sxth	r7, r7
 802676a:	b212      	sxth	r2, r2
 802676c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8026770:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8026774:	9200      	str	r2, [sp, #0]
 8026776:	9701      	str	r7, [sp, #4]
 8026778:	4623      	mov	r3, r4
 802677a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802677e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8026780:	f7ff fde6 	bl	8026350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8026784:	e75a      	b.n	802663c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026786:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8026788:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 802678c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8026790:	1428      	asrs	r0, r5, #16
 8026792:	fb02 6000 	mla	r0, r2, r0, r6
 8026796:	9e08      	ldr	r6, [sp, #32]
 8026798:	f816 8000 	ldrb.w	r8, [r6, r0]
 802679c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80267a0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80267a4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80267a8:	1837      	adds	r7, r6, r0
 80267aa:	eb04 0c08 	add.w	ip, r4, r8
 80267ae:	2b00      	cmp	r3, #0
 80267b0:	d060      	beq.n	8026874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80267b2:	787e      	ldrb	r6, [r7, #1]
 80267b4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80267b8:	4426      	add	r6, r4
 80267ba:	2900      	cmp	r1, #0
 80267bc:	d062      	beq.n	8026884 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80267be:	18b8      	adds	r0, r7, r2
 80267c0:	5cba      	ldrb	r2, [r7, r2]
 80267c2:	7840      	ldrb	r0, [r0, #1]
 80267c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80267c8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80267cc:	4422      	add	r2, r4
 80267ce:	4420      	add	r0, r4
 80267d0:	b29b      	uxth	r3, r3
 80267d2:	b289      	uxth	r1, r1
 80267d4:	fb03 f901 	mul.w	r9, r3, r1
 80267d8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80267dc:	011b      	lsls	r3, r3, #4
 80267de:	b289      	uxth	r1, r1
 80267e0:	78b7      	ldrb	r7, [r6, #2]
 80267e2:	f89c a002 	ldrb.w	sl, [ip, #2]
 80267e6:	f89c c001 	ldrb.w	ip, [ip, #1]
 80267ea:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80267ee:	eba3 0309 	sub.w	r3, r3, r9
 80267f2:	b29b      	uxth	r3, r3
 80267f4:	ebae 0e01 	sub.w	lr, lr, r1
 80267f8:	fa1f fe8e 	uxth.w	lr, lr
 80267fc:	435f      	muls	r7, r3
 80267fe:	fb0e 770a 	mla	r7, lr, sl, r7
 8026802:	f892 a002 	ldrb.w	sl, [r2, #2]
 8026806:	fb01 770a 	mla	r7, r1, sl, r7
 802680a:	f890 a002 	ldrb.w	sl, [r0, #2]
 802680e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8026812:	f814 7008 	ldrb.w	r7, [r4, r8]
 8026816:	f896 8000 	ldrb.w	r8, [r6]
 802681a:	7876      	ldrb	r6, [r6, #1]
 802681c:	fb03 f808 	mul.w	r8, r3, r8
 8026820:	fb0e 8807 	mla	r8, lr, r7, r8
 8026824:	7817      	ldrb	r7, [r2, #0]
 8026826:	fb01 8807 	mla	r8, r1, r7, r8
 802682a:	7807      	ldrb	r7, [r0, #0]
 802682c:	fb09 8707 	mla	r7, r9, r7, r8
 8026830:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8026834:	4373      	muls	r3, r6
 8026836:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802683a:	7856      	ldrb	r6, [r2, #1]
 802683c:	ea47 070a 	orr.w	r7, r7, sl
 8026840:	fb0e 330c 	mla	r3, lr, ip, r3
 8026844:	f890 a001 	ldrb.w	sl, [r0, #1]
 8026848:	fb01 3306 	mla	r3, r1, r6, r3
 802684c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8026850:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8026854:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026856:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802685a:	ea47 070a 	orr.w	r7, r7, sl
 802685e:	f823 7b02 	strh.w	r7, [r3], #2
 8026862:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026864:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026866:	449b      	add	fp, r3
 8026868:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802686a:	441d      	add	r5, r3
 802686c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802686e:	3b01      	subs	r3, #1
 8026870:	9309      	str	r3, [sp, #36]	@ 0x24
 8026872:	e714      	b.n	802669e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8026874:	b149      	cbz	r1, 802688a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026876:	5cba      	ldrb	r2, [r7, r2]
 8026878:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802687c:	4422      	add	r2, r4
 802687e:	4660      	mov	r0, ip
 8026880:	4666      	mov	r6, ip
 8026882:	e7a5      	b.n	80267d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8026884:	4660      	mov	r0, ip
 8026886:	4662      	mov	r2, ip
 8026888:	e7a2      	b.n	80267d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802688a:	4660      	mov	r0, ip
 802688c:	4662      	mov	r2, ip
 802688e:	e7f7      	b.n	8026880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8026890:	b00f      	add	sp, #60	@ 0x3c
 8026892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026896 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8026896:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802689a:	b085      	sub	sp, #20
 802689c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 80268a0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 80268a4:	9102      	str	r1, [sp, #8]
 80268a6:	2c00      	cmp	r4, #0
 80268a8:	fb04 710c 	mla	r1, r4, ip, r7
 80268ac:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 80268b0:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 80268b4:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80268b8:	eb02 0e01 	add.w	lr, r2, r1
 80268bc:	f2c0 8122 	blt.w	8026b04 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80268c0:	45a0      	cmp	r8, r4
 80268c2:	f340 811f 	ble.w	8026b04 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80268c6:	2f00      	cmp	r7, #0
 80268c8:	f2c0 811a 	blt.w	8026b00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80268cc:	45bc      	cmp	ip, r7
 80268ce:	f340 8117 	ble.w	8026b00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80268d2:	5c52      	ldrb	r2, [r2, r1]
 80268d4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80268d8:	1c7a      	adds	r2, r7, #1
 80268da:	f100 8116 	bmi.w	8026b0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80268de:	4594      	cmp	ip, r2
 80268e0:	f340 8113 	ble.w	8026b0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80268e4:	2e00      	cmp	r6, #0
 80268e6:	f000 8112 	beq.w	8026b0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80268ea:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80268ee:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80268f2:	3401      	adds	r4, #1
 80268f4:	f100 810f 	bmi.w	8026b16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80268f8:	45a0      	cmp	r8, r4
 80268fa:	f340 810c 	ble.w	8026b16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80268fe:	2800      	cmp	r0, #0
 8026900:	f000 810c 	beq.w	8026b1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8026904:	2f00      	cmp	r7, #0
 8026906:	f2c0 8104 	blt.w	8026b12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802690a:	45bc      	cmp	ip, r7
 802690c:	f340 8101 	ble.w	8026b12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8026910:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8026914:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8026918:	3701      	adds	r7, #1
 802691a:	f100 8102 	bmi.w	8026b22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802691e:	45bc      	cmp	ip, r7
 8026920:	f340 80ff 	ble.w	8026b22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8026924:	2e00      	cmp	r6, #0
 8026926:	f000 80fe 	beq.w	8026b26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802692a:	44f4      	add	ip, lr
 802692c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8026930:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8026934:	b2b6      	uxth	r6, r6
 8026936:	b280      	uxth	r0, r0
 8026938:	fb00 fe06 	mul.w	lr, r0, r6
 802693c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8026940:	0136      	lsls	r6, r6, #4
 8026942:	eba6 070e 	sub.w	r7, r6, lr
 8026946:	b280      	uxth	r0, r0
 8026948:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802694c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8026950:	b2bf      	uxth	r7, r7
 8026952:	1a1b      	subs	r3, r3, r0
 8026954:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8026958:	b29b      	uxth	r3, r3
 802695a:	fb0a f607 	mul.w	r6, sl, r7
 802695e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026962:	fb0b 6603 	mla	r6, fp, r3, r6
 8026966:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802696a:	fb00 6609 	mla	r6, r0, r9, r6
 802696e:	fb0e 6608 	mla	r6, lr, r8, r6
 8026972:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8026976:	9600      	str	r6, [sp, #0]
 8026978:	2e00      	cmp	r6, #0
 802697a:	f000 80be 	beq.w	8026afa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802697e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026982:	fb0b fc0c 	mul.w	ip, fp, ip
 8026986:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802698a:	fb0b f505 	mul.w	r5, fp, r5
 802698e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8026992:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8026996:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802699a:	44dc      	add	ip, fp
 802699c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80269a0:	9501      	str	r5, [sp, #4]
 80269a2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80269a6:	9503      	str	r5, [sp, #12]
 80269a8:	9d01      	ldr	r5, [sp, #4]
 80269aa:	9e02      	ldr	r6, [sp, #8]
 80269ac:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80269b0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80269b4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80269b8:	fb0a fc0c 	mul.w	ip, sl, ip
 80269bc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80269c0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80269c4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80269c8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80269cc:	4465      	add	r5, ip
 80269ce:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80269d2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80269d6:	fb09 fc0c 	mul.w	ip, r9, ip
 80269da:	fb09 f904 	mul.w	r9, r9, r4
 80269de:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80269e2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80269e6:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80269ea:	fb08 f404 	mul.w	r4, r8, r4
 80269ee:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80269f2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80269f6:	fb08 f802 	mul.w	r8, r8, r2
 80269fa:	fb0a fa01 	mul.w	sl, sl, r1
 80269fe:	0a22      	lsrs	r2, r4, #8
 8026a00:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8026a04:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026a08:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8026a0c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8026a10:	4414      	add	r4, r2
 8026a12:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026a16:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8026a1a:	0a2d      	lsrs	r5, r5, #8
 8026a1c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8026a20:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8026a24:	9a03      	ldr	r2, [sp, #12]
 8026a26:	8836      	ldrh	r6, [r6, #0]
 8026a28:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026a2c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8026a30:	437d      	muls	r5, r7
 8026a32:	4461      	add	r1, ip
 8026a34:	0a24      	lsrs	r4, r4, #8
 8026a36:	fb02 5503 	mla	r5, r2, r3, r5
 8026a3a:	0a09      	lsrs	r1, r1, #8
 8026a3c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8026a40:	fb04 540e 	mla	r4, r4, lr, r5
 8026a44:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026a48:	fb01 4100 	mla	r1, r1, r0, r4
 8026a4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026a50:	0a09      	lsrs	r1, r1, #8
 8026a52:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026a56:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8026a5a:	fb07 f70a 	mul.w	r7, r7, sl
 8026a5e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8026a62:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8026a66:	fb03 7101 	mla	r1, r3, r1, r7
 8026a6a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026a6e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8026a72:	fb0e 1e08 	mla	lr, lr, r8, r1
 8026a76:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8026a7a:	fb00 e101 	mla	r1, r0, r1, lr
 8026a7e:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8026a82:	9a00      	ldr	r2, [sp, #0]
 8026a84:	b287      	uxth	r7, r0
 8026a86:	437a      	muls	r2, r7
 8026a88:	0a09      	lsrs	r1, r1, #8
 8026a8a:	1c53      	adds	r3, r2, #1
 8026a8c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8026a90:	4321      	orrs	r1, r4
 8026a92:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026a96:	1235      	asrs	r5, r6, #8
 8026a98:	0c0a      	lsrs	r2, r1, #16
 8026a9a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8026a9e:	b2db      	uxtb	r3, r3
 8026aa0:	fb12 f207 	smulbb	r2, r2, r7
 8026aa4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8026aa8:	fb05 2503 	mla	r5, r5, r3, r2
 8026aac:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8026ab0:	10f2      	asrs	r2, r6, #3
 8026ab2:	b2c8      	uxtb	r0, r1
 8026ab4:	00f6      	lsls	r6, r6, #3
 8026ab6:	fb14 f407 	smulbb	r4, r4, r7
 8026aba:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026abe:	b2f6      	uxtb	r6, r6
 8026ac0:	fb10 f007 	smulbb	r0, r0, r7
 8026ac4:	fb02 4203 	mla	r2, r2, r3, r4
 8026ac8:	b2ad      	uxth	r5, r5
 8026aca:	fb06 0303 	mla	r3, r6, r3, r0
 8026ace:	b299      	uxth	r1, r3
 8026ad0:	b294      	uxth	r4, r2
 8026ad2:	1c6b      	adds	r3, r5, #1
 8026ad4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026ad8:	1c62      	adds	r2, r4, #1
 8026ada:	1c4b      	adds	r3, r1, #1
 8026adc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8026ae0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8026ae4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8026ae8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026aec:	0952      	lsrs	r2, r2, #5
 8026aee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026af2:	432b      	orrs	r3, r5
 8026af4:	4313      	orrs	r3, r2
 8026af6:	9a02      	ldr	r2, [sp, #8]
 8026af8:	8013      	strh	r3, [r2, #0]
 8026afa:	b005      	add	sp, #20
 8026afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b00:	2500      	movs	r5, #0
 8026b02:	e6e9      	b.n	80268d8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8026b04:	2100      	movs	r1, #0
 8026b06:	460d      	mov	r5, r1
 8026b08:	e6f3      	b.n	80268f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8026b0a:	2100      	movs	r1, #0
 8026b0c:	e6f1      	b.n	80268f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8026b0e:	4631      	mov	r1, r6
 8026b10:	e6ef      	b.n	80268f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8026b12:	2400      	movs	r4, #0
 8026b14:	e700      	b.n	8026918 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8026b16:	2200      	movs	r2, #0
 8026b18:	4614      	mov	r4, r2
 8026b1a:	e70b      	b.n	8026934 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8026b1c:	4602      	mov	r2, r0
 8026b1e:	4604      	mov	r4, r0
 8026b20:	e708      	b.n	8026934 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8026b22:	2200      	movs	r2, #0
 8026b24:	e706      	b.n	8026934 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8026b26:	4632      	mov	r2, r6
 8026b28:	e704      	b.n	8026934 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08026b2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026b2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b2e:	b09f      	sub	sp, #124	@ 0x7c
 8026b30:	921b      	str	r2, [sp, #108]	@ 0x6c
 8026b32:	9309      	str	r3, [sp, #36]	@ 0x24
 8026b34:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8026b36:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8026b3a:	931c      	str	r3, [sp, #112]	@ 0x70
 8026b3c:	9119      	str	r1, [sp, #100]	@ 0x64
 8026b3e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8026b42:	901d      	str	r0, [sp, #116]	@ 0x74
 8026b44:	6850      	ldr	r0, [r2, #4]
 8026b46:	6812      	ldr	r2, [r2, #0]
 8026b48:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8026b4a:	fb00 1303 	mla	r3, r0, r3, r1
 8026b4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026b52:	930c      	str	r3, [sp, #48]	@ 0x30
 8026b54:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8026b56:	681b      	ldr	r3, [r3, #0]
 8026b58:	9312      	str	r3, [sp, #72]	@ 0x48
 8026b5a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8026b5c:	685e      	ldr	r6, [r3, #4]
 8026b5e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8026b62:	930d      	str	r3, [sp, #52]	@ 0x34
 8026b64:	3604      	adds	r6, #4
 8026b66:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8026b68:	2b00      	cmp	r3, #0
 8026b6a:	dc03      	bgt.n	8026b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8026b6c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026b6e:	2b00      	cmp	r3, #0
 8026b70:	f340 8388 	ble.w	8027284 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8026b74:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8026b76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026b7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026b7e:	1e48      	subs	r0, r1, #1
 8026b80:	1e57      	subs	r7, r2, #1
 8026b82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026b84:	2b00      	cmp	r3, #0
 8026b86:	f340 8195 	ble.w	8026eb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8026b8a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8026b8c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026b90:	ea4f 4325 	mov.w	r3, r5, asr #16
 8026b94:	d406      	bmi.n	8026ba4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8026b96:	4584      	cmp	ip, r0
 8026b98:	da04      	bge.n	8026ba4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8026b9a:	2b00      	cmp	r3, #0
 8026b9c:	db02      	blt.n	8026ba4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8026b9e:	42bb      	cmp	r3, r7
 8026ba0:	f2c0 8189 	blt.w	8026eb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8026ba4:	f11c 0c01 	adds.w	ip, ip, #1
 8026ba8:	f100 8177 	bmi.w	8026e9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026bac:	4561      	cmp	r1, ip
 8026bae:	f2c0 8174 	blt.w	8026e9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026bb2:	3301      	adds	r3, #1
 8026bb4:	f100 8171 	bmi.w	8026e9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026bb8:	429a      	cmp	r2, r3
 8026bba:	f2c0 816e 	blt.w	8026e9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026bbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026bc0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8026bc2:	931a      	str	r3, [sp, #104]	@ 0x68
 8026bc4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8026bc6:	2b00      	cmp	r3, #0
 8026bc8:	f340 8193 	ble.w	8026ef2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8026bcc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8026bce:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8026bd2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8026bd4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8026bd8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8026bda:	141b      	asrs	r3, r3, #16
 8026bdc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8026be0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8026be4:	f100 81d6 	bmi.w	8026f94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8026be8:	f100 38ff 	add.w	r8, r0, #4294967295
 8026bec:	4543      	cmp	r3, r8
 8026bee:	f280 81d1 	bge.w	8026f94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8026bf2:	f1bc 0f00 	cmp.w	ip, #0
 8026bf6:	f2c0 81cd 	blt.w	8026f94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8026bfa:	f10e 38ff 	add.w	r8, lr, #4294967295
 8026bfe:	45c4      	cmp	ip, r8
 8026c00:	f280 81c8 	bge.w	8026f94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8026c04:	b200      	sxth	r0, r0
 8026c06:	fb0c 3300 	mla	r3, ip, r0, r3
 8026c0a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8026c0c:	eb04 0803 	add.w	r8, r4, r3
 8026c10:	5ce3      	ldrb	r3, [r4, r3]
 8026c12:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8026c16:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8026c1a:	2a00      	cmp	r2, #0
 8026c1c:	f000 81af 	beq.w	8026f7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8026c20:	f898 c001 	ldrb.w	ip, [r8, #1]
 8026c24:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8026c28:	940e      	str	r4, [sp, #56]	@ 0x38
 8026c2a:	0e24      	lsrs	r4, r4, #24
 8026c2c:	9415      	str	r4, [sp, #84]	@ 0x54
 8026c2e:	b179      	cbz	r1, 8026c50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8026c30:	eb08 0c00 	add.w	ip, r8, r0
 8026c34:	f818 0000 	ldrb.w	r0, [r8, r0]
 8026c38:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8026c3c:	900a      	str	r0, [sp, #40]	@ 0x28
 8026c3e:	0e00      	lsrs	r0, r0, #24
 8026c40:	9013      	str	r0, [sp, #76]	@ 0x4c
 8026c42:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8026c46:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8026c4a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8026c4c:	0e00      	lsrs	r0, r0, #24
 8026c4e:	9016      	str	r0, [sp, #88]	@ 0x58
 8026c50:	b292      	uxth	r2, r2
 8026c52:	b289      	uxth	r1, r1
 8026c54:	fb02 f901 	mul.w	r9, r2, r1
 8026c58:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026c5c:	0112      	lsls	r2, r2, #4
 8026c5e:	eba2 0809 	sub.w	r8, r2, r9
 8026c62:	b289      	uxth	r1, r1
 8026c64:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8026c68:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8026c6a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8026c6c:	fa1f f888 	uxth.w	r8, r8
 8026c70:	1a52      	subs	r2, r2, r1
 8026c72:	b292      	uxth	r2, r2
 8026c74:	fb08 f000 	mul.w	r0, r8, r0
 8026c78:	fb02 000e 	mla	r0, r2, lr, r0
 8026c7c:	fb01 0004 	mla	r0, r1, r4, r0
 8026c80:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8026c82:	fb09 0004 	mla	r0, r9, r4, r0
 8026c86:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026c8a:	2800      	cmp	r0, #0
 8026c8c:	f000 80fa 	beq.w	8026e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026c90:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8026c94:	d01b      	beq.n	8026cce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026c96:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8026c9a:	fb0e fa0a 	mul.w	sl, lr, sl
 8026c9e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8026ca2:	fb0e fe03 	mul.w	lr, lr, r3
 8026ca6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026caa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8026cae:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8026cb2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8026cb6:	4453      	add	r3, sl
 8026cb8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026cbc:	0a1b      	lsrs	r3, r3, #8
 8026cbe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026cc2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8026cc6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8026cca:	ea43 030c 	orr.w	r3, r3, ip
 8026cce:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8026cd0:	2cff      	cmp	r4, #255	@ 0xff
 8026cd2:	d021      	beq.n	8026d18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026cd4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8026cd6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8026cda:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8026cdc:	fb04 fb0b 	mul.w	fp, r4, fp
 8026ce0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8026ce2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8026ce6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8026ce8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026cec:	fb04 fa0a 	mul.w	sl, r4, sl
 8026cf0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026cf4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026cf8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026cfc:	44de      	add	lr, fp
 8026cfe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026d02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026d06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026d0a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026d0e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026d12:	ea4e 040a 	orr.w	r4, lr, sl
 8026d16:	940e      	str	r4, [sp, #56]	@ 0x38
 8026d18:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8026d1a:	2cff      	cmp	r4, #255	@ 0xff
 8026d1c:	d021      	beq.n	8026d62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8026d1e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8026d20:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8026d24:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8026d26:	fb04 fb0b 	mul.w	fp, r4, fp
 8026d2a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8026d2c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8026d30:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8026d32:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026d36:	fb04 fa0a 	mul.w	sl, r4, sl
 8026d3a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026d3e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026d42:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026d46:	44de      	add	lr, fp
 8026d48:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026d4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026d50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026d54:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026d58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026d5c:	ea4e 040a 	orr.w	r4, lr, sl
 8026d60:	940a      	str	r4, [sp, #40]	@ 0x28
 8026d62:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8026d64:	2cff      	cmp	r4, #255	@ 0xff
 8026d66:	d021      	beq.n	8026dac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8026d68:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8026d6a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8026d6e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8026d70:	fb04 fb0b 	mul.w	fp, r4, fp
 8026d74:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8026d76:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8026d7a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8026d7c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026d80:	fb04 fa0a 	mul.w	sl, r4, sl
 8026d84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026d88:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026d8c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026d90:	44de      	add	lr, fp
 8026d92:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026d96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026d9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026d9e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026da2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026da6:	ea4e 040a 	orr.w	r4, lr, sl
 8026daa:	940f      	str	r4, [sp, #60]	@ 0x3c
 8026dac:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8026dae:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8026db2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8026db4:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8026db8:	fb08 fc0c 	mul.w	ip, r8, ip
 8026dbc:	fb02 cc0e 	mla	ip, r2, lr, ip
 8026dc0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8026dc4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8026dc6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026dca:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8026dce:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8026dd0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026dd4:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8026dd8:	fb08 f80e 	mul.w	r8, r8, lr
 8026ddc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8026de0:	fb02 8303 	mla	r3, r2, r3, r8
 8026de4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026de6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8026de8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8026dec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026dee:	fb01 330a 	mla	r3, r1, sl, r3
 8026df2:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8026df6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8026df8:	fb09 3901 	mla	r9, r9, r1, r3
 8026dfc:	4342      	muls	r2, r0
 8026dfe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026e02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026e06:	883b      	ldrh	r3, [r7, #0]
 8026e08:	1c50      	adds	r0, r2, #1
 8026e0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026e0e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8026e12:	ea4c 0c09 	orr.w	ip, ip, r9
 8026e16:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8026e1a:	1219      	asrs	r1, r3, #8
 8026e1c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8026e20:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8026e24:	b2c0      	uxtb	r0, r0
 8026e26:	fb12 f204 	smulbb	r2, r2, r4
 8026e2a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8026e2e:	fb01 2100 	mla	r1, r1, r0, r2
 8026e32:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8026e36:	10da      	asrs	r2, r3, #3
 8026e38:	fa5f fc8c 	uxtb.w	ip, ip
 8026e3c:	00db      	lsls	r3, r3, #3
 8026e3e:	fb1c fc04 	smulbb	ip, ip, r4
 8026e42:	b2db      	uxtb	r3, r3
 8026e44:	b289      	uxth	r1, r1
 8026e46:	fb03 c300 	mla	r3, r3, r0, ip
 8026e4a:	fa1f fc83 	uxth.w	ip, r3
 8026e4e:	1c4b      	adds	r3, r1, #1
 8026e50:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026e54:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026e58:	fb1e fe04 	smulbb	lr, lr, r4
 8026e5c:	f10c 0301 	add.w	r3, ip, #1
 8026e60:	fb02 e200 	mla	r2, r2, r0, lr
 8026e64:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8026e68:	b292      	uxth	r2, r2
 8026e6a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8026e6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026e72:	430b      	orrs	r3, r1
 8026e74:	1c51      	adds	r1, r2, #1
 8026e76:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026e7a:	0952      	lsrs	r2, r2, #5
 8026e7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026e80:	4313      	orrs	r3, r2
 8026e82:	803b      	strh	r3, [r7, #0]
 8026e84:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8026e86:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8026e88:	441a      	add	r2, r3
 8026e8a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026e8c:	9229      	str	r2, [sp, #164]	@ 0xa4
 8026e8e:	441d      	add	r5, r3
 8026e90:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8026e92:	3b01      	subs	r3, #1
 8026e94:	3702      	adds	r7, #2
 8026e96:	931a      	str	r3, [sp, #104]	@ 0x68
 8026e98:	e694      	b.n	8026bc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8026e9a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8026e9c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8026e9e:	441c      	add	r4, r3
 8026ea0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026ea2:	9429      	str	r4, [sp, #164]	@ 0xa4
 8026ea4:	441d      	add	r5, r3
 8026ea6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026ea8:	3b01      	subs	r3, #1
 8026eaa:	9309      	str	r3, [sp, #36]	@ 0x24
 8026eac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026eae:	3302      	adds	r3, #2
 8026eb0:	930c      	str	r3, [sp, #48]	@ 0x30
 8026eb2:	e666      	b.n	8026b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026eb4:	d024      	beq.n	8026f00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8026eb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026eb8:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8026eba:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8026ebc:	3b01      	subs	r3, #1
 8026ebe:	fb00 4003 	mla	r0, r0, r3, r4
 8026ec2:	1400      	asrs	r0, r0, #16
 8026ec4:	f53f ae7b 	bmi.w	8026bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026ec8:	3901      	subs	r1, #1
 8026eca:	4288      	cmp	r0, r1
 8026ecc:	f6bf ae77 	bge.w	8026bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026ed0:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8026ed2:	fb01 5303 	mla	r3, r1, r3, r5
 8026ed6:	141b      	asrs	r3, r3, #16
 8026ed8:	f53f ae71 	bmi.w	8026bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026edc:	3a01      	subs	r2, #1
 8026ede:	4293      	cmp	r3, r2
 8026ee0:	f6bf ae6d 	bge.w	8026bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026ee4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8026ee8:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8026eec:	f1bb 0f00 	cmp.w	fp, #0
 8026ef0:	dc70      	bgt.n	8026fd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8026ef2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026ef4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026ef8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026efa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026efe:	930c      	str	r3, [sp, #48]	@ 0x30
 8026f00:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8026f02:	2b00      	cmp	r3, #0
 8026f04:	f340 81be 	ble.w	8027284 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8026f08:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026f0c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026f10:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026f14:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026f16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026f1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026f1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026f22:	eef0 6a62 	vmov.f32	s13, s5
 8026f26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026f2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026f32:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8026f36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026f3a:	eef0 6a43 	vmov.f32	s13, s6
 8026f3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026f42:	ee12 2a90 	vmov	r2, s5
 8026f46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026f4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8026f4e:	ee13 2a10 	vmov	r2, s6
 8026f52:	932b      	str	r3, [sp, #172]	@ 0xac
 8026f54:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026f56:	fb92 f3f3 	sdiv	r3, r2, r3
 8026f5a:	932c      	str	r3, [sp, #176]	@ 0xb0
 8026f5c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8026f5e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8026f60:	3b01      	subs	r3, #1
 8026f62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f66:	9319      	str	r3, [sp, #100]	@ 0x64
 8026f68:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026f6a:	bf08      	it	eq
 8026f6c:	4613      	moveq	r3, r2
 8026f6e:	ee16 5a90 	vmov	r5, s13
 8026f72:	9309      	str	r3, [sp, #36]	@ 0x24
 8026f74:	eeb0 3a67 	vmov.f32	s6, s15
 8026f78:	eef0 2a47 	vmov.f32	s5, s14
 8026f7c:	e5f3      	b.n	8026b66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8026f7e:	2900      	cmp	r1, #0
 8026f80:	f43f ae66 	beq.w	8026c50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8026f84:	f818 0000 	ldrb.w	r0, [r8, r0]
 8026f88:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8026f8c:	900a      	str	r0, [sp, #40]	@ 0x28
 8026f8e:	0e00      	lsrs	r0, r0, #24
 8026f90:	9013      	str	r0, [sp, #76]	@ 0x4c
 8026f92:	e65d      	b.n	8026c50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8026f94:	f113 0801 	adds.w	r8, r3, #1
 8026f98:	f53f af74 	bmi.w	8026e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026f9c:	4540      	cmp	r0, r8
 8026f9e:	f6ff af71 	blt.w	8026e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026fa2:	f11c 0801 	adds.w	r8, ip, #1
 8026fa6:	f53f af6d 	bmi.w	8026e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026faa:	45c6      	cmp	lr, r8
 8026fac:	f6ff af6a 	blt.w	8026e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026fb0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8026fb2:	9302      	str	r3, [sp, #8]
 8026fb4:	b200      	sxth	r0, r0
 8026fb6:	fa0f f38e 	sxth.w	r3, lr
 8026fba:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8026fbe:	e9cd c203 	strd	ip, r2, [sp, #12]
 8026fc2:	9301      	str	r3, [sp, #4]
 8026fc4:	9000      	str	r0, [sp, #0]
 8026fc6:	4633      	mov	r3, r6
 8026fc8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8026fca:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8026fcc:	4639      	mov	r1, r7
 8026fce:	f7ff fc62 	bl	8026896 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8026fd2:	e757      	b.n	8026e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026fd4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8026fd6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8026fd8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8026fdc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8026fde:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026fe2:	1427      	asrs	r7, r4, #16
 8026fe4:	142b      	asrs	r3, r5, #16
 8026fe6:	fb01 7303 	mla	r3, r1, r3, r7
 8026fea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8026fec:	18e7      	adds	r7, r4, r3
 8026fee:	5ce3      	ldrb	r3, [r4, r3]
 8026ff0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8026ff4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8026ff8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026ffc:	2a00      	cmp	r2, #0
 8026ffe:	f000 8137 	beq.w	8027270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027002:	f897 e001 	ldrb.w	lr, [r7, #1]
 8027006:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802700a:	9410      	str	r4, [sp, #64]	@ 0x40
 802700c:	0e24      	lsrs	r4, r4, #24
 802700e:	9417      	str	r4, [sp, #92]	@ 0x5c
 8027010:	b170      	cbz	r0, 8027030 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8027012:	eb07 0e01 	add.w	lr, r7, r1
 8027016:	5c79      	ldrb	r1, [r7, r1]
 8027018:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802701c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802701e:	0e09      	lsrs	r1, r1, #24
 8027020:	9114      	str	r1, [sp, #80]	@ 0x50
 8027022:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8027026:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802702a:	9111      	str	r1, [sp, #68]	@ 0x44
 802702c:	0e09      	lsrs	r1, r1, #24
 802702e:	9118      	str	r1, [sp, #96]	@ 0x60
 8027030:	b292      	uxth	r2, r2
 8027032:	b280      	uxth	r0, r0
 8027034:	fb02 f800 	mul.w	r8, r2, r0
 8027038:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802703c:	0112      	lsls	r2, r2, #4
 802703e:	eba2 0e08 	sub.w	lr, r2, r8
 8027042:	b280      	uxth	r0, r0
 8027044:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8027048:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802704a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802704c:	fa1f fe8e 	uxth.w	lr, lr
 8027050:	1a12      	subs	r2, r2, r0
 8027052:	b292      	uxth	r2, r2
 8027054:	fb0e f101 	mul.w	r1, lr, r1
 8027058:	fb02 110c 	mla	r1, r2, ip, r1
 802705c:	fb00 1104 	mla	r1, r0, r4, r1
 8027060:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8027062:	fb08 1104 	mla	r1, r8, r4, r1
 8027066:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802706a:	2900      	cmp	r1, #0
 802706c:	f000 80f5 	beq.w	802725a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027070:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8027074:	d019      	beq.n	80270aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8027076:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802707a:	fb0c fa0a 	mul.w	sl, ip, sl
 802707e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027082:	fb0c fc03 	mul.w	ip, ip, r3
 8027086:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802708a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802708e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8027092:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8027096:	4453      	add	r3, sl
 8027098:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802709c:	0a1b      	lsrs	r3, r3, #8
 802709e:	0a3f      	lsrs	r7, r7, #8
 80270a0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80270a4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80270a8:	433b      	orrs	r3, r7
 80270aa:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80270ac:	2cff      	cmp	r4, #255	@ 0xff
 80270ae:	d020      	beq.n	80270f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80270b0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80270b2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80270b6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80270b8:	4367      	muls	r7, r4
 80270ba:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80270bc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80270c0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80270c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80270c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80270ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80270ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80270d2:	44bc      	add	ip, r7
 80270d4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80270d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80270dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80270e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80270e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80270e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80270ec:	ea4c 040a 	orr.w	r4, ip, sl
 80270f0:	9410      	str	r4, [sp, #64]	@ 0x40
 80270f2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80270f4:	2cff      	cmp	r4, #255	@ 0xff
 80270f6:	d020      	beq.n	802713a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80270f8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80270fa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80270fe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8027100:	4367      	muls	r7, r4
 8027102:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027104:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027108:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802710a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802710e:	fb04 fa0a 	mul.w	sl, r4, sl
 8027112:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027116:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802711a:	44bc      	add	ip, r7
 802711c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027120:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027124:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027128:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802712c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027130:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027134:	ea4c 040a 	orr.w	r4, ip, sl
 8027138:	940b      	str	r4, [sp, #44]	@ 0x2c
 802713a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802713c:	2cff      	cmp	r4, #255	@ 0xff
 802713e:	d020      	beq.n	8027182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8027140:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027142:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027146:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8027148:	4367      	muls	r7, r4
 802714a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802714c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027150:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8027152:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027156:	fb04 fa0a 	mul.w	sl, r4, sl
 802715a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802715e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027162:	44bc      	add	ip, r7
 8027164:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027168:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802716c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027170:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027174:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027178:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802717c:	ea4c 040a 	orr.w	r4, ip, sl
 8027180:	9411      	str	r4, [sp, #68]	@ 0x44
 8027182:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027184:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027188:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802718a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802718e:	fb0e f707 	mul.w	r7, lr, r7
 8027192:	fb02 770c 	mla	r7, r2, ip, r7
 8027196:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802719a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802719c:	fb00 770c 	mla	r7, r0, ip, r7
 80271a0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80271a4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80271a6:	fb08 770c 	mla	r7, r8, ip, r7
 80271aa:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 80271ae:	fb0e fe0c 	mul.w	lr, lr, ip
 80271b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80271b6:	fb02 e303 	mla	r3, r2, r3, lr
 80271ba:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80271bc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80271be:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80271c2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80271c4:	fb00 330a 	mla	r3, r0, sl, r3
 80271c8:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80271cc:	fb08 3c0c 	mla	ip, r8, ip, r3
 80271d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80271d2:	f8b9 0000 	ldrh.w	r0, [r9]
 80271d6:	434b      	muls	r3, r1
 80271d8:	0a3f      	lsrs	r7, r7, #8
 80271da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80271de:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80271e2:	1c59      	adds	r1, r3, #1
 80271e4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80271e8:	ea47 070c 	orr.w	r7, r7, ip
 80271ec:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80271f0:	1202      	asrs	r2, r0, #8
 80271f2:	0c3b      	lsrs	r3, r7, #16
 80271f4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80271f8:	b2c9      	uxtb	r1, r1
 80271fa:	fb13 f304 	smulbb	r3, r3, r4
 80271fe:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8027202:	fb02 3201 	mla	r2, r2, r1, r3
 8027206:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802720a:	10c3      	asrs	r3, r0, #3
 802720c:	b2ff      	uxtb	r7, r7
 802720e:	00c0      	lsls	r0, r0, #3
 8027210:	b292      	uxth	r2, r2
 8027212:	fb1c fc04 	smulbb	ip, ip, r4
 8027216:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802721a:	b2c0      	uxtb	r0, r0
 802721c:	fb17 f704 	smulbb	r7, r7, r4
 8027220:	fb03 c301 	mla	r3, r3, r1, ip
 8027224:	fb00 7001 	mla	r0, r0, r1, r7
 8027228:	f102 0c01 	add.w	ip, r2, #1
 802722c:	b280      	uxth	r0, r0
 802722e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8027232:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8027236:	1c42      	adds	r2, r0, #1
 8027238:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802723c:	b29b      	uxth	r3, r3
 802723e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8027242:	ea42 020c 	orr.w	r2, r2, ip
 8027246:	f103 0c01 	add.w	ip, r3, #1
 802724a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802724e:	095b      	lsrs	r3, r3, #5
 8027250:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027254:	431a      	orrs	r2, r3
 8027256:	f8a9 2000 	strh.w	r2, [r9]
 802725a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802725c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802725e:	441a      	add	r2, r3
 8027260:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027262:	9229      	str	r2, [sp, #164]	@ 0xa4
 8027264:	f109 0902 	add.w	r9, r9, #2
 8027268:	441d      	add	r5, r3
 802726a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802726e:	e63d      	b.n	8026eec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027270:	2800      	cmp	r0, #0
 8027272:	f43f aedd 	beq.w	8027030 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8027276:	5c79      	ldrb	r1, [r7, r1]
 8027278:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802727c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802727e:	0e09      	lsrs	r1, r1, #24
 8027280:	9114      	str	r1, [sp, #80]	@ 0x50
 8027282:	e6d5      	b.n	8027030 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8027284:	b01f      	add	sp, #124	@ 0x7c
 8027286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802728a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802728a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802728e:	b089      	sub	sp, #36	@ 0x24
 8027290:	9101      	str	r1, [sp, #4]
 8027292:	9801      	ldr	r0, [sp, #4]
 8027294:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8027298:	8800      	ldrh	r0, [r0, #0]
 802729a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802729e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 80272a2:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 80272a6:	1206      	asrs	r6, r0, #8
 80272a8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 80272ac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80272b0:	9602      	str	r6, [sp, #8]
 80272b2:	10c6      	asrs	r6, r0, #3
 80272b4:	00c0      	lsls	r0, r0, #3
 80272b6:	b2c0      	uxtb	r0, r0
 80272b8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80272bc:	9004      	str	r0, [sp, #16]
 80272be:	2f00      	cmp	r7, #0
 80272c0:	fb07 100c 	mla	r0, r7, ip, r1
 80272c4:	9603      	str	r6, [sp, #12]
 80272c6:	eb02 0e00 	add.w	lr, r2, r0
 80272ca:	f2c0 810a 	blt.w	80274e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80272ce:	45b8      	cmp	r8, r7
 80272d0:	f340 8107 	ble.w	80274e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80272d4:	2900      	cmp	r1, #0
 80272d6:	f2c0 8102 	blt.w	80274de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80272da:	458c      	cmp	ip, r1
 80272dc:	f340 80ff 	ble.w	80274de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80272e0:	5c12      	ldrb	r2, [r2, r0]
 80272e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80272e6:	1c4a      	adds	r2, r1, #1
 80272e8:	f100 80fe 	bmi.w	80274e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80272ec:	4594      	cmp	ip, r2
 80272ee:	f340 80fb 	ble.w	80274e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80272f2:	2d00      	cmp	r5, #0
 80272f4:	f000 80fa 	beq.w	80274ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80272f8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80272fc:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8027300:	3701      	adds	r7, #1
 8027302:	f100 80f7 	bmi.w	80274f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8027306:	45b8      	cmp	r8, r7
 8027308:	f340 80f4 	ble.w	80274f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802730c:	2c00      	cmp	r4, #0
 802730e:	f000 80f4 	beq.w	80274fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8027312:	2900      	cmp	r1, #0
 8027314:	eb0e 020c 	add.w	r2, lr, ip
 8027318:	f2c0 80ea 	blt.w	80274f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802731c:	458c      	cmp	ip, r1
 802731e:	f340 80e7 	ble.w	80274f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8027322:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8027326:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802732a:	3101      	adds	r1, #1
 802732c:	f100 80e8 	bmi.w	8027500 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8027330:	458c      	cmp	ip, r1
 8027332:	f340 80e5 	ble.w	8027500 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8027336:	2d00      	cmp	r5, #0
 8027338:	f000 80e4 	beq.w	8027504 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 802733c:	7852      	ldrb	r2, [r2, #1]
 802733e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8027342:	0e0b      	lsrs	r3, r1, #24
 8027344:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8027348:	9300      	str	r3, [sp, #0]
 802734a:	b2a4      	uxth	r4, r4
 802734c:	b2ab      	uxth	r3, r5
 802734e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8027352:	fb03 f904 	mul.w	r9, r3, r4
 8027356:	fb0a f505 	mul.w	r5, sl, r5
 802735a:	011b      	lsls	r3, r3, #4
 802735c:	eba3 0e09 	sub.w	lr, r3, r9
 8027360:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8027364:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8027368:	0a28      	lsrs	r0, r5, #8
 802736a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802736e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8027372:	4405      	add	r5, r0
 8027374:	0a2d      	lsrs	r5, r5, #8
 8027376:	fb0a f303 	mul.w	r3, sl, r3
 802737a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802737e:	9005      	str	r0, [sp, #20]
 8027380:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8027384:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8027388:	0a1b      	lsrs	r3, r3, #8
 802738a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 802738e:	9306      	str	r3, [sp, #24]
 8027390:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8027394:	fb0b f303 	mul.w	r3, fp, r3
 8027398:	0a1d      	lsrs	r5, r3, #8
 802739a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802739e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80273a2:	fb0b f606 	mul.w	r6, fp, r6
 80273a6:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 80273aa:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 80273ae:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80273b2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80273b6:	fb08 f707 	mul.w	r7, r8, r7
 80273ba:	441d      	add	r5, r3
 80273bc:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 80273c0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80273c4:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80273c8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80273cc:	fb08 fc0c 	mul.w	ip, r8, ip
 80273d0:	0a1b      	lsrs	r3, r3, #8
 80273d2:	9307      	str	r3, [sp, #28]
 80273d4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80273d8:	0e0b      	lsrs	r3, r1, #24
 80273da:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 80273de:	435f      	muls	r7, r3
 80273e0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80273e4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80273e8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80273ec:	4460      	add	r0, ip
 80273ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80273f2:	b2a4      	uxth	r4, r4
 80273f4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80273f8:	0a2d      	lsrs	r5, r5, #8
 80273fa:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80273fe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027402:	fa1f fe8e 	uxth.w	lr, lr
 8027406:	4359      	muls	r1, r3
 8027408:	1b12      	subs	r2, r2, r4
 802740a:	9b05      	ldr	r3, [sp, #20]
 802740c:	44bc      	add	ip, r7
 802740e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027412:	b292      	uxth	r2, r2
 8027414:	fb05 f50e 	mul.w	r5, r5, lr
 8027418:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802741c:	fb03 5502 	mla	r5, r3, r2, r5
 8027420:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027424:	9b06      	ldr	r3, [sp, #24]
 8027426:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 802742a:	0a36      	lsrs	r6, r6, #8
 802742c:	0a00      	lsrs	r0, r0, #8
 802742e:	fb0c 5509 	mla	r5, ip, r9, r5
 8027432:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027436:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802743a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802743e:	fb00 5504 	mla	r5, r0, r4, r5
 8027442:	fb0e f606 	mul.w	r6, lr, r6
 8027446:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 802744a:	0a09      	lsrs	r1, r1, #8
 802744c:	9b07      	ldr	r3, [sp, #28]
 802744e:	fb02 6000 	mla	r0, r2, r0, r6
 8027452:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027456:	fb09 0001 	mla	r0, r9, r1, r0
 802745a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802745e:	fb0e fe0b 	mul.w	lr, lr, fp
 8027462:	fb04 0003 	mla	r0, r4, r3, r0
 8027466:	fb02 e20a 	mla	r2, r2, sl, lr
 802746a:	9b00      	ldr	r3, [sp, #0]
 802746c:	fb04 2408 	mla	r4, r4, r8, r2
 8027470:	fb09 4903 	mla	r9, r9, r3, r4
 8027474:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8027478:	9b02      	ldr	r3, [sp, #8]
 802747a:	9a04      	ldr	r2, [sp, #16]
 802747c:	fa5f f989 	uxtb.w	r9, r9
 8027480:	fb03 f109 	mul.w	r1, r3, r9
 8027484:	9b03      	ldr	r3, [sp, #12]
 8027486:	0a2d      	lsrs	r5, r5, #8
 8027488:	0a00      	lsrs	r0, r0, #8
 802748a:	fb03 f309 	mul.w	r3, r3, r9
 802748e:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8027492:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027496:	4305      	orrs	r5, r0
 8027498:	fb02 f909 	mul.w	r9, r2, r9
 802749c:	1c58      	adds	r0, r3, #1
 802749e:	1c4a      	adds	r2, r1, #1
 80274a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80274a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80274a8:	0a2b      	lsrs	r3, r5, #8
 80274aa:	0c2a      	lsrs	r2, r5, #16
 80274ac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80274b0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80274b4:	00db      	lsls	r3, r3, #3
 80274b6:	0212      	lsls	r2, r2, #8
 80274b8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80274bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80274c0:	4313      	orrs	r3, r2
 80274c2:	f109 0201 	add.w	r2, r9, #1
 80274c6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80274ca:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80274ce:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80274d2:	431d      	orrs	r5, r3
 80274d4:	9b01      	ldr	r3, [sp, #4]
 80274d6:	801d      	strh	r5, [r3, #0]
 80274d8:	b009      	add	sp, #36	@ 0x24
 80274da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80274de:	2000      	movs	r0, #0
 80274e0:	e701      	b.n	80272e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80274e2:	2600      	movs	r6, #0
 80274e4:	4630      	mov	r0, r6
 80274e6:	e70b      	b.n	8027300 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80274e8:	2600      	movs	r6, #0
 80274ea:	e709      	b.n	8027300 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80274ec:	462e      	mov	r6, r5
 80274ee:	e707      	b.n	8027300 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80274f0:	2700      	movs	r7, #0
 80274f2:	e71a      	b.n	802732a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80274f4:	2100      	movs	r1, #0
 80274f6:	460f      	mov	r7, r1
 80274f8:	e723      	b.n	8027342 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80274fa:	4621      	mov	r1, r4
 80274fc:	4627      	mov	r7, r4
 80274fe:	e720      	b.n	8027342 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027500:	2100      	movs	r1, #0
 8027502:	e71e      	b.n	8027342 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027504:	4629      	mov	r1, r5
 8027506:	e71c      	b.n	8027342 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08027508 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802750c:	b09b      	sub	sp, #108	@ 0x6c
 802750e:	9218      	str	r2, [sp, #96]	@ 0x60
 8027510:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8027512:	9116      	str	r1, [sp, #88]	@ 0x58
 8027514:	9307      	str	r3, [sp, #28]
 8027516:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802751a:	9019      	str	r0, [sp, #100]	@ 0x64
 802751c:	6850      	ldr	r0, [r2, #4]
 802751e:	6812      	ldr	r2, [r2, #0]
 8027520:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8027522:	fb00 1303 	mla	r3, r0, r3, r1
 8027526:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802752a:	930a      	str	r3, [sp, #40]	@ 0x28
 802752c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802752e:	681b      	ldr	r3, [r3, #0]
 8027530:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027532:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027534:	685e      	ldr	r6, [r3, #4]
 8027536:	3604      	adds	r6, #4
 8027538:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802753a:	2b00      	cmp	r3, #0
 802753c:	dc03      	bgt.n	8027546 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802753e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8027540:	2b00      	cmp	r3, #0
 8027542:	f340 8373 	ble.w	8027c2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8027546:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027548:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802754c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027550:	1e48      	subs	r0, r1, #1
 8027552:	1e57      	subs	r7, r2, #1
 8027554:	9b07      	ldr	r3, [sp, #28]
 8027556:	2b00      	cmp	r3, #0
 8027558:	f340 8190 	ble.w	802787c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802755c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 802755e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027562:	ea4f 4325 	mov.w	r3, r5, asr #16
 8027566:	d406      	bmi.n	8027576 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027568:	4584      	cmp	ip, r0
 802756a:	da04      	bge.n	8027576 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802756c:	2b00      	cmp	r3, #0
 802756e:	db02      	blt.n	8027576 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027570:	42bb      	cmp	r3, r7
 8027572:	f2c0 8184 	blt.w	802787e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8027576:	f11c 0c01 	adds.w	ip, ip, #1
 802757a:	f100 8172 	bmi.w	8027862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802757e:	4561      	cmp	r1, ip
 8027580:	f2c0 816f 	blt.w	8027862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027584:	3301      	adds	r3, #1
 8027586:	f100 816c 	bmi.w	8027862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802758a:	429a      	cmp	r2, r3
 802758c:	f2c0 8169 	blt.w	8027862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027590:	9b07      	ldr	r3, [sp, #28]
 8027592:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8027594:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027596:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8027598:	2b00      	cmp	r3, #0
 802759a:	f340 818e 	ble.w	80278ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 802759e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80275a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80275a4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80275a6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80275aa:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80275ac:	141b      	asrs	r3, r3, #16
 80275ae:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80275b2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80275b6:	f100 81d1 	bmi.w	802795c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80275ba:	f101 38ff 	add.w	r8, r1, #4294967295
 80275be:	4543      	cmp	r3, r8
 80275c0:	f280 81cc 	bge.w	802795c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80275c4:	f1bc 0f00 	cmp.w	ip, #0
 80275c8:	f2c0 81c8 	blt.w	802795c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80275cc:	f10e 38ff 	add.w	r8, lr, #4294967295
 80275d0:	45c4      	cmp	ip, r8
 80275d2:	f280 81c3 	bge.w	802795c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80275d6:	b209      	sxth	r1, r1
 80275d8:	fb0c 3301 	mla	r3, ip, r1, r3
 80275dc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80275de:	eb04 0803 	add.w	r8, r4, r3
 80275e2:	5ce3      	ldrb	r3, [r4, r3]
 80275e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80275e8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80275ec:	2a00      	cmp	r2, #0
 80275ee:	f000 81aa 	beq.w	8027946 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80275f2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80275f6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80275fa:	940b      	str	r4, [sp, #44]	@ 0x2c
 80275fc:	0e24      	lsrs	r4, r4, #24
 80275fe:	9412      	str	r4, [sp, #72]	@ 0x48
 8027600:	b178      	cbz	r0, 8027622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8027602:	eb08 0c01 	add.w	ip, r8, r1
 8027606:	f818 1001 	ldrb.w	r1, [r8, r1]
 802760a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802760e:	9108      	str	r1, [sp, #32]
 8027610:	0e09      	lsrs	r1, r1, #24
 8027612:	9110      	str	r1, [sp, #64]	@ 0x40
 8027614:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8027618:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802761c:	910c      	str	r1, [sp, #48]	@ 0x30
 802761e:	0e09      	lsrs	r1, r1, #24
 8027620:	9113      	str	r1, [sp, #76]	@ 0x4c
 8027622:	b292      	uxth	r2, r2
 8027624:	b280      	uxth	r0, r0
 8027626:	fb02 f900 	mul.w	r9, r2, r0
 802762a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802762e:	0112      	lsls	r2, r2, #4
 8027630:	eba2 0809 	sub.w	r8, r2, r9
 8027634:	b280      	uxth	r0, r0
 8027636:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802763a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802763c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802763e:	fa1f f888 	uxth.w	r8, r8
 8027642:	1a12      	subs	r2, r2, r0
 8027644:	b292      	uxth	r2, r2
 8027646:	fb08 f101 	mul.w	r1, r8, r1
 802764a:	fb02 110e 	mla	r1, r2, lr, r1
 802764e:	fb00 1104 	mla	r1, r0, r4, r1
 8027652:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027654:	fb09 1104 	mla	r1, r9, r4, r1
 8027658:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802765c:	2900      	cmp	r1, #0
 802765e:	f000 80f5 	beq.w	802784c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8027662:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8027666:	d01b      	beq.n	80276a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027668:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802766c:	fb0e fa0a 	mul.w	sl, lr, sl
 8027670:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027674:	fb0e fe03 	mul.w	lr, lr, r3
 8027678:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802767c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027680:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8027684:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8027688:	4453      	add	r3, sl
 802768a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802768e:	0a1b      	lsrs	r3, r3, #8
 8027690:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027694:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027698:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802769c:	ea43 030c 	orr.w	r3, r3, ip
 80276a0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80276a2:	2cff      	cmp	r4, #255	@ 0xff
 80276a4:	d021      	beq.n	80276ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80276a6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80276a8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80276ac:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80276ae:	fb04 fb0b 	mul.w	fp, r4, fp
 80276b2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80276b4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80276b8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80276ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80276be:	fb04 fa0a 	mul.w	sl, r4, sl
 80276c2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80276c6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80276ca:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80276ce:	44de      	add	lr, fp
 80276d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80276d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80276d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80276dc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80276e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80276e4:	ea4e 040a 	orr.w	r4, lr, sl
 80276e8:	940b      	str	r4, [sp, #44]	@ 0x2c
 80276ea:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80276ec:	2cff      	cmp	r4, #255	@ 0xff
 80276ee:	d021      	beq.n	8027734 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80276f0:	9c08      	ldr	r4, [sp, #32]
 80276f2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80276f6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80276f8:	fb04 fb0b 	mul.w	fp, r4, fp
 80276fc:	9c08      	ldr	r4, [sp, #32]
 80276fe:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027702:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027704:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027708:	fb04 fa0a 	mul.w	sl, r4, sl
 802770c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027710:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027714:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027718:	44de      	add	lr, fp
 802771a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802771e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027722:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027726:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802772a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802772e:	ea4e 040a 	orr.w	r4, lr, sl
 8027732:	9408      	str	r4, [sp, #32]
 8027734:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027736:	2cff      	cmp	r4, #255	@ 0xff
 8027738:	d021      	beq.n	802777e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802773a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802773c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027740:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027742:	fb04 fb0b 	mul.w	fp, r4, fp
 8027746:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027748:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802774c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802774e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027752:	fb04 fa0a 	mul.w	sl, r4, sl
 8027756:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802775a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802775e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027762:	44de      	add	lr, fp
 8027764:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027768:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802776c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027770:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027774:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027778:	ea4e 040a 	orr.w	r4, lr, sl
 802777c:	940c      	str	r4, [sp, #48]	@ 0x30
 802777e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027780:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027784:	9c08      	ldr	r4, [sp, #32]
 8027786:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802778a:	fb08 fc0c 	mul.w	ip, r8, ip
 802778e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8027792:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8027796:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027798:	fb00 cc0e 	mla	ip, r0, lr, ip
 802779c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80277a0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80277a2:	fb09 cc0e 	mla	ip, r9, lr, ip
 80277a6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80277aa:	fb08 f80e 	mul.w	r8, r8, lr
 80277ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80277b2:	fb02 8303 	mla	r3, r2, r3, r8
 80277b6:	9a08      	ldr	r2, [sp, #32]
 80277b8:	f8b7 8000 	ldrh.w	r8, [r7]
 80277bc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80277c0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80277c2:	fb00 330a 	mla	r3, r0, sl, r3
 80277c6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 80277ca:	fb09 3900 	mla	r9, r9, r0, r3
 80277ce:	43c9      	mvns	r1, r1
 80277d0:	ea4f 2228 	mov.w	r2, r8, asr #8
 80277d4:	fa5f fe81 	uxtb.w	lr, r1
 80277d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80277e0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80277e4:	fb02 f20e 	mul.w	r2, r2, lr
 80277e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80277ec:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80277f0:	ea4c 0c09 	orr.w	ip, ip, r9
 80277f4:	1c53      	adds	r3, r2, #1
 80277f6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80277fa:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80277fe:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8027802:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027806:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802780a:	4a63      	ldr	r2, [pc, #396]	@ (8027998 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 802780c:	fb00 f00e 	mul.w	r0, r0, lr
 8027810:	b2db      	uxtb	r3, r3
 8027812:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8027816:	1c43      	adds	r3, r0, #1
 8027818:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802781c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8027820:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8027824:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8027828:	b2c9      	uxtb	r1, r1
 802782a:	00db      	lsls	r3, r3, #3
 802782c:	fb01 f10e 	mul.w	r1, r1, lr
 8027830:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027834:	4313      	orrs	r3, r2
 8027836:	1c4a      	adds	r2, r1, #1
 8027838:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802783c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8027840:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027844:	ea4c 0c03 	orr.w	ip, ip, r3
 8027848:	f8a7 c000 	strh.w	ip, [r7]
 802784c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802784e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8027850:	441a      	add	r2, r3
 8027852:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027854:	9225      	str	r2, [sp, #148]	@ 0x94
 8027856:	441d      	add	r5, r3
 8027858:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802785a:	3b01      	subs	r3, #1
 802785c:	3702      	adds	r7, #2
 802785e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027860:	e699      	b.n	8027596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027862:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8027864:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027866:	441c      	add	r4, r3
 8027868:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802786a:	9425      	str	r4, [sp, #148]	@ 0x94
 802786c:	441d      	add	r5, r3
 802786e:	9b07      	ldr	r3, [sp, #28]
 8027870:	3b01      	subs	r3, #1
 8027872:	9307      	str	r3, [sp, #28]
 8027874:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027876:	3302      	adds	r3, #2
 8027878:	930a      	str	r3, [sp, #40]	@ 0x28
 802787a:	e66b      	b.n	8027554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802787c:	d024      	beq.n	80278c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802787e:	9b07      	ldr	r3, [sp, #28]
 8027880:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8027882:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027884:	3b01      	subs	r3, #1
 8027886:	fb00 4003 	mla	r0, r0, r3, r4
 802788a:	1400      	asrs	r0, r0, #16
 802788c:	f53f ae80 	bmi.w	8027590 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027890:	3901      	subs	r1, #1
 8027892:	4288      	cmp	r0, r1
 8027894:	f6bf ae7c 	bge.w	8027590 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027898:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802789a:	fb01 5303 	mla	r3, r1, r3, r5
 802789e:	141b      	asrs	r3, r3, #16
 80278a0:	f53f ae76 	bmi.w	8027590 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80278a4:	3a01      	subs	r2, #1
 80278a6:	4293      	cmp	r3, r2
 80278a8:	f6bf ae72 	bge.w	8027590 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80278ac:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80278b0:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80278b4:	f1bb 0f00 	cmp.w	fp, #0
 80278b8:	dc70      	bgt.n	802799c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80278ba:	9b07      	ldr	r3, [sp, #28]
 80278bc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80278c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80278c2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80278c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80278c8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80278ca:	2b00      	cmp	r3, #0
 80278cc:	f340 81ae 	ble.w	8027c2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80278d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80278d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80278d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80278dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80278de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80278e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80278e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80278ea:	eef0 6a62 	vmov.f32	s13, s5
 80278ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80278f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80278f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80278fa:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 80278fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027902:	eef0 6a43 	vmov.f32	s13, s6
 8027906:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802790a:	ee12 2a90 	vmov	r2, s5
 802790e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027912:	fb92 f3f3 	sdiv	r3, r2, r3
 8027916:	ee13 2a10 	vmov	r2, s6
 802791a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802791c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802791e:	fb92 f3f3 	sdiv	r3, r2, r3
 8027922:	9328      	str	r3, [sp, #160]	@ 0xa0
 8027924:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027926:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8027928:	3b01      	subs	r3, #1
 802792a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802792e:	9316      	str	r3, [sp, #88]	@ 0x58
 8027930:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027932:	bf08      	it	eq
 8027934:	4613      	moveq	r3, r2
 8027936:	ee16 5a90 	vmov	r5, s13
 802793a:	9307      	str	r3, [sp, #28]
 802793c:	eeb0 3a67 	vmov.f32	s6, s15
 8027940:	eef0 2a47 	vmov.f32	s5, s14
 8027944:	e5f8      	b.n	8027538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8027946:	2800      	cmp	r0, #0
 8027948:	f43f ae6b 	beq.w	8027622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802794c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8027950:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8027954:	9108      	str	r1, [sp, #32]
 8027956:	0e09      	lsrs	r1, r1, #24
 8027958:	9110      	str	r1, [sp, #64]	@ 0x40
 802795a:	e662      	b.n	8027622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802795c:	f113 0801 	adds.w	r8, r3, #1
 8027960:	f53f af74 	bmi.w	802784c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8027964:	4541      	cmp	r1, r8
 8027966:	f6ff af71 	blt.w	802784c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802796a:	f11c 0801 	adds.w	r8, ip, #1
 802796e:	f53f af6d 	bmi.w	802784c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8027972:	45c6      	cmp	lr, r8
 8027974:	f6ff af6a 	blt.w	802784c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8027978:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802797c:	b209      	sxth	r1, r1
 802797e:	fa0f f38e 	sxth.w	r3, lr
 8027982:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8027986:	9301      	str	r3, [sp, #4]
 8027988:	9100      	str	r1, [sp, #0]
 802798a:	4633      	mov	r3, r6
 802798c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802798e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8027990:	4639      	mov	r1, r7
 8027992:	f7ff fc7a 	bl	802728a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8027996:	e759      	b.n	802784c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8027998:	fffff800 	.word	0xfffff800
 802799c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802799e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80279a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80279a4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80279a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80279aa:	1427      	asrs	r7, r4, #16
 80279ac:	142b      	asrs	r3, r5, #16
 80279ae:	fb01 7303 	mla	r3, r1, r3, r7
 80279b2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80279b4:	18e7      	adds	r7, r4, r3
 80279b6:	5ce3      	ldrb	r3, [r4, r3]
 80279b8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80279bc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80279c0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80279c4:	2a00      	cmp	r2, #0
 80279c6:	f000 8127 	beq.w	8027c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80279ca:	f897 e001 	ldrb.w	lr, [r7, #1]
 80279ce:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80279d2:	940d      	str	r4, [sp, #52]	@ 0x34
 80279d4:	0e24      	lsrs	r4, r4, #24
 80279d6:	9414      	str	r4, [sp, #80]	@ 0x50
 80279d8:	b170      	cbz	r0, 80279f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80279da:	eb07 0e01 	add.w	lr, r7, r1
 80279de:	5c79      	ldrb	r1, [r7, r1]
 80279e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80279e4:	9109      	str	r1, [sp, #36]	@ 0x24
 80279e6:	0e09      	lsrs	r1, r1, #24
 80279e8:	9111      	str	r1, [sp, #68]	@ 0x44
 80279ea:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80279ee:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80279f2:	910e      	str	r1, [sp, #56]	@ 0x38
 80279f4:	0e09      	lsrs	r1, r1, #24
 80279f6:	9115      	str	r1, [sp, #84]	@ 0x54
 80279f8:	b292      	uxth	r2, r2
 80279fa:	b280      	uxth	r0, r0
 80279fc:	fb02 f800 	mul.w	r8, r2, r0
 8027a00:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8027a04:	0112      	lsls	r2, r2, #4
 8027a06:	eba2 0e08 	sub.w	lr, r2, r8
 8027a0a:	b280      	uxth	r0, r0
 8027a0c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8027a10:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8027a12:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027a14:	fa1f fe8e 	uxth.w	lr, lr
 8027a18:	1a09      	subs	r1, r1, r0
 8027a1a:	b289      	uxth	r1, r1
 8027a1c:	fb0e f202 	mul.w	r2, lr, r2
 8027a20:	fb01 220c 	mla	r2, r1, ip, r2
 8027a24:	fb00 2204 	mla	r2, r0, r4, r2
 8027a28:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027a2a:	fb08 2204 	mla	r2, r8, r4, r2
 8027a2e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8027a32:	2a00      	cmp	r2, #0
 8027a34:	f000 80e5 	beq.w	8027c02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8027a38:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8027a3c:	d019      	beq.n	8027a72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8027a3e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8027a42:	fb0c fa0a 	mul.w	sl, ip, sl
 8027a46:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027a4a:	fb0c fc03 	mul.w	ip, ip, r3
 8027a4e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027a52:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027a56:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8027a5a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8027a5e:	4453      	add	r3, sl
 8027a60:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027a64:	0a1b      	lsrs	r3, r3, #8
 8027a66:	0a3f      	lsrs	r7, r7, #8
 8027a68:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027a6c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8027a70:	433b      	orrs	r3, r7
 8027a72:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8027a74:	2cff      	cmp	r4, #255	@ 0xff
 8027a76:	d020      	beq.n	8027aba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8027a78:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8027a7a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027a7e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8027a80:	4367      	muls	r7, r4
 8027a82:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8027a84:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027a88:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8027a8a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027a8e:	fb04 fa0a 	mul.w	sl, r4, sl
 8027a92:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027a96:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027a9a:	44bc      	add	ip, r7
 8027a9c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027aa0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027aa4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027aa8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027aac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027ab0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027ab4:	ea4c 040a 	orr.w	r4, ip, sl
 8027ab8:	940d      	str	r4, [sp, #52]	@ 0x34
 8027aba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027abc:	2cff      	cmp	r4, #255	@ 0xff
 8027abe:	d020      	beq.n	8027b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8027ac0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8027ac2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027ac6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027ac8:	4367      	muls	r7, r4
 8027aca:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8027acc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027ad0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027ad2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027ad6:	fb04 fa0a 	mul.w	sl, r4, sl
 8027ada:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027ade:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027ae2:	44bc      	add	ip, r7
 8027ae4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027ae8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027aec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027af0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027af4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027af8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027afc:	ea4c 040a 	orr.w	r4, ip, sl
 8027b00:	9409      	str	r4, [sp, #36]	@ 0x24
 8027b02:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027b04:	2cff      	cmp	r4, #255	@ 0xff
 8027b06:	d020      	beq.n	8027b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8027b08:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027b0a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027b0e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027b10:	4367      	muls	r7, r4
 8027b12:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027b14:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027b18:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027b1a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027b1e:	fb04 fa0a 	mul.w	sl, r4, sl
 8027b22:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027b26:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027b2a:	44bc      	add	ip, r7
 8027b2c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027b30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027b34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027b38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027b3c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027b40:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027b44:	ea4c 040a 	orr.w	r4, ip, sl
 8027b48:	940e      	str	r4, [sp, #56]	@ 0x38
 8027b4a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8027b4c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027b50:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8027b52:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8027b56:	fb0e f707 	mul.w	r7, lr, r7
 8027b5a:	fb01 770c 	mla	r7, r1, ip, r7
 8027b5e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027b62:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027b64:	fb00 770c 	mla	r7, r0, ip, r7
 8027b68:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027b6c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8027b6e:	fb08 770c 	mla	r7, r8, ip, r7
 8027b72:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8027b76:	fb0e fe0c 	mul.w	lr, lr, ip
 8027b7a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027b7e:	fb01 e303 	mla	r3, r1, r3, lr
 8027b82:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027b84:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8027b88:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8027b8a:	fb00 330a 	mla	r3, r0, sl, r3
 8027b8e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8027b92:	fb08 3c0c 	mla	ip, r8, ip, r3
 8027b96:	f8b9 3000 	ldrh.w	r3, [r9]
 8027b9a:	43d2      	mvns	r2, r2
 8027b9c:	1218      	asrs	r0, r3, #8
 8027b9e:	b2d2      	uxtb	r2, r2
 8027ba0:	10d9      	asrs	r1, r3, #3
 8027ba2:	0a3f      	lsrs	r7, r7, #8
 8027ba4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ba8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8027bac:	00db      	lsls	r3, r3, #3
 8027bae:	4350      	muls	r0, r2
 8027bb0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8027bb4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027bb8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8027bbc:	b2db      	uxtb	r3, r3
 8027bbe:	ea47 070c 	orr.w	r7, r7, ip
 8027bc2:	4351      	muls	r1, r2
 8027bc4:	4353      	muls	r3, r2
 8027bc6:	1c42      	adds	r2, r0, #1
 8027bc8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027bcc:	0c3a      	lsrs	r2, r7, #16
 8027bce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027bd2:	4a18      	ldr	r2, [pc, #96]	@ (8027c34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8027bd4:	b2c0      	uxtb	r0, r0
 8027bd6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8027bda:	1c4a      	adds	r2, r1, #1
 8027bdc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8027be0:	0a3a      	lsrs	r2, r7, #8
 8027be2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8027be6:	00c9      	lsls	r1, r1, #3
 8027be8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8027bec:	4301      	orrs	r1, r0
 8027bee:	1c58      	adds	r0, r3, #1
 8027bf0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027bf4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8027bf8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8027bfc:	4308      	orrs	r0, r1
 8027bfe:	f8a9 0000 	strh.w	r0, [r9]
 8027c02:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8027c04:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8027c06:	441a      	add	r2, r3
 8027c08:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027c0a:	9225      	str	r2, [sp, #148]	@ 0x94
 8027c0c:	f109 0902 	add.w	r9, r9, #2
 8027c10:	441d      	add	r5, r3
 8027c12:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027c16:	e64d      	b.n	80278b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8027c18:	2800      	cmp	r0, #0
 8027c1a:	f43f aeed 	beq.w	80279f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8027c1e:	5c79      	ldrb	r1, [r7, r1]
 8027c20:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8027c24:	9109      	str	r1, [sp, #36]	@ 0x24
 8027c26:	0e09      	lsrs	r1, r1, #24
 8027c28:	9111      	str	r1, [sp, #68]	@ 0x44
 8027c2a:	e6e5      	b.n	80279f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8027c2c:	b01b      	add	sp, #108	@ 0x6c
 8027c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c32:	bf00      	nop
 8027c34:	fffff800 	.word	0xfffff800

08027c38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8027c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c3c:	b085      	sub	sp, #20
 8027c3e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8027c42:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8027c46:	9103      	str	r1, [sp, #12]
 8027c48:	fb00 7406 	mla	r4, r0, r6, r7
 8027c4c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8027c50:	2800      	cmp	r0, #0
 8027c52:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8027c56:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8027c5a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8027c5e:	9501      	str	r5, [sp, #4]
 8027c60:	eb03 0904 	add.w	r9, r3, r4
 8027c64:	f2c0 8150 	blt.w	8027f08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8027c68:	4583      	cmp	fp, r0
 8027c6a:	f340 814d 	ble.w	8027f08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8027c6e:	2f00      	cmp	r7, #0
 8027c70:	f2c0 8146 	blt.w	8027f00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8027c74:	42be      	cmp	r6, r7
 8027c76:	f340 8143 	ble.w	8027f00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8027c7a:	f813 c004 	ldrb.w	ip, [r3, r4]
 8027c7e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8027c82:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027c86:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8027c8a:	4355      	muls	r5, r2
 8027c8c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027c90:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8027c94:	fb0c f203 	mul.w	r2, ip, r3
 8027c98:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8027c9c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8027ca0:	441d      	add	r5, r3
 8027ca2:	f102 0320 	add.w	r3, r2, #32
 8027ca6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027caa:	0a1b      	lsrs	r3, r3, #8
 8027cac:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8027cb0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027cb4:	431c      	orrs	r4, r3
 8027cb6:	1c7b      	adds	r3, r7, #1
 8027cb8:	f100 812b 	bmi.w	8027f12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8027cbc:	429e      	cmp	r6, r3
 8027cbe:	f340 8128 	ble.w	8027f12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8027cc2:	2900      	cmp	r1, #0
 8027cc4:	f000 8128 	beq.w	8027f18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8027cc8:	9a01      	ldr	r2, [sp, #4]
 8027cca:	f899 3001 	ldrb.w	r3, [r9, #1]
 8027cce:	8855      	ldrh	r5, [r2, #2]
 8027cd0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8027cd4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8027cd8:	fb08 f802 	mul.w	r8, r8, r2
 8027cdc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8027ce0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8027ce4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8027ce8:	435d      	muls	r5, r3
 8027cea:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8027cee:	44d0      	add	r8, sl
 8027cf0:	f105 0a20 	add.w	sl, r5, #32
 8027cf4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8027cf8:	0a2d      	lsrs	r5, r5, #8
 8027cfa:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8027cfe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8027d02:	432a      	orrs	r2, r5
 8027d04:	3001      	adds	r0, #1
 8027d06:	f100 810d 	bmi.w	8027f24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8027d0a:	4583      	cmp	fp, r0
 8027d0c:	f340 810a 	ble.w	8027f24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8027d10:	f1be 0f00 	cmp.w	lr, #0
 8027d14:	f000 810b 	beq.w	8027f2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8027d18:	2f00      	cmp	r7, #0
 8027d1a:	f2c0 8100 	blt.w	8027f1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8027d1e:	42be      	cmp	r6, r7
 8027d20:	f340 80fd 	ble.w	8027f1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8027d24:	9801      	ldr	r0, [sp, #4]
 8027d26:	f819 5006 	ldrb.w	r5, [r9, r6]
 8027d2a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8027d2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8027d32:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8027d36:	fb0a fa00 	mul.w	sl, sl, r0
 8027d3a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8027d3e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8027d42:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8027d46:	fb05 f808 	mul.w	r8, r5, r8
 8027d4a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8027d4e:	4482      	add	sl, r0
 8027d50:	f108 0020 	add.w	r0, r8, #32
 8027d54:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8027d58:	0a00      	lsrs	r0, r0, #8
 8027d5a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8027d5e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027d62:	ea4b 0b00 	orr.w	fp, fp, r0
 8027d66:	3701      	adds	r7, #1
 8027d68:	f100 80e6 	bmi.w	8027f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8027d6c:	42be      	cmp	r6, r7
 8027d6e:	f340 80e3 	ble.w	8027f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8027d72:	2900      	cmp	r1, #0
 8027d74:	f000 80e3 	beq.w	8027f3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8027d78:	3601      	adds	r6, #1
 8027d7a:	9801      	ldr	r0, [sp, #4]
 8027d7c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8027d80:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8027d84:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8027d88:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8027d8c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027d90:	fb09 f906 	mul.w	r9, r9, r6
 8027d94:	fb07 f800 	mul.w	r8, r7, r0
 8027d98:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8027d9c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8027da0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8027da4:	44d1      	add	r9, sl
 8027da6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8027daa:	f108 0020 	add.w	r0, r8, #32
 8027dae:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8027db2:	0a00      	lsrs	r0, r0, #8
 8027db4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027db8:	4330      	orrs	r0, r6
 8027dba:	b28e      	uxth	r6, r1
 8027dbc:	fa1f f98e 	uxth.w	r9, lr
 8027dc0:	fb06 f809 	mul.w	r8, r6, r9
 8027dc4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8027dc8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8027dcc:	0136      	lsls	r6, r6, #4
 8027dce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8027dd2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8027dd6:	9601      	str	r6, [sp, #4]
 8027dd8:	ea4a 0404 	orr.w	r4, sl, r4
 8027ddc:	fa1f f689 	uxth.w	r6, r9
 8027de0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8027de4:	fb11 f90e 	smulbb	r9, r1, lr
 8027de8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8027dec:	9602      	str	r6, [sp, #8]
 8027dee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8027df2:	4626      	mov	r6, r4
 8027df4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8027df8:	f1ce 0410 	rsb	r4, lr, #16
 8027dfc:	1a64      	subs	r4, r4, r1
 8027dfe:	ea4a 0202 	orr.w	r2, sl, r2
 8027e02:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8027e06:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8027e0a:	434a      	muls	r2, r1
 8027e0c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027e10:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8027e14:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8027e18:	fb04 2406 	mla	r4, r4, r6, r2
 8027e1c:	ea4a 0000 	orr.w	r0, sl, r0
 8027e20:	fb09 4200 	mla	r2, r9, r0, r4
 8027e24:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8027e28:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8027e2c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8027e30:	ea44 0b0b 	orr.w	fp, r4, fp
 8027e34:	9c01      	ldr	r4, [sp, #4]
 8027e36:	9e02      	ldr	r6, [sp, #8]
 8027e38:	9903      	ldr	r1, [sp, #12]
 8027e3a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8027e3e:	1ba4      	subs	r4, r4, r6
 8027e40:	9e01      	ldr	r6, [sp, #4]
 8027e42:	8808      	ldrh	r0, [r1, #0]
 8027e44:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8027e48:	eba6 0608 	sub.w	r6, r6, r8
 8027e4c:	b2b6      	uxth	r6, r6
 8027e4e:	b2a4      	uxth	r4, r4
 8027e50:	4373      	muls	r3, r6
 8027e52:	fb0c 3304 	mla	r3, ip, r4, r3
 8027e56:	9c02      	ldr	r4, [sp, #8]
 8027e58:	fb04 3505 	mla	r5, r4, r5, r3
 8027e5c:	fb08 5707 	mla	r7, r8, r7, r5
 8027e60:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8027e64:	b289      	uxth	r1, r1
 8027e66:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8027e6a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8027e6e:	434f      	muls	r7, r1
 8027e70:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8027e74:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8027e78:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027e7c:	1c7b      	adds	r3, r7, #1
 8027e7e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8027e82:	ea42 0e0e 	orr.w	lr, r2, lr
 8027e86:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8027e8a:	fa1f f28e 	uxth.w	r2, lr
 8027e8e:	1203      	asrs	r3, r0, #8
 8027e90:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8027e94:	b2ff      	uxtb	r7, r7
 8027e96:	1215      	asrs	r5, r2, #8
 8027e98:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8027e9c:	fb13 f307 	smulbb	r3, r3, r7
 8027ea0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8027ea4:	fb05 3501 	mla	r5, r5, r1, r3
 8027ea8:	10c3      	asrs	r3, r0, #3
 8027eaa:	10d4      	asrs	r4, r2, #3
 8027eac:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8027eb0:	fb13 f307 	smulbb	r3, r3, r7
 8027eb4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8027eb8:	fb04 3401 	mla	r4, r4, r1, r3
 8027ebc:	00c3      	lsls	r3, r0, #3
 8027ebe:	00d2      	lsls	r2, r2, #3
 8027ec0:	b2db      	uxtb	r3, r3
 8027ec2:	fb13 f307 	smulbb	r3, r3, r7
 8027ec6:	b2d2      	uxtb	r2, r2
 8027ec8:	fb02 3101 	mla	r1, r2, r1, r3
 8027ecc:	b2ad      	uxth	r5, r5
 8027ece:	b289      	uxth	r1, r1
 8027ed0:	b2a4      	uxth	r4, r4
 8027ed2:	1c6b      	adds	r3, r5, #1
 8027ed4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027ed8:	1c62      	adds	r2, r4, #1
 8027eda:	1c4b      	adds	r3, r1, #1
 8027edc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8027ee0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027ee4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8027ee8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027eec:	0964      	lsrs	r4, r4, #5
 8027eee:	432b      	orrs	r3, r5
 8027ef0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8027ef4:	9a03      	ldr	r2, [sp, #12]
 8027ef6:	4323      	orrs	r3, r4
 8027ef8:	8013      	strh	r3, [r2, #0]
 8027efa:	b005      	add	sp, #20
 8027efc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027f00:	f04f 0c00 	mov.w	ip, #0
 8027f04:	4664      	mov	r4, ip
 8027f06:	e6d6      	b.n	8027cb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8027f08:	2300      	movs	r3, #0
 8027f0a:	469c      	mov	ip, r3
 8027f0c:	461a      	mov	r2, r3
 8027f0e:	461c      	mov	r4, r3
 8027f10:	e6f8      	b.n	8027d04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8027f12:	2300      	movs	r3, #0
 8027f14:	461a      	mov	r2, r3
 8027f16:	e6f5      	b.n	8027d04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8027f18:	460b      	mov	r3, r1
 8027f1a:	460a      	mov	r2, r1
 8027f1c:	e6f2      	b.n	8027d04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8027f1e:	2500      	movs	r5, #0
 8027f20:	46ab      	mov	fp, r5
 8027f22:	e720      	b.n	8027d66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8027f24:	2700      	movs	r7, #0
 8027f26:	463d      	mov	r5, r7
 8027f28:	4638      	mov	r0, r7
 8027f2a:	46bb      	mov	fp, r7
 8027f2c:	e745      	b.n	8027dba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8027f2e:	4677      	mov	r7, lr
 8027f30:	4675      	mov	r5, lr
 8027f32:	4670      	mov	r0, lr
 8027f34:	46f3      	mov	fp, lr
 8027f36:	e740      	b.n	8027dba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8027f38:	2700      	movs	r7, #0
 8027f3a:	4638      	mov	r0, r7
 8027f3c:	e73d      	b.n	8027dba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8027f3e:	460f      	mov	r7, r1
 8027f40:	4608      	mov	r0, r1
 8027f42:	e73a      	b.n	8027dba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08027f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027f48:	b097      	sub	sp, #92	@ 0x5c
 8027f4a:	9214      	str	r2, [sp, #80]	@ 0x50
 8027f4c:	9308      	str	r3, [sp, #32]
 8027f4e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8027f50:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8027f54:	9312      	str	r3, [sp, #72]	@ 0x48
 8027f56:	9111      	str	r1, [sp, #68]	@ 0x44
 8027f58:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8027f5c:	9015      	str	r0, [sp, #84]	@ 0x54
 8027f5e:	6850      	ldr	r0, [r2, #4]
 8027f60:	6812      	ldr	r2, [r2, #0]
 8027f62:	fb00 1303 	mla	r3, r0, r3, r1
 8027f66:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027f6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8027f6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027f6e:	681b      	ldr	r3, [r3, #0]
 8027f70:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027f72:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027f74:	685b      	ldr	r3, [r3, #4]
 8027f76:	930c      	str	r3, [sp, #48]	@ 0x30
 8027f78:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8027f7c:	930a      	str	r3, [sp, #40]	@ 0x28
 8027f7e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8027f80:	2b00      	cmp	r3, #0
 8027f82:	dc03      	bgt.n	8027f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027f84:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027f86:	2b00      	cmp	r3, #0
 8027f88:	f340 83cb 	ble.w	8028722 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8027f8c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027f8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027f92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027f96:	1e48      	subs	r0, r1, #1
 8027f98:	1e55      	subs	r5, r2, #1
 8027f9a:	9b08      	ldr	r3, [sp, #32]
 8027f9c:	2b00      	cmp	r3, #0
 8027f9e:	f340 81a3 	ble.w	80282e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8027fa2:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8027fa4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8027fa6:	1436      	asrs	r6, r6, #16
 8027fa8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8027fac:	d406      	bmi.n	8027fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8027fae:	4286      	cmp	r6, r0
 8027fb0:	da04      	bge.n	8027fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8027fb2:	2b00      	cmp	r3, #0
 8027fb4:	db02      	blt.n	8027fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8027fb6:	42ab      	cmp	r3, r5
 8027fb8:	f2c0 8197 	blt.w	80282ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8027fbc:	3601      	adds	r6, #1
 8027fbe:	f100 8184 	bmi.w	80282ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8027fc2:	42b1      	cmp	r1, r6
 8027fc4:	f2c0 8181 	blt.w	80282ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8027fc8:	3301      	adds	r3, #1
 8027fca:	f100 817e 	bmi.w	80282ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8027fce:	429a      	cmp	r2, r3
 8027fd0:	f2c0 817b 	blt.w	80282ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8027fd4:	9b08      	ldr	r3, [sp, #32]
 8027fd6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8027fd8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8027fda:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8027fde:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8027fe0:	2b00      	cmp	r3, #0
 8027fe2:	f340 81a4 	ble.w	802832e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8027fe6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8027fe8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8027fea:	1418      	asrs	r0, r3, #16
 8027fec:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8027fee:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8027ff2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8027ff4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8027ff8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027ffa:	142d      	asrs	r5, r5, #16
 8027ffc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8028000:	f100 81f8 	bmi.w	80283f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028004:	f102 3eff 	add.w	lr, r2, #4294967295
 8028008:	4575      	cmp	r5, lr
 802800a:	f280 81f3 	bge.w	80283f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802800e:	2800      	cmp	r0, #0
 8028010:	f2c0 81f0 	blt.w	80283f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028014:	f103 3eff 	add.w	lr, r3, #4294967295
 8028018:	4570      	cmp	r0, lr
 802801a:	f280 81eb 	bge.w	80283f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802801e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028020:	b212      	sxth	r2, r2
 8028022:	fb00 5002 	mla	r0, r0, r2, r5
 8028026:	fa1f fe81 	uxth.w	lr, r1
 802802a:	eb03 0a00 	add.w	sl, r3, r0
 802802e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8028032:	f813 9000 	ldrb.w	r9, [r3, r0]
 8028036:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802803a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 802803e:	b29b      	uxth	r3, r3
 8028040:	f1bc 0f00 	cmp.w	ip, #0
 8028044:	f000 81b9 	beq.w	80283ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8028048:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802804c:	940d      	str	r4, [sp, #52]	@ 0x34
 802804e:	eb0a 0b02 	add.w	fp, sl, r2
 8028052:	fa1f fa8c 	uxth.w	sl, ip
 8028056:	fb0a fe0e 	mul.w	lr, sl, lr
 802805a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802805e:	fa1f fa8a 	uxth.w	sl, sl
 8028062:	eba5 050e 	sub.w	r5, r5, lr
 8028066:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802806a:	940e      	str	r4, [sp, #56]	@ 0x38
 802806c:	eba3 030a 	sub.w	r3, r3, sl
 8028070:	b2ad      	uxth	r5, r5
 8028072:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8028074:	b29b      	uxth	r3, r3
 8028076:	fb08 f505 	mul.w	r5, r8, r5
 802807a:	fb09 5303 	mla	r3, r9, r3, r5
 802807e:	fb0a 3304 	mla	r3, sl, r4, r3
 8028082:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8028084:	fb0e 3304 	mla	r3, lr, r4, r3
 8028088:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802808c:	2b00      	cmp	r3, #0
 802808e:	f000 810f 	beq.w	80282b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028092:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028094:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028098:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802809c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80280a0:	f000 8190 	beq.w	80283c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80280a4:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80280a8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80280ac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80280b0:	fb09 f000 	mul.w	r0, r9, r0
 80280b4:	fb0a fe0e 	mul.w	lr, sl, lr
 80280b8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80280bc:	f100 0b20 	add.w	fp, r0, #32
 80280c0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80280c4:	44ce      	add	lr, r9
 80280c6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80280ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80280ce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80280d2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80280d6:	ea4e 0909 	orr.w	r9, lr, r9
 80280da:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80280de:	8868      	ldrh	r0, [r5, #2]
 80280e0:	d019      	beq.n	8028116 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80280e2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80280e6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80280ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80280ee:	fb08 f800 	mul.w	r8, r8, r0
 80280f2:	fb0a fe0e 	mul.w	lr, sl, lr
 80280f6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80280fa:	f108 0b20 	add.w	fp, r8, #32
 80280fe:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8028102:	4486      	add	lr, r0
 8028104:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8028108:	0a00      	lsrs	r0, r0, #8
 802810a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802810e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028112:	ea4e 0000 	orr.w	r0, lr, r0
 8028116:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802811a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802811e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8028122:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028126:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802812a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802812e:	ea4e 0909 	orr.w	r9, lr, r9
 8028132:	ea4a 0000 	orr.w	r0, sl, r0
 8028136:	f1bc 0f00 	cmp.w	ip, #0
 802813a:	f000 8145 	beq.w	80283c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802813e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8028142:	3a01      	subs	r2, #1
 8028144:	0052      	lsls	r2, r2, #1
 8028146:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8028148:	3202      	adds	r2, #2
 802814a:	2cff      	cmp	r4, #255	@ 0xff
 802814c:	eb05 0e02 	add.w	lr, r5, r2
 8028150:	5aaa      	ldrh	r2, [r5, r2]
 8028152:	d018      	beq.n	8028186 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8028154:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8028158:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802815c:	fb04 fa02 	mul.w	sl, r4, r2
 8028160:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028164:	fb08 f805 	mul.w	r8, r8, r5
 8028168:	f10a 0520 	add.w	r5, sl, #32
 802816c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8028170:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8028174:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028178:	4442      	add	r2, r8
 802817a:	0a2d      	lsrs	r5, r5, #8
 802817c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8028180:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028184:	432a      	orrs	r2, r5
 8028186:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8028188:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802818c:	2cff      	cmp	r4, #255	@ 0xff
 802818e:	d01a      	beq.n	80281c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8028190:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8028194:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028198:	fb04 fa05 	mul.w	sl, r4, r5
 802819c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80281a0:	fb08 f80e 	mul.w	r8, r8, lr
 80281a4:	f10a 0e20 	add.w	lr, sl, #32
 80281a8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80281ac:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80281b0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80281b4:	4445      	add	r5, r8
 80281b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80281ba:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80281be:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80281c2:	ea45 050e 	orr.w	r5, r5, lr
 80281c6:	fb1c fe01 	smulbb	lr, ip, r1
 80281ca:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80281ce:	f1cc 0810 	rsb	r8, ip, #16
 80281d2:	eba8 0801 	sub.w	r8, r8, r1
 80281d6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80281da:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80281de:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80281e2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80281e6:	4341      	muls	r1, r0
 80281e8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80281ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80281f0:	ea4a 0202 	orr.w	r2, sl, r2
 80281f4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80281f8:	fb09 1108 	mla	r1, r9, r8, r1
 80281fc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8028200:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8028204:	fb0c 1102 	mla	r1, ip, r2, r1
 8028208:	ea4b 0505 	orr.w	r5, fp, r5
 802820c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8028210:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8028214:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8028218:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802821c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8028220:	ea42 0e0e 	orr.w	lr, r2, lr
 8028224:	fa1f f28e 	uxth.w	r2, lr
 8028228:	2bff      	cmp	r3, #255	@ 0xff
 802822a:	d103      	bne.n	8028234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802822c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802822e:	29ff      	cmp	r1, #255	@ 0xff
 8028230:	f000 80de 	beq.w	80283f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8028234:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8028236:	8838      	ldrh	r0, [r7, #0]
 8028238:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802823a:	434b      	muls	r3, r1
 802823c:	f103 0c01 	add.w	ip, r3, #1
 8028240:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8028244:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8028248:	fa5f fc83 	uxtb.w	ip, r3
 802824c:	1203      	asrs	r3, r0, #8
 802824e:	1215      	asrs	r5, r2, #8
 8028250:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8028254:	fb13 f30c 	smulbb	r3, r3, ip
 8028258:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802825c:	fb05 3501 	mla	r5, r5, r1, r3
 8028260:	10c3      	asrs	r3, r0, #3
 8028262:	10d1      	asrs	r1, r2, #3
 8028264:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8028268:	fb13 f30c 	smulbb	r3, r3, ip
 802826c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8028270:	fb01 3104 	mla	r1, r1, r4, r3
 8028274:	00c3      	lsls	r3, r0, #3
 8028276:	00d2      	lsls	r2, r2, #3
 8028278:	b2db      	uxtb	r3, r3
 802827a:	b2d2      	uxtb	r2, r2
 802827c:	fb13 f30c 	smulbb	r3, r3, ip
 8028280:	b2ad      	uxth	r5, r5
 8028282:	fb02 3304 	mla	r3, r2, r4, r3
 8028286:	b29a      	uxth	r2, r3
 8028288:	1c6b      	adds	r3, r5, #1
 802828a:	b289      	uxth	r1, r1
 802828c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028290:	1c53      	adds	r3, r2, #1
 8028292:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028296:	1c4a      	adds	r2, r1, #1
 8028298:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802829c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80282a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80282a4:	0949      	lsrs	r1, r1, #5
 80282a6:	432b      	orrs	r3, r5
 80282a8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80282ac:	430b      	orrs	r3, r1
 80282ae:	803b      	strh	r3, [r7, #0]
 80282b0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80282b2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80282b4:	4413      	add	r3, r2
 80282b6:	9321      	str	r3, [sp, #132]	@ 0x84
 80282b8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80282ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80282bc:	441a      	add	r2, r3
 80282be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80282c0:	9222      	str	r2, [sp, #136]	@ 0x88
 80282c2:	3b01      	subs	r3, #1
 80282c4:	3702      	adds	r7, #2
 80282c6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80282c8:	e689      	b.n	8027fde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80282ca:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80282cc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80282ce:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 80282d0:	4433      	add	r3, r6
 80282d2:	9321      	str	r3, [sp, #132]	@ 0x84
 80282d4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80282d6:	441c      	add	r4, r3
 80282d8:	9b08      	ldr	r3, [sp, #32]
 80282da:	9422      	str	r4, [sp, #136]	@ 0x88
 80282dc:	3b01      	subs	r3, #1
 80282de:	9308      	str	r3, [sp, #32]
 80282e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80282e2:	3302      	adds	r3, #2
 80282e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80282e6:	e658      	b.n	8027f9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80282e8:	d028      	beq.n	802833c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80282ea:	9b08      	ldr	r3, [sp, #32]
 80282ec:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80282ee:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80282f0:	3b01      	subs	r3, #1
 80282f2:	fb00 5003 	mla	r0, r0, r3, r5
 80282f6:	1400      	asrs	r0, r0, #16
 80282f8:	f53f ae6c 	bmi.w	8027fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80282fc:	3901      	subs	r1, #1
 80282fe:	4288      	cmp	r0, r1
 8028300:	f6bf ae68 	bge.w	8027fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8028304:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8028306:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8028308:	fb01 0303 	mla	r3, r1, r3, r0
 802830c:	141b      	asrs	r3, r3, #16
 802830e:	f53f ae61 	bmi.w	8027fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8028312:	3a01      	subs	r2, #1
 8028314:	4293      	cmp	r3, r2
 8028316:	f6bf ae5d 	bge.w	8027fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802831a:	9b08      	ldr	r3, [sp, #32]
 802831c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8028320:	9313      	str	r3, [sp, #76]	@ 0x4c
 8028322:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8028326:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8028328:	2b00      	cmp	r3, #0
 802832a:	f300 8082 	bgt.w	8028432 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802832e:	9b08      	ldr	r3, [sp, #32]
 8028330:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8028334:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028336:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802833a:	9309      	str	r3, [sp, #36]	@ 0x24
 802833c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802833e:	2b00      	cmp	r3, #0
 8028340:	f340 81ef 	ble.w	8028722 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8028344:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028348:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802834c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028350:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028352:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028356:	ee31 1a05 	vadd.f32	s2, s2, s10
 802835a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802835e:	eef0 6a62 	vmov.f32	s13, s5
 8028362:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028366:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802836a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802836e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8028372:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028376:	eef0 6a43 	vmov.f32	s13, s6
 802837a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802837e:	ee12 2a90 	vmov	r2, s5
 8028382:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028386:	fb92 f3f3 	sdiv	r3, r2, r3
 802838a:	ee13 2a10 	vmov	r2, s6
 802838e:	9323      	str	r3, [sp, #140]	@ 0x8c
 8028390:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028392:	fb92 f3f3 	sdiv	r3, r2, r3
 8028396:	9324      	str	r3, [sp, #144]	@ 0x90
 8028398:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802839a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802839c:	3b01      	subs	r3, #1
 802839e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80283a2:	9311      	str	r3, [sp, #68]	@ 0x44
 80283a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80283a6:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 80283aa:	bf08      	it	eq
 80283ac:	4613      	moveq	r3, r2
 80283ae:	9308      	str	r3, [sp, #32]
 80283b0:	eeb0 3a67 	vmov.f32	s6, s15
 80283b4:	eef0 2a47 	vmov.f32	s5, s14
 80283b8:	e5e1      	b.n	8027f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80283ba:	fb08 f505 	mul.w	r5, r8, r5
 80283be:	fb09 5303 	mla	r3, r9, r3, r5
 80283c2:	e661      	b.n	8028088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80283c4:	4681      	mov	r9, r0
 80283c6:	e688      	b.n	80280da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80283c8:	f1c1 0210 	rsb	r2, r1, #16
 80283cc:	4341      	muls	r1, r0
 80283ce:	fb09 1902 	mla	r9, r9, r2, r1
 80283d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80283d6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80283da:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80283de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80283e2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80283e6:	ea42 0909 	orr.w	r9, r2, r9
 80283ea:	fa1f f289 	uxth.w	r2, r9
 80283ee:	e71b      	b.n	8028228 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80283f0:	803a      	strh	r2, [r7, #0]
 80283f2:	e75d      	b.n	80282b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80283f4:	f115 0e01 	adds.w	lr, r5, #1
 80283f8:	f53f af5a 	bmi.w	80282b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80283fc:	4572      	cmp	r2, lr
 80283fe:	f6ff af57 	blt.w	80282b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028402:	f110 0e01 	adds.w	lr, r0, #1
 8028406:	f53f af53 	bmi.w	80282b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802840a:	4573      	cmp	r3, lr
 802840c:	f6ff af50 	blt.w	80282b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028410:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8028412:	9502      	str	r5, [sp, #8]
 8028414:	b21b      	sxth	r3, r3
 8028416:	b212      	sxth	r2, r2
 8028418:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802841c:	9301      	str	r3, [sp, #4]
 802841e:	9200      	str	r2, [sp, #0]
 8028420:	e9cd c405 	strd	ip, r4, [sp, #20]
 8028424:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8028428:	4639      	mov	r1, r7
 802842a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802842c:	f7ff fc04 	bl	8027c38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8028430:	e73e      	b.n	80282b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028432:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028434:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8028438:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802843a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802843e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8028440:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028444:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028446:	141f      	asrs	r7, r3, #16
 8028448:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802844a:	141b      	asrs	r3, r3, #16
 802844c:	fb01 3707 	mla	r7, r1, r7, r3
 8028450:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028452:	fa1f fc82 	uxth.w	ip, r2
 8028456:	eb03 0a07 	add.w	sl, r3, r7
 802845a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802845e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8028462:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8028466:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802846a:	b29b      	uxth	r3, r3
 802846c:	2d00      	cmp	r5, #0
 802846e:	f000 813d 	beq.w	80286ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8028472:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8028476:	940f      	str	r4, [sp, #60]	@ 0x3c
 8028478:	eb0a 0b01 	add.w	fp, sl, r1
 802847c:	fa1f fa85 	uxth.w	sl, r5
 8028480:	fb0a fc0c 	mul.w	ip, sl, ip
 8028484:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8028488:	fa1f fa8a 	uxth.w	sl, sl
 802848c:	eba0 000c 	sub.w	r0, r0, ip
 8028490:	eba3 030a 	sub.w	r3, r3, sl
 8028494:	b280      	uxth	r0, r0
 8028496:	fb08 f000 	mul.w	r0, r8, r0
 802849a:	b29b      	uxth	r3, r3
 802849c:	fb09 0303 	mla	r3, r9, r3, r0
 80284a0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80284a2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80284a6:	9410      	str	r4, [sp, #64]	@ 0x40
 80284a8:	fb0a 3300 	mla	r3, sl, r0, r3
 80284ac:	fb0c 3304 	mla	r3, ip, r4, r3
 80284b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80284b4:	2b00      	cmp	r3, #0
 80284b6:	f000 810b 	beq.w	80286d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80284ba:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80284bc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80284be:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80284c2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80284c6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80284ca:	f000 8114 	beq.w	80286f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80284ce:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80284d2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80284d6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80284da:	fb09 f707 	mul.w	r7, r9, r7
 80284de:	fb0a fc0c 	mul.w	ip, sl, ip
 80284e2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80284e6:	f107 0b20 	add.w	fp, r7, #32
 80284ea:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80284ee:	44cc      	add	ip, r9
 80284f0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80284f4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80284f8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80284fc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8028500:	ea4c 0909 	orr.w	r9, ip, r9
 8028504:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028508:	8847      	ldrh	r7, [r0, #2]
 802850a:	d019      	beq.n	8028540 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 802850c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8028510:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8028514:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028518:	fb08 f807 	mul.w	r8, r8, r7
 802851c:	fb0a fc0c 	mul.w	ip, sl, ip
 8028520:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8028524:	f108 0b20 	add.w	fp, r8, #32
 8028528:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802852c:	44bc      	add	ip, r7
 802852e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8028532:	0a3f      	lsrs	r7, r7, #8
 8028534:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8028538:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802853c:	ea4c 0707 	orr.w	r7, ip, r7
 8028540:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8028544:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8028548:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802854c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028550:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028554:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8028558:	ea4c 0909 	orr.w	r9, ip, r9
 802855c:	ea4a 0707 	orr.w	r7, sl, r7
 8028560:	2d00      	cmp	r5, #0
 8028562:	f000 80ca 	beq.w	80286fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8028566:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802856a:	3901      	subs	r1, #1
 802856c:	0049      	lsls	r1, r1, #1
 802856e:	3102      	adds	r1, #2
 8028570:	eb00 0c01 	add.w	ip, r0, r1
 8028574:	5a41      	ldrh	r1, [r0, r1]
 8028576:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8028578:	28ff      	cmp	r0, #255	@ 0xff
 802857a:	d019      	beq.n	80285b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 802857c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802857e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8028582:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8028586:	fb04 fa01 	mul.w	sl, r4, r1
 802858a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802858e:	fb08 f800 	mul.w	r8, r8, r0
 8028592:	f10a 0020 	add.w	r0, sl, #32
 8028596:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802859a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802859e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80285a2:	4441      	add	r1, r8
 80285a4:	0a00      	lsrs	r0, r0, #8
 80285a6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80285aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80285ae:	4301      	orrs	r1, r0
 80285b0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80285b2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80285b6:	2cff      	cmp	r4, #255	@ 0xff
 80285b8:	d01a      	beq.n	80285f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80285ba:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80285be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80285c2:	fb04 fa00 	mul.w	sl, r4, r0
 80285c6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80285ca:	fb08 f80c 	mul.w	r8, r8, ip
 80285ce:	f10a 0c20 	add.w	ip, sl, #32
 80285d2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80285d6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80285da:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80285de:	4440      	add	r0, r8
 80285e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80285e4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80285e8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80285ec:	ea40 000c 	orr.w	r0, r0, ip
 80285f0:	fb15 fc02 	smulbb	ip, r5, r2
 80285f4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80285f8:	f1c5 0810 	rsb	r8, r5, #16
 80285fc:	eba8 0802 	sub.w	r8, r8, r2
 8028600:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8028604:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8028608:	437a      	muls	r2, r7
 802860a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802860e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8028612:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028616:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802861a:	fb09 2208 	mla	r2, r9, r8, r2
 802861e:	ea4a 0101 	orr.w	r1, sl, r1
 8028622:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8028626:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802862a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802862e:	fb05 2201 	mla	r2, r5, r1, r2
 8028632:	ea4b 0000 	orr.w	r0, fp, r0
 8028636:	fb0c 2200 	mla	r2, ip, r0, r2
 802863a:	0d57      	lsrs	r7, r2, #21
 802863c:	0952      	lsrs	r2, r2, #5
 802863e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028642:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028646:	433a      	orrs	r2, r7
 8028648:	2bff      	cmp	r3, #255	@ 0xff
 802864a:	b292      	uxth	r2, r2
 802864c:	d102      	bne.n	8028654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802864e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8028650:	29ff      	cmp	r1, #255	@ 0xff
 8028652:	d063      	beq.n	802871c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8028654:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8028656:	f8be 1000 	ldrh.w	r1, [lr]
 802865a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802865c:	4343      	muls	r3, r0
 802865e:	1c58      	adds	r0, r3, #1
 8028660:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8028664:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8028668:	1208      	asrs	r0, r1, #8
 802866a:	b2db      	uxtb	r3, r3
 802866c:	1215      	asrs	r5, r2, #8
 802866e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8028672:	fb10 f003 	smulbb	r0, r0, r3
 8028676:	10cf      	asrs	r7, r1, #3
 8028678:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802867c:	00c9      	lsls	r1, r1, #3
 802867e:	fb05 0504 	mla	r5, r5, r4, r0
 8028682:	b2c9      	uxtb	r1, r1
 8028684:	10d0      	asrs	r0, r2, #3
 8028686:	00d2      	lsls	r2, r2, #3
 8028688:	fb11 f103 	smulbb	r1, r1, r3
 802868c:	b2d2      	uxtb	r2, r2
 802868e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8028692:	fb02 1204 	mla	r2, r2, r4, r1
 8028696:	fb17 f703 	smulbb	r7, r7, r3
 802869a:	b2ad      	uxth	r5, r5
 802869c:	b292      	uxth	r2, r2
 802869e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80286a2:	fb00 7004 	mla	r0, r0, r4, r7
 80286a6:	1c6b      	adds	r3, r5, #1
 80286a8:	1c57      	adds	r7, r2, #1
 80286aa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80286ae:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80286b2:	b280      	uxth	r0, r0
 80286b4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80286b8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80286bc:	433d      	orrs	r5, r7
 80286be:	1c47      	adds	r7, r0, #1
 80286c0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80286c4:	097f      	lsrs	r7, r7, #5
 80286c6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80286ca:	433d      	orrs	r5, r7
 80286cc:	f8ae 5000 	strh.w	r5, [lr]
 80286d0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80286d2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80286d4:	4413      	add	r3, r2
 80286d6:	9321      	str	r3, [sp, #132]	@ 0x84
 80286d8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80286da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80286dc:	441a      	add	r2, r3
 80286de:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80286e0:	9222      	str	r2, [sp, #136]	@ 0x88
 80286e2:	3b01      	subs	r3, #1
 80286e4:	f10e 0e02 	add.w	lr, lr, #2
 80286e8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80286ea:	e61c      	b.n	8028326 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80286ec:	fb08 f000 	mul.w	r0, r8, r0
 80286f0:	fb09 0303 	mla	r3, r9, r3, r0
 80286f4:	e6dc      	b.n	80284b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80286f6:	46b9      	mov	r9, r7
 80286f8:	e704      	b.n	8028504 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80286fa:	f1c2 0110 	rsb	r1, r2, #16
 80286fe:	437a      	muls	r2, r7
 8028700:	fb09 2901 	mla	r9, r9, r1, r2
 8028704:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8028708:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802870c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8028710:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028714:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028718:	4302      	orrs	r2, r0
 802871a:	e795      	b.n	8028648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802871c:	f8ae 2000 	strh.w	r2, [lr]
 8028720:	e7d6      	b.n	80286d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8028722:	b017      	add	sp, #92	@ 0x5c
 8028724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028728 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8028728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802872c:	b085      	sub	sp, #20
 802872e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8028732:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8028736:	9103      	str	r1, [sp, #12]
 8028738:	fb00 7406 	mla	r4, r0, r6, r7
 802873c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8028740:	2800      	cmp	r0, #0
 8028742:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8028746:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802874a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 802874e:	9501      	str	r5, [sp, #4]
 8028750:	eb02 0904 	add.w	r9, r2, r4
 8028754:	f2c0 8141 	blt.w	80289da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8028758:	4583      	cmp	fp, r0
 802875a:	f340 813e 	ble.w	80289da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802875e:	2f00      	cmp	r7, #0
 8028760:	f2c0 8137 	blt.w	80289d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8028764:	42be      	cmp	r6, r7
 8028766:	f340 8134 	ble.w	80289d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802876a:	f812 c004 	ldrb.w	ip, [r2, r4]
 802876e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8028772:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028776:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802877a:	4355      	muls	r5, r2
 802877c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8028780:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8028784:	fb0c f203 	mul.w	r2, ip, r3
 8028788:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802878c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8028790:	441d      	add	r5, r3
 8028792:	f102 0320 	add.w	r3, r2, #32
 8028796:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802879a:	0a1b      	lsrs	r3, r3, #8
 802879c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80287a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80287a4:	431c      	orrs	r4, r3
 80287a6:	1c7b      	adds	r3, r7, #1
 80287a8:	f100 811c 	bmi.w	80289e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80287ac:	429e      	cmp	r6, r3
 80287ae:	f340 8119 	ble.w	80289e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80287b2:	2900      	cmp	r1, #0
 80287b4:	f000 8119 	beq.w	80289ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80287b8:	9a01      	ldr	r2, [sp, #4]
 80287ba:	f899 3001 	ldrb.w	r3, [r9, #1]
 80287be:	8855      	ldrh	r5, [r2, #2]
 80287c0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80287c4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80287c8:	fb08 f802 	mul.w	r8, r8, r2
 80287cc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80287d0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 80287d4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80287d8:	435d      	muls	r5, r3
 80287da:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80287de:	44d0      	add	r8, sl
 80287e0:	f105 0a20 	add.w	sl, r5, #32
 80287e4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80287e8:	0a2d      	lsrs	r5, r5, #8
 80287ea:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80287ee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80287f2:	432a      	orrs	r2, r5
 80287f4:	3001      	adds	r0, #1
 80287f6:	f100 80fe 	bmi.w	80289f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80287fa:	4583      	cmp	fp, r0
 80287fc:	f340 80fb 	ble.w	80289f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8028800:	f1be 0f00 	cmp.w	lr, #0
 8028804:	f000 80fc 	beq.w	8028a00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8028808:	2f00      	cmp	r7, #0
 802880a:	f2c0 80f1 	blt.w	80289f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802880e:	42be      	cmp	r6, r7
 8028810:	f340 80ee 	ble.w	80289f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8028814:	9801      	ldr	r0, [sp, #4]
 8028816:	f819 5006 	ldrb.w	r5, [r9, r6]
 802881a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802881e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8028822:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8028826:	fb0a fa00 	mul.w	sl, sl, r0
 802882a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 802882e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8028832:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8028836:	fb05 f808 	mul.w	r8, r5, r8
 802883a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 802883e:	4482      	add	sl, r0
 8028840:	f108 0020 	add.w	r0, r8, #32
 8028844:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028848:	0a00      	lsrs	r0, r0, #8
 802884a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802884e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028852:	ea4b 0b00 	orr.w	fp, fp, r0
 8028856:	3701      	adds	r7, #1
 8028858:	f100 80d7 	bmi.w	8028a0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802885c:	42be      	cmp	r6, r7
 802885e:	f340 80d4 	ble.w	8028a0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8028862:	2900      	cmp	r1, #0
 8028864:	f000 80d4 	beq.w	8028a10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8028868:	3601      	adds	r6, #1
 802886a:	9801      	ldr	r0, [sp, #4]
 802886c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8028870:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8028874:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8028878:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 802887c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028880:	fb09 f906 	mul.w	r9, r9, r6
 8028884:	fb07 f800 	mul.w	r8, r7, r0
 8028888:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 802888c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8028890:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8028894:	44d1      	add	r9, sl
 8028896:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802889a:	f108 0020 	add.w	r0, r8, #32
 802889e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80288a2:	0a00      	lsrs	r0, r0, #8
 80288a4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80288a8:	4330      	orrs	r0, r6
 80288aa:	b28e      	uxth	r6, r1
 80288ac:	fa1f f98e 	uxth.w	r9, lr
 80288b0:	fb06 f809 	mul.w	r8, r6, r9
 80288b4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80288b8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80288bc:	0136      	lsls	r6, r6, #4
 80288be:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80288c2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80288c6:	9601      	str	r6, [sp, #4]
 80288c8:	ea4a 0404 	orr.w	r4, sl, r4
 80288cc:	fa1f f689 	uxth.w	r6, r9
 80288d0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80288d4:	fb11 f90e 	smulbb	r9, r1, lr
 80288d8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80288dc:	9602      	str	r6, [sp, #8]
 80288de:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80288e2:	4626      	mov	r6, r4
 80288e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80288e8:	f1ce 0410 	rsb	r4, lr, #16
 80288ec:	1a64      	subs	r4, r4, r1
 80288ee:	ea4a 0202 	orr.w	r2, sl, r2
 80288f2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80288f6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80288fa:	434a      	muls	r2, r1
 80288fc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8028900:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028904:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8028908:	fb04 2406 	mla	r4, r4, r6, r2
 802890c:	ea4a 0000 	orr.w	r0, sl, r0
 8028910:	fb09 4200 	mla	r2, r9, r0, r4
 8028914:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8028918:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802891c:	9801      	ldr	r0, [sp, #4]
 802891e:	9903      	ldr	r1, [sp, #12]
 8028920:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8028924:	ea44 0b0b 	orr.w	fp, r4, fp
 8028928:	9c02      	ldr	r4, [sp, #8]
 802892a:	8809      	ldrh	r1, [r1, #0]
 802892c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8028930:	1b00      	subs	r0, r0, r4
 8028932:	9c01      	ldr	r4, [sp, #4]
 8028934:	eba4 0608 	sub.w	r6, r4, r8
 8028938:	b2b6      	uxth	r6, r6
 802893a:	b280      	uxth	r0, r0
 802893c:	4373      	muls	r3, r6
 802893e:	fb0c 3300 	mla	r3, ip, r0, r3
 8028942:	9802      	ldr	r0, [sp, #8]
 8028944:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8028948:	fb00 3505 	mla	r5, r0, r5, r3
 802894c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8028950:	fb08 5707 	mla	r7, r8, r7, r5
 8028954:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8028958:	120b      	asrs	r3, r1, #8
 802895a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802895e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8028962:	b2ff      	uxtb	r7, r7
 8028964:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028968:	10c8      	asrs	r0, r1, #3
 802896a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802896e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8028972:	00c9      	lsls	r1, r1, #3
 8028974:	437b      	muls	r3, r7
 8028976:	ea42 0e0e 	orr.w	lr, r2, lr
 802897a:	b2c9      	uxtb	r1, r1
 802897c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8028980:	fa1f f28e 	uxth.w	r2, lr
 8028984:	4378      	muls	r0, r7
 8028986:	434f      	muls	r7, r1
 8028988:	1c59      	adds	r1, r3, #1
 802898a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802898e:	1213      	asrs	r3, r2, #8
 8028990:	f023 0307 	bic.w	r3, r3, #7
 8028994:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8028998:	1c41      	adds	r1, r0, #1
 802899a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802899e:	10d1      	asrs	r1, r2, #3
 80289a0:	f021 0103 	bic.w	r1, r1, #3
 80289a4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80289a8:	021b      	lsls	r3, r3, #8
 80289aa:	00c9      	lsls	r1, r1, #3
 80289ac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80289b0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80289b4:	430b      	orrs	r3, r1
 80289b6:	1c79      	adds	r1, r7, #1
 80289b8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80289bc:	00d2      	lsls	r2, r2, #3
 80289be:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80289c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80289c6:	431a      	orrs	r2, r3
 80289c8:	9b03      	ldr	r3, [sp, #12]
 80289ca:	801a      	strh	r2, [r3, #0]
 80289cc:	b005      	add	sp, #20
 80289ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289d2:	f04f 0c00 	mov.w	ip, #0
 80289d6:	4664      	mov	r4, ip
 80289d8:	e6e5      	b.n	80287a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80289da:	2300      	movs	r3, #0
 80289dc:	469c      	mov	ip, r3
 80289de:	461a      	mov	r2, r3
 80289e0:	461c      	mov	r4, r3
 80289e2:	e707      	b.n	80287f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80289e4:	2300      	movs	r3, #0
 80289e6:	461a      	mov	r2, r3
 80289e8:	e704      	b.n	80287f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80289ea:	460b      	mov	r3, r1
 80289ec:	460a      	mov	r2, r1
 80289ee:	e701      	b.n	80287f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80289f0:	2500      	movs	r5, #0
 80289f2:	46ab      	mov	fp, r5
 80289f4:	e72f      	b.n	8028856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80289f6:	2700      	movs	r7, #0
 80289f8:	463d      	mov	r5, r7
 80289fa:	4638      	mov	r0, r7
 80289fc:	46bb      	mov	fp, r7
 80289fe:	e754      	b.n	80288aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8028a00:	4677      	mov	r7, lr
 8028a02:	4675      	mov	r5, lr
 8028a04:	4670      	mov	r0, lr
 8028a06:	46f3      	mov	fp, lr
 8028a08:	e74f      	b.n	80288aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8028a0a:	2700      	movs	r7, #0
 8028a0c:	4638      	mov	r0, r7
 8028a0e:	e74c      	b.n	80288aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8028a10:	460f      	mov	r7, r1
 8028a12:	4608      	mov	r0, r1
 8028a14:	e749      	b.n	80288aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08028a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028a1c:	b093      	sub	sp, #76	@ 0x4c
 8028a1e:	9210      	str	r2, [sp, #64]	@ 0x40
 8028a20:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8028a22:	910e      	str	r1, [sp, #56]	@ 0x38
 8028a24:	9306      	str	r3, [sp, #24]
 8028a26:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8028a2a:	9011      	str	r0, [sp, #68]	@ 0x44
 8028a2c:	6850      	ldr	r0, [r2, #4]
 8028a2e:	6812      	ldr	r2, [r2, #0]
 8028a30:	fb00 1303 	mla	r3, r0, r3, r1
 8028a34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028a38:	9307      	str	r3, [sp, #28]
 8028a3a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028a3c:	681b      	ldr	r3, [r3, #0]
 8028a3e:	9308      	str	r3, [sp, #32]
 8028a40:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028a42:	685b      	ldr	r3, [r3, #4]
 8028a44:	9309      	str	r3, [sp, #36]	@ 0x24
 8028a46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028a48:	2b00      	cmp	r3, #0
 8028a4a:	dc03      	bgt.n	8028a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8028a4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8028a4e:	2b00      	cmp	r3, #0
 8028a50:	f340 83b4 	ble.w	80291bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8028a54:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028a56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028a5a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028a5e:	1e48      	subs	r0, r1, #1
 8028a60:	1e55      	subs	r5, r2, #1
 8028a62:	9b06      	ldr	r3, [sp, #24]
 8028a64:	2b00      	cmp	r3, #0
 8028a66:	f340 8163 	ble.w	8028d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8028a6a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8028a6c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028a6e:	1436      	asrs	r6, r6, #16
 8028a70:	ea4f 4323 	mov.w	r3, r3, asr #16
 8028a74:	d406      	bmi.n	8028a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8028a76:	4286      	cmp	r6, r0
 8028a78:	da04      	bge.n	8028a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8028a7a:	2b00      	cmp	r3, #0
 8028a7c:	db02      	blt.n	8028a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8028a7e:	42ab      	cmp	r3, r5
 8028a80:	f2c0 8157 	blt.w	8028d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8028a84:	3601      	adds	r6, #1
 8028a86:	f100 8144 	bmi.w	8028d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8028a8a:	42b1      	cmp	r1, r6
 8028a8c:	f2c0 8141 	blt.w	8028d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8028a90:	3301      	adds	r3, #1
 8028a92:	f100 813e 	bmi.w	8028d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8028a96:	429a      	cmp	r2, r3
 8028a98:	f2c0 813b 	blt.w	8028d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8028a9c:	9b06      	ldr	r3, [sp, #24]
 8028a9e:	9f07      	ldr	r7, [sp, #28]
 8028aa0:	930f      	str	r3, [sp, #60]	@ 0x3c
 8028aa2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8028aa6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8028aa8:	2b00      	cmp	r3, #0
 8028aaa:	f340 8164 	ble.w	8028d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8028aae:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028ab0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8028ab2:	1418      	asrs	r0, r3, #16
 8028ab4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8028ab6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8028aba:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028abc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8028ac0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028ac2:	142d      	asrs	r5, r5, #16
 8028ac4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8028ac8:	f100 81ee 	bmi.w	8028ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8028acc:	f102 3eff 	add.w	lr, r2, #4294967295
 8028ad0:	4575      	cmp	r5, lr
 8028ad2:	f280 81e9 	bge.w	8028ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8028ad6:	2800      	cmp	r0, #0
 8028ad8:	f2c0 81e6 	blt.w	8028ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8028adc:	f103 3eff 	add.w	lr, r3, #4294967295
 8028ae0:	4570      	cmp	r0, lr
 8028ae2:	f280 81e1 	bge.w	8028ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8028ae6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028ae8:	b212      	sxth	r2, r2
 8028aea:	fb00 5002 	mla	r0, r0, r2, r5
 8028aee:	fa1f fe81 	uxth.w	lr, r1
 8028af2:	eb03 0a00 	add.w	sl, r3, r0
 8028af6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8028afa:	f813 9000 	ldrb.w	r9, [r3, r0]
 8028afe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8028b02:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8028b06:	b29b      	uxth	r3, r3
 8028b08:	f1bc 0f00 	cmp.w	ip, #0
 8028b0c:	f000 8179 	beq.w	8028e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8028b10:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8028b14:	940a      	str	r4, [sp, #40]	@ 0x28
 8028b16:	eb0a 0b02 	add.w	fp, sl, r2
 8028b1a:	fa1f fa8c 	uxth.w	sl, ip
 8028b1e:	fb0a fe0e 	mul.w	lr, sl, lr
 8028b22:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8028b26:	fa1f fa8a 	uxth.w	sl, sl
 8028b2a:	eba5 050e 	sub.w	r5, r5, lr
 8028b2e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8028b32:	940b      	str	r4, [sp, #44]	@ 0x2c
 8028b34:	eba3 030a 	sub.w	r3, r3, sl
 8028b38:	b2ad      	uxth	r5, r5
 8028b3a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8028b3c:	b29b      	uxth	r3, r3
 8028b3e:	fb08 f505 	mul.w	r5, r8, r5
 8028b42:	fb09 5303 	mla	r3, r9, r3, r5
 8028b46:	fb0a 3304 	mla	r3, sl, r4, r3
 8028b4a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028b4c:	fb0e 3304 	mla	r3, lr, r4, r3
 8028b50:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028b54:	2b00      	cmp	r3, #0
 8028b56:	f000 80cf 	beq.w	8028cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8028b5a:	9c08      	ldr	r4, [sp, #32]
 8028b5c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028b60:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8028b64:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8028b68:	f000 8150 	beq.w	8028e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8028b6c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8028b70:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8028b74:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028b78:	fb09 f000 	mul.w	r0, r9, r0
 8028b7c:	fb0a fe0e 	mul.w	lr, sl, lr
 8028b80:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8028b84:	f100 0b20 	add.w	fp, r0, #32
 8028b88:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8028b8c:	44ce      	add	lr, r9
 8028b8e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8028b92:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028b96:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8028b9a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8028b9e:	ea4e 0909 	orr.w	r9, lr, r9
 8028ba2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028ba6:	8868      	ldrh	r0, [r5, #2]
 8028ba8:	d019      	beq.n	8028bde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8028baa:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8028bae:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8028bb2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028bb6:	fb08 f800 	mul.w	r8, r8, r0
 8028bba:	fb0a fe0e 	mul.w	lr, sl, lr
 8028bbe:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8028bc2:	f108 0b20 	add.w	fp, r8, #32
 8028bc6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8028bca:	4486      	add	lr, r0
 8028bcc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8028bd0:	0a00      	lsrs	r0, r0, #8
 8028bd2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8028bd6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028bda:	ea4e 0000 	orr.w	r0, lr, r0
 8028bde:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8028be2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8028be6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8028bea:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028bee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028bf2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8028bf6:	ea4e 0909 	orr.w	r9, lr, r9
 8028bfa:	ea4a 0000 	orr.w	r0, sl, r0
 8028bfe:	f1bc 0f00 	cmp.w	ip, #0
 8028c02:	f000 8105 	beq.w	8028e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8028c06:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8028c0a:	3a01      	subs	r2, #1
 8028c0c:	0052      	lsls	r2, r2, #1
 8028c0e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8028c10:	3202      	adds	r2, #2
 8028c12:	2cff      	cmp	r4, #255	@ 0xff
 8028c14:	eb05 0e02 	add.w	lr, r5, r2
 8028c18:	5aaa      	ldrh	r2, [r5, r2]
 8028c1a:	d018      	beq.n	8028c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8028c1c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8028c20:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028c24:	fb04 fa02 	mul.w	sl, r4, r2
 8028c28:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028c2c:	fb08 f805 	mul.w	r8, r8, r5
 8028c30:	f10a 0520 	add.w	r5, sl, #32
 8028c34:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8028c38:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8028c3c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028c40:	4442      	add	r2, r8
 8028c42:	0a2d      	lsrs	r5, r5, #8
 8028c44:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8028c48:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028c4c:	432a      	orrs	r2, r5
 8028c4e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028c50:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8028c54:	2cff      	cmp	r4, #255	@ 0xff
 8028c56:	d01a      	beq.n	8028c8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8028c58:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8028c5c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028c60:	fb04 fa05 	mul.w	sl, r4, r5
 8028c64:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028c68:	fb08 f80e 	mul.w	r8, r8, lr
 8028c6c:	f10a 0e20 	add.w	lr, sl, #32
 8028c70:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8028c74:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8028c78:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028c7c:	4445      	add	r5, r8
 8028c7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028c82:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8028c86:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8028c8a:	ea45 050e 	orr.w	r5, r5, lr
 8028c8e:	fb1c fe01 	smulbb	lr, ip, r1
 8028c92:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8028c96:	f1cc 0810 	rsb	r8, ip, #16
 8028c9a:	eba8 0801 	sub.w	r8, r8, r1
 8028c9e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8028ca2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8028ca6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8028caa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8028cae:	4341      	muls	r1, r0
 8028cb0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028cb4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028cb8:	ea4a 0202 	orr.w	r2, sl, r2
 8028cbc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8028cc0:	fb09 1108 	mla	r1, r9, r8, r1
 8028cc4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8028cc8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8028ccc:	fb0c 1102 	mla	r1, ip, r2, r1
 8028cd0:	ea4b 0505 	orr.w	r5, fp, r5
 8028cd4:	fb0e 1e05 	mla	lr, lr, r5, r1
 8028cd8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8028cdc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8028ce0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028ce4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8028ce8:	ea42 0e0e 	orr.w	lr, r2, lr
 8028cec:	fa1f f28e 	uxth.w	r2, lr
 8028cf0:	2bff      	cmp	r3, #255	@ 0xff
 8028cf2:	f040 80a1 	bne.w	8028e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8028cf6:	803a      	strh	r2, [r7, #0]
 8028cf8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8028cfa:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8028cfc:	4413      	add	r3, r2
 8028cfe:	931d      	str	r3, [sp, #116]	@ 0x74
 8028d00:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8028d02:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028d04:	441a      	add	r2, r3
 8028d06:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8028d08:	921e      	str	r2, [sp, #120]	@ 0x78
 8028d0a:	3b01      	subs	r3, #1
 8028d0c:	3702      	adds	r7, #2
 8028d0e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8028d10:	e6c9      	b.n	8028aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8028d12:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8028d14:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8028d16:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8028d18:	4433      	add	r3, r6
 8028d1a:	931d      	str	r3, [sp, #116]	@ 0x74
 8028d1c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028d1e:	441c      	add	r4, r3
 8028d20:	9b06      	ldr	r3, [sp, #24]
 8028d22:	941e      	str	r4, [sp, #120]	@ 0x78
 8028d24:	3b01      	subs	r3, #1
 8028d26:	9306      	str	r3, [sp, #24]
 8028d28:	9b07      	ldr	r3, [sp, #28]
 8028d2a:	3302      	adds	r3, #2
 8028d2c:	9307      	str	r3, [sp, #28]
 8028d2e:	e698      	b.n	8028a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8028d30:	d028      	beq.n	8028d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028d32:	9b06      	ldr	r3, [sp, #24]
 8028d34:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8028d36:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8028d38:	3b01      	subs	r3, #1
 8028d3a:	fb00 5003 	mla	r0, r0, r3, r5
 8028d3e:	1400      	asrs	r0, r0, #16
 8028d40:	f53f aeac 	bmi.w	8028a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8028d44:	3901      	subs	r1, #1
 8028d46:	4288      	cmp	r0, r1
 8028d48:	f6bf aea8 	bge.w	8028a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8028d4c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8028d4e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8028d50:	fb01 0303 	mla	r3, r1, r3, r0
 8028d54:	141b      	asrs	r3, r3, #16
 8028d56:	f53f aea1 	bmi.w	8028a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8028d5a:	3a01      	subs	r2, #1
 8028d5c:	4293      	cmp	r3, r2
 8028d5e:	f6bf ae9d 	bge.w	8028a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8028d62:	9b06      	ldr	r3, [sp, #24]
 8028d64:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8028d68:	930f      	str	r3, [sp, #60]	@ 0x3c
 8028d6a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8028d6e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8028d70:	2b00      	cmp	r3, #0
 8028d72:	f300 80b6 	bgt.w	8028ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8028d76:	9b06      	ldr	r3, [sp, #24]
 8028d78:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8028d7c:	9b07      	ldr	r3, [sp, #28]
 8028d7e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8028d82:	9307      	str	r3, [sp, #28]
 8028d84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028d86:	2b00      	cmp	r3, #0
 8028d88:	f340 8218 	ble.w	80291bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8028d8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028d90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8028d94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028d98:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8028d9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028d9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028da2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028da6:	eef0 6a62 	vmov.f32	s13, s5
 8028daa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028dae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028db2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028db6:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8028dba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028dbe:	eef0 6a43 	vmov.f32	s13, s6
 8028dc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028dc6:	ee12 2a90 	vmov	r2, s5
 8028dca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028dce:	fb92 f3f3 	sdiv	r3, r2, r3
 8028dd2:	ee13 2a10 	vmov	r2, s6
 8028dd6:	931f      	str	r3, [sp, #124]	@ 0x7c
 8028dd8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8028dda:	fb92 f3f3 	sdiv	r3, r2, r3
 8028dde:	9320      	str	r3, [sp, #128]	@ 0x80
 8028de0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8028de2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8028de4:	3b01      	subs	r3, #1
 8028de6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028dea:	930e      	str	r3, [sp, #56]	@ 0x38
 8028dec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8028dee:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8028df2:	bf08      	it	eq
 8028df4:	4613      	moveq	r3, r2
 8028df6:	9306      	str	r3, [sp, #24]
 8028df8:	eeb0 3a67 	vmov.f32	s6, s15
 8028dfc:	eef0 2a47 	vmov.f32	s5, s14
 8028e00:	e621      	b.n	8028a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8028e02:	fb08 f505 	mul.w	r5, r8, r5
 8028e06:	fb09 5303 	mla	r3, r9, r3, r5
 8028e0a:	e6a1      	b.n	8028b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8028e0c:	4681      	mov	r9, r0
 8028e0e:	e6c8      	b.n	8028ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8028e10:	f1c1 0210 	rsb	r2, r1, #16
 8028e14:	4341      	muls	r1, r0
 8028e16:	fb09 1902 	mla	r9, r9, r2, r1
 8028e1a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8028e1e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8028e22:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8028e26:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028e2a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028e2e:	ea42 0909 	orr.w	r9, r2, r9
 8028e32:	fa1f f289 	uxth.w	r2, r9
 8028e36:	e75b      	b.n	8028cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8028e38:	f8b7 c000 	ldrh.w	ip, [r7]
 8028e3c:	43db      	mvns	r3, r3
 8028e3e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8028e42:	fa5f fe83 	uxtb.w	lr, r3
 8028e46:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8028e4a:	fb00 f00e 	mul.w	r0, r0, lr
 8028e4e:	1c41      	adds	r1, r0, #1
 8028e50:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8028e54:	1211      	asrs	r1, r2, #8
 8028e56:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8028e5a:	f021 0107 	bic.w	r1, r1, #7
 8028e5e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028e62:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8028e66:	48d7      	ldr	r0, [pc, #860]	@ (80291c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8028e68:	fb05 f50e 	mul.w	r5, r5, lr
 8028e6c:	b2c9      	uxtb	r1, r1
 8028e6e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8028e72:	1c69      	adds	r1, r5, #1
 8028e74:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8028e78:	10d1      	asrs	r1, r2, #3
 8028e7a:	f021 0103 	bic.w	r1, r1, #3
 8028e7e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8028e82:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8028e86:	b2db      	uxtb	r3, r3
 8028e88:	00c9      	lsls	r1, r1, #3
 8028e8a:	fb03 f30e 	mul.w	r3, r3, lr
 8028e8e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8028e92:	4301      	orrs	r1, r0
 8028e94:	1c58      	adds	r0, r3, #1
 8028e96:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8028e9a:	00d2      	lsls	r2, r2, #3
 8028e9c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8028ea0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028ea4:	430a      	orrs	r2, r1
 8028ea6:	e726      	b.n	8028cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8028ea8:	f115 0e01 	adds.w	lr, r5, #1
 8028eac:	f53f af24 	bmi.w	8028cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8028eb0:	4572      	cmp	r2, lr
 8028eb2:	f6ff af21 	blt.w	8028cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8028eb6:	f110 0e01 	adds.w	lr, r0, #1
 8028eba:	f53f af1d 	bmi.w	8028cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8028ebe:	4573      	cmp	r3, lr
 8028ec0:	f6ff af1a 	blt.w	8028cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8028ec4:	b21b      	sxth	r3, r3
 8028ec6:	b212      	sxth	r2, r2
 8028ec8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8028ecc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8028ed0:	9301      	str	r3, [sp, #4]
 8028ed2:	9200      	str	r2, [sp, #0]
 8028ed4:	4639      	mov	r1, r7
 8028ed6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8028eda:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028edc:	f7ff fc24 	bl	8028728 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8028ee0:	e70a      	b.n	8028cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8028ee2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8028ee4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8028ee8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028eea:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8028eee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028ef0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028ef4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8028ef6:	141f      	asrs	r7, r3, #16
 8028ef8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8028efa:	141b      	asrs	r3, r3, #16
 8028efc:	fb01 3707 	mla	r7, r1, r7, r3
 8028f00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028f02:	fa1f fc82 	uxth.w	ip, r2
 8028f06:	eb03 0a07 	add.w	sl, r3, r7
 8028f0a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8028f0e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8028f12:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8028f16:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8028f1a:	b29b      	uxth	r3, r3
 8028f1c:	2d00      	cmp	r5, #0
 8028f1e:	f000 80fe 	beq.w	802911e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8028f22:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8028f26:	940c      	str	r4, [sp, #48]	@ 0x30
 8028f28:	eb0a 0b01 	add.w	fp, sl, r1
 8028f2c:	fa1f fa85 	uxth.w	sl, r5
 8028f30:	fb0a fc0c 	mul.w	ip, sl, ip
 8028f34:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8028f38:	fa1f fa8a 	uxth.w	sl, sl
 8028f3c:	eba0 000c 	sub.w	r0, r0, ip
 8028f40:	eba3 030a 	sub.w	r3, r3, sl
 8028f44:	b280      	uxth	r0, r0
 8028f46:	fb08 f000 	mul.w	r0, r8, r0
 8028f4a:	b29b      	uxth	r3, r3
 8028f4c:	fb09 0303 	mla	r3, r9, r3, r0
 8028f50:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8028f52:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8028f56:	940d      	str	r4, [sp, #52]	@ 0x34
 8028f58:	fb0a 3300 	mla	r3, sl, r0, r3
 8028f5c:	fb0c 3304 	mla	r3, ip, r4, r3
 8028f60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028f64:	2b00      	cmp	r3, #0
 8028f66:	f000 80cc 	beq.w	8029102 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8028f6a:	9808      	ldr	r0, [sp, #32]
 8028f6c:	9c08      	ldr	r4, [sp, #32]
 8028f6e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028f72:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8028f76:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8028f7a:	f000 80d5 	beq.w	8029128 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8028f7e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8028f82:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8028f86:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028f8a:	fb09 f707 	mul.w	r7, r9, r7
 8028f8e:	fb0a fc0c 	mul.w	ip, sl, ip
 8028f92:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8028f96:	f107 0b20 	add.w	fp, r7, #32
 8028f9a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8028f9e:	44cc      	add	ip, r9
 8028fa0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8028fa4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028fa8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8028fac:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8028fb0:	ea4c 0909 	orr.w	r9, ip, r9
 8028fb4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028fb8:	8847      	ldrh	r7, [r0, #2]
 8028fba:	d019      	beq.n	8028ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8028fbc:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8028fc0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8028fc4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028fc8:	fb08 f807 	mul.w	r8, r8, r7
 8028fcc:	fb0a fc0c 	mul.w	ip, sl, ip
 8028fd0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8028fd4:	f108 0b20 	add.w	fp, r8, #32
 8028fd8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8028fdc:	44bc      	add	ip, r7
 8028fde:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8028fe2:	0a3f      	lsrs	r7, r7, #8
 8028fe4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8028fe8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028fec:	ea4c 0707 	orr.w	r7, ip, r7
 8028ff0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8028ff4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8028ff8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8028ffc:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8029000:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029004:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8029008:	ea4c 0909 	orr.w	r9, ip, r9
 802900c:	ea4a 0707 	orr.w	r7, sl, r7
 8029010:	2d00      	cmp	r5, #0
 8029012:	f000 808b 	beq.w	802912c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8029016:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802901a:	3901      	subs	r1, #1
 802901c:	0049      	lsls	r1, r1, #1
 802901e:	3102      	adds	r1, #2
 8029020:	eb00 0c01 	add.w	ip, r0, r1
 8029024:	5a41      	ldrh	r1, [r0, r1]
 8029026:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029028:	28ff      	cmp	r0, #255	@ 0xff
 802902a:	d019      	beq.n	8029060 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802902c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802902e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8029032:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8029036:	fb04 fa01 	mul.w	sl, r4, r1
 802903a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802903e:	fb08 f800 	mul.w	r8, r8, r0
 8029042:	f10a 0020 	add.w	r0, sl, #32
 8029046:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802904a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802904e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8029052:	4441      	add	r1, r8
 8029054:	0a00      	lsrs	r0, r0, #8
 8029056:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802905a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802905e:	4301      	orrs	r1, r0
 8029060:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8029062:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8029066:	2cff      	cmp	r4, #255	@ 0xff
 8029068:	d01a      	beq.n	80290a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802906a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 802906e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8029072:	fb04 fa00 	mul.w	sl, r4, r0
 8029076:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802907a:	fb08 f80c 	mul.w	r8, r8, ip
 802907e:	f10a 0c20 	add.w	ip, sl, #32
 8029082:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8029086:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802908a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802908e:	4440      	add	r0, r8
 8029090:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029094:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8029098:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802909c:	ea40 000c 	orr.w	r0, r0, ip
 80290a0:	fb15 fc02 	smulbb	ip, r5, r2
 80290a4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80290a8:	f1c5 0810 	rsb	r8, r5, #16
 80290ac:	eba8 0802 	sub.w	r8, r8, r2
 80290b0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80290b4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80290b8:	437a      	muls	r2, r7
 80290ba:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80290be:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80290c2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80290c6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80290ca:	fb09 2208 	mla	r2, r9, r8, r2
 80290ce:	ea4a 0101 	orr.w	r1, sl, r1
 80290d2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80290d6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80290da:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80290de:	fb05 2201 	mla	r2, r5, r1, r2
 80290e2:	ea4b 0000 	orr.w	r0, fp, r0
 80290e6:	fb0c 2200 	mla	r2, ip, r0, r2
 80290ea:	0d57      	lsrs	r7, r2, #21
 80290ec:	0952      	lsrs	r2, r2, #5
 80290ee:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80290f2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80290f6:	433a      	orrs	r2, r7
 80290f8:	2bff      	cmp	r3, #255	@ 0xff
 80290fa:	b292      	uxth	r2, r2
 80290fc:	d127      	bne.n	802914e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80290fe:	f8ae 2000 	strh.w	r2, [lr]
 8029102:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8029104:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8029106:	4413      	add	r3, r2
 8029108:	931d      	str	r3, [sp, #116]	@ 0x74
 802910a:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 802910c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802910e:	441a      	add	r2, r3
 8029110:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8029112:	921e      	str	r2, [sp, #120]	@ 0x78
 8029114:	3b01      	subs	r3, #1
 8029116:	f10e 0e02 	add.w	lr, lr, #2
 802911a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802911c:	e627      	b.n	8028d6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802911e:	fb08 f000 	mul.w	r0, r8, r0
 8029122:	fb09 0303 	mla	r3, r9, r3, r0
 8029126:	e71b      	b.n	8028f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8029128:	46b9      	mov	r9, r7
 802912a:	e743      	b.n	8028fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802912c:	f1c2 0110 	rsb	r1, r2, #16
 8029130:	437a      	muls	r2, r7
 8029132:	fb09 2901 	mla	r9, r9, r1, r2
 8029136:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802913a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802913e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8029142:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8029146:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802914a:	4302      	orrs	r2, r0
 802914c:	e7d4      	b.n	80290f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802914e:	f8be 7000 	ldrh.w	r7, [lr]
 8029152:	4c1c      	ldr	r4, [pc, #112]	@ (80291c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8029154:	43db      	mvns	r3, r3
 8029156:	1238      	asrs	r0, r7, #8
 8029158:	fa5f fc83 	uxtb.w	ip, r3
 802915c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8029160:	10fd      	asrs	r5, r7, #3
 8029162:	fb00 f00c 	mul.w	r0, r0, ip
 8029166:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802916a:	fb05 f10c 	mul.w	r1, r5, ip
 802916e:	1c45      	adds	r5, r0, #1
 8029170:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8029174:	1215      	asrs	r5, r2, #8
 8029176:	f025 0507 	bic.w	r5, r5, #7
 802917a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802917e:	1c4d      	adds	r5, r1, #1
 8029180:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029184:	10d1      	asrs	r1, r2, #3
 8029186:	f021 0103 	bic.w	r1, r1, #3
 802918a:	00fb      	lsls	r3, r7, #3
 802918c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8029190:	b2db      	uxtb	r3, r3
 8029192:	b2c0      	uxtb	r0, r0
 8029194:	00c9      	lsls	r1, r1, #3
 8029196:	fb03 f30c 	mul.w	r3, r3, ip
 802919a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802919e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80291a2:	4308      	orrs	r0, r1
 80291a4:	1c59      	adds	r1, r3, #1
 80291a6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80291aa:	00d2      	lsls	r2, r2, #3
 80291ac:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80291b0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80291b4:	4318      	orrs	r0, r3
 80291b6:	f8ae 0000 	strh.w	r0, [lr]
 80291ba:	e7a2      	b.n	8029102 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80291bc:	b013      	add	sp, #76	@ 0x4c
 80291be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80291c2:	bf00      	nop
 80291c4:	fffff800 	.word	0xfffff800

080291c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80291c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80291cc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 80291d0:	fb05 4c03 	mla	ip, r5, r3, r4
 80291d4:	2d00      	cmp	r5, #0
 80291d6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80291da:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 80291de:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80291e2:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 80291e6:	8808      	ldrh	r0, [r1, #0]
 80291e8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80291ec:	f2c0 80a7 	blt.w	802933e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80291f0:	45aa      	cmp	sl, r5
 80291f2:	f340 80a4 	ble.w	802933e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80291f6:	2c00      	cmp	r4, #0
 80291f8:	f2c0 809f 	blt.w	802933a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80291fc:	42a3      	cmp	r3, r4
 80291fe:	f340 809c 	ble.w	802933a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8029202:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8029206:	1c62      	adds	r2, r4, #1
 8029208:	f100 809c 	bmi.w	8029344 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802920c:	4293      	cmp	r3, r2
 802920e:	f340 8099 	ble.w	8029344 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8029212:	f1b9 0f00 	cmp.w	r9, #0
 8029216:	f000 8095 	beq.w	8029344 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802921a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802921e:	3501      	adds	r5, #1
 8029220:	f100 8094 	bmi.w	802934c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8029224:	45aa      	cmp	sl, r5
 8029226:	f340 8091 	ble.w	802934c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802922a:	2f00      	cmp	r7, #0
 802922c:	f000 808e 	beq.w	802934c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8029230:	2c00      	cmp	r4, #0
 8029232:	f2c0 8089 	blt.w	8029348 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8029236:	42a3      	cmp	r3, r4
 8029238:	f340 8086 	ble.w	8029348 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802923c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8029240:	3401      	adds	r4, #1
 8029242:	f100 8086 	bmi.w	8029352 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8029246:	42a3      	cmp	r3, r4
 8029248:	f340 8083 	ble.w	8029352 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802924c:	f1b9 0f00 	cmp.w	r9, #0
 8029250:	d07f      	beq.n	8029352 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8029252:	3301      	adds	r3, #1
 8029254:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8029258:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802925c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8029260:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8029264:	fb19 fe07 	smulbb	lr, r9, r7
 8029268:	ea44 0808 	orr.w	r8, r4, r8
 802926c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8029270:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8029274:	f1c7 0210 	rsb	r2, r7, #16
 8029278:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802927c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8029280:	ea44 0c0c 	orr.w	ip, r4, ip
 8029284:	eba2 0209 	sub.w	r2, r2, r9
 8029288:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802928c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8029290:	fb04 f40c 	mul.w	r4, r4, ip
 8029294:	fb02 4808 	mla	r8, r2, r8, r4
 8029298:	041a      	lsls	r2, r3, #16
 802929a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802929e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80292a2:	4313      	orrs	r3, r2
 80292a4:	042a      	lsls	r2, r5, #16
 80292a6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80292aa:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80292ae:	fb0e 8303 	mla	r3, lr, r3, r8
 80292b2:	432a      	orrs	r2, r5
 80292b4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80292b8:	fb07 3202 	mla	r2, r7, r2, r3
 80292bc:	0d53      	lsrs	r3, r2, #21
 80292be:	0952      	lsrs	r2, r2, #5
 80292c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80292c4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80292c8:	431a      	orrs	r2, r3
 80292ca:	b293      	uxth	r3, r2
 80292cc:	b2b4      	uxth	r4, r6
 80292ce:	1202      	asrs	r2, r0, #8
 80292d0:	43f6      	mvns	r6, r6
 80292d2:	b2f6      	uxtb	r6, r6
 80292d4:	121d      	asrs	r5, r3, #8
 80292d6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80292da:	fb12 f206 	smulbb	r2, r2, r6
 80292de:	10c7      	asrs	r7, r0, #3
 80292e0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80292e4:	00c0      	lsls	r0, r0, #3
 80292e6:	fb05 2504 	mla	r5, r5, r4, r2
 80292ea:	b2c0      	uxtb	r0, r0
 80292ec:	10da      	asrs	r2, r3, #3
 80292ee:	00db      	lsls	r3, r3, #3
 80292f0:	b2db      	uxtb	r3, r3
 80292f2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80292f6:	fb10 f006 	smulbb	r0, r0, r6
 80292fa:	b2ad      	uxth	r5, r5
 80292fc:	fb03 0004 	mla	r0, r3, r4, r0
 8029300:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8029304:	fb17 f706 	smulbb	r7, r7, r6
 8029308:	b280      	uxth	r0, r0
 802930a:	1c6b      	adds	r3, r5, #1
 802930c:	fb02 7204 	mla	r2, r2, r4, r7
 8029310:	b292      	uxth	r2, r2
 8029312:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029316:	1c43      	adds	r3, r0, #1
 8029318:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802931c:	1c50      	adds	r0, r2, #1
 802931e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8029322:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8029326:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802932a:	0952      	lsrs	r2, r2, #5
 802932c:	432b      	orrs	r3, r5
 802932e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029332:	4313      	orrs	r3, r2
 8029334:	800b      	strh	r3, [r1, #0]
 8029336:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802933a:	4680      	mov	r8, r0
 802933c:	e763      	b.n	8029206 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802933e:	4684      	mov	ip, r0
 8029340:	4680      	mov	r8, r0
 8029342:	e76c      	b.n	802921e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8029344:	4684      	mov	ip, r0
 8029346:	e76a      	b.n	802921e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8029348:	4605      	mov	r5, r0
 802934a:	e779      	b.n	8029240 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802934c:	4603      	mov	r3, r0
 802934e:	4605      	mov	r5, r0
 8029350:	e782      	b.n	8029258 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8029352:	4603      	mov	r3, r0
 8029354:	e780      	b.n	8029258 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08029356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029356:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802935a:	b093      	sub	sp, #76	@ 0x4c
 802935c:	461d      	mov	r5, r3
 802935e:	9210      	str	r2, [sp, #64]	@ 0x40
 8029360:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8029362:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8029366:	920b      	str	r2, [sp, #44]	@ 0x2c
 8029368:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 802936c:	910a      	str	r1, [sp, #40]	@ 0x28
 802936e:	6859      	ldr	r1, [r3, #4]
 8029370:	681b      	ldr	r3, [r3, #0]
 8029372:	9011      	str	r0, [sp, #68]	@ 0x44
 8029374:	fb01 2707 	mla	r7, r1, r7, r2
 8029378:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802937c:	9307      	str	r3, [sp, #28]
 802937e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029380:	681b      	ldr	r3, [r3, #0]
 8029382:	9309      	str	r3, [sp, #36]	@ 0x24
 8029384:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029386:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802938a:	43db      	mvns	r3, r3
 802938c:	b2db      	uxtb	r3, r3
 802938e:	9308      	str	r3, [sp, #32]
 8029390:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029392:	2b00      	cmp	r3, #0
 8029394:	dc03      	bgt.n	802939e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8029396:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8029398:	2b00      	cmp	r3, #0
 802939a:	f340 8203 	ble.w	80297a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802939e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80293a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80293a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80293a8:	1e48      	subs	r0, r1, #1
 80293aa:	f102 3cff 	add.w	ip, r2, #4294967295
 80293ae:	2d00      	cmp	r5, #0
 80293b0:	f340 80da 	ble.w	8029568 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80293b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80293b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80293bc:	d406      	bmi.n	80293cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80293be:	4586      	cmp	lr, r0
 80293c0:	da04      	bge.n	80293cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80293c2:	2b00      	cmp	r3, #0
 80293c4:	db02      	blt.n	80293cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80293c6:	4563      	cmp	r3, ip
 80293c8:	f2c0 80cf 	blt.w	802956a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80293cc:	f11e 0e01 	adds.w	lr, lr, #1
 80293d0:	f100 80c1 	bmi.w	8029556 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80293d4:	4571      	cmp	r1, lr
 80293d6:	f2c0 80be 	blt.w	8029556 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80293da:	3301      	adds	r3, #1
 80293dc:	f100 80bb 	bmi.w	8029556 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80293e0:	429a      	cmp	r2, r3
 80293e2:	f2c0 80b8 	blt.w	8029556 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80293e6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80293ea:	46a9      	mov	r9, r5
 80293ec:	f1b9 0f00 	cmp.w	r9, #0
 80293f0:	f340 80d8 	ble.w	80295a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80293f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80293f6:	1421      	asrs	r1, r4, #16
 80293f8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80293fc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029400:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029404:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8029408:	f100 8111 	bmi.w	802962e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802940c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8029410:	4551      	cmp	r1, sl
 8029412:	f280 810c 	bge.w	802962e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029416:	2800      	cmp	r0, #0
 8029418:	f2c0 8109 	blt.w	802962e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802941c:	f103 3aff 	add.w	sl, r3, #4294967295
 8029420:	4550      	cmp	r0, sl
 8029422:	f280 8104 	bge.w	802962e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029426:	fa0f f38e 	sxth.w	r3, lr
 802942a:	fb00 1103 	mla	r1, r0, r3, r1
 802942e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8029430:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8029434:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8029438:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802943c:	f1bc 0f00 	cmp.w	ip, #0
 8029440:	d007      	beq.n	8029452 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8029442:	005b      	lsls	r3, r3, #1
 8029444:	eb0a 0003 	add.w	r0, sl, r3
 8029448:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802944c:	930c      	str	r3, [sp, #48]	@ 0x30
 802944e:	8843      	ldrh	r3, [r0, #2]
 8029450:	930d      	str	r3, [sp, #52]	@ 0x34
 8029452:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8029456:	fb12 f30c 	smulbb	r3, r2, ip
 802945a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802945e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8029462:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029466:	10db      	asrs	r3, r3, #3
 8029468:	ea40 000e 	orr.w	r0, r0, lr
 802946c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029470:	f1cc 0e10 	rsb	lr, ip, #16
 8029474:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8029478:	ebae 0e02 	sub.w	lr, lr, r2
 802947c:	ea4a 0101 	orr.w	r1, sl, r1
 8029480:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8029484:	4351      	muls	r1, r2
 8029486:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8029488:	9f08      	ldr	r7, [sp, #32]
 802948a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802948e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8029492:	0410      	lsls	r0, r2, #16
 8029494:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029498:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802949c:	4310      	orrs	r0, r2
 802949e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80294a0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80294a2:	0412      	lsls	r2, r2, #16
 80294a4:	fb03 e000 	mla	r0, r3, r0, lr
 80294a8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80294ac:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80294b0:	ea42 020e 	orr.w	r2, r2, lr
 80294b4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80294b8:	fb03 0302 	mla	r3, r3, r2, r0
 80294bc:	0d5a      	lsrs	r2, r3, #21
 80294be:	095b      	lsrs	r3, r3, #5
 80294c0:	f8b8 0000 	ldrh.w	r0, [r8]
 80294c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80294c8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80294cc:	4313      	orrs	r3, r2
 80294ce:	b29b      	uxth	r3, r3
 80294d0:	1201      	asrs	r1, r0, #8
 80294d2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80294d6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80294da:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80294de:	fb11 f107 	smulbb	r1, r1, r7
 80294e2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80294e6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80294ea:	00c0      	lsls	r0, r0, #3
 80294ec:	fb0c 1c02 	mla	ip, ip, r2, r1
 80294f0:	b2c0      	uxtb	r0, r0
 80294f2:	10d9      	asrs	r1, r3, #3
 80294f4:	00db      	lsls	r3, r3, #3
 80294f6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80294fa:	b2db      	uxtb	r3, r3
 80294fc:	fb10 f007 	smulbb	r0, r0, r7
 8029500:	fa1f fc8c 	uxth.w	ip, ip
 8029504:	fb03 0302 	mla	r3, r3, r2, r0
 8029508:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802950c:	fb1e fe07 	smulbb	lr, lr, r7
 8029510:	fb01 e102 	mla	r1, r1, r2, lr
 8029514:	b29a      	uxth	r2, r3
 8029516:	f10c 0301 	add.w	r3, ip, #1
 802951a:	b289      	uxth	r1, r1
 802951c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8029520:	1c53      	adds	r3, r2, #1
 8029522:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029526:	1c4a      	adds	r2, r1, #1
 8029528:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802952c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8029530:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029534:	0949      	lsrs	r1, r1, #5
 8029536:	ea43 030c 	orr.w	r3, r3, ip
 802953a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802953e:	430b      	orrs	r3, r1
 8029540:	f8a8 3000 	strh.w	r3, [r8]
 8029544:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029546:	441c      	add	r4, r3
 8029548:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802954a:	f108 0802 	add.w	r8, r8, #2
 802954e:	441e      	add	r6, r3
 8029550:	f109 39ff 	add.w	r9, r9, #4294967295
 8029554:	e74a      	b.n	80293ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8029556:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029558:	441c      	add	r4, r3
 802955a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802955c:	441e      	add	r6, r3
 802955e:	9b07      	ldr	r3, [sp, #28]
 8029560:	3302      	adds	r3, #2
 8029562:	3d01      	subs	r5, #1
 8029564:	9307      	str	r3, [sp, #28]
 8029566:	e722      	b.n	80293ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8029568:	d022      	beq.n	80295b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802956a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802956c:	1e6b      	subs	r3, r5, #1
 802956e:	fb00 4003 	mla	r0, r0, r3, r4
 8029572:	1400      	asrs	r0, r0, #16
 8029574:	f53f af37 	bmi.w	80293e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029578:	3901      	subs	r1, #1
 802957a:	4288      	cmp	r0, r1
 802957c:	f6bf af33 	bge.w	80293e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029580:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8029582:	fb01 6303 	mla	r3, r1, r3, r6
 8029586:	141b      	asrs	r3, r3, #16
 8029588:	f53f af2d 	bmi.w	80293e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802958c:	3a01      	subs	r2, #1
 802958e:	4293      	cmp	r3, r2
 8029590:	f6bf af29 	bge.w	80293e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029594:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8029598:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 802959c:	46a8      	mov	r8, r5
 802959e:	f1b8 0f00 	cmp.w	r8, #0
 80295a2:	dc5e      	bgt.n	8029662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80295a4:	9b07      	ldr	r3, [sp, #28]
 80295a6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80295aa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80295ae:	9307      	str	r3, [sp, #28]
 80295b0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80295b2:	2b00      	cmp	r3, #0
 80295b4:	f340 80f6 	ble.w	80297a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80295b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80295bc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80295c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80295c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80295c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80295ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80295ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80295d2:	eef0 6a62 	vmov.f32	s13, s5
 80295d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80295da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80295de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80295e2:	ee16 4a90 	vmov	r4, s13
 80295e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80295ea:	eef0 6a43 	vmov.f32	s13, s6
 80295ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80295f2:	ee12 2a90 	vmov	r2, s5
 80295f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80295fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80295fe:	ee13 2a10 	vmov	r2, s6
 8029602:	931f      	str	r3, [sp, #124]	@ 0x7c
 8029604:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029606:	fb92 f3f3 	sdiv	r3, r2, r3
 802960a:	9320      	str	r3, [sp, #128]	@ 0x80
 802960c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802960e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029610:	3b01      	subs	r3, #1
 8029612:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029616:	930a      	str	r3, [sp, #40]	@ 0x28
 8029618:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802961a:	ee16 6a90 	vmov	r6, s13
 802961e:	bf14      	ite	ne
 8029620:	461d      	movne	r5, r3
 8029622:	4615      	moveq	r5, r2
 8029624:	eeb0 3a67 	vmov.f32	s6, s15
 8029628:	eef0 2a47 	vmov.f32	s5, s14
 802962c:	e6b0      	b.n	8029390 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802962e:	f111 0a01 	adds.w	sl, r1, #1
 8029632:	d487      	bmi.n	8029544 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029634:	45d6      	cmp	lr, sl
 8029636:	db85      	blt.n	8029544 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029638:	f110 0a01 	adds.w	sl, r0, #1
 802963c:	d482      	bmi.n	8029544 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802963e:	4553      	cmp	r3, sl
 8029640:	db80      	blt.n	8029544 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029642:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8029644:	9101      	str	r1, [sp, #4]
 8029646:	b21b      	sxth	r3, r3
 8029648:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802964c:	9300      	str	r3, [sp, #0]
 802964e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8029652:	fa0f f38e 	sxth.w	r3, lr
 8029656:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029658:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802965a:	4641      	mov	r1, r8
 802965c:	f7ff fdb4 	bl	80291c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8029660:	e770      	b.n	8029544 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029662:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029664:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8029666:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802966a:	1430      	asrs	r0, r6, #16
 802966c:	1423      	asrs	r3, r4, #16
 802966e:	fb01 3000 	mla	r0, r1, r0, r3
 8029672:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029674:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8029678:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802967c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8029680:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029684:	8858      	ldrh	r0, [r3, #2]
 8029686:	f1be 0f00 	cmp.w	lr, #0
 802968a:	d00b      	beq.n	80296a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802968c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8029690:	3901      	subs	r1, #1
 8029692:	0049      	lsls	r1, r1, #1
 8029694:	3102      	adds	r1, #2
 8029696:	eb03 0b01 	add.w	fp, r3, r1
 802969a:	5a5b      	ldrh	r3, [r3, r1]
 802969c:	930e      	str	r3, [sp, #56]	@ 0x38
 802969e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80296a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80296a4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80296a8:	fb12 f30e 	smulbb	r3, r2, lr
 80296ac:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80296b0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80296b4:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 80296b8:	10db      	asrs	r3, r3, #3
 80296ba:	ea41 010c 	orr.w	r1, r1, ip
 80296be:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80296c2:	f1ce 0c10 	rsb	ip, lr, #16
 80296c6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80296ca:	ebac 0c02 	sub.w	ip, ip, r2
 80296ce:	ea4b 0000 	orr.w	r0, fp, r0
 80296d2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80296d6:	4350      	muls	r0, r2
 80296d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80296da:	9f08      	ldr	r7, [sp, #32]
 80296dc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80296e0:	fb0c 0c01 	mla	ip, ip, r1, r0
 80296e4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80296e8:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 80296ec:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80296ee:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80296f0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80296f4:	0412      	lsls	r2, r2, #16
 80296f6:	ea4b 0101 	orr.w	r1, fp, r1
 80296fa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80296fe:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029702:	fb03 c101 	mla	r1, r3, r1, ip
 8029706:	4302      	orrs	r2, r0
 8029708:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802970c:	fb03 1202 	mla	r2, r3, r2, r1
 8029710:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8029714:	0952      	lsrs	r2, r2, #5
 8029716:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 802971a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802971e:	f8b9 2000 	ldrh.w	r2, [r9]
 8029722:	ea4b 0303 	orr.w	r3, fp, r3
 8029726:	b29b      	uxth	r3, r3
 8029728:	1211      	asrs	r1, r2, #8
 802972a:	1218      	asrs	r0, r3, #8
 802972c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8029730:	fb11 f107 	smulbb	r1, r1, r7
 8029734:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8029738:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802973c:	00d2      	lsls	r2, r2, #3
 802973e:	fb00 100a 	mla	r0, r0, sl, r1
 8029742:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8029746:	10d9      	asrs	r1, r3, #3
 8029748:	b2d2      	uxtb	r2, r2
 802974a:	00db      	lsls	r3, r3, #3
 802974c:	fb1c fc07 	smulbb	ip, ip, r7
 8029750:	fb12 f207 	smulbb	r2, r2, r7
 8029754:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8029758:	b2db      	uxtb	r3, r3
 802975a:	b280      	uxth	r0, r0
 802975c:	fb01 c10a 	mla	r1, r1, sl, ip
 8029760:	fb03 230a 	mla	r3, r3, sl, r2
 8029764:	b29b      	uxth	r3, r3
 8029766:	b289      	uxth	r1, r1
 8029768:	1c42      	adds	r2, r0, #1
 802976a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802976e:	f101 0c01 	add.w	ip, r1, #1
 8029772:	1c5a      	adds	r2, r3, #1
 8029774:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8029778:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802977c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802977e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8029782:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8029786:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802978a:	4310      	orrs	r0, r2
 802978c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8029790:	441c      	add	r4, r3
 8029792:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029794:	ea40 000c 	orr.w	r0, r0, ip
 8029798:	f829 0b02 	strh.w	r0, [r9], #2
 802979c:	441e      	add	r6, r3
 802979e:	f108 38ff 	add.w	r8, r8, #4294967295
 80297a2:	e6fc      	b.n	802959e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80297a4:	b013      	add	sp, #76	@ 0x4c
 80297a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080297aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80297aa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80297ae:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80297b2:	fb0e 4703 	mla	r7, lr, r3, r4
 80297b6:	f1be 0f00 	cmp.w	lr, #0
 80297ba:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80297be:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 80297c2:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 80297c6:	8808      	ldrh	r0, [r1, #0]
 80297c8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80297cc:	db60      	blt.n	8029890 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80297ce:	45f1      	cmp	r9, lr
 80297d0:	dd5e      	ble.n	8029890 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80297d2:	2c00      	cmp	r4, #0
 80297d4:	db5a      	blt.n	802988c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80297d6:	42a3      	cmp	r3, r4
 80297d8:	dd58      	ble.n	802988c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80297da:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80297de:	1c62      	adds	r2, r4, #1
 80297e0:	d459      	bmi.n	8029896 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80297e2:	4293      	cmp	r3, r2
 80297e4:	dd57      	ble.n	8029896 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80297e6:	2d00      	cmp	r5, #0
 80297e8:	d055      	beq.n	8029896 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80297ea:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80297ee:	f11e 0e01 	adds.w	lr, lr, #1
 80297f2:	d454      	bmi.n	802989e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80297f4:	45f1      	cmp	r9, lr
 80297f6:	dd52      	ble.n	802989e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80297f8:	2e00      	cmp	r6, #0
 80297fa:	d050      	beq.n	802989e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80297fc:	2c00      	cmp	r4, #0
 80297fe:	db4c      	blt.n	802989a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8029800:	42a3      	cmp	r3, r4
 8029802:	dd4a      	ble.n	802989a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8029804:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8029808:	3401      	adds	r4, #1
 802980a:	d405      	bmi.n	8029818 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802980c:	42a3      	cmp	r3, r4
 802980e:	dd03      	ble.n	8029818 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029810:	b115      	cbz	r5, 8029818 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029812:	3301      	adds	r3, #1
 8029814:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8029818:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802981c:	fb15 f406 	smulbb	r4, r5, r6
 8029820:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029824:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8029828:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802982c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8029830:	ea43 0c0c 	orr.w	ip, r3, ip
 8029834:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8029838:	f1c6 0310 	rsb	r3, r6, #16
 802983c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8029840:	1b5b      	subs	r3, r3, r5
 8029842:	ea4e 0707 	orr.w	r7, lr, r7
 8029846:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802984a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802984e:	437d      	muls	r5, r7
 8029850:	fb03 5c0c 	mla	ip, r3, ip, r5
 8029854:	0403      	lsls	r3, r0, #16
 8029856:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802985a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802985e:	4318      	orrs	r0, r3
 8029860:	0413      	lsls	r3, r2, #16
 8029862:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029866:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802986a:	4313      	orrs	r3, r2
 802986c:	fb04 c000 	mla	r0, r4, r0, ip
 8029870:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8029874:	fb06 0003 	mla	r0, r6, r3, r0
 8029878:	0d43      	lsrs	r3, r0, #21
 802987a:	0940      	lsrs	r0, r0, #5
 802987c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8029880:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029884:	4318      	orrs	r0, r3
 8029886:	8008      	strh	r0, [r1, #0]
 8029888:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802988c:	4684      	mov	ip, r0
 802988e:	e7a6      	b.n	80297de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8029890:	4607      	mov	r7, r0
 8029892:	4684      	mov	ip, r0
 8029894:	e7ab      	b.n	80297ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8029896:	4607      	mov	r7, r0
 8029898:	e7a9      	b.n	80297ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802989a:	4602      	mov	r2, r0
 802989c:	e7b4      	b.n	8029808 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802989e:	4602      	mov	r2, r0
 80298a0:	e7ba      	b.n	8029818 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080298a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80298a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80298a6:	b08f      	sub	sp, #60	@ 0x3c
 80298a8:	461d      	mov	r5, r3
 80298aa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80298ac:	920c      	str	r2, [sp, #48]	@ 0x30
 80298ae:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 80298b2:	9107      	str	r1, [sp, #28]
 80298b4:	6859      	ldr	r1, [r3, #4]
 80298b6:	681b      	ldr	r3, [r3, #0]
 80298b8:	900d      	str	r0, [sp, #52]	@ 0x34
 80298ba:	fb01 2707 	mla	r7, r1, r7, r2
 80298be:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80298c2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80298c4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 80298c8:	f8d3 8000 	ldr.w	r8, [r3]
 80298cc:	9b07      	ldr	r3, [sp, #28]
 80298ce:	2b00      	cmp	r3, #0
 80298d0:	dc03      	bgt.n	80298da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80298d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80298d4:	2b00      	cmp	r3, #0
 80298d6:	f340 8181 	ble.w	8029bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80298da:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80298dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80298e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80298e4:	1e48      	subs	r0, r1, #1
 80298e6:	f102 3cff 	add.w	ip, r2, #4294967295
 80298ea:	2d00      	cmp	r5, #0
 80298ec:	f340 809b 	ble.w	8029a26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80298f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80298f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80298f8:	d406      	bmi.n	8029908 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80298fa:	4586      	cmp	lr, r0
 80298fc:	da04      	bge.n	8029908 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80298fe:	2b00      	cmp	r3, #0
 8029900:	db02      	blt.n	8029908 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8029902:	4563      	cmp	r3, ip
 8029904:	f2c0 8090 	blt.w	8029a28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8029908:	f11e 0e01 	adds.w	lr, lr, #1
 802990c:	f100 8084 	bmi.w	8029a18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8029910:	4571      	cmp	r1, lr
 8029912:	f2c0 8081 	blt.w	8029a18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8029916:	3301      	adds	r3, #1
 8029918:	d47e      	bmi.n	8029a18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802991a:	429a      	cmp	r2, r3
 802991c:	db7c      	blt.n	8029a18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802991e:	46aa      	mov	sl, r5
 8029920:	46b9      	mov	r9, r7
 8029922:	f1ba 0f00 	cmp.w	sl, #0
 8029926:	f340 8099 	ble.w	8029a5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802992a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802992c:	1421      	asrs	r1, r4, #16
 802992e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8029932:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029936:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802993a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802993e:	f100 80d0 	bmi.w	8029ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8029942:	f10e 3bff 	add.w	fp, lr, #4294967295
 8029946:	4559      	cmp	r1, fp
 8029948:	f280 80cb 	bge.w	8029ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802994c:	2800      	cmp	r0, #0
 802994e:	f2c0 80c8 	blt.w	8029ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8029952:	f103 3bff 	add.w	fp, r3, #4294967295
 8029956:	4558      	cmp	r0, fp
 8029958:	f280 80c3 	bge.w	8029ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802995c:	fa0f fe8e 	sxth.w	lr, lr
 8029960:	fb00 110e 	mla	r1, r0, lr, r1
 8029964:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8029968:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802996c:	8841      	ldrh	r1, [r0, #2]
 802996e:	f1bc 0f00 	cmp.w	ip, #0
 8029972:	d00b      	beq.n	802998c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8029974:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8029978:	3b01      	subs	r3, #1
 802997a:	005b      	lsls	r3, r3, #1
 802997c:	3302      	adds	r3, #2
 802997e:	eb00 0e03 	add.w	lr, r0, r3
 8029982:	5ac3      	ldrh	r3, [r0, r3]
 8029984:	9308      	str	r3, [sp, #32]
 8029986:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802998a:	9309      	str	r3, [sp, #36]	@ 0x24
 802998c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8029990:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029994:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8029998:	ea40 000b 	orr.w	r0, r0, fp
 802999c:	fb12 f30c 	smulbb	r3, r2, ip
 80299a0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80299a4:	10db      	asrs	r3, r3, #3
 80299a6:	f1cc 0e10 	rsb	lr, ip, #16
 80299aa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80299ae:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80299b2:	ebae 0e02 	sub.w	lr, lr, r2
 80299b6:	ea4b 0101 	orr.w	r1, fp, r1
 80299ba:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80299be:	4351      	muls	r1, r2
 80299c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80299c2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80299c6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80299ca:	0410      	lsls	r0, r2, #16
 80299cc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80299d0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80299d4:	4310      	orrs	r0, r2
 80299d6:	9a08      	ldr	r2, [sp, #32]
 80299d8:	9908      	ldr	r1, [sp, #32]
 80299da:	0412      	lsls	r2, r2, #16
 80299dc:	fb03 e000 	mla	r0, r3, r0, lr
 80299e0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80299e4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80299e8:	ea42 020e 	orr.w	r2, r2, lr
 80299ec:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80299f0:	fb03 0302 	mla	r3, r3, r2, r0
 80299f4:	0d5a      	lsrs	r2, r3, #21
 80299f6:	095b      	lsrs	r3, r3, #5
 80299f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80299fc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8029a00:	4313      	orrs	r3, r2
 8029a02:	f8a9 3000 	strh.w	r3, [r9]
 8029a06:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8029a08:	441c      	add	r4, r3
 8029a0a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029a0c:	f109 0902 	add.w	r9, r9, #2
 8029a10:	441e      	add	r6, r3
 8029a12:	f10a 3aff 	add.w	sl, sl, #4294967295
 8029a16:	e784      	b.n	8029922 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8029a18:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8029a1a:	441c      	add	r4, r3
 8029a1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029a1e:	3d01      	subs	r5, #1
 8029a20:	441e      	add	r6, r3
 8029a22:	3702      	adds	r7, #2
 8029a24:	e761      	b.n	80298ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8029a26:	d01d      	beq.n	8029a64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8029a28:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8029a2a:	1e6b      	subs	r3, r5, #1
 8029a2c:	fb00 4003 	mla	r0, r0, r3, r4
 8029a30:	1400      	asrs	r0, r0, #16
 8029a32:	f53f af74 	bmi.w	802991e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8029a36:	3901      	subs	r1, #1
 8029a38:	4288      	cmp	r0, r1
 8029a3a:	f6bf af70 	bge.w	802991e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8029a3e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8029a40:	fb01 6303 	mla	r3, r1, r3, r6
 8029a44:	141b      	asrs	r3, r3, #16
 8029a46:	f53f af6a 	bmi.w	802991e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8029a4a:	3a01      	subs	r2, #1
 8029a4c:	4293      	cmp	r3, r2
 8029a4e:	f6bf af66 	bge.w	802991e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8029a52:	46a9      	mov	r9, r5
 8029a54:	46ba      	mov	sl, r7
 8029a56:	f1b9 0f00 	cmp.w	r9, #0
 8029a5a:	dc5a      	bgt.n	8029b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8029a5c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8029a60:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8029a64:	9b07      	ldr	r3, [sp, #28]
 8029a66:	2b00      	cmp	r3, #0
 8029a68:	f340 80b8 	ble.w	8029bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8029a6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029a70:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8029a74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029a78:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8029a7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8029a7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8029a82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8029a86:	eef0 6a62 	vmov.f32	s13, s5
 8029a8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8029a8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029a92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8029a96:	ee16 4a90 	vmov	r4, s13
 8029a9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8029a9e:	eef0 6a43 	vmov.f32	s13, s6
 8029aa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8029aa6:	ee12 2a90 	vmov	r2, s5
 8029aaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8029aae:	fb92 f3f3 	sdiv	r3, r2, r3
 8029ab2:	ee13 2a10 	vmov	r2, s6
 8029ab6:	931b      	str	r3, [sp, #108]	@ 0x6c
 8029ab8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8029aba:	fb92 f3f3 	sdiv	r3, r2, r3
 8029abe:	931c      	str	r3, [sp, #112]	@ 0x70
 8029ac0:	9b07      	ldr	r3, [sp, #28]
 8029ac2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8029ac4:	3b01      	subs	r3, #1
 8029ac6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029aca:	9307      	str	r3, [sp, #28]
 8029acc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8029ace:	ee16 6a90 	vmov	r6, s13
 8029ad2:	bf14      	ite	ne
 8029ad4:	461d      	movne	r5, r3
 8029ad6:	4615      	moveq	r5, r2
 8029ad8:	eeb0 3a67 	vmov.f32	s6, s15
 8029adc:	eef0 2a47 	vmov.f32	s5, s14
 8029ae0:	e6f4      	b.n	80298cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8029ae2:	f111 0b01 	adds.w	fp, r1, #1
 8029ae6:	d48e      	bmi.n	8029a06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8029ae8:	45de      	cmp	lr, fp
 8029aea:	db8c      	blt.n	8029a06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8029aec:	f110 0b01 	adds.w	fp, r0, #1
 8029af0:	d489      	bmi.n	8029a06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8029af2:	455b      	cmp	r3, fp
 8029af4:	db87      	blt.n	8029a06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8029af6:	b21b      	sxth	r3, r3
 8029af8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8029afc:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8029b00:	9300      	str	r3, [sp, #0]
 8029b02:	4642      	mov	r2, r8
 8029b04:	fa0f f38e 	sxth.w	r3, lr
 8029b08:	4649      	mov	r1, r9
 8029b0a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8029b0c:	f7ff fe4d 	bl	80297aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8029b10:	e779      	b.n	8029a06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8029b12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029b14:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8029b18:	1420      	asrs	r0, r4, #16
 8029b1a:	1431      	asrs	r1, r6, #16
 8029b1c:	fb03 0101 	mla	r1, r3, r1, r0
 8029b20:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8029b24:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8029b28:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8029b2c:	8841      	ldrh	r1, [r0, #2]
 8029b2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029b32:	f1be 0f00 	cmp.w	lr, #0
 8029b36:	d00b      	beq.n	8029b50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8029b38:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8029b3c:	3b01      	subs	r3, #1
 8029b3e:	005b      	lsls	r3, r3, #1
 8029b40:	3302      	adds	r3, #2
 8029b42:	eb00 0b03 	add.w	fp, r0, r3
 8029b46:	5ac3      	ldrh	r3, [r0, r3]
 8029b48:	930a      	str	r3, [sp, #40]	@ 0x28
 8029b4a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8029b4e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8029b50:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8029b54:	fb12 f30e 	smulbb	r3, r2, lr
 8029b58:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8029b5c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8029b60:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029b64:	10db      	asrs	r3, r3, #3
 8029b66:	ea40 000c 	orr.w	r0, r0, ip
 8029b6a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029b6e:	f1ce 0c10 	rsb	ip, lr, #16
 8029b72:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8029b76:	ebac 0c02 	sub.w	ip, ip, r2
 8029b7a:	ea4b 0101 	orr.w	r1, fp, r1
 8029b7e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8029b82:	4351      	muls	r1, r2
 8029b84:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8029b86:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8029b8a:	fb0c 1c00 	mla	ip, ip, r0, r1
 8029b8e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8029b92:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8029b96:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8029b98:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8029b9a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029b9e:	0412      	lsls	r2, r2, #16
 8029ba0:	ea4b 0000 	orr.w	r0, fp, r0
 8029ba4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029ba8:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8029bac:	fb03 c000 	mla	r0, r3, r0, ip
 8029bb0:	ea42 0b0b 	orr.w	fp, r2, fp
 8029bb4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8029bb8:	fb03 000b 	mla	r0, r3, fp, r0
 8029bbc:	0d43      	lsrs	r3, r0, #21
 8029bbe:	0940      	lsrs	r0, r0, #5
 8029bc0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8029bc4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029bc8:	4318      	orrs	r0, r3
 8029bca:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8029bcc:	f82a 0b02 	strh.w	r0, [sl], #2
 8029bd0:	441c      	add	r4, r3
 8029bd2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029bd4:	f109 39ff 	add.w	r9, r9, #4294967295
 8029bd8:	441e      	add	r6, r3
 8029bda:	e73c      	b.n	8029a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8029bdc:	b00f      	add	sp, #60	@ 0x3c
 8029bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029be2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8029be2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029be6:	b085      	sub	sp, #20
 8029be8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8029bec:	9102      	str	r1, [sp, #8]
 8029bee:	2c00      	cmp	r4, #0
 8029bf0:	fb04 7103 	mla	r1, r4, r3, r7
 8029bf4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8029bf8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8029bfc:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8029c00:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8029c04:	f2c0 811b 	blt.w	8029e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8029c08:	45a6      	cmp	lr, r4
 8029c0a:	f340 8118 	ble.w	8029e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8029c0e:	2f00      	cmp	r7, #0
 8029c10:	f2c0 8113 	blt.w	8029e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8029c14:	42bb      	cmp	r3, r7
 8029c16:	f340 8110 	ble.w	8029e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8029c1a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8029c1e:	1c7a      	adds	r2, r7, #1
 8029c20:	f100 8110 	bmi.w	8029e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8029c24:	4293      	cmp	r3, r2
 8029c26:	f340 810d 	ble.w	8029e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8029c2a:	2e00      	cmp	r6, #0
 8029c2c:	f000 810c 	beq.w	8029e48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8029c30:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8029c34:	3401      	adds	r4, #1
 8029c36:	f100 810b 	bmi.w	8029e50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8029c3a:	45a6      	cmp	lr, r4
 8029c3c:	f340 8108 	ble.w	8029e50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8029c40:	2800      	cmp	r0, #0
 8029c42:	f000 8108 	beq.w	8029e56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8029c46:	2f00      	cmp	r7, #0
 8029c48:	f2c0 8100 	blt.w	8029e4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8029c4c:	42bb      	cmp	r3, r7
 8029c4e:	f340 80fd 	ble.w	8029e4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8029c52:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8029c56:	3701      	adds	r7, #1
 8029c58:	f100 8100 	bmi.w	8029e5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8029c5c:	42bb      	cmp	r3, r7
 8029c5e:	f340 80fd 	ble.w	8029e5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8029c62:	2e00      	cmp	r6, #0
 8029c64:	f000 80fc 	beq.w	8029e60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8029c68:	3301      	adds	r3, #1
 8029c6a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8029c6e:	b2b6      	uxth	r6, r6
 8029c70:	b280      	uxth	r0, r0
 8029c72:	fb00 fe06 	mul.w	lr, r0, r6
 8029c76:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8029c7a:	0136      	lsls	r6, r6, #4
 8029c7c:	eba6 070e 	sub.w	r7, r6, lr
 8029c80:	b280      	uxth	r0, r0
 8029c82:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8029c86:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8029c8a:	b2bf      	uxth	r7, r7
 8029c8c:	1a1b      	subs	r3, r3, r0
 8029c8e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8029c92:	b29b      	uxth	r3, r3
 8029c94:	fb0a f607 	mul.w	r6, sl, r7
 8029c98:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8029c9c:	fb0b 6603 	mla	r6, fp, r3, r6
 8029ca0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8029ca4:	fb00 6609 	mla	r6, r0, r9, r6
 8029ca8:	fb0e 6608 	mla	r6, lr, r8, r6
 8029cac:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8029cb0:	9600      	str	r6, [sp, #0]
 8029cb2:	2e00      	cmp	r6, #0
 8029cb4:	f000 80be 	beq.w	8029e34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8029cb8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8029cbc:	fb0b fc0c 	mul.w	ip, fp, ip
 8029cc0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8029cc4:	fb0b f505 	mul.w	r5, fp, r5
 8029cc8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8029ccc:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8029cd0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8029cd4:	44dc      	add	ip, fp
 8029cd6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029cda:	9501      	str	r5, [sp, #4]
 8029cdc:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8029ce0:	9503      	str	r5, [sp, #12]
 8029ce2:	9d01      	ldr	r5, [sp, #4]
 8029ce4:	9e02      	ldr	r6, [sp, #8]
 8029ce6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8029cea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8029cee:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8029cf2:	fb0a fc0c 	mul.w	ip, sl, ip
 8029cf6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8029cfa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8029cfe:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8029d02:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8029d06:	4465      	add	r5, ip
 8029d08:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8029d0c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8029d10:	fb09 fc0c 	mul.w	ip, r9, ip
 8029d14:	fb09 f904 	mul.w	r9, r9, r4
 8029d18:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8029d1c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8029d20:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8029d24:	fb08 f404 	mul.w	r4, r8, r4
 8029d28:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8029d2c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8029d30:	fb08 f802 	mul.w	r8, r8, r2
 8029d34:	fb0a fa01 	mul.w	sl, sl, r1
 8029d38:	0a22      	lsrs	r2, r4, #8
 8029d3a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8029d3e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029d42:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8029d46:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8029d4a:	4414      	add	r4, r2
 8029d4c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8029d50:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8029d54:	0a2d      	lsrs	r5, r5, #8
 8029d56:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8029d5a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8029d5e:	9a03      	ldr	r2, [sp, #12]
 8029d60:	8836      	ldrh	r6, [r6, #0]
 8029d62:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029d66:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8029d6a:	437d      	muls	r5, r7
 8029d6c:	4461      	add	r1, ip
 8029d6e:	0a24      	lsrs	r4, r4, #8
 8029d70:	fb02 5503 	mla	r5, r2, r3, r5
 8029d74:	0a09      	lsrs	r1, r1, #8
 8029d76:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8029d7a:	fb04 540e 	mla	r4, r4, lr, r5
 8029d7e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8029d82:	fb01 4100 	mla	r1, r1, r0, r4
 8029d86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8029d8a:	0a09      	lsrs	r1, r1, #8
 8029d8c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8029d90:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8029d94:	fb07 f70a 	mul.w	r7, r7, sl
 8029d98:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8029d9c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8029da0:	fb03 7101 	mla	r1, r3, r1, r7
 8029da4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8029da8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8029dac:	fb0e 1e08 	mla	lr, lr, r8, r1
 8029db0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8029db4:	fb00 e101 	mla	r1, r0, r1, lr
 8029db8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8029dbc:	9a00      	ldr	r2, [sp, #0]
 8029dbe:	b287      	uxth	r7, r0
 8029dc0:	437a      	muls	r2, r7
 8029dc2:	0a09      	lsrs	r1, r1, #8
 8029dc4:	1c53      	adds	r3, r2, #1
 8029dc6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8029dca:	4321      	orrs	r1, r4
 8029dcc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029dd0:	1235      	asrs	r5, r6, #8
 8029dd2:	0c0a      	lsrs	r2, r1, #16
 8029dd4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8029dd8:	b2db      	uxtb	r3, r3
 8029dda:	fb12 f207 	smulbb	r2, r2, r7
 8029dde:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8029de2:	fb05 2503 	mla	r5, r5, r3, r2
 8029de6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8029dea:	10f2      	asrs	r2, r6, #3
 8029dec:	b2c8      	uxtb	r0, r1
 8029dee:	00f6      	lsls	r6, r6, #3
 8029df0:	fb14 f407 	smulbb	r4, r4, r7
 8029df4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8029df8:	b2f6      	uxtb	r6, r6
 8029dfa:	fb10 f007 	smulbb	r0, r0, r7
 8029dfe:	fb02 4203 	mla	r2, r2, r3, r4
 8029e02:	b2ad      	uxth	r5, r5
 8029e04:	fb06 0303 	mla	r3, r6, r3, r0
 8029e08:	b299      	uxth	r1, r3
 8029e0a:	b294      	uxth	r4, r2
 8029e0c:	1c6b      	adds	r3, r5, #1
 8029e0e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029e12:	1c62      	adds	r2, r4, #1
 8029e14:	1c4b      	adds	r3, r1, #1
 8029e16:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8029e1a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8029e1e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8029e22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029e26:	0952      	lsrs	r2, r2, #5
 8029e28:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029e2c:	432b      	orrs	r3, r5
 8029e2e:	4313      	orrs	r3, r2
 8029e30:	9a02      	ldr	r2, [sp, #8]
 8029e32:	8013      	strh	r3, [r2, #0]
 8029e34:	b005      	add	sp, #20
 8029e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029e3a:	2500      	movs	r5, #0
 8029e3c:	e6ef      	b.n	8029c1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8029e3e:	2100      	movs	r1, #0
 8029e40:	460d      	mov	r5, r1
 8029e42:	e6f7      	b.n	8029c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8029e44:	2100      	movs	r1, #0
 8029e46:	e6f5      	b.n	8029c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8029e48:	4631      	mov	r1, r6
 8029e4a:	e6f3      	b.n	8029c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8029e4c:	2400      	movs	r4, #0
 8029e4e:	e702      	b.n	8029c56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8029e50:	2200      	movs	r2, #0
 8029e52:	4614      	mov	r4, r2
 8029e54:	e70b      	b.n	8029c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8029e56:	4602      	mov	r2, r0
 8029e58:	4604      	mov	r4, r0
 8029e5a:	e708      	b.n	8029c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8029e5c:	2200      	movs	r2, #0
 8029e5e:	e706      	b.n	8029c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8029e60:	4632      	mov	r2, r6
 8029e62:	e704      	b.n	8029c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08029e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029e68:	b09d      	sub	sp, #116	@ 0x74
 8029e6a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8029e6e:	9219      	str	r2, [sp, #100]	@ 0x64
 8029e70:	9307      	str	r3, [sp, #28]
 8029e72:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8029e74:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8029e78:	931a      	str	r3, [sp, #104]	@ 0x68
 8029e7a:	9117      	str	r1, [sp, #92]	@ 0x5c
 8029e7c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8029e80:	901b      	str	r0, [sp, #108]	@ 0x6c
 8029e82:	6850      	ldr	r0, [r2, #4]
 8029e84:	6812      	ldr	r2, [r2, #0]
 8029e86:	fb00 1303 	mla	r3, r0, r3, r1
 8029e8a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8029e8e:	930a      	str	r3, [sp, #40]	@ 0x28
 8029e90:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8029e92:	681b      	ldr	r3, [r3, #0]
 8029e94:	9310      	str	r3, [sp, #64]	@ 0x40
 8029e96:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8029e9a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8029e9c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8029e9e:	2b00      	cmp	r3, #0
 8029ea0:	dc03      	bgt.n	8029eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8029ea2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8029ea4:	2b00      	cmp	r3, #0
 8029ea6:	f340 8375 	ble.w	802a594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8029eaa:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8029eac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029eb0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029eb4:	1e48      	subs	r0, r1, #1
 8029eb6:	1e57      	subs	r7, r2, #1
 8029eb8:	9b07      	ldr	r3, [sp, #28]
 8029eba:	2b00      	cmp	r3, #0
 8029ebc:	f340 818e 	ble.w	802a1dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8029ec0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8029ec4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8029ec8:	d406      	bmi.n	8029ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8029eca:	4584      	cmp	ip, r0
 8029ecc:	da04      	bge.n	8029ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8029ece:	2b00      	cmp	r3, #0
 8029ed0:	db02      	blt.n	8029ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8029ed2:	42bb      	cmp	r3, r7
 8029ed4:	f2c0 8183 	blt.w	802a1de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8029ed8:	f11c 0c01 	adds.w	ip, ip, #1
 8029edc:	f100 8173 	bmi.w	802a1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8029ee0:	4561      	cmp	r1, ip
 8029ee2:	f2c0 8170 	blt.w	802a1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8029ee6:	3301      	adds	r3, #1
 8029ee8:	f100 816d 	bmi.w	802a1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8029eec:	429a      	cmp	r2, r3
 8029eee:	f2c0 816a 	blt.w	802a1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8029ef2:	9b07      	ldr	r3, [sp, #28]
 8029ef4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8029ef6:	9318      	str	r3, [sp, #96]	@ 0x60
 8029ef8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8029efa:	2b00      	cmp	r3, #0
 8029efc:	f340 818c 	ble.w	802a218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8029f00:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8029f02:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8029f04:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8029f08:	689b      	ldr	r3, [r3, #8]
 8029f0a:	1422      	asrs	r2, r4, #16
 8029f0c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8029f10:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8029f14:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8029f18:	f100 81cd 	bmi.w	802a2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8029f1c:	f103 38ff 	add.w	r8, r3, #4294967295
 8029f20:	4542      	cmp	r2, r8
 8029f22:	f280 81c8 	bge.w	802a2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8029f26:	f1bc 0f00 	cmp.w	ip, #0
 8029f2a:	f2c0 81c4 	blt.w	802a2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8029f2e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8029f32:	45c4      	cmp	ip, r8
 8029f34:	f280 81bf 	bge.w	802a2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8029f38:	b21b      	sxth	r3, r3
 8029f3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8029f3e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8029f40:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8029f44:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8029f48:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8029f4c:	2800      	cmp	r0, #0
 8029f4e:	f000 81a9 	beq.w	802a2a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8029f52:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8029f56:	950c      	str	r5, [sp, #48]	@ 0x30
 8029f58:	0e2d      	lsrs	r5, r5, #24
 8029f5a:	9513      	str	r5, [sp, #76]	@ 0x4c
 8029f5c:	b181      	cbz	r1, 8029f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8029f5e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8029f62:	3b01      	subs	r3, #1
 8029f64:	009b      	lsls	r3, r3, #2
 8029f66:	3304      	adds	r3, #4
 8029f68:	eb08 0c03 	add.w	ip, r8, r3
 8029f6c:	f858 3003 	ldr.w	r3, [r8, r3]
 8029f70:	9308      	str	r3, [sp, #32]
 8029f72:	0e1b      	lsrs	r3, r3, #24
 8029f74:	9311      	str	r3, [sp, #68]	@ 0x44
 8029f76:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8029f7a:	930d      	str	r3, [sp, #52]	@ 0x34
 8029f7c:	0e1b      	lsrs	r3, r3, #24
 8029f7e:	9314      	str	r3, [sp, #80]	@ 0x50
 8029f80:	b280      	uxth	r0, r0
 8029f82:	b289      	uxth	r1, r1
 8029f84:	fb00 f901 	mul.w	r9, r0, r1
 8029f88:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8029f8c:	0100      	lsls	r0, r0, #4
 8029f8e:	eba0 0809 	sub.w	r8, r0, r9
 8029f92:	b289      	uxth	r1, r1
 8029f94:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8029f98:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8029f9a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8029f9c:	fa1f f888 	uxth.w	r8, r8
 8029fa0:	1a5b      	subs	r3, r3, r1
 8029fa2:	b29b      	uxth	r3, r3
 8029fa4:	fb08 f000 	mul.w	r0, r8, r0
 8029fa8:	fb03 000e 	mla	r0, r3, lr, r0
 8029fac:	fb01 0005 	mla	r0, r1, r5, r0
 8029fb0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8029fb2:	fb09 0005 	mla	r0, r9, r5, r0
 8029fb6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8029fba:	2800      	cmp	r0, #0
 8029fbc:	f000 80fa 	beq.w	802a1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8029fc0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8029fc4:	d01b      	beq.n	8029ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8029fc6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8029fca:	fb0e fa0a 	mul.w	sl, lr, sl
 8029fce:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8029fd2:	fb0e fe02 	mul.w	lr, lr, r2
 8029fd6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8029fda:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029fde:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8029fe2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8029fe6:	4452      	add	r2, sl
 8029fe8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8029fec:	0a12      	lsrs	r2, r2, #8
 8029fee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029ff2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8029ff6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8029ffa:	ea42 020c 	orr.w	r2, r2, ip
 8029ffe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a000:	2dff      	cmp	r5, #255	@ 0xff
 802a002:	d021      	beq.n	802a048 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802a004:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a006:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a00a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a00c:	fb05 fb0b 	mul.w	fp, r5, fp
 802a010:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a012:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a016:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a018:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a01c:	fb05 fa0a 	mul.w	sl, r5, sl
 802a020:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a024:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a028:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a02c:	44de      	add	lr, fp
 802a02e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a032:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a036:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a03a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a03e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a042:	ea4e 050a 	orr.w	r5, lr, sl
 802a046:	950c      	str	r5, [sp, #48]	@ 0x30
 802a048:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a04a:	2dff      	cmp	r5, #255	@ 0xff
 802a04c:	d021      	beq.n	802a092 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802a04e:	9d08      	ldr	r5, [sp, #32]
 802a050:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a054:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a056:	fb05 fb0b 	mul.w	fp, r5, fp
 802a05a:	9d08      	ldr	r5, [sp, #32]
 802a05c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a060:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a062:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a066:	fb05 fa0a 	mul.w	sl, r5, sl
 802a06a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a06e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a072:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a076:	44de      	add	lr, fp
 802a078:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a07c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a080:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a084:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a088:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a08c:	ea4e 050a 	orr.w	r5, lr, sl
 802a090:	9508      	str	r5, [sp, #32]
 802a092:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a094:	2dff      	cmp	r5, #255	@ 0xff
 802a096:	d021      	beq.n	802a0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802a098:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a09a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a09e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a0a0:	fb05 fb0b 	mul.w	fp, r5, fp
 802a0a4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a0a6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a0aa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a0ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a0b0:	fb05 fa0a 	mul.w	sl, r5, sl
 802a0b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a0b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a0bc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a0c0:	44de      	add	lr, fp
 802a0c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a0c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a0ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a0ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a0d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a0d6:	ea4e 050a 	orr.w	r5, lr, sl
 802a0da:	950d      	str	r5, [sp, #52]	@ 0x34
 802a0dc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a0de:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a0e2:	9d08      	ldr	r5, [sp, #32]
 802a0e4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802a0e8:	fb08 fc0c 	mul.w	ip, r8, ip
 802a0ec:	fb03 cc0e 	mla	ip, r3, lr, ip
 802a0f0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802a0f4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a0f6:	fb01 cc0e 	mla	ip, r1, lr, ip
 802a0fa:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802a0fe:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a100:	fb09 cc0e 	mla	ip, r9, lr, ip
 802a104:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802a108:	fb08 f80e 	mul.w	r8, r8, lr
 802a10c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a110:	fb03 8202 	mla	r2, r3, r2, r8
 802a114:	9b08      	ldr	r3, [sp, #32]
 802a116:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802a118:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 802a11c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a11e:	fb01 220a 	mla	r2, r1, sl, r2
 802a122:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802a126:	fb09 2901 	mla	r9, r9, r1, r2
 802a12a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802a12c:	883b      	ldrh	r3, [r7, #0]
 802a12e:	4342      	muls	r2, r0
 802a130:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a134:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a138:	1c50      	adds	r0, r2, #1
 802a13a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a13e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802a142:	ea4c 0c09 	orr.w	ip, ip, r9
 802a146:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802a14a:	1219      	asrs	r1, r3, #8
 802a14c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802a150:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802a154:	b2c0      	uxtb	r0, r0
 802a156:	fb12 f205 	smulbb	r2, r2, r5
 802a15a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802a15e:	fb01 2100 	mla	r1, r1, r0, r2
 802a162:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802a166:	10da      	asrs	r2, r3, #3
 802a168:	fa5f fc8c 	uxtb.w	ip, ip
 802a16c:	00db      	lsls	r3, r3, #3
 802a16e:	fb1c fc05 	smulbb	ip, ip, r5
 802a172:	b2db      	uxtb	r3, r3
 802a174:	b289      	uxth	r1, r1
 802a176:	fb03 c300 	mla	r3, r3, r0, ip
 802a17a:	fa1f fc83 	uxth.w	ip, r3
 802a17e:	1c4b      	adds	r3, r1, #1
 802a180:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802a184:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802a188:	fb1e fe05 	smulbb	lr, lr, r5
 802a18c:	f10c 0301 	add.w	r3, ip, #1
 802a190:	fb02 e200 	mla	r2, r2, r0, lr
 802a194:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802a198:	b292      	uxth	r2, r2
 802a19a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802a19e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802a1a2:	430b      	orrs	r3, r1
 802a1a4:	1c51      	adds	r1, r2, #1
 802a1a6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802a1aa:	0952      	lsrs	r2, r2, #5
 802a1ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a1b0:	4313      	orrs	r3, r2
 802a1b2:	803b      	strh	r3, [r7, #0]
 802a1b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802a1b6:	441c      	add	r4, r3
 802a1b8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a1ba:	441e      	add	r6, r3
 802a1bc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a1be:	3b01      	subs	r3, #1
 802a1c0:	3702      	adds	r7, #2
 802a1c2:	9318      	str	r3, [sp, #96]	@ 0x60
 802a1c4:	e698      	b.n	8029ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802a1c6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802a1c8:	441c      	add	r4, r3
 802a1ca:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a1cc:	441e      	add	r6, r3
 802a1ce:	9b07      	ldr	r3, [sp, #28]
 802a1d0:	3b01      	subs	r3, #1
 802a1d2:	9307      	str	r3, [sp, #28]
 802a1d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a1d6:	3302      	adds	r3, #2
 802a1d8:	930a      	str	r3, [sp, #40]	@ 0x28
 802a1da:	e66d      	b.n	8029eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802a1dc:	d023      	beq.n	802a226 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802a1de:	9b07      	ldr	r3, [sp, #28]
 802a1e0:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802a1e2:	3b01      	subs	r3, #1
 802a1e4:	fb00 4003 	mla	r0, r0, r3, r4
 802a1e8:	1400      	asrs	r0, r0, #16
 802a1ea:	f53f ae82 	bmi.w	8029ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a1ee:	3901      	subs	r1, #1
 802a1f0:	4288      	cmp	r0, r1
 802a1f2:	f6bf ae7e 	bge.w	8029ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a1f6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802a1f8:	fb01 6303 	mla	r3, r1, r3, r6
 802a1fc:	141b      	asrs	r3, r3, #16
 802a1fe:	f53f ae78 	bmi.w	8029ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a202:	3a01      	subs	r2, #1
 802a204:	4293      	cmp	r3, r2
 802a206:	f6bf ae74 	bge.w	8029ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a20a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802a20e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802a212:	f1bb 0f00 	cmp.w	fp, #0
 802a216:	dc6c      	bgt.n	802a2f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802a218:	9b07      	ldr	r3, [sp, #28]
 802a21a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802a21e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a220:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802a224:	930a      	str	r3, [sp, #40]	@ 0x28
 802a226:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a228:	2b00      	cmp	r3, #0
 802a22a:	f340 81b3 	ble.w	802a594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802a22e:	ee30 0a04 	vadd.f32	s0, s0, s8
 802a232:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802a236:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a23a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a23c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802a240:	ee31 1a05 	vadd.f32	s2, s2, s10
 802a244:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802a248:	eef0 6a62 	vmov.f32	s13, s5
 802a24c:	ee61 7a27 	vmul.f32	s15, s2, s15
 802a250:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a254:	ee77 2a62 	vsub.f32	s5, s14, s5
 802a258:	ee16 4a90 	vmov	r4, s13
 802a25c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802a260:	eef0 6a43 	vmov.f32	s13, s6
 802a264:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802a268:	ee12 2a90 	vmov	r2, s5
 802a26c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802a270:	fb92 f3f3 	sdiv	r3, r2, r3
 802a274:	ee13 2a10 	vmov	r2, s6
 802a278:	9329      	str	r3, [sp, #164]	@ 0xa4
 802a27a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a27c:	fb92 f3f3 	sdiv	r3, r2, r3
 802a280:	932a      	str	r3, [sp, #168]	@ 0xa8
 802a282:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a284:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802a286:	3b01      	subs	r3, #1
 802a288:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a28c:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a28e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a290:	bf08      	it	eq
 802a292:	4613      	moveq	r3, r2
 802a294:	ee16 6a90 	vmov	r6, s13
 802a298:	9307      	str	r3, [sp, #28]
 802a29a:	eeb0 3a67 	vmov.f32	s6, s15
 802a29e:	eef0 2a47 	vmov.f32	s5, s14
 802a2a2:	e5fb      	b.n	8029e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802a2a4:	2900      	cmp	r1, #0
 802a2a6:	f43f ae6b 	beq.w	8029f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a2aa:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802a2ae:	9308      	str	r3, [sp, #32]
 802a2b0:	0e1b      	lsrs	r3, r3, #24
 802a2b2:	9311      	str	r3, [sp, #68]	@ 0x44
 802a2b4:	e664      	b.n	8029f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a2b6:	f112 0801 	adds.w	r8, r2, #1
 802a2ba:	f53f af7b 	bmi.w	802a1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a2be:	4543      	cmp	r3, r8
 802a2c0:	f6ff af78 	blt.w	802a1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a2c4:	f11c 0801 	adds.w	r8, ip, #1
 802a2c8:	f53f af74 	bmi.w	802a1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a2cc:	45c6      	cmp	lr, r8
 802a2ce:	f6ff af71 	blt.w	802a1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a2d2:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 802a2d4:	9201      	str	r2, [sp, #4]
 802a2d6:	fa0f f28e 	sxth.w	r2, lr
 802a2da:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802a2de:	e9cd c002 	strd	ip, r0, [sp, #8]
 802a2e2:	9200      	str	r2, [sp, #0]
 802a2e4:	b21b      	sxth	r3, r3
 802a2e6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802a2e8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802a2ea:	4639      	mov	r1, r7
 802a2ec:	f7ff fc79 	bl	8029be2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802a2f0:	e760      	b.n	802a1b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a2f2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a2f4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a2f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a2fa:	1427      	asrs	r7, r4, #16
 802a2fc:	1433      	asrs	r3, r6, #16
 802a2fe:	fb01 7303 	mla	r3, r1, r3, r7
 802a302:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802a306:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802a30a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802a30e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802a312:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802a316:	2a00      	cmp	r2, #0
 802a318:	f000 8133 	beq.w	802a582 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802a31c:	687d      	ldr	r5, [r7, #4]
 802a31e:	950e      	str	r5, [sp, #56]	@ 0x38
 802a320:	0e2d      	lsrs	r5, r5, #24
 802a322:	9515      	str	r5, [sp, #84]	@ 0x54
 802a324:	b178      	cbz	r0, 802a346 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802a326:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 802a32a:	3901      	subs	r1, #1
 802a32c:	0089      	lsls	r1, r1, #2
 802a32e:	3104      	adds	r1, #4
 802a330:	eb07 0e01 	add.w	lr, r7, r1
 802a334:	5879      	ldr	r1, [r7, r1]
 802a336:	9109      	str	r1, [sp, #36]	@ 0x24
 802a338:	0e09      	lsrs	r1, r1, #24
 802a33a:	9112      	str	r1, [sp, #72]	@ 0x48
 802a33c:	f8de 1004 	ldr.w	r1, [lr, #4]
 802a340:	910f      	str	r1, [sp, #60]	@ 0x3c
 802a342:	0e09      	lsrs	r1, r1, #24
 802a344:	9116      	str	r1, [sp, #88]	@ 0x58
 802a346:	b292      	uxth	r2, r2
 802a348:	b280      	uxth	r0, r0
 802a34a:	fb02 f800 	mul.w	r8, r2, r0
 802a34e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802a352:	0112      	lsls	r2, r2, #4
 802a354:	eba2 0e08 	sub.w	lr, r2, r8
 802a358:	b280      	uxth	r0, r0
 802a35a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802a35e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802a360:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802a362:	fa1f fe8e 	uxth.w	lr, lr
 802a366:	1a12      	subs	r2, r2, r0
 802a368:	b292      	uxth	r2, r2
 802a36a:	fb0e f101 	mul.w	r1, lr, r1
 802a36e:	fb02 110c 	mla	r1, r2, ip, r1
 802a372:	fb00 1105 	mla	r1, r0, r5, r1
 802a376:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802a378:	fb08 1105 	mla	r1, r8, r5, r1
 802a37c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802a380:	2900      	cmp	r1, #0
 802a382:	f000 80f5 	beq.w	802a570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802a386:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802a38a:	d019      	beq.n	802a3c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802a38c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802a390:	fb0c fa0a 	mul.w	sl, ip, sl
 802a394:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802a398:	fb0c fc03 	mul.w	ip, ip, r3
 802a39c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802a3a0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a3a4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802a3a8:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802a3ac:	4453      	add	r3, sl
 802a3ae:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802a3b2:	0a1b      	lsrs	r3, r3, #8
 802a3b4:	0a3f      	lsrs	r7, r7, #8
 802a3b6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802a3ba:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802a3be:	433b      	orrs	r3, r7
 802a3c0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802a3c2:	2dff      	cmp	r5, #255	@ 0xff
 802a3c4:	d020      	beq.n	802a408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802a3c6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802a3c8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802a3cc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802a3ce:	436f      	muls	r7, r5
 802a3d0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802a3d2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a3d6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802a3d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802a3dc:	fb05 fa0a 	mul.w	sl, r5, sl
 802a3e0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802a3e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a3e8:	44bc      	add	ip, r7
 802a3ea:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802a3ee:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802a3f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a3f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a3fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a3fe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a402:	ea4c 050a 	orr.w	r5, ip, sl
 802a406:	950e      	str	r5, [sp, #56]	@ 0x38
 802a408:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802a40a:	2dff      	cmp	r5, #255	@ 0xff
 802a40c:	d020      	beq.n	802a450 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802a40e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802a410:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802a414:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802a416:	436f      	muls	r7, r5
 802a418:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802a41a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a41e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802a420:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802a424:	fb05 fa0a 	mul.w	sl, r5, sl
 802a428:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802a42c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a430:	44bc      	add	ip, r7
 802a432:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802a436:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802a43a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a43e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a442:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a446:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a44a:	ea4c 050a 	orr.w	r5, ip, sl
 802a44e:	9509      	str	r5, [sp, #36]	@ 0x24
 802a450:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802a452:	2dff      	cmp	r5, #255	@ 0xff
 802a454:	d020      	beq.n	802a498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802a456:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802a458:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802a45c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802a45e:	436f      	muls	r7, r5
 802a460:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802a462:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a466:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802a468:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802a46c:	fb05 fa0a 	mul.w	sl, r5, sl
 802a470:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802a474:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a478:	44bc      	add	ip, r7
 802a47a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802a47e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802a482:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a486:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a48a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a48e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a492:	ea4c 050a 	orr.w	r5, ip, sl
 802a496:	950f      	str	r5, [sp, #60]	@ 0x3c
 802a498:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802a49a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802a49e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802a4a0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802a4a4:	fb0e f707 	mul.w	r7, lr, r7
 802a4a8:	fb02 770c 	mla	r7, r2, ip, r7
 802a4ac:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a4b0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802a4b2:	fb00 770c 	mla	r7, r0, ip, r7
 802a4b6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a4ba:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802a4bc:	fb08 770c 	mla	r7, r8, ip, r7
 802a4c0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802a4c4:	fb0e fe0c 	mul.w	lr, lr, ip
 802a4c8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802a4cc:	fb02 e303 	mla	r3, r2, r3, lr
 802a4d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a4d2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802a4d4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802a4d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802a4da:	fb00 330a 	mla	r3, r0, sl, r3
 802a4de:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 802a4e2:	fb08 3c0c 	mla	ip, r8, ip, r3
 802a4e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802a4e8:	f8b9 0000 	ldrh.w	r0, [r9]
 802a4ec:	4359      	muls	r1, r3
 802a4ee:	0a3f      	lsrs	r7, r7, #8
 802a4f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a4f4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802a4f8:	1c4b      	adds	r3, r1, #1
 802a4fa:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802a4fe:	ea47 070c 	orr.w	r7, r7, ip
 802a502:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802a506:	1202      	asrs	r2, r0, #8
 802a508:	0c3b      	lsrs	r3, r7, #16
 802a50a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802a50e:	b2c9      	uxtb	r1, r1
 802a510:	fb13 f305 	smulbb	r3, r3, r5
 802a514:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802a518:	fb02 3201 	mla	r2, r2, r1, r3
 802a51c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802a520:	10c3      	asrs	r3, r0, #3
 802a522:	b2ff      	uxtb	r7, r7
 802a524:	00c0      	lsls	r0, r0, #3
 802a526:	b2c0      	uxtb	r0, r0
 802a528:	fb17 f705 	smulbb	r7, r7, r5
 802a52c:	fb00 7001 	mla	r0, r0, r1, r7
 802a530:	b292      	uxth	r2, r2
 802a532:	fb1c fc05 	smulbb	ip, ip, r5
 802a536:	b280      	uxth	r0, r0
 802a538:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802a53c:	fb03 c301 	mla	r3, r3, r1, ip
 802a540:	1c51      	adds	r1, r2, #1
 802a542:	f100 0c01 	add.w	ip, r0, #1
 802a546:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802a54a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802a54e:	b29b      	uxth	r3, r3
 802a550:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802a554:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802a558:	ea4c 0202 	orr.w	r2, ip, r2
 802a55c:	f103 0c01 	add.w	ip, r3, #1
 802a560:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802a564:	095b      	lsrs	r3, r3, #5
 802a566:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802a56a:	431a      	orrs	r2, r3
 802a56c:	f8a9 2000 	strh.w	r2, [r9]
 802a570:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802a572:	441c      	add	r4, r3
 802a574:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a576:	f109 0902 	add.w	r9, r9, #2
 802a57a:	441e      	add	r6, r3
 802a57c:	f10b 3bff 	add.w	fp, fp, #4294967295
 802a580:	e647      	b.n	802a212 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802a582:	2800      	cmp	r0, #0
 802a584:	f43f aedf 	beq.w	802a346 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802a588:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802a58c:	9109      	str	r1, [sp, #36]	@ 0x24
 802a58e:	0e09      	lsrs	r1, r1, #24
 802a590:	9112      	str	r1, [sp, #72]	@ 0x48
 802a592:	e6d8      	b.n	802a346 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802a594:	b01d      	add	sp, #116	@ 0x74
 802a596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a59a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802a59a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a59e:	b085      	sub	sp, #20
 802a5a0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802a5a4:	9102      	str	r1, [sp, #8]
 802a5a6:	2c00      	cmp	r4, #0
 802a5a8:	fb04 7103 	mla	r1, r4, r3, r7
 802a5ac:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802a5b0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802a5b4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802a5b8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802a5bc:	f2c0 810c 	blt.w	802a7d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802a5c0:	45a6      	cmp	lr, r4
 802a5c2:	f340 8109 	ble.w	802a7d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802a5c6:	2f00      	cmp	r7, #0
 802a5c8:	f2c0 8104 	blt.w	802a7d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802a5cc:	42bb      	cmp	r3, r7
 802a5ce:	f340 8101 	ble.w	802a7d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802a5d2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802a5d6:	1c7a      	adds	r2, r7, #1
 802a5d8:	f100 8101 	bmi.w	802a7de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802a5dc:	4293      	cmp	r3, r2
 802a5de:	f340 80fe 	ble.w	802a7de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802a5e2:	2e00      	cmp	r6, #0
 802a5e4:	f000 80fd 	beq.w	802a7e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802a5e8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802a5ec:	3401      	adds	r4, #1
 802a5ee:	f100 80fc 	bmi.w	802a7ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802a5f2:	45a6      	cmp	lr, r4
 802a5f4:	f340 80f9 	ble.w	802a7ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802a5f8:	2800      	cmp	r0, #0
 802a5fa:	f000 80f9 	beq.w	802a7f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802a5fe:	2f00      	cmp	r7, #0
 802a600:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802a604:	f2c0 80ef 	blt.w	802a7e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802a608:	42bb      	cmp	r3, r7
 802a60a:	f340 80ec 	ble.w	802a7e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802a60e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802a612:	3701      	adds	r7, #1
 802a614:	f100 80ef 	bmi.w	802a7f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802a618:	42bb      	cmp	r3, r7
 802a61a:	f340 80ec 	ble.w	802a7f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802a61e:	2e00      	cmp	r6, #0
 802a620:	f000 80eb 	beq.w	802a7fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802a624:	6852      	ldr	r2, [r2, #4]
 802a626:	b2b6      	uxth	r6, r6
 802a628:	b280      	uxth	r0, r0
 802a62a:	fb00 fe06 	mul.w	lr, r0, r6
 802a62e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802a632:	0136      	lsls	r6, r6, #4
 802a634:	eba6 070e 	sub.w	r7, r6, lr
 802a638:	b280      	uxth	r0, r0
 802a63a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802a63e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802a642:	b2bf      	uxth	r7, r7
 802a644:	1a1b      	subs	r3, r3, r0
 802a646:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802a64a:	b29b      	uxth	r3, r3
 802a64c:	fb07 f60a 	mul.w	r6, r7, sl
 802a650:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802a654:	fb0b 6603 	mla	r6, fp, r3, r6
 802a658:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802a65c:	fb00 6609 	mla	r6, r0, r9, r6
 802a660:	fb0e 6608 	mla	r6, lr, r8, r6
 802a664:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802a668:	9600      	str	r6, [sp, #0]
 802a66a:	2e00      	cmp	r6, #0
 802a66c:	f000 80af 	beq.w	802a7ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802a670:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a674:	fb0b fc0c 	mul.w	ip, fp, ip
 802a678:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802a67c:	fb0b f505 	mul.w	r5, fp, r5
 802a680:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802a684:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802a688:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a68c:	44dc      	add	ip, fp
 802a68e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a692:	9501      	str	r5, [sp, #4]
 802a694:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802a698:	9503      	str	r5, [sp, #12]
 802a69a:	9d01      	ldr	r5, [sp, #4]
 802a69c:	9e02      	ldr	r6, [sp, #8]
 802a69e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802a6a2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802a6a6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802a6aa:	fb0a fc0c 	mul.w	ip, sl, ip
 802a6ae:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802a6b2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802a6b6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802a6ba:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a6be:	4465      	add	r5, ip
 802a6c0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802a6c4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802a6c8:	fb09 fc0c 	mul.w	ip, r9, ip
 802a6cc:	fb09 f904 	mul.w	r9, r9, r4
 802a6d0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 802a6d4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802a6d8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802a6dc:	fb08 f404 	mul.w	r4, r8, r4
 802a6e0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802a6e4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a6e8:	fb08 f802 	mul.w	r8, r8, r2
 802a6ec:	fb0a fa01 	mul.w	sl, sl, r1
 802a6f0:	0a22      	lsrs	r2, r4, #8
 802a6f2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802a6f6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a6fa:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802a6fe:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802a702:	4414      	add	r4, r2
 802a704:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802a708:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802a70c:	0a2d      	lsrs	r5, r5, #8
 802a70e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802a712:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802a716:	9a03      	ldr	r2, [sp, #12]
 802a718:	8836      	ldrh	r6, [r6, #0]
 802a71a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a71e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a722:	437d      	muls	r5, r7
 802a724:	4461      	add	r1, ip
 802a726:	0a24      	lsrs	r4, r4, #8
 802a728:	fb02 5503 	mla	r5, r2, r3, r5
 802a72c:	0a09      	lsrs	r1, r1, #8
 802a72e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802a732:	fb04 540e 	mla	r4, r4, lr, r5
 802a736:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a73a:	fb01 4100 	mla	r1, r1, r0, r4
 802a73e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a742:	0a09      	lsrs	r1, r1, #8
 802a744:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a748:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802a74c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802a750:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802a754:	fb07 f70a 	mul.w	r7, r7, sl
 802a758:	fb03 7101 	mla	r1, r3, r1, r7
 802a75c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a760:	9b00      	ldr	r3, [sp, #0]
 802a762:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802a766:	fb0e 1e08 	mla	lr, lr, r8, r1
 802a76a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802a76e:	fb00 e101 	mla	r1, r0, r1, lr
 802a772:	43da      	mvns	r2, r3
 802a774:	1233      	asrs	r3, r6, #8
 802a776:	b2d2      	uxtb	r2, r2
 802a778:	10f0      	asrs	r0, r6, #3
 802a77a:	0a09      	lsrs	r1, r1, #8
 802a77c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802a780:	00f6      	lsls	r6, r6, #3
 802a782:	4353      	muls	r3, r2
 802a784:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802a788:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802a78c:	b2f6      	uxtb	r6, r6
 802a78e:	4321      	orrs	r1, r4
 802a790:	4350      	muls	r0, r2
 802a792:	4356      	muls	r6, r2
 802a794:	1c5a      	adds	r2, r3, #1
 802a796:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802a79a:	0c0b      	lsrs	r3, r1, #16
 802a79c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802a7a0:	1c42      	adds	r2, r0, #1
 802a7a2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802a7a6:	0a0a      	lsrs	r2, r1, #8
 802a7a8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802a7ac:	021b      	lsls	r3, r3, #8
 802a7ae:	00d2      	lsls	r2, r2, #3
 802a7b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a7b4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802a7b8:	4313      	orrs	r3, r2
 802a7ba:	1c72      	adds	r2, r6, #1
 802a7bc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802a7c0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802a7c4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802a7c8:	4319      	orrs	r1, r3
 802a7ca:	9b02      	ldr	r3, [sp, #8]
 802a7cc:	8019      	strh	r1, [r3, #0]
 802a7ce:	b005      	add	sp, #20
 802a7d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a7d4:	2500      	movs	r5, #0
 802a7d6:	e6fe      	b.n	802a5d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802a7d8:	2100      	movs	r1, #0
 802a7da:	460d      	mov	r5, r1
 802a7dc:	e706      	b.n	802a5ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802a7de:	2100      	movs	r1, #0
 802a7e0:	e704      	b.n	802a5ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802a7e2:	4631      	mov	r1, r6
 802a7e4:	e702      	b.n	802a5ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802a7e6:	2400      	movs	r4, #0
 802a7e8:	e713      	b.n	802a612 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802a7ea:	2200      	movs	r2, #0
 802a7ec:	4614      	mov	r4, r2
 802a7ee:	e71a      	b.n	802a626 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802a7f0:	4602      	mov	r2, r0
 802a7f2:	4604      	mov	r4, r0
 802a7f4:	e717      	b.n	802a626 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802a7f6:	2200      	movs	r2, #0
 802a7f8:	e715      	b.n	802a626 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802a7fa:	4632      	mov	r2, r6
 802a7fc:	e713      	b.n	802a626 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0802a800 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802a800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a804:	b09b      	sub	sp, #108	@ 0x6c
 802a806:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 802a80a:	9218      	str	r2, [sp, #96]	@ 0x60
 802a80c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802a80e:	9116      	str	r1, [sp, #88]	@ 0x58
 802a810:	9307      	str	r3, [sp, #28]
 802a812:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802a816:	9019      	str	r0, [sp, #100]	@ 0x64
 802a818:	6850      	ldr	r0, [r2, #4]
 802a81a:	6812      	ldr	r2, [r2, #0]
 802a81c:	fb00 1303 	mla	r3, r0, r3, r1
 802a820:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802a824:	930a      	str	r3, [sp, #40]	@ 0x28
 802a826:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802a828:	681b      	ldr	r3, [r3, #0]
 802a82a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802a82c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802a82e:	2b00      	cmp	r3, #0
 802a830:	dc03      	bgt.n	802a83a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802a832:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a834:	2b00      	cmp	r3, #0
 802a836:	f340 8386 	ble.w	802af46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802a83a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802a83c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a840:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802a844:	1e48      	subs	r0, r1, #1
 802a846:	1e57      	subs	r7, r2, #1
 802a848:	9b07      	ldr	r3, [sp, #28]
 802a84a:	2b00      	cmp	r3, #0
 802a84c:	f340 8166 	ble.w	802ab1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802a850:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802a854:	ea4f 4326 	mov.w	r3, r6, asr #16
 802a858:	d406      	bmi.n	802a868 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802a85a:	4584      	cmp	ip, r0
 802a85c:	da04      	bge.n	802a868 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802a85e:	2b00      	cmp	r3, #0
 802a860:	db02      	blt.n	802a868 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802a862:	42bb      	cmp	r3, r7
 802a864:	f2c0 815b 	blt.w	802ab1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802a868:	f11c 0c01 	adds.w	ip, ip, #1
 802a86c:	f100 814b 	bmi.w	802ab06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802a870:	4561      	cmp	r1, ip
 802a872:	f2c0 8148 	blt.w	802ab06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802a876:	3301      	adds	r3, #1
 802a878:	f100 8145 	bmi.w	802ab06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802a87c:	429a      	cmp	r2, r3
 802a87e:	f2c0 8142 	blt.w	802ab06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802a882:	9b07      	ldr	r3, [sp, #28]
 802a884:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802a886:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a888:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a88a:	2b00      	cmp	r3, #0
 802a88c:	f340 8165 	ble.w	802ab5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802a890:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802a892:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802a894:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802a898:	689b      	ldr	r3, [r3, #8]
 802a89a:	1422      	asrs	r2, r4, #16
 802a89c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802a8a0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802a8a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802a8a8:	f100 81d5 	bmi.w	802ac56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802a8ac:	f103 38ff 	add.w	r8, r3, #4294967295
 802a8b0:	4542      	cmp	r2, r8
 802a8b2:	f280 81d0 	bge.w	802ac56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802a8b6:	f1bc 0f00 	cmp.w	ip, #0
 802a8ba:	f2c0 81cc 	blt.w	802ac56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802a8be:	f10e 38ff 	add.w	r8, lr, #4294967295
 802a8c2:	45c4      	cmp	ip, r8
 802a8c4:	f280 81c7 	bge.w	802ac56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802a8c8:	b21b      	sxth	r3, r3
 802a8ca:	fb0c 2203 	mla	r2, ip, r3, r2
 802a8ce:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802a8d0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802a8d4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802a8d8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802a8dc:	2900      	cmp	r1, #0
 802a8de:	f000 8182 	beq.w	802abe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802a8e2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802a8e6:	950b      	str	r5, [sp, #44]	@ 0x2c
 802a8e8:	0e2d      	lsrs	r5, r5, #24
 802a8ea:	9512      	str	r5, [sp, #72]	@ 0x48
 802a8ec:	b180      	cbz	r0, 802a910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802a8ee:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802a8f2:	3b01      	subs	r3, #1
 802a8f4:	009b      	lsls	r3, r3, #2
 802a8f6:	3304      	adds	r3, #4
 802a8f8:	eb08 0c03 	add.w	ip, r8, r3
 802a8fc:	f858 3003 	ldr.w	r3, [r8, r3]
 802a900:	9308      	str	r3, [sp, #32]
 802a902:	0e1b      	lsrs	r3, r3, #24
 802a904:	9310      	str	r3, [sp, #64]	@ 0x40
 802a906:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802a90a:	930c      	str	r3, [sp, #48]	@ 0x30
 802a90c:	0e1b      	lsrs	r3, r3, #24
 802a90e:	9313      	str	r3, [sp, #76]	@ 0x4c
 802a910:	b289      	uxth	r1, r1
 802a912:	b280      	uxth	r0, r0
 802a914:	fb01 f900 	mul.w	r9, r1, r0
 802a918:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802a91c:	0109      	lsls	r1, r1, #4
 802a91e:	eba1 0809 	sub.w	r8, r1, r9
 802a922:	b280      	uxth	r0, r0
 802a924:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802a928:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802a92a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a92c:	fa1f f888 	uxth.w	r8, r8
 802a930:	1a09      	subs	r1, r1, r0
 802a932:	b289      	uxth	r1, r1
 802a934:	fb08 f303 	mul.w	r3, r8, r3
 802a938:	fb01 330e 	mla	r3, r1, lr, r3
 802a93c:	fb00 3305 	mla	r3, r0, r5, r3
 802a940:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a942:	fb09 3305 	mla	r3, r9, r5, r3
 802a946:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802a94a:	2b00      	cmp	r3, #0
 802a94c:	f000 80d2 	beq.w	802aaf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802a950:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802a954:	d01b      	beq.n	802a98e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802a956:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802a95a:	fb0e fa0a 	mul.w	sl, lr, sl
 802a95e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a962:	fb0e fe02 	mul.w	lr, lr, r2
 802a966:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802a96a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a96e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802a972:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802a976:	4452      	add	r2, sl
 802a978:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802a97c:	0a12      	lsrs	r2, r2, #8
 802a97e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a982:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a986:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802a98a:	ea42 020c 	orr.w	r2, r2, ip
 802a98e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802a990:	2dff      	cmp	r5, #255	@ 0xff
 802a992:	d021      	beq.n	802a9d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802a994:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802a996:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a99a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802a99c:	fb05 fb0b 	mul.w	fp, r5, fp
 802a9a0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802a9a2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a9a6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802a9a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a9ac:	fb05 fa0a 	mul.w	sl, r5, sl
 802a9b0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a9b4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a9b8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a9bc:	44de      	add	lr, fp
 802a9be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a9c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a9c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a9ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a9ce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a9d2:	ea4e 050a 	orr.w	r5, lr, sl
 802a9d6:	950b      	str	r5, [sp, #44]	@ 0x2c
 802a9d8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a9da:	2dff      	cmp	r5, #255	@ 0xff
 802a9dc:	d021      	beq.n	802aa22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802a9de:	9d08      	ldr	r5, [sp, #32]
 802a9e0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a9e4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a9e6:	fb05 fb0b 	mul.w	fp, r5, fp
 802a9ea:	9d08      	ldr	r5, [sp, #32]
 802a9ec:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802a9f0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a9f2:	fb05 fa0e 	mul.w	sl, r5, lr
 802a9f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a9fa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a9fe:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802aa02:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802aa06:	44de      	add	lr, fp
 802aa08:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802aa0c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802aa10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802aa14:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802aa18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802aa1c:	ea4e 050a 	orr.w	r5, lr, sl
 802aa20:	9508      	str	r5, [sp, #32]
 802aa22:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802aa24:	2dff      	cmp	r5, #255	@ 0xff
 802aa26:	d021      	beq.n	802aa6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802aa28:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802aa2a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802aa2e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802aa30:	fb05 fb0b 	mul.w	fp, r5, fp
 802aa34:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802aa36:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802aa3a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802aa3c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802aa40:	fb05 fa0a 	mul.w	sl, r5, sl
 802aa44:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802aa48:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802aa4c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802aa50:	44de      	add	lr, fp
 802aa52:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802aa56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802aa5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802aa5e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802aa62:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802aa66:	ea4e 050a 	orr.w	r5, lr, sl
 802aa6a:	950c      	str	r5, [sp, #48]	@ 0x30
 802aa6c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802aa6e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802aa72:	9d08      	ldr	r5, [sp, #32]
 802aa74:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802aa78:	fb08 fc0c 	mul.w	ip, r8, ip
 802aa7c:	fb01 cc0e 	mla	ip, r1, lr, ip
 802aa80:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802aa84:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802aa86:	fb00 cc0e 	mla	ip, r0, lr, ip
 802aa8a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802aa8e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802aa90:	fb09 cc0e 	mla	ip, r9, lr, ip
 802aa94:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802aa98:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802aa9c:	fb08 f80e 	mul.w	r8, r8, lr
 802aaa0:	fb01 8202 	mla	r2, r1, r2, r8
 802aaa4:	9908      	ldr	r1, [sp, #32]
 802aaa6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802aaaa:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802aaac:	fb00 220a 	mla	r2, r0, sl, r2
 802aab0:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802aab4:	fb09 2900 	mla	r9, r9, r0, r2
 802aab8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802aabc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802aac0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802aac4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802aac8:	ea4c 0c09 	orr.w	ip, ip, r9
 802aacc:	2bff      	cmp	r3, #255	@ 0xff
 802aace:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802aad2:	f040 8091 	bne.w	802abf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802aad6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802aada:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 802aade:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802aae2:	f022 0207 	bic.w	r2, r2, #7
 802aae6:	431a      	orrs	r2, r3
 802aae8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802aaec:	ea4c 0c02 	orr.w	ip, ip, r2
 802aaf0:	f8a7 c000 	strh.w	ip, [r7]
 802aaf4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802aaf6:	441c      	add	r4, r3
 802aaf8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802aafa:	441e      	add	r6, r3
 802aafc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802aafe:	3b01      	subs	r3, #1
 802ab00:	3702      	adds	r7, #2
 802ab02:	9317      	str	r3, [sp, #92]	@ 0x5c
 802ab04:	e6c0      	b.n	802a888 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802ab06:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802ab08:	441c      	add	r4, r3
 802ab0a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802ab0c:	441e      	add	r6, r3
 802ab0e:	9b07      	ldr	r3, [sp, #28]
 802ab10:	3b01      	subs	r3, #1
 802ab12:	9307      	str	r3, [sp, #28]
 802ab14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ab16:	3302      	adds	r3, #2
 802ab18:	930a      	str	r3, [sp, #40]	@ 0x28
 802ab1a:	e695      	b.n	802a848 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802ab1c:	d024      	beq.n	802ab68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802ab1e:	9b07      	ldr	r3, [sp, #28]
 802ab20:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802ab22:	3b01      	subs	r3, #1
 802ab24:	fb00 4003 	mla	r0, r0, r3, r4
 802ab28:	1400      	asrs	r0, r0, #16
 802ab2a:	f53f aeaa 	bmi.w	802a882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802ab2e:	3901      	subs	r1, #1
 802ab30:	4288      	cmp	r0, r1
 802ab32:	f6bf aea6 	bge.w	802a882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802ab36:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802ab38:	fb01 6303 	mla	r3, r1, r3, r6
 802ab3c:	141b      	asrs	r3, r3, #16
 802ab3e:	f53f aea0 	bmi.w	802a882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802ab42:	3a01      	subs	r2, #1
 802ab44:	4293      	cmp	r3, r2
 802ab46:	f6bf ae9c 	bge.w	802a882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802ab4a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802ab4e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802ab52:	f1bb 0f00 	cmp.w	fp, #0
 802ab56:	f300 809a 	bgt.w	802ac8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802ab5a:	9b07      	ldr	r3, [sp, #28]
 802ab5c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802ab60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802ab62:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802ab66:	930a      	str	r3, [sp, #40]	@ 0x28
 802ab68:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802ab6a:	2b00      	cmp	r3, #0
 802ab6c:	f340 81eb 	ble.w	802af46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802ab70:	ee30 0a04 	vadd.f32	s0, s0, s8
 802ab74:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ab78:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802ab7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802ab7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802ab82:	ee31 1a05 	vadd.f32	s2, s2, s10
 802ab86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802ab8a:	eef0 6a62 	vmov.f32	s13, s5
 802ab8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 802ab92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ab96:	ee77 2a62 	vsub.f32	s5, s14, s5
 802ab9a:	ee16 4a90 	vmov	r4, s13
 802ab9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802aba2:	eef0 6a43 	vmov.f32	s13, s6
 802aba6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802abaa:	ee12 2a90 	vmov	r2, s5
 802abae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802abb2:	fb92 f3f3 	sdiv	r3, r2, r3
 802abb6:	ee13 2a10 	vmov	r2, s6
 802abba:	9327      	str	r3, [sp, #156]	@ 0x9c
 802abbc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802abbe:	fb92 f3f3 	sdiv	r3, r2, r3
 802abc2:	9328      	str	r3, [sp, #160]	@ 0xa0
 802abc4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802abc6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802abc8:	3b01      	subs	r3, #1
 802abca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802abce:	9316      	str	r3, [sp, #88]	@ 0x58
 802abd0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802abd2:	bf08      	it	eq
 802abd4:	4613      	moveq	r3, r2
 802abd6:	ee16 6a90 	vmov	r6, s13
 802abda:	9307      	str	r3, [sp, #28]
 802abdc:	eeb0 3a67 	vmov.f32	s6, s15
 802abe0:	eef0 2a47 	vmov.f32	s5, s14
 802abe4:	e622      	b.n	802a82c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802abe6:	2800      	cmp	r0, #0
 802abe8:	f43f ae92 	beq.w	802a910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802abec:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802abf0:	9308      	str	r3, [sp, #32]
 802abf2:	0e1b      	lsrs	r3, r3, #24
 802abf4:	9310      	str	r3, [sp, #64]	@ 0x40
 802abf6:	e68b      	b.n	802a910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802abf8:	8839      	ldrh	r1, [r7, #0]
 802abfa:	4dd4      	ldr	r5, [pc, #848]	@ (802af4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802abfc:	43db      	mvns	r3, r3
 802abfe:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802ac02:	fa5f f883 	uxtb.w	r8, r3
 802ac06:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802ac0a:	fb0e fe08 	mul.w	lr, lr, r8
 802ac0e:	10c8      	asrs	r0, r1, #3
 802ac10:	00cb      	lsls	r3, r1, #3
 802ac12:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802ac16:	f10e 0101 	add.w	r1, lr, #1
 802ac1a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802ac1e:	fb00 f008 	mul.w	r0, r0, r8
 802ac22:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802ac26:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802ac2a:	f100 0e01 	add.w	lr, r0, #1
 802ac2e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802ac32:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802ac36:	b2db      	uxtb	r3, r3
 802ac38:	b2c9      	uxtb	r1, r1
 802ac3a:	00d2      	lsls	r2, r2, #3
 802ac3c:	fb03 f308 	mul.w	r3, r3, r8
 802ac40:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802ac44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802ac48:	430a      	orrs	r2, r1
 802ac4a:	1c59      	adds	r1, r3, #1
 802ac4c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802ac50:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802ac54:	e748      	b.n	802aae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802ac56:	f112 0801 	adds.w	r8, r2, #1
 802ac5a:	f53f af4b 	bmi.w	802aaf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ac5e:	4543      	cmp	r3, r8
 802ac60:	f6ff af48 	blt.w	802aaf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ac64:	f11c 0801 	adds.w	r8, ip, #1
 802ac68:	f53f af44 	bmi.w	802aaf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ac6c:	45c6      	cmp	lr, r8
 802ac6e:	f6ff af41 	blt.w	802aaf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ac72:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802ac76:	fa0f f28e 	sxth.w	r2, lr
 802ac7a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802ac7e:	9200      	str	r2, [sp, #0]
 802ac80:	b21b      	sxth	r3, r3
 802ac82:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802ac84:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802ac86:	4639      	mov	r1, r7
 802ac88:	f7ff fc87 	bl	802a59a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802ac8c:	e732      	b.n	802aaf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802ac8e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802ac90:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802ac92:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802ac96:	1421      	asrs	r1, r4, #16
 802ac98:	1433      	asrs	r3, r6, #16
 802ac9a:	fb07 1303 	mla	r3, r7, r3, r1
 802ac9e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802aca0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802aca4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802aca8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802acac:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802acb0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802acb4:	2a00      	cmp	r2, #0
 802acb6:	f000 8107 	beq.w	802aec8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802acba:	684d      	ldr	r5, [r1, #4]
 802acbc:	950d      	str	r5, [sp, #52]	@ 0x34
 802acbe:	0e2d      	lsrs	r5, r5, #24
 802acc0:	9514      	str	r5, [sp, #80]	@ 0x50
 802acc2:	b178      	cbz	r0, 802ace4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802acc4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 802acc8:	3f01      	subs	r7, #1
 802acca:	00bf      	lsls	r7, r7, #2
 802accc:	3704      	adds	r7, #4
 802acce:	eb01 0e07 	add.w	lr, r1, r7
 802acd2:	59c9      	ldr	r1, [r1, r7]
 802acd4:	9109      	str	r1, [sp, #36]	@ 0x24
 802acd6:	0e09      	lsrs	r1, r1, #24
 802acd8:	9111      	str	r1, [sp, #68]	@ 0x44
 802acda:	f8de 1004 	ldr.w	r1, [lr, #4]
 802acde:	910e      	str	r1, [sp, #56]	@ 0x38
 802ace0:	0e09      	lsrs	r1, r1, #24
 802ace2:	9115      	str	r1, [sp, #84]	@ 0x54
 802ace4:	b292      	uxth	r2, r2
 802ace6:	b280      	uxth	r0, r0
 802ace8:	fb02 f900 	mul.w	r9, r2, r0
 802acec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802acf0:	0112      	lsls	r2, r2, #4
 802acf2:	eba2 0e09 	sub.w	lr, r2, r9
 802acf6:	b280      	uxth	r0, r0
 802acf8:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 802acfc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802acfe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802ad00:	fa1f fe8e 	uxth.w	lr, lr
 802ad04:	1a09      	subs	r1, r1, r0
 802ad06:	b289      	uxth	r1, r1
 802ad08:	fb0e f202 	mul.w	r2, lr, r2
 802ad0c:	fb01 220c 	mla	r2, r1, ip, r2
 802ad10:	fb00 2205 	mla	r2, r0, r5, r2
 802ad14:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802ad16:	fb09 2205 	mla	r2, r9, r5, r2
 802ad1a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802ad1e:	2a00      	cmp	r2, #0
 802ad20:	f000 80c9 	beq.w	802aeb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802ad24:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802ad28:	d019      	beq.n	802ad5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802ad2a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802ad2e:	fb0c fa0a 	mul.w	sl, ip, sl
 802ad32:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ad36:	fb0c fc03 	mul.w	ip, ip, r3
 802ad3a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802ad3e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802ad42:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802ad46:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802ad4a:	4453      	add	r3, sl
 802ad4c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802ad50:	0a1b      	lsrs	r3, r3, #8
 802ad52:	0a3f      	lsrs	r7, r7, #8
 802ad54:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802ad58:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802ad5c:	433b      	orrs	r3, r7
 802ad5e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802ad60:	2dff      	cmp	r5, #255	@ 0xff
 802ad62:	d020      	beq.n	802ada6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802ad64:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802ad66:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802ad6a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802ad6c:	436f      	muls	r7, r5
 802ad6e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802ad70:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802ad74:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802ad76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802ad7a:	fb05 fa0a 	mul.w	sl, r5, sl
 802ad7e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802ad82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ad86:	44bc      	add	ip, r7
 802ad88:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802ad8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802ad90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ad94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ad98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ad9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ada0:	ea4c 050a 	orr.w	r5, ip, sl
 802ada4:	950d      	str	r5, [sp, #52]	@ 0x34
 802ada6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802ada8:	2dff      	cmp	r5, #255	@ 0xff
 802adaa:	d020      	beq.n	802adee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802adac:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802adae:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802adb2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802adb4:	436f      	muls	r7, r5
 802adb6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802adb8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802adbc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802adbe:	fb05 fa0c 	mul.w	sl, r5, ip
 802adc2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802adc6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802adca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802adce:	44bc      	add	ip, r7
 802add0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802add4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802add8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802addc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ade0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ade4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ade8:	ea4c 050a 	orr.w	r5, ip, sl
 802adec:	9509      	str	r5, [sp, #36]	@ 0x24
 802adee:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802adf0:	2dff      	cmp	r5, #255	@ 0xff
 802adf2:	d020      	beq.n	802ae36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802adf4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802adf6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802adfa:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802adfc:	436f      	muls	r7, r5
 802adfe:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802ae00:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802ae04:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802ae06:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802ae0a:	fb05 fa0a 	mul.w	sl, r5, sl
 802ae0e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802ae12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ae16:	44bc      	add	ip, r7
 802ae18:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802ae1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802ae20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ae24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ae28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ae2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ae30:	ea4c 050a 	orr.w	r5, ip, sl
 802ae34:	950e      	str	r5, [sp, #56]	@ 0x38
 802ae36:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802ae38:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802ae3c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802ae3e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802ae42:	fb0e f707 	mul.w	r7, lr, r7
 802ae46:	fb01 770c 	mla	r7, r1, ip, r7
 802ae4a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802ae4e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802ae50:	fb00 770c 	mla	r7, r0, ip, r7
 802ae54:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802ae58:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802ae5a:	fb09 770c 	mla	r7, r9, ip, r7
 802ae5e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802ae62:	fb0e fe0c 	mul.w	lr, lr, ip
 802ae66:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802ae6a:	fb01 e303 	mla	r3, r1, r3, lr
 802ae6e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802ae70:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802ae74:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802ae76:	fb00 330a 	mla	r3, r0, sl, r3
 802ae7a:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 802ae7e:	fb09 3c0c 	mla	ip, r9, ip, r3
 802ae82:	0a3f      	lsrs	r7, r7, #8
 802ae84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ae88:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802ae8c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802ae90:	ea47 070c 	orr.w	r7, r7, ip
 802ae94:	2aff      	cmp	r2, #255	@ 0xff
 802ae96:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802ae9a:	d11e      	bne.n	802aeda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802ae9c:	097a      	lsrs	r2, r7, #5
 802ae9e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 802aea2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802aea6:	f023 0307 	bic.w	r3, r3, #7
 802aeaa:	4313      	orrs	r3, r2
 802aeac:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802aeb0:	431f      	orrs	r7, r3
 802aeb2:	f8a8 7000 	strh.w	r7, [r8]
 802aeb6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802aeb8:	441c      	add	r4, r3
 802aeba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802aebc:	f108 0802 	add.w	r8, r8, #2
 802aec0:	441e      	add	r6, r3
 802aec2:	f10b 3bff 	add.w	fp, fp, #4294967295
 802aec6:	e644      	b.n	802ab52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802aec8:	2800      	cmp	r0, #0
 802aeca:	f43f af0b 	beq.w	802ace4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802aece:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802aed2:	9109      	str	r1, [sp, #36]	@ 0x24
 802aed4:	0e09      	lsrs	r1, r1, #24
 802aed6:	9111      	str	r1, [sp, #68]	@ 0x44
 802aed8:	e704      	b.n	802ace4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802aeda:	f8b8 1000 	ldrh.w	r1, [r8]
 802aede:	43d2      	mvns	r2, r2
 802aee0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802aee4:	fa5f fe82 	uxtb.w	lr, r2
 802aee8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802aeec:	fb0c fc0e 	mul.w	ip, ip, lr
 802aef0:	10c8      	asrs	r0, r1, #3
 802aef2:	00ca      	lsls	r2, r1, #3
 802aef4:	f10c 0101 	add.w	r1, ip, #1
 802aef8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802aefc:	0c39      	lsrs	r1, r7, #16
 802aefe:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802af02:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802af06:	4911      	ldr	r1, [pc, #68]	@ (802af4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802af08:	fb00 f00e 	mul.w	r0, r0, lr
 802af0c:	fa5f fc8c 	uxtb.w	ip, ip
 802af10:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802af14:	b2d2      	uxtb	r2, r2
 802af16:	1c41      	adds	r1, r0, #1
 802af18:	fb02 f20e 	mul.w	r2, r2, lr
 802af1c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802af20:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802af24:	1c51      	adds	r1, r2, #1
 802af26:	00c0      	lsls	r0, r0, #3
 802af28:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802af2c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802af30:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802af34:	ea4c 0c00 	orr.w	ip, ip, r0
 802af38:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802af3c:	ea47 0c0c 	orr.w	ip, r7, ip
 802af40:	f8a8 c000 	strh.w	ip, [r8]
 802af44:	e7b7      	b.n	802aeb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802af46:	b01b      	add	sp, #108	@ 0x6c
 802af48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802af4c:	fffff800 	.word	0xfffff800

0802af50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802af50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802af54:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802af58:	2d00      	cmp	r5, #0
 802af5a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802af5e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802af62:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802af66:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802af6a:	fb05 0e03 	mla	lr, r5, r3, r0
 802af6e:	f2c0 808c 	blt.w	802b08a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802af72:	45a9      	cmp	r9, r5
 802af74:	f340 8089 	ble.w	802b08a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802af78:	2800      	cmp	r0, #0
 802af7a:	f2c0 8084 	blt.w	802b086 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802af7e:	4580      	cmp	r8, r0
 802af80:	f340 8081 	ble.w	802b086 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802af84:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802af88:	f01e 0f01 	tst.w	lr, #1
 802af8c:	5d16      	ldrb	r6, [r2, r4]
 802af8e:	bf0c      	ite	eq
 802af90:	f006 060f 	andeq.w	r6, r6, #15
 802af94:	1136      	asrne	r6, r6, #4
 802af96:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802af9a:	b2f6      	uxtb	r6, r6
 802af9c:	1c44      	adds	r4, r0, #1
 802af9e:	d477      	bmi.n	802b090 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802afa0:	45a0      	cmp	r8, r4
 802afa2:	dd75      	ble.n	802b090 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802afa4:	2f00      	cmp	r7, #0
 802afa6:	d075      	beq.n	802b094 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802afa8:	f10e 0a01 	add.w	sl, lr, #1
 802afac:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802afb0:	f01a 0f01 	tst.w	sl, #1
 802afb4:	5d14      	ldrb	r4, [r2, r4]
 802afb6:	bf0c      	ite	eq
 802afb8:	f004 040f 	andeq.w	r4, r4, #15
 802afbc:	1124      	asrne	r4, r4, #4
 802afbe:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802afc2:	b2e4      	uxtb	r4, r4
 802afc4:	3501      	adds	r5, #1
 802afc6:	d469      	bmi.n	802b09c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802afc8:	45a9      	cmp	r9, r5
 802afca:	dd67      	ble.n	802b09c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802afcc:	f1bc 0f00 	cmp.w	ip, #0
 802afd0:	d067      	beq.n	802b0a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802afd2:	2800      	cmp	r0, #0
 802afd4:	db60      	blt.n	802b098 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802afd6:	4580      	cmp	r8, r0
 802afd8:	dd5e      	ble.n	802b098 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802afda:	eb03 090e 	add.w	r9, r3, lr
 802afde:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802afe2:	f019 0f01 	tst.w	r9, #1
 802afe6:	5d55      	ldrb	r5, [r2, r5]
 802afe8:	bf0c      	ite	eq
 802afea:	f005 050f 	andeq.w	r5, r5, #15
 802afee:	112d      	asrne	r5, r5, #4
 802aff0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802aff4:	b2ed      	uxtb	r5, r5
 802aff6:	3001      	adds	r0, #1
 802aff8:	d456      	bmi.n	802b0a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802affa:	4580      	cmp	r8, r0
 802affc:	dd54      	ble.n	802b0a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802affe:	2f00      	cmp	r7, #0
 802b000:	d054      	beq.n	802b0ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802b002:	3301      	adds	r3, #1
 802b004:	449e      	add	lr, r3
 802b006:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802b00a:	f01e 0f01 	tst.w	lr, #1
 802b00e:	5cd0      	ldrb	r0, [r2, r3]
 802b010:	bf0c      	ite	eq
 802b012:	f000 000f 	andeq.w	r0, r0, #15
 802b016:	1100      	asrne	r0, r0, #4
 802b018:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b01c:	b2c3      	uxtb	r3, r0
 802b01e:	b2ba      	uxth	r2, r7
 802b020:	fa1f fc8c 	uxth.w	ip, ip
 802b024:	fb02 f00c 	mul.w	r0, r2, ip
 802b028:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802b02c:	0112      	lsls	r2, r2, #4
 802b02e:	fa1f fc8c 	uxth.w	ip, ip
 802b032:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802b036:	1a12      	subs	r2, r2, r0
 802b038:	eba7 070c 	sub.w	r7, r7, ip
 802b03c:	b292      	uxth	r2, r2
 802b03e:	b2bf      	uxth	r7, r7
 802b040:	4362      	muls	r2, r4
 802b042:	fb06 2207 	mla	r2, r6, r7, r2
 802b046:	fb0c 2505 	mla	r5, ip, r5, r2
 802b04a:	fb00 5303 	mla	r3, r0, r3, r5
 802b04e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b052:	b1b3      	cbz	r3, 802b082 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802b054:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802b058:	435a      	muls	r2, r3
 802b05a:	1c53      	adds	r3, r2, #1
 802b05c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b060:	4a2d      	ldr	r2, [pc, #180]	@ (802b118 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802b062:	121b      	asrs	r3, r3, #8
 802b064:	6812      	ldr	r2, [r2, #0]
 802b066:	2bff      	cmp	r3, #255	@ 0xff
 802b068:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802b06c:	d120      	bne.n	802b0b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802b06e:	4b2b      	ldr	r3, [pc, #172]	@ (802b11c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802b070:	0950      	lsrs	r0, r2, #5
 802b072:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b076:	4033      	ands	r3, r6
 802b078:	4318      	orrs	r0, r3
 802b07a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802b07e:	4302      	orrs	r2, r0
 802b080:	800a      	strh	r2, [r1, #0]
 802b082:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b086:	2600      	movs	r6, #0
 802b088:	e788      	b.n	802af9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802b08a:	2400      	movs	r4, #0
 802b08c:	4626      	mov	r6, r4
 802b08e:	e799      	b.n	802afc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b090:	2400      	movs	r4, #0
 802b092:	e797      	b.n	802afc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b094:	463c      	mov	r4, r7
 802b096:	e795      	b.n	802afc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b098:	2500      	movs	r5, #0
 802b09a:	e7ac      	b.n	802aff6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802b09c:	2300      	movs	r3, #0
 802b09e:	461d      	mov	r5, r3
 802b0a0:	e7bd      	b.n	802b01e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b0a2:	4663      	mov	r3, ip
 802b0a4:	4665      	mov	r5, ip
 802b0a6:	e7ba      	b.n	802b01e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b0a8:	2300      	movs	r3, #0
 802b0aa:	e7b8      	b.n	802b01e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b0ac:	463b      	mov	r3, r7
 802b0ae:	e7b6      	b.n	802b01e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b0b0:	880d      	ldrh	r5, [r1, #0]
 802b0b2:	b29f      	uxth	r7, r3
 802b0b4:	122c      	asrs	r4, r5, #8
 802b0b6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802b0ba:	43db      	mvns	r3, r3
 802b0bc:	b2db      	uxtb	r3, r3
 802b0be:	fb10 f007 	smulbb	r0, r0, r7
 802b0c2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802b0c6:	fb04 0403 	mla	r4, r4, r3, r0
 802b0ca:	b2f6      	uxtb	r6, r6
 802b0cc:	10e8      	asrs	r0, r5, #3
 802b0ce:	b2d2      	uxtb	r2, r2
 802b0d0:	00ed      	lsls	r5, r5, #3
 802b0d2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b0d6:	fb12 f207 	smulbb	r2, r2, r7
 802b0da:	fb16 f607 	smulbb	r6, r6, r7
 802b0de:	b2ed      	uxtb	r5, r5
 802b0e0:	b2a4      	uxth	r4, r4
 802b0e2:	fb00 6603 	mla	r6, r0, r3, r6
 802b0e6:	fb05 2303 	mla	r3, r5, r3, r2
 802b0ea:	b29a      	uxth	r2, r3
 802b0ec:	1c63      	adds	r3, r4, #1
 802b0ee:	b2b0      	uxth	r0, r6
 802b0f0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802b0f4:	1c53      	adds	r3, r2, #1
 802b0f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b0fa:	1c42      	adds	r2, r0, #1
 802b0fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802b100:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802b104:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802b108:	0940      	lsrs	r0, r0, #5
 802b10a:	4323      	orrs	r3, r4
 802b10c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b110:	4303      	orrs	r3, r0
 802b112:	800b      	strh	r3, [r1, #0]
 802b114:	e7b5      	b.n	802b082 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802b116:	bf00      	nop
 802b118:	20013894 	.word	0x20013894
 802b11c:	00fff800 	.word	0x00fff800

0802b120 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b124:	b097      	sub	sp, #92	@ 0x5c
 802b126:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802b12a:	9214      	str	r2, [sp, #80]	@ 0x50
 802b12c:	9309      	str	r3, [sp, #36]	@ 0x24
 802b12e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 802b130:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802b134:	910d      	str	r1, [sp, #52]	@ 0x34
 802b136:	930f      	str	r3, [sp, #60]	@ 0x3c
 802b138:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 802b13c:	9015      	str	r0, [sp, #84]	@ 0x54
 802b13e:	6850      	ldr	r0, [r2, #4]
 802b140:	6812      	ldr	r2, [r2, #0]
 802b142:	fb00 1303 	mla	r3, r0, r3, r1
 802b146:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802b14a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b14c:	689b      	ldr	r3, [r3, #8]
 802b14e:	3301      	adds	r3, #1
 802b150:	f023 0301 	bic.w	r3, r3, #1
 802b154:	930a      	str	r3, [sp, #40]	@ 0x28
 802b156:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b158:	681f      	ldr	r7, [r3, #0]
 802b15a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802b15c:	2b00      	cmp	r3, #0
 802b15e:	dc03      	bgt.n	802b168 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802b160:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802b162:	2b00      	cmp	r3, #0
 802b164:	f340 8287 	ble.w	802b676 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802b168:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b16a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802b16e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802b172:	1e48      	subs	r0, r1, #1
 802b174:	f102 3cff 	add.w	ip, r2, #4294967295
 802b178:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b17a:	2b00      	cmp	r3, #0
 802b17c:	f340 80c4 	ble.w	802b308 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802b180:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802b184:	ea4f 4326 	mov.w	r3, r6, asr #16
 802b188:	d406      	bmi.n	802b198 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b18a:	4586      	cmp	lr, r0
 802b18c:	da04      	bge.n	802b198 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b18e:	2b00      	cmp	r3, #0
 802b190:	db02      	blt.n	802b198 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b192:	4563      	cmp	r3, ip
 802b194:	f2c0 80b9 	blt.w	802b30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802b198:	f11e 0e01 	adds.w	lr, lr, #1
 802b19c:	f100 80aa 	bmi.w	802b2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b1a0:	4571      	cmp	r1, lr
 802b1a2:	f2c0 80a7 	blt.w	802b2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b1a6:	3301      	adds	r3, #1
 802b1a8:	f100 80a4 	bmi.w	802b2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b1ac:	429a      	cmp	r2, r3
 802b1ae:	f2c0 80a1 	blt.w	802b2f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b1b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b1b4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802b1b8:	930e      	str	r3, [sp, #56]	@ 0x38
 802b1ba:	46c8      	mov	r8, r9
 802b1bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802b1be:	2b00      	cmp	r3, #0
 802b1c0:	f340 80c3 	ble.w	802b34a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802b1c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b1c6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802b1ca:	1423      	asrs	r3, r4, #16
 802b1cc:	ea4f 4026 	mov.w	r0, r6, asr #16
 802b1d0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802b1d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802b1d8:	f100 814d 	bmi.w	802b476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b1dc:	f10c 3bff 	add.w	fp, ip, #4294967295
 802b1e0:	455b      	cmp	r3, fp
 802b1e2:	f280 8148 	bge.w	802b476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b1e6:	2800      	cmp	r0, #0
 802b1e8:	f2c0 8145 	blt.w	802b476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b1ec:	f10e 3bff 	add.w	fp, lr, #4294967295
 802b1f0:	4558      	cmp	r0, fp
 802b1f2:	f280 8140 	bge.w	802b476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b1f6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802b1f8:	fb00 3305 	mla	r3, r0, r5, r3
 802b1fc:	0858      	lsrs	r0, r3, #1
 802b1fe:	07dd      	lsls	r5, r3, #31
 802b200:	f817 c000 	ldrb.w	ip, [r7, r0]
 802b204:	bf54      	ite	pl
 802b206:	f00c 0c0f 	andpl.w	ip, ip, #15
 802b20a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802b20e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b212:	fa5f fc8c 	uxtb.w	ip, ip
 802b216:	2a00      	cmp	r2, #0
 802b218:	f000 80db 	beq.w	802b3d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802b21c:	1c58      	adds	r0, r3, #1
 802b21e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802b222:	07c0      	lsls	r0, r0, #31
 802b224:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802b228:	bf54      	ite	pl
 802b22a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802b22e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802b232:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802b236:	fa5f f08e 	uxtb.w	r0, lr
 802b23a:	9010      	str	r0, [sp, #64]	@ 0x40
 802b23c:	b1c9      	cbz	r1, 802b272 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802b23e:	4453      	add	r3, sl
 802b240:	0858      	lsrs	r0, r3, #1
 802b242:	07dd      	lsls	r5, r3, #31
 802b244:	5c38      	ldrb	r0, [r7, r0]
 802b246:	bf54      	ite	pl
 802b248:	f000 000f 	andpl.w	r0, r0, #15
 802b24c:	1100      	asrmi	r0, r0, #4
 802b24e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b252:	3301      	adds	r3, #1
 802b254:	b2c0      	uxtb	r0, r0
 802b256:	900b      	str	r0, [sp, #44]	@ 0x2c
 802b258:	0858      	lsrs	r0, r3, #1
 802b25a:	07dd      	lsls	r5, r3, #31
 802b25c:	f817 e000 	ldrb.w	lr, [r7, r0]
 802b260:	bf54      	ite	pl
 802b262:	f00e 030f 	andpl.w	r3, lr, #15
 802b266:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802b26a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802b26e:	b2db      	uxtb	r3, r3
 802b270:	9311      	str	r3, [sp, #68]	@ 0x44
 802b272:	b292      	uxth	r2, r2
 802b274:	b289      	uxth	r1, r1
 802b276:	fb02 f301 	mul.w	r3, r2, r1
 802b27a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802b27e:	0112      	lsls	r2, r2, #4
 802b280:	b289      	uxth	r1, r1
 802b282:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802b286:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b288:	1ad2      	subs	r2, r2, r3
 802b28a:	1a40      	subs	r0, r0, r1
 802b28c:	b292      	uxth	r2, r2
 802b28e:	436a      	muls	r2, r5
 802b290:	b280      	uxth	r0, r0
 802b292:	fb0c 2c00 	mla	ip, ip, r0, r2
 802b296:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b298:	fb01 c102 	mla	r1, r1, r2, ip
 802b29c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802b29e:	fb03 1302 	mla	r3, r3, r2, r1
 802b2a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b2a6:	b1db      	cbz	r3, 802b2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b2a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802b2aa:	4353      	muls	r3, r2
 802b2ac:	1c5a      	adds	r2, r3, #1
 802b2ae:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802b2b2:	4ac6      	ldr	r2, [pc, #792]	@ (802b5cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802b2b4:	121b      	asrs	r3, r3, #8
 802b2b6:	6812      	ldr	r2, [r2, #0]
 802b2b8:	2bff      	cmp	r3, #255	@ 0xff
 802b2ba:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802b2be:	f040 8099 	bne.w	802b3f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802b2c2:	0953      	lsrs	r3, r2, #5
 802b2c4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802b2c8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802b2cc:	f02c 0c07 	bic.w	ip, ip, #7
 802b2d0:	ea43 0c0c 	orr.w	ip, r3, ip
 802b2d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802b2d8:	ea4c 0202 	orr.w	r2, ip, r2
 802b2dc:	f8a8 2000 	strh.w	r2, [r8]
 802b2e0:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802b2e2:	441c      	add	r4, r3
 802b2e4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b2e6:	441e      	add	r6, r3
 802b2e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802b2ea:	3b01      	subs	r3, #1
 802b2ec:	f108 0802 	add.w	r8, r8, #2
 802b2f0:	930e      	str	r3, [sp, #56]	@ 0x38
 802b2f2:	e763      	b.n	802b1bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802b2f4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802b2f6:	441c      	add	r4, r3
 802b2f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b2fa:	441e      	add	r6, r3
 802b2fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b2fe:	3b01      	subs	r3, #1
 802b300:	9309      	str	r3, [sp, #36]	@ 0x24
 802b302:	f109 0902 	add.w	r9, r9, #2
 802b306:	e737      	b.n	802b178 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802b308:	d024      	beq.n	802b354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802b30a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b30c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802b30e:	3b01      	subs	r3, #1
 802b310:	fb00 4003 	mla	r0, r0, r3, r4
 802b314:	1400      	asrs	r0, r0, #16
 802b316:	f53f af4c 	bmi.w	802b1b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b31a:	3901      	subs	r1, #1
 802b31c:	4288      	cmp	r0, r1
 802b31e:	f6bf af48 	bge.w	802b1b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b322:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802b324:	fb01 6303 	mla	r3, r1, r3, r6
 802b328:	141b      	asrs	r3, r3, #16
 802b32a:	f53f af42 	bmi.w	802b1b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b32e:	3a01      	subs	r2, #1
 802b330:	4293      	cmp	r3, r2
 802b332:	f6bf af3e 	bge.w	802b1b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b336:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802b33a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802b33e:	930e      	str	r3, [sp, #56]	@ 0x38
 802b340:	46c8      	mov	r8, r9
 802b342:	f1bb 0f00 	cmp.w	fp, #0
 802b346:	f300 80b7 	bgt.w	802b4b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802b34a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b34c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802b350:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802b354:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802b356:	2b00      	cmp	r3, #0
 802b358:	f340 818d 	ble.w	802b676 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802b35c:	ee30 0a04 	vadd.f32	s0, s0, s8
 802b360:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802b364:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802b368:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802b36a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802b36e:	ee31 1a05 	vadd.f32	s2, s2, s10
 802b372:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802b376:	eef0 6a62 	vmov.f32	s13, s5
 802b37a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802b37e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b382:	ee77 2a62 	vsub.f32	s5, s14, s5
 802b386:	ee16 4a90 	vmov	r4, s13
 802b38a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802b38e:	eef0 6a43 	vmov.f32	s13, s6
 802b392:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802b396:	ee12 2a90 	vmov	r2, s5
 802b39a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802b39e:	fb92 f3f3 	sdiv	r3, r2, r3
 802b3a2:	ee13 2a10 	vmov	r2, s6
 802b3a6:	9323      	str	r3, [sp, #140]	@ 0x8c
 802b3a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802b3aa:	fb92 f3f3 	sdiv	r3, r2, r3
 802b3ae:	9324      	str	r3, [sp, #144]	@ 0x90
 802b3b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802b3b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802b3b4:	3b01      	subs	r3, #1
 802b3b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b3ba:	930d      	str	r3, [sp, #52]	@ 0x34
 802b3bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802b3be:	bf08      	it	eq
 802b3c0:	4613      	moveq	r3, r2
 802b3c2:	ee16 6a90 	vmov	r6, s13
 802b3c6:	9309      	str	r3, [sp, #36]	@ 0x24
 802b3c8:	eeb0 3a67 	vmov.f32	s6, s15
 802b3cc:	eef0 2a47 	vmov.f32	s5, s14
 802b3d0:	e6c3      	b.n	802b15a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802b3d2:	2900      	cmp	r1, #0
 802b3d4:	f43f af4d 	beq.w	802b272 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802b3d8:	eb0a 0003 	add.w	r0, sl, r3
 802b3dc:	0843      	lsrs	r3, r0, #1
 802b3de:	07c0      	lsls	r0, r0, #31
 802b3e0:	5cfb      	ldrb	r3, [r7, r3]
 802b3e2:	bf54      	ite	pl
 802b3e4:	f003 030f 	andpl.w	r3, r3, #15
 802b3e8:	111b      	asrmi	r3, r3, #4
 802b3ea:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802b3ee:	b2db      	uxtb	r3, r3
 802b3f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 802b3f2:	e73e      	b.n	802b272 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802b3f4:	f8b8 e000 	ldrh.w	lr, [r8]
 802b3f8:	fa1f fb83 	uxth.w	fp, r3
 802b3fc:	ea4f 202e 	mov.w	r0, lr, asr #8
 802b400:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802b404:	43db      	mvns	r3, r3
 802b406:	b2db      	uxtb	r3, r3
 802b408:	fb11 f10b 	smulbb	r1, r1, fp
 802b40c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802b410:	fb00 1003 	mla	r0, r0, r3, r1
 802b414:	fa5f fc8c 	uxtb.w	ip, ip
 802b418:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802b41c:	b2d2      	uxtb	r2, r2
 802b41e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802b422:	b280      	uxth	r0, r0
 802b424:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802b428:	fb1c fc0b 	smulbb	ip, ip, fp
 802b42c:	fa5f fe8e 	uxtb.w	lr, lr
 802b430:	fb12 fb0b 	smulbb	fp, r2, fp
 802b434:	fb01 cc03 	mla	ip, r1, r3, ip
 802b438:	fb0e bb03 	mla	fp, lr, r3, fp
 802b43c:	1c43      	adds	r3, r0, #1
 802b43e:	fa1f fc8c 	uxth.w	ip, ip
 802b442:	fa1f fb8b 	uxth.w	fp, fp
 802b446:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802b44a:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 802b44e:	f10c 0101 	add.w	r1, ip, #1
 802b452:	f10b 0001 	add.w	r0, fp, #1
 802b456:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802b45a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802b45e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802b462:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802b466:	4318      	orrs	r0, r3
 802b468:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802b46c:	ea40 000c 	orr.w	r0, r0, ip
 802b470:	f8a8 0000 	strh.w	r0, [r8]
 802b474:	e734      	b.n	802b2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b476:	f113 0b01 	adds.w	fp, r3, #1
 802b47a:	f53f af31 	bmi.w	802b2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b47e:	45dc      	cmp	ip, fp
 802b480:	f6ff af2e 	blt.w	802b2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b484:	f110 0b01 	adds.w	fp, r0, #1
 802b488:	f53f af2a 	bmi.w	802b2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b48c:	45de      	cmp	lr, fp
 802b48e:	f6ff af27 	blt.w	802b2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b492:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802b494:	9302      	str	r3, [sp, #8]
 802b496:	fa0f f38e 	sxth.w	r3, lr
 802b49a:	9301      	str	r3, [sp, #4]
 802b49c:	fa0f f38c 	sxth.w	r3, ip
 802b4a0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802b4a4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802b4a8:	9300      	str	r3, [sp, #0]
 802b4aa:	463a      	mov	r2, r7
 802b4ac:	4653      	mov	r3, sl
 802b4ae:	4641      	mov	r1, r8
 802b4b0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802b4b2:	f7ff fd4d 	bl	802af50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802b4b6:	e713      	b.n	802b2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b4b8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802b4ba:	1422      	asrs	r2, r4, #16
 802b4bc:	1433      	asrs	r3, r6, #16
 802b4be:	fb05 2303 	mla	r3, r5, r3, r2
 802b4c2:	085a      	lsrs	r2, r3, #1
 802b4c4:	07dd      	lsls	r5, r3, #31
 802b4c6:	5cba      	ldrb	r2, [r7, r2]
 802b4c8:	bf54      	ite	pl
 802b4ca:	f002 020f 	andpl.w	r2, r2, #15
 802b4ce:	1112      	asrmi	r2, r2, #4
 802b4d0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802b4d4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802b4d8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802b4dc:	b2d2      	uxtb	r2, r2
 802b4de:	2900      	cmp	r1, #0
 802b4e0:	d076      	beq.n	802b5d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802b4e2:	f103 0e01 	add.w	lr, r3, #1
 802b4e6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802b4ea:	f01e 0f01 	tst.w	lr, #1
 802b4ee:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802b4f2:	bf0c      	ite	eq
 802b4f4:	f00c 0c0f 	andeq.w	ip, ip, #15
 802b4f8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802b4fc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b500:	fa5f f58c 	uxtb.w	r5, ip
 802b504:	9512      	str	r5, [sp, #72]	@ 0x48
 802b506:	b300      	cbz	r0, 802b54a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802b508:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b50a:	442b      	add	r3, r5
 802b50c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802b510:	07dd      	lsls	r5, r3, #31
 802b512:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802b516:	bf54      	ite	pl
 802b518:	f00c 0c0f 	andpl.w	ip, ip, #15
 802b51c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802b520:	3301      	adds	r3, #1
 802b522:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b526:	fa5f f58c 	uxtb.w	r5, ip
 802b52a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802b52e:	950c      	str	r5, [sp, #48]	@ 0x30
 802b530:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802b534:	07dd      	lsls	r5, r3, #31
 802b536:	bf54      	ite	pl
 802b538:	f00c 0c0f 	andpl.w	ip, ip, #15
 802b53c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802b540:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b544:	fa5f f38c 	uxtb.w	r3, ip
 802b548:	9313      	str	r3, [sp, #76]	@ 0x4c
 802b54a:	b289      	uxth	r1, r1
 802b54c:	b280      	uxth	r0, r0
 802b54e:	fb01 f300 	mul.w	r3, r1, r0
 802b552:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802b556:	0109      	lsls	r1, r1, #4
 802b558:	b280      	uxth	r0, r0
 802b55a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 802b55e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b560:	1ac9      	subs	r1, r1, r3
 802b562:	ebac 0c00 	sub.w	ip, ip, r0
 802b566:	b289      	uxth	r1, r1
 802b568:	4369      	muls	r1, r5
 802b56a:	fa1f fc8c 	uxth.w	ip, ip
 802b56e:	fb02 120c 	mla	r2, r2, ip, r1
 802b572:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b574:	fb00 2001 	mla	r0, r0, r1, r2
 802b578:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802b57a:	fb03 0302 	mla	r3, r3, r2, r0
 802b57e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b582:	b1d3      	cbz	r3, 802b5ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802b584:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802b586:	4353      	muls	r3, r2
 802b588:	1c5a      	adds	r2, r3, #1
 802b58a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802b58e:	4a0f      	ldr	r2, [pc, #60]	@ (802b5cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802b590:	121b      	asrs	r3, r3, #8
 802b592:	6812      	ldr	r2, [r2, #0]
 802b594:	2bff      	cmp	r3, #255	@ 0xff
 802b596:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802b59a:	d12d      	bne.n	802b5f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802b59c:	0953      	lsrs	r3, r2, #5
 802b59e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802b5a2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802b5a6:	f02c 0c07 	bic.w	ip, ip, #7
 802b5aa:	ea43 0c0c 	orr.w	ip, r3, ip
 802b5ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802b5b2:	ea4c 0202 	orr.w	r2, ip, r2
 802b5b6:	f8a8 2000 	strh.w	r2, [r8]
 802b5ba:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802b5bc:	441c      	add	r4, r3
 802b5be:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b5c0:	f108 0802 	add.w	r8, r8, #2
 802b5c4:	441e      	add	r6, r3
 802b5c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 802b5ca:	e6ba      	b.n	802b342 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802b5cc:	20013894 	.word	0x20013894
 802b5d0:	2800      	cmp	r0, #0
 802b5d2:	d0ba      	beq.n	802b54a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802b5d4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b5d6:	442b      	add	r3, r5
 802b5d8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802b5dc:	07db      	lsls	r3, r3, #31
 802b5de:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802b5e2:	bf54      	ite	pl
 802b5e4:	f00c 0c0f 	andpl.w	ip, ip, #15
 802b5e8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802b5ec:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b5f0:	fa5f f38c 	uxtb.w	r3, ip
 802b5f4:	930c      	str	r3, [sp, #48]	@ 0x30
 802b5f6:	e7a8      	b.n	802b54a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802b5f8:	f8b8 e000 	ldrh.w	lr, [r8]
 802b5fc:	fa1f fa83 	uxth.w	sl, r3
 802b600:	ea4f 202e 	mov.w	r0, lr, asr #8
 802b604:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802b608:	43db      	mvns	r3, r3
 802b60a:	b2db      	uxtb	r3, r3
 802b60c:	fb11 f10a 	smulbb	r1, r1, sl
 802b610:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802b614:	fb00 1003 	mla	r0, r0, r3, r1
 802b618:	b2d2      	uxtb	r2, r2
 802b61a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802b61e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802b622:	fa5f fe8e 	uxtb.w	lr, lr
 802b626:	fb12 f20a 	smulbb	r2, r2, sl
 802b62a:	fb0e 2203 	mla	r2, lr, r3, r2
 802b62e:	fa5f fc8c 	uxtb.w	ip, ip
 802b632:	b280      	uxth	r0, r0
 802b634:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802b638:	b292      	uxth	r2, r2
 802b63a:	fb1c fc0a 	smulbb	ip, ip, sl
 802b63e:	fb01 cc03 	mla	ip, r1, r3, ip
 802b642:	1c43      	adds	r3, r0, #1
 802b644:	1c51      	adds	r1, r2, #1
 802b646:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802b64a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802b64e:	fa1f fc8c 	uxth.w	ip, ip
 802b652:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802b656:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802b65a:	4308      	orrs	r0, r1
 802b65c:	f10c 0101 	add.w	r1, ip, #1
 802b660:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802b664:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802b668:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802b66c:	ea40 000c 	orr.w	r0, r0, ip
 802b670:	f8a8 0000 	strh.w	r0, [r8]
 802b674:	e7a1      	b.n	802b5ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802b676:	b017      	add	sp, #92	@ 0x5c
 802b678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802b67c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802b67c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b680:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802b684:	2d00      	cmp	r5, #0
 802b686:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802b68a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802b68e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802b692:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802b696:	fb05 0e03 	mla	lr, r5, r3, r0
 802b69a:	f2c0 80b0 	blt.w	802b7fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802b69e:	45a9      	cmp	r9, r5
 802b6a0:	f340 80ad 	ble.w	802b7fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802b6a4:	2800      	cmp	r0, #0
 802b6a6:	f2c0 80a8 	blt.w	802b7fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802b6aa:	4580      	cmp	r8, r0
 802b6ac:	f340 80a5 	ble.w	802b7fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802b6b0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802b6b4:	f01e 0f01 	tst.w	lr, #1
 802b6b8:	5d16      	ldrb	r6, [r2, r4]
 802b6ba:	bf0c      	ite	eq
 802b6bc:	f006 060f 	andeq.w	r6, r6, #15
 802b6c0:	1136      	asrne	r6, r6, #4
 802b6c2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802b6c6:	b2f6      	uxtb	r6, r6
 802b6c8:	1c44      	adds	r4, r0, #1
 802b6ca:	f100 809b 	bmi.w	802b804 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802b6ce:	45a0      	cmp	r8, r4
 802b6d0:	f340 8098 	ble.w	802b804 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802b6d4:	2f00      	cmp	r7, #0
 802b6d6:	f000 8097 	beq.w	802b808 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802b6da:	f10e 0a01 	add.w	sl, lr, #1
 802b6de:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802b6e2:	f01a 0f01 	tst.w	sl, #1
 802b6e6:	5d14      	ldrb	r4, [r2, r4]
 802b6e8:	bf0c      	ite	eq
 802b6ea:	f004 040f 	andeq.w	r4, r4, #15
 802b6ee:	1124      	asrne	r4, r4, #4
 802b6f0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802b6f4:	b2e4      	uxtb	r4, r4
 802b6f6:	3501      	adds	r5, #1
 802b6f8:	f100 808a 	bmi.w	802b810 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802b6fc:	45a9      	cmp	r9, r5
 802b6fe:	f340 8087 	ble.w	802b810 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802b702:	f1bc 0f00 	cmp.w	ip, #0
 802b706:	f000 8086 	beq.w	802b816 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802b70a:	2800      	cmp	r0, #0
 802b70c:	db7e      	blt.n	802b80c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802b70e:	4580      	cmp	r8, r0
 802b710:	dd7c      	ble.n	802b80c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802b712:	eb03 090e 	add.w	r9, r3, lr
 802b716:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802b71a:	f019 0f01 	tst.w	r9, #1
 802b71e:	5d55      	ldrb	r5, [r2, r5]
 802b720:	bf0c      	ite	eq
 802b722:	f005 050f 	andeq.w	r5, r5, #15
 802b726:	112d      	asrne	r5, r5, #4
 802b728:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802b72c:	b2ed      	uxtb	r5, r5
 802b72e:	3001      	adds	r0, #1
 802b730:	d474      	bmi.n	802b81c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802b732:	4580      	cmp	r8, r0
 802b734:	dd72      	ble.n	802b81c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802b736:	2f00      	cmp	r7, #0
 802b738:	d072      	beq.n	802b820 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802b73a:	3301      	adds	r3, #1
 802b73c:	449e      	add	lr, r3
 802b73e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802b742:	f01e 0f01 	tst.w	lr, #1
 802b746:	5cd0      	ldrb	r0, [r2, r3]
 802b748:	bf0c      	ite	eq
 802b74a:	f000 000f 	andeq.w	r0, r0, #15
 802b74e:	1100      	asrne	r0, r0, #4
 802b750:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b754:	b2c3      	uxtb	r3, r0
 802b756:	b2ba      	uxth	r2, r7
 802b758:	fa1f fc8c 	uxth.w	ip, ip
 802b75c:	fb02 f00c 	mul.w	r0, r2, ip
 802b760:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802b764:	0112      	lsls	r2, r2, #4
 802b766:	fa1f fc8c 	uxth.w	ip, ip
 802b76a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802b76e:	1a12      	subs	r2, r2, r0
 802b770:	eba7 070c 	sub.w	r7, r7, ip
 802b774:	b292      	uxth	r2, r2
 802b776:	b2bf      	uxth	r7, r7
 802b778:	4362      	muls	r2, r4
 802b77a:	fb06 2207 	mla	r2, r6, r7, r2
 802b77e:	fb0c 2505 	mla	r5, ip, r5, r2
 802b782:	fb00 5303 	mla	r3, r0, r3, r5
 802b786:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b78a:	b3a3      	cbz	r3, 802b7f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802b78c:	4a25      	ldr	r2, [pc, #148]	@ (802b824 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802b78e:	880e      	ldrh	r6, [r1, #0]
 802b790:	6815      	ldr	r5, [r2, #0]
 802b792:	1234      	asrs	r4, r6, #8
 802b794:	b29a      	uxth	r2, r3
 802b796:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802b79a:	43db      	mvns	r3, r3
 802b79c:	b2db      	uxtb	r3, r3
 802b79e:	fb10 f002 	smulbb	r0, r0, r2
 802b7a2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802b7a6:	fb04 0403 	mla	r4, r4, r3, r0
 802b7aa:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802b7ae:	10f0      	asrs	r0, r6, #3
 802b7b0:	b2ed      	uxtb	r5, r5
 802b7b2:	00f6      	lsls	r6, r6, #3
 802b7b4:	fb17 f702 	smulbb	r7, r7, r2
 802b7b8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b7bc:	fb15 f202 	smulbb	r2, r5, r2
 802b7c0:	b2f6      	uxtb	r6, r6
 802b7c2:	b2a4      	uxth	r4, r4
 802b7c4:	fb00 7003 	mla	r0, r0, r3, r7
 802b7c8:	fb06 2303 	mla	r3, r6, r3, r2
 802b7cc:	b29a      	uxth	r2, r3
 802b7ce:	1c63      	adds	r3, r4, #1
 802b7d0:	b280      	uxth	r0, r0
 802b7d2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802b7d6:	1c53      	adds	r3, r2, #1
 802b7d8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b7dc:	1c42      	adds	r2, r0, #1
 802b7de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802b7e2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802b7e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802b7ea:	0940      	lsrs	r0, r0, #5
 802b7ec:	4323      	orrs	r3, r4
 802b7ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b7f2:	4303      	orrs	r3, r0
 802b7f4:	800b      	strh	r3, [r1, #0]
 802b7f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b7fa:	2600      	movs	r6, #0
 802b7fc:	e764      	b.n	802b6c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802b7fe:	2400      	movs	r4, #0
 802b800:	4626      	mov	r6, r4
 802b802:	e778      	b.n	802b6f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802b804:	2400      	movs	r4, #0
 802b806:	e776      	b.n	802b6f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802b808:	463c      	mov	r4, r7
 802b80a:	e774      	b.n	802b6f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802b80c:	2500      	movs	r5, #0
 802b80e:	e78e      	b.n	802b72e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802b810:	2300      	movs	r3, #0
 802b812:	461d      	mov	r5, r3
 802b814:	e79f      	b.n	802b756 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802b816:	4663      	mov	r3, ip
 802b818:	4665      	mov	r5, ip
 802b81a:	e79c      	b.n	802b756 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802b81c:	2300      	movs	r3, #0
 802b81e:	e79a      	b.n	802b756 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802b820:	463b      	mov	r3, r7
 802b822:	e798      	b.n	802b756 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802b824:	20013894 	.word	0x20013894

0802b828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b82c:	b093      	sub	sp, #76	@ 0x4c
 802b82e:	461d      	mov	r5, r3
 802b830:	920c      	str	r2, [sp, #48]	@ 0x30
 802b832:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802b834:	9107      	str	r1, [sp, #28]
 802b836:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802b83a:	9011      	str	r0, [sp, #68]	@ 0x44
 802b83c:	6850      	ldr	r0, [r2, #4]
 802b83e:	6812      	ldr	r2, [r2, #0]
 802b840:	fb00 1303 	mla	r3, r0, r3, r1
 802b844:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802b848:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b84a:	689b      	ldr	r3, [r3, #8]
 802b84c:	3301      	adds	r3, #1
 802b84e:	f023 0301 	bic.w	r3, r3, #1
 802b852:	9306      	str	r3, [sp, #24]
 802b854:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b856:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802b85a:	681f      	ldr	r7, [r3, #0]
 802b85c:	9b07      	ldr	r3, [sp, #28]
 802b85e:	2b00      	cmp	r3, #0
 802b860:	dc03      	bgt.n	802b86a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802b862:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802b864:	2b00      	cmp	r3, #0
 802b866:	f340 8267 	ble.w	802bd38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802b86a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b86c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802b870:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802b874:	1e48      	subs	r0, r1, #1
 802b876:	f102 3cff 	add.w	ip, r2, #4294967295
 802b87a:	2d00      	cmp	r5, #0
 802b87c:	f340 80b8 	ble.w	802b9f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802b880:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802b884:	ea4f 4326 	mov.w	r3, r6, asr #16
 802b888:	d406      	bmi.n	802b898 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802b88a:	4586      	cmp	lr, r0
 802b88c:	da04      	bge.n	802b898 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802b88e:	2b00      	cmp	r3, #0
 802b890:	db02      	blt.n	802b898 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802b892:	4563      	cmp	r3, ip
 802b894:	f2c0 80ad 	blt.w	802b9f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802b898:	f11e 0e01 	adds.w	lr, lr, #1
 802b89c:	f100 80a0 	bmi.w	802b9e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802b8a0:	4571      	cmp	r1, lr
 802b8a2:	f2c0 809d 	blt.w	802b9e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802b8a6:	3301      	adds	r3, #1
 802b8a8:	f100 809a 	bmi.w	802b9e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802b8ac:	429a      	cmp	r2, r3
 802b8ae:	f2c0 8097 	blt.w	802b9e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802b8b2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802b8b6:	9509      	str	r5, [sp, #36]	@ 0x24
 802b8b8:	46c8      	mov	r8, r9
 802b8ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b8bc:	2b00      	cmp	r3, #0
 802b8be:	f340 80b6 	ble.w	802ba2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802b8c2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802b8c6:	9308      	str	r3, [sp, #32]
 802b8c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b8ca:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802b8ce:	1423      	asrs	r3, r4, #16
 802b8d0:	ea4f 4026 	mov.w	r0, r6, asr #16
 802b8d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802b8d8:	f100 813e 	bmi.w	802bb58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802b8dc:	f10c 3bff 	add.w	fp, ip, #4294967295
 802b8e0:	455b      	cmp	r3, fp
 802b8e2:	f280 8139 	bge.w	802bb58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802b8e6:	2800      	cmp	r0, #0
 802b8e8:	f2c0 8136 	blt.w	802bb58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802b8ec:	f10e 3bff 	add.w	fp, lr, #4294967295
 802b8f0:	4558      	cmp	r0, fp
 802b8f2:	f280 8131 	bge.w	802bb58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802b8f6:	9a06      	ldr	r2, [sp, #24]
 802b8f8:	fb00 3302 	mla	r3, r0, r2, r3
 802b8fc:	0858      	lsrs	r0, r3, #1
 802b8fe:	07da      	lsls	r2, r3, #31
 802b900:	f817 c000 	ldrb.w	ip, [r7, r0]
 802b904:	9a08      	ldr	r2, [sp, #32]
 802b906:	bf54      	ite	pl
 802b908:	f00c 0c0f 	andpl.w	ip, ip, #15
 802b90c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802b910:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b914:	fa5f fc8c 	uxtb.w	ip, ip
 802b918:	2a00      	cmp	r2, #0
 802b91a:	f000 80cb 	beq.w	802bab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802b91e:	1c58      	adds	r0, r3, #1
 802b920:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802b924:	07c0      	lsls	r0, r0, #31
 802b926:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802b92a:	bf54      	ite	pl
 802b92c:	f00e 0e0f 	andpl.w	lr, lr, #15
 802b930:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802b934:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802b938:	fa5f fe8e 	uxtb.w	lr, lr
 802b93c:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 802b940:	b1b9      	cbz	r1, 802b972 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802b942:	4453      	add	r3, sl
 802b944:	0858      	lsrs	r0, r3, #1
 802b946:	07da      	lsls	r2, r3, #31
 802b948:	5c38      	ldrb	r0, [r7, r0]
 802b94a:	bf54      	ite	pl
 802b94c:	f000 000f 	andpl.w	r0, r0, #15
 802b950:	1100      	asrmi	r0, r0, #4
 802b952:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b956:	b2c0      	uxtb	r0, r0
 802b958:	900a      	str	r0, [sp, #40]	@ 0x28
 802b95a:	1c58      	adds	r0, r3, #1
 802b95c:	0843      	lsrs	r3, r0, #1
 802b95e:	07c2      	lsls	r2, r0, #31
 802b960:	5cfb      	ldrb	r3, [r7, r3]
 802b962:	bf54      	ite	pl
 802b964:	f003 030f 	andpl.w	r3, r3, #15
 802b968:	111b      	asrmi	r3, r3, #4
 802b96a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802b96e:	b2db      	uxtb	r3, r3
 802b970:	930e      	str	r3, [sp, #56]	@ 0x38
 802b972:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802b976:	b289      	uxth	r1, r1
 802b978:	fb02 f301 	mul.w	r3, r2, r1
 802b97c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802b980:	0112      	lsls	r2, r2, #4
 802b982:	b289      	uxth	r1, r1
 802b984:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802b988:	1a40      	subs	r0, r0, r1
 802b98a:	fa1f fe80 	uxth.w	lr, r0
 802b98e:	1ad2      	subs	r2, r2, r3
 802b990:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802b992:	b292      	uxth	r2, r2
 802b994:	4342      	muls	r2, r0
 802b996:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802b99a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802b99c:	fb01 c102 	mla	r1, r1, r2, ip
 802b9a0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802b9a2:	fb03 1302 	mla	r3, r3, r2, r1
 802b9a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b9aa:	2bff      	cmp	r3, #255	@ 0xff
 802b9ac:	f040 8093 	bne.w	802bad6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802b9b0:	4bbe      	ldr	r3, [pc, #760]	@ (802bcac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802b9b2:	681a      	ldr	r2, [r3, #0]
 802b9b4:	4bbe      	ldr	r3, [pc, #760]	@ (802bcb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802b9b6:	0951      	lsrs	r1, r2, #5
 802b9b8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802b9bc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802b9c0:	430b      	orrs	r3, r1
 802b9c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802b9c6:	4313      	orrs	r3, r2
 802b9c8:	f8a8 3000 	strh.w	r3, [r8]
 802b9cc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802b9ce:	441c      	add	r4, r3
 802b9d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802b9d2:	441e      	add	r6, r3
 802b9d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b9d6:	3b01      	subs	r3, #1
 802b9d8:	f108 0802 	add.w	r8, r8, #2
 802b9dc:	9309      	str	r3, [sp, #36]	@ 0x24
 802b9de:	e76c      	b.n	802b8ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802b9e0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802b9e2:	441c      	add	r4, r3
 802b9e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802b9e6:	3d01      	subs	r5, #1
 802b9e8:	441e      	add	r6, r3
 802b9ea:	f109 0902 	add.w	r9, r9, #2
 802b9ee:	e744      	b.n	802b87a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802b9f0:	d021      	beq.n	802ba36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802b9f2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802b9f4:	1e6b      	subs	r3, r5, #1
 802b9f6:	fb00 4003 	mla	r0, r0, r3, r4
 802b9fa:	1400      	asrs	r0, r0, #16
 802b9fc:	f53f af59 	bmi.w	802b8b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802ba00:	3901      	subs	r1, #1
 802ba02:	4288      	cmp	r0, r1
 802ba04:	f6bf af55 	bge.w	802b8b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802ba08:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802ba0a:	fb01 6303 	mla	r3, r1, r3, r6
 802ba0e:	141b      	asrs	r3, r3, #16
 802ba10:	f53f af4f 	bmi.w	802b8b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802ba14:	3a01      	subs	r2, #1
 802ba16:	4293      	cmp	r3, r2
 802ba18:	f6bf af4b 	bge.w	802b8b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802ba1c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802ba20:	9308      	str	r3, [sp, #32]
 802ba22:	46a8      	mov	r8, r5
 802ba24:	46ce      	mov	lr, r9
 802ba26:	f1b8 0f00 	cmp.w	r8, #0
 802ba2a:	f300 80b5 	bgt.w	802bb98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802ba2e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802ba32:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802ba36:	9b07      	ldr	r3, [sp, #28]
 802ba38:	2b00      	cmp	r3, #0
 802ba3a:	f340 817d 	ble.w	802bd38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802ba3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 802ba42:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ba46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802ba4a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802ba4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802ba50:	ee31 1a05 	vadd.f32	s2, s2, s10
 802ba54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802ba58:	eef0 6a62 	vmov.f32	s13, s5
 802ba5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 802ba60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba64:	ee77 2a62 	vsub.f32	s5, s14, s5
 802ba68:	ee16 4a90 	vmov	r4, s13
 802ba6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802ba70:	eef0 6a43 	vmov.f32	s13, s6
 802ba74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802ba78:	ee12 2a90 	vmov	r2, s5
 802ba7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802ba80:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba84:	ee13 2a10 	vmov	r2, s6
 802ba88:	931f      	str	r3, [sp, #124]	@ 0x7c
 802ba8a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802ba8c:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba90:	9320      	str	r3, [sp, #128]	@ 0x80
 802ba92:	9b07      	ldr	r3, [sp, #28]
 802ba94:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802ba96:	3b01      	subs	r3, #1
 802ba98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba9c:	9307      	str	r3, [sp, #28]
 802ba9e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802baa0:	ee16 6a90 	vmov	r6, s13
 802baa4:	bf14      	ite	ne
 802baa6:	461d      	movne	r5, r3
 802baa8:	4615      	moveq	r5, r2
 802baaa:	eeb0 3a67 	vmov.f32	s6, s15
 802baae:	eef0 2a47 	vmov.f32	s5, s14
 802bab2:	e6d3      	b.n	802b85c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802bab4:	2900      	cmp	r1, #0
 802bab6:	f43f af5c 	beq.w	802b972 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802baba:	eb0a 0003 	add.w	r0, sl, r3
 802babe:	0843      	lsrs	r3, r0, #1
 802bac0:	07c0      	lsls	r0, r0, #31
 802bac2:	5cfb      	ldrb	r3, [r7, r3]
 802bac4:	bf54      	ite	pl
 802bac6:	f003 030f 	andpl.w	r3, r3, #15
 802baca:	111b      	asrmi	r3, r3, #4
 802bacc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802bad0:	b2db      	uxtb	r3, r3
 802bad2:	930a      	str	r3, [sp, #40]	@ 0x28
 802bad4:	e74d      	b.n	802b972 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802bad6:	2b00      	cmp	r3, #0
 802bad8:	f43f af78 	beq.w	802b9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802badc:	4a73      	ldr	r2, [pc, #460]	@ (802bcac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802bade:	f8b8 c000 	ldrh.w	ip, [r8]
 802bae2:	6810      	ldr	r0, [r2, #0]
 802bae4:	fa1f fe83 	uxth.w	lr, r3
 802bae8:	ea4f 212c 	mov.w	r1, ip, asr #8
 802baec:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802baf0:	43db      	mvns	r3, r3
 802baf2:	b2db      	uxtb	r3, r3
 802baf4:	fb12 f20e 	smulbb	r2, r2, lr
 802baf8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802bafc:	fb01 2103 	mla	r1, r1, r3, r2
 802bb00:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802bb04:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802bb08:	b2c0      	uxtb	r0, r0
 802bb0a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802bb0e:	fb1b fb0e 	smulbb	fp, fp, lr
 802bb12:	b289      	uxth	r1, r1
 802bb14:	fb10 fe0e 	smulbb	lr, r0, lr
 802bb18:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bb1c:	fa5f fc8c 	uxtb.w	ip, ip
 802bb20:	fb02 b203 	mla	r2, r2, r3, fp
 802bb24:	1c48      	adds	r0, r1, #1
 802bb26:	fb0c e303 	mla	r3, ip, r3, lr
 802bb2a:	b292      	uxth	r2, r2
 802bb2c:	b29b      	uxth	r3, r3
 802bb2e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802bb32:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802bb36:	f102 0b01 	add.w	fp, r2, #1
 802bb3a:	1c59      	adds	r1, r3, #1
 802bb3c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802bb40:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802bb44:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bb48:	0952      	lsrs	r2, r2, #5
 802bb4a:	4301      	orrs	r1, r0
 802bb4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bb50:	4311      	orrs	r1, r2
 802bb52:	f8a8 1000 	strh.w	r1, [r8]
 802bb56:	e739      	b.n	802b9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802bb58:	f113 0b01 	adds.w	fp, r3, #1
 802bb5c:	f53f af36 	bmi.w	802b9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802bb60:	45dc      	cmp	ip, fp
 802bb62:	f6ff af33 	blt.w	802b9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802bb66:	f110 0b01 	adds.w	fp, r0, #1
 802bb6a:	f53f af2f 	bmi.w	802b9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802bb6e:	45de      	cmp	lr, fp
 802bb70:	f6ff af2c 	blt.w	802b9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802bb74:	9a08      	ldr	r2, [sp, #32]
 802bb76:	9302      	str	r3, [sp, #8]
 802bb78:	fa0f f38e 	sxth.w	r3, lr
 802bb7c:	9301      	str	r3, [sp, #4]
 802bb7e:	fa0f f38c 	sxth.w	r3, ip
 802bb82:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802bb86:	9105      	str	r1, [sp, #20]
 802bb88:	9300      	str	r3, [sp, #0]
 802bb8a:	463a      	mov	r2, r7
 802bb8c:	4653      	mov	r3, sl
 802bb8e:	4641      	mov	r1, r8
 802bb90:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802bb92:	f7ff fd73 	bl	802b67c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802bb96:	e719      	b.n	802b9cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802bb98:	9906      	ldr	r1, [sp, #24]
 802bb9a:	1422      	asrs	r2, r4, #16
 802bb9c:	1433      	asrs	r3, r6, #16
 802bb9e:	fb01 2303 	mla	r3, r1, r3, r2
 802bba2:	085a      	lsrs	r2, r3, #1
 802bba4:	07d9      	lsls	r1, r3, #31
 802bba6:	5cba      	ldrb	r2, [r7, r2]
 802bba8:	bf54      	ite	pl
 802bbaa:	f002 020f 	andpl.w	r2, r2, #15
 802bbae:	1112      	asrmi	r2, r2, #4
 802bbb0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802bbb4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802bbb8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802bbbc:	b2d2      	uxtb	r2, r2
 802bbbe:	2800      	cmp	r0, #0
 802bbc0:	d062      	beq.n	802bc88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802bbc2:	f103 0a01 	add.w	sl, r3, #1
 802bbc6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802bbca:	f01a 0f01 	tst.w	sl, #1
 802bbce:	5c79      	ldrb	r1, [r7, r1]
 802bbd0:	bf0c      	ite	eq
 802bbd2:	f001 010f 	andeq.w	r1, r1, #15
 802bbd6:	1109      	asrne	r1, r1, #4
 802bbd8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802bbdc:	b2c9      	uxtb	r1, r1
 802bbde:	910f      	str	r1, [sp, #60]	@ 0x3c
 802bbe0:	f1bc 0f00 	cmp.w	ip, #0
 802bbe4:	d019      	beq.n	802bc1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802bbe6:	9908      	ldr	r1, [sp, #32]
 802bbe8:	440b      	add	r3, r1
 802bbea:	0859      	lsrs	r1, r3, #1
 802bbec:	f013 0f01 	tst.w	r3, #1
 802bbf0:	5c79      	ldrb	r1, [r7, r1]
 802bbf2:	bf0c      	ite	eq
 802bbf4:	f001 010f 	andeq.w	r1, r1, #15
 802bbf8:	1109      	asrne	r1, r1, #4
 802bbfa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802bbfe:	b2c9      	uxtb	r1, r1
 802bc00:	3301      	adds	r3, #1
 802bc02:	910b      	str	r1, [sp, #44]	@ 0x2c
 802bc04:	0859      	lsrs	r1, r3, #1
 802bc06:	07db      	lsls	r3, r3, #31
 802bc08:	5c79      	ldrb	r1, [r7, r1]
 802bc0a:	bf54      	ite	pl
 802bc0c:	f001 010f 	andpl.w	r1, r1, #15
 802bc10:	1109      	asrmi	r1, r1, #4
 802bc12:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802bc16:	b2c9      	uxtb	r1, r1
 802bc18:	9110      	str	r1, [sp, #64]	@ 0x40
 802bc1a:	b280      	uxth	r0, r0
 802bc1c:	fa1f fc8c 	uxth.w	ip, ip
 802bc20:	fb00 f30c 	mul.w	r3, r0, ip
 802bc24:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802bc28:	0100      	lsls	r0, r0, #4
 802bc2a:	fa1f fc8c 	uxth.w	ip, ip
 802bc2e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 802bc32:	eba1 010c 	sub.w	r1, r1, ip
 802bc36:	fa1f fa81 	uxth.w	sl, r1
 802bc3a:	1ac0      	subs	r0, r0, r3
 802bc3c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802bc3e:	b280      	uxth	r0, r0
 802bc40:	4348      	muls	r0, r1
 802bc42:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802bc44:	fb02 020a 	mla	r2, r2, sl, r0
 802bc48:	fb0c 2c01 	mla	ip, ip, r1, r2
 802bc4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802bc4e:	fb03 c302 	mla	r3, r3, r2, ip
 802bc52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802bc56:	2bff      	cmp	r3, #255	@ 0xff
 802bc58:	d12c      	bne.n	802bcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802bc5a:	4b14      	ldr	r3, [pc, #80]	@ (802bcac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802bc5c:	681a      	ldr	r2, [r3, #0]
 802bc5e:	4b14      	ldr	r3, [pc, #80]	@ (802bcb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802bc60:	0951      	lsrs	r1, r2, #5
 802bc62:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802bc66:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802bc6a:	430b      	orrs	r3, r1
 802bc6c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802bc70:	4313      	orrs	r3, r2
 802bc72:	f8ae 3000 	strh.w	r3, [lr]
 802bc76:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802bc78:	441c      	add	r4, r3
 802bc7a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802bc7c:	f10e 0e02 	add.w	lr, lr, #2
 802bc80:	441e      	add	r6, r3
 802bc82:	f108 38ff 	add.w	r8, r8, #4294967295
 802bc86:	e6ce      	b.n	802ba26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802bc88:	f1bc 0f00 	cmp.w	ip, #0
 802bc8c:	d0c5      	beq.n	802bc1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802bc8e:	9908      	ldr	r1, [sp, #32]
 802bc90:	440b      	add	r3, r1
 802bc92:	0859      	lsrs	r1, r3, #1
 802bc94:	07db      	lsls	r3, r3, #31
 802bc96:	5c79      	ldrb	r1, [r7, r1]
 802bc98:	bf54      	ite	pl
 802bc9a:	f001 010f 	andpl.w	r1, r1, #15
 802bc9e:	1109      	asrmi	r1, r1, #4
 802bca0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802bca4:	b2c9      	uxtb	r1, r1
 802bca6:	910b      	str	r1, [sp, #44]	@ 0x2c
 802bca8:	e7b7      	b.n	802bc1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802bcaa:	bf00      	nop
 802bcac:	20013894 	.word	0x20013894
 802bcb0:	fffff800 	.word	0xfffff800
 802bcb4:	2b00      	cmp	r3, #0
 802bcb6:	d0de      	beq.n	802bc76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802bcb8:	4a21      	ldr	r2, [pc, #132]	@ (802bd40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802bcba:	f8be c000 	ldrh.w	ip, [lr]
 802bcbe:	6810      	ldr	r0, [r2, #0]
 802bcc0:	fa1f fa83 	uxth.w	sl, r3
 802bcc4:	ea4f 212c 	mov.w	r1, ip, asr #8
 802bcc8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802bccc:	43db      	mvns	r3, r3
 802bcce:	b2db      	uxtb	r3, r3
 802bcd0:	fb12 f20a 	smulbb	r2, r2, sl
 802bcd4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802bcd8:	fb01 2103 	mla	r1, r1, r3, r2
 802bcdc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802bce0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802bce4:	b2c0      	uxtb	r0, r0
 802bce6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802bcea:	fa5f fc8c 	uxtb.w	ip, ip
 802bcee:	fb10 f00a 	smulbb	r0, r0, sl
 802bcf2:	fb0c 0003 	mla	r0, ip, r3, r0
 802bcf6:	b289      	uxth	r1, r1
 802bcf8:	fb1b fb0a 	smulbb	fp, fp, sl
 802bcfc:	b280      	uxth	r0, r0
 802bcfe:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802bd02:	fb02 b203 	mla	r2, r2, r3, fp
 802bd06:	1c4b      	adds	r3, r1, #1
 802bd08:	f100 0b01 	add.w	fp, r0, #1
 802bd0c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802bd10:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802bd14:	b292      	uxth	r2, r2
 802bd16:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802bd1a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802bd1e:	ea4b 0101 	orr.w	r1, fp, r1
 802bd22:	f102 0b01 	add.w	fp, r2, #1
 802bd26:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802bd2a:	0952      	lsrs	r2, r2, #5
 802bd2c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802bd30:	4311      	orrs	r1, r2
 802bd32:	f8ae 1000 	strh.w	r1, [lr]
 802bd36:	e79e      	b.n	802bc76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802bd38:	b013      	add	sp, #76	@ 0x4c
 802bd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bd3e:	bf00      	nop
 802bd40:	20013894 	.word	0x20013894

0802bd44 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802bd44:	b570      	push	{r4, r5, r6, lr}
 802bd46:	1208      	asrs	r0, r1, #8
 802bd48:	b29e      	uxth	r6, r3
 802bd4a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802bd4e:	1213      	asrs	r3, r2, #8
 802bd50:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bd54:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802bd58:	fb13 f305 	smulbb	r3, r3, r5
 802bd5c:	fb10 f006 	smulbb	r0, r0, r6
 802bd60:	4418      	add	r0, r3
 802bd62:	10cc      	asrs	r4, r1, #3
 802bd64:	10d3      	asrs	r3, r2, #3
 802bd66:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802bd6a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802bd6e:	fb13 f305 	smulbb	r3, r3, r5
 802bd72:	fb14 f406 	smulbb	r4, r4, r6
 802bd76:	00c9      	lsls	r1, r1, #3
 802bd78:	00d2      	lsls	r2, r2, #3
 802bd7a:	441c      	add	r4, r3
 802bd7c:	b2d2      	uxtb	r2, r2
 802bd7e:	b2cb      	uxtb	r3, r1
 802bd80:	fb12 f205 	smulbb	r2, r2, r5
 802bd84:	b280      	uxth	r0, r0
 802bd86:	fb13 f306 	smulbb	r3, r3, r6
 802bd8a:	4413      	add	r3, r2
 802bd8c:	1c42      	adds	r2, r0, #1
 802bd8e:	b29b      	uxth	r3, r3
 802bd90:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802bd94:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802bd98:	1c58      	adds	r0, r3, #1
 802bd9a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802bd9e:	b2a4      	uxth	r4, r4
 802bda0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802bda4:	4310      	orrs	r0, r2
 802bda6:	1c62      	adds	r2, r4, #1
 802bda8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802bdac:	0964      	lsrs	r4, r4, #5
 802bdae:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802bdb2:	4320      	orrs	r0, r4
 802bdb4:	bd70      	pop	{r4, r5, r6, pc}
	...

0802bdb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802bdb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bdbc:	b08f      	sub	sp, #60	@ 0x3c
 802bdbe:	461c      	mov	r4, r3
 802bdc0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802bdc4:	9004      	str	r0, [sp, #16]
 802bdc6:	460d      	mov	r5, r1
 802bdc8:	4616      	mov	r6, r2
 802bdca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802bdcc:	2f00      	cmp	r7, #0
 802bdce:	f000 80f6 	beq.w	802bfbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802bdd2:	6820      	ldr	r0, [r4, #0]
 802bdd4:	6861      	ldr	r1, [r4, #4]
 802bdd6:	aa0a      	add	r2, sp, #40	@ 0x28
 802bdd8:	c203      	stmia	r2!, {r0, r1}
 802bdda:	6818      	ldr	r0, [r3, #0]
 802bddc:	6859      	ldr	r1, [r3, #4]
 802bdde:	aa0c      	add	r2, sp, #48	@ 0x30
 802bde0:	c203      	stmia	r2!, {r0, r1}
 802bde2:	a80a      	add	r0, sp, #40	@ 0x28
 802bde4:	f7ee fdc2 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802bde8:	4621      	mov	r1, r4
 802bdea:	a80c      	add	r0, sp, #48	@ 0x30
 802bdec:	f7ee fe02 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802bdf0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802bdf4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802bdf8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802bdfc:	f002 0301 	and.w	r3, r2, #1
 802be00:	9306      	str	r3, [sp, #24]
 802be02:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802be06:	f003 0101 	and.w	r1, r3, #1
 802be0a:	9105      	str	r1, [sp, #20]
 802be0c:	9805      	ldr	r0, [sp, #20]
 802be0e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802be12:	4403      	add	r3, r0
 802be14:	fb01 2303 	mla	r3, r1, r3, r2
 802be18:	f04f 0802 	mov.w	r8, #2
 802be1c:	fb93 f3f8 	sdiv	r3, r3, r8
 802be20:	441d      	add	r5, r3
 802be22:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802be26:	441a      	add	r2, r3
 802be28:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802be2c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802be30:	4419      	add	r1, r3
 802be32:	4b64      	ldr	r3, [pc, #400]	@ (802bfc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802be34:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802be38:	6818      	ldr	r0, [r3, #0]
 802be3a:	6803      	ldr	r3, [r0, #0]
 802be3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802be3e:	4798      	blx	r3
 802be40:	4a61      	ldr	r2, [pc, #388]	@ (802bfc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802be42:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802be46:	8813      	ldrh	r3, [r2, #0]
 802be48:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802be4c:	2fff      	cmp	r7, #255	@ 0xff
 802be4e:	fb03 a404 	mla	r4, r3, r4, sl
 802be52:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802be56:	f106 0604 	add.w	r6, r6, #4
 802be5a:	4611      	mov	r1, r2
 802be5c:	fb03 fb0b 	mul.w	fp, r3, fp
 802be60:	d06b      	beq.n	802bf3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802be62:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802be66:	9303      	str	r3, [sp, #12]
 802be68:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802be6c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802be70:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802be74:	9b07      	ldr	r3, [sp, #28]
 802be76:	42a3      	cmp	r3, r4
 802be78:	f240 809c 	bls.w	802bfb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802be7c:	9b06      	ldr	r3, [sp, #24]
 802be7e:	2b00      	cmp	r3, #0
 802be80:	d039      	beq.n	802bef6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802be82:	782b      	ldrb	r3, [r5, #0]
 802be84:	8822      	ldrh	r2, [r4, #0]
 802be86:	9804      	ldr	r0, [sp, #16]
 802be88:	f003 030f 	and.w	r3, r3, #15
 802be8c:	f105 0801 	add.w	r8, r5, #1
 802be90:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802be94:	9b03      	ldr	r3, [sp, #12]
 802be96:	9300      	str	r3, [sp, #0]
 802be98:	463b      	mov	r3, r7
 802be9a:	f7ff ff53 	bl	802bd44 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802be9e:	f824 0b02 	strh.w	r0, [r4], #2
 802bea2:	f109 3bff 	add.w	fp, r9, #4294967295
 802bea6:	f1bb 0f01 	cmp.w	fp, #1
 802beaa:	46a2      	mov	sl, r4
 802beac:	f104 0404 	add.w	r4, r4, #4
 802beb0:	dd24      	ble.n	802befc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802beb2:	f898 3000 	ldrb.w	r3, [r8]
 802beb6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802beba:	9804      	ldr	r0, [sp, #16]
 802bebc:	091b      	lsrs	r3, r3, #4
 802bebe:	f1ab 0b02 	sub.w	fp, fp, #2
 802bec2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802bec6:	9b03      	ldr	r3, [sp, #12]
 802bec8:	9300      	str	r3, [sp, #0]
 802beca:	463b      	mov	r3, r7
 802becc:	f7ff ff3a 	bl	802bd44 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802bed0:	f824 0c04 	strh.w	r0, [r4, #-4]
 802bed4:	f818 3b01 	ldrb.w	r3, [r8], #1
 802bed8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802bedc:	9804      	ldr	r0, [sp, #16]
 802bede:	f003 030f 	and.w	r3, r3, #15
 802bee2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802bee6:	9b03      	ldr	r3, [sp, #12]
 802bee8:	9300      	str	r3, [sp, #0]
 802beea:	463b      	mov	r3, r7
 802beec:	f7ff ff2a 	bl	802bd44 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802bef0:	f824 0c02 	strh.w	r0, [r4, #-2]
 802bef4:	e7d7      	b.n	802bea6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802bef6:	46a8      	mov	r8, r5
 802bef8:	46cb      	mov	fp, r9
 802befa:	e7d4      	b.n	802bea6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802befc:	d10e      	bne.n	802bf1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802befe:	f898 3000 	ldrb.w	r3, [r8]
 802bf02:	f8ba 2000 	ldrh.w	r2, [sl]
 802bf06:	9804      	ldr	r0, [sp, #16]
 802bf08:	091b      	lsrs	r3, r3, #4
 802bf0a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802bf0e:	9b03      	ldr	r3, [sp, #12]
 802bf10:	9300      	str	r3, [sp, #0]
 802bf12:	463b      	mov	r3, r7
 802bf14:	f7ff ff16 	bl	802bd44 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802bf18:	f82a 0b02 	strh.w	r0, [sl], #2
 802bf1c:	9b08      	ldr	r3, [sp, #32]
 802bf1e:	9a05      	ldr	r2, [sp, #20]
 802bf20:	881c      	ldrh	r4, [r3, #0]
 802bf22:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802bf26:	eba4 0409 	sub.w	r4, r4, r9
 802bf2a:	4413      	add	r3, r2
 802bf2c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802bf30:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802bf32:	fb93 f3f2 	sdiv	r3, r3, r2
 802bf36:	441d      	add	r5, r3
 802bf38:	e79c      	b.n	802be74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802bf3a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802bf3e:	45a3      	cmp	fp, r4
 802bf40:	d938      	bls.n	802bfb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802bf42:	9b06      	ldr	r3, [sp, #24]
 802bf44:	b1f3      	cbz	r3, 802bf84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802bf46:	782b      	ldrb	r3, [r5, #0]
 802bf48:	f003 030f 	and.w	r3, r3, #15
 802bf4c:	1c6a      	adds	r2, r5, #1
 802bf4e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802bf52:	8023      	strh	r3, [r4, #0]
 802bf54:	f109 30ff 	add.w	r0, r9, #4294967295
 802bf58:	3402      	adds	r4, #2
 802bf5a:	2801      	cmp	r0, #1
 802bf5c:	4623      	mov	r3, r4
 802bf5e:	f104 0404 	add.w	r4, r4, #4
 802bf62:	dd12      	ble.n	802bf8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802bf64:	7813      	ldrb	r3, [r2, #0]
 802bf66:	091b      	lsrs	r3, r3, #4
 802bf68:	3802      	subs	r0, #2
 802bf6a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802bf6e:	f824 3c04 	strh.w	r3, [r4, #-4]
 802bf72:	f812 3b01 	ldrb.w	r3, [r2], #1
 802bf76:	f003 030f 	and.w	r3, r3, #15
 802bf7a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802bf7e:	f824 3c02 	strh.w	r3, [r4, #-2]
 802bf82:	e7ea      	b.n	802bf5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802bf84:	462a      	mov	r2, r5
 802bf86:	4648      	mov	r0, r9
 802bf88:	e7e7      	b.n	802bf5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802bf8a:	d106      	bne.n	802bf9a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802bf8c:	7812      	ldrb	r2, [r2, #0]
 802bf8e:	0912      	lsrs	r2, r2, #4
 802bf90:	3302      	adds	r3, #2
 802bf92:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802bf96:	f823 2c02 	strh.w	r2, [r3, #-2]
 802bf9a:	880c      	ldrh	r4, [r1, #0]
 802bf9c:	9a05      	ldr	r2, [sp, #20]
 802bf9e:	eba4 0409 	sub.w	r4, r4, r9
 802bfa2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802bfa6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802bfaa:	4413      	add	r3, r2
 802bfac:	fb93 f3f8 	sdiv	r3, r3, r8
 802bfb0:	441d      	add	r5, r3
 802bfb2:	e7c4      	b.n	802bf3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802bfb4:	4b03      	ldr	r3, [pc, #12]	@ (802bfc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802bfb6:	6818      	ldr	r0, [r3, #0]
 802bfb8:	6803      	ldr	r3, [r0, #0]
 802bfba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802bfbc:	4798      	blx	r3
 802bfbe:	b00f      	add	sp, #60	@ 0x3c
 802bfc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bfc4:	20013884 	.word	0x20013884
 802bfc8:	2001387e 	.word	0x2001387e

0802bfcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802bfcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 802bfce:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802bfd2:	2dff      	cmp	r5, #255	@ 0xff
 802bfd4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802bfd8:	d10c      	bne.n	802bff4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802bfda:	2bff      	cmp	r3, #255	@ 0xff
 802bfdc:	d10a      	bne.n	802bff4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802bfde:	4b25      	ldr	r3, [pc, #148]	@ (802c074 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802bfe0:	0948      	lsrs	r0, r1, #5
 802bfe2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802bfe6:	403b      	ands	r3, r7
 802bfe8:	4318      	orrs	r0, r3
 802bfea:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802bfee:	4308      	orrs	r0, r1
 802bff0:	b280      	uxth	r0, r0
 802bff2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802bff4:	fb15 f503 	smulbb	r5, r5, r3
 802bff8:	b2ab      	uxth	r3, r5
 802bffa:	1c5d      	adds	r5, r3, #1
 802bffc:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802c000:	1214      	asrs	r4, r2, #8
 802c002:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802c006:	fa1f fc85 	uxth.w	ip, r5
 802c00a:	10d6      	asrs	r6, r2, #3
 802c00c:	00d0      	lsls	r0, r2, #3
 802c00e:	43ed      	mvns	r5, r5
 802c010:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c014:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802c018:	b2eb      	uxtb	r3, r5
 802c01a:	b2c0      	uxtb	r0, r0
 802c01c:	fb12 f20c 	smulbb	r2, r2, ip
 802c020:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802c024:	fb04 2403 	mla	r4, r4, r3, r2
 802c028:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802c02c:	b2c8      	uxtb	r0, r1
 802c02e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802c032:	b2fd      	uxtb	r5, r7
 802c034:	fb10 f00c 	smulbb	r0, r0, ip
 802c038:	b2a4      	uxth	r4, r4
 802c03a:	fb02 0003 	mla	r0, r2, r3, r0
 802c03e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802c042:	fb15 f50c 	smulbb	r5, r5, ip
 802c046:	fb06 5503 	mla	r5, r6, r3, r5
 802c04a:	b283      	uxth	r3, r0
 802c04c:	1c60      	adds	r0, r4, #1
 802c04e:	b2ad      	uxth	r5, r5
 802c050:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802c054:	1c58      	adds	r0, r3, #1
 802c056:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c05a:	1c6b      	adds	r3, r5, #1
 802c05c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802c060:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802c064:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c068:	096d      	lsrs	r5, r5, #5
 802c06a:	4320      	orrs	r0, r4
 802c06c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802c070:	4328      	orrs	r0, r5
 802c072:	e7be      	b.n	802bff2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802c074:	00fff800 	.word	0x00fff800

0802c078 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802c078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c07c:	461c      	mov	r4, r3
 802c07e:	b08d      	sub	sp, #52	@ 0x34
 802c080:	460d      	mov	r5, r1
 802c082:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802c084:	6861      	ldr	r1, [r4, #4]
 802c086:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802c08a:	4680      	mov	r8, r0
 802c08c:	6820      	ldr	r0, [r4, #0]
 802c08e:	4616      	mov	r6, r2
 802c090:	aa08      	add	r2, sp, #32
 802c092:	c203      	stmia	r2!, {r0, r1}
 802c094:	6818      	ldr	r0, [r3, #0]
 802c096:	6859      	ldr	r1, [r3, #4]
 802c098:	aa0a      	add	r2, sp, #40	@ 0x28
 802c09a:	c203      	stmia	r2!, {r0, r1}
 802c09c:	a808      	add	r0, sp, #32
 802c09e:	f7ee fc65 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c0a2:	4621      	mov	r1, r4
 802c0a4:	a80a      	add	r0, sp, #40	@ 0x28
 802c0a6:	f7ee fca5 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c0aa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802c0ae:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 802c0b2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802c0b6:	f002 0301 	and.w	r3, r2, #1
 802c0ba:	9303      	str	r3, [sp, #12]
 802c0bc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802c0c0:	f003 0101 	and.w	r1, r3, #1
 802c0c4:	9102      	str	r1, [sp, #8]
 802c0c6:	9802      	ldr	r0, [sp, #8]
 802c0c8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 802c0cc:	4403      	add	r3, r0
 802c0ce:	fb01 2303 	mla	r3, r1, r3, r2
 802c0d2:	f04f 0a02 	mov.w	sl, #2
 802c0d6:	fb93 f3fa 	sdiv	r3, r3, sl
 802c0da:	441d      	add	r5, r3
 802c0dc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802c0e0:	441a      	add	r2, r3
 802c0e2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802c0e6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802c0ea:	4a3f      	ldr	r2, [pc, #252]	@ (802c1e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802c0ec:	9205      	str	r2, [sp, #20]
 802c0ee:	4419      	add	r1, r3
 802c0f0:	6810      	ldr	r0, [r2, #0]
 802c0f2:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802c0f6:	6803      	ldr	r3, [r0, #0]
 802c0f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802c0fa:	4798      	blx	r3
 802c0fc:	4b3b      	ldr	r3, [pc, #236]	@ (802c1ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802c0fe:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 802c102:	8819      	ldrh	r1, [r3, #0]
 802c104:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802c108:	fb01 c404 	mla	r4, r1, r4, ip
 802c10c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c110:	434f      	muls	r7, r1
 802c112:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802c116:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802c11a:	3604      	adds	r6, #4
 802c11c:	9204      	str	r2, [sp, #16]
 802c11e:	9b04      	ldr	r3, [sp, #16]
 802c120:	429c      	cmp	r4, r3
 802c122:	d258      	bcs.n	802c1d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802c124:	9b03      	ldr	r3, [sp, #12]
 802c126:	2b00      	cmp	r3, #0
 802c128:	d034      	beq.n	802c194 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802c12a:	782b      	ldrb	r3, [r5, #0]
 802c12c:	f003 030f 	and.w	r3, r3, #15
 802c130:	1c6f      	adds	r7, r5, #1
 802c132:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c136:	0e0b      	lsrs	r3, r1, #24
 802c138:	d006      	beq.n	802c148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802c13a:	8822      	ldrh	r2, [r4, #0]
 802c13c:	9300      	str	r3, [sp, #0]
 802c13e:	4640      	mov	r0, r8
 802c140:	464b      	mov	r3, r9
 802c142:	f7ff ff43 	bl	802bfcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c146:	8020      	strh	r0, [r4, #0]
 802c148:	3402      	adds	r4, #2
 802c14a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802c14e:	f1ba 0f01 	cmp.w	sl, #1
 802c152:	dd22      	ble.n	802c19a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802c154:	783b      	ldrb	r3, [r7, #0]
 802c156:	091b      	lsrs	r3, r3, #4
 802c158:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c15c:	0e0b      	lsrs	r3, r1, #24
 802c15e:	d006      	beq.n	802c16e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802c160:	8822      	ldrh	r2, [r4, #0]
 802c162:	9300      	str	r3, [sp, #0]
 802c164:	4640      	mov	r0, r8
 802c166:	464b      	mov	r3, r9
 802c168:	f7ff ff30 	bl	802bfcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c16c:	8020      	strh	r0, [r4, #0]
 802c16e:	f817 3b01 	ldrb.w	r3, [r7], #1
 802c172:	f003 030f 	and.w	r3, r3, #15
 802c176:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c17a:	0e0b      	lsrs	r3, r1, #24
 802c17c:	d006      	beq.n	802c18c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802c17e:	8862      	ldrh	r2, [r4, #2]
 802c180:	9300      	str	r3, [sp, #0]
 802c182:	4640      	mov	r0, r8
 802c184:	464b      	mov	r3, r9
 802c186:	f7ff ff21 	bl	802bfcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c18a:	8060      	strh	r0, [r4, #2]
 802c18c:	3404      	adds	r4, #4
 802c18e:	f1aa 0a02 	sub.w	sl, sl, #2
 802c192:	e7dc      	b.n	802c14e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802c194:	462f      	mov	r7, r5
 802c196:	46da      	mov	sl, fp
 802c198:	e7d9      	b.n	802c14e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802c19a:	d10d      	bne.n	802c1b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802c19c:	783b      	ldrb	r3, [r7, #0]
 802c19e:	091b      	lsrs	r3, r3, #4
 802c1a0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c1a4:	0e0b      	lsrs	r3, r1, #24
 802c1a6:	d006      	beq.n	802c1b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802c1a8:	8822      	ldrh	r2, [r4, #0]
 802c1aa:	9300      	str	r3, [sp, #0]
 802c1ac:	4640      	mov	r0, r8
 802c1ae:	464b      	mov	r3, r9
 802c1b0:	f7ff ff0c 	bl	802bfcc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c1b4:	8020      	strh	r0, [r4, #0]
 802c1b6:	3402      	adds	r4, #2
 802c1b8:	9b06      	ldr	r3, [sp, #24]
 802c1ba:	9a02      	ldr	r2, [sp, #8]
 802c1bc:	881b      	ldrh	r3, [r3, #0]
 802c1be:	eba3 030b 	sub.w	r3, r3, fp
 802c1c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802c1c6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802c1ca:	4413      	add	r3, r2
 802c1cc:	9a07      	ldr	r2, [sp, #28]
 802c1ce:	fb93 f3f2 	sdiv	r3, r3, r2
 802c1d2:	441d      	add	r5, r3
 802c1d4:	e7a3      	b.n	802c11e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802c1d6:	9b05      	ldr	r3, [sp, #20]
 802c1d8:	6818      	ldr	r0, [r3, #0]
 802c1da:	6803      	ldr	r3, [r0, #0]
 802c1dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802c1de:	4798      	blx	r3
 802c1e0:	b00d      	add	sp, #52	@ 0x34
 802c1e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c1e6:	bf00      	nop
 802c1e8:	20013884 	.word	0x20013884
 802c1ec:	2001387e 	.word	0x2001387e

0802c1f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 802c1f0:	b570      	push	{r4, r5, r6, lr}
 802c1f2:	1214      	asrs	r4, r2, #8
 802c1f4:	788d      	ldrb	r5, [r1, #2]
 802c1f6:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802c1fa:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c1fe:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802c202:	fb15 f503 	smulbb	r5, r5, r3
 802c206:	fb04 5506 	mla	r5, r4, r6, r5
 802c20a:	10d0      	asrs	r0, r2, #3
 802c20c:	784c      	ldrb	r4, [r1, #1]
 802c20e:	7809      	ldrb	r1, [r1, #0]
 802c210:	00d2      	lsls	r2, r2, #3
 802c212:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802c216:	b2d2      	uxtb	r2, r2
 802c218:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802c21c:	fb14 f403 	smulbb	r4, r4, r3
 802c220:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802c224:	fb11 f303 	smulbb	r3, r1, r3
 802c228:	fb00 4406 	mla	r4, r0, r6, r4
 802c22c:	fb02 3306 	mla	r3, r2, r6, r3
 802c230:	b2ad      	uxth	r5, r5
 802c232:	b29b      	uxth	r3, r3
 802c234:	b2a4      	uxth	r4, r4
 802c236:	1c68      	adds	r0, r5, #1
 802c238:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802c23c:	1c62      	adds	r2, r4, #1
 802c23e:	1c58      	adds	r0, r3, #1
 802c240:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c244:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c248:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802c24c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c250:	0964      	lsrs	r4, r4, #5
 802c252:	4328      	orrs	r0, r5
 802c254:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802c258:	4320      	orrs	r0, r4
 802c25a:	bd70      	pop	{r4, r5, r6, pc}

0802c25c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802c25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c260:	b08f      	sub	sp, #60	@ 0x3c
 802c262:	461c      	mov	r4, r3
 802c264:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802c268:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802c26a:	4682      	mov	sl, r0
 802c26c:	460e      	mov	r6, r1
 802c26e:	4615      	mov	r5, r2
 802c270:	2f00      	cmp	r7, #0
 802c272:	f000 8142 	beq.w	802c4fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802c276:	6820      	ldr	r0, [r4, #0]
 802c278:	6861      	ldr	r1, [r4, #4]
 802c27a:	aa0a      	add	r2, sp, #40	@ 0x28
 802c27c:	c203      	stmia	r2!, {r0, r1}
 802c27e:	6818      	ldr	r0, [r3, #0]
 802c280:	6859      	ldr	r1, [r3, #4]
 802c282:	aa0c      	add	r2, sp, #48	@ 0x30
 802c284:	c203      	stmia	r2!, {r0, r1}
 802c286:	a80a      	add	r0, sp, #40	@ 0x28
 802c288:	f7ee fb70 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c28c:	4621      	mov	r1, r4
 802c28e:	a80c      	add	r0, sp, #48	@ 0x30
 802c290:	f7ee fbb0 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c294:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802c298:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802c29c:	f002 0301 	and.w	r3, r2, #1
 802c2a0:	9306      	str	r3, [sp, #24]
 802c2a2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c2a6:	f003 0101 	and.w	r1, r3, #1
 802c2aa:	9105      	str	r1, [sp, #20]
 802c2ac:	9805      	ldr	r0, [sp, #20]
 802c2ae:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802c2b2:	4403      	add	r3, r0
 802c2b4:	fb01 2303 	mla	r3, r1, r3, r2
 802c2b8:	f04f 0802 	mov.w	r8, #2
 802c2bc:	fb93 f3f8 	sdiv	r3, r3, r8
 802c2c0:	441e      	add	r6, r3
 802c2c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802c2c6:	441a      	add	r2, r3
 802c2c8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802c2cc:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802c2d0:	4419      	add	r1, r3
 802c2d2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802c2d6:	9303      	str	r3, [sp, #12]
 802c2d8:	4b89      	ldr	r3, [pc, #548]	@ (802c500 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802c2da:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802c2de:	6818      	ldr	r0, [r3, #0]
 802c2e0:	6803      	ldr	r3, [r0, #0]
 802c2e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802c2e4:	4798      	blx	r3
 802c2e6:	4a87      	ldr	r2, [pc, #540]	@ (802c504 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802c2e8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802c2ec:	8813      	ldrh	r3, [r2, #0]
 802c2ee:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 802c2f2:	2fff      	cmp	r7, #255	@ 0xff
 802c2f4:	fb03 9404 	mla	r4, r3, r4, r9
 802c2f8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c2fc:	f105 0504 	add.w	r5, r5, #4
 802c300:	4694      	mov	ip, r2
 802c302:	fb03 f30b 	mul.w	r3, r3, fp
 802c306:	d071      	beq.n	802c3ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802c308:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802c30c:	43f9      	mvns	r1, r7
 802c30e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802c312:	b2c9      	uxtb	r1, r1
 802c314:	9104      	str	r1, [sp, #16]
 802c316:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802c31a:	9b07      	ldr	r3, [sp, #28]
 802c31c:	42a3      	cmp	r3, r4
 802c31e:	f240 80e7 	bls.w	802c4f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802c322:	9b06      	ldr	r3, [sp, #24]
 802c324:	2b00      	cmp	r3, #0
 802c326:	d03d      	beq.n	802c3a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802c328:	7831      	ldrb	r1, [r6, #0]
 802c32a:	9b04      	ldr	r3, [sp, #16]
 802c32c:	8822      	ldrh	r2, [r4, #0]
 802c32e:	9300      	str	r3, [sp, #0]
 802c330:	f001 010f 	and.w	r1, r1, #15
 802c334:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802c338:	463b      	mov	r3, r7
 802c33a:	4429      	add	r1, r5
 802c33c:	4650      	mov	r0, sl
 802c33e:	f7ff ff57 	bl	802c1f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802c342:	9b03      	ldr	r3, [sp, #12]
 802c344:	f824 0b02 	strh.w	r0, [r4], #2
 802c348:	f106 0801 	add.w	r8, r6, #1
 802c34c:	f103 3bff 	add.w	fp, r3, #4294967295
 802c350:	f1bb 0f01 	cmp.w	fp, #1
 802c354:	46a1      	mov	r9, r4
 802c356:	f104 0404 	add.w	r4, r4, #4
 802c35a:	dd27      	ble.n	802c3ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802c35c:	f898 1000 	ldrb.w	r1, [r8]
 802c360:	9b04      	ldr	r3, [sp, #16]
 802c362:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802c366:	9300      	str	r3, [sp, #0]
 802c368:	0909      	lsrs	r1, r1, #4
 802c36a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802c36e:	463b      	mov	r3, r7
 802c370:	4429      	add	r1, r5
 802c372:	4650      	mov	r0, sl
 802c374:	f7ff ff3c 	bl	802c1f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802c378:	f824 0c04 	strh.w	r0, [r4, #-4]
 802c37c:	f818 1b01 	ldrb.w	r1, [r8], #1
 802c380:	9b04      	ldr	r3, [sp, #16]
 802c382:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802c386:	9300      	str	r3, [sp, #0]
 802c388:	f001 010f 	and.w	r1, r1, #15
 802c38c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802c390:	463b      	mov	r3, r7
 802c392:	4429      	add	r1, r5
 802c394:	4650      	mov	r0, sl
 802c396:	f7ff ff2b 	bl	802c1f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802c39a:	f1ab 0b02 	sub.w	fp, fp, #2
 802c39e:	f824 0c02 	strh.w	r0, [r4, #-2]
 802c3a2:	e7d5      	b.n	802c350 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802c3a4:	46b0      	mov	r8, r6
 802c3a6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802c3aa:	e7d1      	b.n	802c350 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802c3ac:	d10f      	bne.n	802c3ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802c3ae:	f898 1000 	ldrb.w	r1, [r8]
 802c3b2:	9b04      	ldr	r3, [sp, #16]
 802c3b4:	f8b9 2000 	ldrh.w	r2, [r9]
 802c3b8:	9300      	str	r3, [sp, #0]
 802c3ba:	0909      	lsrs	r1, r1, #4
 802c3bc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802c3c0:	463b      	mov	r3, r7
 802c3c2:	4429      	add	r1, r5
 802c3c4:	4650      	mov	r0, sl
 802c3c6:	f7ff ff13 	bl	802c1f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802c3ca:	f829 0b02 	strh.w	r0, [r9], #2
 802c3ce:	9b08      	ldr	r3, [sp, #32]
 802c3d0:	9a05      	ldr	r2, [sp, #20]
 802c3d2:	881c      	ldrh	r4, [r3, #0]
 802c3d4:	9b03      	ldr	r3, [sp, #12]
 802c3d6:	1ae4      	subs	r4, r4, r3
 802c3d8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c3dc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802c3e0:	4413      	add	r3, r2
 802c3e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802c3e4:	fb93 f3f2 	sdiv	r3, r3, r2
 802c3e8:	441e      	add	r6, r3
 802c3ea:	e796      	b.n	802c31a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802c3ec:	4f46      	ldr	r7, [pc, #280]	@ (802c508 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802c3ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802c3f2:	42a3      	cmp	r3, r4
 802c3f4:	d97c      	bls.n	802c4f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802c3f6:	9a06      	ldr	r2, [sp, #24]
 802c3f8:	2a00      	cmp	r2, #0
 802c3fa:	d054      	beq.n	802c4a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802c3fc:	7830      	ldrb	r0, [r6, #0]
 802c3fe:	f000 000f 	and.w	r0, r0, #15
 802c402:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802c406:	eb05 0e00 	add.w	lr, r5, r0
 802c40a:	5c28      	ldrb	r0, [r5, r0]
 802c40c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802c410:	f89e e001 	ldrb.w	lr, [lr, #1]
 802c414:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802c418:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802c41c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802c420:	ea42 020e 	orr.w	r2, r2, lr
 802c424:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802c428:	f824 2b02 	strh.w	r2, [r4], #2
 802c42c:	9a03      	ldr	r2, [sp, #12]
 802c42e:	1c71      	adds	r1, r6, #1
 802c430:	f102 3eff 	add.w	lr, r2, #4294967295
 802c434:	f1be 0f01 	cmp.w	lr, #1
 802c438:	4620      	mov	r0, r4
 802c43a:	f104 0404 	add.w	r4, r4, #4
 802c43e:	dd36      	ble.n	802c4ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 802c440:	7808      	ldrb	r0, [r1, #0]
 802c442:	0900      	lsrs	r0, r0, #4
 802c444:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802c448:	eb05 0a00 	add.w	sl, r5, r0
 802c44c:	f1ae 0e02 	sub.w	lr, lr, #2
 802c450:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802c454:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802c458:	00d2      	lsls	r2, r2, #3
 802c45a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802c45e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c462:	ea49 0202 	orr.w	r2, r9, r2
 802c466:	f815 9000 	ldrb.w	r9, [r5, r0]
 802c46a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802c46e:	f824 2c04 	strh.w	r2, [r4, #-4]
 802c472:	f811 0b01 	ldrb.w	r0, [r1], #1
 802c476:	f000 000f 	and.w	r0, r0, #15
 802c47a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802c47e:	eb05 0a00 	add.w	sl, r5, r0
 802c482:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802c486:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802c48a:	00d2      	lsls	r2, r2, #3
 802c48c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802c490:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c494:	ea49 0202 	orr.w	r2, r9, r2
 802c498:	f815 9000 	ldrb.w	r9, [r5, r0]
 802c49c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802c4a0:	f824 2c02 	strh.w	r2, [r4, #-2]
 802c4a4:	e7c6      	b.n	802c434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802c4a6:	4631      	mov	r1, r6
 802c4a8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802c4ac:	e7c2      	b.n	802c434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802c4ae:	d111      	bne.n	802c4d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 802c4b0:	7809      	ldrb	r1, [r1, #0]
 802c4b2:	0909      	lsrs	r1, r1, #4
 802c4b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802c4b8:	186c      	adds	r4, r5, r1
 802c4ba:	5c69      	ldrb	r1, [r5, r1]
 802c4bc:	78a2      	ldrb	r2, [r4, #2]
 802c4be:	7864      	ldrb	r4, [r4, #1]
 802c4c0:	00e4      	lsls	r4, r4, #3
 802c4c2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802c4c6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802c4ca:	4322      	orrs	r2, r4
 802c4cc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802c4d0:	f820 2b02 	strh.w	r2, [r0], #2
 802c4d4:	9a03      	ldr	r2, [sp, #12]
 802c4d6:	f8bc 4000 	ldrh.w	r4, [ip]
 802c4da:	9905      	ldr	r1, [sp, #20]
 802c4dc:	1aa4      	subs	r4, r4, r2
 802c4de:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 802c4e2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c4e6:	440a      	add	r2, r1
 802c4e8:	fb92 f2f8 	sdiv	r2, r2, r8
 802c4ec:	4416      	add	r6, r2
 802c4ee:	e780      	b.n	802c3f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 802c4f0:	4b03      	ldr	r3, [pc, #12]	@ (802c500 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802c4f2:	6818      	ldr	r0, [r3, #0]
 802c4f4:	6803      	ldr	r3, [r0, #0]
 802c4f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802c4f8:	4798      	blx	r3
 802c4fa:	b00f      	add	sp, #60	@ 0x3c
 802c4fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c500:	20013884 	.word	0x20013884
 802c504:	2001387e 	.word	0x2001387e
 802c508:	fffff800 	.word	0xfffff800

0802c50c <CRC_Lock>:
 802c50c:	b530      	push	{r4, r5, lr}
 802c50e:	4a2d      	ldr	r2, [pc, #180]	@ (802c5c4 <CRC_Lock+0xb8>)
 802c510:	6813      	ldr	r3, [r2, #0]
 802c512:	f023 0301 	bic.w	r3, r3, #1
 802c516:	6013      	str	r3, [r2, #0]
 802c518:	4b2b      	ldr	r3, [pc, #172]	@ (802c5c8 <CRC_Lock+0xbc>)
 802c51a:	681c      	ldr	r4, [r3, #0]
 802c51c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 802c520:	4014      	ands	r4, r2
 802c522:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802c526:	42ac      	cmp	r4, r5
 802c528:	d005      	beq.n	802c536 <CRC_Lock+0x2a>
 802c52a:	681c      	ldr	r4, [r3, #0]
 802c52c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 802c530:	4014      	ands	r4, r2
 802c532:	42ac      	cmp	r4, r5
 802c534:	d125      	bne.n	802c582 <CRC_Lock+0x76>
 802c536:	4b25      	ldr	r3, [pc, #148]	@ (802c5cc <CRC_Lock+0xc0>)
 802c538:	681b      	ldr	r3, [r3, #0]
 802c53a:	2b00      	cmp	r3, #0
 802c53c:	d139      	bne.n	802c5b2 <CRC_Lock+0xa6>
 802c53e:	4b24      	ldr	r3, [pc, #144]	@ (802c5d0 <CRC_Lock+0xc4>)
 802c540:	681a      	ldr	r2, [r3, #0]
 802c542:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802c546:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802c54a:	d00d      	beq.n	802c568 <CRC_Lock+0x5c>
 802c54c:	681a      	ldr	r2, [r3, #0]
 802c54e:	f240 4483 	movw	r4, #1155	@ 0x483
 802c552:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802c556:	42a2      	cmp	r2, r4
 802c558:	d006      	beq.n	802c568 <CRC_Lock+0x5c>
 802c55a:	681b      	ldr	r3, [r3, #0]
 802c55c:	f240 4285 	movw	r2, #1157	@ 0x485
 802c560:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802c564:	4293      	cmp	r3, r2
 802c566:	d124      	bne.n	802c5b2 <CRC_Lock+0xa6>
 802c568:	4b1a      	ldr	r3, [pc, #104]	@ (802c5d4 <CRC_Lock+0xc8>)
 802c56a:	2201      	movs	r2, #1
 802c56c:	601a      	str	r2, [r3, #0]
 802c56e:	681a      	ldr	r2, [r3, #0]
 802c570:	2a00      	cmp	r2, #0
 802c572:	d1fc      	bne.n	802c56e <CRC_Lock+0x62>
 802c574:	4b18      	ldr	r3, [pc, #96]	@ (802c5d8 <CRC_Lock+0xcc>)
 802c576:	6018      	str	r0, [r3, #0]
 802c578:	6818      	ldr	r0, [r3, #0]
 802c57a:	1a43      	subs	r3, r0, r1
 802c57c:	4258      	negs	r0, r3
 802c57e:	4158      	adcs	r0, r3
 802c580:	e00e      	b.n	802c5a0 <CRC_Lock+0x94>
 802c582:	681b      	ldr	r3, [r3, #0]
 802c584:	4013      	ands	r3, r2
 802c586:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802c58a:	4293      	cmp	r3, r2
 802c58c:	d111      	bne.n	802c5b2 <CRC_Lock+0xa6>
 802c58e:	4b13      	ldr	r3, [pc, #76]	@ (802c5dc <CRC_Lock+0xd0>)
 802c590:	681b      	ldr	r3, [r3, #0]
 802c592:	f240 4286 	movw	r2, #1158	@ 0x486
 802c596:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802c59a:	4293      	cmp	r3, r2
 802c59c:	d001      	beq.n	802c5a2 <CRC_Lock+0x96>
 802c59e:	2000      	movs	r0, #0
 802c5a0:	bd30      	pop	{r4, r5, pc}
 802c5a2:	4b0f      	ldr	r3, [pc, #60]	@ (802c5e0 <CRC_Lock+0xd4>)
 802c5a4:	2201      	movs	r2, #1
 802c5a6:	601a      	str	r2, [r3, #0]
 802c5a8:	681a      	ldr	r2, [r3, #0]
 802c5aa:	2a00      	cmp	r2, #0
 802c5ac:	d1fc      	bne.n	802c5a8 <CRC_Lock+0x9c>
 802c5ae:	4b0d      	ldr	r3, [pc, #52]	@ (802c5e4 <CRC_Lock+0xd8>)
 802c5b0:	e7e1      	b.n	802c576 <CRC_Lock+0x6a>
 802c5b2:	4b0d      	ldr	r3, [pc, #52]	@ (802c5e8 <CRC_Lock+0xdc>)
 802c5b4:	2201      	movs	r2, #1
 802c5b6:	601a      	str	r2, [r3, #0]
 802c5b8:	681a      	ldr	r2, [r3, #0]
 802c5ba:	2a00      	cmp	r2, #0
 802c5bc:	d1fc      	bne.n	802c5b8 <CRC_Lock+0xac>
 802c5be:	4b0b      	ldr	r3, [pc, #44]	@ (802c5ec <CRC_Lock+0xe0>)
 802c5c0:	e7d9      	b.n	802c576 <CRC_Lock+0x6a>
 802c5c2:	bf00      	nop
 802c5c4:	e0002000 	.word	0xe0002000
 802c5c8:	e000ed00 	.word	0xe000ed00
 802c5cc:	e0042000 	.word	0xe0042000
 802c5d0:	5c001000 	.word	0x5c001000
 802c5d4:	58024c08 	.word	0x58024c08
 802c5d8:	58024c00 	.word	0x58024c00
 802c5dc:	46008ff0 	.word	0x46008ff0
 802c5e0:	46024c08 	.word	0x46024c08
 802c5e4:	46024c00 	.word	0x46024c00
 802c5e8:	40023008 	.word	0x40023008
 802c5ec:	40023000 	.word	0x40023000

0802c5f0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802c5f0:	6101      	str	r1, [r0, #16]
 802c5f2:	4770      	bx	lr

0802c5f4 <_ZN8touchgfx8Gestures4tickEv>:
 802c5f4:	7b83      	ldrb	r3, [r0, #14]
 802c5f6:	b14b      	cbz	r3, 802c60c <_ZN8touchgfx8Gestures4tickEv+0x18>
 802c5f8:	8903      	ldrh	r3, [r0, #8]
 802c5fa:	3301      	adds	r3, #1
 802c5fc:	b29b      	uxth	r3, r3
 802c5fe:	2b07      	cmp	r3, #7
 802c600:	8103      	strh	r3, [r0, #8]
 802c602:	bf81      	itttt	hi
 802c604:	2300      	movhi	r3, #0
 802c606:	8143      	strhhi	r3, [r0, #10]
 802c608:	8183      	strhhi	r3, [r0, #12]
 802c60a:	7383      	strbhi	r3, [r0, #14]
 802c60c:	4770      	bx	lr
	...

0802c610 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802c610:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802c614:	4698      	mov	r8, r3
 802c616:	8883      	ldrh	r3, [r0, #4]
 802c618:	f8ad 3006 	strh.w	r3, [sp, #6]
 802c61c:	eba8 0303 	sub.w	r3, r8, r3
 802c620:	b21b      	sxth	r3, r3
 802c622:	4604      	mov	r4, r0
 802c624:	2b00      	cmp	r3, #0
 802c626:	4617      	mov	r7, r2
 802c628:	4a18      	ldr	r2, [pc, #96]	@ (802c68c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802c62a:	9200      	str	r2, [sp, #0]
 802c62c:	bfb8      	it	lt
 802c62e:	425b      	neglt	r3, r3
 802c630:	8aa2      	ldrh	r2, [r4, #20]
 802c632:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802c636:	f8ad 800a 	strh.w	r8, [sp, #10]
 802c63a:	b21b      	sxth	r3, r3
 802c63c:	460e      	mov	r6, r1
 802c63e:	4293      	cmp	r3, r2
 802c640:	88c1      	ldrh	r1, [r0, #6]
 802c642:	f8ad 1008 	strh.w	r1, [sp, #8]
 802c646:	f04f 0000 	mov.w	r0, #0
 802c64a:	f88d 0004 	strb.w	r0, [sp, #4]
 802c64e:	f8ad 500c 	strh.w	r5, [sp, #12]
 802c652:	dc07      	bgt.n	802c664 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802c654:	1a69      	subs	r1, r5, r1
 802c656:	b209      	sxth	r1, r1
 802c658:	2900      	cmp	r1, #0
 802c65a:	bfb8      	it	lt
 802c65c:	4249      	neglt	r1, r1
 802c65e:	b209      	sxth	r1, r1
 802c660:	428a      	cmp	r2, r1
 802c662:	da10      	bge.n	802c686 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802c664:	6920      	ldr	r0, [r4, #16]
 802c666:	6803      	ldr	r3, [r0, #0]
 802c668:	4669      	mov	r1, sp
 802c66a:	685b      	ldr	r3, [r3, #4]
 802c66c:	4798      	blx	r3
 802c66e:	eba8 0606 	sub.w	r6, r8, r6
 802c672:	2300      	movs	r3, #0
 802c674:	1bef      	subs	r7, r5, r7
 802c676:	2001      	movs	r0, #1
 802c678:	8123      	strh	r3, [r4, #8]
 802c67a:	8166      	strh	r6, [r4, #10]
 802c67c:	81a7      	strh	r7, [r4, #12]
 802c67e:	f8a4 8004 	strh.w	r8, [r4, #4]
 802c682:	80e5      	strh	r5, [r4, #6]
 802c684:	73a0      	strb	r0, [r4, #14]
 802c686:	b004      	add	sp, #16
 802c688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c68c:	080325a4 	.word	0x080325a4

0802c690 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802c690:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c692:	461e      	mov	r6, r3
 802c694:	1e4b      	subs	r3, r1, #1
 802c696:	2b01      	cmp	r3, #1
 802c698:	b085      	sub	sp, #20
 802c69a:	4604      	mov	r4, r0
 802c69c:	460d      	mov	r5, r1
 802c69e:	4617      	mov	r7, r2
 802c6a0:	d84b      	bhi.n	802c73a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802c6a2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802c6a6:	1cd3      	adds	r3, r2, #3
 802c6a8:	b29b      	uxth	r3, r3
 802c6aa:	2b06      	cmp	r3, #6
 802c6ac:	d916      	bls.n	802c6dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802c6ae:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 802c750 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802c6b2:	f8cd c004 	str.w	ip, [sp, #4]
 802c6b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802c6ba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802c6be:	6900      	ldr	r0, [r0, #16]
 802c6c0:	f8ad 100c 	strh.w	r1, [sp, #12]
 802c6c4:	f04f 0c00 	mov.w	ip, #0
 802c6c8:	f88d c008 	strb.w	ip, [sp, #8]
 802c6cc:	f8ad 200a 	strh.w	r2, [sp, #10]
 802c6d0:	f8ad 300e 	strh.w	r3, [sp, #14]
 802c6d4:	6803      	ldr	r3, [r0, #0]
 802c6d6:	a901      	add	r1, sp, #4
 802c6d8:	689b      	ldr	r3, [r3, #8]
 802c6da:	4798      	blx	r3
 802c6dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c6e0:	1cd3      	adds	r3, r2, #3
 802c6e2:	b29b      	uxth	r3, r3
 802c6e4:	2b06      	cmp	r3, #6
 802c6e6:	d916      	bls.n	802c716 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802c6e8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 802c750 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802c6ec:	f8cd c004 	str.w	ip, [sp, #4]
 802c6f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802c6f4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802c6f8:	6920      	ldr	r0, [r4, #16]
 802c6fa:	f8ad 100c 	strh.w	r1, [sp, #12]
 802c6fe:	f04f 0c01 	mov.w	ip, #1
 802c702:	f88d c008 	strb.w	ip, [sp, #8]
 802c706:	f8ad 200a 	strh.w	r2, [sp, #10]
 802c70a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802c70e:	6803      	ldr	r3, [r0, #0]
 802c710:	a901      	add	r1, sp, #4
 802c712:	689b      	ldr	r3, [r3, #8]
 802c714:	4798      	blx	r3
 802c716:	4b0d      	ldr	r3, [pc, #52]	@ (802c74c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802c718:	9301      	str	r3, [sp, #4]
 802c71a:	6920      	ldr	r0, [r4, #16]
 802c71c:	f88d 5008 	strb.w	r5, [sp, #8]
 802c720:	2300      	movs	r3, #0
 802c722:	f8ad 700a 	strh.w	r7, [sp, #10]
 802c726:	f8ad 600c 	strh.w	r6, [sp, #12]
 802c72a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802c72e:	6803      	ldr	r3, [r0, #0]
 802c730:	a901      	add	r1, sp, #4
 802c732:	681b      	ldr	r3, [r3, #0]
 802c734:	4798      	blx	r3
 802c736:	b005      	add	sp, #20
 802c738:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c73a:	2900      	cmp	r1, #0
 802c73c:	d1eb      	bne.n	802c716 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802c73e:	80a2      	strh	r2, [r4, #4]
 802c740:	80c6      	strh	r6, [r0, #6]
 802c742:	60a1      	str	r1, [r4, #8]
 802c744:	81a1      	strh	r1, [r4, #12]
 802c746:	73a1      	strb	r1, [r4, #14]
 802c748:	e7e5      	b.n	802c716 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802c74a:	bf00      	nop
 802c74c:	08032590 	.word	0x08032590
 802c750:	080325b8 	.word	0x080325b8

0802c754 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 802c754:	10c9      	asrs	r1, r1, #3
 802c756:	2900      	cmp	r1, #0
 802c758:	bfb8      	it	lt
 802c75a:	4249      	neglt	r1, r1
 802c75c:	2801      	cmp	r0, #1
 802c75e:	d108      	bne.n	802c772 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802c760:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802c764:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 802c768:	4601      	mov	r1, r0
 802c76a:	dd02      	ble.n	802c772 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802c76c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 802c770:	4770      	bx	lr
 802c772:	29ff      	cmp	r1, #255	@ 0xff
 802c774:	bfa8      	it	ge
 802c776:	21ff      	movge	r1, #255	@ 0xff
 802c778:	4608      	mov	r0, r1
 802c77a:	4770      	bx	lr

0802c77c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802c77c:	b410      	push	{r4}
 802c77e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802c782:	429c      	cmp	r4, r3
 802c784:	d803      	bhi.n	802c78e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802c786:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c78a:	f7ec bbf5 	b.w	8018f78 <_ZN8touchgfx7Outline6lineToEii>
 802c78e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c792:	4770      	bx	lr

0802c794 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802c794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c798:	b08b      	sub	sp, #44	@ 0x2c
 802c79a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802c79e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 802c7a2:	9308      	str	r3, [sp, #32]
 802c7a4:	4606      	mov	r6, r0
 802c7a6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 802c7aa:	9309      	str	r3, [sp, #36]	@ 0x24
 802c7ac:	468a      	mov	sl, r1
 802c7ae:	f7ec fd50 	bl	8019252 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802c7b2:	68b5      	ldr	r5, [r6, #8]
 802c7b4:	4604      	mov	r4, r0
 802c7b6:	2d00      	cmp	r5, #0
 802c7b8:	d044      	beq.n	802c844 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802c7ba:	6873      	ldr	r3, [r6, #4]
 802c7bc:	42ab      	cmp	r3, r5
 802c7be:	d33d      	bcc.n	802c83c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802c7c0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802c7c4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 802c7c8:	eb02 0b03 	add.w	fp, r2, r3
 802c7cc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802c7d0:	fb02 1203 	mla	r2, r2, r3, r1
 802c7d4:	9205      	str	r2, [sp, #20]
 802c7d6:	1e6a      	subs	r2, r5, #1
 802c7d8:	9204      	str	r2, [sp, #16]
 802c7da:	f04f 0800 	mov.w	r8, #0
 802c7de:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802c7e2:	f9b4 7000 	ldrsh.w	r7, [r4]
 802c7e6:	454b      	cmp	r3, r9
 802c7e8:	463a      	mov	r2, r7
 802c7ea:	d008      	beq.n	802c7fe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802c7ec:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 802c7f0:	eb03 0b09 	add.w	fp, r3, r9
 802c7f4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802c7f8:	fb03 1309 	mla	r3, r3, r9, r1
 802c7fc:	9305      	str	r3, [sp, #20]
 802c7fe:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802c802:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802c806:	4498      	add	r8, r3
 802c808:	9b04      	ldr	r3, [sp, #16]
 802c80a:	3b01      	subs	r3, #1
 802c80c:	9304      	str	r3, [sp, #16]
 802c80e:	9b04      	ldr	r3, [sp, #16]
 802c810:	3301      	adds	r3, #1
 802c812:	d015      	beq.n	802c840 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802c814:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802c818:	42bb      	cmp	r3, r7
 802c81a:	d117      	bne.n	802c84c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802c81c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802c820:	9b04      	ldr	r3, [sp, #16]
 802c822:	4548      	cmp	r0, r9
 802c824:	f103 33ff 	add.w	r3, r3, #4294967295
 802c828:	d17f      	bne.n	802c92a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802c82a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802c82e:	4401      	add	r1, r0
 802c830:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802c834:	4480      	add	r8, r0
 802c836:	e7e9      	b.n	802c80c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802c838:	461f      	mov	r7, r3
 802c83a:	e044      	b.n	802c8c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802c83c:	2000      	movs	r0, #0
 802c83e:	e002      	b.n	802c846 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802c840:	2900      	cmp	r1, #0
 802c842:	d16f      	bne.n	802c924 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 802c844:	2001      	movs	r0, #1
 802c846:	b00b      	add	sp, #44	@ 0x2c
 802c848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c84c:	2900      	cmp	r1, #0
 802c84e:	d030      	beq.n	802c8b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802c850:	2f00      	cmp	r7, #0
 802c852:	db29      	blt.n	802c8a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802c854:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802c858:	42bb      	cmp	r3, r7
 802c85a:	dd25      	ble.n	802c8a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802c85c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802c860:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802c864:	f7ff ff76 	bl	802c754 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802c868:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802c86a:	fb10 f003 	smulbb	r0, r0, r3
 802c86e:	b280      	uxth	r0, r0
 802c870:	1c41      	adds	r1, r0, #1
 802c872:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802c876:	1209      	asrs	r1, r1, #8
 802c878:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802c87c:	d014      	beq.n	802c8a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802c87e:	9808      	ldr	r0, [sp, #32]
 802c880:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802c882:	b2c9      	uxtb	r1, r1
 802c884:	b2ba      	uxth	r2, r7
 802c886:	9102      	str	r1, [sp, #8]
 802c888:	2101      	movs	r1, #1
 802c88a:	4413      	add	r3, r2
 802c88c:	9101      	str	r1, [sp, #4]
 802c88e:	4402      	add	r2, r0
 802c890:	fa0f f18b 	sxth.w	r1, fp
 802c894:	f8da 0000 	ldr.w	r0, [sl]
 802c898:	9100      	str	r1, [sp, #0]
 802c89a:	6941      	ldr	r1, [r0, #20]
 802c89c:	b21b      	sxth	r3, r3
 802c89e:	460d      	mov	r5, r1
 802c8a0:	b212      	sxth	r2, r2
 802c8a2:	9905      	ldr	r1, [sp, #20]
 802c8a4:	4650      	mov	r0, sl
 802c8a6:	47a8      	blx	r5
 802c8a8:	9b04      	ldr	r3, [sp, #16]
 802c8aa:	3301      	adds	r3, #1
 802c8ac:	f107 0201 	add.w	r2, r7, #1
 802c8b0:	d0c8      	beq.n	802c844 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802c8b2:	f9b4 7000 	ldrsh.w	r7, [r4]
 802c8b6:	1abb      	subs	r3, r7, r2
 802c8b8:	2b00      	cmp	r3, #0
 802c8ba:	dd31      	ble.n	802c920 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802c8bc:	2a00      	cmp	r2, #0
 802c8be:	dabb      	bge.n	802c838 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802c8c0:	2f00      	cmp	r7, #0
 802c8c2:	dd2d      	ble.n	802c920 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802c8c4:	2200      	movs	r2, #0
 802c8c6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802c8ca:	19d1      	adds	r1, r2, r7
 802c8cc:	4299      	cmp	r1, r3
 802c8ce:	db02      	blt.n	802c8d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802c8d0:	1a9f      	subs	r7, r3, r2
 802c8d2:	2f00      	cmp	r7, #0
 802c8d4:	dd24      	ble.n	802c920 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802c8d6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802c8da:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802c8de:	f7ff ff39 	bl	802c754 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802c8e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802c8e4:	fb10 f003 	smulbb	r0, r0, r3
 802c8e8:	b280      	uxth	r0, r0
 802c8ea:	1c41      	adds	r1, r0, #1
 802c8ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802c8f0:	1209      	asrs	r1, r1, #8
 802c8f2:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802c8f6:	d013      	beq.n	802c920 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802c8f8:	9808      	ldr	r0, [sp, #32]
 802c8fa:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802c8fc:	b292      	uxth	r2, r2
 802c8fe:	b2c9      	uxtb	r1, r1
 802c900:	4413      	add	r3, r2
 802c902:	9102      	str	r1, [sp, #8]
 802c904:	4402      	add	r2, r0
 802c906:	b23f      	sxth	r7, r7
 802c908:	f8da 0000 	ldr.w	r0, [sl]
 802c90c:	9701      	str	r7, [sp, #4]
 802c90e:	fa0f f18b 	sxth.w	r1, fp
 802c912:	9100      	str	r1, [sp, #0]
 802c914:	6947      	ldr	r7, [r0, #20]
 802c916:	9905      	ldr	r1, [sp, #20]
 802c918:	b21b      	sxth	r3, r3
 802c91a:	b212      	sxth	r2, r2
 802c91c:	4650      	mov	r0, sl
 802c91e:	47b8      	blx	r7
 802c920:	464b      	mov	r3, r9
 802c922:	e75c      	b.n	802c7de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802c924:	2f00      	cmp	r7, #0
 802c926:	da95      	bge.n	802c854 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802c928:	e78c      	b.n	802c844 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802c92a:	2900      	cmp	r1, #0
 802c92c:	d0f8      	beq.n	802c920 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802c92e:	e78f      	b.n	802c850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802c930 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 802c930:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802c934:	461e      	mov	r6, r3
 802c936:	4b36      	ldr	r3, [pc, #216]	@ (802ca10 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 802c938:	e9c0 3100 	strd	r3, r1, [r0]
 802c93c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 802c940:	8103      	strh	r3, [r0, #8]
 802c942:	2500      	movs	r5, #0
 802c944:	f89d 3020 	ldrb.w	r3, [sp, #32]
 802c948:	7283      	strb	r3, [r0, #10]
 802c94a:	f100 0814 	add.w	r8, r0, #20
 802c94e:	4604      	mov	r4, r0
 802c950:	8185      	strh	r5, [r0, #12]
 802c952:	81c5      	strh	r5, [r0, #14]
 802c954:	8205      	strh	r5, [r0, #16]
 802c956:	8245      	strh	r5, [r0, #18]
 802c958:	4640      	mov	r0, r8
 802c95a:	4617      	mov	r7, r2
 802c95c:	f7eb fe44 	bl	80185e8 <_ZN8touchgfx7OutlineC1Ev>
 802c960:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 802c964:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802c968:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 802c96c:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 802c970:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 802c974:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 802c978:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 802c97c:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 802c980:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 802c984:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 802c988:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 802c98c:	6830      	ldr	r0, [r6, #0]
 802c98e:	6871      	ldr	r1, [r6, #4]
 802c990:	8872      	ldrh	r2, [r6, #2]
 802c992:	8835      	ldrh	r5, [r6, #0]
 802c994:	466b      	mov	r3, sp
 802c996:	c303      	stmia	r3!, {r0, r1}
 802c998:	887b      	ldrh	r3, [r7, #2]
 802c99a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 802c99e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 802c9a2:	4413      	add	r3, r2
 802c9a4:	883a      	ldrh	r2, [r7, #0]
 802c9a6:	81e3      	strh	r3, [r4, #14]
 802c9a8:	442a      	add	r2, r5
 802c9aa:	81a2      	strh	r2, [r4, #12]
 802c9ac:	8220      	strh	r0, [r4, #16]
 802c9ae:	8261      	strh	r1, [r4, #18]
 802c9b0:	4668      	mov	r0, sp
 802c9b2:	4639      	mov	r1, r7
 802c9b4:	f7ee f81e 	bl	801a9f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c9b8:	f104 000c 	add.w	r0, r4, #12
 802c9bc:	f7ed ffd6 	bl	801a96c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c9c0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802c9c4:	f8bd 2000 	ldrh.w	r2, [sp]
 802c9c8:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 802c9cc:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 802c9d0:	4640      	mov	r0, r8
 802c9d2:	f7eb fded 	bl	80185b0 <_ZN8touchgfx7Outline5resetEv>
 802c9d6:	f9bd 3000 	ldrsh.w	r3, [sp]
 802c9da:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802c9de:	015b      	lsls	r3, r3, #5
 802c9e0:	64e3      	str	r3, [r4, #76]	@ 0x4c
 802c9e2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802c9e6:	015b      	lsls	r3, r3, #5
 802c9e8:	6523      	str	r3, [r4, #80]	@ 0x50
 802c9ea:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802c9ee:	015b      	lsls	r3, r3, #5
 802c9f0:	6563      	str	r3, [r4, #84]	@ 0x54
 802c9f2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802c9f6:	015b      	lsls	r3, r3, #5
 802c9f8:	65a3      	str	r3, [r4, #88]	@ 0x58
 802c9fa:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802c9fe:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 802ca02:	4620      	mov	r0, r4
 802ca04:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 802ca08:	b002      	add	sp, #8
 802ca0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ca0e:	bf00      	nop
 802ca10:	080328f4 	.word	0x080328f4

0802ca14 <_ZN8touchgfx6Canvas5closeEv>:
 802ca14:	b538      	push	{r3, r4, r5, lr}
 802ca16:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802ca1a:	4604      	mov	r4, r0
 802ca1c:	b193      	cbz	r3, 802ca44 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802ca1e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 802ca22:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 802ca26:	4213      	tst	r3, r2
 802ca28:	d10c      	bne.n	802ca44 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802ca2a:	f100 0514 	add.w	r5, r0, #20
 802ca2e:	b123      	cbz	r3, 802ca3a <_ZN8touchgfx6Canvas5closeEv+0x26>
 802ca30:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 802ca34:	4628      	mov	r0, r5
 802ca36:	f7ff fea1 	bl	802c77c <_ZN8touchgfx10Rasterizer6lineToEii>
 802ca3a:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 802ca3e:	4628      	mov	r0, r5
 802ca40:	f7ff fe9c 	bl	802c77c <_ZN8touchgfx10Rasterizer6lineToEii>
 802ca44:	2300      	movs	r3, #0
 802ca46:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802ca4a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802ca4e:	4298      	cmp	r0, r3
 802ca50:	bf34      	ite	cc
 802ca52:	2000      	movcc	r0, #0
 802ca54:	2001      	movcs	r0, #1
 802ca56:	bd38      	pop	{r3, r4, r5, pc}

0802ca58 <_ZN8touchgfx6Canvas6renderEh>:
 802ca58:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802ca5c:	7a85      	ldrb	r5, [r0, #10]
 802ca5e:	4369      	muls	r1, r5
 802ca60:	1c4d      	adds	r5, r1, #1
 802ca62:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802ca66:	122d      	asrs	r5, r5, #8
 802ca68:	4604      	mov	r4, r0
 802ca6a:	f000 8099 	beq.w	802cba0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802ca6e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 802ca72:	2b00      	cmp	r3, #0
 802ca74:	f000 8094 	beq.w	802cba0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802ca78:	f7ff ffcc 	bl	802ca14 <_ZN8touchgfx6Canvas5closeEv>
 802ca7c:	4607      	mov	r7, r0
 802ca7e:	2800      	cmp	r0, #0
 802ca80:	d045      	beq.n	802cb0e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802ca82:	6860      	ldr	r0, [r4, #4]
 802ca84:	4e47      	ldr	r6, [pc, #284]	@ (802cba4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802ca86:	6803      	ldr	r3, [r0, #0]
 802ca88:	6837      	ldr	r7, [r6, #0]
 802ca8a:	689b      	ldr	r3, [r3, #8]
 802ca8c:	4798      	blx	r3
 802ca8e:	4601      	mov	r1, r0
 802ca90:	4638      	mov	r0, r7
 802ca92:	f7e9 f84b 	bl	8015b2c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802ca96:	4607      	mov	r7, r0
 802ca98:	f7d7 f884 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 802ca9c:	6803      	ldr	r3, [r0, #0]
 802ca9e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802caa0:	4798      	blx	r3
 802caa2:	4680      	mov	r8, r0
 802caa4:	f7d7 f87e 	bl	8003ba4 <_ZN8touchgfx3HAL3lcdEv>
 802caa8:	6803      	ldr	r3, [r0, #0]
 802caaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802caac:	4798      	blx	r3
 802caae:	280b      	cmp	r0, #11
 802cab0:	d85b      	bhi.n	802cb6a <_ZN8touchgfx6Canvas6renderEh+0x112>
 802cab2:	e8df f000 	tbb	[pc, r0]
 802cab6:	5c51      	.short	0x5c51
 802cab8:	305a066c 	.word	0x305a066c
 802cabc:	65656540 	.word	0x65656540
 802cac0:	6565      	.short	0x6565
 802cac2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802cac6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802caca:	2208      	movs	r2, #8
 802cacc:	fb91 f2f2 	sdiv	r2, r1, r2
 802cad0:	fb08 2303 	mla	r3, r8, r3, r2
 802cad4:	441f      	add	r7, r3
 802cad6:	424b      	negs	r3, r1
 802cad8:	f003 0307 	and.w	r3, r3, #7
 802cadc:	f001 0107 	and.w	r1, r1, #7
 802cae0:	bf58      	it	pl
 802cae2:	4259      	negpl	r1, r3
 802cae4:	b2c9      	uxtb	r1, r1
 802cae6:	b2ed      	uxtb	r5, r5
 802cae8:	463a      	mov	r2, r7
 802caea:	e9cd 1500 	strd	r1, r5, [sp]
 802caee:	fa0f f388 	sxth.w	r3, r8
 802caf2:	6861      	ldr	r1, [r4, #4]
 802caf4:	f104 0014 	add.w	r0, r4, #20
 802caf8:	f7ff fe4c 	bl	802c794 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802cafc:	4607      	mov	r7, r0
 802cafe:	6860      	ldr	r0, [r4, #4]
 802cb00:	6803      	ldr	r3, [r0, #0]
 802cb02:	691b      	ldr	r3, [r3, #16]
 802cb04:	4798      	blx	r3
 802cb06:	6830      	ldr	r0, [r6, #0]
 802cb08:	6803      	ldr	r3, [r0, #0]
 802cb0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802cb0c:	4798      	blx	r3
 802cb0e:	4638      	mov	r0, r7
 802cb10:	b002      	add	sp, #8
 802cb12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cb16:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802cb1a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802cb1e:	2204      	movs	r2, #4
 802cb20:	fb91 f2f2 	sdiv	r2, r1, r2
 802cb24:	fb08 2303 	mla	r3, r8, r3, r2
 802cb28:	441f      	add	r7, r3
 802cb2a:	424b      	negs	r3, r1
 802cb2c:	f003 0303 	and.w	r3, r3, #3
 802cb30:	f001 0103 	and.w	r1, r1, #3
 802cb34:	e7d4      	b.n	802cae0 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802cb36:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802cb3a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802cb3e:	2900      	cmp	r1, #0
 802cb40:	f04f 0202 	mov.w	r2, #2
 802cb44:	fb91 f2f2 	sdiv	r2, r1, r2
 802cb48:	f001 0101 	and.w	r1, r1, #1
 802cb4c:	fb08 2303 	mla	r3, r8, r3, r2
 802cb50:	441f      	add	r7, r3
 802cb52:	bfb8      	it	lt
 802cb54:	4249      	neglt	r1, r1
 802cb56:	e7c5      	b.n	802cae4 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802cb58:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802cb5c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cb60:	fb08 f303 	mul.w	r3, r8, r3
 802cb64:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802cb68:	441f      	add	r7, r3
 802cb6a:	2100      	movs	r1, #0
 802cb6c:	e7bb      	b.n	802cae6 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802cb6e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802cb72:	fb08 f203 	mul.w	r2, r8, r3
 802cb76:	89a3      	ldrh	r3, [r4, #12]
 802cb78:	2103      	movs	r1, #3
 802cb7a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802cb7e:	e7f3      	b.n	802cb68 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802cb80:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802cb84:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cb88:	fb08 2303 	mla	r3, r8, r3, r2
 802cb8c:	e7ec      	b.n	802cb68 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802cb8e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802cb92:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cb96:	fb08 f303 	mul.w	r3, r8, r3
 802cb9a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802cb9e:	e7e3      	b.n	802cb68 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802cba0:	2701      	movs	r7, #1
 802cba2:	e7b4      	b.n	802cb0e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802cba4:	20013884 	.word	0x20013884

0802cba8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802cba8:	b510      	push	{r4, lr}
 802cbaa:	4b06      	ldr	r3, [pc, #24]	@ (802cbc4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802cbac:	781b      	ldrb	r3, [r3, #0]
 802cbae:	2b01      	cmp	r3, #1
 802cbb0:	d107      	bne.n	802cbc2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 802cbb2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 802cbb6:	680b      	ldr	r3, [r1, #0]
 802cbb8:	6814      	ldr	r4, [r2, #0]
 802cbba:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802cbbe:	6013      	str	r3, [r2, #0]
 802cbc0:	600c      	str	r4, [r1, #0]
 802cbc2:	bd10      	pop	{r4, pc}
 802cbc4:	2001387c 	.word	0x2001387c

0802cbc8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802cbc8:	b513      	push	{r0, r1, r4, lr}
 802cbca:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802cbce:	4604      	mov	r4, r0
 802cbd0:	e9cd 2100 	strd	r2, r1, [sp]
 802cbd4:	b9a3      	cbnz	r3, 802cc00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802cbd6:	466a      	mov	r2, sp
 802cbd8:	a901      	add	r1, sp, #4
 802cbda:	4620      	mov	r0, r4
 802cbdc:	f7ff ffe4 	bl	802cba8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802cbe0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802cbe2:	9901      	ldr	r1, [sp, #4]
 802cbe4:	9a00      	ldr	r2, [sp, #0]
 802cbe6:	1ac9      	subs	r1, r1, r3
 802cbe8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802cbea:	9101      	str	r1, [sp, #4]
 802cbec:	1ad2      	subs	r2, r2, r3
 802cbee:	2a00      	cmp	r2, #0
 802cbf0:	9200      	str	r2, [sp, #0]
 802cbf2:	da0b      	bge.n	802cc0c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802cbf4:	2301      	movs	r3, #1
 802cbf6:	2900      	cmp	r1, #0
 802cbf8:	da0e      	bge.n	802cc18 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802cbfa:	f043 0304 	orr.w	r3, r3, #4
 802cbfe:	e013      	b.n	802cc28 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802cc00:	f7ff ff08 	bl	802ca14 <_ZN8touchgfx6Canvas5closeEv>
 802cc04:	2800      	cmp	r0, #0
 802cc06:	d1e6      	bne.n	802cbd6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802cc08:	b002      	add	sp, #8
 802cc0a:	bd10      	pop	{r4, pc}
 802cc0c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802cc0e:	429a      	cmp	r2, r3
 802cc10:	bfac      	ite	ge
 802cc12:	2302      	movge	r3, #2
 802cc14:	2300      	movlt	r3, #0
 802cc16:	e7ee      	b.n	802cbf6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802cc18:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802cc1a:	4281      	cmp	r1, r0
 802cc1c:	bfac      	ite	ge
 802cc1e:	2008      	movge	r0, #8
 802cc20:	2000      	movlt	r0, #0
 802cc22:	4318      	orrs	r0, r3
 802cc24:	b2c3      	uxtb	r3, r0
 802cc26:	b158      	cbz	r0, 802cc40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802cc28:	2200      	movs	r2, #0
 802cc2a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802cc2e:	9901      	ldr	r1, [sp, #4]
 802cc30:	9a00      	ldr	r2, [sp, #0]
 802cc32:	66e1      	str	r1, [r4, #108]	@ 0x6c
 802cc34:	6722      	str	r2, [r4, #112]	@ 0x70
 802cc36:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802cc3a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802cc3e:	e7e3      	b.n	802cc08 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802cc40:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802cc44:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802cc48:	4298      	cmp	r0, r3
 802cc4a:	d803      	bhi.n	802cc54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802cc4c:	f104 0014 	add.w	r0, r4, #20
 802cc50:	f7ec f9ac 	bl	8018fac <_ZN8touchgfx7Outline6moveToEii>
 802cc54:	2301      	movs	r3, #1
 802cc56:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802cc5a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802cc5e:	2300      	movs	r3, #0
 802cc60:	e7e5      	b.n	802cc2e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802cc62 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802cc62:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802cc64:	ab02      	add	r3, sp, #8
 802cc66:	4604      	mov	r4, r0
 802cc68:	f843 2d08 	str.w	r2, [r3, #-8]!
 802cc6c:	9101      	str	r1, [sp, #4]
 802cc6e:	461a      	mov	r2, r3
 802cc70:	a901      	add	r1, sp, #4
 802cc72:	f7ff ff99 	bl	802cba8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802cc76:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802cc78:	9901      	ldr	r1, [sp, #4]
 802cc7a:	9a00      	ldr	r2, [sp, #0]
 802cc7c:	1ac9      	subs	r1, r1, r3
 802cc7e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802cc80:	9101      	str	r1, [sp, #4]
 802cc82:	1ad2      	subs	r2, r2, r3
 802cc84:	2a00      	cmp	r2, #0
 802cc86:	9200      	str	r2, [sp, #0]
 802cc88:	db1c      	blt.n	802ccc4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802cc8a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802cc8c:	429a      	cmp	r2, r3
 802cc8e:	bfac      	ite	ge
 802cc90:	2002      	movge	r0, #2
 802cc92:	2000      	movlt	r0, #0
 802cc94:	2900      	cmp	r1, #0
 802cc96:	db17      	blt.n	802ccc8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802cc98:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802cc9a:	4299      	cmp	r1, r3
 802cc9c:	bfac      	ite	ge
 802cc9e:	2308      	movge	r3, #8
 802cca0:	2300      	movlt	r3, #0
 802cca2:	4303      	orrs	r3, r0
 802cca4:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 802cca8:	b2dd      	uxtb	r5, r3
 802ccaa:	b978      	cbnz	r0, 802cccc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802ccac:	f104 0014 	add.w	r0, r4, #20
 802ccb0:	f7ff fd64 	bl	802c77c <_ZN8touchgfx10Rasterizer6lineToEii>
 802ccb4:	9b01      	ldr	r3, [sp, #4]
 802ccb6:	6623      	str	r3, [r4, #96]	@ 0x60
 802ccb8:	9b00      	ldr	r3, [sp, #0]
 802ccba:	6663      	str	r3, [r4, #100]	@ 0x64
 802ccbc:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 802ccc0:	b002      	add	sp, #8
 802ccc2:	bd70      	pop	{r4, r5, r6, pc}
 802ccc4:	2001      	movs	r0, #1
 802ccc6:	e7e5      	b.n	802cc94 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802ccc8:	2304      	movs	r3, #4
 802ccca:	e7ea      	b.n	802cca2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802cccc:	b113      	cbz	r3, 802ccd4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802ccce:	ea10 0305 	ands.w	r3, r0, r5
 802ccd2:	d11c      	bne.n	802cd0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802ccd4:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 802ccd8:	f104 0614 	add.w	r6, r4, #20
 802ccdc:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 802cce0:	b98b      	cbnz	r3, 802cd06 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802cce2:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802cce6:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802ccea:	4298      	cmp	r0, r3
 802ccec:	d802      	bhi.n	802ccf4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802ccee:	4630      	mov	r0, r6
 802ccf0:	f7ec f95c 	bl	8018fac <_ZN8touchgfx7Outline6moveToEii>
 802ccf4:	2301      	movs	r3, #1
 802ccf6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802ccfa:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802ccfe:	e9dd 2100 	ldrd	r2, r1, [sp]
 802cd02:	4630      	mov	r0, r6
 802cd04:	e7d4      	b.n	802ccb0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802cd06:	4630      	mov	r0, r6
 802cd08:	f7ff fd38 	bl	802c77c <_ZN8touchgfx10Rasterizer6lineToEii>
 802cd0c:	e7f7      	b.n	802ccfe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802cd0e:	461d      	mov	r5, r3
 802cd10:	e7d0      	b.n	802ccb4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802cd14 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 802cd14:	b538      	push	{r3, r4, r5, lr}
 802cd16:	ed2d 8b10 	vpush	{d8-d15}
 802cd1a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 802cd1e:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 802ce88 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 802cd22:	4605      	mov	r5, r0
 802cd24:	eeb0 ca40 	vmov.f32	s24, s0
 802cd28:	eef0 ca60 	vmov.f32	s25, s1
 802cd2c:	eeb0 da41 	vmov.f32	s26, s2
 802cd30:	eef0 da61 	vmov.f32	s27, s3
 802cd34:	eeb0 ea42 	vmov.f32	s28, s4
 802cd38:	eef0 ea62 	vmov.f32	s29, s5
 802cd3c:	460c      	mov	r4, r1
 802cd3e:	eef0 aa6b 	vmov.f32	s21, s23
 802cd42:	2c08      	cmp	r4, #8
 802cd44:	d86e      	bhi.n	802ce24 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802cd46:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802cd4a:	ee7d 7aee 	vsub.f32	s15, s27, s29
 802cd4e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 802cd52:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802cd56:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802cd5a:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802cd5e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802cd62:	ee7c faad 	vadd.f32	s31, s25, s27
 802cd66:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802cd6a:	ee3d aaae 	vadd.f32	s20, s27, s29
 802cd6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802cd72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cd76:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802cd7a:	ee6f faab 	vmul.f32	s31, s31, s23
 802cd7e:	ee69 9aab 	vmul.f32	s19, s19, s23
 802cd82:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802cd86:	bf48      	it	mi
 802cd88:	eef1 7a67 	vnegmi.f32	s15, s15
 802cd8c:	ee7f 8a29 	vadd.f32	s17, s30, s19
 802cd90:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 802cd94:	eef4 7acb 	vcmpe.f32	s15, s22
 802cd98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cd9c:	ee68 8aab 	vmul.f32	s17, s17, s23
 802cda0:	ee29 9a2b 	vmul.f32	s18, s18, s23
 802cda4:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 802cda8:	dd3f      	ble.n	802ce2a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802cdaa:	ee27 7a07 	vmul.f32	s14, s14, s14
 802cdae:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802cdb2:	eea6 7aa6 	vfma.f32	s14, s13, s13
 802cdb6:	ee27 7a06 	vmul.f32	s14, s14, s12
 802cdba:	eef4 7ac7 	vcmpe.f32	s15, s14
 802cdbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cdc2:	d847      	bhi.n	802ce54 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802cdc4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 802cdc8:	ee3e 0aed 	vsub.f32	s0, s29, s27
 802cdcc:	f000 fa3b 	bl	802d246 <atan2f>
 802cdd0:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 802cdd4:	eeb0 8a40 	vmov.f32	s16, s0
 802cdd8:	ee3d 0aec 	vsub.f32	s0, s27, s25
 802cddc:	f000 fa33 	bl	802d246 <atan2f>
 802cde0:	ee38 0a40 	vsub.f32	s0, s16, s0
 802cde4:	eddf 7a29 	vldr	s15, [pc, #164]	@ 802ce8c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802cde8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cdec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cdf0:	bf48      	it	mi
 802cdf2:	eeb1 0a40 	vnegmi.f32	s0, s0
 802cdf6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802cdfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cdfe:	bfa4      	itt	ge
 802ce00:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 802ce90 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 802ce04:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802ce08:	eddf 7a22 	vldr	s15, [pc, #136]	@ 802ce94 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 802ce0c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802ce10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce14:	d51e      	bpl.n	802ce54 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802ce16:	eef0 0a49 	vmov.f32	s1, s18
 802ce1a:	eeb0 0a68 	vmov.f32	s0, s17
 802ce1e:	4628      	mov	r0, r5
 802ce20:	f7ea f88a 	bl	8016f38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802ce24:	ecbd 8b10 	vpop	{d8-d15}
 802ce28:	bd38      	pop	{r3, r4, r5, pc}
 802ce2a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802ce2e:	eeb0 7a68 	vmov.f32	s14, s17
 802ce32:	eea7 7aea 	vfms.f32	s14, s15, s21
 802ce36:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802ce3a:	eef0 6a49 	vmov.f32	s13, s18
 802ce3e:	eee7 6aea 	vfms.f32	s13, s15, s21
 802ce42:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802ce46:	eee7 7a07 	vfma.f32	s15, s14, s14
 802ce4a:	eef4 7ac6 	vcmpe.f32	s15, s12
 802ce4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce52:	d9e0      	bls.n	802ce16 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 802ce54:	3401      	adds	r4, #1
 802ce56:	eef0 0a6c 	vmov.f32	s1, s25
 802ce5a:	eeb0 0a4c 	vmov.f32	s0, s24
 802ce5e:	4621      	mov	r1, r4
 802ce60:	eef0 2a49 	vmov.f32	s5, s18
 802ce64:	eeb0 2a68 	vmov.f32	s4, s17
 802ce68:	eef0 1a6f 	vmov.f32	s3, s31
 802ce6c:	eeb0 1a4f 	vmov.f32	s2, s30
 802ce70:	4628      	mov	r0, r5
 802ce72:	f7ff ff4f 	bl	802cd14 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802ce76:	eef0 da4a 	vmov.f32	s27, s20
 802ce7a:	eeb0 da69 	vmov.f32	s26, s19
 802ce7e:	eef0 ca49 	vmov.f32	s25, s18
 802ce82:	eeb0 ca68 	vmov.f32	s24, s17
 802ce86:	e75c      	b.n	802cd42 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 802ce88:	2edbe6ff 	.word	0x2edbe6ff
 802ce8c:	40490fdb 	.word	0x40490fdb
 802ce90:	40c90fdb 	.word	0x40c90fdb
 802ce94:	3dcccccd 	.word	0x3dcccccd

0802ce98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 802ce98:	b530      	push	{r4, r5, lr}
 802ce9a:	ed2d 8b10 	vpush	{d8-d15}
 802ce9e:	4604      	mov	r4, r0
 802cea0:	b085      	sub	sp, #20
 802cea2:	eef0 8a40 	vmov.f32	s17, s0
 802cea6:	eef0 9a60 	vmov.f32	s19, s1
 802ceaa:	eef0 fa41 	vmov.f32	s31, s2
 802ceae:	eeb0 fa61 	vmov.f32	s30, s3
 802ceb2:	eef0 ba42 	vmov.f32	s23, s4
 802ceb6:	eeb0 ca62 	vmov.f32	s24, s5
 802ceba:	eef0 aa43 	vmov.f32	s21, s6
 802cebe:	eeb0 ba63 	vmov.f32	s22, s7
 802cec2:	460d      	mov	r5, r1
 802cec4:	2d08      	cmp	r5, #8
 802cec6:	f200 8115 	bhi.w	802d0f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802ceca:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 802cece:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802ced2:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802ced6:	ee26 6a27 	vmul.f32	s12, s12, s15
 802ceda:	ee38 daaf 	vadd.f32	s26, s17, s31
 802cede:	ed8d 6a01 	vstr	s12, [sp, #4]
 802cee2:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802cee6:	ee2d da27 	vmul.f32	s26, s26, s15
 802ceea:	ee7c ca0b 	vadd.f32	s25, s24, s22
 802ceee:	eeb0 ea4d 	vmov.f32	s28, s26
 802cef2:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802cef6:	ee6c caa7 	vmul.f32	s25, s25, s15
 802cefa:	ee66 6a27 	vmul.f32	s13, s12, s15
 802cefe:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 802cf02:	edcd 6a03 	vstr	s13, [sp, #12]
 802cf06:	ee79 da8f 	vadd.f32	s27, s19, s30
 802cf0a:	eef0 6a6c 	vmov.f32	s13, s25
 802cf0e:	eee7 6a27 	vfma.f32	s13, s14, s15
 802cf12:	ee6d daa7 	vmul.f32	s27, s27, s15
 802cf16:	ee2e ea27 	vmul.f32	s28, s28, s15
 802cf1a:	eef0 ea6d 	vmov.f32	s29, s27
 802cf1e:	eee7 ea27 	vfma.f32	s29, s14, s15
 802cf22:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802cf26:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802cf2a:	ed8d 7a02 	vstr	s14, [sp, #8]
 802cf2e:	ed9d 7a03 	vldr	s14, [sp, #12]
 802cf32:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802cf36:	ed9d 7a02 	vldr	s14, [sp, #8]
 802cf3a:	ee3e aa87 	vadd.f32	s20, s29, s14
 802cf3e:	ee29 9a27 	vmul.f32	s18, s18, s15
 802cf42:	ee2a aa27 	vmul.f32	s20, s20, s15
 802cf46:	eef0 6a67 	vmov.f32	s13, s15
 802cf4a:	2d00      	cmp	r5, #0
 802cf4c:	f000 810d 	beq.w	802d16a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802cf50:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 802cf54:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 802cf58:	ee7b 7a69 	vsub.f32	s15, s22, s19
 802cf5c:	ee3f 6aea 	vsub.f32	s12, s31, s21
 802cf60:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 802cf64:	ee3b 5aea 	vsub.f32	s10, s23, s21
 802cf68:	eea6 7a27 	vfma.f32	s14, s12, s15
 802cf6c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 802cf70:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802cf74:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 802cf78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf7c:	eea5 6a27 	vfma.f32	s12, s10, s15
 802cf80:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 802d1b0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802cf84:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802cf88:	bf48      	it	mi
 802cf8a:	eeb1 7a47 	vnegmi.f32	s14, s14
 802cf8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf92:	eeb4 7ae4 	vcmpe.f32	s14, s9
 802cf96:	bf48      	it	mi
 802cf98:	eeb1 6a46 	vnegmi.f32	s12, s12
 802cf9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cfa0:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 802cfa4:	f340 80aa 	ble.w	802d0fc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 802cfa8:	eeb4 6ae4 	vcmpe.f32	s12, s9
 802cfac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cfb0:	dd5c      	ble.n	802d06c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 802cfb2:	ee65 5aa5 	vmul.f32	s11, s11, s11
 802cfb6:	ee37 7a06 	vadd.f32	s14, s14, s12
 802cfba:	eee7 5aa7 	vfma.f32	s11, s15, s15
 802cfbe:	ee27 7a07 	vmul.f32	s14, s14, s14
 802cfc2:	ee65 7a85 	vmul.f32	s15, s11, s10
 802cfc6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802cfca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cfce:	f200 80cc 	bhi.w	802d16a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802cfd2:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802cfd6:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802cfda:	f000 f934 	bl	802d246 <atan2f>
 802cfde:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802cfe2:	eeb0 8a40 	vmov.f32	s16, s0
 802cfe6:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802cfea:	f000 f92c 	bl	802d246 <atan2f>
 802cfee:	ee38 fa40 	vsub.f32	s30, s16, s0
 802cff2:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802cff6:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802cffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cffe:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802d002:	bf48      	it	mi
 802d004:	eeb1 fa4f 	vnegmi.f32	s30, s30
 802d008:	f000 f91d 	bl	802d246 <atan2f>
 802d00c:	ee30 0a48 	vsub.f32	s0, s0, s16
 802d010:	eddf 7a68 	vldr	s15, [pc, #416]	@ 802d1b4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d014:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d018:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d01c:	eeb4 fae7 	vcmpe.f32	s30, s15
 802d020:	bf48      	it	mi
 802d022:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d026:	eddf 7a63 	vldr	s15, [pc, #396]	@ 802d1b4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d02a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d02e:	bfa8      	it	ge
 802d030:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 802d1b8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d034:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d038:	bfa8      	it	ge
 802d03a:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 802d03e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d042:	bfa8      	it	ge
 802d044:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 802d1b8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d048:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802d1bc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802d04c:	bfa8      	it	ge
 802d04e:	ee37 0a40 	vsubge.f32	s0, s14, s0
 802d052:	ee3f 0a00 	vadd.f32	s0, s30, s0
 802d056:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d05a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d05e:	f140 8084 	bpl.w	802d16a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d062:	eef0 0a4a 	vmov.f32	s1, s20
 802d066:	eeb0 0a49 	vmov.f32	s0, s18
 802d06a:	e040      	b.n	802d0ee <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 802d06c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d070:	ee27 7a07 	vmul.f32	s14, s14, s14
 802d074:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802d078:	ee67 7a85 	vmul.f32	s15, s15, s10
 802d07c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d084:	d871      	bhi.n	802d16a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d086:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d08a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d08e:	f000 f8da 	bl	802d246 <atan2f>
 802d092:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802d096:	eeb0 8a40 	vmov.f32	s16, s0
 802d09a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802d09e:	f000 f8d2 	bl	802d246 <atan2f>
 802d0a2:	ee38 0a40 	vsub.f32	s0, s16, s0
 802d0a6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 802d1b4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d0aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d0ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d0b2:	bf48      	it	mi
 802d0b4:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d0b8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d0bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d0c0:	bfa4      	itt	ge
 802d0c2:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 802d1b8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d0c6:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802d0ca:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 802d1bc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802d0ce:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d0d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d0d6:	d548      	bpl.n	802d16a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d0d8:	eef0 0a4f 	vmov.f32	s1, s30
 802d0dc:	eeb0 0a6f 	vmov.f32	s0, s31
 802d0e0:	4620      	mov	r0, r4
 802d0e2:	f7e9 ff29 	bl	8016f38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d0e6:	eef0 0a4c 	vmov.f32	s1, s24
 802d0ea:	eeb0 0a6b 	vmov.f32	s0, s23
 802d0ee:	4620      	mov	r0, r4
 802d0f0:	f7e9 ff22 	bl	8016f38 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d0f4:	b005      	add	sp, #20
 802d0f6:	ecbd 8b10 	vpop	{d8-d15}
 802d0fa:	bd30      	pop	{r4, r5, pc}
 802d0fc:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 802d1b0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802d100:	eeb4 6ac7 	vcmpe.f32	s12, s14
 802d104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d108:	dd19      	ble.n	802d13e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802d10a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d10e:	ee26 7a06 	vmul.f32	s14, s12, s12
 802d112:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802d116:	ee67 7a85 	vmul.f32	s15, s15, s10
 802d11a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d11e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d122:	d822      	bhi.n	802d16a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d124:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802d128:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802d12c:	f000 f88b 	bl	802d246 <atan2f>
 802d130:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d134:	eeb0 8a40 	vmov.f32	s16, s0
 802d138:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d13c:	e7af      	b.n	802d09e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 802d13e:	ee78 7aaa 	vadd.f32	s15, s17, s21
 802d142:	eeb0 7a49 	vmov.f32	s14, s18
 802d146:	eea7 7ae6 	vfms.f32	s14, s15, s13
 802d14a:	ee79 7a8b 	vadd.f32	s15, s19, s22
 802d14e:	eeb0 6a4a 	vmov.f32	s12, s20
 802d152:	eea7 6ae6 	vfms.f32	s12, s15, s13
 802d156:	ee66 7a06 	vmul.f32	s15, s12, s12
 802d15a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802d15e:	eef4 7ac5 	vcmpe.f32	s15, s10
 802d162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d166:	f67f af7c 	bls.w	802d062 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 802d16a:	3501      	adds	r5, #1
 802d16c:	eef0 0a69 	vmov.f32	s1, s19
 802d170:	eeb0 0a68 	vmov.f32	s0, s17
 802d174:	4629      	mov	r1, r5
 802d176:	eef0 3a4a 	vmov.f32	s7, s20
 802d17a:	eeb0 3a49 	vmov.f32	s6, s18
 802d17e:	eef0 2a6e 	vmov.f32	s5, s29
 802d182:	eeb0 2a4e 	vmov.f32	s4, s28
 802d186:	eef0 1a6d 	vmov.f32	s3, s27
 802d18a:	eeb0 1a4d 	vmov.f32	s2, s26
 802d18e:	4620      	mov	r0, r4
 802d190:	f7ff fe82 	bl	802ce98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 802d194:	eeb0 ca6c 	vmov.f32	s24, s25
 802d198:	eddd ba01 	vldr	s23, [sp, #4]
 802d19c:	ed9d fa02 	vldr	s30, [sp, #8]
 802d1a0:	eddd fa03 	vldr	s31, [sp, #12]
 802d1a4:	eef0 9a4a 	vmov.f32	s19, s20
 802d1a8:	eef0 8a49 	vmov.f32	s17, s18
 802d1ac:	e68a      	b.n	802cec4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 802d1ae:	bf00      	nop
 802d1b0:	2edbe6ff 	.word	0x2edbe6ff
 802d1b4:	40490fdb 	.word	0x40490fdb
 802d1b8:	40c90fdb 	.word	0x40c90fdb
 802d1bc:	3dcccccd 	.word	0x3dcccccd

0802d1c0 <_ZN8touchgfx6CanvasD1Ev>:
 802d1c0:	b510      	push	{r4, lr}
 802d1c2:	4b04      	ldr	r3, [pc, #16]	@ (802d1d4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802d1c4:	4604      	mov	r4, r0
 802d1c6:	f840 3b14 	str.w	r3, [r0], #20
 802d1ca:	f7eb f9e9 	bl	80185a0 <_ZN8touchgfx7OutlineD1Ev>
 802d1ce:	4620      	mov	r0, r4
 802d1d0:	bd10      	pop	{r4, pc}
 802d1d2:	bf00      	nop
 802d1d4:	080328f4 	.word	0x080328f4

0802d1d8 <_ZN8touchgfx6CanvasD0Ev>:
 802d1d8:	b510      	push	{r4, lr}
 802d1da:	4604      	mov	r4, r0
 802d1dc:	f7ff fff0 	bl	802d1c0 <_ZN8touchgfx6CanvasD1Ev>
 802d1e0:	4620      	mov	r0, r4
 802d1e2:	2174      	movs	r1, #116	@ 0x74
 802d1e4:	f000 f807 	bl	802d1f6 <_ZdlPvj>
 802d1e8:	4620      	mov	r0, r4
 802d1ea:	bd10      	pop	{r4, pc}

0802d1ec <__aeabi_atexit>:
 802d1ec:	460b      	mov	r3, r1
 802d1ee:	4601      	mov	r1, r0
 802d1f0:	4618      	mov	r0, r3
 802d1f2:	f001 b81f 	b.w	802e234 <__cxa_atexit>

0802d1f6 <_ZdlPvj>:
 802d1f6:	f000 b812 	b.w	802d21e <_ZdlPv>

0802d1fa <__cxa_guard_acquire>:
 802d1fa:	6802      	ldr	r2, [r0, #0]
 802d1fc:	07d2      	lsls	r2, r2, #31
 802d1fe:	4603      	mov	r3, r0
 802d200:	d405      	bmi.n	802d20e <__cxa_guard_acquire+0x14>
 802d202:	7842      	ldrb	r2, [r0, #1]
 802d204:	b102      	cbz	r2, 802d208 <__cxa_guard_acquire+0xe>
 802d206:	deff      	udf	#255	@ 0xff
 802d208:	2001      	movs	r0, #1
 802d20a:	7058      	strb	r0, [r3, #1]
 802d20c:	4770      	bx	lr
 802d20e:	2000      	movs	r0, #0
 802d210:	4770      	bx	lr

0802d212 <__cxa_guard_release>:
 802d212:	2301      	movs	r3, #1
 802d214:	6003      	str	r3, [r0, #0]
 802d216:	4770      	bx	lr

0802d218 <__cxa_pure_virtual>:
 802d218:	b508      	push	{r3, lr}
 802d21a:	f000 f80f 	bl	802d23c <_ZSt9terminatev>

0802d21e <_ZdlPv>:
 802d21e:	f000 bf53 	b.w	802e0c8 <free>

0802d222 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802d222:	b508      	push	{r3, lr}
 802d224:	4780      	blx	r0
 802d226:	f000 ff1b 	bl	802e060 <abort>
	...

0802d22c <_ZSt13get_terminatev>:
 802d22c:	4b02      	ldr	r3, [pc, #8]	@ (802d238 <_ZSt13get_terminatev+0xc>)
 802d22e:	6818      	ldr	r0, [r3, #0]
 802d230:	f3bf 8f5b 	dmb	ish
 802d234:	4770      	bx	lr
 802d236:	bf00      	nop
 802d238:	20000100 	.word	0x20000100

0802d23c <_ZSt9terminatev>:
 802d23c:	b508      	push	{r3, lr}
 802d23e:	f7ff fff5 	bl	802d22c <_ZSt13get_terminatev>
 802d242:	f7ff ffee 	bl	802d222 <_ZN10__cxxabiv111__terminateEPFvvE>

0802d246 <atan2f>:
 802d246:	f000 b94d 	b.w	802d4e4 <__ieee754_atan2f>
	...

0802d24c <sqrtf>:
 802d24c:	b508      	push	{r3, lr}
 802d24e:	ed2d 8b02 	vpush	{d8}
 802d252:	eeb0 8a40 	vmov.f32	s16, s0
 802d256:	f000 f8a1 	bl	802d39c <__ieee754_sqrtf>
 802d25a:	eeb4 8a48 	vcmp.f32	s16, s16
 802d25e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d262:	d60c      	bvs.n	802d27e <sqrtf+0x32>
 802d264:	eddf 8a07 	vldr	s17, [pc, #28]	@ 802d284 <sqrtf+0x38>
 802d268:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802d26c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d270:	d505      	bpl.n	802d27e <sqrtf+0x32>
 802d272:	f001 f9a7 	bl	802e5c4 <__errno>
 802d276:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802d27a:	2321      	movs	r3, #33	@ 0x21
 802d27c:	6003      	str	r3, [r0, #0]
 802d27e:	ecbd 8b02 	vpop	{d8}
 802d282:	bd08      	pop	{r3, pc}
 802d284:	00000000 	.word	0x00000000

0802d288 <cosf>:
 802d288:	ee10 3a10 	vmov	r3, s0
 802d28c:	b507      	push	{r0, r1, r2, lr}
 802d28e:	4a1e      	ldr	r2, [pc, #120]	@ (802d308 <cosf+0x80>)
 802d290:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802d294:	4293      	cmp	r3, r2
 802d296:	d806      	bhi.n	802d2a6 <cosf+0x1e>
 802d298:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 802d30c <cosf+0x84>
 802d29c:	b003      	add	sp, #12
 802d29e:	f85d eb04 	ldr.w	lr, [sp], #4
 802d2a2:	f000 b87f 	b.w	802d3a4 <__kernel_cosf>
 802d2a6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d2aa:	d304      	bcc.n	802d2b6 <cosf+0x2e>
 802d2ac:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d2b0:	b003      	add	sp, #12
 802d2b2:	f85d fb04 	ldr.w	pc, [sp], #4
 802d2b6:	4668      	mov	r0, sp
 802d2b8:	f000 f9b4 	bl	802d624 <__ieee754_rem_pio2f>
 802d2bc:	f000 0003 	and.w	r0, r0, #3
 802d2c0:	2801      	cmp	r0, #1
 802d2c2:	d009      	beq.n	802d2d8 <cosf+0x50>
 802d2c4:	2802      	cmp	r0, #2
 802d2c6:	d010      	beq.n	802d2ea <cosf+0x62>
 802d2c8:	b9b0      	cbnz	r0, 802d2f8 <cosf+0x70>
 802d2ca:	eddd 0a01 	vldr	s1, [sp, #4]
 802d2ce:	ed9d 0a00 	vldr	s0, [sp]
 802d2d2:	f000 f867 	bl	802d3a4 <__kernel_cosf>
 802d2d6:	e7eb      	b.n	802d2b0 <cosf+0x28>
 802d2d8:	eddd 0a01 	vldr	s1, [sp, #4]
 802d2dc:	ed9d 0a00 	vldr	s0, [sp]
 802d2e0:	f000 f8b8 	bl	802d454 <__kernel_sinf>
 802d2e4:	eeb1 0a40 	vneg.f32	s0, s0
 802d2e8:	e7e2      	b.n	802d2b0 <cosf+0x28>
 802d2ea:	eddd 0a01 	vldr	s1, [sp, #4]
 802d2ee:	ed9d 0a00 	vldr	s0, [sp]
 802d2f2:	f000 f857 	bl	802d3a4 <__kernel_cosf>
 802d2f6:	e7f5      	b.n	802d2e4 <cosf+0x5c>
 802d2f8:	eddd 0a01 	vldr	s1, [sp, #4]
 802d2fc:	ed9d 0a00 	vldr	s0, [sp]
 802d300:	2001      	movs	r0, #1
 802d302:	f000 f8a7 	bl	802d454 <__kernel_sinf>
 802d306:	e7d3      	b.n	802d2b0 <cosf+0x28>
 802d308:	3f490fd8 	.word	0x3f490fd8
 802d30c:	00000000 	.word	0x00000000

0802d310 <sinf>:
 802d310:	ee10 3a10 	vmov	r3, s0
 802d314:	b507      	push	{r0, r1, r2, lr}
 802d316:	4a1f      	ldr	r2, [pc, #124]	@ (802d394 <sinf+0x84>)
 802d318:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802d31c:	4293      	cmp	r3, r2
 802d31e:	d807      	bhi.n	802d330 <sinf+0x20>
 802d320:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 802d398 <sinf+0x88>
 802d324:	2000      	movs	r0, #0
 802d326:	b003      	add	sp, #12
 802d328:	f85d eb04 	ldr.w	lr, [sp], #4
 802d32c:	f000 b892 	b.w	802d454 <__kernel_sinf>
 802d330:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d334:	d304      	bcc.n	802d340 <sinf+0x30>
 802d336:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d33a:	b003      	add	sp, #12
 802d33c:	f85d fb04 	ldr.w	pc, [sp], #4
 802d340:	4668      	mov	r0, sp
 802d342:	f000 f96f 	bl	802d624 <__ieee754_rem_pio2f>
 802d346:	f000 0003 	and.w	r0, r0, #3
 802d34a:	2801      	cmp	r0, #1
 802d34c:	d00a      	beq.n	802d364 <sinf+0x54>
 802d34e:	2802      	cmp	r0, #2
 802d350:	d00f      	beq.n	802d372 <sinf+0x62>
 802d352:	b9c0      	cbnz	r0, 802d386 <sinf+0x76>
 802d354:	eddd 0a01 	vldr	s1, [sp, #4]
 802d358:	ed9d 0a00 	vldr	s0, [sp]
 802d35c:	2001      	movs	r0, #1
 802d35e:	f000 f879 	bl	802d454 <__kernel_sinf>
 802d362:	e7ea      	b.n	802d33a <sinf+0x2a>
 802d364:	eddd 0a01 	vldr	s1, [sp, #4]
 802d368:	ed9d 0a00 	vldr	s0, [sp]
 802d36c:	f000 f81a 	bl	802d3a4 <__kernel_cosf>
 802d370:	e7e3      	b.n	802d33a <sinf+0x2a>
 802d372:	eddd 0a01 	vldr	s1, [sp, #4]
 802d376:	ed9d 0a00 	vldr	s0, [sp]
 802d37a:	2001      	movs	r0, #1
 802d37c:	f000 f86a 	bl	802d454 <__kernel_sinf>
 802d380:	eeb1 0a40 	vneg.f32	s0, s0
 802d384:	e7d9      	b.n	802d33a <sinf+0x2a>
 802d386:	eddd 0a01 	vldr	s1, [sp, #4]
 802d38a:	ed9d 0a00 	vldr	s0, [sp]
 802d38e:	f000 f809 	bl	802d3a4 <__kernel_cosf>
 802d392:	e7f5      	b.n	802d380 <sinf+0x70>
 802d394:	3f490fd8 	.word	0x3f490fd8
 802d398:	00000000 	.word	0x00000000

0802d39c <__ieee754_sqrtf>:
 802d39c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802d3a0:	4770      	bx	lr
	...

0802d3a4 <__kernel_cosf>:
 802d3a4:	ee10 3a10 	vmov	r3, s0
 802d3a8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802d3ac:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802d3b0:	eef0 6a40 	vmov.f32	s13, s0
 802d3b4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802d3b8:	d204      	bcs.n	802d3c4 <__kernel_cosf+0x20>
 802d3ba:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 802d3be:	ee17 2a90 	vmov	r2, s15
 802d3c2:	b342      	cbz	r2, 802d416 <__kernel_cosf+0x72>
 802d3c4:	ee26 7aa6 	vmul.f32	s14, s13, s13
 802d3c8:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 802d434 <__kernel_cosf+0x90>
 802d3cc:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802d438 <__kernel_cosf+0x94>
 802d3d0:	4a1a      	ldr	r2, [pc, #104]	@ (802d43c <__kernel_cosf+0x98>)
 802d3d2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d3d6:	4293      	cmp	r3, r2
 802d3d8:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802d440 <__kernel_cosf+0x9c>
 802d3dc:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d3e0:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 802d444 <__kernel_cosf+0xa0>
 802d3e4:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d3e8:	eddf 7a17 	vldr	s15, [pc, #92]	@ 802d448 <__kernel_cosf+0xa4>
 802d3ec:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d3f0:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 802d44c <__kernel_cosf+0xa8>
 802d3f4:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d3f8:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 802d3fc:	ee26 6a07 	vmul.f32	s12, s12, s14
 802d400:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802d404:	eee7 0a06 	vfma.f32	s1, s14, s12
 802d408:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d40c:	d804      	bhi.n	802d418 <__kernel_cosf+0x74>
 802d40e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d412:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d416:	4770      	bx	lr
 802d418:	4a0d      	ldr	r2, [pc, #52]	@ (802d450 <__kernel_cosf+0xac>)
 802d41a:	4293      	cmp	r3, r2
 802d41c:	bf9a      	itte	ls
 802d41e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 802d422:	ee07 3a10 	vmovls	s14, r3
 802d426:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802d42a:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d42e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d432:	e7ec      	b.n	802d40e <__kernel_cosf+0x6a>
 802d434:	ad47d74e 	.word	0xad47d74e
 802d438:	310f74f6 	.word	0x310f74f6
 802d43c:	3e999999 	.word	0x3e999999
 802d440:	b493f27c 	.word	0xb493f27c
 802d444:	37d00d01 	.word	0x37d00d01
 802d448:	bab60b61 	.word	0xbab60b61
 802d44c:	3d2aaaab 	.word	0x3d2aaaab
 802d450:	3f480000 	.word	0x3f480000

0802d454 <__kernel_sinf>:
 802d454:	ee10 3a10 	vmov	r3, s0
 802d458:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802d45c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802d460:	d204      	bcs.n	802d46c <__kernel_sinf+0x18>
 802d462:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d466:	ee17 3a90 	vmov	r3, s15
 802d46a:	b35b      	cbz	r3, 802d4c4 <__kernel_sinf+0x70>
 802d46c:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d470:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802d4c8 <__kernel_sinf+0x74>
 802d474:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 802d4cc <__kernel_sinf+0x78>
 802d478:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d47c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 802d4d0 <__kernel_sinf+0x7c>
 802d480:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d484:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 802d4d4 <__kernel_sinf+0x80>
 802d488:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d48c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 802d4d8 <__kernel_sinf+0x84>
 802d490:	ee60 6a07 	vmul.f32	s13, s0, s14
 802d494:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d498:	b930      	cbnz	r0, 802d4a8 <__kernel_sinf+0x54>
 802d49a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 802d4dc <__kernel_sinf+0x88>
 802d49e:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d4a2:	eea6 0a26 	vfma.f32	s0, s12, s13
 802d4a6:	4770      	bx	lr
 802d4a8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802d4ac:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 802d4b0:	eee0 7a86 	vfma.f32	s15, s1, s12
 802d4b4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802d4b8:	eddf 7a09 	vldr	s15, [pc, #36]	@ 802d4e0 <__kernel_sinf+0x8c>
 802d4bc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802d4c0:	ee30 0a60 	vsub.f32	s0, s0, s1
 802d4c4:	4770      	bx	lr
 802d4c6:	bf00      	nop
 802d4c8:	2f2ec9d3 	.word	0x2f2ec9d3
 802d4cc:	b2d72f34 	.word	0xb2d72f34
 802d4d0:	3638ef1b 	.word	0x3638ef1b
 802d4d4:	b9500d01 	.word	0xb9500d01
 802d4d8:	3c088889 	.word	0x3c088889
 802d4dc:	be2aaaab 	.word	0xbe2aaaab
 802d4e0:	3e2aaaab 	.word	0x3e2aaaab

0802d4e4 <__ieee754_atan2f>:
 802d4e4:	ee10 2a90 	vmov	r2, s1
 802d4e8:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 802d4ec:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802d4f0:	b510      	push	{r4, lr}
 802d4f2:	eef0 7a40 	vmov.f32	s15, s0
 802d4f6:	d806      	bhi.n	802d506 <__ieee754_atan2f+0x22>
 802d4f8:	ee10 0a10 	vmov	r0, s0
 802d4fc:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 802d500:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d504:	d904      	bls.n	802d510 <__ieee754_atan2f+0x2c>
 802d506:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802d50a:	eeb0 0a67 	vmov.f32	s0, s15
 802d50e:	bd10      	pop	{r4, pc}
 802d510:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 802d514:	d103      	bne.n	802d51e <__ieee754_atan2f+0x3a>
 802d516:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802d51a:	f000 b9b3 	b.w	802d884 <atanf>
 802d51e:	1794      	asrs	r4, r2, #30
 802d520:	f004 0402 	and.w	r4, r4, #2
 802d524:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802d528:	b943      	cbnz	r3, 802d53c <__ieee754_atan2f+0x58>
 802d52a:	2c02      	cmp	r4, #2
 802d52c:	d05e      	beq.n	802d5ec <__ieee754_atan2f+0x108>
 802d52e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802d600 <__ieee754_atan2f+0x11c>
 802d532:	2c03      	cmp	r4, #3
 802d534:	bf08      	it	eq
 802d536:	eef0 7a47 	vmoveq.f32	s15, s14
 802d53a:	e7e6      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d53c:	b941      	cbnz	r1, 802d550 <__ieee754_atan2f+0x6c>
 802d53e:	eddf 7a31 	vldr	s15, [pc, #196]	@ 802d604 <__ieee754_atan2f+0x120>
 802d542:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802d608 <__ieee754_atan2f+0x124>
 802d546:	2800      	cmp	r0, #0
 802d548:	bfa8      	it	ge
 802d54a:	eef0 7a47 	vmovge.f32	s15, s14
 802d54e:	e7dc      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d550:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802d554:	d110      	bne.n	802d578 <__ieee754_atan2f+0x94>
 802d556:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d55a:	f104 34ff 	add.w	r4, r4, #4294967295
 802d55e:	d107      	bne.n	802d570 <__ieee754_atan2f+0x8c>
 802d560:	2c02      	cmp	r4, #2
 802d562:	d846      	bhi.n	802d5f2 <__ieee754_atan2f+0x10e>
 802d564:	4b29      	ldr	r3, [pc, #164]	@ (802d60c <__ieee754_atan2f+0x128>)
 802d566:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802d56a:	edd3 7a00 	vldr	s15, [r3]
 802d56e:	e7cc      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d570:	2c02      	cmp	r4, #2
 802d572:	d841      	bhi.n	802d5f8 <__ieee754_atan2f+0x114>
 802d574:	4b26      	ldr	r3, [pc, #152]	@ (802d610 <__ieee754_atan2f+0x12c>)
 802d576:	e7f6      	b.n	802d566 <__ieee754_atan2f+0x82>
 802d578:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d57c:	d0df      	beq.n	802d53e <__ieee754_atan2f+0x5a>
 802d57e:	1a5b      	subs	r3, r3, r1
 802d580:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 802d584:	ea4f 51e3 	mov.w	r1, r3, asr #23
 802d588:	da1a      	bge.n	802d5c0 <__ieee754_atan2f+0xdc>
 802d58a:	2a00      	cmp	r2, #0
 802d58c:	da01      	bge.n	802d592 <__ieee754_atan2f+0xae>
 802d58e:	313c      	adds	r1, #60	@ 0x3c
 802d590:	db19      	blt.n	802d5c6 <__ieee754_atan2f+0xe2>
 802d592:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 802d596:	f000 fa49 	bl	802da2c <fabsf>
 802d59a:	f000 f973 	bl	802d884 <atanf>
 802d59e:	eef0 7a40 	vmov.f32	s15, s0
 802d5a2:	2c01      	cmp	r4, #1
 802d5a4:	d012      	beq.n	802d5cc <__ieee754_atan2f+0xe8>
 802d5a6:	2c02      	cmp	r4, #2
 802d5a8:	d017      	beq.n	802d5da <__ieee754_atan2f+0xf6>
 802d5aa:	2c00      	cmp	r4, #0
 802d5ac:	d0ad      	beq.n	802d50a <__ieee754_atan2f+0x26>
 802d5ae:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 802d614 <__ieee754_atan2f+0x130>
 802d5b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d5b6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802d618 <__ieee754_atan2f+0x134>
 802d5ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d5be:	e7a4      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d5c0:	eddf 7a11 	vldr	s15, [pc, #68]	@ 802d608 <__ieee754_atan2f+0x124>
 802d5c4:	e7ed      	b.n	802d5a2 <__ieee754_atan2f+0xbe>
 802d5c6:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802d61c <__ieee754_atan2f+0x138>
 802d5ca:	e7ea      	b.n	802d5a2 <__ieee754_atan2f+0xbe>
 802d5cc:	ee17 3a90 	vmov	r3, s15
 802d5d0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802d5d4:	ee07 3a90 	vmov	s15, r3
 802d5d8:	e797      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d5da:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 802d614 <__ieee754_atan2f+0x130>
 802d5de:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d5e2:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802d618 <__ieee754_atan2f+0x134>
 802d5e6:	ee77 7a67 	vsub.f32	s15, s14, s15
 802d5ea:	e78e      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d5ec:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802d618 <__ieee754_atan2f+0x134>
 802d5f0:	e78b      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d5f2:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 802d620 <__ieee754_atan2f+0x13c>
 802d5f6:	e788      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d5f8:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802d61c <__ieee754_atan2f+0x138>
 802d5fc:	e785      	b.n	802d50a <__ieee754_atan2f+0x26>
 802d5fe:	bf00      	nop
 802d600:	c0490fdb 	.word	0xc0490fdb
 802d604:	bfc90fdb 	.word	0xbfc90fdb
 802d608:	3fc90fdb 	.word	0x3fc90fdb
 802d60c:	0803290c 	.word	0x0803290c
 802d610:	08032900 	.word	0x08032900
 802d614:	33bbbd2e 	.word	0x33bbbd2e
 802d618:	40490fdb 	.word	0x40490fdb
 802d61c:	00000000 	.word	0x00000000
 802d620:	3f490fdb 	.word	0x3f490fdb

0802d624 <__ieee754_rem_pio2f>:
 802d624:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d626:	ee10 6a10 	vmov	r6, s0
 802d62a:	4b88      	ldr	r3, [pc, #544]	@ (802d84c <__ieee754_rem_pio2f+0x228>)
 802d62c:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 802d630:	429d      	cmp	r5, r3
 802d632:	b087      	sub	sp, #28
 802d634:	4604      	mov	r4, r0
 802d636:	d805      	bhi.n	802d644 <__ieee754_rem_pio2f+0x20>
 802d638:	2300      	movs	r3, #0
 802d63a:	ed80 0a00 	vstr	s0, [r0]
 802d63e:	6043      	str	r3, [r0, #4]
 802d640:	2000      	movs	r0, #0
 802d642:	e022      	b.n	802d68a <__ieee754_rem_pio2f+0x66>
 802d644:	4b82      	ldr	r3, [pc, #520]	@ (802d850 <__ieee754_rem_pio2f+0x22c>)
 802d646:	429d      	cmp	r5, r3
 802d648:	d83a      	bhi.n	802d6c0 <__ieee754_rem_pio2f+0x9c>
 802d64a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802d64e:	2e00      	cmp	r6, #0
 802d650:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 802d854 <__ieee754_rem_pio2f+0x230>
 802d654:	4a80      	ldr	r2, [pc, #512]	@ (802d858 <__ieee754_rem_pio2f+0x234>)
 802d656:	f023 030f 	bic.w	r3, r3, #15
 802d65a:	dd18      	ble.n	802d68e <__ieee754_rem_pio2f+0x6a>
 802d65c:	4293      	cmp	r3, r2
 802d65e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802d662:	bf09      	itett	eq
 802d664:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 802d85c <__ieee754_rem_pio2f+0x238>
 802d668:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 802d860 <__ieee754_rem_pio2f+0x23c>
 802d66c:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 802d864 <__ieee754_rem_pio2f+0x240>
 802d670:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802d674:	ee37 7ae6 	vsub.f32	s14, s15, s13
 802d678:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d67c:	ed80 7a00 	vstr	s14, [r0]
 802d680:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d684:	edc0 7a01 	vstr	s15, [r0, #4]
 802d688:	2001      	movs	r0, #1
 802d68a:	b007      	add	sp, #28
 802d68c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d68e:	4293      	cmp	r3, r2
 802d690:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d694:	bf09      	itett	eq
 802d696:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 802d85c <__ieee754_rem_pio2f+0x238>
 802d69a:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 802d860 <__ieee754_rem_pio2f+0x23c>
 802d69e:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 802d864 <__ieee754_rem_pio2f+0x240>
 802d6a2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d6a6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d6aa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d6ae:	ed80 7a00 	vstr	s14, [r0]
 802d6b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d6b6:	edc0 7a01 	vstr	s15, [r0, #4]
 802d6ba:	f04f 30ff 	mov.w	r0, #4294967295
 802d6be:	e7e4      	b.n	802d68a <__ieee754_rem_pio2f+0x66>
 802d6c0:	4b69      	ldr	r3, [pc, #420]	@ (802d868 <__ieee754_rem_pio2f+0x244>)
 802d6c2:	429d      	cmp	r5, r3
 802d6c4:	d873      	bhi.n	802d7ae <__ieee754_rem_pio2f+0x18a>
 802d6c6:	f000 f9b1 	bl	802da2c <fabsf>
 802d6ca:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 802d86c <__ieee754_rem_pio2f+0x248>
 802d6ce:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802d6d2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d6d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d6da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d6de:	ee17 0a90 	vmov	r0, s15
 802d6e2:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802d854 <__ieee754_rem_pio2f+0x230>
 802d6e6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d6ea:	281f      	cmp	r0, #31
 802d6ec:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802d860 <__ieee754_rem_pio2f+0x23c>
 802d6f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d6f4:	eeb1 6a47 	vneg.f32	s12, s14
 802d6f8:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d6fc:	ee16 1a90 	vmov	r1, s13
 802d700:	dc09      	bgt.n	802d716 <__ieee754_rem_pio2f+0xf2>
 802d702:	4a5b      	ldr	r2, [pc, #364]	@ (802d870 <__ieee754_rem_pio2f+0x24c>)
 802d704:	1e47      	subs	r7, r0, #1
 802d706:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802d70a:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 802d70e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 802d712:	4293      	cmp	r3, r2
 802d714:	d107      	bne.n	802d726 <__ieee754_rem_pio2f+0x102>
 802d716:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802d71a:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 802d71e:	2a08      	cmp	r2, #8
 802d720:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d724:	dc14      	bgt.n	802d750 <__ieee754_rem_pio2f+0x12c>
 802d726:	6021      	str	r1, [r4, #0]
 802d728:	ed94 7a00 	vldr	s14, [r4]
 802d72c:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d730:	2e00      	cmp	r6, #0
 802d732:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d736:	ed84 0a01 	vstr	s0, [r4, #4]
 802d73a:	daa6      	bge.n	802d68a <__ieee754_rem_pio2f+0x66>
 802d73c:	eeb1 7a47 	vneg.f32	s14, s14
 802d740:	eeb1 0a40 	vneg.f32	s0, s0
 802d744:	ed84 7a00 	vstr	s14, [r4]
 802d748:	ed84 0a01 	vstr	s0, [r4, #4]
 802d74c:	4240      	negs	r0, r0
 802d74e:	e79c      	b.n	802d68a <__ieee754_rem_pio2f+0x66>
 802d750:	eddf 5a42 	vldr	s11, [pc, #264]	@ 802d85c <__ieee754_rem_pio2f+0x238>
 802d754:	eef0 6a40 	vmov.f32	s13, s0
 802d758:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d75c:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d760:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d764:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 802d864 <__ieee754_rem_pio2f+0x240>
 802d768:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d76c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d770:	ee15 2a90 	vmov	r2, s11
 802d774:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d778:	1a5b      	subs	r3, r3, r1
 802d77a:	2b19      	cmp	r3, #25
 802d77c:	dc04      	bgt.n	802d788 <__ieee754_rem_pio2f+0x164>
 802d77e:	edc4 5a00 	vstr	s11, [r4]
 802d782:	eeb0 0a66 	vmov.f32	s0, s13
 802d786:	e7cf      	b.n	802d728 <__ieee754_rem_pio2f+0x104>
 802d788:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 802d874 <__ieee754_rem_pio2f+0x250>
 802d78c:	eeb0 0a66 	vmov.f32	s0, s13
 802d790:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d794:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d798:	eddf 6a37 	vldr	s13, [pc, #220]	@ 802d878 <__ieee754_rem_pio2f+0x254>
 802d79c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d7a0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d7a4:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d7a8:	ed84 7a00 	vstr	s14, [r4]
 802d7ac:	e7bc      	b.n	802d728 <__ieee754_rem_pio2f+0x104>
 802d7ae:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 802d7b2:	d306      	bcc.n	802d7c2 <__ieee754_rem_pio2f+0x19e>
 802d7b4:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d7b8:	edc0 7a01 	vstr	s15, [r0, #4]
 802d7bc:	edc0 7a00 	vstr	s15, [r0]
 802d7c0:	e73e      	b.n	802d640 <__ieee754_rem_pio2f+0x1c>
 802d7c2:	15ea      	asrs	r2, r5, #23
 802d7c4:	3a86      	subs	r2, #134	@ 0x86
 802d7c6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d7ca:	ee07 3a90 	vmov	s15, r3
 802d7ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d7d2:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 802d87c <__ieee754_rem_pio2f+0x258>
 802d7d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d7da:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d7de:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d7e2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d7e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d7ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d7ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d7f2:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d7f6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d7fa:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d7fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d802:	edcd 7a05 	vstr	s15, [sp, #20]
 802d806:	d11e      	bne.n	802d846 <__ieee754_rem_pio2f+0x222>
 802d808:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d80c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d810:	bf0c      	ite	eq
 802d812:	2301      	moveq	r3, #1
 802d814:	2302      	movne	r3, #2
 802d816:	491a      	ldr	r1, [pc, #104]	@ (802d880 <__ieee754_rem_pio2f+0x25c>)
 802d818:	9101      	str	r1, [sp, #4]
 802d81a:	2102      	movs	r1, #2
 802d81c:	9100      	str	r1, [sp, #0]
 802d81e:	a803      	add	r0, sp, #12
 802d820:	4621      	mov	r1, r4
 802d822:	f000 f90b 	bl	802da3c <__kernel_rem_pio2f>
 802d826:	2e00      	cmp	r6, #0
 802d828:	f6bf af2f 	bge.w	802d68a <__ieee754_rem_pio2f+0x66>
 802d82c:	edd4 7a00 	vldr	s15, [r4]
 802d830:	eef1 7a67 	vneg.f32	s15, s15
 802d834:	edc4 7a00 	vstr	s15, [r4]
 802d838:	edd4 7a01 	vldr	s15, [r4, #4]
 802d83c:	eef1 7a67 	vneg.f32	s15, s15
 802d840:	edc4 7a01 	vstr	s15, [r4, #4]
 802d844:	e782      	b.n	802d74c <__ieee754_rem_pio2f+0x128>
 802d846:	2303      	movs	r3, #3
 802d848:	e7e5      	b.n	802d816 <__ieee754_rem_pio2f+0x1f2>
 802d84a:	bf00      	nop
 802d84c:	3f490fd8 	.word	0x3f490fd8
 802d850:	4016cbe3 	.word	0x4016cbe3
 802d854:	3fc90f80 	.word	0x3fc90f80
 802d858:	3fc90fd0 	.word	0x3fc90fd0
 802d85c:	37354400 	.word	0x37354400
 802d860:	37354443 	.word	0x37354443
 802d864:	2e85a308 	.word	0x2e85a308
 802d868:	43490f80 	.word	0x43490f80
 802d86c:	3f22f984 	.word	0x3f22f984
 802d870:	08032918 	.word	0x08032918
 802d874:	2e85a300 	.word	0x2e85a300
 802d878:	248d3132 	.word	0x248d3132
 802d87c:	43800000 	.word	0x43800000
 802d880:	08032998 	.word	0x08032998

0802d884 <atanf>:
 802d884:	b538      	push	{r3, r4, r5, lr}
 802d886:	ee10 5a10 	vmov	r5, s0
 802d88a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 802d88e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 802d892:	eef0 7a40 	vmov.f32	s15, s0
 802d896:	d310      	bcc.n	802d8ba <atanf+0x36>
 802d898:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 802d89c:	d904      	bls.n	802d8a8 <atanf+0x24>
 802d89e:	ee70 7a00 	vadd.f32	s15, s0, s0
 802d8a2:	eeb0 0a67 	vmov.f32	s0, s15
 802d8a6:	bd38      	pop	{r3, r4, r5, pc}
 802d8a8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 802d9e0 <atanf+0x15c>
 802d8ac:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 802d9e4 <atanf+0x160>
 802d8b0:	2d00      	cmp	r5, #0
 802d8b2:	bfc8      	it	gt
 802d8b4:	eef0 7a47 	vmovgt.f32	s15, s14
 802d8b8:	e7f3      	b.n	802d8a2 <atanf+0x1e>
 802d8ba:	4b4b      	ldr	r3, [pc, #300]	@ (802d9e8 <atanf+0x164>)
 802d8bc:	429c      	cmp	r4, r3
 802d8be:	d810      	bhi.n	802d8e2 <atanf+0x5e>
 802d8c0:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 802d8c4:	d20a      	bcs.n	802d8dc <atanf+0x58>
 802d8c6:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 802d9ec <atanf+0x168>
 802d8ca:	ee30 7a07 	vadd.f32	s14, s0, s14
 802d8ce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802d8d2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802d8d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d8da:	dce2      	bgt.n	802d8a2 <atanf+0x1e>
 802d8dc:	f04f 33ff 	mov.w	r3, #4294967295
 802d8e0:	e013      	b.n	802d90a <atanf+0x86>
 802d8e2:	f000 f8a3 	bl	802da2c <fabsf>
 802d8e6:	4b42      	ldr	r3, [pc, #264]	@ (802d9f0 <atanf+0x16c>)
 802d8e8:	429c      	cmp	r4, r3
 802d8ea:	d84f      	bhi.n	802d98c <atanf+0x108>
 802d8ec:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802d8f0:	429c      	cmp	r4, r3
 802d8f2:	d841      	bhi.n	802d978 <atanf+0xf4>
 802d8f4:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802d8f8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802d8fc:	eea0 7a27 	vfma.f32	s14, s0, s15
 802d900:	2300      	movs	r3, #0
 802d902:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d906:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802d90a:	1c5a      	adds	r2, r3, #1
 802d90c:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802d910:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 802d9f4 <atanf+0x170>
 802d914:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802d9f8 <atanf+0x174>
 802d918:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 802d9fc <atanf+0x178>
 802d91c:	ee66 6a06 	vmul.f32	s13, s12, s12
 802d920:	eee6 5a87 	vfma.f32	s11, s13, s14
 802d924:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 802da00 <atanf+0x17c>
 802d928:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802d92c:	eddf 5a35 	vldr	s11, [pc, #212]	@ 802da04 <atanf+0x180>
 802d930:	eee7 5a26 	vfma.f32	s11, s14, s13
 802d934:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802da08 <atanf+0x184>
 802d938:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802d93c:	eddf 5a33 	vldr	s11, [pc, #204]	@ 802da0c <atanf+0x188>
 802d940:	eee7 5a26 	vfma.f32	s11, s14, s13
 802d944:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 802da10 <atanf+0x18c>
 802d948:	eea6 5a87 	vfma.f32	s10, s13, s14
 802d94c:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802da14 <atanf+0x190>
 802d950:	eea5 7a26 	vfma.f32	s14, s10, s13
 802d954:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802da18 <atanf+0x194>
 802d958:	eea7 5a26 	vfma.f32	s10, s14, s13
 802d95c:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 802da1c <atanf+0x198>
 802d960:	eea5 7a26 	vfma.f32	s14, s10, s13
 802d964:	ee27 7a26 	vmul.f32	s14, s14, s13
 802d968:	eea5 7a86 	vfma.f32	s14, s11, s12
 802d96c:	ee27 7a87 	vmul.f32	s14, s15, s14
 802d970:	d121      	bne.n	802d9b6 <atanf+0x132>
 802d972:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d976:	e794      	b.n	802d8a2 <atanf+0x1e>
 802d978:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 802d97c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d980:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d984:	2301      	movs	r3, #1
 802d986:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802d98a:	e7be      	b.n	802d90a <atanf+0x86>
 802d98c:	4b24      	ldr	r3, [pc, #144]	@ (802da20 <atanf+0x19c>)
 802d98e:	429c      	cmp	r4, r3
 802d990:	d80b      	bhi.n	802d9aa <atanf+0x126>
 802d992:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 802d996:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802d99a:	eea0 7a27 	vfma.f32	s14, s0, s15
 802d99e:	2302      	movs	r3, #2
 802d9a0:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d9a4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802d9a8:	e7af      	b.n	802d90a <atanf+0x86>
 802d9aa:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802d9ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802d9b2:	2303      	movs	r3, #3
 802d9b4:	e7a9      	b.n	802d90a <atanf+0x86>
 802d9b6:	4a1b      	ldr	r2, [pc, #108]	@ (802da24 <atanf+0x1a0>)
 802d9b8:	491b      	ldr	r1, [pc, #108]	@ (802da28 <atanf+0x1a4>)
 802d9ba:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d9be:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802d9c2:	edd3 6a00 	vldr	s13, [r3]
 802d9c6:	ee37 7a66 	vsub.f32	s14, s14, s13
 802d9ca:	2d00      	cmp	r5, #0
 802d9cc:	ee37 7a67 	vsub.f32	s14, s14, s15
 802d9d0:	edd2 7a00 	vldr	s15, [r2]
 802d9d4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d9d8:	bfb8      	it	lt
 802d9da:	eef1 7a67 	vneglt.f32	s15, s15
 802d9de:	e760      	b.n	802d8a2 <atanf+0x1e>
 802d9e0:	bfc90fdb 	.word	0xbfc90fdb
 802d9e4:	3fc90fdb 	.word	0x3fc90fdb
 802d9e8:	3edfffff 	.word	0x3edfffff
 802d9ec:	7149f2ca 	.word	0x7149f2ca
 802d9f0:	3f97ffff 	.word	0x3f97ffff
 802d9f4:	3c8569d7 	.word	0x3c8569d7
 802d9f8:	3d4bda59 	.word	0x3d4bda59
 802d9fc:	bd6ef16b 	.word	0xbd6ef16b
 802da00:	3d886b35 	.word	0x3d886b35
 802da04:	3dba2e6e 	.word	0x3dba2e6e
 802da08:	3e124925 	.word	0x3e124925
 802da0c:	3eaaaaab 	.word	0x3eaaaaab
 802da10:	bd15a221 	.word	0xbd15a221
 802da14:	bd9d8795 	.word	0xbd9d8795
 802da18:	bde38e38 	.word	0xbde38e38
 802da1c:	be4ccccd 	.word	0xbe4ccccd
 802da20:	401bffff 	.word	0x401bffff
 802da24:	08032cc0 	.word	0x08032cc0
 802da28:	08032cb0 	.word	0x08032cb0

0802da2c <fabsf>:
 802da2c:	ee10 3a10 	vmov	r3, s0
 802da30:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802da34:	ee00 3a10 	vmov	s0, r3
 802da38:	4770      	bx	lr
	...

0802da3c <__kernel_rem_pio2f>:
 802da3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802da40:	ed2d 8b04 	vpush	{d8-d9}
 802da44:	b0d9      	sub	sp, #356	@ 0x164
 802da46:	4690      	mov	r8, r2
 802da48:	9001      	str	r0, [sp, #4]
 802da4a:	4ab6      	ldr	r2, [pc, #728]	@ (802dd24 <__kernel_rem_pio2f+0x2e8>)
 802da4c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802da4e:	f118 0f04 	cmn.w	r8, #4
 802da52:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802da56:	460f      	mov	r7, r1
 802da58:	f103 3bff 	add.w	fp, r3, #4294967295
 802da5c:	db26      	blt.n	802daac <__kernel_rem_pio2f+0x70>
 802da5e:	f1b8 0203 	subs.w	r2, r8, #3
 802da62:	bf48      	it	mi
 802da64:	f108 0204 	addmi.w	r2, r8, #4
 802da68:	10d2      	asrs	r2, r2, #3
 802da6a:	1c55      	adds	r5, r2, #1
 802da6c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802da6e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 802dd34 <__kernel_rem_pio2f+0x2f8>
 802da72:	00e8      	lsls	r0, r5, #3
 802da74:	eba2 060b 	sub.w	r6, r2, fp
 802da78:	9002      	str	r0, [sp, #8]
 802da7a:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802da7e:	eb0a 0c0b 	add.w	ip, sl, fp
 802da82:	ac1c      	add	r4, sp, #112	@ 0x70
 802da84:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 802da88:	2000      	movs	r0, #0
 802da8a:	4560      	cmp	r0, ip
 802da8c:	dd10      	ble.n	802dab0 <__kernel_rem_pio2f+0x74>
 802da8e:	a91c      	add	r1, sp, #112	@ 0x70
 802da90:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802da94:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 802da98:	2600      	movs	r6, #0
 802da9a:	4556      	cmp	r6, sl
 802da9c:	dc24      	bgt.n	802dae8 <__kernel_rem_pio2f+0xac>
 802da9e:	f8dd e004 	ldr.w	lr, [sp, #4]
 802daa2:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 802dd34 <__kernel_rem_pio2f+0x2f8>
 802daa6:	4684      	mov	ip, r0
 802daa8:	2400      	movs	r4, #0
 802daaa:	e016      	b.n	802dada <__kernel_rem_pio2f+0x9e>
 802daac:	2200      	movs	r2, #0
 802daae:	e7dc      	b.n	802da6a <__kernel_rem_pio2f+0x2e>
 802dab0:	42c6      	cmn	r6, r0
 802dab2:	bf5d      	ittte	pl
 802dab4:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 802dab8:	ee07 1a90 	vmovpl	s15, r1
 802dabc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802dac0:	eef0 7a47 	vmovmi.f32	s15, s14
 802dac4:	ece4 7a01 	vstmia	r4!, {s15}
 802dac8:	3001      	adds	r0, #1
 802daca:	e7de      	b.n	802da8a <__kernel_rem_pio2f+0x4e>
 802dacc:	ecfe 6a01 	vldmia	lr!, {s13}
 802dad0:	ed3c 7a01 	vldmdb	ip!, {s14}
 802dad4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dad8:	3401      	adds	r4, #1
 802dada:	455c      	cmp	r4, fp
 802dadc:	ddf6      	ble.n	802dacc <__kernel_rem_pio2f+0x90>
 802dade:	ece9 7a01 	vstmia	r9!, {s15}
 802dae2:	3601      	adds	r6, #1
 802dae4:	3004      	adds	r0, #4
 802dae6:	e7d8      	b.n	802da9a <__kernel_rem_pio2f+0x5e>
 802dae8:	a908      	add	r1, sp, #32
 802daea:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802daee:	9104      	str	r1, [sp, #16]
 802daf0:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802daf2:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 802dd30 <__kernel_rem_pio2f+0x2f4>
 802daf6:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802dd2c <__kernel_rem_pio2f+0x2f0>
 802dafa:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802dafe:	9203      	str	r2, [sp, #12]
 802db00:	4654      	mov	r4, sl
 802db02:	00a2      	lsls	r2, r4, #2
 802db04:	9205      	str	r2, [sp, #20]
 802db06:	aa58      	add	r2, sp, #352	@ 0x160
 802db08:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802db0c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 802db10:	a944      	add	r1, sp, #272	@ 0x110
 802db12:	aa08      	add	r2, sp, #32
 802db14:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802db18:	4694      	mov	ip, r2
 802db1a:	4626      	mov	r6, r4
 802db1c:	2e00      	cmp	r6, #0
 802db1e:	dc4c      	bgt.n	802dbba <__kernel_rem_pio2f+0x17e>
 802db20:	4628      	mov	r0, r5
 802db22:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802db26:	f000 f9f1 	bl	802df0c <scalbnf>
 802db2a:	eeb0 8a40 	vmov.f32	s16, s0
 802db2e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802db32:	ee28 0a00 	vmul.f32	s0, s16, s0
 802db36:	f000 fa4f 	bl	802dfd8 <floorf>
 802db3a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802db3e:	eea0 8a67 	vfms.f32	s16, s0, s15
 802db42:	2d00      	cmp	r5, #0
 802db44:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802db48:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802db4c:	ee17 9a90 	vmov	r9, s15
 802db50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802db54:	ee38 8a67 	vsub.f32	s16, s16, s15
 802db58:	dd41      	ble.n	802dbde <__kernel_rem_pio2f+0x1a2>
 802db5a:	f104 3cff 	add.w	ip, r4, #4294967295
 802db5e:	a908      	add	r1, sp, #32
 802db60:	f1c5 0e08 	rsb	lr, r5, #8
 802db64:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802db68:	fa46 f00e 	asr.w	r0, r6, lr
 802db6c:	4481      	add	r9, r0
 802db6e:	fa00 f00e 	lsl.w	r0, r0, lr
 802db72:	1a36      	subs	r6, r6, r0
 802db74:	f1c5 0007 	rsb	r0, r5, #7
 802db78:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 802db7c:	4106      	asrs	r6, r0
 802db7e:	2e00      	cmp	r6, #0
 802db80:	dd3c      	ble.n	802dbfc <__kernel_rem_pio2f+0x1c0>
 802db82:	f04f 0e00 	mov.w	lr, #0
 802db86:	f109 0901 	add.w	r9, r9, #1
 802db8a:	4670      	mov	r0, lr
 802db8c:	4574      	cmp	r4, lr
 802db8e:	dc68      	bgt.n	802dc62 <__kernel_rem_pio2f+0x226>
 802db90:	2d00      	cmp	r5, #0
 802db92:	dd03      	ble.n	802db9c <__kernel_rem_pio2f+0x160>
 802db94:	2d01      	cmp	r5, #1
 802db96:	d074      	beq.n	802dc82 <__kernel_rem_pio2f+0x246>
 802db98:	2d02      	cmp	r5, #2
 802db9a:	d07d      	beq.n	802dc98 <__kernel_rem_pio2f+0x25c>
 802db9c:	2e02      	cmp	r6, #2
 802db9e:	d12d      	bne.n	802dbfc <__kernel_rem_pio2f+0x1c0>
 802dba0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802dba4:	ee30 8a48 	vsub.f32	s16, s0, s16
 802dba8:	b340      	cbz	r0, 802dbfc <__kernel_rem_pio2f+0x1c0>
 802dbaa:	4628      	mov	r0, r5
 802dbac:	9306      	str	r3, [sp, #24]
 802dbae:	f000 f9ad 	bl	802df0c <scalbnf>
 802dbb2:	9b06      	ldr	r3, [sp, #24]
 802dbb4:	ee38 8a40 	vsub.f32	s16, s16, s0
 802dbb8:	e020      	b.n	802dbfc <__kernel_rem_pio2f+0x1c0>
 802dbba:	ee60 7a28 	vmul.f32	s15, s0, s17
 802dbbe:	3e01      	subs	r6, #1
 802dbc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802dbc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802dbc8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802dbcc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802dbd0:	ecac 0a01 	vstmia	ip!, {s0}
 802dbd4:	ed30 0a01 	vldmdb	r0!, {s0}
 802dbd8:	ee37 0a80 	vadd.f32	s0, s15, s0
 802dbdc:	e79e      	b.n	802db1c <__kernel_rem_pio2f+0xe0>
 802dbde:	d105      	bne.n	802dbec <__kernel_rem_pio2f+0x1b0>
 802dbe0:	1e60      	subs	r0, r4, #1
 802dbe2:	a908      	add	r1, sp, #32
 802dbe4:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 802dbe8:	11f6      	asrs	r6, r6, #7
 802dbea:	e7c8      	b.n	802db7e <__kernel_rem_pio2f+0x142>
 802dbec:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802dbf0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802dbf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802dbf8:	da31      	bge.n	802dc5e <__kernel_rem_pio2f+0x222>
 802dbfa:	2600      	movs	r6, #0
 802dbfc:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802dc00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802dc04:	f040 8098 	bne.w	802dd38 <__kernel_rem_pio2f+0x2fc>
 802dc08:	1e60      	subs	r0, r4, #1
 802dc0a:	2200      	movs	r2, #0
 802dc0c:	4550      	cmp	r0, sl
 802dc0e:	da4b      	bge.n	802dca8 <__kernel_rem_pio2f+0x26c>
 802dc10:	2a00      	cmp	r2, #0
 802dc12:	d065      	beq.n	802dce0 <__kernel_rem_pio2f+0x2a4>
 802dc14:	3c01      	subs	r4, #1
 802dc16:	ab08      	add	r3, sp, #32
 802dc18:	3d08      	subs	r5, #8
 802dc1a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802dc1e:	2b00      	cmp	r3, #0
 802dc20:	d0f8      	beq.n	802dc14 <__kernel_rem_pio2f+0x1d8>
 802dc22:	4628      	mov	r0, r5
 802dc24:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802dc28:	f000 f970 	bl	802df0c <scalbnf>
 802dc2c:	1c63      	adds	r3, r4, #1
 802dc2e:	aa44      	add	r2, sp, #272	@ 0x110
 802dc30:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 802dd30 <__kernel_rem_pio2f+0x2f4>
 802dc34:	0099      	lsls	r1, r3, #2
 802dc36:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802dc3a:	4623      	mov	r3, r4
 802dc3c:	2b00      	cmp	r3, #0
 802dc3e:	f280 80a9 	bge.w	802dd94 <__kernel_rem_pio2f+0x358>
 802dc42:	4623      	mov	r3, r4
 802dc44:	2b00      	cmp	r3, #0
 802dc46:	f2c0 80c7 	blt.w	802ddd8 <__kernel_rem_pio2f+0x39c>
 802dc4a:	aa44      	add	r2, sp, #272	@ 0x110
 802dc4c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802dc50:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 802dd28 <__kernel_rem_pio2f+0x2ec>
 802dc54:	eddf 7a37 	vldr	s15, [pc, #220]	@ 802dd34 <__kernel_rem_pio2f+0x2f8>
 802dc58:	2000      	movs	r0, #0
 802dc5a:	1ae2      	subs	r2, r4, r3
 802dc5c:	e0b1      	b.n	802ddc2 <__kernel_rem_pio2f+0x386>
 802dc5e:	2602      	movs	r6, #2
 802dc60:	e78f      	b.n	802db82 <__kernel_rem_pio2f+0x146>
 802dc62:	f852 1b04 	ldr.w	r1, [r2], #4
 802dc66:	b948      	cbnz	r0, 802dc7c <__kernel_rem_pio2f+0x240>
 802dc68:	b121      	cbz	r1, 802dc74 <__kernel_rem_pio2f+0x238>
 802dc6a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802dc6e:	f842 1c04 	str.w	r1, [r2, #-4]
 802dc72:	2101      	movs	r1, #1
 802dc74:	f10e 0e01 	add.w	lr, lr, #1
 802dc78:	4608      	mov	r0, r1
 802dc7a:	e787      	b.n	802db8c <__kernel_rem_pio2f+0x150>
 802dc7c:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 802dc80:	e7f5      	b.n	802dc6e <__kernel_rem_pio2f+0x232>
 802dc82:	f104 3cff 	add.w	ip, r4, #4294967295
 802dc86:	aa08      	add	r2, sp, #32
 802dc88:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802dc8c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 802dc90:	a908      	add	r1, sp, #32
 802dc92:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 802dc96:	e781      	b.n	802db9c <__kernel_rem_pio2f+0x160>
 802dc98:	f104 3cff 	add.w	ip, r4, #4294967295
 802dc9c:	aa08      	add	r2, sp, #32
 802dc9e:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802dca2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802dca6:	e7f3      	b.n	802dc90 <__kernel_rem_pio2f+0x254>
 802dca8:	a908      	add	r1, sp, #32
 802dcaa:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802dcae:	3801      	subs	r0, #1
 802dcb0:	430a      	orrs	r2, r1
 802dcb2:	e7ab      	b.n	802dc0c <__kernel_rem_pio2f+0x1d0>
 802dcb4:	3201      	adds	r2, #1
 802dcb6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 802dcba:	2e00      	cmp	r6, #0
 802dcbc:	d0fa      	beq.n	802dcb4 <__kernel_rem_pio2f+0x278>
 802dcbe:	9905      	ldr	r1, [sp, #20]
 802dcc0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 802dcc4:	eb0d 0001 	add.w	r0, sp, r1
 802dcc8:	18e6      	adds	r6, r4, r3
 802dcca:	a91c      	add	r1, sp, #112	@ 0x70
 802dccc:	f104 0c01 	add.w	ip, r4, #1
 802dcd0:	384c      	subs	r0, #76	@ 0x4c
 802dcd2:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 802dcd6:	4422      	add	r2, r4
 802dcd8:	4562      	cmp	r2, ip
 802dcda:	da04      	bge.n	802dce6 <__kernel_rem_pio2f+0x2aa>
 802dcdc:	4614      	mov	r4, r2
 802dcde:	e710      	b.n	802db02 <__kernel_rem_pio2f+0xc6>
 802dce0:	9804      	ldr	r0, [sp, #16]
 802dce2:	2201      	movs	r2, #1
 802dce4:	e7e7      	b.n	802dcb6 <__kernel_rem_pio2f+0x27a>
 802dce6:	9903      	ldr	r1, [sp, #12]
 802dce8:	f8dd e004 	ldr.w	lr, [sp, #4]
 802dcec:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802dcf0:	9105      	str	r1, [sp, #20]
 802dcf2:	ee07 1a90 	vmov	s15, r1
 802dcf6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802dcfa:	2400      	movs	r4, #0
 802dcfc:	ece6 7a01 	vstmia	r6!, {s15}
 802dd00:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802dd34 <__kernel_rem_pio2f+0x2f8>
 802dd04:	46b1      	mov	r9, r6
 802dd06:	455c      	cmp	r4, fp
 802dd08:	dd04      	ble.n	802dd14 <__kernel_rem_pio2f+0x2d8>
 802dd0a:	ece0 7a01 	vstmia	r0!, {s15}
 802dd0e:	f10c 0c01 	add.w	ip, ip, #1
 802dd12:	e7e1      	b.n	802dcd8 <__kernel_rem_pio2f+0x29c>
 802dd14:	ecfe 6a01 	vldmia	lr!, {s13}
 802dd18:	ed39 7a01 	vldmdb	r9!, {s14}
 802dd1c:	3401      	adds	r4, #1
 802dd1e:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dd22:	e7f0      	b.n	802dd06 <__kernel_rem_pio2f+0x2ca>
 802dd24:	08032cfc 	.word	0x08032cfc
 802dd28:	08032cd0 	.word	0x08032cd0
 802dd2c:	43800000 	.word	0x43800000
 802dd30:	3b800000 	.word	0x3b800000
 802dd34:	00000000 	.word	0x00000000
 802dd38:	9b02      	ldr	r3, [sp, #8]
 802dd3a:	eeb0 0a48 	vmov.f32	s0, s16
 802dd3e:	eba3 0008 	sub.w	r0, r3, r8
 802dd42:	f000 f8e3 	bl	802df0c <scalbnf>
 802dd46:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802dd2c <__kernel_rem_pio2f+0x2f0>
 802dd4a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802dd4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802dd52:	db19      	blt.n	802dd88 <__kernel_rem_pio2f+0x34c>
 802dd54:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 802dd30 <__kernel_rem_pio2f+0x2f4>
 802dd58:	ee60 7a27 	vmul.f32	s15, s0, s15
 802dd5c:	aa08      	add	r2, sp, #32
 802dd5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802dd62:	3508      	adds	r5, #8
 802dd64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802dd68:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802dd6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802dd70:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802dd74:	ee10 3a10 	vmov	r3, s0
 802dd78:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802dd7c:	ee17 3a90 	vmov	r3, s15
 802dd80:	3401      	adds	r4, #1
 802dd82:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802dd86:	e74c      	b.n	802dc22 <__kernel_rem_pio2f+0x1e6>
 802dd88:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802dd8c:	aa08      	add	r2, sp, #32
 802dd8e:	ee10 3a10 	vmov	r3, s0
 802dd92:	e7f6      	b.n	802dd82 <__kernel_rem_pio2f+0x346>
 802dd94:	a808      	add	r0, sp, #32
 802dd96:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802dd9a:	9001      	str	r0, [sp, #4]
 802dd9c:	ee07 0a90 	vmov	s15, r0
 802dda0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802dda4:	3b01      	subs	r3, #1
 802dda6:	ee67 7a80 	vmul.f32	s15, s15, s0
 802ddaa:	ee20 0a07 	vmul.f32	s0, s0, s14
 802ddae:	ed62 7a01 	vstmdb	r2!, {s15}
 802ddb2:	e743      	b.n	802dc3c <__kernel_rem_pio2f+0x200>
 802ddb4:	ecfc 6a01 	vldmia	ip!, {s13}
 802ddb8:	ecb5 7a01 	vldmia	r5!, {s14}
 802ddbc:	eee6 7a87 	vfma.f32	s15, s13, s14
 802ddc0:	3001      	adds	r0, #1
 802ddc2:	4550      	cmp	r0, sl
 802ddc4:	dc01      	bgt.n	802ddca <__kernel_rem_pio2f+0x38e>
 802ddc6:	4290      	cmp	r0, r2
 802ddc8:	ddf4      	ble.n	802ddb4 <__kernel_rem_pio2f+0x378>
 802ddca:	a858      	add	r0, sp, #352	@ 0x160
 802ddcc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802ddd0:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 802ddd4:	3b01      	subs	r3, #1
 802ddd6:	e735      	b.n	802dc44 <__kernel_rem_pio2f+0x208>
 802ddd8:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802ddda:	2b02      	cmp	r3, #2
 802dddc:	dc09      	bgt.n	802ddf2 <__kernel_rem_pio2f+0x3b6>
 802ddde:	2b00      	cmp	r3, #0
 802dde0:	dc27      	bgt.n	802de32 <__kernel_rem_pio2f+0x3f6>
 802dde2:	d040      	beq.n	802de66 <__kernel_rem_pio2f+0x42a>
 802dde4:	f009 0007 	and.w	r0, r9, #7
 802dde8:	b059      	add	sp, #356	@ 0x164
 802ddea:	ecbd 8b04 	vpop	{d8-d9}
 802ddee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ddf2:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802ddf4:	2b03      	cmp	r3, #3
 802ddf6:	d1f5      	bne.n	802dde4 <__kernel_rem_pio2f+0x3a8>
 802ddf8:	aa30      	add	r2, sp, #192	@ 0xc0
 802ddfa:	1f0b      	subs	r3, r1, #4
 802ddfc:	4413      	add	r3, r2
 802ddfe:	461a      	mov	r2, r3
 802de00:	4620      	mov	r0, r4
 802de02:	2800      	cmp	r0, #0
 802de04:	dc50      	bgt.n	802dea8 <__kernel_rem_pio2f+0x46c>
 802de06:	4622      	mov	r2, r4
 802de08:	2a01      	cmp	r2, #1
 802de0a:	dc5d      	bgt.n	802dec8 <__kernel_rem_pio2f+0x48c>
 802de0c:	ab30      	add	r3, sp, #192	@ 0xc0
 802de0e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 802dd34 <__kernel_rem_pio2f+0x2f8>
 802de12:	440b      	add	r3, r1
 802de14:	2c01      	cmp	r4, #1
 802de16:	dc67      	bgt.n	802dee8 <__kernel_rem_pio2f+0x4ac>
 802de18:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802de1c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 802de20:	2e00      	cmp	r6, #0
 802de22:	d167      	bne.n	802def4 <__kernel_rem_pio2f+0x4b8>
 802de24:	edc7 6a00 	vstr	s13, [r7]
 802de28:	ed87 7a01 	vstr	s14, [r7, #4]
 802de2c:	edc7 7a02 	vstr	s15, [r7, #8]
 802de30:	e7d8      	b.n	802dde4 <__kernel_rem_pio2f+0x3a8>
 802de32:	ab30      	add	r3, sp, #192	@ 0xc0
 802de34:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 802dd34 <__kernel_rem_pio2f+0x2f8>
 802de38:	440b      	add	r3, r1
 802de3a:	4622      	mov	r2, r4
 802de3c:	2a00      	cmp	r2, #0
 802de3e:	da24      	bge.n	802de8a <__kernel_rem_pio2f+0x44e>
 802de40:	b34e      	cbz	r6, 802de96 <__kernel_rem_pio2f+0x45a>
 802de42:	eef1 7a47 	vneg.f32	s15, s14
 802de46:	edc7 7a00 	vstr	s15, [r7]
 802de4a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802de4e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802de52:	aa31      	add	r2, sp, #196	@ 0xc4
 802de54:	2301      	movs	r3, #1
 802de56:	429c      	cmp	r4, r3
 802de58:	da20      	bge.n	802de9c <__kernel_rem_pio2f+0x460>
 802de5a:	b10e      	cbz	r6, 802de60 <__kernel_rem_pio2f+0x424>
 802de5c:	eef1 7a67 	vneg.f32	s15, s15
 802de60:	edc7 7a01 	vstr	s15, [r7, #4]
 802de64:	e7be      	b.n	802dde4 <__kernel_rem_pio2f+0x3a8>
 802de66:	ab30      	add	r3, sp, #192	@ 0xc0
 802de68:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 802dd34 <__kernel_rem_pio2f+0x2f8>
 802de6c:	440b      	add	r3, r1
 802de6e:	2c00      	cmp	r4, #0
 802de70:	da05      	bge.n	802de7e <__kernel_rem_pio2f+0x442>
 802de72:	b10e      	cbz	r6, 802de78 <__kernel_rem_pio2f+0x43c>
 802de74:	eef1 7a67 	vneg.f32	s15, s15
 802de78:	edc7 7a00 	vstr	s15, [r7]
 802de7c:	e7b2      	b.n	802dde4 <__kernel_rem_pio2f+0x3a8>
 802de7e:	ed33 7a01 	vldmdb	r3!, {s14}
 802de82:	3c01      	subs	r4, #1
 802de84:	ee77 7a87 	vadd.f32	s15, s15, s14
 802de88:	e7f1      	b.n	802de6e <__kernel_rem_pio2f+0x432>
 802de8a:	ed73 7a01 	vldmdb	r3!, {s15}
 802de8e:	3a01      	subs	r2, #1
 802de90:	ee37 7a27 	vadd.f32	s14, s14, s15
 802de94:	e7d2      	b.n	802de3c <__kernel_rem_pio2f+0x400>
 802de96:	eef0 7a47 	vmov.f32	s15, s14
 802de9a:	e7d4      	b.n	802de46 <__kernel_rem_pio2f+0x40a>
 802de9c:	ecb2 7a01 	vldmia	r2!, {s14}
 802dea0:	3301      	adds	r3, #1
 802dea2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802dea6:	e7d6      	b.n	802de56 <__kernel_rem_pio2f+0x41a>
 802dea8:	ed72 7a01 	vldmdb	r2!, {s15}
 802deac:	edd2 6a01 	vldr	s13, [r2, #4]
 802deb0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802deb4:	3801      	subs	r0, #1
 802deb6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802deba:	ed82 7a00 	vstr	s14, [r2]
 802debe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802dec2:	edc2 7a01 	vstr	s15, [r2, #4]
 802dec6:	e79c      	b.n	802de02 <__kernel_rem_pio2f+0x3c6>
 802dec8:	ed73 7a01 	vldmdb	r3!, {s15}
 802decc:	edd3 6a01 	vldr	s13, [r3, #4]
 802ded0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ded4:	3a01      	subs	r2, #1
 802ded6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802deda:	ed83 7a00 	vstr	s14, [r3]
 802dede:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802dee2:	edc3 7a01 	vstr	s15, [r3, #4]
 802dee6:	e78f      	b.n	802de08 <__kernel_rem_pio2f+0x3cc>
 802dee8:	ed33 7a01 	vldmdb	r3!, {s14}
 802deec:	3c01      	subs	r4, #1
 802deee:	ee77 7a87 	vadd.f32	s15, s15, s14
 802def2:	e78f      	b.n	802de14 <__kernel_rem_pio2f+0x3d8>
 802def4:	eef1 6a66 	vneg.f32	s13, s13
 802def8:	eeb1 7a47 	vneg.f32	s14, s14
 802defc:	edc7 6a00 	vstr	s13, [r7]
 802df00:	ed87 7a01 	vstr	s14, [r7, #4]
 802df04:	eef1 7a67 	vneg.f32	s15, s15
 802df08:	e790      	b.n	802de2c <__kernel_rem_pio2f+0x3f0>
 802df0a:	bf00      	nop

0802df0c <scalbnf>:
 802df0c:	ee10 3a10 	vmov	r3, s0
 802df10:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 802df14:	d02b      	beq.n	802df6e <scalbnf+0x62>
 802df16:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802df1a:	d302      	bcc.n	802df22 <scalbnf+0x16>
 802df1c:	ee30 0a00 	vadd.f32	s0, s0, s0
 802df20:	4770      	bx	lr
 802df22:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802df26:	d123      	bne.n	802df70 <scalbnf+0x64>
 802df28:	4b24      	ldr	r3, [pc, #144]	@ (802dfbc <scalbnf+0xb0>)
 802df2a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802dfc0 <scalbnf+0xb4>
 802df2e:	4298      	cmp	r0, r3
 802df30:	ee20 0a27 	vmul.f32	s0, s0, s15
 802df34:	db17      	blt.n	802df66 <scalbnf+0x5a>
 802df36:	ee10 3a10 	vmov	r3, s0
 802df3a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802df3e:	3a19      	subs	r2, #25
 802df40:	f24c 3150 	movw	r1, #50000	@ 0xc350
 802df44:	4288      	cmp	r0, r1
 802df46:	dd15      	ble.n	802df74 <scalbnf+0x68>
 802df48:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 802dfc4 <scalbnf+0xb8>
 802df4c:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802dfc8 <scalbnf+0xbc>
 802df50:	ee10 3a10 	vmov	r3, s0
 802df54:	eeb0 7a67 	vmov.f32	s14, s15
 802df58:	2b00      	cmp	r3, #0
 802df5a:	bfb8      	it	lt
 802df5c:	eef0 7a66 	vmovlt.f32	s15, s13
 802df60:	ee27 0a87 	vmul.f32	s0, s15, s14
 802df64:	4770      	bx	lr
 802df66:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802dfcc <scalbnf+0xc0>
 802df6a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802df6e:	4770      	bx	lr
 802df70:	0dd2      	lsrs	r2, r2, #23
 802df72:	e7e5      	b.n	802df40 <scalbnf+0x34>
 802df74:	4410      	add	r0, r2
 802df76:	28fe      	cmp	r0, #254	@ 0xfe
 802df78:	dce6      	bgt.n	802df48 <scalbnf+0x3c>
 802df7a:	2800      	cmp	r0, #0
 802df7c:	dd06      	ble.n	802df8c <scalbnf+0x80>
 802df7e:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802df82:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802df86:	ee00 3a10 	vmov	s0, r3
 802df8a:	4770      	bx	lr
 802df8c:	f110 0f16 	cmn.w	r0, #22
 802df90:	da09      	bge.n	802dfa6 <scalbnf+0x9a>
 802df92:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802dfcc <scalbnf+0xc0>
 802df96:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802dfd0 <scalbnf+0xc4>
 802df9a:	ee10 3a10 	vmov	r3, s0
 802df9e:	eeb0 7a67 	vmov.f32	s14, s15
 802dfa2:	2b00      	cmp	r3, #0
 802dfa4:	e7d9      	b.n	802df5a <scalbnf+0x4e>
 802dfa6:	3019      	adds	r0, #25
 802dfa8:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802dfac:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802dfb0:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 802dfd4 <scalbnf+0xc8>
 802dfb4:	ee07 3a90 	vmov	s15, r3
 802dfb8:	e7d7      	b.n	802df6a <scalbnf+0x5e>
 802dfba:	bf00      	nop
 802dfbc:	ffff3cb0 	.word	0xffff3cb0
 802dfc0:	4c000000 	.word	0x4c000000
 802dfc4:	7149f2ca 	.word	0x7149f2ca
 802dfc8:	f149f2ca 	.word	0xf149f2ca
 802dfcc:	0da24260 	.word	0x0da24260
 802dfd0:	8da24260 	.word	0x8da24260
 802dfd4:	33000000 	.word	0x33000000

0802dfd8 <floorf>:
 802dfd8:	ee10 3a10 	vmov	r3, s0
 802dfdc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802dfe0:	3a7f      	subs	r2, #127	@ 0x7f
 802dfe2:	2a16      	cmp	r2, #22
 802dfe4:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802dfe8:	dc2b      	bgt.n	802e042 <floorf+0x6a>
 802dfea:	2a00      	cmp	r2, #0
 802dfec:	da12      	bge.n	802e014 <floorf+0x3c>
 802dfee:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802e054 <floorf+0x7c>
 802dff2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802dff6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802dffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802dffe:	dd06      	ble.n	802e00e <floorf+0x36>
 802e000:	2b00      	cmp	r3, #0
 802e002:	da24      	bge.n	802e04e <floorf+0x76>
 802e004:	2900      	cmp	r1, #0
 802e006:	4b14      	ldr	r3, [pc, #80]	@ (802e058 <floorf+0x80>)
 802e008:	bf08      	it	eq
 802e00a:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802e00e:	ee00 3a10 	vmov	s0, r3
 802e012:	4770      	bx	lr
 802e014:	4911      	ldr	r1, [pc, #68]	@ (802e05c <floorf+0x84>)
 802e016:	4111      	asrs	r1, r2
 802e018:	420b      	tst	r3, r1
 802e01a:	d0fa      	beq.n	802e012 <floorf+0x3a>
 802e01c:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 802e054 <floorf+0x7c>
 802e020:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e024:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802e028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e02c:	ddef      	ble.n	802e00e <floorf+0x36>
 802e02e:	2b00      	cmp	r3, #0
 802e030:	bfbe      	ittt	lt
 802e032:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802e036:	fa40 f202 	asrlt.w	r2, r0, r2
 802e03a:	189b      	addlt	r3, r3, r2
 802e03c:	ea23 0301 	bic.w	r3, r3, r1
 802e040:	e7e5      	b.n	802e00e <floorf+0x36>
 802e042:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802e046:	d3e4      	bcc.n	802e012 <floorf+0x3a>
 802e048:	ee30 0a00 	vadd.f32	s0, s0, s0
 802e04c:	4770      	bx	lr
 802e04e:	2300      	movs	r3, #0
 802e050:	e7dd      	b.n	802e00e <floorf+0x36>
 802e052:	bf00      	nop
 802e054:	7149f2ca 	.word	0x7149f2ca
 802e058:	bf800000 	.word	0xbf800000
 802e05c:	007fffff 	.word	0x007fffff

0802e060 <abort>:
 802e060:	b508      	push	{r3, lr}
 802e062:	2006      	movs	r0, #6
 802e064:	f000 fa3c 	bl	802e4e0 <raise>
 802e068:	2001      	movs	r0, #1
 802e06a:	f7d4 fbfb 	bl	8002864 <_exit>
	...

0802e070 <__assert_func>:
 802e070:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802e072:	4614      	mov	r4, r2
 802e074:	461a      	mov	r2, r3
 802e076:	4b09      	ldr	r3, [pc, #36]	@ (802e09c <__assert_func+0x2c>)
 802e078:	681b      	ldr	r3, [r3, #0]
 802e07a:	4605      	mov	r5, r0
 802e07c:	68d8      	ldr	r0, [r3, #12]
 802e07e:	b14c      	cbz	r4, 802e094 <__assert_func+0x24>
 802e080:	4b07      	ldr	r3, [pc, #28]	@ (802e0a0 <__assert_func+0x30>)
 802e082:	9100      	str	r1, [sp, #0]
 802e084:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802e088:	4906      	ldr	r1, [pc, #24]	@ (802e0a4 <__assert_func+0x34>)
 802e08a:	462b      	mov	r3, r5
 802e08c:	f000 f984 	bl	802e398 <fiprintf>
 802e090:	f7ff ffe6 	bl	802e060 <abort>
 802e094:	4b04      	ldr	r3, [pc, #16]	@ (802e0a8 <__assert_func+0x38>)
 802e096:	461c      	mov	r4, r3
 802e098:	e7f3      	b.n	802e082 <__assert_func+0x12>
 802e09a:	bf00      	nop
 802e09c:	20000110 	.word	0x20000110
 802e0a0:	08030648 	.word	0x08030648
 802e0a4:	08030655 	.word	0x08030655
 802e0a8:	08030683 	.word	0x08030683

0802e0ac <atexit>:
 802e0ac:	2300      	movs	r3, #0
 802e0ae:	4601      	mov	r1, r0
 802e0b0:	461a      	mov	r2, r3
 802e0b2:	4618      	mov	r0, r3
 802e0b4:	f000 bac2 	b.w	802e63c <__register_exitproc>

0802e0b8 <malloc>:
 802e0b8:	4b02      	ldr	r3, [pc, #8]	@ (802e0c4 <malloc+0xc>)
 802e0ba:	4601      	mov	r1, r0
 802e0bc:	6818      	ldr	r0, [r3, #0]
 802e0be:	f000 b82d 	b.w	802e11c <_malloc_r>
 802e0c2:	bf00      	nop
 802e0c4:	20000110 	.word	0x20000110

0802e0c8 <free>:
 802e0c8:	4b02      	ldr	r3, [pc, #8]	@ (802e0d4 <free+0xc>)
 802e0ca:	4601      	mov	r1, r0
 802e0cc:	6818      	ldr	r0, [r3, #0]
 802e0ce:	f000 bb11 	b.w	802e6f4 <_free_r>
 802e0d2:	bf00      	nop
 802e0d4:	20000110 	.word	0x20000110

0802e0d8 <sbrk_aligned>:
 802e0d8:	b570      	push	{r4, r5, r6, lr}
 802e0da:	4e0f      	ldr	r6, [pc, #60]	@ (802e118 <sbrk_aligned+0x40>)
 802e0dc:	460c      	mov	r4, r1
 802e0de:	6831      	ldr	r1, [r6, #0]
 802e0e0:	4605      	mov	r5, r0
 802e0e2:	b911      	cbnz	r1, 802e0ea <sbrk_aligned+0x12>
 802e0e4:	f000 fa4c 	bl	802e580 <_sbrk_r>
 802e0e8:	6030      	str	r0, [r6, #0]
 802e0ea:	4621      	mov	r1, r4
 802e0ec:	4628      	mov	r0, r5
 802e0ee:	f000 fa47 	bl	802e580 <_sbrk_r>
 802e0f2:	1c43      	adds	r3, r0, #1
 802e0f4:	d103      	bne.n	802e0fe <sbrk_aligned+0x26>
 802e0f6:	f04f 34ff 	mov.w	r4, #4294967295
 802e0fa:	4620      	mov	r0, r4
 802e0fc:	bd70      	pop	{r4, r5, r6, pc}
 802e0fe:	1cc4      	adds	r4, r0, #3
 802e100:	f024 0403 	bic.w	r4, r4, #3
 802e104:	42a0      	cmp	r0, r4
 802e106:	d0f8      	beq.n	802e0fa <sbrk_aligned+0x22>
 802e108:	1a21      	subs	r1, r4, r0
 802e10a:	4628      	mov	r0, r5
 802e10c:	f000 fa38 	bl	802e580 <_sbrk_r>
 802e110:	3001      	adds	r0, #1
 802e112:	d1f2      	bne.n	802e0fa <sbrk_aligned+0x22>
 802e114:	e7ef      	b.n	802e0f6 <sbrk_aligned+0x1e>
 802e116:	bf00      	nop
 802e118:	200142e0 	.word	0x200142e0

0802e11c <_malloc_r>:
 802e11c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e120:	1ccd      	adds	r5, r1, #3
 802e122:	f025 0503 	bic.w	r5, r5, #3
 802e126:	3508      	adds	r5, #8
 802e128:	2d0c      	cmp	r5, #12
 802e12a:	bf38      	it	cc
 802e12c:	250c      	movcc	r5, #12
 802e12e:	2d00      	cmp	r5, #0
 802e130:	4606      	mov	r6, r0
 802e132:	db01      	blt.n	802e138 <_malloc_r+0x1c>
 802e134:	42a9      	cmp	r1, r5
 802e136:	d904      	bls.n	802e142 <_malloc_r+0x26>
 802e138:	230c      	movs	r3, #12
 802e13a:	6033      	str	r3, [r6, #0]
 802e13c:	2000      	movs	r0, #0
 802e13e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e142:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802e218 <_malloc_r+0xfc>
 802e146:	f000 f869 	bl	802e21c <__malloc_lock>
 802e14a:	f8d8 3000 	ldr.w	r3, [r8]
 802e14e:	461c      	mov	r4, r3
 802e150:	bb44      	cbnz	r4, 802e1a4 <_malloc_r+0x88>
 802e152:	4629      	mov	r1, r5
 802e154:	4630      	mov	r0, r6
 802e156:	f7ff ffbf 	bl	802e0d8 <sbrk_aligned>
 802e15a:	1c43      	adds	r3, r0, #1
 802e15c:	4604      	mov	r4, r0
 802e15e:	d158      	bne.n	802e212 <_malloc_r+0xf6>
 802e160:	f8d8 4000 	ldr.w	r4, [r8]
 802e164:	4627      	mov	r7, r4
 802e166:	2f00      	cmp	r7, #0
 802e168:	d143      	bne.n	802e1f2 <_malloc_r+0xd6>
 802e16a:	2c00      	cmp	r4, #0
 802e16c:	d04b      	beq.n	802e206 <_malloc_r+0xea>
 802e16e:	6823      	ldr	r3, [r4, #0]
 802e170:	4639      	mov	r1, r7
 802e172:	4630      	mov	r0, r6
 802e174:	eb04 0903 	add.w	r9, r4, r3
 802e178:	f000 fa02 	bl	802e580 <_sbrk_r>
 802e17c:	4581      	cmp	r9, r0
 802e17e:	d142      	bne.n	802e206 <_malloc_r+0xea>
 802e180:	6821      	ldr	r1, [r4, #0]
 802e182:	1a6d      	subs	r5, r5, r1
 802e184:	4629      	mov	r1, r5
 802e186:	4630      	mov	r0, r6
 802e188:	f7ff ffa6 	bl	802e0d8 <sbrk_aligned>
 802e18c:	3001      	adds	r0, #1
 802e18e:	d03a      	beq.n	802e206 <_malloc_r+0xea>
 802e190:	6823      	ldr	r3, [r4, #0]
 802e192:	442b      	add	r3, r5
 802e194:	6023      	str	r3, [r4, #0]
 802e196:	f8d8 3000 	ldr.w	r3, [r8]
 802e19a:	685a      	ldr	r2, [r3, #4]
 802e19c:	bb62      	cbnz	r2, 802e1f8 <_malloc_r+0xdc>
 802e19e:	f8c8 7000 	str.w	r7, [r8]
 802e1a2:	e00f      	b.n	802e1c4 <_malloc_r+0xa8>
 802e1a4:	6822      	ldr	r2, [r4, #0]
 802e1a6:	1b52      	subs	r2, r2, r5
 802e1a8:	d420      	bmi.n	802e1ec <_malloc_r+0xd0>
 802e1aa:	2a0b      	cmp	r2, #11
 802e1ac:	d917      	bls.n	802e1de <_malloc_r+0xc2>
 802e1ae:	1961      	adds	r1, r4, r5
 802e1b0:	42a3      	cmp	r3, r4
 802e1b2:	6025      	str	r5, [r4, #0]
 802e1b4:	bf18      	it	ne
 802e1b6:	6059      	strne	r1, [r3, #4]
 802e1b8:	6863      	ldr	r3, [r4, #4]
 802e1ba:	bf08      	it	eq
 802e1bc:	f8c8 1000 	streq.w	r1, [r8]
 802e1c0:	5162      	str	r2, [r4, r5]
 802e1c2:	604b      	str	r3, [r1, #4]
 802e1c4:	4630      	mov	r0, r6
 802e1c6:	f000 f82f 	bl	802e228 <__malloc_unlock>
 802e1ca:	f104 000b 	add.w	r0, r4, #11
 802e1ce:	1d23      	adds	r3, r4, #4
 802e1d0:	f020 0007 	bic.w	r0, r0, #7
 802e1d4:	1ac2      	subs	r2, r0, r3
 802e1d6:	bf1c      	itt	ne
 802e1d8:	1a1b      	subne	r3, r3, r0
 802e1da:	50a3      	strne	r3, [r4, r2]
 802e1dc:	e7af      	b.n	802e13e <_malloc_r+0x22>
 802e1de:	6862      	ldr	r2, [r4, #4]
 802e1e0:	42a3      	cmp	r3, r4
 802e1e2:	bf0c      	ite	eq
 802e1e4:	f8c8 2000 	streq.w	r2, [r8]
 802e1e8:	605a      	strne	r2, [r3, #4]
 802e1ea:	e7eb      	b.n	802e1c4 <_malloc_r+0xa8>
 802e1ec:	4623      	mov	r3, r4
 802e1ee:	6864      	ldr	r4, [r4, #4]
 802e1f0:	e7ae      	b.n	802e150 <_malloc_r+0x34>
 802e1f2:	463c      	mov	r4, r7
 802e1f4:	687f      	ldr	r7, [r7, #4]
 802e1f6:	e7b6      	b.n	802e166 <_malloc_r+0x4a>
 802e1f8:	461a      	mov	r2, r3
 802e1fa:	685b      	ldr	r3, [r3, #4]
 802e1fc:	42a3      	cmp	r3, r4
 802e1fe:	d1fb      	bne.n	802e1f8 <_malloc_r+0xdc>
 802e200:	2300      	movs	r3, #0
 802e202:	6053      	str	r3, [r2, #4]
 802e204:	e7de      	b.n	802e1c4 <_malloc_r+0xa8>
 802e206:	230c      	movs	r3, #12
 802e208:	6033      	str	r3, [r6, #0]
 802e20a:	4630      	mov	r0, r6
 802e20c:	f000 f80c 	bl	802e228 <__malloc_unlock>
 802e210:	e794      	b.n	802e13c <_malloc_r+0x20>
 802e212:	6005      	str	r5, [r0, #0]
 802e214:	e7d6      	b.n	802e1c4 <_malloc_r+0xa8>
 802e216:	bf00      	nop
 802e218:	200142e4 	.word	0x200142e4

0802e21c <__malloc_lock>:
 802e21c:	4801      	ldr	r0, [pc, #4]	@ (802e224 <__malloc_lock+0x8>)
 802e21e:	f000 b9fc 	b.w	802e61a <__retarget_lock_acquire_recursive>
 802e222:	bf00      	nop
 802e224:	20014428 	.word	0x20014428

0802e228 <__malloc_unlock>:
 802e228:	4801      	ldr	r0, [pc, #4]	@ (802e230 <__malloc_unlock+0x8>)
 802e22a:	f000 b9f7 	b.w	802e61c <__retarget_lock_release_recursive>
 802e22e:	bf00      	nop
 802e230:	20014428 	.word	0x20014428

0802e234 <__cxa_atexit>:
 802e234:	b510      	push	{r4, lr}
 802e236:	4604      	mov	r4, r0
 802e238:	4804      	ldr	r0, [pc, #16]	@ (802e24c <__cxa_atexit+0x18>)
 802e23a:	4613      	mov	r3, r2
 802e23c:	b120      	cbz	r0, 802e248 <__cxa_atexit+0x14>
 802e23e:	460a      	mov	r2, r1
 802e240:	2002      	movs	r0, #2
 802e242:	4621      	mov	r1, r4
 802e244:	f000 f9fa 	bl	802e63c <__register_exitproc>
 802e248:	bd10      	pop	{r4, pc}
 802e24a:	bf00      	nop
 802e24c:	0802e63d 	.word	0x0802e63d

0802e250 <std>:
 802e250:	2300      	movs	r3, #0
 802e252:	b510      	push	{r4, lr}
 802e254:	4604      	mov	r4, r0
 802e256:	e9c0 3300 	strd	r3, r3, [r0]
 802e25a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802e25e:	6083      	str	r3, [r0, #8]
 802e260:	8181      	strh	r1, [r0, #12]
 802e262:	6643      	str	r3, [r0, #100]	@ 0x64
 802e264:	81c2      	strh	r2, [r0, #14]
 802e266:	6183      	str	r3, [r0, #24]
 802e268:	4619      	mov	r1, r3
 802e26a:	2208      	movs	r2, #8
 802e26c:	305c      	adds	r0, #92	@ 0x5c
 802e26e:	f000 f906 	bl	802e47e <memset>
 802e272:	4b0d      	ldr	r3, [pc, #52]	@ (802e2a8 <std+0x58>)
 802e274:	6263      	str	r3, [r4, #36]	@ 0x24
 802e276:	4b0d      	ldr	r3, [pc, #52]	@ (802e2ac <std+0x5c>)
 802e278:	62a3      	str	r3, [r4, #40]	@ 0x28
 802e27a:	4b0d      	ldr	r3, [pc, #52]	@ (802e2b0 <std+0x60>)
 802e27c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802e27e:	4b0d      	ldr	r3, [pc, #52]	@ (802e2b4 <std+0x64>)
 802e280:	6323      	str	r3, [r4, #48]	@ 0x30
 802e282:	4b0d      	ldr	r3, [pc, #52]	@ (802e2b8 <std+0x68>)
 802e284:	6224      	str	r4, [r4, #32]
 802e286:	429c      	cmp	r4, r3
 802e288:	d006      	beq.n	802e298 <std+0x48>
 802e28a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802e28e:	4294      	cmp	r4, r2
 802e290:	d002      	beq.n	802e298 <std+0x48>
 802e292:	33d0      	adds	r3, #208	@ 0xd0
 802e294:	429c      	cmp	r4, r3
 802e296:	d105      	bne.n	802e2a4 <std+0x54>
 802e298:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802e29c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e2a0:	f000 b9ba 	b.w	802e618 <__retarget_lock_init_recursive>
 802e2a4:	bd10      	pop	{r4, pc}
 802e2a6:	bf00      	nop
 802e2a8:	0802e3f9 	.word	0x0802e3f9
 802e2ac:	0802e41b 	.word	0x0802e41b
 802e2b0:	0802e453 	.word	0x0802e453
 802e2b4:	0802e477 	.word	0x0802e477
 802e2b8:	200142e8 	.word	0x200142e8

0802e2bc <stdio_exit_handler>:
 802e2bc:	4a02      	ldr	r2, [pc, #8]	@ (802e2c8 <stdio_exit_handler+0xc>)
 802e2be:	4903      	ldr	r1, [pc, #12]	@ (802e2cc <stdio_exit_handler+0x10>)
 802e2c0:	4803      	ldr	r0, [pc, #12]	@ (802e2d0 <stdio_exit_handler+0x14>)
 802e2c2:	f000 b87b 	b.w	802e3bc <_fwalk_sglue>
 802e2c6:	bf00      	nop
 802e2c8:	20000104 	.word	0x20000104
 802e2cc:	0802ee2d 	.word	0x0802ee2d
 802e2d0:	20000114 	.word	0x20000114

0802e2d4 <cleanup_stdio>:
 802e2d4:	6841      	ldr	r1, [r0, #4]
 802e2d6:	4b0c      	ldr	r3, [pc, #48]	@ (802e308 <cleanup_stdio+0x34>)
 802e2d8:	4299      	cmp	r1, r3
 802e2da:	b510      	push	{r4, lr}
 802e2dc:	4604      	mov	r4, r0
 802e2de:	d001      	beq.n	802e2e4 <cleanup_stdio+0x10>
 802e2e0:	f000 fda4 	bl	802ee2c <_fflush_r>
 802e2e4:	68a1      	ldr	r1, [r4, #8]
 802e2e6:	4b09      	ldr	r3, [pc, #36]	@ (802e30c <cleanup_stdio+0x38>)
 802e2e8:	4299      	cmp	r1, r3
 802e2ea:	d002      	beq.n	802e2f2 <cleanup_stdio+0x1e>
 802e2ec:	4620      	mov	r0, r4
 802e2ee:	f000 fd9d 	bl	802ee2c <_fflush_r>
 802e2f2:	68e1      	ldr	r1, [r4, #12]
 802e2f4:	4b06      	ldr	r3, [pc, #24]	@ (802e310 <cleanup_stdio+0x3c>)
 802e2f6:	4299      	cmp	r1, r3
 802e2f8:	d004      	beq.n	802e304 <cleanup_stdio+0x30>
 802e2fa:	4620      	mov	r0, r4
 802e2fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e300:	f000 bd94 	b.w	802ee2c <_fflush_r>
 802e304:	bd10      	pop	{r4, pc}
 802e306:	bf00      	nop
 802e308:	200142e8 	.word	0x200142e8
 802e30c:	20014350 	.word	0x20014350
 802e310:	200143b8 	.word	0x200143b8

0802e314 <global_stdio_init.part.0>:
 802e314:	b510      	push	{r4, lr}
 802e316:	4b0b      	ldr	r3, [pc, #44]	@ (802e344 <global_stdio_init.part.0+0x30>)
 802e318:	4c0b      	ldr	r4, [pc, #44]	@ (802e348 <global_stdio_init.part.0+0x34>)
 802e31a:	4a0c      	ldr	r2, [pc, #48]	@ (802e34c <global_stdio_init.part.0+0x38>)
 802e31c:	601a      	str	r2, [r3, #0]
 802e31e:	4620      	mov	r0, r4
 802e320:	2200      	movs	r2, #0
 802e322:	2104      	movs	r1, #4
 802e324:	f7ff ff94 	bl	802e250 <std>
 802e328:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802e32c:	2201      	movs	r2, #1
 802e32e:	2109      	movs	r1, #9
 802e330:	f7ff ff8e 	bl	802e250 <std>
 802e334:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802e338:	2202      	movs	r2, #2
 802e33a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e33e:	2112      	movs	r1, #18
 802e340:	f7ff bf86 	b.w	802e250 <std>
 802e344:	20014420 	.word	0x20014420
 802e348:	200142e8 	.word	0x200142e8
 802e34c:	0802e2bd 	.word	0x0802e2bd

0802e350 <__sfp_lock_acquire>:
 802e350:	4801      	ldr	r0, [pc, #4]	@ (802e358 <__sfp_lock_acquire+0x8>)
 802e352:	f000 b962 	b.w	802e61a <__retarget_lock_acquire_recursive>
 802e356:	bf00      	nop
 802e358:	2001442a 	.word	0x2001442a

0802e35c <__sfp_lock_release>:
 802e35c:	4801      	ldr	r0, [pc, #4]	@ (802e364 <__sfp_lock_release+0x8>)
 802e35e:	f000 b95d 	b.w	802e61c <__retarget_lock_release_recursive>
 802e362:	bf00      	nop
 802e364:	2001442a 	.word	0x2001442a

0802e368 <__sinit>:
 802e368:	b510      	push	{r4, lr}
 802e36a:	4604      	mov	r4, r0
 802e36c:	f7ff fff0 	bl	802e350 <__sfp_lock_acquire>
 802e370:	6a23      	ldr	r3, [r4, #32]
 802e372:	b11b      	cbz	r3, 802e37c <__sinit+0x14>
 802e374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e378:	f7ff bff0 	b.w	802e35c <__sfp_lock_release>
 802e37c:	4b04      	ldr	r3, [pc, #16]	@ (802e390 <__sinit+0x28>)
 802e37e:	6223      	str	r3, [r4, #32]
 802e380:	4b04      	ldr	r3, [pc, #16]	@ (802e394 <__sinit+0x2c>)
 802e382:	681b      	ldr	r3, [r3, #0]
 802e384:	2b00      	cmp	r3, #0
 802e386:	d1f5      	bne.n	802e374 <__sinit+0xc>
 802e388:	f7ff ffc4 	bl	802e314 <global_stdio_init.part.0>
 802e38c:	e7f2      	b.n	802e374 <__sinit+0xc>
 802e38e:	bf00      	nop
 802e390:	0802e2d5 	.word	0x0802e2d5
 802e394:	20014420 	.word	0x20014420

0802e398 <fiprintf>:
 802e398:	b40e      	push	{r1, r2, r3}
 802e39a:	b503      	push	{r0, r1, lr}
 802e39c:	4601      	mov	r1, r0
 802e39e:	ab03      	add	r3, sp, #12
 802e3a0:	4805      	ldr	r0, [pc, #20]	@ (802e3b8 <fiprintf+0x20>)
 802e3a2:	f853 2b04 	ldr.w	r2, [r3], #4
 802e3a6:	6800      	ldr	r0, [r0, #0]
 802e3a8:	9301      	str	r3, [sp, #4]
 802e3aa:	f000 fa17 	bl	802e7dc <_vfiprintf_r>
 802e3ae:	b002      	add	sp, #8
 802e3b0:	f85d eb04 	ldr.w	lr, [sp], #4
 802e3b4:	b003      	add	sp, #12
 802e3b6:	4770      	bx	lr
 802e3b8:	20000110 	.word	0x20000110

0802e3bc <_fwalk_sglue>:
 802e3bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e3c0:	4607      	mov	r7, r0
 802e3c2:	4688      	mov	r8, r1
 802e3c4:	4614      	mov	r4, r2
 802e3c6:	2600      	movs	r6, #0
 802e3c8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802e3cc:	f1b9 0901 	subs.w	r9, r9, #1
 802e3d0:	d505      	bpl.n	802e3de <_fwalk_sglue+0x22>
 802e3d2:	6824      	ldr	r4, [r4, #0]
 802e3d4:	2c00      	cmp	r4, #0
 802e3d6:	d1f7      	bne.n	802e3c8 <_fwalk_sglue+0xc>
 802e3d8:	4630      	mov	r0, r6
 802e3da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e3de:	89ab      	ldrh	r3, [r5, #12]
 802e3e0:	2b01      	cmp	r3, #1
 802e3e2:	d907      	bls.n	802e3f4 <_fwalk_sglue+0x38>
 802e3e4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802e3e8:	3301      	adds	r3, #1
 802e3ea:	d003      	beq.n	802e3f4 <_fwalk_sglue+0x38>
 802e3ec:	4629      	mov	r1, r5
 802e3ee:	4638      	mov	r0, r7
 802e3f0:	47c0      	blx	r8
 802e3f2:	4306      	orrs	r6, r0
 802e3f4:	3568      	adds	r5, #104	@ 0x68
 802e3f6:	e7e9      	b.n	802e3cc <_fwalk_sglue+0x10>

0802e3f8 <__sread>:
 802e3f8:	b510      	push	{r4, lr}
 802e3fa:	460c      	mov	r4, r1
 802e3fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e400:	f000 f898 	bl	802e534 <_read_r>
 802e404:	2800      	cmp	r0, #0
 802e406:	bfab      	itete	ge
 802e408:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802e40a:	89a3      	ldrhlt	r3, [r4, #12]
 802e40c:	181b      	addge	r3, r3, r0
 802e40e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802e412:	bfac      	ite	ge
 802e414:	6563      	strge	r3, [r4, #84]	@ 0x54
 802e416:	81a3      	strhlt	r3, [r4, #12]
 802e418:	bd10      	pop	{r4, pc}

0802e41a <__swrite>:
 802e41a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e41e:	461f      	mov	r7, r3
 802e420:	898b      	ldrh	r3, [r1, #12]
 802e422:	05db      	lsls	r3, r3, #23
 802e424:	4605      	mov	r5, r0
 802e426:	460c      	mov	r4, r1
 802e428:	4616      	mov	r6, r2
 802e42a:	d505      	bpl.n	802e438 <__swrite+0x1e>
 802e42c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e430:	2302      	movs	r3, #2
 802e432:	2200      	movs	r2, #0
 802e434:	f000 f86c 	bl	802e510 <_lseek_r>
 802e438:	89a3      	ldrh	r3, [r4, #12]
 802e43a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e43e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802e442:	81a3      	strh	r3, [r4, #12]
 802e444:	4632      	mov	r2, r6
 802e446:	463b      	mov	r3, r7
 802e448:	4628      	mov	r0, r5
 802e44a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802e44e:	f000 b8a7 	b.w	802e5a0 <_write_r>

0802e452 <__sseek>:
 802e452:	b510      	push	{r4, lr}
 802e454:	460c      	mov	r4, r1
 802e456:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e45a:	f000 f859 	bl	802e510 <_lseek_r>
 802e45e:	1c43      	adds	r3, r0, #1
 802e460:	89a3      	ldrh	r3, [r4, #12]
 802e462:	bf15      	itete	ne
 802e464:	6560      	strne	r0, [r4, #84]	@ 0x54
 802e466:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802e46a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802e46e:	81a3      	strheq	r3, [r4, #12]
 802e470:	bf18      	it	ne
 802e472:	81a3      	strhne	r3, [r4, #12]
 802e474:	bd10      	pop	{r4, pc}

0802e476 <__sclose>:
 802e476:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e47a:	f000 b839 	b.w	802e4f0 <_close_r>

0802e47e <memset>:
 802e47e:	4402      	add	r2, r0
 802e480:	4603      	mov	r3, r0
 802e482:	4293      	cmp	r3, r2
 802e484:	d100      	bne.n	802e488 <memset+0xa>
 802e486:	4770      	bx	lr
 802e488:	f803 1b01 	strb.w	r1, [r3], #1
 802e48c:	e7f9      	b.n	802e482 <memset+0x4>

0802e48e <_raise_r>:
 802e48e:	291f      	cmp	r1, #31
 802e490:	b538      	push	{r3, r4, r5, lr}
 802e492:	4605      	mov	r5, r0
 802e494:	460c      	mov	r4, r1
 802e496:	d904      	bls.n	802e4a2 <_raise_r+0x14>
 802e498:	2316      	movs	r3, #22
 802e49a:	6003      	str	r3, [r0, #0]
 802e49c:	f04f 30ff 	mov.w	r0, #4294967295
 802e4a0:	bd38      	pop	{r3, r4, r5, pc}
 802e4a2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802e4a4:	b112      	cbz	r2, 802e4ac <_raise_r+0x1e>
 802e4a6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802e4aa:	b94b      	cbnz	r3, 802e4c0 <_raise_r+0x32>
 802e4ac:	4628      	mov	r0, r5
 802e4ae:	f000 f865 	bl	802e57c <_getpid_r>
 802e4b2:	4622      	mov	r2, r4
 802e4b4:	4601      	mov	r1, r0
 802e4b6:	4628      	mov	r0, r5
 802e4b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802e4bc:	f000 b84c 	b.w	802e558 <_kill_r>
 802e4c0:	2b01      	cmp	r3, #1
 802e4c2:	d00a      	beq.n	802e4da <_raise_r+0x4c>
 802e4c4:	1c59      	adds	r1, r3, #1
 802e4c6:	d103      	bne.n	802e4d0 <_raise_r+0x42>
 802e4c8:	2316      	movs	r3, #22
 802e4ca:	6003      	str	r3, [r0, #0]
 802e4cc:	2001      	movs	r0, #1
 802e4ce:	e7e7      	b.n	802e4a0 <_raise_r+0x12>
 802e4d0:	2100      	movs	r1, #0
 802e4d2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802e4d6:	4620      	mov	r0, r4
 802e4d8:	4798      	blx	r3
 802e4da:	2000      	movs	r0, #0
 802e4dc:	e7e0      	b.n	802e4a0 <_raise_r+0x12>
	...

0802e4e0 <raise>:
 802e4e0:	4b02      	ldr	r3, [pc, #8]	@ (802e4ec <raise+0xc>)
 802e4e2:	4601      	mov	r1, r0
 802e4e4:	6818      	ldr	r0, [r3, #0]
 802e4e6:	f7ff bfd2 	b.w	802e48e <_raise_r>
 802e4ea:	bf00      	nop
 802e4ec:	20000110 	.word	0x20000110

0802e4f0 <_close_r>:
 802e4f0:	b538      	push	{r3, r4, r5, lr}
 802e4f2:	4d06      	ldr	r5, [pc, #24]	@ (802e50c <_close_r+0x1c>)
 802e4f4:	2300      	movs	r3, #0
 802e4f6:	4604      	mov	r4, r0
 802e4f8:	4608      	mov	r0, r1
 802e4fa:	602b      	str	r3, [r5, #0]
 802e4fc:	f7d4 f9d4 	bl	80028a8 <_close>
 802e500:	1c43      	adds	r3, r0, #1
 802e502:	d102      	bne.n	802e50a <_close_r+0x1a>
 802e504:	682b      	ldr	r3, [r5, #0]
 802e506:	b103      	cbz	r3, 802e50a <_close_r+0x1a>
 802e508:	6023      	str	r3, [r4, #0]
 802e50a:	bd38      	pop	{r3, r4, r5, pc}
 802e50c:	20014424 	.word	0x20014424

0802e510 <_lseek_r>:
 802e510:	b538      	push	{r3, r4, r5, lr}
 802e512:	4d07      	ldr	r5, [pc, #28]	@ (802e530 <_lseek_r+0x20>)
 802e514:	4604      	mov	r4, r0
 802e516:	4608      	mov	r0, r1
 802e518:	4611      	mov	r1, r2
 802e51a:	2200      	movs	r2, #0
 802e51c:	602a      	str	r2, [r5, #0]
 802e51e:	461a      	mov	r2, r3
 802e520:	f7d4 f9cc 	bl	80028bc <_lseek>
 802e524:	1c43      	adds	r3, r0, #1
 802e526:	d102      	bne.n	802e52e <_lseek_r+0x1e>
 802e528:	682b      	ldr	r3, [r5, #0]
 802e52a:	b103      	cbz	r3, 802e52e <_lseek_r+0x1e>
 802e52c:	6023      	str	r3, [r4, #0]
 802e52e:	bd38      	pop	{r3, r4, r5, pc}
 802e530:	20014424 	.word	0x20014424

0802e534 <_read_r>:
 802e534:	b538      	push	{r3, r4, r5, lr}
 802e536:	4d07      	ldr	r5, [pc, #28]	@ (802e554 <_read_r+0x20>)
 802e538:	4604      	mov	r4, r0
 802e53a:	4608      	mov	r0, r1
 802e53c:	4611      	mov	r1, r2
 802e53e:	2200      	movs	r2, #0
 802e540:	602a      	str	r2, [r5, #0]
 802e542:	461a      	mov	r2, r3
 802e544:	f7d4 f994 	bl	8002870 <_read>
 802e548:	1c43      	adds	r3, r0, #1
 802e54a:	d102      	bne.n	802e552 <_read_r+0x1e>
 802e54c:	682b      	ldr	r3, [r5, #0]
 802e54e:	b103      	cbz	r3, 802e552 <_read_r+0x1e>
 802e550:	6023      	str	r3, [r4, #0]
 802e552:	bd38      	pop	{r3, r4, r5, pc}
 802e554:	20014424 	.word	0x20014424

0802e558 <_kill_r>:
 802e558:	b538      	push	{r3, r4, r5, lr}
 802e55a:	4d07      	ldr	r5, [pc, #28]	@ (802e578 <_kill_r+0x20>)
 802e55c:	2300      	movs	r3, #0
 802e55e:	4604      	mov	r4, r0
 802e560:	4608      	mov	r0, r1
 802e562:	4611      	mov	r1, r2
 802e564:	602b      	str	r3, [r5, #0]
 802e566:	f7d4 f975 	bl	8002854 <_kill>
 802e56a:	1c43      	adds	r3, r0, #1
 802e56c:	d102      	bne.n	802e574 <_kill_r+0x1c>
 802e56e:	682b      	ldr	r3, [r5, #0]
 802e570:	b103      	cbz	r3, 802e574 <_kill_r+0x1c>
 802e572:	6023      	str	r3, [r4, #0]
 802e574:	bd38      	pop	{r3, r4, r5, pc}
 802e576:	bf00      	nop
 802e578:	20014424 	.word	0x20014424

0802e57c <_getpid_r>:
 802e57c:	f7d4 b968 	b.w	8002850 <_getpid>

0802e580 <_sbrk_r>:
 802e580:	b538      	push	{r3, r4, r5, lr}
 802e582:	4d06      	ldr	r5, [pc, #24]	@ (802e59c <_sbrk_r+0x1c>)
 802e584:	2300      	movs	r3, #0
 802e586:	4604      	mov	r4, r0
 802e588:	4608      	mov	r0, r1
 802e58a:	602b      	str	r3, [r5, #0]
 802e58c:	f7d4 f998 	bl	80028c0 <_sbrk>
 802e590:	1c43      	adds	r3, r0, #1
 802e592:	d102      	bne.n	802e59a <_sbrk_r+0x1a>
 802e594:	682b      	ldr	r3, [r5, #0]
 802e596:	b103      	cbz	r3, 802e59a <_sbrk_r+0x1a>
 802e598:	6023      	str	r3, [r4, #0]
 802e59a:	bd38      	pop	{r3, r4, r5, pc}
 802e59c:	20014424 	.word	0x20014424

0802e5a0 <_write_r>:
 802e5a0:	b538      	push	{r3, r4, r5, lr}
 802e5a2:	4d07      	ldr	r5, [pc, #28]	@ (802e5c0 <_write_r+0x20>)
 802e5a4:	4604      	mov	r4, r0
 802e5a6:	4608      	mov	r0, r1
 802e5a8:	4611      	mov	r1, r2
 802e5aa:	2200      	movs	r2, #0
 802e5ac:	602a      	str	r2, [r5, #0]
 802e5ae:	461a      	mov	r2, r3
 802e5b0:	f7d4 f96c 	bl	800288c <_write>
 802e5b4:	1c43      	adds	r3, r0, #1
 802e5b6:	d102      	bne.n	802e5be <_write_r+0x1e>
 802e5b8:	682b      	ldr	r3, [r5, #0]
 802e5ba:	b103      	cbz	r3, 802e5be <_write_r+0x1e>
 802e5bc:	6023      	str	r3, [r4, #0]
 802e5be:	bd38      	pop	{r3, r4, r5, pc}
 802e5c0:	20014424 	.word	0x20014424

0802e5c4 <__errno>:
 802e5c4:	4b01      	ldr	r3, [pc, #4]	@ (802e5cc <__errno+0x8>)
 802e5c6:	6818      	ldr	r0, [r3, #0]
 802e5c8:	4770      	bx	lr
 802e5ca:	bf00      	nop
 802e5cc:	20000110 	.word	0x20000110

0802e5d0 <__libc_init_array>:
 802e5d0:	b570      	push	{r4, r5, r6, lr}
 802e5d2:	4d0d      	ldr	r5, [pc, #52]	@ (802e608 <__libc_init_array+0x38>)
 802e5d4:	4c0d      	ldr	r4, [pc, #52]	@ (802e60c <__libc_init_array+0x3c>)
 802e5d6:	1b64      	subs	r4, r4, r5
 802e5d8:	10a4      	asrs	r4, r4, #2
 802e5da:	2600      	movs	r6, #0
 802e5dc:	42a6      	cmp	r6, r4
 802e5de:	d109      	bne.n	802e5f4 <__libc_init_array+0x24>
 802e5e0:	4d0b      	ldr	r5, [pc, #44]	@ (802e610 <__libc_init_array+0x40>)
 802e5e2:	4c0c      	ldr	r4, [pc, #48]	@ (802e614 <__libc_init_array+0x44>)
 802e5e4:	f000 fd62 	bl	802f0ac <_init>
 802e5e8:	1b64      	subs	r4, r4, r5
 802e5ea:	10a4      	asrs	r4, r4, #2
 802e5ec:	2600      	movs	r6, #0
 802e5ee:	42a6      	cmp	r6, r4
 802e5f0:	d105      	bne.n	802e5fe <__libc_init_array+0x2e>
 802e5f2:	bd70      	pop	{r4, r5, r6, pc}
 802e5f4:	f855 3b04 	ldr.w	r3, [r5], #4
 802e5f8:	4798      	blx	r3
 802e5fa:	3601      	adds	r6, #1
 802e5fc:	e7ee      	b.n	802e5dc <__libc_init_array+0xc>
 802e5fe:	f855 3b04 	ldr.w	r3, [r5], #4
 802e602:	4798      	blx	r3
 802e604:	3601      	adds	r6, #1
 802e606:	e7f2      	b.n	802e5ee <__libc_init_array+0x1e>
 802e608:	081fee94 	.word	0x081fee94
 802e60c:	081fee94 	.word	0x081fee94
 802e610:	081fee94 	.word	0x081fee94
 802e614:	081feea8 	.word	0x081feea8

0802e618 <__retarget_lock_init_recursive>:
 802e618:	4770      	bx	lr

0802e61a <__retarget_lock_acquire_recursive>:
 802e61a:	4770      	bx	lr

0802e61c <__retarget_lock_release_recursive>:
 802e61c:	4770      	bx	lr

0802e61e <memcpy>:
 802e61e:	440a      	add	r2, r1
 802e620:	4291      	cmp	r1, r2
 802e622:	f100 33ff 	add.w	r3, r0, #4294967295
 802e626:	d100      	bne.n	802e62a <memcpy+0xc>
 802e628:	4770      	bx	lr
 802e62a:	b510      	push	{r4, lr}
 802e62c:	f811 4b01 	ldrb.w	r4, [r1], #1
 802e630:	f803 4f01 	strb.w	r4, [r3, #1]!
 802e634:	4291      	cmp	r1, r2
 802e636:	d1f9      	bne.n	802e62c <memcpy+0xe>
 802e638:	bd10      	pop	{r4, pc}
	...

0802e63c <__register_exitproc>:
 802e63c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e640:	4d27      	ldr	r5, [pc, #156]	@ (802e6e0 <__register_exitproc+0xa4>)
 802e642:	4607      	mov	r7, r0
 802e644:	6828      	ldr	r0, [r5, #0]
 802e646:	4691      	mov	r9, r2
 802e648:	460e      	mov	r6, r1
 802e64a:	4698      	mov	r8, r3
 802e64c:	f7ff ffe5 	bl	802e61a <__retarget_lock_acquire_recursive>
 802e650:	4a24      	ldr	r2, [pc, #144]	@ (802e6e4 <__register_exitproc+0xa8>)
 802e652:	6814      	ldr	r4, [r2, #0]
 802e654:	b93c      	cbnz	r4, 802e666 <__register_exitproc+0x2a>
 802e656:	4b24      	ldr	r3, [pc, #144]	@ (802e6e8 <__register_exitproc+0xac>)
 802e658:	6013      	str	r3, [r2, #0]
 802e65a:	4a24      	ldr	r2, [pc, #144]	@ (802e6ec <__register_exitproc+0xb0>)
 802e65c:	b112      	cbz	r2, 802e664 <__register_exitproc+0x28>
 802e65e:	6812      	ldr	r2, [r2, #0]
 802e660:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802e664:	4c20      	ldr	r4, [pc, #128]	@ (802e6e8 <__register_exitproc+0xac>)
 802e666:	6863      	ldr	r3, [r4, #4]
 802e668:	2b1f      	cmp	r3, #31
 802e66a:	dd06      	ble.n	802e67a <__register_exitproc+0x3e>
 802e66c:	6828      	ldr	r0, [r5, #0]
 802e66e:	f7ff ffd5 	bl	802e61c <__retarget_lock_release_recursive>
 802e672:	f04f 30ff 	mov.w	r0, #4294967295
 802e676:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e67a:	b32f      	cbz	r7, 802e6c8 <__register_exitproc+0x8c>
 802e67c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802e680:	b968      	cbnz	r0, 802e69e <__register_exitproc+0x62>
 802e682:	4b1b      	ldr	r3, [pc, #108]	@ (802e6f0 <__register_exitproc+0xb4>)
 802e684:	2b00      	cmp	r3, #0
 802e686:	d0f1      	beq.n	802e66c <__register_exitproc+0x30>
 802e688:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802e68c:	f7ff fd14 	bl	802e0b8 <malloc>
 802e690:	2800      	cmp	r0, #0
 802e692:	d0eb      	beq.n	802e66c <__register_exitproc+0x30>
 802e694:	2300      	movs	r3, #0
 802e696:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802e69a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802e69e:	6863      	ldr	r3, [r4, #4]
 802e6a0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802e6a4:	2201      	movs	r2, #1
 802e6a6:	409a      	lsls	r2, r3
 802e6a8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802e6ac:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802e6b0:	4313      	orrs	r3, r2
 802e6b2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802e6b6:	2f02      	cmp	r7, #2
 802e6b8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802e6bc:	bf02      	ittt	eq
 802e6be:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802e6c2:	4313      	orreq	r3, r2
 802e6c4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802e6c8:	6863      	ldr	r3, [r4, #4]
 802e6ca:	6828      	ldr	r0, [r5, #0]
 802e6cc:	1c5a      	adds	r2, r3, #1
 802e6ce:	3302      	adds	r3, #2
 802e6d0:	6062      	str	r2, [r4, #4]
 802e6d2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802e6d6:	f7ff ffa1 	bl	802e61c <__retarget_lock_release_recursive>
 802e6da:	2000      	movs	r0, #0
 802e6dc:	e7cb      	b.n	802e676 <__register_exitproc+0x3a>
 802e6de:	bf00      	nop
 802e6e0:	20000160 	.word	0x20000160
 802e6e4:	200144b8 	.word	0x200144b8
 802e6e8:	2001442c 	.word	0x2001442c
 802e6ec:	08032d08 	.word	0x08032d08
 802e6f0:	0802e0b9 	.word	0x0802e0b9

0802e6f4 <_free_r>:
 802e6f4:	b538      	push	{r3, r4, r5, lr}
 802e6f6:	4605      	mov	r5, r0
 802e6f8:	2900      	cmp	r1, #0
 802e6fa:	d041      	beq.n	802e780 <_free_r+0x8c>
 802e6fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802e700:	1f0c      	subs	r4, r1, #4
 802e702:	2b00      	cmp	r3, #0
 802e704:	bfb8      	it	lt
 802e706:	18e4      	addlt	r4, r4, r3
 802e708:	f7ff fd88 	bl	802e21c <__malloc_lock>
 802e70c:	4a1d      	ldr	r2, [pc, #116]	@ (802e784 <_free_r+0x90>)
 802e70e:	6813      	ldr	r3, [r2, #0]
 802e710:	b933      	cbnz	r3, 802e720 <_free_r+0x2c>
 802e712:	6063      	str	r3, [r4, #4]
 802e714:	6014      	str	r4, [r2, #0]
 802e716:	4628      	mov	r0, r5
 802e718:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802e71c:	f7ff bd84 	b.w	802e228 <__malloc_unlock>
 802e720:	42a3      	cmp	r3, r4
 802e722:	d908      	bls.n	802e736 <_free_r+0x42>
 802e724:	6820      	ldr	r0, [r4, #0]
 802e726:	1821      	adds	r1, r4, r0
 802e728:	428b      	cmp	r3, r1
 802e72a:	bf01      	itttt	eq
 802e72c:	6819      	ldreq	r1, [r3, #0]
 802e72e:	685b      	ldreq	r3, [r3, #4]
 802e730:	1809      	addeq	r1, r1, r0
 802e732:	6021      	streq	r1, [r4, #0]
 802e734:	e7ed      	b.n	802e712 <_free_r+0x1e>
 802e736:	461a      	mov	r2, r3
 802e738:	685b      	ldr	r3, [r3, #4]
 802e73a:	b10b      	cbz	r3, 802e740 <_free_r+0x4c>
 802e73c:	42a3      	cmp	r3, r4
 802e73e:	d9fa      	bls.n	802e736 <_free_r+0x42>
 802e740:	6811      	ldr	r1, [r2, #0]
 802e742:	1850      	adds	r0, r2, r1
 802e744:	42a0      	cmp	r0, r4
 802e746:	d10b      	bne.n	802e760 <_free_r+0x6c>
 802e748:	6820      	ldr	r0, [r4, #0]
 802e74a:	4401      	add	r1, r0
 802e74c:	1850      	adds	r0, r2, r1
 802e74e:	4283      	cmp	r3, r0
 802e750:	6011      	str	r1, [r2, #0]
 802e752:	d1e0      	bne.n	802e716 <_free_r+0x22>
 802e754:	6818      	ldr	r0, [r3, #0]
 802e756:	685b      	ldr	r3, [r3, #4]
 802e758:	6053      	str	r3, [r2, #4]
 802e75a:	4408      	add	r0, r1
 802e75c:	6010      	str	r0, [r2, #0]
 802e75e:	e7da      	b.n	802e716 <_free_r+0x22>
 802e760:	d902      	bls.n	802e768 <_free_r+0x74>
 802e762:	230c      	movs	r3, #12
 802e764:	602b      	str	r3, [r5, #0]
 802e766:	e7d6      	b.n	802e716 <_free_r+0x22>
 802e768:	6820      	ldr	r0, [r4, #0]
 802e76a:	1821      	adds	r1, r4, r0
 802e76c:	428b      	cmp	r3, r1
 802e76e:	bf04      	itt	eq
 802e770:	6819      	ldreq	r1, [r3, #0]
 802e772:	685b      	ldreq	r3, [r3, #4]
 802e774:	6063      	str	r3, [r4, #4]
 802e776:	bf04      	itt	eq
 802e778:	1809      	addeq	r1, r1, r0
 802e77a:	6021      	streq	r1, [r4, #0]
 802e77c:	6054      	str	r4, [r2, #4]
 802e77e:	e7ca      	b.n	802e716 <_free_r+0x22>
 802e780:	bd38      	pop	{r3, r4, r5, pc}
 802e782:	bf00      	nop
 802e784:	200142e4 	.word	0x200142e4

0802e788 <__sfputc_r>:
 802e788:	6893      	ldr	r3, [r2, #8]
 802e78a:	3b01      	subs	r3, #1
 802e78c:	2b00      	cmp	r3, #0
 802e78e:	b410      	push	{r4}
 802e790:	6093      	str	r3, [r2, #8]
 802e792:	da08      	bge.n	802e7a6 <__sfputc_r+0x1e>
 802e794:	6994      	ldr	r4, [r2, #24]
 802e796:	42a3      	cmp	r3, r4
 802e798:	db01      	blt.n	802e79e <__sfputc_r+0x16>
 802e79a:	290a      	cmp	r1, #10
 802e79c:	d103      	bne.n	802e7a6 <__sfputc_r+0x1e>
 802e79e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e7a2:	f000 bb6b 	b.w	802ee7c <__swbuf_r>
 802e7a6:	6813      	ldr	r3, [r2, #0]
 802e7a8:	1c58      	adds	r0, r3, #1
 802e7aa:	6010      	str	r0, [r2, #0]
 802e7ac:	7019      	strb	r1, [r3, #0]
 802e7ae:	4608      	mov	r0, r1
 802e7b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e7b4:	4770      	bx	lr

0802e7b6 <__sfputs_r>:
 802e7b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e7b8:	4606      	mov	r6, r0
 802e7ba:	460f      	mov	r7, r1
 802e7bc:	4614      	mov	r4, r2
 802e7be:	18d5      	adds	r5, r2, r3
 802e7c0:	42ac      	cmp	r4, r5
 802e7c2:	d101      	bne.n	802e7c8 <__sfputs_r+0x12>
 802e7c4:	2000      	movs	r0, #0
 802e7c6:	e007      	b.n	802e7d8 <__sfputs_r+0x22>
 802e7c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e7cc:	463a      	mov	r2, r7
 802e7ce:	4630      	mov	r0, r6
 802e7d0:	f7ff ffda 	bl	802e788 <__sfputc_r>
 802e7d4:	1c43      	adds	r3, r0, #1
 802e7d6:	d1f3      	bne.n	802e7c0 <__sfputs_r+0xa>
 802e7d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e7dc <_vfiprintf_r>:
 802e7dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e7e0:	460d      	mov	r5, r1
 802e7e2:	b09d      	sub	sp, #116	@ 0x74
 802e7e4:	4614      	mov	r4, r2
 802e7e6:	4698      	mov	r8, r3
 802e7e8:	4606      	mov	r6, r0
 802e7ea:	b118      	cbz	r0, 802e7f4 <_vfiprintf_r+0x18>
 802e7ec:	6a03      	ldr	r3, [r0, #32]
 802e7ee:	b90b      	cbnz	r3, 802e7f4 <_vfiprintf_r+0x18>
 802e7f0:	f7ff fdba 	bl	802e368 <__sinit>
 802e7f4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802e7f6:	07d9      	lsls	r1, r3, #31
 802e7f8:	d405      	bmi.n	802e806 <_vfiprintf_r+0x2a>
 802e7fa:	89ab      	ldrh	r3, [r5, #12]
 802e7fc:	059a      	lsls	r2, r3, #22
 802e7fe:	d402      	bmi.n	802e806 <_vfiprintf_r+0x2a>
 802e800:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802e802:	f7ff ff0a 	bl	802e61a <__retarget_lock_acquire_recursive>
 802e806:	89ab      	ldrh	r3, [r5, #12]
 802e808:	071b      	lsls	r3, r3, #28
 802e80a:	d501      	bpl.n	802e810 <_vfiprintf_r+0x34>
 802e80c:	692b      	ldr	r3, [r5, #16]
 802e80e:	b99b      	cbnz	r3, 802e838 <_vfiprintf_r+0x5c>
 802e810:	4629      	mov	r1, r5
 802e812:	4630      	mov	r0, r6
 802e814:	f000 fb70 	bl	802eef8 <__swsetup_r>
 802e818:	b170      	cbz	r0, 802e838 <_vfiprintf_r+0x5c>
 802e81a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802e81c:	07dc      	lsls	r4, r3, #31
 802e81e:	d504      	bpl.n	802e82a <_vfiprintf_r+0x4e>
 802e820:	f04f 30ff 	mov.w	r0, #4294967295
 802e824:	b01d      	add	sp, #116	@ 0x74
 802e826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e82a:	89ab      	ldrh	r3, [r5, #12]
 802e82c:	0598      	lsls	r0, r3, #22
 802e82e:	d4f7      	bmi.n	802e820 <_vfiprintf_r+0x44>
 802e830:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802e832:	f7ff fef3 	bl	802e61c <__retarget_lock_release_recursive>
 802e836:	e7f3      	b.n	802e820 <_vfiprintf_r+0x44>
 802e838:	2300      	movs	r3, #0
 802e83a:	9309      	str	r3, [sp, #36]	@ 0x24
 802e83c:	2320      	movs	r3, #32
 802e83e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802e842:	f8cd 800c 	str.w	r8, [sp, #12]
 802e846:	2330      	movs	r3, #48	@ 0x30
 802e848:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802e9f8 <_vfiprintf_r+0x21c>
 802e84c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802e850:	f04f 0901 	mov.w	r9, #1
 802e854:	4623      	mov	r3, r4
 802e856:	469a      	mov	sl, r3
 802e858:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e85c:	b10a      	cbz	r2, 802e862 <_vfiprintf_r+0x86>
 802e85e:	2a25      	cmp	r2, #37	@ 0x25
 802e860:	d1f9      	bne.n	802e856 <_vfiprintf_r+0x7a>
 802e862:	ebba 0b04 	subs.w	fp, sl, r4
 802e866:	d00b      	beq.n	802e880 <_vfiprintf_r+0xa4>
 802e868:	465b      	mov	r3, fp
 802e86a:	4622      	mov	r2, r4
 802e86c:	4629      	mov	r1, r5
 802e86e:	4630      	mov	r0, r6
 802e870:	f7ff ffa1 	bl	802e7b6 <__sfputs_r>
 802e874:	3001      	adds	r0, #1
 802e876:	f000 80a7 	beq.w	802e9c8 <_vfiprintf_r+0x1ec>
 802e87a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802e87c:	445a      	add	r2, fp
 802e87e:	9209      	str	r2, [sp, #36]	@ 0x24
 802e880:	f89a 3000 	ldrb.w	r3, [sl]
 802e884:	2b00      	cmp	r3, #0
 802e886:	f000 809f 	beq.w	802e9c8 <_vfiprintf_r+0x1ec>
 802e88a:	2300      	movs	r3, #0
 802e88c:	f04f 32ff 	mov.w	r2, #4294967295
 802e890:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e894:	f10a 0a01 	add.w	sl, sl, #1
 802e898:	9304      	str	r3, [sp, #16]
 802e89a:	9307      	str	r3, [sp, #28]
 802e89c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802e8a0:	931a      	str	r3, [sp, #104]	@ 0x68
 802e8a2:	4654      	mov	r4, sl
 802e8a4:	2205      	movs	r2, #5
 802e8a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e8aa:	4853      	ldr	r0, [pc, #332]	@ (802e9f8 <_vfiprintf_r+0x21c>)
 802e8ac:	f7d1 fca0 	bl	80001f0 <memchr>
 802e8b0:	9a04      	ldr	r2, [sp, #16]
 802e8b2:	b9d8      	cbnz	r0, 802e8ec <_vfiprintf_r+0x110>
 802e8b4:	06d1      	lsls	r1, r2, #27
 802e8b6:	bf44      	itt	mi
 802e8b8:	2320      	movmi	r3, #32
 802e8ba:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802e8be:	0713      	lsls	r3, r2, #28
 802e8c0:	bf44      	itt	mi
 802e8c2:	232b      	movmi	r3, #43	@ 0x2b
 802e8c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802e8c8:	f89a 3000 	ldrb.w	r3, [sl]
 802e8cc:	2b2a      	cmp	r3, #42	@ 0x2a
 802e8ce:	d015      	beq.n	802e8fc <_vfiprintf_r+0x120>
 802e8d0:	9a07      	ldr	r2, [sp, #28]
 802e8d2:	4654      	mov	r4, sl
 802e8d4:	2000      	movs	r0, #0
 802e8d6:	f04f 0c0a 	mov.w	ip, #10
 802e8da:	4621      	mov	r1, r4
 802e8dc:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e8e0:	3b30      	subs	r3, #48	@ 0x30
 802e8e2:	2b09      	cmp	r3, #9
 802e8e4:	d94b      	bls.n	802e97e <_vfiprintf_r+0x1a2>
 802e8e6:	b1b0      	cbz	r0, 802e916 <_vfiprintf_r+0x13a>
 802e8e8:	9207      	str	r2, [sp, #28]
 802e8ea:	e014      	b.n	802e916 <_vfiprintf_r+0x13a>
 802e8ec:	eba0 0308 	sub.w	r3, r0, r8
 802e8f0:	fa09 f303 	lsl.w	r3, r9, r3
 802e8f4:	4313      	orrs	r3, r2
 802e8f6:	9304      	str	r3, [sp, #16]
 802e8f8:	46a2      	mov	sl, r4
 802e8fa:	e7d2      	b.n	802e8a2 <_vfiprintf_r+0xc6>
 802e8fc:	9b03      	ldr	r3, [sp, #12]
 802e8fe:	1d19      	adds	r1, r3, #4
 802e900:	681b      	ldr	r3, [r3, #0]
 802e902:	9103      	str	r1, [sp, #12]
 802e904:	2b00      	cmp	r3, #0
 802e906:	bfbb      	ittet	lt
 802e908:	425b      	neglt	r3, r3
 802e90a:	f042 0202 	orrlt.w	r2, r2, #2
 802e90e:	9307      	strge	r3, [sp, #28]
 802e910:	9307      	strlt	r3, [sp, #28]
 802e912:	bfb8      	it	lt
 802e914:	9204      	strlt	r2, [sp, #16]
 802e916:	7823      	ldrb	r3, [r4, #0]
 802e918:	2b2e      	cmp	r3, #46	@ 0x2e
 802e91a:	d10a      	bne.n	802e932 <_vfiprintf_r+0x156>
 802e91c:	7863      	ldrb	r3, [r4, #1]
 802e91e:	2b2a      	cmp	r3, #42	@ 0x2a
 802e920:	d132      	bne.n	802e988 <_vfiprintf_r+0x1ac>
 802e922:	9b03      	ldr	r3, [sp, #12]
 802e924:	1d1a      	adds	r2, r3, #4
 802e926:	681b      	ldr	r3, [r3, #0]
 802e928:	9203      	str	r2, [sp, #12]
 802e92a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802e92e:	3402      	adds	r4, #2
 802e930:	9305      	str	r3, [sp, #20]
 802e932:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802ea08 <_vfiprintf_r+0x22c>
 802e936:	7821      	ldrb	r1, [r4, #0]
 802e938:	2203      	movs	r2, #3
 802e93a:	4650      	mov	r0, sl
 802e93c:	f7d1 fc58 	bl	80001f0 <memchr>
 802e940:	b138      	cbz	r0, 802e952 <_vfiprintf_r+0x176>
 802e942:	9b04      	ldr	r3, [sp, #16]
 802e944:	eba0 000a 	sub.w	r0, r0, sl
 802e948:	2240      	movs	r2, #64	@ 0x40
 802e94a:	4082      	lsls	r2, r0
 802e94c:	4313      	orrs	r3, r2
 802e94e:	3401      	adds	r4, #1
 802e950:	9304      	str	r3, [sp, #16]
 802e952:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e956:	4829      	ldr	r0, [pc, #164]	@ (802e9fc <_vfiprintf_r+0x220>)
 802e958:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802e95c:	2206      	movs	r2, #6
 802e95e:	f7d1 fc47 	bl	80001f0 <memchr>
 802e962:	2800      	cmp	r0, #0
 802e964:	d03f      	beq.n	802e9e6 <_vfiprintf_r+0x20a>
 802e966:	4b26      	ldr	r3, [pc, #152]	@ (802ea00 <_vfiprintf_r+0x224>)
 802e968:	bb1b      	cbnz	r3, 802e9b2 <_vfiprintf_r+0x1d6>
 802e96a:	9b03      	ldr	r3, [sp, #12]
 802e96c:	3307      	adds	r3, #7
 802e96e:	f023 0307 	bic.w	r3, r3, #7
 802e972:	3308      	adds	r3, #8
 802e974:	9303      	str	r3, [sp, #12]
 802e976:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802e978:	443b      	add	r3, r7
 802e97a:	9309      	str	r3, [sp, #36]	@ 0x24
 802e97c:	e76a      	b.n	802e854 <_vfiprintf_r+0x78>
 802e97e:	fb0c 3202 	mla	r2, ip, r2, r3
 802e982:	460c      	mov	r4, r1
 802e984:	2001      	movs	r0, #1
 802e986:	e7a8      	b.n	802e8da <_vfiprintf_r+0xfe>
 802e988:	2300      	movs	r3, #0
 802e98a:	3401      	adds	r4, #1
 802e98c:	9305      	str	r3, [sp, #20]
 802e98e:	4619      	mov	r1, r3
 802e990:	f04f 0c0a 	mov.w	ip, #10
 802e994:	4620      	mov	r0, r4
 802e996:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e99a:	3a30      	subs	r2, #48	@ 0x30
 802e99c:	2a09      	cmp	r2, #9
 802e99e:	d903      	bls.n	802e9a8 <_vfiprintf_r+0x1cc>
 802e9a0:	2b00      	cmp	r3, #0
 802e9a2:	d0c6      	beq.n	802e932 <_vfiprintf_r+0x156>
 802e9a4:	9105      	str	r1, [sp, #20]
 802e9a6:	e7c4      	b.n	802e932 <_vfiprintf_r+0x156>
 802e9a8:	fb0c 2101 	mla	r1, ip, r1, r2
 802e9ac:	4604      	mov	r4, r0
 802e9ae:	2301      	movs	r3, #1
 802e9b0:	e7f0      	b.n	802e994 <_vfiprintf_r+0x1b8>
 802e9b2:	ab03      	add	r3, sp, #12
 802e9b4:	9300      	str	r3, [sp, #0]
 802e9b6:	462a      	mov	r2, r5
 802e9b8:	4b12      	ldr	r3, [pc, #72]	@ (802ea04 <_vfiprintf_r+0x228>)
 802e9ba:	a904      	add	r1, sp, #16
 802e9bc:	4630      	mov	r0, r6
 802e9be:	f3af 8000 	nop.w
 802e9c2:	4607      	mov	r7, r0
 802e9c4:	1c78      	adds	r0, r7, #1
 802e9c6:	d1d6      	bne.n	802e976 <_vfiprintf_r+0x19a>
 802e9c8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802e9ca:	07d9      	lsls	r1, r3, #31
 802e9cc:	d405      	bmi.n	802e9da <_vfiprintf_r+0x1fe>
 802e9ce:	89ab      	ldrh	r3, [r5, #12]
 802e9d0:	059a      	lsls	r2, r3, #22
 802e9d2:	d402      	bmi.n	802e9da <_vfiprintf_r+0x1fe>
 802e9d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802e9d6:	f7ff fe21 	bl	802e61c <__retarget_lock_release_recursive>
 802e9da:	89ab      	ldrh	r3, [r5, #12]
 802e9dc:	065b      	lsls	r3, r3, #25
 802e9de:	f53f af1f 	bmi.w	802e820 <_vfiprintf_r+0x44>
 802e9e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802e9e4:	e71e      	b.n	802e824 <_vfiprintf_r+0x48>
 802e9e6:	ab03      	add	r3, sp, #12
 802e9e8:	9300      	str	r3, [sp, #0]
 802e9ea:	462a      	mov	r2, r5
 802e9ec:	4b05      	ldr	r3, [pc, #20]	@ (802ea04 <_vfiprintf_r+0x228>)
 802e9ee:	a904      	add	r1, sp, #16
 802e9f0:	4630      	mov	r0, r6
 802e9f2:	f000 f879 	bl	802eae8 <_printf_i>
 802e9f6:	e7e4      	b.n	802e9c2 <_vfiprintf_r+0x1e6>
 802e9f8:	08030684 	.word	0x08030684
 802e9fc:	0803068e 	.word	0x0803068e
 802ea00:	00000000 	.word	0x00000000
 802ea04:	0802e7b7 	.word	0x0802e7b7
 802ea08:	0803068a 	.word	0x0803068a

0802ea0c <_printf_common>:
 802ea0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802ea10:	4616      	mov	r6, r2
 802ea12:	4698      	mov	r8, r3
 802ea14:	688a      	ldr	r2, [r1, #8]
 802ea16:	690b      	ldr	r3, [r1, #16]
 802ea18:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802ea1c:	4293      	cmp	r3, r2
 802ea1e:	bfb8      	it	lt
 802ea20:	4613      	movlt	r3, r2
 802ea22:	6033      	str	r3, [r6, #0]
 802ea24:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802ea28:	4607      	mov	r7, r0
 802ea2a:	460c      	mov	r4, r1
 802ea2c:	b10a      	cbz	r2, 802ea32 <_printf_common+0x26>
 802ea2e:	3301      	adds	r3, #1
 802ea30:	6033      	str	r3, [r6, #0]
 802ea32:	6823      	ldr	r3, [r4, #0]
 802ea34:	0699      	lsls	r1, r3, #26
 802ea36:	bf42      	ittt	mi
 802ea38:	6833      	ldrmi	r3, [r6, #0]
 802ea3a:	3302      	addmi	r3, #2
 802ea3c:	6033      	strmi	r3, [r6, #0]
 802ea3e:	6825      	ldr	r5, [r4, #0]
 802ea40:	f015 0506 	ands.w	r5, r5, #6
 802ea44:	d106      	bne.n	802ea54 <_printf_common+0x48>
 802ea46:	f104 0a19 	add.w	sl, r4, #25
 802ea4a:	68e3      	ldr	r3, [r4, #12]
 802ea4c:	6832      	ldr	r2, [r6, #0]
 802ea4e:	1a9b      	subs	r3, r3, r2
 802ea50:	42ab      	cmp	r3, r5
 802ea52:	dc26      	bgt.n	802eaa2 <_printf_common+0x96>
 802ea54:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802ea58:	6822      	ldr	r2, [r4, #0]
 802ea5a:	3b00      	subs	r3, #0
 802ea5c:	bf18      	it	ne
 802ea5e:	2301      	movne	r3, #1
 802ea60:	0692      	lsls	r2, r2, #26
 802ea62:	d42b      	bmi.n	802eabc <_printf_common+0xb0>
 802ea64:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802ea68:	4641      	mov	r1, r8
 802ea6a:	4638      	mov	r0, r7
 802ea6c:	47c8      	blx	r9
 802ea6e:	3001      	adds	r0, #1
 802ea70:	d01e      	beq.n	802eab0 <_printf_common+0xa4>
 802ea72:	6823      	ldr	r3, [r4, #0]
 802ea74:	6922      	ldr	r2, [r4, #16]
 802ea76:	f003 0306 	and.w	r3, r3, #6
 802ea7a:	2b04      	cmp	r3, #4
 802ea7c:	bf02      	ittt	eq
 802ea7e:	68e5      	ldreq	r5, [r4, #12]
 802ea80:	6833      	ldreq	r3, [r6, #0]
 802ea82:	1aed      	subeq	r5, r5, r3
 802ea84:	68a3      	ldr	r3, [r4, #8]
 802ea86:	bf0c      	ite	eq
 802ea88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802ea8c:	2500      	movne	r5, #0
 802ea8e:	4293      	cmp	r3, r2
 802ea90:	bfc4      	itt	gt
 802ea92:	1a9b      	subgt	r3, r3, r2
 802ea94:	18ed      	addgt	r5, r5, r3
 802ea96:	2600      	movs	r6, #0
 802ea98:	341a      	adds	r4, #26
 802ea9a:	42b5      	cmp	r5, r6
 802ea9c:	d11a      	bne.n	802ead4 <_printf_common+0xc8>
 802ea9e:	2000      	movs	r0, #0
 802eaa0:	e008      	b.n	802eab4 <_printf_common+0xa8>
 802eaa2:	2301      	movs	r3, #1
 802eaa4:	4652      	mov	r2, sl
 802eaa6:	4641      	mov	r1, r8
 802eaa8:	4638      	mov	r0, r7
 802eaaa:	47c8      	blx	r9
 802eaac:	3001      	adds	r0, #1
 802eaae:	d103      	bne.n	802eab8 <_printf_common+0xac>
 802eab0:	f04f 30ff 	mov.w	r0, #4294967295
 802eab4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802eab8:	3501      	adds	r5, #1
 802eaba:	e7c6      	b.n	802ea4a <_printf_common+0x3e>
 802eabc:	18e1      	adds	r1, r4, r3
 802eabe:	1c5a      	adds	r2, r3, #1
 802eac0:	2030      	movs	r0, #48	@ 0x30
 802eac2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802eac6:	4422      	add	r2, r4
 802eac8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802eacc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802ead0:	3302      	adds	r3, #2
 802ead2:	e7c7      	b.n	802ea64 <_printf_common+0x58>
 802ead4:	2301      	movs	r3, #1
 802ead6:	4622      	mov	r2, r4
 802ead8:	4641      	mov	r1, r8
 802eada:	4638      	mov	r0, r7
 802eadc:	47c8      	blx	r9
 802eade:	3001      	adds	r0, #1
 802eae0:	d0e6      	beq.n	802eab0 <_printf_common+0xa4>
 802eae2:	3601      	adds	r6, #1
 802eae4:	e7d9      	b.n	802ea9a <_printf_common+0x8e>
	...

0802eae8 <_printf_i>:
 802eae8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802eaec:	7e0f      	ldrb	r7, [r1, #24]
 802eaee:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802eaf0:	2f78      	cmp	r7, #120	@ 0x78
 802eaf2:	4691      	mov	r9, r2
 802eaf4:	4680      	mov	r8, r0
 802eaf6:	460c      	mov	r4, r1
 802eaf8:	469a      	mov	sl, r3
 802eafa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802eafe:	d807      	bhi.n	802eb10 <_printf_i+0x28>
 802eb00:	2f62      	cmp	r7, #98	@ 0x62
 802eb02:	d80a      	bhi.n	802eb1a <_printf_i+0x32>
 802eb04:	2f00      	cmp	r7, #0
 802eb06:	f000 80d1 	beq.w	802ecac <_printf_i+0x1c4>
 802eb0a:	2f58      	cmp	r7, #88	@ 0x58
 802eb0c:	f000 80b8 	beq.w	802ec80 <_printf_i+0x198>
 802eb10:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802eb14:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802eb18:	e03a      	b.n	802eb90 <_printf_i+0xa8>
 802eb1a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802eb1e:	2b15      	cmp	r3, #21
 802eb20:	d8f6      	bhi.n	802eb10 <_printf_i+0x28>
 802eb22:	a101      	add	r1, pc, #4	@ (adr r1, 802eb28 <_printf_i+0x40>)
 802eb24:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802eb28:	0802eb81 	.word	0x0802eb81
 802eb2c:	0802eb95 	.word	0x0802eb95
 802eb30:	0802eb11 	.word	0x0802eb11
 802eb34:	0802eb11 	.word	0x0802eb11
 802eb38:	0802eb11 	.word	0x0802eb11
 802eb3c:	0802eb11 	.word	0x0802eb11
 802eb40:	0802eb95 	.word	0x0802eb95
 802eb44:	0802eb11 	.word	0x0802eb11
 802eb48:	0802eb11 	.word	0x0802eb11
 802eb4c:	0802eb11 	.word	0x0802eb11
 802eb50:	0802eb11 	.word	0x0802eb11
 802eb54:	0802ec93 	.word	0x0802ec93
 802eb58:	0802ebbf 	.word	0x0802ebbf
 802eb5c:	0802ec4d 	.word	0x0802ec4d
 802eb60:	0802eb11 	.word	0x0802eb11
 802eb64:	0802eb11 	.word	0x0802eb11
 802eb68:	0802ecb5 	.word	0x0802ecb5
 802eb6c:	0802eb11 	.word	0x0802eb11
 802eb70:	0802ebbf 	.word	0x0802ebbf
 802eb74:	0802eb11 	.word	0x0802eb11
 802eb78:	0802eb11 	.word	0x0802eb11
 802eb7c:	0802ec55 	.word	0x0802ec55
 802eb80:	6833      	ldr	r3, [r6, #0]
 802eb82:	1d1a      	adds	r2, r3, #4
 802eb84:	681b      	ldr	r3, [r3, #0]
 802eb86:	6032      	str	r2, [r6, #0]
 802eb88:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802eb8c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802eb90:	2301      	movs	r3, #1
 802eb92:	e09c      	b.n	802ecce <_printf_i+0x1e6>
 802eb94:	6833      	ldr	r3, [r6, #0]
 802eb96:	6820      	ldr	r0, [r4, #0]
 802eb98:	1d19      	adds	r1, r3, #4
 802eb9a:	6031      	str	r1, [r6, #0]
 802eb9c:	0606      	lsls	r6, r0, #24
 802eb9e:	d501      	bpl.n	802eba4 <_printf_i+0xbc>
 802eba0:	681d      	ldr	r5, [r3, #0]
 802eba2:	e003      	b.n	802ebac <_printf_i+0xc4>
 802eba4:	0645      	lsls	r5, r0, #25
 802eba6:	d5fb      	bpl.n	802eba0 <_printf_i+0xb8>
 802eba8:	f9b3 5000 	ldrsh.w	r5, [r3]
 802ebac:	2d00      	cmp	r5, #0
 802ebae:	da03      	bge.n	802ebb8 <_printf_i+0xd0>
 802ebb0:	232d      	movs	r3, #45	@ 0x2d
 802ebb2:	426d      	negs	r5, r5
 802ebb4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802ebb8:	4858      	ldr	r0, [pc, #352]	@ (802ed1c <_printf_i+0x234>)
 802ebba:	230a      	movs	r3, #10
 802ebbc:	e011      	b.n	802ebe2 <_printf_i+0xfa>
 802ebbe:	6821      	ldr	r1, [r4, #0]
 802ebc0:	6833      	ldr	r3, [r6, #0]
 802ebc2:	0608      	lsls	r0, r1, #24
 802ebc4:	f853 5b04 	ldr.w	r5, [r3], #4
 802ebc8:	d402      	bmi.n	802ebd0 <_printf_i+0xe8>
 802ebca:	0649      	lsls	r1, r1, #25
 802ebcc:	bf48      	it	mi
 802ebce:	b2ad      	uxthmi	r5, r5
 802ebd0:	2f6f      	cmp	r7, #111	@ 0x6f
 802ebd2:	4852      	ldr	r0, [pc, #328]	@ (802ed1c <_printf_i+0x234>)
 802ebd4:	6033      	str	r3, [r6, #0]
 802ebd6:	bf14      	ite	ne
 802ebd8:	230a      	movne	r3, #10
 802ebda:	2308      	moveq	r3, #8
 802ebdc:	2100      	movs	r1, #0
 802ebde:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802ebe2:	6866      	ldr	r6, [r4, #4]
 802ebe4:	60a6      	str	r6, [r4, #8]
 802ebe6:	2e00      	cmp	r6, #0
 802ebe8:	db05      	blt.n	802ebf6 <_printf_i+0x10e>
 802ebea:	6821      	ldr	r1, [r4, #0]
 802ebec:	432e      	orrs	r6, r5
 802ebee:	f021 0104 	bic.w	r1, r1, #4
 802ebf2:	6021      	str	r1, [r4, #0]
 802ebf4:	d04b      	beq.n	802ec8e <_printf_i+0x1a6>
 802ebf6:	4616      	mov	r6, r2
 802ebf8:	fbb5 f1f3 	udiv	r1, r5, r3
 802ebfc:	fb03 5711 	mls	r7, r3, r1, r5
 802ec00:	5dc7      	ldrb	r7, [r0, r7]
 802ec02:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802ec06:	462f      	mov	r7, r5
 802ec08:	42bb      	cmp	r3, r7
 802ec0a:	460d      	mov	r5, r1
 802ec0c:	d9f4      	bls.n	802ebf8 <_printf_i+0x110>
 802ec0e:	2b08      	cmp	r3, #8
 802ec10:	d10b      	bne.n	802ec2a <_printf_i+0x142>
 802ec12:	6823      	ldr	r3, [r4, #0]
 802ec14:	07df      	lsls	r7, r3, #31
 802ec16:	d508      	bpl.n	802ec2a <_printf_i+0x142>
 802ec18:	6923      	ldr	r3, [r4, #16]
 802ec1a:	6861      	ldr	r1, [r4, #4]
 802ec1c:	4299      	cmp	r1, r3
 802ec1e:	bfde      	ittt	le
 802ec20:	2330      	movle	r3, #48	@ 0x30
 802ec22:	f806 3c01 	strble.w	r3, [r6, #-1]
 802ec26:	f106 36ff 	addle.w	r6, r6, #4294967295
 802ec2a:	1b92      	subs	r2, r2, r6
 802ec2c:	6122      	str	r2, [r4, #16]
 802ec2e:	f8cd a000 	str.w	sl, [sp]
 802ec32:	464b      	mov	r3, r9
 802ec34:	aa03      	add	r2, sp, #12
 802ec36:	4621      	mov	r1, r4
 802ec38:	4640      	mov	r0, r8
 802ec3a:	f7ff fee7 	bl	802ea0c <_printf_common>
 802ec3e:	3001      	adds	r0, #1
 802ec40:	d14a      	bne.n	802ecd8 <_printf_i+0x1f0>
 802ec42:	f04f 30ff 	mov.w	r0, #4294967295
 802ec46:	b004      	add	sp, #16
 802ec48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ec4c:	6823      	ldr	r3, [r4, #0]
 802ec4e:	f043 0320 	orr.w	r3, r3, #32
 802ec52:	6023      	str	r3, [r4, #0]
 802ec54:	4832      	ldr	r0, [pc, #200]	@ (802ed20 <_printf_i+0x238>)
 802ec56:	2778      	movs	r7, #120	@ 0x78
 802ec58:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802ec5c:	6823      	ldr	r3, [r4, #0]
 802ec5e:	6831      	ldr	r1, [r6, #0]
 802ec60:	061f      	lsls	r7, r3, #24
 802ec62:	f851 5b04 	ldr.w	r5, [r1], #4
 802ec66:	d402      	bmi.n	802ec6e <_printf_i+0x186>
 802ec68:	065f      	lsls	r7, r3, #25
 802ec6a:	bf48      	it	mi
 802ec6c:	b2ad      	uxthmi	r5, r5
 802ec6e:	6031      	str	r1, [r6, #0]
 802ec70:	07d9      	lsls	r1, r3, #31
 802ec72:	bf44      	itt	mi
 802ec74:	f043 0320 	orrmi.w	r3, r3, #32
 802ec78:	6023      	strmi	r3, [r4, #0]
 802ec7a:	b11d      	cbz	r5, 802ec84 <_printf_i+0x19c>
 802ec7c:	2310      	movs	r3, #16
 802ec7e:	e7ad      	b.n	802ebdc <_printf_i+0xf4>
 802ec80:	4826      	ldr	r0, [pc, #152]	@ (802ed1c <_printf_i+0x234>)
 802ec82:	e7e9      	b.n	802ec58 <_printf_i+0x170>
 802ec84:	6823      	ldr	r3, [r4, #0]
 802ec86:	f023 0320 	bic.w	r3, r3, #32
 802ec8a:	6023      	str	r3, [r4, #0]
 802ec8c:	e7f6      	b.n	802ec7c <_printf_i+0x194>
 802ec8e:	4616      	mov	r6, r2
 802ec90:	e7bd      	b.n	802ec0e <_printf_i+0x126>
 802ec92:	6833      	ldr	r3, [r6, #0]
 802ec94:	6825      	ldr	r5, [r4, #0]
 802ec96:	6961      	ldr	r1, [r4, #20]
 802ec98:	1d18      	adds	r0, r3, #4
 802ec9a:	6030      	str	r0, [r6, #0]
 802ec9c:	062e      	lsls	r6, r5, #24
 802ec9e:	681b      	ldr	r3, [r3, #0]
 802eca0:	d501      	bpl.n	802eca6 <_printf_i+0x1be>
 802eca2:	6019      	str	r1, [r3, #0]
 802eca4:	e002      	b.n	802ecac <_printf_i+0x1c4>
 802eca6:	0668      	lsls	r0, r5, #25
 802eca8:	d5fb      	bpl.n	802eca2 <_printf_i+0x1ba>
 802ecaa:	8019      	strh	r1, [r3, #0]
 802ecac:	2300      	movs	r3, #0
 802ecae:	6123      	str	r3, [r4, #16]
 802ecb0:	4616      	mov	r6, r2
 802ecb2:	e7bc      	b.n	802ec2e <_printf_i+0x146>
 802ecb4:	6833      	ldr	r3, [r6, #0]
 802ecb6:	1d1a      	adds	r2, r3, #4
 802ecb8:	6032      	str	r2, [r6, #0]
 802ecba:	681e      	ldr	r6, [r3, #0]
 802ecbc:	6862      	ldr	r2, [r4, #4]
 802ecbe:	2100      	movs	r1, #0
 802ecc0:	4630      	mov	r0, r6
 802ecc2:	f7d1 fa95 	bl	80001f0 <memchr>
 802ecc6:	b108      	cbz	r0, 802eccc <_printf_i+0x1e4>
 802ecc8:	1b80      	subs	r0, r0, r6
 802ecca:	6060      	str	r0, [r4, #4]
 802eccc:	6863      	ldr	r3, [r4, #4]
 802ecce:	6123      	str	r3, [r4, #16]
 802ecd0:	2300      	movs	r3, #0
 802ecd2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802ecd6:	e7aa      	b.n	802ec2e <_printf_i+0x146>
 802ecd8:	6923      	ldr	r3, [r4, #16]
 802ecda:	4632      	mov	r2, r6
 802ecdc:	4649      	mov	r1, r9
 802ecde:	4640      	mov	r0, r8
 802ece0:	47d0      	blx	sl
 802ece2:	3001      	adds	r0, #1
 802ece4:	d0ad      	beq.n	802ec42 <_printf_i+0x15a>
 802ece6:	6823      	ldr	r3, [r4, #0]
 802ece8:	079b      	lsls	r3, r3, #30
 802ecea:	d413      	bmi.n	802ed14 <_printf_i+0x22c>
 802ecec:	68e0      	ldr	r0, [r4, #12]
 802ecee:	9b03      	ldr	r3, [sp, #12]
 802ecf0:	4298      	cmp	r0, r3
 802ecf2:	bfb8      	it	lt
 802ecf4:	4618      	movlt	r0, r3
 802ecf6:	e7a6      	b.n	802ec46 <_printf_i+0x15e>
 802ecf8:	2301      	movs	r3, #1
 802ecfa:	4632      	mov	r2, r6
 802ecfc:	4649      	mov	r1, r9
 802ecfe:	4640      	mov	r0, r8
 802ed00:	47d0      	blx	sl
 802ed02:	3001      	adds	r0, #1
 802ed04:	d09d      	beq.n	802ec42 <_printf_i+0x15a>
 802ed06:	3501      	adds	r5, #1
 802ed08:	68e3      	ldr	r3, [r4, #12]
 802ed0a:	9903      	ldr	r1, [sp, #12]
 802ed0c:	1a5b      	subs	r3, r3, r1
 802ed0e:	42ab      	cmp	r3, r5
 802ed10:	dcf2      	bgt.n	802ecf8 <_printf_i+0x210>
 802ed12:	e7eb      	b.n	802ecec <_printf_i+0x204>
 802ed14:	2500      	movs	r5, #0
 802ed16:	f104 0619 	add.w	r6, r4, #25
 802ed1a:	e7f5      	b.n	802ed08 <_printf_i+0x220>
 802ed1c:	08030695 	.word	0x08030695
 802ed20:	080306a6 	.word	0x080306a6

0802ed24 <__sflush_r>:
 802ed24:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802ed28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ed2c:	0716      	lsls	r6, r2, #28
 802ed2e:	4605      	mov	r5, r0
 802ed30:	460c      	mov	r4, r1
 802ed32:	d454      	bmi.n	802edde <__sflush_r+0xba>
 802ed34:	684b      	ldr	r3, [r1, #4]
 802ed36:	2b00      	cmp	r3, #0
 802ed38:	dc02      	bgt.n	802ed40 <__sflush_r+0x1c>
 802ed3a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802ed3c:	2b00      	cmp	r3, #0
 802ed3e:	dd48      	ble.n	802edd2 <__sflush_r+0xae>
 802ed40:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802ed42:	2e00      	cmp	r6, #0
 802ed44:	d045      	beq.n	802edd2 <__sflush_r+0xae>
 802ed46:	2300      	movs	r3, #0
 802ed48:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802ed4c:	682f      	ldr	r7, [r5, #0]
 802ed4e:	6a21      	ldr	r1, [r4, #32]
 802ed50:	602b      	str	r3, [r5, #0]
 802ed52:	d030      	beq.n	802edb6 <__sflush_r+0x92>
 802ed54:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802ed56:	89a3      	ldrh	r3, [r4, #12]
 802ed58:	0759      	lsls	r1, r3, #29
 802ed5a:	d505      	bpl.n	802ed68 <__sflush_r+0x44>
 802ed5c:	6863      	ldr	r3, [r4, #4]
 802ed5e:	1ad2      	subs	r2, r2, r3
 802ed60:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802ed62:	b10b      	cbz	r3, 802ed68 <__sflush_r+0x44>
 802ed64:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802ed66:	1ad2      	subs	r2, r2, r3
 802ed68:	2300      	movs	r3, #0
 802ed6a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802ed6c:	6a21      	ldr	r1, [r4, #32]
 802ed6e:	4628      	mov	r0, r5
 802ed70:	47b0      	blx	r6
 802ed72:	1c43      	adds	r3, r0, #1
 802ed74:	89a3      	ldrh	r3, [r4, #12]
 802ed76:	d106      	bne.n	802ed86 <__sflush_r+0x62>
 802ed78:	6829      	ldr	r1, [r5, #0]
 802ed7a:	291d      	cmp	r1, #29
 802ed7c:	d82b      	bhi.n	802edd6 <__sflush_r+0xb2>
 802ed7e:	4a2a      	ldr	r2, [pc, #168]	@ (802ee28 <__sflush_r+0x104>)
 802ed80:	40ca      	lsrs	r2, r1
 802ed82:	07d6      	lsls	r6, r2, #31
 802ed84:	d527      	bpl.n	802edd6 <__sflush_r+0xb2>
 802ed86:	2200      	movs	r2, #0
 802ed88:	6062      	str	r2, [r4, #4]
 802ed8a:	04d9      	lsls	r1, r3, #19
 802ed8c:	6922      	ldr	r2, [r4, #16]
 802ed8e:	6022      	str	r2, [r4, #0]
 802ed90:	d504      	bpl.n	802ed9c <__sflush_r+0x78>
 802ed92:	1c42      	adds	r2, r0, #1
 802ed94:	d101      	bne.n	802ed9a <__sflush_r+0x76>
 802ed96:	682b      	ldr	r3, [r5, #0]
 802ed98:	b903      	cbnz	r3, 802ed9c <__sflush_r+0x78>
 802ed9a:	6560      	str	r0, [r4, #84]	@ 0x54
 802ed9c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802ed9e:	602f      	str	r7, [r5, #0]
 802eda0:	b1b9      	cbz	r1, 802edd2 <__sflush_r+0xae>
 802eda2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802eda6:	4299      	cmp	r1, r3
 802eda8:	d002      	beq.n	802edb0 <__sflush_r+0x8c>
 802edaa:	4628      	mov	r0, r5
 802edac:	f7ff fca2 	bl	802e6f4 <_free_r>
 802edb0:	2300      	movs	r3, #0
 802edb2:	6363      	str	r3, [r4, #52]	@ 0x34
 802edb4:	e00d      	b.n	802edd2 <__sflush_r+0xae>
 802edb6:	2301      	movs	r3, #1
 802edb8:	4628      	mov	r0, r5
 802edba:	47b0      	blx	r6
 802edbc:	4602      	mov	r2, r0
 802edbe:	1c50      	adds	r0, r2, #1
 802edc0:	d1c9      	bne.n	802ed56 <__sflush_r+0x32>
 802edc2:	682b      	ldr	r3, [r5, #0]
 802edc4:	2b00      	cmp	r3, #0
 802edc6:	d0c6      	beq.n	802ed56 <__sflush_r+0x32>
 802edc8:	2b1d      	cmp	r3, #29
 802edca:	d001      	beq.n	802edd0 <__sflush_r+0xac>
 802edcc:	2b16      	cmp	r3, #22
 802edce:	d11e      	bne.n	802ee0e <__sflush_r+0xea>
 802edd0:	602f      	str	r7, [r5, #0]
 802edd2:	2000      	movs	r0, #0
 802edd4:	e022      	b.n	802ee1c <__sflush_r+0xf8>
 802edd6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802edda:	b21b      	sxth	r3, r3
 802eddc:	e01b      	b.n	802ee16 <__sflush_r+0xf2>
 802edde:	690f      	ldr	r7, [r1, #16]
 802ede0:	2f00      	cmp	r7, #0
 802ede2:	d0f6      	beq.n	802edd2 <__sflush_r+0xae>
 802ede4:	0793      	lsls	r3, r2, #30
 802ede6:	680e      	ldr	r6, [r1, #0]
 802ede8:	bf08      	it	eq
 802edea:	694b      	ldreq	r3, [r1, #20]
 802edec:	600f      	str	r7, [r1, #0]
 802edee:	bf18      	it	ne
 802edf0:	2300      	movne	r3, #0
 802edf2:	eba6 0807 	sub.w	r8, r6, r7
 802edf6:	608b      	str	r3, [r1, #8]
 802edf8:	f1b8 0f00 	cmp.w	r8, #0
 802edfc:	dde9      	ble.n	802edd2 <__sflush_r+0xae>
 802edfe:	6a21      	ldr	r1, [r4, #32]
 802ee00:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802ee02:	4643      	mov	r3, r8
 802ee04:	463a      	mov	r2, r7
 802ee06:	4628      	mov	r0, r5
 802ee08:	47b0      	blx	r6
 802ee0a:	2800      	cmp	r0, #0
 802ee0c:	dc08      	bgt.n	802ee20 <__sflush_r+0xfc>
 802ee0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ee12:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802ee16:	81a3      	strh	r3, [r4, #12]
 802ee18:	f04f 30ff 	mov.w	r0, #4294967295
 802ee1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ee20:	4407      	add	r7, r0
 802ee22:	eba8 0800 	sub.w	r8, r8, r0
 802ee26:	e7e7      	b.n	802edf8 <__sflush_r+0xd4>
 802ee28:	20400001 	.word	0x20400001

0802ee2c <_fflush_r>:
 802ee2c:	b538      	push	{r3, r4, r5, lr}
 802ee2e:	690b      	ldr	r3, [r1, #16]
 802ee30:	4605      	mov	r5, r0
 802ee32:	460c      	mov	r4, r1
 802ee34:	b913      	cbnz	r3, 802ee3c <_fflush_r+0x10>
 802ee36:	2500      	movs	r5, #0
 802ee38:	4628      	mov	r0, r5
 802ee3a:	bd38      	pop	{r3, r4, r5, pc}
 802ee3c:	b118      	cbz	r0, 802ee46 <_fflush_r+0x1a>
 802ee3e:	6a03      	ldr	r3, [r0, #32]
 802ee40:	b90b      	cbnz	r3, 802ee46 <_fflush_r+0x1a>
 802ee42:	f7ff fa91 	bl	802e368 <__sinit>
 802ee46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ee4a:	2b00      	cmp	r3, #0
 802ee4c:	d0f3      	beq.n	802ee36 <_fflush_r+0xa>
 802ee4e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802ee50:	07d0      	lsls	r0, r2, #31
 802ee52:	d404      	bmi.n	802ee5e <_fflush_r+0x32>
 802ee54:	0599      	lsls	r1, r3, #22
 802ee56:	d402      	bmi.n	802ee5e <_fflush_r+0x32>
 802ee58:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802ee5a:	f7ff fbde 	bl	802e61a <__retarget_lock_acquire_recursive>
 802ee5e:	4628      	mov	r0, r5
 802ee60:	4621      	mov	r1, r4
 802ee62:	f7ff ff5f 	bl	802ed24 <__sflush_r>
 802ee66:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802ee68:	07da      	lsls	r2, r3, #31
 802ee6a:	4605      	mov	r5, r0
 802ee6c:	d4e4      	bmi.n	802ee38 <_fflush_r+0xc>
 802ee6e:	89a3      	ldrh	r3, [r4, #12]
 802ee70:	059b      	lsls	r3, r3, #22
 802ee72:	d4e1      	bmi.n	802ee38 <_fflush_r+0xc>
 802ee74:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802ee76:	f7ff fbd1 	bl	802e61c <__retarget_lock_release_recursive>
 802ee7a:	e7dd      	b.n	802ee38 <_fflush_r+0xc>

0802ee7c <__swbuf_r>:
 802ee7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ee7e:	460e      	mov	r6, r1
 802ee80:	4614      	mov	r4, r2
 802ee82:	4605      	mov	r5, r0
 802ee84:	b118      	cbz	r0, 802ee8e <__swbuf_r+0x12>
 802ee86:	6a03      	ldr	r3, [r0, #32]
 802ee88:	b90b      	cbnz	r3, 802ee8e <__swbuf_r+0x12>
 802ee8a:	f7ff fa6d 	bl	802e368 <__sinit>
 802ee8e:	69a3      	ldr	r3, [r4, #24]
 802ee90:	60a3      	str	r3, [r4, #8]
 802ee92:	89a3      	ldrh	r3, [r4, #12]
 802ee94:	071a      	lsls	r2, r3, #28
 802ee96:	d501      	bpl.n	802ee9c <__swbuf_r+0x20>
 802ee98:	6923      	ldr	r3, [r4, #16]
 802ee9a:	b943      	cbnz	r3, 802eeae <__swbuf_r+0x32>
 802ee9c:	4621      	mov	r1, r4
 802ee9e:	4628      	mov	r0, r5
 802eea0:	f000 f82a 	bl	802eef8 <__swsetup_r>
 802eea4:	b118      	cbz	r0, 802eeae <__swbuf_r+0x32>
 802eea6:	f04f 37ff 	mov.w	r7, #4294967295
 802eeaa:	4638      	mov	r0, r7
 802eeac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802eeae:	6823      	ldr	r3, [r4, #0]
 802eeb0:	6922      	ldr	r2, [r4, #16]
 802eeb2:	1a98      	subs	r0, r3, r2
 802eeb4:	6963      	ldr	r3, [r4, #20]
 802eeb6:	b2f6      	uxtb	r6, r6
 802eeb8:	4283      	cmp	r3, r0
 802eeba:	4637      	mov	r7, r6
 802eebc:	dc05      	bgt.n	802eeca <__swbuf_r+0x4e>
 802eebe:	4621      	mov	r1, r4
 802eec0:	4628      	mov	r0, r5
 802eec2:	f7ff ffb3 	bl	802ee2c <_fflush_r>
 802eec6:	2800      	cmp	r0, #0
 802eec8:	d1ed      	bne.n	802eea6 <__swbuf_r+0x2a>
 802eeca:	68a3      	ldr	r3, [r4, #8]
 802eecc:	3b01      	subs	r3, #1
 802eece:	60a3      	str	r3, [r4, #8]
 802eed0:	6823      	ldr	r3, [r4, #0]
 802eed2:	1c5a      	adds	r2, r3, #1
 802eed4:	6022      	str	r2, [r4, #0]
 802eed6:	701e      	strb	r6, [r3, #0]
 802eed8:	6962      	ldr	r2, [r4, #20]
 802eeda:	1c43      	adds	r3, r0, #1
 802eedc:	429a      	cmp	r2, r3
 802eede:	d004      	beq.n	802eeea <__swbuf_r+0x6e>
 802eee0:	89a3      	ldrh	r3, [r4, #12]
 802eee2:	07db      	lsls	r3, r3, #31
 802eee4:	d5e1      	bpl.n	802eeaa <__swbuf_r+0x2e>
 802eee6:	2e0a      	cmp	r6, #10
 802eee8:	d1df      	bne.n	802eeaa <__swbuf_r+0x2e>
 802eeea:	4621      	mov	r1, r4
 802eeec:	4628      	mov	r0, r5
 802eeee:	f7ff ff9d 	bl	802ee2c <_fflush_r>
 802eef2:	2800      	cmp	r0, #0
 802eef4:	d0d9      	beq.n	802eeaa <__swbuf_r+0x2e>
 802eef6:	e7d6      	b.n	802eea6 <__swbuf_r+0x2a>

0802eef8 <__swsetup_r>:
 802eef8:	b538      	push	{r3, r4, r5, lr}
 802eefa:	4b29      	ldr	r3, [pc, #164]	@ (802efa0 <__swsetup_r+0xa8>)
 802eefc:	4605      	mov	r5, r0
 802eefe:	6818      	ldr	r0, [r3, #0]
 802ef00:	460c      	mov	r4, r1
 802ef02:	b118      	cbz	r0, 802ef0c <__swsetup_r+0x14>
 802ef04:	6a03      	ldr	r3, [r0, #32]
 802ef06:	b90b      	cbnz	r3, 802ef0c <__swsetup_r+0x14>
 802ef08:	f7ff fa2e 	bl	802e368 <__sinit>
 802ef0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ef10:	0719      	lsls	r1, r3, #28
 802ef12:	d422      	bmi.n	802ef5a <__swsetup_r+0x62>
 802ef14:	06da      	lsls	r2, r3, #27
 802ef16:	d407      	bmi.n	802ef28 <__swsetup_r+0x30>
 802ef18:	2209      	movs	r2, #9
 802ef1a:	602a      	str	r2, [r5, #0]
 802ef1c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802ef20:	81a3      	strh	r3, [r4, #12]
 802ef22:	f04f 30ff 	mov.w	r0, #4294967295
 802ef26:	e033      	b.n	802ef90 <__swsetup_r+0x98>
 802ef28:	0758      	lsls	r0, r3, #29
 802ef2a:	d512      	bpl.n	802ef52 <__swsetup_r+0x5a>
 802ef2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802ef2e:	b141      	cbz	r1, 802ef42 <__swsetup_r+0x4a>
 802ef30:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802ef34:	4299      	cmp	r1, r3
 802ef36:	d002      	beq.n	802ef3e <__swsetup_r+0x46>
 802ef38:	4628      	mov	r0, r5
 802ef3a:	f7ff fbdb 	bl	802e6f4 <_free_r>
 802ef3e:	2300      	movs	r3, #0
 802ef40:	6363      	str	r3, [r4, #52]	@ 0x34
 802ef42:	89a3      	ldrh	r3, [r4, #12]
 802ef44:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802ef48:	81a3      	strh	r3, [r4, #12]
 802ef4a:	2300      	movs	r3, #0
 802ef4c:	6063      	str	r3, [r4, #4]
 802ef4e:	6923      	ldr	r3, [r4, #16]
 802ef50:	6023      	str	r3, [r4, #0]
 802ef52:	89a3      	ldrh	r3, [r4, #12]
 802ef54:	f043 0308 	orr.w	r3, r3, #8
 802ef58:	81a3      	strh	r3, [r4, #12]
 802ef5a:	6923      	ldr	r3, [r4, #16]
 802ef5c:	b94b      	cbnz	r3, 802ef72 <__swsetup_r+0x7a>
 802ef5e:	89a3      	ldrh	r3, [r4, #12]
 802ef60:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802ef64:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802ef68:	d003      	beq.n	802ef72 <__swsetup_r+0x7a>
 802ef6a:	4621      	mov	r1, r4
 802ef6c:	4628      	mov	r0, r5
 802ef6e:	f000 f83f 	bl	802eff0 <__smakebuf_r>
 802ef72:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ef76:	f013 0201 	ands.w	r2, r3, #1
 802ef7a:	d00a      	beq.n	802ef92 <__swsetup_r+0x9a>
 802ef7c:	2200      	movs	r2, #0
 802ef7e:	60a2      	str	r2, [r4, #8]
 802ef80:	6962      	ldr	r2, [r4, #20]
 802ef82:	4252      	negs	r2, r2
 802ef84:	61a2      	str	r2, [r4, #24]
 802ef86:	6922      	ldr	r2, [r4, #16]
 802ef88:	b942      	cbnz	r2, 802ef9c <__swsetup_r+0xa4>
 802ef8a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802ef8e:	d1c5      	bne.n	802ef1c <__swsetup_r+0x24>
 802ef90:	bd38      	pop	{r3, r4, r5, pc}
 802ef92:	0799      	lsls	r1, r3, #30
 802ef94:	bf58      	it	pl
 802ef96:	6962      	ldrpl	r2, [r4, #20]
 802ef98:	60a2      	str	r2, [r4, #8]
 802ef9a:	e7f4      	b.n	802ef86 <__swsetup_r+0x8e>
 802ef9c:	2000      	movs	r0, #0
 802ef9e:	e7f7      	b.n	802ef90 <__swsetup_r+0x98>
 802efa0:	20000110 	.word	0x20000110

0802efa4 <__swhatbuf_r>:
 802efa4:	b570      	push	{r4, r5, r6, lr}
 802efa6:	460c      	mov	r4, r1
 802efa8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802efac:	2900      	cmp	r1, #0
 802efae:	b096      	sub	sp, #88	@ 0x58
 802efb0:	4615      	mov	r5, r2
 802efb2:	461e      	mov	r6, r3
 802efb4:	da0d      	bge.n	802efd2 <__swhatbuf_r+0x2e>
 802efb6:	89a3      	ldrh	r3, [r4, #12]
 802efb8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802efbc:	f04f 0100 	mov.w	r1, #0
 802efc0:	bf14      	ite	ne
 802efc2:	2340      	movne	r3, #64	@ 0x40
 802efc4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802efc8:	2000      	movs	r0, #0
 802efca:	6031      	str	r1, [r6, #0]
 802efcc:	602b      	str	r3, [r5, #0]
 802efce:	b016      	add	sp, #88	@ 0x58
 802efd0:	bd70      	pop	{r4, r5, r6, pc}
 802efd2:	466a      	mov	r2, sp
 802efd4:	f000 f848 	bl	802f068 <_fstat_r>
 802efd8:	2800      	cmp	r0, #0
 802efda:	dbec      	blt.n	802efb6 <__swhatbuf_r+0x12>
 802efdc:	9901      	ldr	r1, [sp, #4]
 802efde:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802efe2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802efe6:	4259      	negs	r1, r3
 802efe8:	4159      	adcs	r1, r3
 802efea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802efee:	e7eb      	b.n	802efc8 <__swhatbuf_r+0x24>

0802eff0 <__smakebuf_r>:
 802eff0:	898b      	ldrh	r3, [r1, #12]
 802eff2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802eff4:	079d      	lsls	r5, r3, #30
 802eff6:	4606      	mov	r6, r0
 802eff8:	460c      	mov	r4, r1
 802effa:	d507      	bpl.n	802f00c <__smakebuf_r+0x1c>
 802effc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802f000:	6023      	str	r3, [r4, #0]
 802f002:	6123      	str	r3, [r4, #16]
 802f004:	2301      	movs	r3, #1
 802f006:	6163      	str	r3, [r4, #20]
 802f008:	b003      	add	sp, #12
 802f00a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802f00c:	ab01      	add	r3, sp, #4
 802f00e:	466a      	mov	r2, sp
 802f010:	f7ff ffc8 	bl	802efa4 <__swhatbuf_r>
 802f014:	9f00      	ldr	r7, [sp, #0]
 802f016:	4605      	mov	r5, r0
 802f018:	4639      	mov	r1, r7
 802f01a:	4630      	mov	r0, r6
 802f01c:	f7ff f87e 	bl	802e11c <_malloc_r>
 802f020:	b948      	cbnz	r0, 802f036 <__smakebuf_r+0x46>
 802f022:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f026:	059a      	lsls	r2, r3, #22
 802f028:	d4ee      	bmi.n	802f008 <__smakebuf_r+0x18>
 802f02a:	f023 0303 	bic.w	r3, r3, #3
 802f02e:	f043 0302 	orr.w	r3, r3, #2
 802f032:	81a3      	strh	r3, [r4, #12]
 802f034:	e7e2      	b.n	802effc <__smakebuf_r+0xc>
 802f036:	89a3      	ldrh	r3, [r4, #12]
 802f038:	6020      	str	r0, [r4, #0]
 802f03a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802f03e:	81a3      	strh	r3, [r4, #12]
 802f040:	9b01      	ldr	r3, [sp, #4]
 802f042:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802f046:	b15b      	cbz	r3, 802f060 <__smakebuf_r+0x70>
 802f048:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802f04c:	4630      	mov	r0, r6
 802f04e:	f000 f81d 	bl	802f08c <_isatty_r>
 802f052:	b128      	cbz	r0, 802f060 <__smakebuf_r+0x70>
 802f054:	89a3      	ldrh	r3, [r4, #12]
 802f056:	f023 0303 	bic.w	r3, r3, #3
 802f05a:	f043 0301 	orr.w	r3, r3, #1
 802f05e:	81a3      	strh	r3, [r4, #12]
 802f060:	89a3      	ldrh	r3, [r4, #12]
 802f062:	431d      	orrs	r5, r3
 802f064:	81a5      	strh	r5, [r4, #12]
 802f066:	e7cf      	b.n	802f008 <__smakebuf_r+0x18>

0802f068 <_fstat_r>:
 802f068:	b538      	push	{r3, r4, r5, lr}
 802f06a:	4d07      	ldr	r5, [pc, #28]	@ (802f088 <_fstat_r+0x20>)
 802f06c:	2300      	movs	r3, #0
 802f06e:	4604      	mov	r4, r0
 802f070:	4608      	mov	r0, r1
 802f072:	4611      	mov	r1, r2
 802f074:	602b      	str	r3, [r5, #0]
 802f076:	f7d3 fc1a 	bl	80028ae <_fstat>
 802f07a:	1c43      	adds	r3, r0, #1
 802f07c:	d102      	bne.n	802f084 <_fstat_r+0x1c>
 802f07e:	682b      	ldr	r3, [r5, #0]
 802f080:	b103      	cbz	r3, 802f084 <_fstat_r+0x1c>
 802f082:	6023      	str	r3, [r4, #0]
 802f084:	bd38      	pop	{r3, r4, r5, pc}
 802f086:	bf00      	nop
 802f088:	20014424 	.word	0x20014424

0802f08c <_isatty_r>:
 802f08c:	b538      	push	{r3, r4, r5, lr}
 802f08e:	4d06      	ldr	r5, [pc, #24]	@ (802f0a8 <_isatty_r+0x1c>)
 802f090:	2300      	movs	r3, #0
 802f092:	4604      	mov	r4, r0
 802f094:	4608      	mov	r0, r1
 802f096:	602b      	str	r3, [r5, #0]
 802f098:	f7d3 fc0e 	bl	80028b8 <_isatty>
 802f09c:	1c43      	adds	r3, r0, #1
 802f09e:	d102      	bne.n	802f0a6 <_isatty_r+0x1a>
 802f0a0:	682b      	ldr	r3, [r5, #0]
 802f0a2:	b103      	cbz	r3, 802f0a6 <_isatty_r+0x1a>
 802f0a4:	6023      	str	r3, [r4, #0]
 802f0a6:	bd38      	pop	{r3, r4, r5, pc}
 802f0a8:	20014424 	.word	0x20014424

0802f0ac <_init>:
 802f0ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f0ae:	bf00      	nop
 802f0b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802f0b2:	bc08      	pop	{r3}
 802f0b4:	469e      	mov	lr, r3
 802f0b6:	4770      	bx	lr

0802f0b8 <_fini>:
 802f0b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f0ba:	bf00      	nop
 802f0bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802f0be:	bc08      	pop	{r3}
 802f0c0:	469e      	mov	lr, r3
 802f0c2:	4770      	bx	lr
