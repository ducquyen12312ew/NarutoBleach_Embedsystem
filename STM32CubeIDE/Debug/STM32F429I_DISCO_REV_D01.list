
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002f644  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000459c  0802f7f4  0802f7f4  000307f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000008a6  08033d90  08033d90  00034d90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000028  08034638  08034638  00035638  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000144  08034660  08034660  00035660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 IntFlashSection 001b2f14  080347a4  080347a4  000357a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081e76b8  081e76b8  001e9380  2**0
                  CONTENTS
  8 .ARM          00000008  081e76b8  081e76b8  001e86b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081e76c0  081e76c0  001e9380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081e76c0  081e76c0  001e86c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  081e76d4  081e76d4  001e86d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000170  20000000  081e76dc  001e9000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  081e784c  001e9180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  081e794c  001e9280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          000142a4  20000380  081e7a4c  001e9380  2**2
                  ALLOC
 16 ._user_heap_stack 00001404  20014624  081e7a4c  001e9624  2**0
                  ALLOC
 17 ExtFlashSection 00000000  90000000  90000000  001e9380  2**0
                  CONTENTS
 18 .ARM.attributes 00000030  00000000  00000000  001e9380  2**0
                  CONTENTS, READONLY
 19 TouchGFX_Framebuffer 00070800  d0000000  d0000000  001ea000  2**2
                  ALLOC
 20 .debug_line   000a8952  00000000  00000000  001e93b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000078  00000000  00000000  00291d02  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   001e046a  00000000  00000000  00291d7a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0002e4b9  00000000  00000000  004721e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00005678  00000000  00000000  004a06a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    0012161d  00000000  00000000  004a5d18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 000090e5  00000000  00000000  005c7335  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_loclists 0003fad5  00000000  00000000  005d041a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  0003e48f  00000000  00000000  0060feef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .comment      000000c2  00000000  00000000  0064e37e  2**0
                  CONTENTS, READONLY
 30 .debug_frame  0000d87c  00000000  00000000  0064e440  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802f7dc 	.word	0x0802f7dc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	0802f7dc 	.word	0x0802f7dc

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_dmul>:
 8000290:	b570      	push	{r4, r5, r6, lr}
 8000292:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000296:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800029a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800029e:	bf1d      	ittte	ne
 80002a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002a4:	ea94 0f0c 	teqne	r4, ip
 80002a8:	ea95 0f0c 	teqne	r5, ip
 80002ac:	f000 f8de 	bleq	800046c <__aeabi_dmul+0x1dc>
 80002b0:	442c      	add	r4, r5
 80002b2:	ea81 0603 	eor.w	r6, r1, r3
 80002b6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002ba:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002be:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002c2:	bf18      	it	ne
 80002c4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002c8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80002cc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80002d0:	d038      	beq.n	8000344 <__aeabi_dmul+0xb4>
 80002d2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002d6:	f04f 0500 	mov.w	r5, #0
 80002da:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002de:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80002e2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002e6:	f04f 0600 	mov.w	r6, #0
 80002ea:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002ee:	f09c 0f00 	teq	ip, #0
 80002f2:	bf18      	it	ne
 80002f4:	f04e 0e01 	orrne.w	lr, lr, #1
 80002f8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80002fc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000300:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 8000304:	d204      	bcs.n	8000310 <__aeabi_dmul+0x80>
 8000306:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800030a:	416d      	adcs	r5, r5
 800030c:	eb46 0606 	adc.w	r6, r6, r6
 8000310:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000314:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000318:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800031c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000320:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000324:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000328:	bf88      	it	hi
 800032a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800032e:	d81e      	bhi.n	800036e <__aeabi_dmul+0xde>
 8000330:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000334:	bf08      	it	eq
 8000336:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800033a:	f150 0000 	adcs.w	r0, r0, #0
 800033e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000342:	bd70      	pop	{r4, r5, r6, pc}
 8000344:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000348:	ea46 0101 	orr.w	r1, r6, r1
 800034c:	ea40 0002 	orr.w	r0, r0, r2
 8000350:	ea81 0103 	eor.w	r1, r1, r3
 8000354:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000358:	bfc2      	ittt	gt
 800035a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800035e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000362:	bd70      	popgt	{r4, r5, r6, pc}
 8000364:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000368:	f04f 0e00 	mov.w	lr, #0
 800036c:	3c01      	subs	r4, #1
 800036e:	f300 80ab 	bgt.w	80004c8 <__aeabi_dmul+0x238>
 8000372:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000376:	bfde      	ittt	le
 8000378:	2000      	movle	r0, #0
 800037a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800037e:	bd70      	pople	{r4, r5, r6, pc}
 8000380:	f1c4 0400 	rsb	r4, r4, #0
 8000384:	3c20      	subs	r4, #32
 8000386:	da35      	bge.n	80003f4 <__aeabi_dmul+0x164>
 8000388:	340c      	adds	r4, #12
 800038a:	dc1b      	bgt.n	80003c4 <__aeabi_dmul+0x134>
 800038c:	f104 0414 	add.w	r4, r4, #20
 8000390:	f1c4 0520 	rsb	r5, r4, #32
 8000394:	fa00 f305 	lsl.w	r3, r0, r5
 8000398:	fa20 f004 	lsr.w	r0, r0, r4
 800039c:	fa01 f205 	lsl.w	r2, r1, r5
 80003a0:	ea40 0002 	orr.w	r0, r0, r2
 80003a4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80003a8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80003ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003b0:	fa21 f604 	lsr.w	r6, r1, r4
 80003b4:	eb42 0106 	adc.w	r1, r2, r6
 80003b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003bc:	bf08      	it	eq
 80003be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003c2:	bd70      	pop	{r4, r5, r6, pc}
 80003c4:	f1c4 040c 	rsb	r4, r4, #12
 80003c8:	f1c4 0520 	rsb	r5, r4, #32
 80003cc:	fa00 f304 	lsl.w	r3, r0, r4
 80003d0:	fa20 f005 	lsr.w	r0, r0, r5
 80003d4:	fa01 f204 	lsl.w	r2, r1, r4
 80003d8:	ea40 0002 	orr.w	r0, r0, r2
 80003dc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80003e0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003e4:	f141 0100 	adc.w	r1, r1, #0
 80003e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003ec:	bf08      	it	eq
 80003ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003f2:	bd70      	pop	{r4, r5, r6, pc}
 80003f4:	f1c4 0520 	rsb	r5, r4, #32
 80003f8:	fa00 f205 	lsl.w	r2, r0, r5
 80003fc:	ea4e 0e02 	orr.w	lr, lr, r2
 8000400:	fa20 f304 	lsr.w	r3, r0, r4
 8000404:	fa01 f205 	lsl.w	r2, r1, r5
 8000408:	ea43 0302 	orr.w	r3, r3, r2
 800040c:	fa21 f004 	lsr.w	r0, r1, r4
 8000410:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000414:	fa21 f204 	lsr.w	r2, r1, r4
 8000418:	ea20 0002 	bic.w	r0, r0, r2
 800041c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000420:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000424:	bf08      	it	eq
 8000426:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800042a:	bd70      	pop	{r4, r5, r6, pc}
 800042c:	f094 0f00 	teq	r4, #0
 8000430:	d10f      	bne.n	8000452 <__aeabi_dmul+0x1c2>
 8000432:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000436:	0040      	lsls	r0, r0, #1
 8000438:	eb41 0101 	adc.w	r1, r1, r1
 800043c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000440:	bf08      	it	eq
 8000442:	3c01      	subeq	r4, #1
 8000444:	d0f7      	beq.n	8000436 <__aeabi_dmul+0x1a6>
 8000446:	ea41 0106 	orr.w	r1, r1, r6
 800044a:	f095 0f00 	teq	r5, #0
 800044e:	bf18      	it	ne
 8000450:	4770      	bxne	lr
 8000452:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000456:	0052      	lsls	r2, r2, #1
 8000458:	eb43 0303 	adc.w	r3, r3, r3
 800045c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000460:	bf08      	it	eq
 8000462:	3d01      	subeq	r5, #1
 8000464:	d0f7      	beq.n	8000456 <__aeabi_dmul+0x1c6>
 8000466:	ea43 0306 	orr.w	r3, r3, r6
 800046a:	4770      	bx	lr
 800046c:	ea94 0f0c 	teq	r4, ip
 8000470:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000474:	bf18      	it	ne
 8000476:	ea95 0f0c 	teqne	r5, ip
 800047a:	d00c      	beq.n	8000496 <__aeabi_dmul+0x206>
 800047c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000480:	bf18      	it	ne
 8000482:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000486:	d1d1      	bne.n	800042c <__aeabi_dmul+0x19c>
 8000488:	ea81 0103 	eor.w	r1, r1, r3
 800048c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000490:	f04f 0000 	mov.w	r0, #0
 8000494:	bd70      	pop	{r4, r5, r6, pc}
 8000496:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800049a:	bf06      	itte	eq
 800049c:	4610      	moveq	r0, r2
 800049e:	4619      	moveq	r1, r3
 80004a0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004a4:	d019      	beq.n	80004da <__aeabi_dmul+0x24a>
 80004a6:	ea94 0f0c 	teq	r4, ip
 80004aa:	d102      	bne.n	80004b2 <__aeabi_dmul+0x222>
 80004ac:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004b0:	d113      	bne.n	80004da <__aeabi_dmul+0x24a>
 80004b2:	ea95 0f0c 	teq	r5, ip
 80004b6:	d105      	bne.n	80004c4 <__aeabi_dmul+0x234>
 80004b8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004bc:	bf1c      	itt	ne
 80004be:	4610      	movne	r0, r2
 80004c0:	4619      	movne	r1, r3
 80004c2:	d10a      	bne.n	80004da <__aeabi_dmul+0x24a>
 80004c4:	ea81 0103 	eor.w	r1, r1, r3
 80004c8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80004cc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd70      	pop	{r4, r5, r6, pc}
 80004da:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004de:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80004e2:	bd70      	pop	{r4, r5, r6, pc}

080004e4 <__aeabi_drsub>:
 80004e4:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80004e8:	e002      	b.n	80004f0 <__adddf3>
 80004ea:	bf00      	nop

080004ec <__aeabi_dsub>:
 80004ec:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080004f0 <__adddf3>:
 80004f0:	b530      	push	{r4, r5, lr}
 80004f2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80004f6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80004fa:	ea94 0f05 	teq	r4, r5
 80004fe:	bf08      	it	eq
 8000500:	ea90 0f02 	teqeq	r0, r2
 8000504:	bf1f      	itttt	ne
 8000506:	ea54 0c00 	orrsne.w	ip, r4, r0
 800050a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800050e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000512:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000516:	f000 80e2 	beq.w	80006de <__adddf3+0x1ee>
 800051a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800051e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000522:	bfb8      	it	lt
 8000524:	426d      	neglt	r5, r5
 8000526:	dd0c      	ble.n	8000542 <__adddf3+0x52>
 8000528:	442c      	add	r4, r5
 800052a:	ea80 0202 	eor.w	r2, r0, r2
 800052e:	ea81 0303 	eor.w	r3, r1, r3
 8000532:	ea82 0000 	eor.w	r0, r2, r0
 8000536:	ea83 0101 	eor.w	r1, r3, r1
 800053a:	ea80 0202 	eor.w	r2, r0, r2
 800053e:	ea81 0303 	eor.w	r3, r1, r3
 8000542:	2d36      	cmp	r5, #54	@ 0x36
 8000544:	bf88      	it	hi
 8000546:	bd30      	pophi	{r4, r5, pc}
 8000548:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800054c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000550:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000554:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000558:	d002      	beq.n	8000560 <__adddf3+0x70>
 800055a:	4240      	negs	r0, r0
 800055c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000560:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000564:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000568:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800056c:	d002      	beq.n	8000574 <__adddf3+0x84>
 800056e:	4252      	negs	r2, r2
 8000570:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000574:	ea94 0f05 	teq	r4, r5
 8000578:	f000 80a7 	beq.w	80006ca <__adddf3+0x1da>
 800057c:	f1a4 0401 	sub.w	r4, r4, #1
 8000580:	f1d5 0e20 	rsbs	lr, r5, #32
 8000584:	db0d      	blt.n	80005a2 <__adddf3+0xb2>
 8000586:	fa02 fc0e 	lsl.w	ip, r2, lr
 800058a:	fa22 f205 	lsr.w	r2, r2, r5
 800058e:	1880      	adds	r0, r0, r2
 8000590:	f141 0100 	adc.w	r1, r1, #0
 8000594:	fa03 f20e 	lsl.w	r2, r3, lr
 8000598:	1880      	adds	r0, r0, r2
 800059a:	fa43 f305 	asr.w	r3, r3, r5
 800059e:	4159      	adcs	r1, r3
 80005a0:	e00e      	b.n	80005c0 <__adddf3+0xd0>
 80005a2:	f1a5 0520 	sub.w	r5, r5, #32
 80005a6:	f10e 0e20 	add.w	lr, lr, #32
 80005aa:	2a01      	cmp	r2, #1
 80005ac:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005b0:	bf28      	it	cs
 80005b2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005b6:	fa43 f305 	asr.w	r3, r3, r5
 80005ba:	18c0      	adds	r0, r0, r3
 80005bc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	d507      	bpl.n	80005d6 <__adddf3+0xe6>
 80005c6:	f04f 0e00 	mov.w	lr, #0
 80005ca:	f1dc 0c00 	rsbs	ip, ip, #0
 80005ce:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005d2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005d6:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80005da:	d31b      	bcc.n	8000614 <__adddf3+0x124>
 80005dc:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80005e0:	d30c      	bcc.n	80005fc <__adddf3+0x10c>
 80005e2:	0849      	lsrs	r1, r1, #1
 80005e4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005e8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005ec:	f104 0401 	add.w	r4, r4, #1
 80005f0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80005f4:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80005f8:	f080 809a 	bcs.w	8000730 <__adddf3+0x240>
 80005fc:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000600:	bf08      	it	eq
 8000602:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000606:	f150 0000 	adcs.w	r0, r0, #0
 800060a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800060e:	ea41 0105 	orr.w	r1, r1, r5
 8000612:	bd30      	pop	{r4, r5, pc}
 8000614:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000618:	4140      	adcs	r0, r0
 800061a:	eb41 0101 	adc.w	r1, r1, r1
 800061e:	3c01      	subs	r4, #1
 8000620:	bf28      	it	cs
 8000622:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000626:	d2e9      	bcs.n	80005fc <__adddf3+0x10c>
 8000628:	f091 0f00 	teq	r1, #0
 800062c:	bf04      	itt	eq
 800062e:	4601      	moveq	r1, r0
 8000630:	2000      	moveq	r0, #0
 8000632:	fab1 f381 	clz	r3, r1
 8000636:	bf08      	it	eq
 8000638:	3320      	addeq	r3, #32
 800063a:	f1a3 030b 	sub.w	r3, r3, #11
 800063e:	f1b3 0220 	subs.w	r2, r3, #32
 8000642:	da0c      	bge.n	800065e <__adddf3+0x16e>
 8000644:	320c      	adds	r2, #12
 8000646:	dd08      	ble.n	800065a <__adddf3+0x16a>
 8000648:	f102 0c14 	add.w	ip, r2, #20
 800064c:	f1c2 020c 	rsb	r2, r2, #12
 8000650:	fa01 f00c 	lsl.w	r0, r1, ip
 8000654:	fa21 f102 	lsr.w	r1, r1, r2
 8000658:	e00c      	b.n	8000674 <__adddf3+0x184>
 800065a:	f102 0214 	add.w	r2, r2, #20
 800065e:	bfd8      	it	le
 8000660:	f1c2 0c20 	rsble	ip, r2, #32
 8000664:	fa01 f102 	lsl.w	r1, r1, r2
 8000668:	fa20 fc0c 	lsr.w	ip, r0, ip
 800066c:	bfdc      	itt	le
 800066e:	ea41 010c 	orrle.w	r1, r1, ip
 8000672:	4090      	lslle	r0, r2
 8000674:	1ae4      	subs	r4, r4, r3
 8000676:	bfa2      	ittt	ge
 8000678:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800067c:	4329      	orrge	r1, r5
 800067e:	bd30      	popge	{r4, r5, pc}
 8000680:	ea6f 0404 	mvn.w	r4, r4
 8000684:	3c1f      	subs	r4, #31
 8000686:	da1c      	bge.n	80006c2 <__adddf3+0x1d2>
 8000688:	340c      	adds	r4, #12
 800068a:	dc0e      	bgt.n	80006aa <__adddf3+0x1ba>
 800068c:	f104 0414 	add.w	r4, r4, #20
 8000690:	f1c4 0220 	rsb	r2, r4, #32
 8000694:	fa20 f004 	lsr.w	r0, r0, r4
 8000698:	fa01 f302 	lsl.w	r3, r1, r2
 800069c:	ea40 0003 	orr.w	r0, r0, r3
 80006a0:	fa21 f304 	lsr.w	r3, r1, r4
 80006a4:	ea45 0103 	orr.w	r1, r5, r3
 80006a8:	bd30      	pop	{r4, r5, pc}
 80006aa:	f1c4 040c 	rsb	r4, r4, #12
 80006ae:	f1c4 0220 	rsb	r2, r4, #32
 80006b2:	fa20 f002 	lsr.w	r0, r0, r2
 80006b6:	fa01 f304 	lsl.w	r3, r1, r4
 80006ba:	ea40 0003 	orr.w	r0, r0, r3
 80006be:	4629      	mov	r1, r5
 80006c0:	bd30      	pop	{r4, r5, pc}
 80006c2:	fa21 f004 	lsr.w	r0, r1, r4
 80006c6:	4629      	mov	r1, r5
 80006c8:	bd30      	pop	{r4, r5, pc}
 80006ca:	f094 0f00 	teq	r4, #0
 80006ce:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80006d2:	bf06      	itte	eq
 80006d4:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80006d8:	3401      	addeq	r4, #1
 80006da:	3d01      	subne	r5, #1
 80006dc:	e74e      	b.n	800057c <__adddf3+0x8c>
 80006de:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006e2:	bf18      	it	ne
 80006e4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006e8:	d029      	beq.n	800073e <__adddf3+0x24e>
 80006ea:	ea94 0f05 	teq	r4, r5
 80006ee:	bf08      	it	eq
 80006f0:	ea90 0f02 	teqeq	r0, r2
 80006f4:	d005      	beq.n	8000702 <__adddf3+0x212>
 80006f6:	ea54 0c00 	orrs.w	ip, r4, r0
 80006fa:	bf04      	itt	eq
 80006fc:	4619      	moveq	r1, r3
 80006fe:	4610      	moveq	r0, r2
 8000700:	bd30      	pop	{r4, r5, pc}
 8000702:	ea91 0f03 	teq	r1, r3
 8000706:	bf1e      	ittt	ne
 8000708:	2100      	movne	r1, #0
 800070a:	2000      	movne	r0, #0
 800070c:	bd30      	popne	{r4, r5, pc}
 800070e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000712:	d105      	bne.n	8000720 <__adddf3+0x230>
 8000714:	0040      	lsls	r0, r0, #1
 8000716:	4149      	adcs	r1, r1
 8000718:	bf28      	it	cs
 800071a:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800071e:	bd30      	pop	{r4, r5, pc}
 8000720:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000724:	bf3c      	itt	cc
 8000726:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800072a:	bd30      	popcc	{r4, r5, pc}
 800072c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000730:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000734:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000738:	f04f 0000 	mov.w	r0, #0
 800073c:	bd30      	pop	{r4, r5, pc}
 800073e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000742:	bf1a      	itte	ne
 8000744:	4619      	movne	r1, r3
 8000746:	4610      	movne	r0, r2
 8000748:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800074c:	bf1c      	itt	ne
 800074e:	460b      	movne	r3, r1
 8000750:	4602      	movne	r2, r0
 8000752:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000756:	bf06      	itte	eq
 8000758:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800075c:	ea91 0f03 	teqeq	r1, r3
 8000760:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop

08000768 <__aeabi_ui2d>:
 8000768:	f090 0f00 	teq	r0, #0
 800076c:	bf04      	itt	eq
 800076e:	2100      	moveq	r1, #0
 8000770:	4770      	bxeq	lr
 8000772:	b530      	push	{r4, r5, lr}
 8000774:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000778:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800077c:	f04f 0500 	mov.w	r5, #0
 8000780:	f04f 0100 	mov.w	r1, #0
 8000784:	e750      	b.n	8000628 <__adddf3+0x138>
 8000786:	bf00      	nop

08000788 <__aeabi_i2d>:
 8000788:	f090 0f00 	teq	r0, #0
 800078c:	bf04      	itt	eq
 800078e:	2100      	moveq	r1, #0
 8000790:	4770      	bxeq	lr
 8000792:	b530      	push	{r4, r5, lr}
 8000794:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000798:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800079c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80007a0:	bf48      	it	mi
 80007a2:	4240      	negmi	r0, r0
 80007a4:	f04f 0100 	mov.w	r1, #0
 80007a8:	e73e      	b.n	8000628 <__adddf3+0x138>
 80007aa:	bf00      	nop

080007ac <__aeabi_f2d>:
 80007ac:	0042      	lsls	r2, r0, #1
 80007ae:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007b2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007b6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007ba:	bf1f      	itttt	ne
 80007bc:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80007c0:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80007c4:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80007c8:	4770      	bxne	lr
 80007ca:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80007ce:	bf08      	it	eq
 80007d0:	4770      	bxeq	lr
 80007d2:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80007d6:	bf04      	itt	eq
 80007d8:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80007dc:	4770      	bxeq	lr
 80007de:	b530      	push	{r4, r5, lr}
 80007e0:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80007e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80007e8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80007ec:	e71c      	b.n	8000628 <__adddf3+0x138>
 80007ee:	bf00      	nop

080007f0 <__aeabi_ul2d>:
 80007f0:	ea50 0201 	orrs.w	r2, r0, r1
 80007f4:	bf08      	it	eq
 80007f6:	4770      	bxeq	lr
 80007f8:	b530      	push	{r4, r5, lr}
 80007fa:	f04f 0500 	mov.w	r5, #0
 80007fe:	e00a      	b.n	8000816 <__aeabi_l2d+0x16>

08000800 <__aeabi_l2d>:
 8000800:	ea50 0201 	orrs.w	r2, r0, r1
 8000804:	bf08      	it	eq
 8000806:	4770      	bxeq	lr
 8000808:	b530      	push	{r4, r5, lr}
 800080a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800080e:	d502      	bpl.n	8000816 <__aeabi_l2d+0x16>
 8000810:	4240      	negs	r0, r0
 8000812:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000816:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800081a:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800081e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000822:	f43f aed8 	beq.w	80005d6 <__adddf3+0xe6>
 8000826:	f04f 0203 	mov.w	r2, #3
 800082a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800082e:	bf18      	it	ne
 8000830:	3203      	addne	r2, #3
 8000832:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000836:	bf18      	it	ne
 8000838:	3203      	addne	r2, #3
 800083a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800083e:	f1c2 0320 	rsb	r3, r2, #32
 8000842:	fa00 fc03 	lsl.w	ip, r0, r3
 8000846:	fa20 f002 	lsr.w	r0, r0, r2
 800084a:	fa01 fe03 	lsl.w	lr, r1, r3
 800084e:	ea40 000e 	orr.w	r0, r0, lr
 8000852:	fa21 f102 	lsr.w	r1, r1, r2
 8000856:	4414      	add	r4, r2
 8000858:	e6bd      	b.n	80005d6 <__adddf3+0xe6>
 800085a:	bf00      	nop

0800085c <__aeabi_d2iz>:
 800085c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000860:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000864:	d215      	bcs.n	8000892 <__aeabi_d2iz+0x36>
 8000866:	d511      	bpl.n	800088c <__aeabi_d2iz+0x30>
 8000868:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 800086c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000870:	d912      	bls.n	8000898 <__aeabi_d2iz+0x3c>
 8000872:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000876:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800087a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800087e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000882:	fa23 f002 	lsr.w	r0, r3, r2
 8000886:	bf18      	it	ne
 8000888:	4240      	negne	r0, r0
 800088a:	4770      	bx	lr
 800088c:	f04f 0000 	mov.w	r0, #0
 8000890:	4770      	bx	lr
 8000892:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000896:	d105      	bne.n	80008a4 <__aeabi_d2iz+0x48>
 8000898:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 800089c:	bf08      	it	eq
 800089e:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 80008a2:	4770      	bx	lr
 80008a4:	f04f 0000 	mov.w	r0, #0
 80008a8:	4770      	bx	lr
 80008aa:	bf00      	nop

080008ac <__aeabi_ldivmod>:
 80008ac:	b97b      	cbnz	r3, 80008ce <__aeabi_ldivmod+0x22>
 80008ae:	b972      	cbnz	r2, 80008ce <__aeabi_ldivmod+0x22>
 80008b0:	2900      	cmp	r1, #0
 80008b2:	bfbe      	ittt	lt
 80008b4:	2000      	movlt	r0, #0
 80008b6:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80008ba:	e006      	blt.n	80008ca <__aeabi_ldivmod+0x1e>
 80008bc:	bf08      	it	eq
 80008be:	2800      	cmpeq	r0, #0
 80008c0:	bf1c      	itt	ne
 80008c2:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80008c6:	f04f 30ff 	movne.w	r0, #4294967295
 80008ca:	f000 b9d3 	b.w	8000c74 <__aeabi_idiv0>
 80008ce:	f1ad 0c08 	sub.w	ip, sp, #8
 80008d2:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80008d6:	2900      	cmp	r1, #0
 80008d8:	db09      	blt.n	80008ee <__aeabi_ldivmod+0x42>
 80008da:	2b00      	cmp	r3, #0
 80008dc:	db1a      	blt.n	8000914 <__aeabi_ldivmod+0x68>
 80008de:	f000 f84d 	bl	800097c <__udivmoddi4>
 80008e2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80008e6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80008ea:	b004      	add	sp, #16
 80008ec:	4770      	bx	lr
 80008ee:	4240      	negs	r0, r0
 80008f0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008f4:	2b00      	cmp	r3, #0
 80008f6:	db1b      	blt.n	8000930 <__aeabi_ldivmod+0x84>
 80008f8:	f000 f840 	bl	800097c <__udivmoddi4>
 80008fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000900:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000904:	b004      	add	sp, #16
 8000906:	4240      	negs	r0, r0
 8000908:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800090c:	4252      	negs	r2, r2
 800090e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000912:	4770      	bx	lr
 8000914:	4252      	negs	r2, r2
 8000916:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800091a:	f000 f82f 	bl	800097c <__udivmoddi4>
 800091e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000922:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000926:	b004      	add	sp, #16
 8000928:	4240      	negs	r0, r0
 800092a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800092e:	4770      	bx	lr
 8000930:	4252      	negs	r2, r2
 8000932:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000936:	f000 f821 	bl	800097c <__udivmoddi4>
 800093a:	f8dd e004 	ldr.w	lr, [sp, #4]
 800093e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000942:	b004      	add	sp, #16
 8000944:	4252      	negs	r2, r2
 8000946:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800094a:	4770      	bx	lr

0800094c <__aeabi_uldivmod>:
 800094c:	b953      	cbnz	r3, 8000964 <__aeabi_uldivmod+0x18>
 800094e:	b94a      	cbnz	r2, 8000964 <__aeabi_uldivmod+0x18>
 8000950:	2900      	cmp	r1, #0
 8000952:	bf08      	it	eq
 8000954:	2800      	cmpeq	r0, #0
 8000956:	bf1c      	itt	ne
 8000958:	f04f 31ff 	movne.w	r1, #4294967295
 800095c:	f04f 30ff 	movne.w	r0, #4294967295
 8000960:	f000 b988 	b.w	8000c74 <__aeabi_idiv0>
 8000964:	f1ad 0c08 	sub.w	ip, sp, #8
 8000968:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800096c:	f000 f806 	bl	800097c <__udivmoddi4>
 8000970:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000974:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000978:	b004      	add	sp, #16
 800097a:	4770      	bx	lr

0800097c <__udivmoddi4>:
 800097c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000980:	9d08      	ldr	r5, [sp, #32]
 8000982:	468e      	mov	lr, r1
 8000984:	4604      	mov	r4, r0
 8000986:	4688      	mov	r8, r1
 8000988:	2b00      	cmp	r3, #0
 800098a:	d14a      	bne.n	8000a22 <__udivmoddi4+0xa6>
 800098c:	428a      	cmp	r2, r1
 800098e:	4617      	mov	r7, r2
 8000990:	d962      	bls.n	8000a58 <__udivmoddi4+0xdc>
 8000992:	fab2 f682 	clz	r6, r2
 8000996:	b14e      	cbz	r6, 80009ac <__udivmoddi4+0x30>
 8000998:	f1c6 0320 	rsb	r3, r6, #32
 800099c:	fa01 f806 	lsl.w	r8, r1, r6
 80009a0:	fa20 f303 	lsr.w	r3, r0, r3
 80009a4:	40b7      	lsls	r7, r6
 80009a6:	ea43 0808 	orr.w	r8, r3, r8
 80009aa:	40b4      	lsls	r4, r6
 80009ac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80009b0:	fa1f fc87 	uxth.w	ip, r7
 80009b4:	fbb8 f1fe 	udiv	r1, r8, lr
 80009b8:	0c23      	lsrs	r3, r4, #16
 80009ba:	fb0e 8811 	mls	r8, lr, r1, r8
 80009be:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80009c2:	fb01 f20c 	mul.w	r2, r1, ip
 80009c6:	429a      	cmp	r2, r3
 80009c8:	d909      	bls.n	80009de <__udivmoddi4+0x62>
 80009ca:	18fb      	adds	r3, r7, r3
 80009cc:	f101 30ff 	add.w	r0, r1, #4294967295
 80009d0:	f080 80ea 	bcs.w	8000ba8 <__udivmoddi4+0x22c>
 80009d4:	429a      	cmp	r2, r3
 80009d6:	f240 80e7 	bls.w	8000ba8 <__udivmoddi4+0x22c>
 80009da:	3902      	subs	r1, #2
 80009dc:	443b      	add	r3, r7
 80009de:	1a9a      	subs	r2, r3, r2
 80009e0:	b2a3      	uxth	r3, r4
 80009e2:	fbb2 f0fe 	udiv	r0, r2, lr
 80009e6:	fb0e 2210 	mls	r2, lr, r0, r2
 80009ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80009ee:	fb00 fc0c 	mul.w	ip, r0, ip
 80009f2:	459c      	cmp	ip, r3
 80009f4:	d909      	bls.n	8000a0a <__udivmoddi4+0x8e>
 80009f6:	18fb      	adds	r3, r7, r3
 80009f8:	f100 32ff 	add.w	r2, r0, #4294967295
 80009fc:	f080 80d6 	bcs.w	8000bac <__udivmoddi4+0x230>
 8000a00:	459c      	cmp	ip, r3
 8000a02:	f240 80d3 	bls.w	8000bac <__udivmoddi4+0x230>
 8000a06:	443b      	add	r3, r7
 8000a08:	3802      	subs	r0, #2
 8000a0a:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a0e:	eba3 030c 	sub.w	r3, r3, ip
 8000a12:	2100      	movs	r1, #0
 8000a14:	b11d      	cbz	r5, 8000a1e <__udivmoddi4+0xa2>
 8000a16:	40f3      	lsrs	r3, r6
 8000a18:	2200      	movs	r2, #0
 8000a1a:	e9c5 3200 	strd	r3, r2, [r5]
 8000a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a22:	428b      	cmp	r3, r1
 8000a24:	d905      	bls.n	8000a32 <__udivmoddi4+0xb6>
 8000a26:	b10d      	cbz	r5, 8000a2c <__udivmoddi4+0xb0>
 8000a28:	e9c5 0100 	strd	r0, r1, [r5]
 8000a2c:	2100      	movs	r1, #0
 8000a2e:	4608      	mov	r0, r1
 8000a30:	e7f5      	b.n	8000a1e <__udivmoddi4+0xa2>
 8000a32:	fab3 f183 	clz	r1, r3
 8000a36:	2900      	cmp	r1, #0
 8000a38:	d146      	bne.n	8000ac8 <__udivmoddi4+0x14c>
 8000a3a:	4573      	cmp	r3, lr
 8000a3c:	d302      	bcc.n	8000a44 <__udivmoddi4+0xc8>
 8000a3e:	4282      	cmp	r2, r0
 8000a40:	f200 8105 	bhi.w	8000c4e <__udivmoddi4+0x2d2>
 8000a44:	1a84      	subs	r4, r0, r2
 8000a46:	eb6e 0203 	sbc.w	r2, lr, r3
 8000a4a:	2001      	movs	r0, #1
 8000a4c:	4690      	mov	r8, r2
 8000a4e:	2d00      	cmp	r5, #0
 8000a50:	d0e5      	beq.n	8000a1e <__udivmoddi4+0xa2>
 8000a52:	e9c5 4800 	strd	r4, r8, [r5]
 8000a56:	e7e2      	b.n	8000a1e <__udivmoddi4+0xa2>
 8000a58:	2a00      	cmp	r2, #0
 8000a5a:	f000 8090 	beq.w	8000b7e <__udivmoddi4+0x202>
 8000a5e:	fab2 f682 	clz	r6, r2
 8000a62:	2e00      	cmp	r6, #0
 8000a64:	f040 80a4 	bne.w	8000bb0 <__udivmoddi4+0x234>
 8000a68:	1a8a      	subs	r2, r1, r2
 8000a6a:	0c03      	lsrs	r3, r0, #16
 8000a6c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000a70:	b280      	uxth	r0, r0
 8000a72:	b2bc      	uxth	r4, r7
 8000a74:	2101      	movs	r1, #1
 8000a76:	fbb2 fcfe 	udiv	ip, r2, lr
 8000a7a:	fb0e 221c 	mls	r2, lr, ip, r2
 8000a7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000a82:	fb04 f20c 	mul.w	r2, r4, ip
 8000a86:	429a      	cmp	r2, r3
 8000a88:	d907      	bls.n	8000a9a <__udivmoddi4+0x11e>
 8000a8a:	18fb      	adds	r3, r7, r3
 8000a8c:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000a90:	d202      	bcs.n	8000a98 <__udivmoddi4+0x11c>
 8000a92:	429a      	cmp	r2, r3
 8000a94:	f200 80e0 	bhi.w	8000c58 <__udivmoddi4+0x2dc>
 8000a98:	46c4      	mov	ip, r8
 8000a9a:	1a9b      	subs	r3, r3, r2
 8000a9c:	fbb3 f2fe 	udiv	r2, r3, lr
 8000aa0:	fb0e 3312 	mls	r3, lr, r2, r3
 8000aa4:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000aa8:	fb02 f404 	mul.w	r4, r2, r4
 8000aac:	429c      	cmp	r4, r3
 8000aae:	d907      	bls.n	8000ac0 <__udivmoddi4+0x144>
 8000ab0:	18fb      	adds	r3, r7, r3
 8000ab2:	f102 30ff 	add.w	r0, r2, #4294967295
 8000ab6:	d202      	bcs.n	8000abe <__udivmoddi4+0x142>
 8000ab8:	429c      	cmp	r4, r3
 8000aba:	f200 80ca 	bhi.w	8000c52 <__udivmoddi4+0x2d6>
 8000abe:	4602      	mov	r2, r0
 8000ac0:	1b1b      	subs	r3, r3, r4
 8000ac2:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000ac6:	e7a5      	b.n	8000a14 <__udivmoddi4+0x98>
 8000ac8:	f1c1 0620 	rsb	r6, r1, #32
 8000acc:	408b      	lsls	r3, r1
 8000ace:	fa22 f706 	lsr.w	r7, r2, r6
 8000ad2:	431f      	orrs	r7, r3
 8000ad4:	fa0e f401 	lsl.w	r4, lr, r1
 8000ad8:	fa20 f306 	lsr.w	r3, r0, r6
 8000adc:	fa2e fe06 	lsr.w	lr, lr, r6
 8000ae0:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000ae4:	4323      	orrs	r3, r4
 8000ae6:	fa00 f801 	lsl.w	r8, r0, r1
 8000aea:	fa1f fc87 	uxth.w	ip, r7
 8000aee:	fbbe f0f9 	udiv	r0, lr, r9
 8000af2:	0c1c      	lsrs	r4, r3, #16
 8000af4:	fb09 ee10 	mls	lr, r9, r0, lr
 8000af8:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000afc:	fb00 fe0c 	mul.w	lr, r0, ip
 8000b00:	45a6      	cmp	lr, r4
 8000b02:	fa02 f201 	lsl.w	r2, r2, r1
 8000b06:	d909      	bls.n	8000b1c <__udivmoddi4+0x1a0>
 8000b08:	193c      	adds	r4, r7, r4
 8000b0a:	f100 3aff 	add.w	sl, r0, #4294967295
 8000b0e:	f080 809c 	bcs.w	8000c4a <__udivmoddi4+0x2ce>
 8000b12:	45a6      	cmp	lr, r4
 8000b14:	f240 8099 	bls.w	8000c4a <__udivmoddi4+0x2ce>
 8000b18:	3802      	subs	r0, #2
 8000b1a:	443c      	add	r4, r7
 8000b1c:	eba4 040e 	sub.w	r4, r4, lr
 8000b20:	fa1f fe83 	uxth.w	lr, r3
 8000b24:	fbb4 f3f9 	udiv	r3, r4, r9
 8000b28:	fb09 4413 	mls	r4, r9, r3, r4
 8000b2c:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000b30:	fb03 fc0c 	mul.w	ip, r3, ip
 8000b34:	45a4      	cmp	ip, r4
 8000b36:	d908      	bls.n	8000b4a <__udivmoddi4+0x1ce>
 8000b38:	193c      	adds	r4, r7, r4
 8000b3a:	f103 3eff 	add.w	lr, r3, #4294967295
 8000b3e:	f080 8082 	bcs.w	8000c46 <__udivmoddi4+0x2ca>
 8000b42:	45a4      	cmp	ip, r4
 8000b44:	d97f      	bls.n	8000c46 <__udivmoddi4+0x2ca>
 8000b46:	3b02      	subs	r3, #2
 8000b48:	443c      	add	r4, r7
 8000b4a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000b4e:	eba4 040c 	sub.w	r4, r4, ip
 8000b52:	fba0 ec02 	umull	lr, ip, r0, r2
 8000b56:	4564      	cmp	r4, ip
 8000b58:	4673      	mov	r3, lr
 8000b5a:	46e1      	mov	r9, ip
 8000b5c:	d362      	bcc.n	8000c24 <__udivmoddi4+0x2a8>
 8000b5e:	d05f      	beq.n	8000c20 <__udivmoddi4+0x2a4>
 8000b60:	b15d      	cbz	r5, 8000b7a <__udivmoddi4+0x1fe>
 8000b62:	ebb8 0203 	subs.w	r2, r8, r3
 8000b66:	eb64 0409 	sbc.w	r4, r4, r9
 8000b6a:	fa04 f606 	lsl.w	r6, r4, r6
 8000b6e:	fa22 f301 	lsr.w	r3, r2, r1
 8000b72:	431e      	orrs	r6, r3
 8000b74:	40cc      	lsrs	r4, r1
 8000b76:	e9c5 6400 	strd	r6, r4, [r5]
 8000b7a:	2100      	movs	r1, #0
 8000b7c:	e74f      	b.n	8000a1e <__udivmoddi4+0xa2>
 8000b7e:	fbb1 fcf2 	udiv	ip, r1, r2
 8000b82:	0c01      	lsrs	r1, r0, #16
 8000b84:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000b88:	b280      	uxth	r0, r0
 8000b8a:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000b8e:	463b      	mov	r3, r7
 8000b90:	4638      	mov	r0, r7
 8000b92:	463c      	mov	r4, r7
 8000b94:	46b8      	mov	r8, r7
 8000b96:	46be      	mov	lr, r7
 8000b98:	2620      	movs	r6, #32
 8000b9a:	fbb1 f1f7 	udiv	r1, r1, r7
 8000b9e:	eba2 0208 	sub.w	r2, r2, r8
 8000ba2:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000ba6:	e766      	b.n	8000a76 <__udivmoddi4+0xfa>
 8000ba8:	4601      	mov	r1, r0
 8000baa:	e718      	b.n	80009de <__udivmoddi4+0x62>
 8000bac:	4610      	mov	r0, r2
 8000bae:	e72c      	b.n	8000a0a <__udivmoddi4+0x8e>
 8000bb0:	f1c6 0220 	rsb	r2, r6, #32
 8000bb4:	fa2e f302 	lsr.w	r3, lr, r2
 8000bb8:	40b7      	lsls	r7, r6
 8000bba:	40b1      	lsls	r1, r6
 8000bbc:	fa20 f202 	lsr.w	r2, r0, r2
 8000bc0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000bc4:	430a      	orrs	r2, r1
 8000bc6:	fbb3 f8fe 	udiv	r8, r3, lr
 8000bca:	b2bc      	uxth	r4, r7
 8000bcc:	fb0e 3318 	mls	r3, lr, r8, r3
 8000bd0:	0c11      	lsrs	r1, r2, #16
 8000bd2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000bd6:	fb08 f904 	mul.w	r9, r8, r4
 8000bda:	40b0      	lsls	r0, r6
 8000bdc:	4589      	cmp	r9, r1
 8000bde:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000be2:	b280      	uxth	r0, r0
 8000be4:	d93e      	bls.n	8000c64 <__udivmoddi4+0x2e8>
 8000be6:	1879      	adds	r1, r7, r1
 8000be8:	f108 3cff 	add.w	ip, r8, #4294967295
 8000bec:	d201      	bcs.n	8000bf2 <__udivmoddi4+0x276>
 8000bee:	4589      	cmp	r9, r1
 8000bf0:	d81f      	bhi.n	8000c32 <__udivmoddi4+0x2b6>
 8000bf2:	eba1 0109 	sub.w	r1, r1, r9
 8000bf6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000bfa:	fb09 f804 	mul.w	r8, r9, r4
 8000bfe:	fb0e 1119 	mls	r1, lr, r9, r1
 8000c02:	b292      	uxth	r2, r2
 8000c04:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c08:	4542      	cmp	r2, r8
 8000c0a:	d229      	bcs.n	8000c60 <__udivmoddi4+0x2e4>
 8000c0c:	18ba      	adds	r2, r7, r2
 8000c0e:	f109 31ff 	add.w	r1, r9, #4294967295
 8000c12:	d2c4      	bcs.n	8000b9e <__udivmoddi4+0x222>
 8000c14:	4542      	cmp	r2, r8
 8000c16:	d2c2      	bcs.n	8000b9e <__udivmoddi4+0x222>
 8000c18:	f1a9 0102 	sub.w	r1, r9, #2
 8000c1c:	443a      	add	r2, r7
 8000c1e:	e7be      	b.n	8000b9e <__udivmoddi4+0x222>
 8000c20:	45f0      	cmp	r8, lr
 8000c22:	d29d      	bcs.n	8000b60 <__udivmoddi4+0x1e4>
 8000c24:	ebbe 0302 	subs.w	r3, lr, r2
 8000c28:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000c2c:	3801      	subs	r0, #1
 8000c2e:	46e1      	mov	r9, ip
 8000c30:	e796      	b.n	8000b60 <__udivmoddi4+0x1e4>
 8000c32:	eba7 0909 	sub.w	r9, r7, r9
 8000c36:	4449      	add	r1, r9
 8000c38:	f1a8 0c02 	sub.w	ip, r8, #2
 8000c3c:	fbb1 f9fe 	udiv	r9, r1, lr
 8000c40:	fb09 f804 	mul.w	r8, r9, r4
 8000c44:	e7db      	b.n	8000bfe <__udivmoddi4+0x282>
 8000c46:	4673      	mov	r3, lr
 8000c48:	e77f      	b.n	8000b4a <__udivmoddi4+0x1ce>
 8000c4a:	4650      	mov	r0, sl
 8000c4c:	e766      	b.n	8000b1c <__udivmoddi4+0x1a0>
 8000c4e:	4608      	mov	r0, r1
 8000c50:	e6fd      	b.n	8000a4e <__udivmoddi4+0xd2>
 8000c52:	443b      	add	r3, r7
 8000c54:	3a02      	subs	r2, #2
 8000c56:	e733      	b.n	8000ac0 <__udivmoddi4+0x144>
 8000c58:	f1ac 0c02 	sub.w	ip, ip, #2
 8000c5c:	443b      	add	r3, r7
 8000c5e:	e71c      	b.n	8000a9a <__udivmoddi4+0x11e>
 8000c60:	4649      	mov	r1, r9
 8000c62:	e79c      	b.n	8000b9e <__udivmoddi4+0x222>
 8000c64:	eba1 0109 	sub.w	r1, r1, r9
 8000c68:	46c4      	mov	ip, r8
 8000c6a:	fbb1 f9fe 	udiv	r9, r1, lr
 8000c6e:	fb09 f804 	mul.w	r8, r9, r4
 8000c72:	e7c4      	b.n	8000bfe <__udivmoddi4+0x282>

08000c74 <__aeabi_idiv0>:
 8000c74:	4770      	bx	lr
 8000c76:	bf00      	nop

08000c78 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000c78:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000cb0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000c7c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000c7e:	e003      	b.n	8000c88 <LoopCopyDataInit>

08000c80 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000c80:	4b0c      	ldr	r3, [pc, #48]	@ (8000cb4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000c82:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000c84:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000c86:	3104      	adds	r1, #4

08000c88 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000c88:	480b      	ldr	r0, [pc, #44]	@ (8000cb8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000c8a:	4b0c      	ldr	r3, [pc, #48]	@ (8000cbc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000c8c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000c8e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000c90:	d3f6      	bcc.n	8000c80 <CopyDataInit>
  ldr  r2, =_sbss
 8000c92:	4a0b      	ldr	r2, [pc, #44]	@ (8000cc0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000c94:	e002      	b.n	8000c9c <LoopFillZerobss>

08000c96 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000c96:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000c98:	f842 3b04 	str.w	r3, [r2], #4

08000c9c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000c9c:	4b09      	ldr	r3, [pc, #36]	@ (8000cc4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000c9e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ca0:	d3f9      	bcc.n	8000c96 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ca2:	f00f fcc7 	bl	8010634 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ca6:	f02e f82b 	bl	802ed00 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000caa:	f001 f9e7 	bl	800207c <main>
  bx  lr    
 8000cae:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cb0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cb4:	081e76dc 	.word	0x081e76dc
  ldr  r0, =_sdata
 8000cb8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cbc:	20000170 	.word	0x20000170
  ldr  r2, =_sbss
 8000cc0:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 8000cc4:	20014624 	.word	0x20014624

08000cc8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000cc8:	e7fe      	b.n	8000cc8 <ADC_IRQHandler>

08000cca <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000cca:	4770      	bx	lr

08000ccc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000ccc:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000cce:	f000 fdbf 	bl	8001850 <touchgfx_components_init>
    touchgfx_init();
}
 8000cd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000cd6:	f000 bd41 	b.w	800175c <touchgfx_init>

08000cda <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000cda:	f000 bdbb 	b.w	8001854 <touchgfx_taskEntry>

08000cde <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000cde:	4770      	bx	lr

08000ce0 <_ZN20STM32TouchControllerD0Ev>:
 8000ce0:	b510      	push	{r4, lr}
 8000ce2:	2104      	movs	r1, #4
 8000ce4:	4604      	mov	r4, r0
 8000ce6:	f02c fe1e 	bl	802d926 <_ZdlPvj>
 8000cea:	4620      	mov	r0, r4
 8000cec:	bd10      	pop	{r4, pc}
	...

08000cf0 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000cf0:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000cf2:	4b0c      	ldr	r3, [pc, #48]	@ (8000d24 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000cf4:	4c0c      	ldr	r4, [pc, #48]	@ (8000d28 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000cf6:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000cf8:	4b0c      	ldr	r3, [pc, #48]	@ (8000d2c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000cfa:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8000cfc:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000cfe:	6863      	ldr	r3, [r4, #4]
 8000d00:	4798      	blx	r3
 8000d02:	f640 0311 	movw	r3, #2065	@ 0x811
 8000d06:	4298      	cmp	r0, r3
 8000d08:	d10a      	bne.n	8000d20 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000d0a:	4d09      	ldr	r5, [pc, #36]	@ (8000d30 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000d0c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000d0e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000d10:	2082      	movs	r0, #130	@ 0x82
 8000d12:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000d14:	682b      	ldr	r3, [r5, #0]
 8000d16:	2082      	movs	r0, #130	@ 0x82
 8000d18:	68db      	ldr	r3, [r3, #12]
 8000d1a:	4798      	blx	r3
 8000d1c:	2000      	movs	r0, #0
    }

    return ret;
}
 8000d1e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000d20:	2001      	movs	r0, #1
 8000d22:	e7fc      	b.n	8000d1e <_Z11BSP_TS_Inittt+0x2e>
 8000d24:	200003a6 	.word	0x200003a6
 8000d28:	20000058 	.word	0x20000058
 8000d2c:	200003a4 	.word	0x200003a4
 8000d30:	200003a8 	.word	0x200003a8

08000d34 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000d34:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000d38:	20f0      	movs	r0, #240	@ 0xf0
 8000d3a:	f7ff bfd9 	b.w	8000cf0 <_Z11BSP_TS_Inittt>
	...

08000d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000d40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000d42:	4d39      	ldr	r5, [pc, #228]	@ (8000e28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000d44:	682b      	ldr	r3, [r5, #0]
{
 8000d46:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000d48:	691b      	ldr	r3, [r3, #16]
 8000d4a:	2082      	movs	r0, #130	@ 0x82
 8000d4c:	4798      	blx	r3
 8000d4e:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000d50:	2800      	cmp	r0, #0
 8000d52:	d04e      	beq.n	8000df2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000d54:	682b      	ldr	r3, [r5, #0]
 8000d56:	f10d 0206 	add.w	r2, sp, #6
 8000d5a:	695b      	ldr	r3, [r3, #20]
 8000d5c:	a901      	add	r1, sp, #4
 8000d5e:	2082      	movs	r0, #130	@ 0x82
 8000d60:	4798      	blx	r3

        if (isRevD)
 8000d62:	4b32      	ldr	r3, [pc, #200]	@ (8000e2c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000d64:	781b      	ldrb	r3, [r3, #0]
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	d04b      	beq.n	8000e02 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 8000d6a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000d6e:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000d72:	429a      	cmp	r2, r3
 8000d74:	d93f      	bls.n	8000df6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 8000d76:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 8000d7a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000d7e:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000d80:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000d82:	2b0a      	cmp	r3, #10
 8000d84:	d942      	bls.n	8000e0c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 8000d86:	220b      	movs	r2, #11
 8000d88:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000d8c:	4a28      	ldr	r2, [pc, #160]	@ (8000e30 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000d8e:	8812      	ldrh	r2, [r2, #0]
 8000d90:	4293      	cmp	r3, r2
 8000d92:	d901      	bls.n	8000d98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000d94:	3a01      	subs	r2, #1
 8000d96:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000d98:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000d9c:	4825      	ldr	r0, [pc, #148]	@ (8000e34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000d9e:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000da2:	428a      	cmp	r2, r1
 8000da4:	d834      	bhi.n	8000e10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 8000da6:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 8000daa:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000dac:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8000dae:	b292      	uxth	r2, r2
        xr = x / 15;
 8000db0:	250f      	movs	r5, #15
 8000db2:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 8000db6:	4d20      	ldr	r5, [pc, #128]	@ (8000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 8000db8:	882d      	ldrh	r5, [r5, #0]
 8000dba:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8000dbc:	bf84      	itt	hi
 8000dbe:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8000dc2:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000dc4:	428a      	cmp	r2, r1
 8000dc6:	4615      	mov	r5, r2
 8000dc8:	b28e      	uxth	r6, r1
 8000dca:	d92a      	bls.n	8000e22 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8000dcc:	1b92      	subs	r2, r2, r6
 8000dce:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000dd0:	4e1a      	ldr	r6, [pc, #104]	@ (8000e3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 8000dd2:	6837      	ldr	r7, [r6, #0]
 8000dd4:	42bb      	cmp	r3, r7
 8000dd6:	b2ba      	uxth	r2, r7
 8000dd8:	bf8c      	ite	hi
 8000dda:	1a9a      	subhi	r2, r3, r2
 8000ddc:	1ad2      	subls	r2, r2, r3
 8000dde:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 8000de0:	4411      	add	r1, r2
 8000de2:	2905      	cmp	r1, #5
        {
            _x = x;
 8000de4:	bfc4      	itt	gt
 8000de6:	6005      	strgt	r5, [r0, #0]
            _y = y;
 8000de8:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000dea:	6803      	ldr	r3, [r0, #0]
 8000dec:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000dee:	6833      	ldr	r3, [r6, #0]
 8000df0:	80a3      	strh	r3, [r4, #4]
    }
}
 8000df2:	b003      	add	sp, #12
 8000df4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 8000df6:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 8000df8:	bf9c      	itt	ls
 8000dfa:	22b4      	movls	r2, #180	@ 0xb4
 8000dfc:	f8ad 2006 	strhls.w	r2, [sp, #6]
 8000e00:	e7bb      	b.n	8000d7a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 8000e02:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e06:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8000e0a:	e7b9      	b.n	8000d80 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	e7c3      	b.n	8000d98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000e10:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000e14:	3208      	adds	r2, #8
 8000e16:	b292      	uxth	r2, r2
        if (xr <= 0)
 8000e18:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e1a:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000e1c:	d8c8      	bhi.n	8000db0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e1e:	2500      	movs	r5, #0
            xr = 0;
 8000e20:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e22:	1a89      	subs	r1, r1, r2
 8000e24:	b289      	uxth	r1, r1
 8000e26:	e7d3      	b.n	8000dd0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 8000e28:	200003a8 	.word	0x200003a8
 8000e2c:	2000282c 	.word	0x2000282c
 8000e30:	200003a4 	.word	0x200003a4
 8000e34:	200003a0 	.word	0x200003a0
 8000e38:	200003a6 	.word	0x200003a6
 8000e3c:	2000039c 	.word	0x2000039c

08000e40 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000e40:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000e42:	4668      	mov	r0, sp
{
 8000e44:	460d      	mov	r5, r1
 8000e46:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000e48:	f7ff ff7a 	bl	8000d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000e4c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000e50:	b130      	cbz	r0, 8000e60 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000e52:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000e56:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000e58:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000e5c:	6023      	str	r3, [r4, #0]
        return true;
 8000e5e:	2001      	movs	r0, #1
}
 8000e60:	b003      	add	sp, #12
 8000e62:	bd30      	pop	{r4, r5, pc}

08000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000e64:	2803      	cmp	r0, #3
 8000e66:	d821      	bhi.n	8000eac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000e68:	e8df f000 	tbb	[pc, r0]
 8000e6c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000e70:	4b0f      	ldr	r3, [pc, #60]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000e72:	681a      	ldr	r2, [r3, #0]
 8000e74:	fab2 f282 	clz	r2, r2
 8000e78:	0952      	lsrs	r2, r2, #5
 8000e7a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000e7c:	480d      	ldr	r0, [pc, #52]	@ (8000eb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000e7e:	f00f be6d 	b.w	8010b5c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000e82:	4b0b      	ldr	r3, [pc, #44]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000e84:	685a      	ldr	r2, [r3, #4]
 8000e86:	fab2 f282 	clz	r2, r2
 8000e8a:	0952      	lsrs	r2, r2, #5
 8000e8c:	2108      	movs	r1, #8
 8000e8e:	e7f5      	b.n	8000e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000e90:	4b07      	ldr	r3, [pc, #28]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000e92:	689a      	ldr	r2, [r3, #8]
 8000e94:	fab2 f282 	clz	r2, r2
 8000e98:	0952      	lsrs	r2, r2, #5
 8000e9a:	2110      	movs	r1, #16
 8000e9c:	e7ee      	b.n	8000e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000e9e:	4b04      	ldr	r3, [pc, #16]	@ (8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000ea0:	68da      	ldr	r2, [r3, #12]
 8000ea2:	fab2 f282 	clz	r2, r2
 8000ea6:	0952      	lsrs	r2, r2, #5
 8000ea8:	2120      	movs	r1, #32
 8000eaa:	e7e7      	b.n	8000e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000eac:	4770      	bx	lr
 8000eae:	bf00      	nop
 8000eb0:	200003ac 	.word	0x200003ac
 8000eb4:	40021000 	.word	0x40021000

08000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000eb8:	2803      	cmp	r0, #3
 8000eba:	d821      	bhi.n	8000f00 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8000ebc:	e8df f000 	tbb	[pc, r0]
 8000ec0:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000ec4:	4b0f      	ldr	r3, [pc, #60]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ec6:	681a      	ldr	r2, [r3, #0]
 8000ec8:	3a00      	subs	r2, #0
 8000eca:	bf18      	it	ne
 8000ecc:	2201      	movne	r2, #1
 8000ece:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000ed0:	480d      	ldr	r0, [pc, #52]	@ (8000f08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000ed2:	f00f be43 	b.w	8010b5c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000ed6:	4b0b      	ldr	r3, [pc, #44]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ed8:	685a      	ldr	r2, [r3, #4]
 8000eda:	3a00      	subs	r2, #0
 8000edc:	bf18      	it	ne
 8000ede:	2201      	movne	r2, #1
 8000ee0:	2108      	movs	r1, #8
 8000ee2:	e7f5      	b.n	8000ed0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000ee4:	4b07      	ldr	r3, [pc, #28]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ee6:	689a      	ldr	r2, [r3, #8]
 8000ee8:	3a00      	subs	r2, #0
 8000eea:	bf18      	it	ne
 8000eec:	2201      	movne	r2, #1
 8000eee:	2110      	movs	r1, #16
 8000ef0:	e7ee      	b.n	8000ed0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000ef2:	4b04      	ldr	r3, [pc, #16]	@ (8000f04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ef4:	68da      	ldr	r2, [r3, #12]
 8000ef6:	3a00      	subs	r2, #0
 8000ef8:	bf18      	it	ne
 8000efa:	2201      	movne	r2, #1
 8000efc:	2120      	movs	r1, #32
 8000efe:	e7e7      	b.n	8000ed0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000f00:	4770      	bx	lr
 8000f02:	bf00      	nop
 8000f04:	200003ac 	.word	0x200003ac
 8000f08:	40021000 	.word	0x40021000

08000f0c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000f0c:	2803      	cmp	r0, #3
 8000f0e:	d80d      	bhi.n	8000f2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000f10:	e8df f000 	tbb	[pc, r0]
 8000f14:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f18:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f1a:	4805      	ldr	r0, [pc, #20]	@ (8000f30 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000f1c:	f00f be23 	b.w	8010b66 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f20:	2108      	movs	r1, #8
 8000f22:	e7fa      	b.n	8000f1a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f24:	2110      	movs	r1, #16
 8000f26:	e7f8      	b.n	8000f1a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f28:	2120      	movs	r1, #32
 8000f2a:	e7f6      	b.n	8000f1a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000f2c:	4770      	bx	lr
 8000f2e:	bf00      	nop
 8000f30:	40021000 	.word	0x40021000

08000f34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000f34:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000f36:	2803      	cmp	r0, #3
 8000f38:	d811      	bhi.n	8000f5e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000f3a:	e8df f000 	tbb	[pc, r0]
 8000f3e:	0a02      	.short	0x0a02
 8000f40:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f42:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f44:	4807      	ldr	r0, [pc, #28]	@ (8000f64 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000f46:	f00f fe03 	bl	8010b50 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000f4a:	1e43      	subs	r3, r0, #1
 8000f4c:	4258      	negs	r0, r3
 8000f4e:	4158      	adcs	r0, r3
 8000f50:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f52:	2108      	movs	r1, #8
 8000f54:	e7f6      	b.n	8000f44 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f56:	2110      	movs	r1, #16
 8000f58:	e7f4      	b.n	8000f44 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f5a:	2120      	movs	r1, #32
 8000f5c:	e7f2      	b.n	8000f44 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000f5e:	2000      	movs	r0, #0
 8000f60:	e7f3      	b.n	8000f4a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000f62:	bf00      	nop
 8000f64:	40021000 	.word	0x40021000

08000f68 <_ZN8touchgfx4GPIO4initEv>:
{
 8000f68:	b570      	push	{r4, r5, r6, lr}
 8000f6a:	4d08      	ldr	r5, [pc, #32]	@ (8000f8c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000f6c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000f6e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000f70:	b2e0      	uxtb	r0, r4
 8000f72:	f7ff ffdf 	bl	8000f34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000f76:	b118      	cbz	r0, 8000f80 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000f78:	682b      	ldr	r3, [r5, #0]
 8000f7a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000f7c:	bf18      	it	ne
 8000f7e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000f80:	3401      	adds	r4, #1
 8000f82:	2c05      	cmp	r4, #5
 8000f84:	f105 0504 	add.w	r5, r5, #4
 8000f88:	d1f2      	bne.n	8000f70 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000f8a:	bd70      	pop	{r4, r5, r6, pc}
 8000f8c:	200003ac 	.word	0x200003ac

08000f90 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f90:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f92:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000f96:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000f9a:	4770      	bx	lr

08000f9c <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000f9c:	4770      	bx	lr

08000f9e <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000f9e:	2000      	movs	r0, #0
 8000fa0:	4770      	bx	lr
	...

08000fa4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fa4:	4b03      	ldr	r3, [pc, #12]	@ (8000fb4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000fa6:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fa8:	3900      	subs	r1, #0
 8000faa:	bf18      	it	ne
 8000fac:	2101      	movne	r1, #1
 8000fae:	7019      	strb	r1, [r3, #0]
    }
 8000fb0:	4770      	bx	lr
 8000fb2:	bf00      	nop
 8000fb4:	200138e3 	.word	0x200138e3

08000fb8 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8000fb8:	4770      	bx	lr

08000fba <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000fba:	2000      	movs	r0, #0
 8000fbc:	4770      	bx	lr

08000fbe <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000fbe:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8000fc0:	b10b      	cbz	r3, 8000fc6 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000fc2:	4608      	mov	r0, r1
 8000fc4:	4718      	bx	r3
        }
    }
 8000fc6:	4770      	bx	lr

08000fc8 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000fc8:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8000fcc:	4770      	bx	lr

08000fce <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000fce:	6840      	ldr	r0, [r0, #4]
 8000fd0:	6803      	ldr	r3, [r0, #0]
 8000fd2:	699b      	ldr	r3, [r3, #24]
 8000fd4:	4718      	bx	r3

08000fd6 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8000fd6:	4770      	bx	lr

08000fd8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000fd8:	4770      	bx	lr

08000fda <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000fda:	4770      	bx	lr

08000fdc <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8000fdc:	4770      	bx	lr

08000fde <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000fde:	4770      	bx	lr

08000fe0 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000fe0:	b510      	push	{r4, lr}
 8000fe2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000fe4:	f000 fd4c 	bl	8001a80 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000fe8:	6823      	ldr	r3, [r4, #0]
 8000fea:	4903      	ldr	r1, [pc, #12]	@ (8000ff8 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000fec:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ff0:	4620      	mov	r0, r4
}
 8000ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8000ff6:	4718      	bx	r3
 8000ff8:	d0000000 	.word	0xd0000000

08000ffc <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000ffc:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000ffe:	6803      	ldr	r3, [r0, #0]
{
 8001000:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001002:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8001006:	4798      	blx	r3
    enableInterrupts();
 8001008:	6823      	ldr	r3, [r4, #0]
 800100a:	4620      	mov	r0, r4
 800100c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800100e:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001010:	f000 f8ec 	bl	80011ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001014:	6823      	ldr	r3, [r4, #0]
 8001016:	4620      	mov	r0, r4
 8001018:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800101a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800101c:	2029      	movs	r0, #41	@ 0x29
 800101e:	f001 fa9f 	bl	8002560 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001022:	f000 f8e3 	bl	80011ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001026:	6823      	ldr	r3, [r4, #0]
 8001028:	4620      	mov	r0, r4
 800102a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800102c:	4798      	blx	r3
    for (;;)
 800102e:	e7f8      	b.n	8001022 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001030 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001030:	b510      	push	{r4, lr}
 8001032:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001034:	f015 f8ca 	bl	80161cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001038:	6823      	ldr	r3, [r4, #0]
 800103a:	4620      	mov	r0, r4
 800103c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8001040:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001044:	4718      	bx	r3

08001046 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001046:	f000 bcff 	b.w	8001a48 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800104a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800104a:	f000 bd03 	b.w	8001a54 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800104e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800104e:	f000 bd35 	b.w	8001abc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001052 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001052:	f000 bcd5 	b.w	8001a00 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001056 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001056:	f000 bd45 	b.w	8001ae4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800105a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800105a:	f000 bd4d 	b.w	8001af8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800105e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800105e:	f000 bcd9 	b.w	8001a14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001062 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001062:	f014 bae1 	b.w	8015628 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001066 <_ZN11TouchGFXHALD0Ev>:
 8001066:	b510      	push	{r4, lr}
 8001068:	2184      	movs	r1, #132	@ 0x84
 800106a:	4604      	mov	r4, r0
 800106c:	f02c fc5b 	bl	802d926 <_ZdlPvj>
 8001070:	4620      	mov	r0, r4
 8001072:	bd10      	pop	{r4, pc}

08001074 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001074:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001076:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 800107a:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 800107e:	4b0c      	ldr	r3, [pc, #48]	@ (80010b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001080:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001082:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001084:	d009      	beq.n	800109a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001086:	b93a      	cbnz	r2, 8001098 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001088:	4a0a      	ldr	r2, [pc, #40]	@ (80010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800108a:	490b      	ldr	r1, [pc, #44]	@ (80010b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800108c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800108e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001090:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001092:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001094:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001096:	701a      	strb	r2, [r3, #0]
    }
 8001098:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800109a:	2a00      	cmp	r2, #0
 800109c:	d0fc      	beq.n	8001098 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800109e:	4a05      	ldr	r2, [pc, #20]	@ (80010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80010a0:	4905      	ldr	r1, [pc, #20]	@ (80010b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80010a2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80010a4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80010a6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80010a8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80010aa:	2200      	movs	r2, #0
 80010ac:	e7f3      	b.n	8001096 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80010ae:	bf00      	nop
 80010b0:	200138dc 	.word	0x200138dc
 80010b4:	200138d8 	.word	0x200138d8
 80010b8:	200138da 	.word	0x200138da

080010bc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80010bc:	b570      	push	{r4, r5, r6, lr}
 80010be:	460d      	mov	r5, r1
 80010c0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80010c2:	b935      	cbnz	r5, 80010d2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80010c4:	4b09      	ldr	r3, [pc, #36]	@ (80010ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80010c6:	4a0a      	ldr	r2, [pc, #40]	@ (80010f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80010c8:	480a      	ldr	r0, [pc, #40]	@ (80010f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80010ca:	f240 21ff 	movw	r1, #767	@ 0x2ff
 80010ce:	f02d fb67 	bl	802e7a0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80010d2:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80010d6:	4b08      	ldr	r3, [pc, #32]	@ (80010f8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80010d8:	3a00      	subs	r2, #0
 80010da:	bf18      	it	ne
 80010dc:	2201      	movne	r2, #1
 80010de:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80010e0:	6803      	ldr	r3, [r0, #0]
    }
 80010e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80010e6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80010ea:	4718      	bx	r3
 80010ec:	0802f84c 	.word	0x0802f84c
 80010f0:	0802f884 	.word	0x0802f884
 80010f4:	0802f8d2 	.word	0x0802f8d2
 80010f8:	200138e2 	.word	0x200138e2

080010fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80010fc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80010fe:	4b09      	ldr	r3, [pc, #36]	@ (8001124 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001100:	881b      	ldrh	r3, [r3, #0]
 8001102:	428b      	cmp	r3, r1
 8001104:	d803      	bhi.n	800110e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001106:	4b08      	ldr	r3, [pc, #32]	@ (8001128 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001108:	881b      	ldrh	r3, [r3, #0]
 800110a:	4293      	cmp	r3, r2
 800110c:	d905      	bls.n	800111a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800110e:	4b07      	ldr	r3, [pc, #28]	@ (800112c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001110:	4a07      	ldr	r2, [pc, #28]	@ (8001130 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001112:	4808      	ldr	r0, [pc, #32]	@ (8001134 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001114:	21a3      	movs	r1, #163	@ 0xa3
 8001116:	f02d fb43 	bl	802e7a0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800111a:	4b07      	ldr	r3, [pc, #28]	@ (8001138 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800111c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800111e:	4b07      	ldr	r3, [pc, #28]	@ (800113c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001120:	801a      	strh	r2, [r3, #0]
    }
 8001122:	bd08      	pop	{r3, pc}
 8001124:	200138d8 	.word	0x200138d8
 8001128:	200138da 	.word	0x200138da
 800112c:	0802f917 	.word	0x0802f917
 8001130:	0802f97a 	.word	0x0802f97a
 8001134:	0802f8d2 	.word	0x0802f8d2
 8001138:	200138de 	.word	0x200138de
 800113c:	200138e0 	.word	0x200138e0

08001140 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8001140:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8001142:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001146:	b118      	cbz	r0, 8001150 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001148:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 800114a:	6803      	ldr	r3, [r0, #0]
 800114c:	681b      	ldr	r3, [r3, #0]
 800114e:	4718      	bx	r3
    }
 8001150:	4770      	bx	lr
	...

08001154 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001154:	2101      	movs	r1, #1
{
 8001156:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001158:	2200      	movs	r2, #0
 800115a:	4608      	mov	r0, r1
 800115c:	f011 ff56 	bl	801300c <osSemaphoreNew>
 8001160:	4b0a      	ldr	r3, [pc, #40]	@ (800118c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001162:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001164:	b928      	cbnz	r0, 8001172 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001166:	4b0a      	ldr	r3, [pc, #40]	@ (8001190 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001168:	4a0a      	ldr	r2, [pc, #40]	@ (8001194 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800116a:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800116c:	480a      	ldr	r0, [pc, #40]	@ (8001198 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800116e:	f02d fb17 	bl	802e7a0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001172:	2200      	movs	r2, #0
 8001174:	2104      	movs	r1, #4
 8001176:	2001      	movs	r0, #1
 8001178:	f011 ffe7 	bl	801314a <osMessageQueueNew>
 800117c:	4b07      	ldr	r3, [pc, #28]	@ (800119c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800117e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001180:	b918      	cbnz	r0, 800118a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001182:	4b07      	ldr	r3, [pc, #28]	@ (80011a0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001184:	4a03      	ldr	r2, [pc, #12]	@ (8001194 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001186:	212c      	movs	r1, #44	@ 0x2c
 8001188:	e7f0      	b.n	800116c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800118a:	bd08      	pop	{r3, pc}
 800118c:	200003c0 	.word	0x200003c0
 8001190:	0802f9bd 	.word	0x0802f9bd
 8001194:	0802fa06 	.word	0x0802fa06
 8001198:	0802fa35 	.word	0x0802fa35
 800119c:	200003bc 	.word	0x200003bc
 80011a0:	0802fa94 	.word	0x0802fa94

080011a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80011a4:	4b02      	ldr	r3, [pc, #8]	@ (80011b0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80011a6:	f04f 31ff 	mov.w	r1, #4294967295
 80011aa:	6818      	ldr	r0, [r3, #0]
 80011ac:	f011 bf78 	b.w	80130a0 <osSemaphoreAcquire>
 80011b0:	200003c0 	.word	0x200003c0

080011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80011b4:	4b01      	ldr	r3, [pc, #4]	@ (80011bc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80011b6:	6818      	ldr	r0, [r3, #0]
 80011b8:	f011 bf9e 	b.w	80130f8 <osSemaphoreRelease>
 80011bc:	200003c0 	.word	0x200003c0

080011c0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011c0:	4b02      	ldr	r3, [pc, #8]	@ (80011cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80011c2:	2100      	movs	r1, #0
 80011c4:	6818      	ldr	r0, [r3, #0]
 80011c6:	f011 bf6b 	b.w	80130a0 <osSemaphoreAcquire>
 80011ca:	bf00      	nop
 80011cc:	200003c0 	.word	0x200003c0

080011d0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 80011d0:	f7ff bff0 	b.w	80011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080011d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80011d4:	4803      	ldr	r0, [pc, #12]	@ (80011e4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80011d6:	4904      	ldr	r1, [pc, #16]	@ (80011e8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80011d8:	6800      	ldr	r0, [r0, #0]
 80011da:	2300      	movs	r3, #0
 80011dc:	461a      	mov	r2, r3
 80011de:	f011 bfef 	b.w	80131c0 <osMessageQueuePut>
 80011e2:	bf00      	nop
 80011e4:	200003bc 	.word	0x200003bc
 80011e8:	20000004 	.word	0x20000004

080011ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80011ec:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80011ee:	4c08      	ldr	r4, [pc, #32]	@ (8001210 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80011f0:	2300      	movs	r3, #0
 80011f2:	461a      	mov	r2, r3
 80011f4:	a901      	add	r1, sp, #4
 80011f6:	6820      	ldr	r0, [r4, #0]
 80011f8:	f012 f813 	bl	8013222 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80011fc:	6820      	ldr	r0, [r4, #0]
 80011fe:	f04f 33ff 	mov.w	r3, #4294967295
 8001202:	2200      	movs	r2, #0
 8001204:	a901      	add	r1, sp, #4
 8001206:	f012 f80c 	bl	8013222 <osMessageQueueGet>
}
 800120a:	b002      	add	sp, #8
 800120c:	bd10      	pop	{r4, pc}
 800120e:	bf00      	nop
 8001210:	200003bc 	.word	0x200003bc

08001214 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001214:	6803      	ldr	r3, [r0, #0]
 8001216:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001218:	4718      	bx	r3

0800121a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800121a:	2001      	movs	r0, #1
 800121c:	4770      	bx	lr

0800121e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800121e:	6803      	ldr	r3, [r0, #0]
 8001220:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001222:	4718      	bx	r3

08001224 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8001224:	e7fe      	b.n	8001224 <DMA2D_XferErrorCallback>

08001226 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001226:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 800122a:	4770      	bx	lr

0800122c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 800122c:	4b05      	ldr	r3, [pc, #20]	@ (8001244 <_ZN8STM32DMAD1Ev+0x18>)
 800122e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001230:	4b05      	ldr	r3, [pc, #20]	@ (8001248 <_ZN8STM32DMAD1Ev+0x1c>)
 8001232:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001236:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800123a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800123e:	f3bf 8f6f 	isb	sy
}
 8001242:	4770      	bx	lr
 8001244:	08030edc 	.word	0x08030edc
 8001248:	e000e100 	.word	0xe000e100

0800124c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800124c:	b510      	push	{r4, lr}
 800124e:	4604      	mov	r4, r0
}
 8001250:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001254:	f7ff ffea 	bl	800122c <_ZN8STM32DMAD1Ev>
 8001258:	4620      	mov	r0, r4
 800125a:	f02c fb64 	bl	802d926 <_ZdlPvj>
 800125e:	4620      	mov	r0, r4
 8001260:	bd10      	pop	{r4, pc}
	...

08001264 <_ZN8STM32DMA10initializeEv>:
{
 8001264:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001266:	2300      	movs	r3, #0
 8001268:	9301      	str	r3, [sp, #4]
 800126a:	4b0e      	ldr	r3, [pc, #56]	@ (80012a4 <_ZN8STM32DMA10initializeEv+0x40>)
 800126c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800126e:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001272:	631a      	str	r2, [r3, #48]	@ 0x30
 8001274:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001276:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 800127a:	9201      	str	r2, [sp, #4]
 800127c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800127e:	691a      	ldr	r2, [r3, #16]
 8001280:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001284:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001286:	691a      	ldr	r2, [r3, #16]
 8001288:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800128c:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800128e:	4b06      	ldr	r3, [pc, #24]	@ (80012a8 <_ZN8STM32DMA10initializeEv+0x44>)
 8001290:	4a06      	ldr	r2, [pc, #24]	@ (80012ac <_ZN8STM32DMA10initializeEv+0x48>)
 8001292:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8001294:	4a06      	ldr	r2, [pc, #24]	@ (80012b0 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001296:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b06      	ldr	r3, [pc, #24]	@ (80012b4 <_ZN8STM32DMA10initializeEv+0x50>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800129e:	609a      	str	r2, [r3, #8]
}
 80012a0:	b002      	add	sp, #8
 80012a2:	4770      	bx	lr
 80012a4:	40023800 	.word	0x40023800
 80012a8:	200029c0 	.word	0x200029c0
 80012ac:	08001505 	.word	0x08001505
 80012b0:	08001225 	.word	0x08001225
 80012b4:	e000e100 	.word	0xe000e100

080012b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80012b8:	b508      	push	{r3, lr}
    switch (format)
 80012ba:	280a      	cmp	r0, #10
 80012bc:	d809      	bhi.n	80012d2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80012be:	e8df f000 	tbb	[pc, r0]
 80012c2:	1006      	.short	0x1006
 80012c4:	0808080e 	.word	0x0808080e
 80012c8:	10101008 	.word	0x10101008
 80012cc:	10          	.byte	0x10
 80012cd:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80012ce:	2002      	movs	r0, #2
}
 80012d0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80012d2:	4b05      	ldr	r3, [pc, #20]	@ (80012e8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 80012d4:	4a05      	ldr	r2, [pc, #20]	@ (80012ec <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80012d6:	4806      	ldr	r0, [pc, #24]	@ (80012f0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80012d8:	2190      	movs	r1, #144	@ 0x90
 80012da:	f02d fa61 	bl	802e7a0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80012de:	2000      	movs	r0, #0
 80012e0:	e7f6      	b.n	80012d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80012e2:	2001      	movs	r0, #1
    return dma2dColorMode;
 80012e4:	e7f4      	b.n	80012d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80012e6:	bf00      	nop
 80012e8:	0802fad6 	.word	0x0802fad6
 80012ec:	0802faf1 	.word	0x0802faf1
 80012f0:	0802fb3c 	.word	0x0802fb3c

080012f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80012f4:	b538      	push	{r3, r4, r5, lr}
 80012f6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80012f8:	7f88      	ldrb	r0, [r1, #30]
 80012fa:	f7ff ffdd 	bl	80012b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80012fe:	8aa5      	ldrh	r5, [r4, #20]
 8001300:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001302:	4b16      	ldr	r3, [pc, #88]	@ (800135c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001304:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001306:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001308:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800130c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800130e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001310:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001312:	1b52      	subs	r2, r2, r5
 8001314:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001316:	6825      	ldr	r5, [r4, #0]
 8001318:	2d08      	cmp	r5, #8
 800131a:	d10e      	bne.n	800133a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800131c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800131e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001320:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001322:	7f20      	ldrb	r0, [r4, #28]
 8001324:	4a0e      	ldr	r2, [pc, #56]	@ (8001360 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001326:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800132a:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800132c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800132e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8001330:	4a0c      	ldr	r2, [pc, #48]	@ (8001364 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001332:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001334:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001336:	601a      	str	r2, [r3, #0]
    }
}
 8001338:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 800133a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800133c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800133e:	611a      	str	r2, [r3, #16]
 8001340:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001342:	0a0a      	lsrs	r2, r1, #8
 8001344:	0948      	lsrs	r0, r1, #5
 8001346:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 800134a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800134e:	4302      	orrs	r2, r0
 8001350:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001354:	430a      	orrs	r2, r1
 8001356:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001358:	4a03      	ldr	r2, [pc, #12]	@ (8001368 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 800135a:	e7ec      	b.n	8001336 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800135c:	4002b000 	.word	0x4002b000
 8001360:	00010009 	.word	0x00010009
 8001364:	00022301 	.word	0x00022301
 8001368:	00032301 	.word	0x00032301

0800136c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 800136c:	b508      	push	{r3, lr}
    switch (format)
 800136e:	280b      	cmp	r0, #11
 8001370:	d80b      	bhi.n	800138a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8001372:	e8df f000 	tbb	[pc, r0]
 8001376:	1206      	.short	0x1206
 8001378:	0a0a0a10 	.word	0x0a0a0a10
 800137c:	0808080a 	.word	0x0808080a
 8001380:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001382:	2002      	movs	r0, #2
}
 8001384:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001386:	2005      	movs	r0, #5
        break;
 8001388:	e7fc      	b.n	8001384 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 800138a:	4b05      	ldr	r3, [pc, #20]	@ (80013a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 800138c:	4a05      	ldr	r2, [pc, #20]	@ (80013a4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 800138e:	4806      	ldr	r0, [pc, #24]	@ (80013a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8001390:	216f      	movs	r1, #111	@ 0x6f
 8001392:	f02d fa05 	bl	802e7a0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001396:	2000      	movs	r0, #0
 8001398:	e7f4      	b.n	8001384 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800139a:	2001      	movs	r0, #1
    return dma2dColorMode;
 800139c:	e7f2      	b.n	8001384 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 800139e:	bf00      	nop
 80013a0:	0802fad6 	.word	0x0802fad6
 80013a4:	0802fb99 	.word	0x0802fb99
 80013a8:	0802fb3c 	.word	0x0802fb3c

080013ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80013ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013b0:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80013b4:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013b6:	4640      	mov	r0, r8
 80013b8:	f7ff ffd8 	bl	800136c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013bc:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013be:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013c0:	4638      	mov	r0, r7
 80013c2:	f7ff ffd3 	bl	800136c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80013c6:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013c8:	4638      	mov	r0, r7
 80013ca:	f7ff ff75 	bl	80012b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013ce:	8aa1      	ldrh	r1, [r4, #20]
 80013d0:	8b62      	ldrh	r2, [r4, #26]
 80013d2:	4b44      	ldr	r3, [pc, #272]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80013d4:	1a52      	subs	r2, r2, r1
 80013d6:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013d8:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80013da:	8b22      	ldrh	r2, [r4, #24]
 80013dc:	1a52      	subs	r2, r2, r1
 80013de:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80013e0:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80013e2:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80013e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80013e8:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80013ea:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80013ec:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80013ee:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80013f0:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 80013f2:	6820      	ldr	r0, [r4, #0]
 80013f4:	2880      	cmp	r0, #128	@ 0x80
 80013f6:	d028      	beq.n	800144a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 80013f8:	7f22      	ldrb	r2, [r4, #28]
 80013fa:	d80f      	bhi.n	800141c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 80013fc:	2820      	cmp	r0, #32
 80013fe:	d067      	beq.n	80014d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001400:	2840      	cmp	r0, #64	@ 0x40
 8001402:	d065      	beq.n	80014d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001404:	2804      	cmp	r0, #4
 8001406:	d01a      	beq.n	800143e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001408:	4b36      	ldr	r3, [pc, #216]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800140a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800140e:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001412:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001414:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001416:	d061      	beq.n	80014dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001418:	4a33      	ldr	r2, [pc, #204]	@ (80014e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 800141a:	e044      	b.n	80014a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 800141c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8001420:	d004      	beq.n	800142c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8001422:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001426:	d1ef      	bne.n	8001408 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001428:	4830      	ldr	r0, [pc, #192]	@ (80014ec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 800142a:	e000      	b.n	800142e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800142c:	4830      	ldr	r0, [pc, #192]	@ (80014f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800142e:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8001432:	61da      	str	r2, [r3, #28]
 8001434:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001436:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001438:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800143a:	6159      	str	r1, [r3, #20]
 800143c:	e032      	b.n	80014a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800143e:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001442:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001446:	61da      	str	r2, [r3, #28]
 8001448:	e7f6      	b.n	8001438 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800144a:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800144c:	1d02      	adds	r2, r0, #4
 800144e:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001450:	7f22      	ldrb	r2, [r4, #28]
 8001452:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001456:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 800145a:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800145c:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800145e:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001460:	7801      	ldrb	r1, [r0, #0]
 8001462:	b141      	cbz	r1, 8001476 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001464:	2901      	cmp	r1, #1
 8001466:	d021      	beq.n	80014ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001468:	4b22      	ldr	r3, [pc, #136]	@ (80014f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800146a:	4a23      	ldr	r2, [pc, #140]	@ (80014f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 800146c:	4823      	ldr	r0, [pc, #140]	@ (80014fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800146e:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8001472:	f02d f995 	bl	802e7a0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001476:	69da      	ldr	r2, [r3, #28]
 8001478:	8841      	ldrh	r1, [r0, #2]
 800147a:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 800147e:	3901      	subs	r1, #1
 8001480:	f022 0210 	bic.w	r2, r2, #16
 8001484:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001488:	61da      	str	r2, [r3, #28]
            bool blend = true;
 800148a:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800148c:	4b15      	ldr	r3, [pc, #84]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800148e:	69da      	ldr	r2, [r3, #28]
 8001490:	f042 0220 	orr.w	r2, r2, #32
 8001494:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001496:	69da      	ldr	r2, [r3, #28]
 8001498:	0692      	lsls	r2, r2, #26
 800149a:	d4fc      	bmi.n	8001496 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800149c:	2210      	movs	r2, #16
 800149e:	609a      	str	r2, [r3, #8]
            if (blend)
 80014a0:	2900      	cmp	r1, #0
 80014a2:	d0b9      	beq.n	8001418 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80014a4:	4a16      	ldr	r2, [pc, #88]	@ (8001500 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80014a6:	601a      	str	r2, [r3, #0]
}
 80014a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80014ac:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80014b0:	69da      	ldr	r2, [r3, #28]
 80014b2:	8840      	ldrh	r0, [r0, #2]
 80014b4:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80014b8:	f100 30ff 	add.w	r0, r0, #4294967295
 80014bc:	f022 0210 	bic.w	r2, r2, #16
 80014c0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80014c4:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80014c8:	bf18      	it	ne
 80014ca:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80014cc:	61da      	str	r2, [r3, #28]
                break;
 80014ce:	e7dd      	b.n	800148c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80014d0:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80014d4:	4b03      	ldr	r3, [pc, #12]	@ (80014e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80014d6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80014da:	e7b4      	b.n	8001446 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80014dc:	f242 3201 	movw	r2, #8961	@ 0x2301
 80014e0:	e7e1      	b.n	80014a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 80014e2:	bf00      	nop
 80014e4:	4002b000 	.word	0x4002b000
 80014e8:	00012301 	.word	0x00012301
 80014ec:	00020009 	.word	0x00020009
 80014f0:	0002000a 	.word	0x0002000a
 80014f4:	0802fbe3 	.word	0x0802fbe3
 80014f8:	0802fbfd 	.word	0x0802fbfd
 80014fc:	0802fb3c 	.word	0x0802fb3c
 8001500:	00022301 	.word	0x00022301

08001504 <DMA2D_XferCpltCallback>:
        return instance;
 8001504:	4b02      	ldr	r3, [pc, #8]	@ (8001510 <DMA2D_XferCpltCallback+0xc>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 800150a:	6803      	ldr	r3, [r0, #0]
 800150c:	695b      	ldr	r3, [r3, #20]
 800150e:	4718      	bx	r3
 8001510:	200138e4 	.word	0x200138e4

08001514 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001514:	b570      	push	{r4, r5, r6, lr}
 8001516:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001518:	4625      	mov	r5, r4
 800151a:	4b0a      	ldr	r3, [pc, #40]	@ (8001544 <_ZN8STM32DMAC1Ev+0x30>)
 800151c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800151e:	2600      	movs	r6, #0
 8001520:	6060      	str	r0, [r4, #4]
 8001522:	7226      	strb	r6, [r4, #8]
 8001524:	7266      	strb	r6, [r4, #9]
 8001526:	f845 3b20 	str.w	r3, [r5], #32
 800152a:	2260      	movs	r2, #96	@ 0x60
 800152c:	4629      	mov	r1, r5
 800152e:	f014 ffa3 	bl	8016478 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001532:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001536:	60ee      	str	r6, [r5, #12]
 8001538:	3524      	adds	r5, #36	@ 0x24
 800153a:	429d      	cmp	r5, r3
 800153c:	d1fb      	bne.n	8001536 <_ZN8STM32DMAC1Ev+0x22>
}
 800153e:	4620      	mov	r0, r4
 8001540:	bd70      	pop	{r4, r5, r6, pc}
 8001542:	bf00      	nop
 8001544:	08030edc 	.word	0x08030edc

08001548 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001548:	4b03      	ldr	r3, [pc, #12]	@ (8001558 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 800154a:	681a      	ldr	r2, [r3, #0]
 800154c:	07d2      	lsls	r2, r2, #31
 800154e:	d4fc      	bmi.n	800154a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001550:	2223      	movs	r2, #35	@ 0x23
 8001552:	609a      	str	r2, [r3, #8]
}
 8001554:	4770      	bx	lr
 8001556:	bf00      	nop
 8001558:	4002b000 	.word	0x4002b000

0800155c <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 800155c:	4770      	bx	lr
	...

08001560 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001560:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001562:	4c0f      	ldr	r4, [pc, #60]	@ (80015a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001564:	6825      	ldr	r5, [r4, #0]
 8001566:	07ed      	lsls	r5, r5, #31
 8001568:	d4fc      	bmi.n	8001564 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800156a:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800156c:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800156e:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001570:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001574:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001576:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001578:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800157a:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800157c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 800157e:	d00a      	beq.n	8001596 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001580:	4908      	ldr	r1, [pc, #32]	@ (80015a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001582:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001584:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001588:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800158a:	4b07      	ldr	r3, [pc, #28]	@ (80015a8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 800158c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800158e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8001590:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001592:	6023      	str	r3, [r4, #0]
    }
}
 8001594:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001596:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001598:	9b03      	ldr	r3, [sp, #12]
 800159a:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800159c:	4b03      	ldr	r3, [pc, #12]	@ (80015ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 800159e:	e7f8      	b.n	8001592 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 80015a0:	4002b000 	.word	0x4002b000
 80015a4:	00010009 	.word	0x00010009
 80015a8:	00020001 	.word	0x00020001
 80015ac:	00030001 	.word	0x00030001

080015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 80015b0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80015b2:	4c0e      	ldr	r4, [pc, #56]	@ (80015ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 80015b4:	6825      	ldr	r5, [r4, #0]
 80015b6:	07ed      	lsls	r5, r5, #31
 80015b8:	d4fc      	bmi.n	80015b4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80015ba:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015bc:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80015be:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015c0:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80015c4:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 80015c6:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80015c8:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015ca:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80015cc:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80015ce:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 80015d0:	d008      	beq.n	80015e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80015d2:	061b      	lsls	r3, r3, #24
 80015d4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 80015d8:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80015da:	4b05      	ldr	r3, [pc, #20]	@ (80015f0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80015dc:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80015de:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80015e0:	6023      	str	r3, [r4, #0]
    }
}
 80015e2:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80015e4:	4b03      	ldr	r3, [pc, #12]	@ (80015f4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 80015e6:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80015e8:	2301      	movs	r3, #1
 80015ea:	e7f9      	b.n	80015e0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80015ec:	4002b000 	.word	0x4002b000
 80015f0:	00020001 	.word	0x00020001
 80015f4:	ff020002 	.word	0xff020002

080015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80015f8:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80015fa:	4c0b      	ldr	r4, [pc, #44]	@ (8001628 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 80015fc:	6825      	ldr	r5, [r4, #0]
 80015fe:	07ed      	lsls	r5, r5, #31
 8001600:	d4fc      	bmi.n	80015fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001602:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001604:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001606:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001608:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800160a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800160e:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001610:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001614:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001616:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001618:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800161a:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800161c:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800161e:	4b03      	ldr	r3, [pc, #12]	@ (800162c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001620:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001622:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001624:	6023      	str	r3, [r4, #0]
}
 8001626:	bd30      	pop	{r4, r5, pc}
 8001628:	4002b000 	.word	0x4002b000
 800162c:	00020001 	.word	0x00020001

08001630 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001630:	2001      	movs	r0, #1
 8001632:	4770      	bx	lr

08001634 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001634:	200c      	movs	r0, #12
 8001636:	4770      	bx	lr

08001638 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001638:	230c      	movs	r3, #12
 800163a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800163e:	3008      	adds	r0, #8
 8001640:	4770      	bx	lr

08001642 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001642:	230c      	movs	r3, #12
 8001644:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001648:	3008      	adds	r0, #8
 800164a:	4770      	bx	lr

0800164c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800164c:	2001      	movs	r0, #1
 800164e:	4770      	bx	lr

08001650 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001650:	f44f 5096 	mov.w	r0, #4800	@ 0x12c0
 8001654:	4770      	bx	lr

08001656 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001656:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 800165a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800165e:	3008      	adds	r0, #8
 8001660:	4770      	bx	lr

08001662 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001662:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 8001666:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800166a:	3008      	adds	r0, #8
 800166c:	4770      	bx	lr

0800166e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800166e:	2001      	movs	r0, #1
 8001670:	4770      	bx	lr

08001672 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001672:	2010      	movs	r0, #16
 8001674:	4770      	bx	lr

08001676 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001676:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800167a:	3008      	adds	r0, #8
 800167c:	4770      	bx	lr

0800167e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800167e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001682:	3008      	adds	r0, #8
 8001684:	4770      	bx	lr

08001686 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainMenuScreenScreenNoTransition();
 8001686:	4608      	mov	r0, r1
 8001688:	f002 bc52 	b.w	8003f30 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>

0800168c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800168c:	b510      	push	{r4, lr}
 800168e:	4b03      	ldr	r3, [pc, #12]	@ (800169c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001690:	6003      	str	r3, [r0, #0]
 8001692:	4604      	mov	r4, r0
 8001694:	f013 fd1f 	bl	80150d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001698:	4620      	mov	r0, r4
 800169a:	bd10      	pop	{r4, pc}
 800169c:	08030f94 	.word	0x08030f94

080016a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80016a0:	b510      	push	{r4, lr}
 80016a2:	4604      	mov	r4, r0
 80016a4:	f7ff fff2 	bl	800168c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016a8:	4620      	mov	r0, r4
 80016aa:	2114      	movs	r1, #20
 80016ac:	f02c f93b 	bl	802d926 <_ZdlPvj>
 80016b0:	4620      	mov	r0, r4
 80016b2:	bd10      	pop	{r4, pc}

080016b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80016b4:	b510      	push	{r4, lr}
 80016b6:	4b03      	ldr	r3, [pc, #12]	@ (80016c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80016b8:	6003      	str	r3, [r0, #0]
 80016ba:	4604      	mov	r4, r0
 80016bc:	f013 fd0b 	bl	80150d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80016c0:	4620      	mov	r0, r4
 80016c2:	bd10      	pop	{r4, pc}
 80016c4:	08030f60 	.word	0x08030f60

080016c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80016c8:	b510      	push	{r4, lr}
 80016ca:	4604      	mov	r4, r0
 80016cc:	f7ff fff2 	bl	80016b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016d0:	4620      	mov	r0, r4
 80016d2:	f241 21c8 	movw	r1, #4808	@ 0x12c8
 80016d6:	f02c f926 	bl	802d926 <_ZdlPvj>
 80016da:	4620      	mov	r0, r4
 80016dc:	bd10      	pop	{r4, pc}
	...

080016e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80016e0:	b510      	push	{r4, lr}
 80016e2:	4b03      	ldr	r3, [pc, #12]	@ (80016f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80016e4:	6003      	str	r3, [r0, #0]
 80016e6:	4604      	mov	r4, r0
 80016e8:	f013 fcf5 	bl	80150d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80016ec:	4620      	mov	r0, r4
 80016ee:	bd10      	pop	{r4, pc}
 80016f0:	08030f2c 	.word	0x08030f2c

080016f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80016f4:	b510      	push	{r4, lr}
 80016f6:	4604      	mov	r4, r0
 80016f8:	f7ff fff2 	bl	80016e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016fc:	4620      	mov	r0, r4
 80016fe:	2118      	movs	r1, #24
 8001700:	f02c f911 	bl	802d926 <_ZdlPvj>
 8001704:	4620      	mov	r0, r4
 8001706:	bd10      	pop	{r4, pc}

08001708 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001708:	b510      	push	{r4, lr}
 800170a:	4b09      	ldr	r3, [pc, #36]	@ (8001730 <_ZN12FrontendHeapD1Ev+0x28>)
 800170c:	6003      	str	r3, [r0, #0]
 800170e:	4604      	mov	r4, r0
 8001710:	f500 5097 	add.w	r0, r0, #4832	@ 0x12e0
 8001714:	3014      	adds	r0, #20
 8001716:	f7ff ffb9 	bl	800168c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800171a:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 800171e:	f7ff ffc9 	bl	80016b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001722:	f104 0014 	add.w	r0, r4, #20
 8001726:	f7ff ffdb 	bl	80016e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15SpongePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800172a:	4620      	mov	r0, r4
 800172c:	bd10      	pop	{r4, pc}
 800172e:	bf00      	nop
 8001730:	08030fc8 	.word	0x08030fc8

08001734 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001734:	b508      	push	{r3, lr}
 8001736:	4802      	ldr	r0, [pc, #8]	@ (8001740 <__tcf_0+0xc>)
 8001738:	f7ff ffe6 	bl	8001708 <_ZN12FrontendHeapD1Ev>
 800173c:	bd08      	pop	{r3, pc}
 800173e:	bf00      	nop
 8001740:	2000129c 	.word	0x2000129c

08001744 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001744:	b510      	push	{r4, lr}
 8001746:	4604      	mov	r4, r0
 8001748:	f7ff ffde 	bl	8001708 <_ZN12FrontendHeapD1Ev>
 800174c:	4620      	mov	r0, r4
 800174e:	f241 4168 	movw	r1, #5224	@ 0x1468
 8001752:	f02c f8e8 	bl	802d926 <_ZdlPvj>
 8001756:	4620      	mov	r0, r4
 8001758:	bd10      	pop	{r4, pc}
	...

0800175c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800175c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001760:	f001 fcf4 	bl	800314c <_ZN14BitmapDatabase11getInstanceEv>
 8001764:	4605      	mov	r5, r0
 8001766:	f001 fcf5 	bl	8003154 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800176a:	2400      	movs	r4, #0
 800176c:	4601      	mov	r1, r0
 800176e:	4623      	mov	r3, r4
 8001770:	4628      	mov	r0, r5
 8001772:	4622      	mov	r2, r4
 8001774:	9400      	str	r4, [sp, #0]
 8001776:	f01d f843 	bl	801e800 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800177a:	4b28      	ldr	r3, [pc, #160]	@ (800181c <touchgfx_init+0xc0>)
 800177c:	4a28      	ldr	r2, [pc, #160]	@ (8001820 <touchgfx_init+0xc4>)
 800177e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001780:	4620      	mov	r0, r4
 8001782:	f008 fde9 	bl	800a358 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001786:	4d27      	ldr	r5, [pc, #156]	@ (8001824 <touchgfx_init+0xc8>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001788:	4b27      	ldr	r3, [pc, #156]	@ (8001828 <touchgfx_init+0xcc>)
 800178a:	4a28      	ldr	r2, [pc, #160]	@ (800182c <touchgfx_init+0xd0>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800178c:	4828      	ldr	r0, [pc, #160]	@ (8001830 <touchgfx_init+0xd4>)
 800178e:	609a      	str	r2, [r3, #8]
 8001790:	f01c ff9e 	bl	801e6d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001794:	682b      	ldr	r3, [r5, #0]
 8001796:	f3bf 8f5b 	dmb	ish
 800179a:	07db      	lsls	r3, r3, #31
 800179c:	d437      	bmi.n	800180e <touchgfx_init+0xb2>
 800179e:	4628      	mov	r0, r5
 80017a0:	f02c f8c3 	bl	802d92a <__cxa_guard_acquire>
 80017a4:	b398      	cbz	r0, 800180e <touchgfx_init+0xb2>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80017a6:	4c23      	ldr	r4, [pc, #140]	@ (8001834 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80017a8:	4b23      	ldr	r3, [pc, #140]	@ (8001838 <touchgfx_init+0xdc>)
 80017aa:	6023      	str	r3, [r4, #0]
 80017ac:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
          transitionStorage(tra),
 80017b0:	f500 5797 	add.w	r7, r0, #4832	@ 0x12e0
          frontendApplication(app)
 80017b4:	f107 0618 	add.w	r6, r7, #24
          screenStorage(scr),
 80017b8:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 80017bc:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80017be:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80017c2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80017c4:	6126      	str	r6, [r4, #16]
 80017c6:	f013 fc87 	bl	80150d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80017ca:	4b1c      	ldr	r3, [pc, #112]	@ (800183c <touchgfx_init+0xe0>)
 80017cc:	6163      	str	r3, [r4, #20]
 80017ce:	4640      	mov	r0, r8
 80017d0:	f013 fc82 	bl	80150d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80017d4:	4b1a      	ldr	r3, [pc, #104]	@ (8001840 <touchgfx_init+0xe4>)
 80017d6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80017d8:	4638      	mov	r0, r7
 80017da:	f013 fc7d 	bl	80150d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80017de:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80017e2:	f503 7042 	add.w	r0, r3, #776	@ 0x308
 80017e6:	4a17      	ldr	r2, [pc, #92]	@ (8001844 <touchgfx_init+0xe8>)
 80017e8:	f8c3 22f4 	str.w	r2, [r3, #756]	@ 0x2f4
 80017ec:	f00b f8c6 	bl	800c97c <_ZN5ModelC1Ev>
 80017f0:	4622      	mov	r2, r4
 80017f2:	f107 0114 	add.w	r1, r7, #20
 80017f6:	4630      	mov	r0, r6
 80017f8:	f009 f91e 	bl	800aa38 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80017fc:	4630      	mov	r0, r6
 80017fe:	f002 fb97 	bl	8003f30 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001802:	4811      	ldr	r0, [pc, #68]	@ (8001848 <touchgfx_init+0xec>)
 8001804:	f02c ffea 	bl	802e7dc <atexit>
 8001808:	4628      	mov	r0, r5
 800180a:	f02c f89a 	bl	802d942 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800180e:	480f      	ldr	r0, [pc, #60]	@ (800184c <touchgfx_init+0xf0>)
}
 8001810:	b002      	add	sp, #8
 8001812:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001816:	f7ff bbe3 	b.w	8000fe0 <_ZN11TouchGFXHAL10initializeEv>
 800181a:	bf00      	nop
 800181c:	20013948 	.word	0x20013948
 8001820:	20000448 	.word	0x20000448
 8001824:	20001298 	.word	0x20001298
 8001828:	20000468 	.word	0x20000468
 800182c:	2000044c 	.word	0x2000044c
 8001830:	20000008 	.word	0x20000008
 8001834:	2000129c 	.word	0x2000129c
 8001838:	08030fc8 	.word	0x08030fc8
 800183c:	08030f2c 	.word	0x08030f2c
 8001840:	08030f60 	.word	0x08030f60
 8001844:	08030f94 	.word	0x08030f94
 8001848:	08001735 	.word	0x08001735
 800184c:	200003c4 	.word	0x200003c4

08001850 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001850:	4770      	bx	lr
	...

08001854 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001854:	4801      	ldr	r0, [pc, #4]	@ (800185c <touchgfx_taskEntry+0x8>)
 8001856:	f7ff bbd1 	b.w	8000ffc <_ZN11TouchGFXHAL9taskEntryEv>
 800185a:	bf00      	nop
 800185c:	200003c4 	.word	0x200003c4

08001860 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001860:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001862:	4e26      	ldr	r6, [pc, #152]	@ (80018fc <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001864:	4c26      	ldr	r4, [pc, #152]	@ (8001900 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001866:	4d27      	ldr	r5, [pc, #156]	@ (8001904 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001868:	4b27      	ldr	r3, [pc, #156]	@ (8001908 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800186a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800186c:	4630      	mov	r0, r6
 800186e:	f7ff fe51 	bl	8001514 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001872:	4628      	mov	r0, r5
 8001874:	f022 f8ca 	bl	8023a0c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001878:	4824      	ldr	r0, [pc, #144]	@ (800190c <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800187a:	f01b f82b 	bl	801c8d4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800187e:	4b24      	ldr	r3, [pc, #144]	@ (8001910 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001880:	4824      	ldr	r0, [pc, #144]	@ (8001914 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001882:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001884:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001886:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800188a:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800188e:	4922      	ldr	r1, [pc, #136]	@ (8001918 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001890:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001892:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001896:	4921      	ldr	r1, [pc, #132]	@ (800191c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001898:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 800189c:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 80018a0:	491f      	ldr	r1, [pc, #124]	@ (8001920 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80018a2:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 80018a6:	491f      	ldr	r1, [pc, #124]	@ (8001924 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80018a8:	481f      	ldr	r0, [pc, #124]	@ (8001928 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 80018aa:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80018ac:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 80018ae:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80018b2:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80018b6:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80018ba:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80018be:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80018c2:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80018c6:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80018ca:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80018ce:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80018d0:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80018d4:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80018d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80018da:	8001      	strh	r1, [r0, #0]
 80018dc:	4813      	ldr	r0, [pc, #76]	@ (800192c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80018de:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80018e0:	4813      	ldr	r0, [pc, #76]	@ (8001930 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80018e2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80018e6:	8001      	strh	r1, [r0, #0]
 80018e8:	4812      	ldr	r0, [pc, #72]	@ (8001934 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80018ea:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80018ec:	4912      	ldr	r1, [pc, #72]	@ (8001938 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80018ee:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80018f0:	2201      	movs	r2, #1
 80018f2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80018f6:	4a11      	ldr	r2, [pc, #68]	@ (800193c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80018f8:	601a      	str	r2, [r3, #0]
}
 80018fa:	bd70      	pop	{r4, r5, r6, pc}
 80018fc:	200004f4 	.word	0x200004f4
 8001900:	20001294 	.word	0x20001294
 8001904:	20000468 	.word	0x20000468
 8001908:	0802f83c 	.word	0x0802f83c
 800190c:	2000044c 	.word	0x2000044c
 8001910:	200003c4 	.word	0x200003c4
 8001914:	01010000 	.word	0x01010000
 8001918:	01000001 	.word	0x01000001
 800191c:	00500400 	.word	0x00500400
 8001920:	0014001a 	.word	0x0014001a
 8001924:	200138e4 	.word	0x200138e4
 8001928:	200138d8 	.word	0x200138d8
 800192c:	200138de 	.word	0x200138de
 8001930:	200138da 	.word	0x200138da
 8001934:	200138e0 	.word	0x200138e0
 8001938:	200138dc 	.word	0x200138dc
 800193c:	08030df0 	.word	0x08030df0

08001940 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001940:	4801      	ldr	r0, [pc, #4]	@ (8001948 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001942:	f7ff bc73 	b.w	800122c <_ZN8STM32DMAD1Ev>
 8001946:	bf00      	nop
 8001948:	200004f4 	.word	0x200004f4

0800194c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800194c:	2000      	movs	r0, #0
 800194e:	4770      	bx	lr

08001950 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001950:	8081      	strh	r1, [r0, #4]
    }
 8001952:	4770      	bx	lr

08001954 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001954:	80c1      	strh	r1, [r0, #6]
    }
 8001956:	4770      	bx	lr

08001958 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001958:	8101      	strh	r1, [r0, #8]
    }
 800195a:	4770      	bx	lr

0800195c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800195c:	8141      	strh	r1, [r0, #10]
    }
 800195e:	4770      	bx	lr

08001960 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001960:	4770      	bx	lr

08001962 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001962:	4770      	bx	lr

08001964 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001964:	4770      	bx	lr

08001966 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001966:	4770      	bx	lr

08001968 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001968:	4770      	bx	lr

0800196a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800196a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800196c:	88c4      	ldrh	r4, [r0, #6]
 800196e:	6803      	ldr	r3, [r0, #0]
 8001970:	1b12      	subs	r2, r2, r4
 8001972:	8884      	ldrh	r4, [r0, #4]
 8001974:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001976:	1b09      	subs	r1, r1, r4
 8001978:	b212      	sxth	r2, r2
    }
 800197a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800197e:	b209      	sxth	r1, r1
 8001980:	4718      	bx	r3

08001982 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001982:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001986:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001988:	f04f 33ff 	mov.w	r3, #4294967295
 800198c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800198e:	6813      	ldr	r3, [r2, #0]
 8001990:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001992:	6010      	str	r0, [r2, #0]
    }
 8001994:	4770      	bx	lr

08001996 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001996:	2000      	movs	r0, #0
 8001998:	4770      	bx	lr

0800199a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800199a:	888b      	ldrh	r3, [r1, #4]
 800199c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800199e:	2001      	movs	r0, #1
 80019a0:	4770      	bx	lr

080019a2 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80019a2:	4770      	bx	lr

080019a4 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80019a4:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 80019a8:	4770      	bx	lr

080019aa <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80019aa:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 80019ae:	4770      	bx	lr

080019b0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80019b0:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80019b2:	2200      	movs	r2, #0
        return rect.width;
 80019b4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80019b8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80019bc:	8002      	strh	r2, [r0, #0]
 80019be:	8042      	strh	r2, [r0, #2]
 80019c0:	8084      	strh	r4, [r0, #4]
 80019c2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80019c4:	bd10      	pop	{r4, pc}

080019c6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80019c6:	2200      	movs	r2, #0
 80019c8:	8002      	strh	r2, [r0, #0]
 80019ca:	8042      	strh	r2, [r0, #2]
 80019cc:	8082      	strh	r2, [r0, #4]
 80019ce:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80019d0:	4770      	bx	lr

080019d2 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80019d2:	7701      	strb	r1, [r0, #28]
    }
 80019d4:	4770      	bx	lr

080019d6 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80019d6:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80019da:	4770      	bx	lr

080019dc <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80019dc:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80019e0:	4770      	bx	lr

080019e2 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80019e2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80019e6:	4770      	bx	lr

080019e8 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80019e8:	2001      	movs	r0, #1
 80019ea:	4770      	bx	lr

080019ec <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80019ec:	3098      	adds	r0, #152	@ 0x98
 80019ee:	4770      	bx	lr

080019f0 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80019f0:	308c      	adds	r0, #140	@ 0x8c
 80019f2:	4770      	bx	lr

080019f4 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80019f4:	3084      	adds	r0, #132	@ 0x84
 80019f6:	4770      	bx	lr

080019f8 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80019f8:	4770      	bx	lr

080019fa <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80019fa:	4770      	bx	lr

080019fc <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80019fc:	4770      	bx	lr
	...

08001a00 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001a00:	4b03      	ldr	r3, [pc, #12]	@ (8001a10 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001a02:	2290      	movs	r2, #144	@ 0x90
 8001a04:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001a08:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001a0c:	4770      	bx	lr
 8001a0e:	bf00      	nop
 8001a10:	e000e100 	.word	0xe000e100

08001a14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001a14:	4a09      	ldr	r2, [pc, #36]	@ (8001a3c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001a16:	490a      	ldr	r1, [pc, #40]	@ (8001a40 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001a18:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001a1a:	480a      	ldr	r0, [pc, #40]	@ (8001a44 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001a1c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001a20:	3b01      	subs	r3, #1
 8001a22:	b29b      	uxth	r3, r3
 8001a24:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001a26:	6911      	ldr	r1, [r2, #16]
 8001a28:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001a2c:	3901      	subs	r1, #1
 8001a2e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001a30:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001a32:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001a34:	f043 0301 	orr.w	r3, r3, #1
 8001a38:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001a3a:	4770      	bx	lr
 8001a3c:	40016800 	.word	0x40016800
 8001a40:	20002706 	.word	0x20002706
 8001a44:	20002704 	.word	0x20002704

08001a48 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001a48:	4b01      	ldr	r3, [pc, #4]	@ (8001a50 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001a4a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001a4e:	4770      	bx	lr
 8001a50:	40016800 	.word	0x40016800

08001a54 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001a54:	4b02      	ldr	r3, [pc, #8]	@ (8001a60 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001a56:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001a58:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001a5c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001a5e:	4770      	bx	lr
 8001a60:	40016800 	.word	0x40016800

08001a64 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001a64:	b510      	push	{r4, lr}
 8001a66:	212c      	movs	r1, #44	@ 0x2c
 8001a68:	4604      	mov	r4, r0
 8001a6a:	f02b ff5c 	bl	802d926 <_ZdlPvj>
 8001a6e:	4620      	mov	r0, r4
 8001a70:	bd10      	pop	{r4, pc}

08001a72 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001a72:	b510      	push	{r4, lr}
 8001a74:	21bc      	movs	r1, #188	@ 0xbc
 8001a76:	4604      	mov	r4, r0
 8001a78:	f02b ff55 	bl	802d926 <_ZdlPvj>
 8001a7c:	4620      	mov	r0, r4
 8001a7e:	bd10      	pop	{r4, pc}

08001a80 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001a80:	b570      	push	{r4, r5, r6, lr}
 8001a82:	4604      	mov	r4, r0
    HAL::initialize();
 8001a84:	f013 fe25 	bl	80156d2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001a88:	6823      	ldr	r3, [r4, #0]
 8001a8a:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001a8c:	f019 fcba 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
 8001a90:	4601      	mov	r1, r0
 8001a92:	4620      	mov	r0, r4
 8001a94:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001a96:	6823      	ldr	r3, [r4, #0]
 8001a98:	4a05      	ldr	r2, [pc, #20]	@ (8001ab0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001a9a:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8001a9e:	4620      	mov	r0, r4
 8001aa0:	46ac      	mov	ip, r5
 8001aa2:	2300      	movs	r3, #0
}
 8001aa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001aa8:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001aac:	4760      	bx	ip
 8001aae:	bf00      	nop
 8001ab0:	d004b000 	.word	0xd004b000

08001ab4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001ab4:	f013 bdf4 	b.w	80156a0 <_ZN8touchgfx3HAL10beginFrameEv>

08001ab8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001ab8:	f013 bdfe 	b.w	80156b8 <_ZN8touchgfx3HAL8endFrameEv>

08001abc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001abc:	f013 bdba 	b.w	8015634 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001ac0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001ac0:	f013 bf29 	b.w	8015916 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001ac4 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001ac4:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001ac8:	b112      	cbz	r2, 8001ad0 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001aca:	6803      	ldr	r3, [r0, #0]
 8001acc:	695b      	ldr	r3, [r3, #20]
 8001ace:	4718      	bx	r3
    }
 8001ad0:	4770      	bx	lr

08001ad2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001ad2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001ad6:	b11a      	cbz	r2, 8001ae0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001ad8:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001adc:	b102      	cbz	r2, 8001ae0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001ade:	6018      	str	r0, [r3, #0]
        }
    }
 8001ae0:	4770      	bx	lr
	...

08001ae4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001ae4:	4b03      	ldr	r3, [pc, #12]	@ (8001af4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001ae6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001aea:	609a      	str	r2, [r3, #8]
 8001aec:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001af0:	609a      	str	r2, [r3, #8]
}
 8001af2:	4770      	bx	lr
 8001af4:	e000e100 	.word	0xe000e100

08001af8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001af8:	4b08      	ldr	r3, [pc, #32]	@ (8001b1c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001afa:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001afe:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b02:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b06:	f3bf 8f6f 	isb	sy
 8001b0a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001b0e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b16:	f3bf 8f6f 	isb	sy
}
 8001b1a:	4770      	bx	lr
 8001b1c:	e000e100 	.word	0xe000e100

08001b20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001b20:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001b22:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001b24:	4e12      	ldr	r6, [pc, #72]	@ (8001b70 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001b26:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001b28:	4b12      	ldr	r3, [pc, #72]	@ (8001b74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001b2a:	6003      	str	r3, [r0, #0]
 8001b2c:	6833      	ldr	r3, [r6, #0]
 8001b2e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001b32:	4605      	mov	r5, r0
 8001b34:	b10a      	cbz	r2, 8001b3a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001b36:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001b38:	b900      	cbnz	r0, 8001b3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001b3a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001b3c:	6803      	ldr	r3, [r0, #0]
 8001b3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001b40:	4798      	blx	r3
        return auxiliaryLCD;
 8001b42:	6833      	ldr	r3, [r6, #0]
 8001b44:	fab0 f480 	clz	r4, r0
 8001b48:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001b4a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001b4c:	b130      	cbz	r0, 8001b5c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001b4e:	6803      	ldr	r3, [r0, #0]
 8001b50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001b52:	4798      	blx	r3
 8001b54:	2800      	cmp	r0, #0
 8001b56:	bf08      	it	eq
 8001b58:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001b5c:	b92c      	cbnz	r4, 8001b6a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001b5e:	4b06      	ldr	r3, [pc, #24]	@ (8001b78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001b60:	4a06      	ldr	r2, [pc, #24]	@ (8001b7c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001b62:	4807      	ldr	r0, [pc, #28]	@ (8001b80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001b64:	212c      	movs	r1, #44	@ 0x2c
 8001b66:	f02c fe1b 	bl	802e7a0 <__assert_func>
    }
 8001b6a:	4628      	mov	r0, r5
 8001b6c:	bd70      	pop	{r4, r5, r6, pc}
 8001b6e:	bf00      	nop
 8001b70:	200138e4 	.word	0x200138e4
 8001b74:	08030fdc 	.word	0x08030fdc
 8001b78:	0802fc3b 	.word	0x0802fc3b
 8001b7c:	0802fc99 	.word	0x0802fc99
 8001b80:	0802fcd2 	.word	0x0802fcd2

08001b84 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001b84:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001b86:	4e25      	ldr	r6, [pc, #148]	@ (8001c1c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001b88:	6835      	ldr	r5, [r6, #0]
 8001b8a:	f3bf 8f5b 	dmb	ish
 8001b8e:	f015 0501 	ands.w	r5, r5, #1
 8001b92:	d140      	bne.n	8001c16 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001b94:	4630      	mov	r0, r6
 8001b96:	f02b fec8 	bl	802d92a <__cxa_guard_acquire>
 8001b9a:	2800      	cmp	r0, #0
 8001b9c:	d03b      	beq.n	8001c16 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8001b9e:	4c20      	ldr	r4, [pc, #128]	@ (8001c20 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001ba0:	4b20      	ldr	r3, [pc, #128]	@ (8001c24 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001ba2:	6125      	str	r5, [r4, #16]
 8001ba4:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001ba8:	e9c4 3500 	strd	r3, r5, [r4]
 8001bac:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001bb0:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001bb2:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001bb4:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8001bb6:	f01b f972 	bl	801ce9e <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 8001bba:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001bbe:	f016 f90f 	bl	8017de0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001bc2:	4b19      	ldr	r3, [pc, #100]	@ (8001c28 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8001bc4:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001bc6:	4620      	mov	r0, r4
 8001bc8:	4b18      	ldr	r3, [pc, #96]	@ (8001c2c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8001bca:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001bce:	f7ff ffa7 	bl	8001b20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001bd2:	4b17      	ldr	r3, [pc, #92]	@ (8001c30 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8001bd4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8001bd8:	3324      	adds	r3, #36	@ 0x24
 8001bda:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001bde:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001be2:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8001be6:	2300      	movs	r3, #0
 8001be8:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8001bec:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8001bf0:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8001bf4:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8001bf8:	480e      	ldr	r0, [pc, #56]	@ (8001c34 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 8001bfa:	4b0f      	ldr	r3, [pc, #60]	@ (8001c38 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8001bfc:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 8001c00:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8001c04:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8001c08:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8001c0c:	f02c fde6 	bl	802e7dc <atexit>
 8001c10:	4630      	mov	r0, r6
 8001c12:	f02b fe96 	bl	802d942 <__cxa_guard_release>
}
 8001c16:	4802      	ldr	r0, [pc, #8]	@ (8001c20 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001c18:	bd70      	pop	{r4, r5, r6, pc}
 8001c1a:	bf00      	nop
 8001c1c:	20002708 	.word	0x20002708
 8001c20:	2000270c 	.word	0x2000270c
 8001c24:	08033230 	.word	0x08033230
 8001c28:	08030ffc 	.word	0x08030ffc
 8001c2c:	08031074 	.word	0x08031074
 8001c30:	080331e4 	.word	0x080331e4
 8001c34:	080019fd 	.word	0x080019fd
 8001c38:	080331c4 	.word	0x080331c4

08001c3c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001c3c:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8001c3e:	4c18      	ldr	r4, [pc, #96]	@ (8001ca0 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 8001c40:	6823      	ldr	r3, [r4, #0]
 8001c42:	b35b      	cbz	r3, 8001c9c <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001c44:	4b17      	ldr	r3, [pc, #92]	@ (8001ca4 <HAL_LTDC_LineEventCallback+0x68>)
 8001c46:	4a18      	ldr	r2, [pc, #96]	@ (8001ca8 <HAL_LTDC_LineEventCallback+0x6c>)
 8001c48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c4a:	8811      	ldrh	r1, [r2, #0]
 8001c4c:	428b      	cmp	r3, r1
 8001c4e:	d116      	bne.n	8001c7e <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001c50:	4b16      	ldr	r3, [pc, #88]	@ (8001cac <HAL_LTDC_LineEventCallback+0x70>)
 8001c52:	8819      	ldrh	r1, [r3, #0]
 8001c54:	f00f fd8a 	bl	801176c <HAL_LTDC_ProgramLineEvent>
 8001c58:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001c5a:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001c5e:	2500      	movs	r5, #0
        vSyncCnt++;
 8001c60:	3201      	adds	r2, #1
 8001c62:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001c66:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001c6a:	f7ff fab3 	bl	80011d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001c6e:	6820      	ldr	r0, [r4, #0]
 8001c70:	f014 faac 	bl	80161cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001c74:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001c76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001c7a:	f7ff b8f3 	b.w	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001c7e:	f00f fd75 	bl	801176c <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001c82:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001c84:	6823      	ldr	r3, [r4, #0]
 8001c86:	4620      	mov	r0, r4
 8001c88:	6a1b      	ldr	r3, [r3, #32]
 8001c8a:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001c8c:	2301      	movs	r3, #1
 8001c8e:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001c92:	2000      	movs	r0, #0
    }
 8001c94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001c98:	f7ff b90e 	b.w	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001c9c:	bd38      	pop	{r3, r4, r5, pc}
 8001c9e:	bf00      	nop
 8001ca0:	200138e4 	.word	0x200138e4
 8001ca4:	40016800 	.word	0x40016800
 8001ca8:	20002706 	.word	0x20002706
 8001cac:	20002704 	.word	0x20002704

08001cb0 <Audio_Init>:
TIM_HandleTypeDef htim13;

// =================== CORE FUNCTIONS ===================

void Audio_Init(void)
{
 8001cb0:	b510      	push	{r4, lr}
 8001cb2:	b08e      	sub	sp, #56	@ 0x38
   GPIO_InitTypeDef GPIO_InitStruct = {0};
   __HAL_RCC_TIM13_CLK_ENABLE();
 8001cb4:	4b24      	ldr	r3, [pc, #144]	@ (8001d48 <Audio_Init+0x98>)
   GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cb6:	2400      	movs	r4, #0
   __HAL_RCC_TIM13_CLK_ENABLE();
 8001cb8:	9400      	str	r4, [sp, #0]
   GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cba:	9404      	str	r4, [sp, #16]
   __HAL_RCC_TIM13_CLK_ENABLE();
 8001cbc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001cbe:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001cc2:	641a      	str	r2, [r3, #64]	@ 0x40
 8001cc4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001cc6:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001cca:	9200      	str	r2, [sp, #0]
 8001ccc:	9a00      	ldr	r2, [sp, #0]
   __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cce:	9401      	str	r4, [sp, #4]
 8001cd0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cd2:	f042 0201 	orr.w	r2, r2, #1
 8001cd6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cda:	f003 0301 	and.w	r3, r3, #1
 8001cde:	9301      	str	r3, [sp, #4]
 8001ce0:	9b01      	ldr	r3, [sp, #4]

   GPIO_InitStruct.Pin = GPIO_PIN_6;
   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce2:	2140      	movs	r1, #64	@ 0x40
 8001ce4:	2302      	movs	r3, #2
 8001ce6:	e9cd 1302 	strd	r1, r3, [sp, #8]
   GPIO_InitStruct.Pull = GPIO_NOPULL;
   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 8001cea:	2003      	movs	r0, #3
 8001cec:	2309      	movs	r3, #9
 8001cee:	e9cd 0305 	strd	r0, r3, [sp, #20]
   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cf2:	a902      	add	r1, sp, #8
 8001cf4:	4815      	ldr	r0, [pc, #84]	@ (8001d4c <Audio_Init+0x9c>)
 8001cf6:	f00e fe47 	bl	8010988 <HAL_GPIO_Init>

   htim13.Instance = TIM13;
 8001cfa:	4815      	ldr	r0, [pc, #84]	@ (8001d50 <Audio_Init+0xa0>)
   htim13.Init.Prescaler = 21 - 1;
 8001cfc:	f8df c054 	ldr.w	ip, [pc, #84]	@ 8001d54 <Audio_Init+0xa4>
   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d00:	6084      	str	r4, [r0, #8]
   htim13.Init.Prescaler = 21 - 1;
 8001d02:	2314      	movs	r3, #20
 8001d04:	e9c0 c300 	strd	ip, r3, [r0]
   htim13.Init.Period = 20000 - 1;
 8001d08:	f644 631f 	movw	r3, #19999	@ 0x4e1f
   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d0c:	e9c0 3403 	strd	r3, r4, [r0, #12]
   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001d10:	2380      	movs	r3, #128	@ 0x80
 8001d12:	6183      	str	r3, [r0, #24]

   if (HAL_TIM_PWM_Init(&htim13) != HAL_OK) {
 8001d14:	f010 fef4 	bl	8012b00 <HAL_TIM_PWM_Init>
 8001d18:	b108      	cbz	r0, 8001d1e <Audio_Init+0x6e>
       Error_Handler();
 8001d1a:	f000 fc81 	bl	8002620 <Error_Handler>
   }

   TIM_OC_InitTypeDef sConfigOC = {0};
 8001d1e:	2214      	movs	r2, #20
 8001d20:	2100      	movs	r1, #0
 8001d22:	a809      	add	r0, sp, #36	@ 0x24
 8001d24:	f02c ff43 	bl	802ebae <memset>
   sConfigOC.OCMode = TIM_OCMODE_PWM1;
   sConfigOC.Pulse = 1000;
 8001d28:	2260      	movs	r2, #96	@ 0x60
 8001d2a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d2e:	e9cd 2307 	strd	r2, r3, [sp, #28]
   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;

   if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 8001d32:	4807      	ldr	r0, [pc, #28]	@ (8001d50 <Audio_Init+0xa0>)
 8001d34:	2200      	movs	r2, #0
 8001d36:	a907      	add	r1, sp, #28
 8001d38:	f010 ff3e 	bl	8012bb8 <HAL_TIM_PWM_ConfigChannel>
 8001d3c:	b108      	cbz	r0, 8001d42 <Audio_Init+0x92>
       Error_Handler();
 8001d3e:	f000 fc6f 	bl	8002620 <Error_Handler>
   }
}
 8001d42:	b00e      	add	sp, #56	@ 0x38
 8001d44:	bd10      	pop	{r4, pc}
 8001d46:	bf00      	nop
 8001d48:	40023800 	.word	0x40023800
 8001d4c:	40020000 	.word	0x40020000
 8001d50:	200027d4 	.word	0x200027d4
 8001d54:	40001c00 	.word	0x40001c00

08001d58 <Audio_PlayNote>:
/**
* @brief Enhanced note playing with dynamic volume curves
*/
void Audio_PlayNote(AudioNote_t note, uint8_t volume)
{
   if (note == NOTE_REST || volume == 0) {
 8001d58:	b100      	cbz	r0, 8001d5c <Audio_PlayNote+0x4>
 8001d5a:	b919      	cbnz	r1, 8001d64 <Audio_PlayNote+0xc>
       HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8001d5c:	481c      	ldr	r0, [pc, #112]	@ (8001dd0 <Audio_PlayNote+0x78>)
 8001d5e:	2100      	movs	r1, #0
 8001d60:	f011 b82e 	b.w	8012dc0 <HAL_TIM_PWM_Stop>
       return;
   }

   uint32_t timer_clock = 8000000;
   uint32_t period = (uint32_t)(timer_clock / (float)note);
 8001d64:	ee07 0a90 	vmov	s15, r0
 8001d68:	eddf 6a1a 	vldr	s13, [pc, #104]	@ 8001dd4 <Audio_PlayNote+0x7c>
 8001d6c:	eeb8 7a67 	vcvt.f32.u32	s14, s15

   // Dynamic duty cycle based on frequency for better sound quality
   uint32_t duty_cycle;
   if (note < 200) {
 8001d70:	28c7      	cmp	r0, #199	@ 0xc7
   uint32_t period = (uint32_t)(timer_clock / (float)note);
 8001d72:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d76:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001d7a:	ee17 3a90 	vmov	r3, s15
   if (note < 200) {
 8001d7e:	d821      	bhi.n	8001dc4 <Audio_PlayNote+0x6c>
       duty_cycle = period / 15; // Bass notes - stronger
 8001d80:	200f      	movs	r0, #15
   } else {
       duty_cycle = period / 22; // High notes - softer
   }

   // Apply volume with enhanced curve
   duty_cycle = (duty_cycle * volume * global_volume) / (100 * 100);
 8001d82:	4a15      	ldr	r2, [pc, #84]	@ (8001dd8 <Audio_PlayNote+0x80>)
       duty_cycle = period / 22; // High notes - softer
 8001d84:	fbb3 f0f0 	udiv	r0, r3, r0
   duty_cycle = (duty_cycle * volume * global_volume) / (100 * 100);
 8001d88:	7812      	ldrb	r2, [r2, #0]
 8001d8a:	fb12 f201 	smulbb	r2, r2, r1
 8001d8e:	4342      	muls	r2, r0
 8001d90:	f242 7110 	movw	r1, #10000	@ 0x2710
 8001d94:	fbb2 f2f1 	udiv	r2, r2, r1

   // Dynamic limits based on frequency
   uint32_t min_duty = period / 80;
 8001d98:	2150      	movs	r1, #80	@ 0x50
 8001d9a:	fbb3 f1f1 	udiv	r1, r3, r1
   uint32_t max_duty = period / 8;
   if (duty_cycle < min_duty) duty_cycle = min_duty;
 8001d9e:	428a      	cmp	r2, r1
 8001da0:	bf38      	it	cc
 8001da2:	460a      	movcc	r2, r1
   uint32_t max_duty = period / 8;
 8001da4:	08d9      	lsrs	r1, r3, #3
   if (duty_cycle > max_duty) duty_cycle = max_duty;
 8001da6:	428a      	cmp	r2, r1

   if (period < 100) period = 100;

   __HAL_TIM_SET_AUTORELOAD(&htim13, period - 1);
 8001da8:	4809      	ldr	r0, [pc, #36]	@ (8001dd0 <Audio_PlayNote+0x78>)
   if (duty_cycle > max_duty) duty_cycle = max_duty;
 8001daa:	bf28      	it	cs
 8001dac:	460a      	movcs	r2, r1
   if (period < 100) period = 100;
 8001dae:	2b64      	cmp	r3, #100	@ 0x64
   __HAL_TIM_SET_AUTORELOAD(&htim13, period - 1);
 8001db0:	6801      	ldr	r1, [r0, #0]
   if (period < 100) period = 100;
 8001db2:	bf38      	it	cc
 8001db4:	2364      	movcc	r3, #100	@ 0x64
   __HAL_TIM_SET_AUTORELOAD(&htim13, period - 1);
 8001db6:	3b01      	subs	r3, #1
 8001db8:	62cb      	str	r3, [r1, #44]	@ 0x2c
   __HAL_TIM_SET_COMPARE(&htim13, TIM_CHANNEL_1, duty_cycle);
 8001dba:	634a      	str	r2, [r1, #52]	@ 0x34
   HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8001dbc:	2100      	movs	r1, #0
   __HAL_TIM_SET_AUTORELOAD(&htim13, period - 1);
 8001dbe:	60c3      	str	r3, [r0, #12]
   HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8001dc0:	f010 bfbe 	b.w	8012d40 <HAL_TIM_PWM_Start>
   } else if (note < 400) {
 8001dc4:	f5b0 7fc8 	cmp.w	r0, #400	@ 0x190
       duty_cycle = period / 18; // Mid notes - balanced
 8001dc8:	bf34      	ite	cc
 8001dca:	2012      	movcc	r0, #18
       duty_cycle = period / 22; // High notes - softer
 8001dcc:	2016      	movcs	r0, #22
 8001dce:	e7d8      	b.n	8001d82 <Audio_PlayNote+0x2a>
 8001dd0:	200027d4 	.word	0x200027d4
 8001dd4:	4af42400 	.word	0x4af42400
 8001dd8:	20000014 	.word	0x20000014

08001ddc <Audio_StopNote>:
}

void Audio_StopNote(void)
{
   HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8001ddc:	4801      	ldr	r0, [pc, #4]	@ (8001de4 <Audio_StopNote+0x8>)
 8001dde:	2100      	movs	r1, #0
 8001de0:	f010 bfee 	b.w	8012dc0 <HAL_TIM_PWM_Stop>
 8001de4:	200027d4 	.word	0x200027d4

08001de8 <Audio_StartExtendedMelody>:
/**
* @brief Start extended melody playback: 6 sections với biến tấu phong phú
*/
void Audio_StartExtendedMelody(void)
{
   extended_melody_playing = 1;
 8001de8:	4b07      	ldr	r3, [pc, #28]	@ (8001e08 <Audio_StartExtendedMelody+0x20>)
{
 8001dea:	b510      	push	{r4, lr}
   extended_melody_playing = 1;
 8001dec:	2401      	movs	r4, #1
 8001dee:	701c      	strb	r4, [r3, #0]
   extended_start_time = HAL_GetTick();
 8001df0:	f00e fc54 	bl	801069c <HAL_GetTick>
 8001df4:	4b05      	ldr	r3, [pc, #20]	@ (8001e0c <Audio_StartExtendedMelody+0x24>)
   extended_current_note_index = 0;
 8001df6:	4a06      	ldr	r2, [pc, #24]	@ (8001e10 <Audio_StartExtendedMelody+0x28>)
   extended_start_time = HAL_GetTick();
 8001df8:	6018      	str	r0, [r3, #0]
   extended_current_note_index = 0;
 8001dfa:	2300      	movs	r3, #0
 8001dfc:	7013      	strb	r3, [r2, #0]
   extended_note_started = 0;
 8001dfe:	4a05      	ldr	r2, [pc, #20]	@ (8001e14 <Audio_StartExtendedMelody+0x2c>)
 8001e00:	7013      	strb	r3, [r2, #0]
   audio_state = AUDIO_STATE_PLAYING_MUSIC;
 8001e02:	4b05      	ldr	r3, [pc, #20]	@ (8001e18 <Audio_StartExtendedMelody+0x30>)
 8001e04:	701c      	strb	r4, [r3, #0]
}
 8001e06:	bd10      	pop	{r4, pc}
 8001e08:	200027d0 	.word	0x200027d0
 8001e0c:	200027cc 	.word	0x200027cc
 8001e10:	200027c9 	.word	0x200027c9
 8001e14:	200027c8 	.word	0x200027c8
 8001e18:	2000281d 	.word	0x2000281d

08001e1c <Audio_StopExtendedMelody>:
/**
* @brief Stop extended melody
*/
void Audio_StopExtendedMelody(void)
{
   extended_melody_playing = 0;
 8001e1c:	4a03      	ldr	r2, [pc, #12]	@ (8001e2c <Audio_StopExtendedMelody+0x10>)
 8001e1e:	2300      	movs	r3, #0
 8001e20:	7013      	strb	r3, [r2, #0]
   audio_state = AUDIO_STATE_IDLE;
 8001e22:	4a03      	ldr	r2, [pc, #12]	@ (8001e30 <Audio_StopExtendedMelody+0x14>)
 8001e24:	7013      	strb	r3, [r2, #0]
   Audio_StopNote();
 8001e26:	f7ff bfd9 	b.w	8001ddc <Audio_StopNote>
 8001e2a:	bf00      	nop
 8001e2c:	200027d0 	.word	0x200027d0
 8001e30:	2000281d 	.word	0x2000281d

08001e34 <Audio_PlayBackgroundMusic>:
   note_start_time = HAL_GetTick();
   audio_state = AUDIO_STATE_PLAYING_MUSIC;
}

// Enhanced compatibility functions
void Audio_PlayBackgroundMusic(void) { Audio_StartExtendedMelody(); }     // Extended melody
 8001e34:	f7ff bfd8 	b.w	8001de8 <Audio_StartExtendedMelody>

08001e38 <Audio_StopBackgroundMusic>:
void Audio_PlayCyberpunkAmbient(void) { Audio_PlayEnhancedProgression(3); } // Cinematic progression
void Audio_TriggerGlitch(void) { Audio_TestEpicSequence(); }              // Epic test
void Audio_StopBackgroundMusic(void) { Audio_StopExtendedMelody(); }
 8001e38:	f7ff bff0 	b.w	8001e1c <Audio_StopExtendedMelody>

08001e3c <Audio_Update>:

/**
* @brief Enhanced main update loop
*/
void Audio_Update(void)
{
 8001e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   // Handle extended melody playback (6 sections, ~15-18 giây)
   if (extended_melody_playing) {
 8001e40:	4b4c      	ldr	r3, [pc, #304]	@ (8001f74 <Audio_Update+0x138>)
 8001e42:	f893 8000 	ldrb.w	r8, [r3]
 8001e46:	f1b8 0f00 	cmp.w	r8, #0
 8001e4a:	d03d      	beq.n	8001ec8 <Audio_Update+0x8c>
       uint32_t current_time = HAL_GetTick();
       uint32_t elapsed_time = current_time - extended_start_time;
 8001e4c:	4d4a      	ldr	r5, [pc, #296]	@ (8001f78 <Audio_Update+0x13c>)
       uint32_t current_time = HAL_GetTick();
 8001e4e:	f00e fc25 	bl	801069c <HAL_GetTick>
       uint32_t elapsed_time = current_time - extended_start_time;
 8001e52:	682a      	ldr	r2, [r5, #0]
 8001e54:	1a82      	subs	r2, r0, r2
       uint32_t cumulative_time = 0;
       uint8_t target_note_index = 0;

       // Find which note should be playing at current elapsed time
       for (uint8_t i = 0; i < EXTENDED_MELODY_LENGTH; i++) {
           if (elapsed_time < cumulative_time + extended_melody[i].duration) {
 8001e56:	f5b2 7f96 	cmp.w	r2, #300	@ 0x12c
 8001e5a:	d32d      	bcc.n	8001eb8 <Audio_Update+0x7c>
 8001e5c:	4c47      	ldr	r4, [pc, #284]	@ (8001f7c <Audio_Update+0x140>)
 8001e5e:	2301      	movs	r3, #1
 8001e60:	f44f 7196 	mov.w	r1, #300	@ 0x12c
       for (uint8_t i = 0; i < EXTENDED_MELODY_LENGTH; i++) {
 8001e64:	2b37      	cmp	r3, #55	@ 0x37
 8001e66:	d107      	bne.n	8001e78 <Audio_Update+0x3c>

       // Check if we've completed the extended loop
       if (target_note_index >= EXTENDED_MELODY_LENGTH) {
           // Reset for smooth loop with slight variation
           extended_start_time = current_time;
           extended_current_note_index = 0;
 8001e68:	4a45      	ldr	r2, [pc, #276]	@ (8001f80 <Audio_Update+0x144>)
           extended_start_time = current_time;
 8001e6a:	6028      	str	r0, [r5, #0]
           extended_current_note_index = 0;
 8001e6c:	2300      	movs	r3, #0
 8001e6e:	7013      	strb	r3, [r2, #0]
           extended_note_started = 0;
 8001e70:	4a44      	ldr	r2, [pc, #272]	@ (8001f84 <Audio_Update+0x148>)
 8001e72:	7013      	strb	r3, [r2, #0]

       Audio_PlayNote(note_to_play, dynamic_volume);

       note_start_time = current_time;
   }
}
 8001e74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
           if (elapsed_time < cumulative_time + extended_melody[i].duration) {
 8001e78:	8d26      	ldrh	r6, [r4, #40]	@ 0x28
 8001e7a:	4431      	add	r1, r6
 8001e7c:	4291      	cmp	r1, r2
 8001e7e:	f103 0601 	add.w	r6, r3, #1
 8001e82:	f104 0426 	add.w	r4, r4, #38	@ 0x26
 8001e86:	d801      	bhi.n	8001e8c <Audio_Update+0x50>
 8001e88:	4633      	mov	r3, r6
 8001e8a:	e7eb      	b.n	8001e64 <Audio_Update+0x28>
 8001e8c:	b2db      	uxtb	r3, r3
       if (target_note_index != extended_current_note_index || !extended_note_started) {
 8001e8e:	493c      	ldr	r1, [pc, #240]	@ (8001f80 <Audio_Update+0x144>)
 8001e90:	780a      	ldrb	r2, [r1, #0]
 8001e92:	429a      	cmp	r2, r3
 8001e94:	4a3b      	ldr	r2, [pc, #236]	@ (8001f84 <Audio_Update+0x148>)
 8001e96:	d102      	bne.n	8001e9e <Audio_Update+0x62>
 8001e98:	7810      	ldrb	r0, [r2, #0]
 8001e9a:	2800      	cmp	r0, #0
 8001e9c:	d1ea      	bne.n	8001e74 <Audio_Update+0x38>
           extended_current_note_index = target_note_index;
 8001e9e:	700b      	strb	r3, [r1, #0]
           extended_note_started = 1;
 8001ea0:	2101      	movs	r1, #1
 8001ea2:	7011      	strb	r1, [r2, #0]
           if (current_note->is_rest) {
 8001ea4:	2126      	movs	r1, #38	@ 0x26
 8001ea6:	4a35      	ldr	r2, [pc, #212]	@ (8001f7c <Audio_Update+0x140>)
 8001ea8:	434b      	muls	r3, r1
 8001eaa:	18d1      	adds	r1, r2, r3
 8001eac:	7948      	ldrb	r0, [r1, #5]
 8001eae:	b128      	cbz	r0, 8001ebc <Audio_Update+0x80>
}
 8001eb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
               Audio_StopNote();
 8001eb4:	f7ff bf92 	b.w	8001ddc <Audio_StopNote>
       uint8_t target_note_index = 0;
 8001eb8:	2300      	movs	r3, #0
 8001eba:	e7e8      	b.n	8001e8e <Audio_Update+0x52>
}
 8001ebc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
               Audio_PlayNote(current_note->frequency, current_note->volume);
 8001ec0:	7909      	ldrb	r1, [r1, #4]
 8001ec2:	5ad0      	ldrh	r0, [r2, r3]
 8001ec4:	f7ff bf48 	b.w	8001d58 <Audio_PlayNote>
   if (!chord_playing || audio_state != AUDIO_STATE_PLAYING_MUSIC) {
 8001ec8:	4b2f      	ldr	r3, [pc, #188]	@ (8001f88 <Audio_Update+0x14c>)
 8001eca:	781b      	ldrb	r3, [r3, #0]
 8001ecc:	2b00      	cmp	r3, #0
 8001ece:	d0d1      	beq.n	8001e74 <Audio_Update+0x38>
 8001ed0:	4b2e      	ldr	r3, [pc, #184]	@ (8001f8c <Audio_Update+0x150>)
 8001ed2:	781b      	ldrb	r3, [r3, #0]
 8001ed4:	2b01      	cmp	r3, #1
 8001ed6:	d1cd      	bne.n	8001e74 <Audio_Update+0x38>
   if (current_time - note_start_time >= NOTE_DURATION_MS) {
 8001ed8:	4d2d      	ldr	r5, [pc, #180]	@ (8001f90 <Audio_Update+0x154>)
   uint32_t current_time = HAL_GetTick();
 8001eda:	f00e fbdf 	bl	801069c <HAL_GetTick>
   if (current_time - note_start_time >= NOTE_DURATION_MS) {
 8001ede:	682b      	ldr	r3, [r5, #0]
 8001ee0:	1ac3      	subs	r3, r0, r3
 8001ee2:	2bc7      	cmp	r3, #199	@ 0xc7
   uint32_t current_time = HAL_GetTick();
 8001ee4:	4604      	mov	r4, r0
   if (current_time - note_start_time >= NOTE_DURATION_MS) {
 8001ee6:	d9c5      	bls.n	8001e74 <Audio_Update+0x38>
       uint8_t chord_idx = current_progression[current_progression_index];
 8001ee8:	4b2a      	ldr	r3, [pc, #168]	@ (8001f94 <Audio_Update+0x158>)
 8001eea:	4f2b      	ldr	r7, [pc, #172]	@ (8001f98 <Audio_Update+0x15c>)
 8001eec:	6818      	ldr	r0, [r3, #0]
 8001eee:	783b      	ldrb	r3, [r7, #0]
       current_note_in_chord++;
 8001ef0:	4e2a      	ldr	r6, [pc, #168]	@ (8001f9c <Audio_Update+0x160>)
       const Chord_t* current_chord = &chord_definitions[chord_idx];
 8001ef2:	f810 c003 	ldrb.w	ip, [r0, r3]
       if (current_note_in_chord >= current_chord->note_count) {
 8001ef6:	4a2a      	ldr	r2, [pc, #168]	@ (8001fa0 <Audio_Update+0x164>)
       current_note_in_chord++;
 8001ef8:	7831      	ldrb	r1, [r6, #0]
       if (current_note_in_chord >= current_chord->note_count) {
 8001efa:	f04f 0e12 	mov.w	lr, #18
 8001efe:	fb0e 2c0c 	mla	ip, lr, ip, r2
       current_note_in_chord++;
 8001f02:	3101      	adds	r1, #1
       if (current_note_in_chord >= current_chord->note_count) {
 8001f04:	f89c c008 	ldrb.w	ip, [ip, #8]
       current_note_in_chord++;
 8001f08:	b2c9      	uxtb	r1, r1
       if (current_note_in_chord >= current_chord->note_count) {
 8001f0a:	458c      	cmp	ip, r1
       current_note_in_chord++;
 8001f0c:	7031      	strb	r1, [r6, #0]
       if (current_note_in_chord >= current_chord->note_count) {
 8001f0e:	4925      	ldr	r1, [pc, #148]	@ (8001fa4 <Audio_Update+0x168>)
           current_note_in_chord = 0;
 8001f10:	bf9f      	itttt	ls
 8001f12:	f886 8000 	strbls.w	r8, [r6]
           chord_repeat_count++;
 8001f16:	f891 c000 	ldrbls.w	ip, [r1]
 8001f1a:	f10c 0c01 	addls.w	ip, ip, #1
 8001f1e:	f881 c000 	strbls.w	ip, [r1]
       if (chord_repeat_count >= CHORD_REPEAT_COUNT) {
 8001f22:	f891 c000 	ldrb.w	ip, [r1]
 8001f26:	f1bc 0f05 	cmp.w	ip, #5
 8001f2a:	d90d      	bls.n	8001f48 <Audio_Update+0x10c>
           if (current_progression_index >= progression_length) {
 8001f2c:	f8df c078 	ldr.w	ip, [pc, #120]	@ 8001fa8 <Audio_Update+0x16c>
           current_progression_index++;
 8001f30:	3301      	adds	r3, #1
           if (current_progression_index >= progression_length) {
 8001f32:	f89c c000 	ldrb.w	ip, [ip]
           current_progression_index++;
 8001f36:	b2db      	uxtb	r3, r3
 8001f38:	703b      	strb	r3, [r7, #0]
           if (current_progression_index >= progression_length) {
 8001f3a:	459c      	cmp	ip, r3
 8001f3c:	f04f 0300 	mov.w	r3, #0
               current_progression_index = 0; // Loop progression
 8001f40:	bf98      	it	ls
 8001f42:	703b      	strbls	r3, [r7, #0]
           chord_repeat_count = 0;
 8001f44:	700b      	strb	r3, [r1, #0]
           current_note_in_chord = 0;
 8001f46:	7033      	strb	r3, [r6, #0]
       AudioNote_t note_to_play = current_chord->notes[current_note_in_chord];
 8001f48:	7836      	ldrb	r6, [r6, #0]
       chord_idx = current_progression[current_progression_index];
 8001f4a:	783b      	ldrb	r3, [r7, #0]
       uint8_t dynamic_volume = 45 + (current_progression_index * 2) + (current_note_in_chord * 3);
 8001f4c:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 8001f50:	eb01 0143 	add.w	r1, r1, r3, lsl #1
       current_chord = &chord_definitions[chord_idx];
 8001f54:	5cc3      	ldrb	r3, [r0, r3]
       uint8_t dynamic_volume = 45 + (current_progression_index * 2) + (current_note_in_chord * 3);
 8001f56:	312d      	adds	r1, #45	@ 0x2d
       AudioNote_t note_to_play = current_chord->notes[current_note_in_chord];
 8001f58:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
       if (dynamic_volume > 75) dynamic_volume = 75;
 8001f5c:	b2c9      	uxtb	r1, r1
       AudioNote_t note_to_play = current_chord->notes[current_note_in_chord];
 8001f5e:	4433      	add	r3, r6
       Audio_PlayNote(note_to_play, dynamic_volume);
 8001f60:	294b      	cmp	r1, #75	@ 0x4b
 8001f62:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 8001f66:	bf28      	it	cs
 8001f68:	214b      	movcs	r1, #75	@ 0x4b
 8001f6a:	f7ff fef5 	bl	8001d58 <Audio_PlayNote>
       note_start_time = current_time;
 8001f6e:	602c      	str	r4, [r5, #0]
 8001f70:	e780      	b.n	8001e74 <Audio_Update+0x38>
 8001f72:	bf00      	nop
 8001f74:	200027d0 	.word	0x200027d0
 8001f78:	200027cc 	.word	0x200027cc
 8001f7c:	080311de 	.word	0x080311de
 8001f80:	200027c9 	.word	0x200027c9
 8001f84:	200027c8 	.word	0x200027c8
 8001f88:	20002825 	.word	0x20002825
 8001f8c:	2000281d 	.word	0x2000281d
 8001f90:	20002820 	.word	0x20002820
 8001f94:	20000010 	.word	0x20000010
 8001f98:	2000281c 	.word	0x2000281c
 8001f9c:	20002824 	.word	0x20002824
 8001fa0:	080310be 	.word	0x080310be
 8001fa4:	2000281e 	.word	0x2000281e
 8001fa8:	2000000c 	.word	0x2000000c

08001fac <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001fac:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001fae:	4b06      	ldr	r3, [pc, #24]	@ (8001fc8 <SPI5_Write+0x1c>)
{
 8001fb0:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001fb4:	681b      	ldr	r3, [r3, #0]
 8001fb6:	4805      	ldr	r0, [pc, #20]	@ (8001fcc <SPI5_Write+0x20>)
 8001fb8:	2201      	movs	r2, #1
 8001fba:	f10d 0106 	add.w	r1, sp, #6
 8001fbe:	f010 f975 	bl	80122ac <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001fc2:	b003      	add	sp, #12
 8001fc4:	f85d fb04 	ldr.w	pc, [sp], #4
 8001fc8:	20000018 	.word	0x20000018
 8001fcc:	2000286c 	.word	0x2000286c

08001fd0 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001fd0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    // Update audio system every 10ms
    Audio_Update();
 8001fd2:	f7ff ff33 	bl	8001e3c <Audio_Update>
    osDelay(10);
 8001fd6:	200a      	movs	r0, #10
 8001fd8:	f011 f80c 	bl	8012ff4 <osDelay>
  for(;;)
 8001fdc:	e7f9      	b.n	8001fd2 <StartDefaultTask+0x2>
	...

08001fe0 <SystemClock_Config>:
{
 8001fe0:	b530      	push	{r4, r5, lr}
 8001fe2:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001fe4:	2210      	movs	r2, #16
 8001fe6:	2100      	movs	r1, #0
 8001fe8:	a80a      	add	r0, sp, #40	@ 0x28
 8001fea:	f02c fde0 	bl	802ebae <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001fee:	2214      	movs	r2, #20
 8001ff0:	2100      	movs	r1, #0
 8001ff2:	a803      	add	r0, sp, #12
 8001ff4:	f02c fddb 	bl	802ebae <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ff8:	2400      	movs	r4, #0
 8001ffa:	4b1e      	ldr	r3, [pc, #120]	@ (8002074 <SystemClock_Config+0x94>)
 8001ffc:	9401      	str	r4, [sp, #4]
 8001ffe:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002000:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8002004:	641a      	str	r2, [r3, #64]	@ 0x40
 8002006:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002008:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800200c:	9301      	str	r3, [sp, #4]
 800200e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002010:	4b19      	ldr	r3, [pc, #100]	@ (8002078 <SystemClock_Config+0x98>)
 8002012:	9402      	str	r4, [sp, #8]
 8002014:	681a      	ldr	r2, [r3, #0]
 8002016:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 800201a:	601a      	str	r2, [r3, #0]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002022:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002024:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002026:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002028:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800202c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002030:	2502      	movs	r5, #2
 8002032:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8002036:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002038:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 800203c:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8002040:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002044:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002046:	2304      	movs	r3, #4
 8002048:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800204a:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800204c:	f00f fbe6 	bl	801181c <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002050:	f00f fbaa 	bl	80117a8 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002054:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002056:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800205a:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 800205e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002062:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002066:	2105      	movs	r1, #5
 8002068:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800206a:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800206c:	f00f fdb2 	bl	8011bd4 <HAL_RCC_ClockConfig>
}
 8002070:	b015      	add	sp, #84	@ 0x54
 8002072:	bd30      	pop	{r4, r5, pc}
 8002074:	40023800 	.word	0x40023800
 8002078:	40007000 	.word	0x40007000

0800207c <main>:
{
 800207c:	b580      	push	{r7, lr}
 800207e:	b09a      	sub	sp, #104	@ 0x68
  HAL_Init();
 8002080:	f00e fae6 	bl	8010650 <HAL_Init>
  SystemClock_Config();
 8002084:	f7ff ffac 	bl	8001fe0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002088:	2214      	movs	r2, #20
 800208a:	2100      	movs	r1, #0
 800208c:	a80d      	add	r0, sp, #52	@ 0x34
 800208e:	f02c fd8e 	bl	802ebae <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002092:	2400      	movs	r4, #0
 8002094:	4bc7      	ldr	r3, [pc, #796]	@ (80023b4 <main+0x338>)
 8002096:	9400      	str	r4, [sp, #0]
 8002098:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800209a:	48c7      	ldr	r0, [pc, #796]	@ (80023b8 <main+0x33c>)
  hi2c3.Instance = I2C3;
 800209c:	4dc7      	ldr	r5, [pc, #796]	@ (80023bc <main+0x340>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800209e:	f8df 8354 	ldr.w	r8, [pc, #852]	@ 80023f4 <main+0x378>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80020a2:	f042 0210 	orr.w	r2, r2, #16
 80020a6:	631a      	str	r2, [r3, #48]	@ 0x30
 80020a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020aa:	f002 0210 	and.w	r2, r2, #16
 80020ae:	9200      	str	r2, [sp, #0]
 80020b0:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80020b2:	9401      	str	r4, [sp, #4]
 80020b4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020b6:	f042 0220 	orr.w	r2, r2, #32
 80020ba:	631a      	str	r2, [r3, #48]	@ 0x30
 80020bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020be:	f002 0220 	and.w	r2, r2, #32
 80020c2:	9201      	str	r2, [sp, #4]
 80020c4:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80020c6:	9402      	str	r4, [sp, #8]
 80020c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ca:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80020ce:	631a      	str	r2, [r3, #48]	@ 0x30
 80020d0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020d2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80020d6:	9202      	str	r2, [sp, #8]
 80020d8:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80020da:	9403      	str	r4, [sp, #12]
 80020dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020de:	f042 0204 	orr.w	r2, r2, #4
 80020e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80020e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020e6:	f002 0204 	and.w	r2, r2, #4
 80020ea:	9203      	str	r2, [sp, #12]
 80020ec:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80020ee:	9404      	str	r4, [sp, #16]
 80020f0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020f2:	f042 0201 	orr.w	r2, r2, #1
 80020f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80020f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020fa:	f002 0201 	and.w	r2, r2, #1
 80020fe:	9204      	str	r2, [sp, #16]
 8002100:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002102:	9405      	str	r4, [sp, #20]
 8002104:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002106:	f042 0202 	orr.w	r2, r2, #2
 800210a:	631a      	str	r2, [r3, #48]	@ 0x30
 800210c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800210e:	f002 0202 	and.w	r2, r2, #2
 8002112:	9205      	str	r2, [sp, #20]
 8002114:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8002116:	9406      	str	r4, [sp, #24]
 8002118:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800211a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800211e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002120:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002122:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002126:	9206      	str	r2, [sp, #24]
 8002128:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800212a:	9407      	str	r4, [sp, #28]
 800212c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800212e:	f042 0208 	orr.w	r2, r2, #8
 8002132:	631a      	str	r2, [r3, #48]	@ 0x30
 8002134:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002136:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800213a:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800213c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800213e:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002140:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8002142:	f00e fd0b 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8002146:	489e      	ldr	r0, [pc, #632]	@ (80023c0 <main+0x344>)
 8002148:	2201      	movs	r2, #1
 800214a:	2102      	movs	r1, #2
 800214c:	f00e fd06 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002150:	4622      	mov	r2, r4
 8002152:	489b      	ldr	r0, [pc, #620]	@ (80023c0 <main+0x344>)
 8002154:	2104      	movs	r1, #4
 8002156:	f00e fd01 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800215a:	4622      	mov	r2, r4
 800215c:	4899      	ldr	r0, [pc, #612]	@ (80023c4 <main+0x348>)
 800215e:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8002162:	f00e fcfb 	bl	8010b5c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002166:	2601      	movs	r6, #1
 8002168:	233c      	movs	r3, #60	@ 0x3c
 800216a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800216e:	4892      	ldr	r0, [pc, #584]	@ (80023b8 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002170:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002172:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002174:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8002176:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002178:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800217a:	f00e fc05 	bl	8010988 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 800217e:	4890      	ldr	r0, [pc, #576]	@ (80023c0 <main+0x344>)
 8002180:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002182:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002186:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 800218a:	f00e fbfd 	bl	8010988 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800218e:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002190:	488b      	ldr	r0, [pc, #556]	@ (80023c0 <main+0x344>)
 8002192:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002194:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002198:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800219c:	f00e fbf4 	bl	8010988 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021a0:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80021a2:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021a6:	4887      	ldr	r0, [pc, #540]	@ (80023c4 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80021a8:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80021ac:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021b0:	f00e fbea 	bl	8010988 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80021b4:	4884      	ldr	r0, [pc, #528]	@ (80023c8 <main+0x34c>)
 80021b6:	4b85      	ldr	r3, [pc, #532]	@ (80023cc <main+0x350>)
 80021b8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80021ba:	f00e fadb 	bl	8010774 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80021be:	f8df e238 	ldr.w	lr, [pc, #568]	@ 80023f8 <main+0x37c>
 80021c2:	4b83      	ldr	r3, [pc, #524]	@ (80023d0 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80021c4:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80021c6:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80021ca:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80021cc:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80021d0:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80021d4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80021d8:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80021dc:	f00e fecc 	bl	8010f78 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80021e0:	2110      	movs	r1, #16
 80021e2:	4628      	mov	r0, r5
 80021e4:	f00f f910 	bl	8011408 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80021e8:	4621      	mov	r1, r4
 80021ea:	4628      	mov	r0, r5
  hspi5.Instance = SPI5;
 80021ec:	4d79      	ldr	r5, [pc, #484]	@ (80023d4 <main+0x358>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80021ee:	f00f f92a 	bl	8011446 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80021f2:	f44f 7382 	mov.w	r3, #260	@ 0x104
 80021f6:	e9c5 8300 	strd	r8, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80021fa:	f44f 7900 	mov.w	r9, #512	@ 0x200
 80021fe:	2318      	movs	r3, #24
 8002200:	e9c5 9306 	strd	r9, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8002204:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8002206:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8002208:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800220c:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8002210:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002214:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8002216:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8002218:	f00f ffec 	bl	80121f4 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 800221c:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 800221e:	4622      	mov	r2, r4
 8002220:	4639      	mov	r1, r7
 8002222:	4867      	ldr	r0, [pc, #412]	@ (80023c0 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8002224:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8002228:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 800222c:	f00e fc96 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8002230:	4632      	mov	r2, r6
 8002232:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002236:	a909      	add	r1, sp, #36	@ 0x24
 8002238:	4628      	mov	r0, r5
 800223a:	f010 f837 	bl	80122ac <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 800223e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002242:	4632      	mov	r2, r6
 8002244:	a90d      	add	r1, sp, #52	@ 0x34
 8002246:	4628      	mov	r0, r5
 8002248:	f010 f9dc 	bl	8012604 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 800224c:	4632      	mov	r2, r6
 800224e:	4639      	mov	r1, r7
 8002250:	485b      	ldr	r0, [pc, #364]	@ (80023c0 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8002252:	4d61      	ldr	r5, [pc, #388]	@ (80023d8 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8002254:	f00e fc82 	bl	8010b5c <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8002258:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 800225c:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 800225e:	bf04      	itt	eq
 8002260:	4b5e      	ldreq	r3, [pc, #376]	@ (80023dc <main+0x360>)
 8002262:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8002264:	4b5e      	ldr	r3, [pc, #376]	@ (80023e0 <main+0x364>)
 8002266:	2601      	movs	r6, #1
 8002268:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800226c:	2210      	movs	r2, #16
 800226e:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002270:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002272:	e9c5 2304 	strd	r2, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002276:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800227a:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800227e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8002282:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002286:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 800228a:	2702      	movs	r7, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800228c:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002290:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8002292:	f04f 0a03 	mov.w	sl, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002296:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002298:	a90d      	add	r1, sp, #52	@ 0x34
 800229a:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 800229c:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 80022a0:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80022a4:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80022a8:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 80022ac:	e9cd a711 	strd	sl, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 80022b0:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80022b2:	f00f fe83 	bl	8011fbc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80022b6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80022ba:	a909      	add	r1, sp, #36	@ 0x24
 80022bc:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80022be:	e9cd 860a 	strd	r8, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 80022c2:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80022c4:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80022c6:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80022c8:	f00f fe98 	bl	8011ffc <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80022cc:	4630      	mov	r0, r6
 80022ce:	f00e f9eb 	bl	80106a8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80022d2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80022d6:	a909      	add	r1, sp, #36	@ 0x24
 80022d8:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80022da:	e9cd 7809 	strd	r7, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80022de:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80022e2:	f00f fe8b 	bl	8011ffc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80022e6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80022ea:	a909      	add	r1, sp, #36	@ 0x24
 80022ec:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80022ee:	e9cd a809 	strd	sl, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80022f2:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80022f6:	f00f fe81 	bl	8011ffc <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80022fa:	f44f 730c 	mov.w	r3, #560	@ 0x230
 80022fe:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8002300:	9b08      	ldr	r3, [sp, #32]
 8002302:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002304:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002308:	a909      	add	r1, sp, #36	@ 0x24
 800230a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800230c:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8002310:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002312:	f00f fe73 	bl	8011ffc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8002316:	f240 516a 	movw	r1, #1386	@ 0x56a
 800231a:	4628      	mov	r0, r5
 800231c:	f00f fe8c 	bl	8012038 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002320:	2234      	movs	r2, #52	@ 0x34
 8002322:	eb0d 0002 	add.w	r0, sp, r2
 8002326:	4621      	mov	r1, r4
 8002328:	f02c fc41 	bl	802ebae <memset>
  hltdc.Instance = LTDC;
 800232c:	4d2d      	ldr	r5, [pc, #180]	@ (80023e4 <main+0x368>)
 800232e:	4b2e      	ldr	r3, [pc, #184]	@ (80023e8 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8002330:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8002332:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8002336:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8002338:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800233c:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 800233e:	e9c5 3a07 	strd	r3, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8002342:	f240 110d 	movw	r1, #269	@ 0x10d
 8002346:	f240 1343 	movw	r3, #323	@ 0x143
 800234a:	e9c5 1309 	strd	r1, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 800234e:	f240 1017 	movw	r0, #279	@ 0x117
 8002352:	f240 1347 	movw	r3, #327	@ 0x147
 8002356:	e9c5 030b 	strd	r0, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800235a:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800235c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8002360:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8002362:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8002366:	f00f f909 	bl	801157c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800236a:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800236c:	f44f 6c80 	mov.w	ip, #1024	@ 0x400
  pLayerCfg.Alpha0 = 0;
 8002370:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002374:	2105      	movs	r1, #5
 8002376:	e9cd c114 	strd	ip, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowX1 = 240;
 800237a:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.FBStartAdress = 0xD0000000;
 800237c:	f04f 4150 	mov.w	r1, #3489660928	@ 0xd0000000
  pLayerCfg.WindowY1 = 320;
 8002380:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.ImageWidth = 240;
 8002384:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
  pLayerCfg.WindowY0 = 0;
 8002388:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800238c:	a90d      	add	r1, sp, #52	@ 0x34
 800238e:	4622      	mov	r2, r4
 8002390:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8002392:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 8002396:	4d15      	ldr	r5, [pc, #84]	@ (80023ec <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8002398:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 800239a:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 800239c:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 80023a0:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80023a4:	f00f f9b5 	bl	8011712 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80023a8:	4b11      	ldr	r3, [pc, #68]	@ (80023f0 <main+0x374>)
 80023aa:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	4798      	blx	r3
  LcdDrv->DisplayOn();
 80023b0:	682b      	ldr	r3, [r5, #0]
 80023b2:	e023      	b.n	80023fc <main+0x380>
 80023b4:	40023800 	.word	0x40023800
 80023b8:	40021000 	.word	0x40021000
 80023bc:	2000296c 	.word	0x2000296c
 80023c0:	40020800 	.word	0x40020800
 80023c4:	40020c00 	.word	0x40020c00
 80023c8:	20002a00 	.word	0x20002a00
 80023cc:	40023000 	.word	0x40023000
 80023d0:	000186a0 	.word	0x000186a0
 80023d4:	2000286c 	.word	0x2000286c
 80023d8:	20002838 	.word	0x20002838
 80023dc:	2000282c 	.word	0x2000282c
 80023e0:	a0000140 	.word	0xa0000140
 80023e4:	200028c4 	.word	0x200028c4
 80023e8:	40016800 	.word	0x40016800
 80023ec:	20002828 	.word	0x20002828
 80023f0:	20000020 	.word	0x20000020
 80023f4:	40015000 	.word	0x40015000
 80023f8:	40005c00 	.word	0x40005c00
  hdma2d.Instance = DMA2D;
 80023fc:	4d14      	ldr	r5, [pc, #80]	@ (8002450 <main+0x3d4>)
  LcdDrv->DisplayOn();
 80023fe:	689b      	ldr	r3, [r3, #8]
 8002400:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8002402:	4b14      	ldr	r3, [pc, #80]	@ (8002454 <main+0x3d8>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002404:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8002406:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800240a:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800240e:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002412:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002416:	f00e f9bd 	bl	8010794 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800241a:	4631      	mov	r1, r6
 800241c:	4628      	mov	r0, r5
 800241e:	f00e fa6f 	bl	8010900 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8002422:	f7fe fc53 	bl	8000ccc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8002426:	f7fe fc50 	bl	8000cca <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 800242a:	f010 fd73 	bl	8012f14 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800242e:	4a0a      	ldr	r2, [pc, #40]	@ (8002458 <main+0x3dc>)
 8002430:	480a      	ldr	r0, [pc, #40]	@ (800245c <main+0x3e0>)
 8002432:	4621      	mov	r1, r4
 8002434:	f010 fd9a 	bl	8012f6c <osThreadNew>
 8002438:	4b09      	ldr	r3, [pc, #36]	@ (8002460 <main+0x3e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800243a:	4a0a      	ldr	r2, [pc, #40]	@ (8002464 <main+0x3e8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800243c:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800243e:	4621      	mov	r1, r4
 8002440:	4809      	ldr	r0, [pc, #36]	@ (8002468 <main+0x3ec>)
 8002442:	f010 fd93 	bl	8012f6c <osThreadNew>
 8002446:	4b09      	ldr	r3, [pc, #36]	@ (800246c <main+0x3f0>)
 8002448:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800244a:	f010 fd75 	bl	8012f38 <osKernelStart>
  while (1)
 800244e:	e7fe      	b.n	800244e <main+0x3d2>
 8002450:	200029c0 	.word	0x200029c0
 8002454:	4002b000 	.word	0x4002b000
 8002458:	08031a2c 	.word	0x08031a2c
 800245c:	08001fd1 	.word	0x08001fd1
 8002460:	20002834 	.word	0x20002834
 8002464:	08031a08 	.word	0x08031a08
 8002468:	08000cdb 	.word	0x08000cdb
 800246c:	20002830 	.word	0x20002830

08002470 <IOE_Init>:
void IOE_Init(void)
 8002470:	4770      	bx	lr

08002472 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8002472:	4770      	bx	lr

08002474 <IOE_Write>:
{
 8002474:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8002476:	4b09      	ldr	r3, [pc, #36]	@ (800249c <IOE_Write+0x28>)
 8002478:	f88d 2017 	strb.w	r2, [sp, #23]
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	9302      	str	r3, [sp, #8]
 8002480:	f10d 0217 	add.w	r2, sp, #23
 8002484:	2301      	movs	r3, #1
 8002486:	9200      	str	r2, [sp, #0]
 8002488:	9301      	str	r3, [sp, #4]
 800248a:	460a      	mov	r2, r1
 800248c:	4601      	mov	r1, r0
 800248e:	4804      	ldr	r0, [pc, #16]	@ (80024a0 <IOE_Write+0x2c>)
 8002490:	f00e fe1a 	bl	80110c8 <HAL_I2C_Mem_Write>
}
 8002494:	b007      	add	sp, #28
 8002496:	f85d fb04 	ldr.w	pc, [sp], #4
 800249a:	bf00      	nop
 800249c:	2000001c 	.word	0x2000001c
 80024a0:	2000296c 	.word	0x2000296c

080024a4 <IOE_Read>:
{
 80024a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80024a6:	2300      	movs	r3, #0
 80024a8:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80024ac:	4b08      	ldr	r3, [pc, #32]	@ (80024d0 <IOE_Read+0x2c>)
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	9302      	str	r3, [sp, #8]
{
 80024b2:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80024b4:	2301      	movs	r3, #1
 80024b6:	f10d 0117 	add.w	r1, sp, #23
 80024ba:	9100      	str	r1, [sp, #0]
 80024bc:	9301      	str	r3, [sp, #4]
 80024be:	4601      	mov	r1, r0
 80024c0:	4804      	ldr	r0, [pc, #16]	@ (80024d4 <IOE_Read+0x30>)
 80024c2:	f00e fe91 	bl	80111e8 <HAL_I2C_Mem_Read>
}
 80024c6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80024ca:	b007      	add	sp, #28
 80024cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80024d0:	2000001c 	.word	0x2000001c
 80024d4:	2000296c 	.word	0x2000296c

080024d8 <IOE_ReadMultiple>:
{
 80024d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80024da:	4c08      	ldr	r4, [pc, #32]	@ (80024fc <IOE_ReadMultiple+0x24>)
 80024dc:	6824      	ldr	r4, [r4, #0]
 80024de:	9200      	str	r2, [sp, #0]
 80024e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80024e4:	460a      	mov	r2, r1
 80024e6:	2301      	movs	r3, #1
 80024e8:	4601      	mov	r1, r0
 80024ea:	4805      	ldr	r0, [pc, #20]	@ (8002500 <IOE_ReadMultiple+0x28>)
 80024ec:	f00e fe7c 	bl	80111e8 <HAL_I2C_Mem_Read>
}
 80024f0:	3800      	subs	r0, #0
 80024f2:	bf18      	it	ne
 80024f4:	2001      	movne	r0, #1
 80024f6:	b004      	add	sp, #16
 80024f8:	bd10      	pop	{r4, pc}
 80024fa:	bf00      	nop
 80024fc:	2000001c 	.word	0x2000001c
 8002500:	2000296c 	.word	0x2000296c

08002504 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002504:	f00e b8d0 	b.w	80106a8 <HAL_Delay>

08002508 <LCD_IO_Init>:
{
 8002508:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800250a:	4c06      	ldr	r4, [pc, #24]	@ (8002524 <LCD_IO_Init+0x1c>)
 800250c:	2200      	movs	r2, #0
 800250e:	4620      	mov	r0, r4
 8002510:	2104      	movs	r1, #4
 8002512:	f00e fb23 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002516:	4620      	mov	r0, r4
 8002518:	2201      	movs	r2, #1
}
 800251a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800251e:	2104      	movs	r1, #4
 8002520:	f00e bb1c 	b.w	8010b5c <HAL_GPIO_WritePin>
 8002524:	40020800 	.word	0x40020800

08002528 <LCD_IO_WriteData>:
{
 8002528:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800252a:	4d0b      	ldr	r5, [pc, #44]	@ (8002558 <LCD_IO_WriteData+0x30>)
{
 800252c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800252e:	2201      	movs	r2, #1
 8002530:	480a      	ldr	r0, [pc, #40]	@ (800255c <LCD_IO_WriteData+0x34>)
 8002532:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002536:	f00e fb11 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800253a:	2200      	movs	r2, #0
 800253c:	2104      	movs	r1, #4
 800253e:	4628      	mov	r0, r5
 8002540:	f00e fb0c 	bl	8010b5c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002544:	4620      	mov	r0, r4
 8002546:	f7ff fd31 	bl	8001fac <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800254a:	4628      	mov	r0, r5
 800254c:	2201      	movs	r2, #1
}
 800254e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002552:	2104      	movs	r1, #4
 8002554:	f00e bb02 	b.w	8010b5c <HAL_GPIO_WritePin>
 8002558:	40020800 	.word	0x40020800
 800255c:	40020c00 	.word	0x40020c00

08002560 <LCD_IO_WriteReg>:
{
 8002560:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002562:	4d0b      	ldr	r5, [pc, #44]	@ (8002590 <LCD_IO_WriteReg+0x30>)
{
 8002564:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002566:	2200      	movs	r2, #0
 8002568:	480a      	ldr	r0, [pc, #40]	@ (8002594 <LCD_IO_WriteReg+0x34>)
 800256a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800256e:	f00e faf5 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002572:	2200      	movs	r2, #0
 8002574:	2104      	movs	r1, #4
 8002576:	4628      	mov	r0, r5
 8002578:	f00e faf0 	bl	8010b5c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 800257c:	4620      	mov	r0, r4
 800257e:	f7ff fd15 	bl	8001fac <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002582:	4628      	mov	r0, r5
 8002584:	2201      	movs	r2, #1
}
 8002586:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800258a:	2104      	movs	r1, #4
 800258c:	f00e bae6 	b.w	8010b5c <HAL_GPIO_WritePin>
 8002590:	40020800 	.word	0x40020800
 8002594:	40020c00 	.word	0x40020c00

08002598 <LCD_IO_ReadData>:
{
 8002598:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800259a:	4e14      	ldr	r6, [pc, #80]	@ (80025ec <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800259c:	4f14      	ldr	r7, [pc, #80]	@ (80025f0 <LCD_IO_ReadData+0x58>)
{
 800259e:	4605      	mov	r5, r0
 80025a0:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80025a2:	4630      	mov	r0, r6
 80025a4:	2200      	movs	r2, #0
 80025a6:	2104      	movs	r1, #4
 80025a8:	f00e fad8 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80025ac:	2200      	movs	r2, #0
 80025ae:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80025b2:	4638      	mov	r0, r7
 80025b4:	f00e fad2 	bl	8010b5c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80025b8:	4628      	mov	r0, r5
 80025ba:	f7ff fcf7 	bl	8001fac <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80025be:	4b0d      	ldr	r3, [pc, #52]	@ (80025f4 <LCD_IO_ReadData+0x5c>)
 80025c0:	480d      	ldr	r0, [pc, #52]	@ (80025f8 <LCD_IO_ReadData+0x60>)
 80025c2:	681b      	ldr	r3, [r3, #0]
 80025c4:	4622      	mov	r2, r4
 80025c6:	a901      	add	r1, sp, #4
 80025c8:	f010 f81c 	bl	8012604 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80025cc:	4638      	mov	r0, r7
 80025ce:	2201      	movs	r2, #1
 80025d0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 80025d4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80025d6:	f00e fac1 	bl	8010b5c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80025da:	4630      	mov	r0, r6
 80025dc:	2201      	movs	r2, #1
 80025de:	2104      	movs	r1, #4
 80025e0:	f00e fabc 	bl	8010b5c <HAL_GPIO_WritePin>
}
 80025e4:	4620      	mov	r0, r4
 80025e6:	b003      	add	sp, #12
 80025e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025ea:	bf00      	nop
 80025ec:	40020800 	.word	0x40020800
 80025f0:	40020c00 	.word	0x40020c00
 80025f4:	20000018 	.word	0x20000018
 80025f8:	2000286c 	.word	0x2000286c

080025fc <LCD_Delay>:
  HAL_Delay(Delay);
 80025fc:	f00e b854 	b.w	80106a8 <HAL_Delay>

08002600 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002600:	b510      	push	{r4, lr}
 8002602:	4604      	mov	r4, r0
  /* USER CODE BEGIN Callback 0 */
  // Update audio system every millisecond
  Audio_Update();
 8002604:	f7ff fc1a 	bl	8001e3c <Audio_Update>
  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8002608:	6822      	ldr	r2, [r4, #0]
 800260a:	4b04      	ldr	r3, [pc, #16]	@ (800261c <HAL_TIM_PeriodElapsedCallback+0x1c>)
 800260c:	429a      	cmp	r2, r3
 800260e:	d103      	bne.n	8002618 <HAL_TIM_PeriodElapsedCallback+0x18>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_IncTick();
 8002614:	f00e b836 	b.w	8010684 <HAL_IncTick>
}
 8002618:	bd10      	pop	{r4, pc}
 800261a:	bf00      	nop
 800261c:	40001000 	.word	0x40001000

08002620 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002620:	4770      	bx	lr
	...

08002624 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002624:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002626:	4b0e      	ldr	r3, [pc, #56]	@ (8002660 <HAL_MspInit+0x3c>)
 8002628:	2200      	movs	r2, #0
 800262a:	9200      	str	r2, [sp, #0]
 800262c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800262e:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8002632:	6459      	str	r1, [r3, #68]	@ 0x44
 8002634:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002636:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800263a:	9100      	str	r1, [sp, #0]
 800263c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800263e:	9201      	str	r2, [sp, #4]
 8002640:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8002642:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8002646:	6419      	str	r1, [r3, #64]	@ 0x40
 8002648:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800264a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800264e:	9301      	str	r3, [sp, #4]
 8002650:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002652:	210f      	movs	r1, #15
 8002654:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002658:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800265a:	f00e b84b 	b.w	80106f4 <HAL_NVIC_SetPriority>
 800265e:	bf00      	nop
 8002660:	40023800 	.word	0x40023800

08002664 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002664:	6802      	ldr	r2, [r0, #0]
 8002666:	4b09      	ldr	r3, [pc, #36]	@ (800268c <HAL_CRC_MspInit+0x28>)
 8002668:	429a      	cmp	r2, r3
{
 800266a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800266c:	d10b      	bne.n	8002686 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800266e:	2300      	movs	r3, #0
 8002670:	9301      	str	r3, [sp, #4]
 8002672:	4b07      	ldr	r3, [pc, #28]	@ (8002690 <HAL_CRC_MspInit+0x2c>)
 8002674:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002676:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800267a:	631a      	str	r2, [r3, #48]	@ 0x30
 800267c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800267e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002682:	9301      	str	r3, [sp, #4]
 8002684:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8002686:	b002      	add	sp, #8
 8002688:	4770      	bx	lr
 800268a:	bf00      	nop
 800268c:	40023000 	.word	0x40023000
 8002690:	40023800 	.word	0x40023800

08002694 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002694:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002696:	4b0f      	ldr	r3, [pc, #60]	@ (80026d4 <HAL_DMA2D_MspInit+0x40>)
 8002698:	6802      	ldr	r2, [r0, #0]
 800269a:	429a      	cmp	r2, r3
 800269c:	d116      	bne.n	80026cc <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800269e:	2200      	movs	r2, #0
 80026a0:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 80026a4:	9201      	str	r2, [sp, #4]
 80026a6:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80026a8:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80026ac:	6319      	str	r1, [r3, #48]	@ 0x30
 80026ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026b0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80026b4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80026b6:	2105      	movs	r1, #5
 80026b8:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80026ba:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80026bc:	f00e f81a 	bl	80106f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80026c0:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80026c2:	b003      	add	sp, #12
 80026c4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80026c8:	f00e b846 	b.w	8010758 <HAL_NVIC_EnableIRQ>
}
 80026cc:	b003      	add	sp, #12
 80026ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80026d2:	bf00      	nop
 80026d4:	4002b000 	.word	0x4002b000

080026d8 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80026d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80026dc:	4604      	mov	r4, r0
 80026de:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026e0:	2214      	movs	r2, #20
 80026e2:	2100      	movs	r1, #0
 80026e4:	a803      	add	r0, sp, #12
 80026e6:	f02c fa62 	bl	802ebae <memset>
  if(hi2c->Instance==I2C3)
 80026ea:	6822      	ldr	r2, [r4, #0]
 80026ec:	4b24      	ldr	r3, [pc, #144]	@ (8002780 <HAL_I2C_MspInit+0xa8>)
 80026ee:	429a      	cmp	r2, r3
 80026f0:	d143      	bne.n	800277a <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80026f2:	4c24      	ldr	r4, [pc, #144]	@ (8002784 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f4:	4824      	ldr	r0, [pc, #144]	@ (8002788 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80026f6:	2500      	movs	r5, #0
 80026f8:	9500      	str	r5, [sp, #0]
 80026fa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80026fc:	f043 0304 	orr.w	r3, r3, #4
 8002700:	6323      	str	r3, [r4, #48]	@ 0x30
 8002702:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002704:	f003 0304 	and.w	r3, r3, #4
 8002708:	9300      	str	r3, [sp, #0]
 800270a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800270c:	9501      	str	r5, [sp, #4]
 800270e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002710:	f043 0301 	orr.w	r3, r3, #1
 8002714:	6323      	str	r3, [r4, #48]	@ 0x30
 8002716:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002718:	f003 0301 	and.w	r3, r3, #1
 800271c:	9301      	str	r3, [sp, #4]
 800271e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002720:	f04f 0912 	mov.w	r9, #18
 8002724:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002728:	f04f 0801 	mov.w	r8, #1
 800272c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800272e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002730:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002732:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002736:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800273a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800273c:	f00e f924 	bl	8010988 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002740:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002744:	4811      	ldr	r0, [pc, #68]	@ (800278c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002746:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002748:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800274a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800274e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002752:	f00e f919 	bl	8010988 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002756:	9502      	str	r5, [sp, #8]
 8002758:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800275a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800275e:	6423      	str	r3, [r4, #64]	@ 0x40
 8002760:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002762:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002766:	9302      	str	r3, [sp, #8]
 8002768:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800276a:	6a23      	ldr	r3, [r4, #32]
 800276c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002770:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002772:	6a23      	ldr	r3, [r4, #32]
 8002774:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002778:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 800277a:	b009      	add	sp, #36	@ 0x24
 800277c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002780:	40005c00 	.word	0x40005c00
 8002784:	40023800 	.word	0x40023800
 8002788:	40020800 	.word	0x40020800
 800278c:	40020000 	.word	0x40020000

08002790 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002790:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002792:	b099      	sub	sp, #100	@ 0x64
 8002794:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002796:	2214      	movs	r2, #20
 8002798:	2100      	movs	r1, #0
 800279a:	a807      	add	r0, sp, #28
 800279c:	f02c fa07 	bl	802ebae <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80027a0:	2230      	movs	r2, #48	@ 0x30
 80027a2:	eb0d 0002 	add.w	r0, sp, r2
 80027a6:	2100      	movs	r1, #0
 80027a8:	f02c fa01 	bl	802ebae <memset>
  if(hltdc->Instance==LTDC)
 80027ac:	6822      	ldr	r2, [r4, #0]
 80027ae:	4b5e      	ldr	r3, [pc, #376]	@ (8002928 <HAL_LTDC_MspInit+0x198>)
 80027b0:	429a      	cmp	r2, r3
 80027b2:	f040 80b7 	bne.w	8002924 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80027b6:	2308      	movs	r3, #8
 80027b8:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80027ba:	23c0      	movs	r3, #192	@ 0xc0
 80027bc:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80027be:	2304      	movs	r3, #4
 80027c0:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027c2:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80027c4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80027c8:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027ca:	f00f facb 	bl	8011d64 <HAL_RCCEx_PeriphCLKConfig>
 80027ce:	b108      	cbz	r0, 80027d4 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80027d0:	f7ff ff26 	bl	8002620 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027d4:	4b55      	ldr	r3, [pc, #340]	@ (800292c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027d6:	4856      	ldr	r0, [pc, #344]	@ (8002930 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027d8:	2400      	movs	r4, #0
 80027da:	9400      	str	r4, [sp, #0]
 80027dc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80027de:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80027e2:	645a      	str	r2, [r3, #68]	@ 0x44
 80027e4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80027e6:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80027ea:	9200      	str	r2, [sp, #0]
 80027ec:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80027ee:	9401      	str	r4, [sp, #4]
 80027f0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80027f2:	f042 0220 	orr.w	r2, r2, #32
 80027f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80027f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80027fa:	f002 0220 	and.w	r2, r2, #32
 80027fe:	9201      	str	r2, [sp, #4]
 8002800:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002802:	9402      	str	r4, [sp, #8]
 8002804:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002806:	f042 0201 	orr.w	r2, r2, #1
 800280a:	631a      	str	r2, [r3, #48]	@ 0x30
 800280c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800280e:	f002 0201 	and.w	r2, r2, #1
 8002812:	9202      	str	r2, [sp, #8]
 8002814:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002816:	9403      	str	r4, [sp, #12]
 8002818:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800281a:	f042 0202 	orr.w	r2, r2, #2
 800281e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002820:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002822:	f002 0202 	and.w	r2, r2, #2
 8002826:	9203      	str	r2, [sp, #12]
 8002828:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800282a:	9404      	str	r4, [sp, #16]
 800282c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800282e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002832:	631a      	str	r2, [r3, #48]	@ 0x30
 8002834:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002836:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800283a:	9204      	str	r2, [sp, #16]
 800283c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800283e:	9405      	str	r4, [sp, #20]
 8002840:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002842:	f042 0204 	orr.w	r2, r2, #4
 8002846:	631a      	str	r2, [r3, #48]	@ 0x30
 8002848:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800284a:	f002 0204 	and.w	r2, r2, #4
 800284e:	9205      	str	r2, [sp, #20]
 8002850:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002852:	9406      	str	r4, [sp, #24]
 8002854:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002856:	f042 0208 	orr.w	r2, r2, #8
 800285a:	631a      	str	r2, [r3, #48]	@ 0x30
 800285c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800285e:	f003 0308 	and.w	r3, r3, #8
 8002862:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002864:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002866:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002868:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800286a:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800286c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002870:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002872:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002876:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800287a:	f00e f885 	bl	8010988 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800287e:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002882:	482c      	ldr	r0, [pc, #176]	@ (8002934 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002884:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002886:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002888:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800288c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800288e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002892:	f00e f879 	bl	8010988 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002896:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002898:	4827      	ldr	r0, [pc, #156]	@ (8002938 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800289a:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800289c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800289e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028a2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028a6:	f00e f86f 	bl	8010988 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80028aa:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028ae:	4822      	ldr	r0, [pc, #136]	@ (8002938 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028b0:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028b2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028b4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028b8:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028bc:	f00e f864 	bl	8010988 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80028c0:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028c4:	481d      	ldr	r0, [pc, #116]	@ (800293c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028c6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028c8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028ca:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028ce:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028d2:	f00e f859 	bl	8010988 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80028d6:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028d8:	4819      	ldr	r0, [pc, #100]	@ (8002940 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028da:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028dc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028de:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028e2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028e6:	f00e f84f 	bl	8010988 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80028ea:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80028ec:	4815      	ldr	r0, [pc, #84]	@ (8002944 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028ee:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80028f0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028f2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028f6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80028fa:	f00e f845 	bl	8010988 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80028fe:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002902:	480e      	ldr	r0, [pc, #56]	@ (800293c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002904:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002906:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002908:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800290c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002910:	f00e f83a 	bl	8010988 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002914:	2058      	movs	r0, #88	@ 0x58
 8002916:	4622      	mov	r2, r4
 8002918:	2105      	movs	r1, #5
 800291a:	f00d feeb 	bl	80106f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800291e:	2058      	movs	r0, #88	@ 0x58
 8002920:	f00d ff1a 	bl	8010758 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002924:	b019      	add	sp, #100	@ 0x64
 8002926:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002928:	40016800 	.word	0x40016800
 800292c:	40023800 	.word	0x40023800
 8002930:	40021400 	.word	0x40021400
 8002934:	40020000 	.word	0x40020000
 8002938:	40020400 	.word	0x40020400
 800293c:	40021800 	.word	0x40021800
 8002940:	40020800 	.word	0x40020800
 8002944:	40020c00 	.word	0x40020c00

08002948 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002948:	b510      	push	{r4, lr}
 800294a:	4604      	mov	r4, r0
 800294c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800294e:	2214      	movs	r2, #20
 8002950:	2100      	movs	r1, #0
 8002952:	a803      	add	r0, sp, #12
 8002954:	f02c f92b 	bl	802ebae <memset>
  if(hspi->Instance==SPI5)
 8002958:	6822      	ldr	r2, [r4, #0]
 800295a:	4b14      	ldr	r3, [pc, #80]	@ (80029ac <HAL_SPI_MspInit+0x64>)
 800295c:	429a      	cmp	r2, r3
 800295e:	d123      	bne.n	80029a8 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002960:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002964:	2100      	movs	r1, #0
 8002966:	9101      	str	r1, [sp, #4]
 8002968:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800296a:	4811      	ldr	r0, [pc, #68]	@ (80029b0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 800296c:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002970:	645a      	str	r2, [r3, #68]	@ 0x44
 8002972:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002974:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002978:	9201      	str	r2, [sp, #4]
 800297a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800297c:	9102      	str	r1, [sp, #8]
 800297e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002980:	f042 0220 	orr.w	r2, r2, #32
 8002984:	631a      	str	r2, [r3, #48]	@ 0x30
 8002986:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002988:	f003 0320 	and.w	r3, r3, #32
 800298c:	9302      	str	r3, [sp, #8]
 800298e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002990:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002994:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002996:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002998:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800299c:	2305      	movs	r3, #5
 800299e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029a2:	a903      	add	r1, sp, #12
 80029a4:	f00d fff0 	bl	8010988 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 80029a8:	b008      	add	sp, #32
 80029aa:	bd10      	pop	{r4, pc}
 80029ac:	40015000 	.word	0x40015000
 80029b0:	40021400 	.word	0x40021400

080029b4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80029b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80029b8:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80029ba:	2300      	movs	r3, #0
 80029bc:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80029be:	4b2b      	ldr	r3, [pc, #172]	@ (8002a6c <HAL_SDRAM_MspInit+0xb8>)
 80029c0:	681c      	ldr	r4, [r3, #0]
 80029c2:	2c00      	cmp	r4, #0
 80029c4:	d14f      	bne.n	8002a66 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80029c6:	f04f 0801 	mov.w	r8, #1
 80029ca:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80029ce:	4b28      	ldr	r3, [pc, #160]	@ (8002a70 <HAL_SDRAM_MspInit+0xbc>)
 80029d0:	9400      	str	r4, [sp, #0]
 80029d2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029d4:	4827      	ldr	r0, [pc, #156]	@ (8002a74 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80029d6:	ea42 0208 	orr.w	r2, r2, r8
 80029da:	639a      	str	r2, [r3, #56]	@ 0x38
 80029dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80029de:	ea03 0308 	and.w	r3, r3, r8
 80029e2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029e4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80029e6:	2603      	movs	r6, #3
 80029e8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80029ea:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029ec:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029ee:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80029f2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80029f6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029fa:	f00d ffc5 	bl	8010988 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80029fe:	481e      	ldr	r0, [pc, #120]	@ (8002a78 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a00:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a02:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a04:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a08:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a0c:	f00d ffbc 	bl	8010988 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002a10:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002a14:	4819      	ldr	r0, [pc, #100]	@ (8002a7c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a16:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002a18:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a1a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a1e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002a22:	f00d ffb1 	bl	8010988 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002a26:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002a2a:	4815      	ldr	r0, [pc, #84]	@ (8002a80 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a2c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002a2e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a30:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a34:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002a38:	f00d ffa6 	bl	8010988 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002a3c:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002a40:	4810      	ldr	r0, [pc, #64]	@ (8002a84 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a42:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002a44:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a46:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a4a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002a4e:	f00d ff9b 	bl	8010988 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002a52:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a54:	480c      	ldr	r0, [pc, #48]	@ (8002a88 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a56:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a58:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a5a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a5e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a62:	f00d ff91 	bl	8010988 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002a66:	b006      	add	sp, #24
 8002a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002a6c:	20002a08 	.word	0x20002a08
 8002a70:	40023800 	.word	0x40023800
 8002a74:	40021400 	.word	0x40021400
 8002a78:	40020800 	.word	0x40020800
 8002a7c:	40021800 	.word	0x40021800
 8002a80:	40021000 	.word	0x40021000
 8002a84:	40020c00 	.word	0x40020c00
 8002a88:	40020400 	.word	0x40020400

08002a8c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002a8c:	b570      	push	{r4, r5, r6, lr}
 8002a8e:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002a90:	2300      	movs	r3, #0
 8002a92:	9302      	str	r3, [sp, #8]
 8002a94:	4b20      	ldr	r3, [pc, #128]	@ (8002b18 <HAL_InitTick+0x8c>)
 8002a96:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002a98:	f042 0210 	orr.w	r2, r2, #16
 8002a9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002a9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aa0:	f003 0310 	and.w	r3, r3, #16
 8002aa4:	9302      	str	r3, [sp, #8]
{
 8002aa6:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002aa8:	a901      	add	r1, sp, #4
 8002aaa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002aac:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002aae:	f00f f93b 	bl	8011d28 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002ab2:	9b06      	ldr	r3, [sp, #24]
 8002ab4:	bb4b      	cbnz	r3, 8002b0a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002ab6:	f00f f927 	bl	8011d08 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002aba:	4e18      	ldr	r6, [pc, #96]	@ (8002b1c <HAL_InitTick+0x90>)
 8002abc:	4b18      	ldr	r3, [pc, #96]	@ (8002b20 <HAL_InitTick+0x94>)
 8002abe:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002ac0:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8002ac4:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002ac6:	4b17      	ldr	r3, [pc, #92]	@ (8002b24 <HAL_InitTick+0x98>)
 8002ac8:	fbb0 f3f3 	udiv	r3, r0, r3
 8002acc:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002ace:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002ad0:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002ad6:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002ad8:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002ada:	f00f ffe5 	bl	8012aa8 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002ade:	4604      	mov	r4, r0
 8002ae0:	b980      	cbnz	r0, 8002b04 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002ae2:	4630      	mov	r0, r6
 8002ae4:	f00f feb4 	bl	8012850 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002ae8:	4604      	mov	r4, r0
 8002aea:	b958      	cbnz	r0, 8002b04 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002aec:	2036      	movs	r0, #54	@ 0x36
 8002aee:	f00d fe33 	bl	8010758 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002af2:	2d0f      	cmp	r5, #15
 8002af4:	d80d      	bhi.n	8002b12 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002af6:	4622      	mov	r2, r4
 8002af8:	4629      	mov	r1, r5
 8002afa:	2036      	movs	r0, #54	@ 0x36
 8002afc:	f00d fdfa 	bl	80106f4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002b00:	4b09      	ldr	r3, [pc, #36]	@ (8002b28 <HAL_InitTick+0x9c>)
 8002b02:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002b04:	4620      	mov	r0, r4
 8002b06:	b008      	add	sp, #32
 8002b08:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002b0a:	f00f f8fd 	bl	8011d08 <HAL_RCC_GetPCLK1Freq>
 8002b0e:	0040      	lsls	r0, r0, #1
 8002b10:	e7d3      	b.n	8002aba <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002b12:	2401      	movs	r4, #1
 8002b14:	e7f6      	b.n	8002b04 <HAL_InitTick+0x78>
 8002b16:	bf00      	nop
 8002b18:	40023800 	.word	0x40023800
 8002b1c:	20002a0c 	.word	0x20002a0c
 8002b20:	40001000 	.word	0x40001000
 8002b24:	000f4240 	.word	0x000f4240
 8002b28:	20000088 	.word	0x20000088

08002b2c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002b2c:	4770      	bx	lr

08002b2e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002b2e:	e7fe      	b.n	8002b2e <HardFault_Handler>

08002b30 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002b30:	e7fe      	b.n	8002b30 <MemManage_Handler>

08002b32 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002b32:	e7fe      	b.n	8002b32 <BusFault_Handler>

08002b34 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002b34:	e7fe      	b.n	8002b34 <UsageFault_Handler>

08002b36 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002b36:	4770      	bx	lr

08002b38 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002b38:	4801      	ldr	r0, [pc, #4]	@ (8002b40 <TIM6_DAC_IRQHandler+0x8>)
 8002b3a:	f00f bec8 	b.w	80128ce <HAL_TIM_IRQHandler>
 8002b3e:	bf00      	nop
 8002b40:	20002a0c 	.word	0x20002a0c

08002b44 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002b44:	4801      	ldr	r0, [pc, #4]	@ (8002b4c <LTDC_IRQHandler+0x8>)
 8002b46:	f00e bd87 	b.w	8011658 <HAL_LTDC_IRQHandler>
 8002b4a:	bf00      	nop
 8002b4c:	200028c4 	.word	0x200028c4

08002b50 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002b50:	4801      	ldr	r0, [pc, #4]	@ (8002b58 <DMA2D_IRQHandler+0x8>)
 8002b52:	f00d be4b 	b.w	80107ec <HAL_DMA2D_IRQHandler>
 8002b56:	bf00      	nop
 8002b58:	200029c0 	.word	0x200029c0

08002b5c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002b5c:	2001      	movs	r0, #1
 8002b5e:	4770      	bx	lr

08002b60 <_kill>:

int _kill(int pid, int sig)
{
 8002b60:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002b62:	f02c f8c7 	bl	802ecf4 <__errno>
 8002b66:	2316      	movs	r3, #22
 8002b68:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002b6a:	f04f 30ff 	mov.w	r0, #4294967295
 8002b6e:	bd08      	pop	{r3, pc}

08002b70 <_exit>:

void _exit (int status)
{
 8002b70:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002b72:	f02c f8bf 	bl	802ecf4 <__errno>
 8002b76:	2316      	movs	r3, #22
 8002b78:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002b7a:	e7fe      	b.n	8002b7a <_exit+0xa>

08002b7c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002b7c:	b570      	push	{r4, r5, r6, lr}
 8002b7e:	460d      	mov	r5, r1
 8002b80:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b82:	460e      	mov	r6, r1
 8002b84:	1b73      	subs	r3, r6, r5
 8002b86:	429c      	cmp	r4, r3
 8002b88:	dc01      	bgt.n	8002b8e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002b8a:	4620      	mov	r0, r4
 8002b8c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002b8e:	f3af 8000 	nop.w
 8002b92:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b96:	e7f5      	b.n	8002b84 <_read+0x8>

08002b98 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002b98:	b570      	push	{r4, r5, r6, lr}
 8002b9a:	460d      	mov	r5, r1
 8002b9c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b9e:	460e      	mov	r6, r1
 8002ba0:	1b73      	subs	r3, r6, r5
 8002ba2:	429c      	cmp	r4, r3
 8002ba4:	dc01      	bgt.n	8002baa <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002ba6:	4620      	mov	r0, r4
 8002ba8:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002baa:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002bae:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002bb2:	e7f5      	b.n	8002ba0 <_write+0x8>

08002bb4 <_close>:

int _close(int file)
{
	return -1;
}
 8002bb4:	f04f 30ff 	mov.w	r0, #4294967295
 8002bb8:	4770      	bx	lr

08002bba <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002bba:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002bbe:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002bc0:	2000      	movs	r0, #0
 8002bc2:	4770      	bx	lr

08002bc4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002bc4:	2001      	movs	r0, #1
 8002bc6:	4770      	bx	lr

08002bc8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002bc8:	2000      	movs	r0, #0
 8002bca:	4770      	bx	lr

08002bcc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002bcc:	4a0a      	ldr	r2, [pc, #40]	@ (8002bf8 <_sbrk+0x2c>)
 8002bce:	6811      	ldr	r1, [r2, #0]
{
 8002bd0:	b508      	push	{r3, lr}
 8002bd2:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002bd4:	b909      	cbnz	r1, 8002bda <_sbrk+0xe>
		heap_end = &end;
 8002bd6:	4909      	ldr	r1, [pc, #36]	@ (8002bfc <_sbrk+0x30>)
 8002bd8:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002bda:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002bdc:	4669      	mov	r1, sp
 8002bde:	4403      	add	r3, r0
 8002be0:	428b      	cmp	r3, r1
 8002be2:	d906      	bls.n	8002bf2 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002be4:	f02c f886 	bl	802ecf4 <__errno>
 8002be8:	230c      	movs	r3, #12
 8002bea:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002bec:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002bf0:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002bf2:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002bf4:	e7fc      	b.n	8002bf0 <_sbrk+0x24>
 8002bf6:	bf00      	nop
 8002bf8:	20002a54 	.word	0x20002a54
 8002bfc:	20014628 	.word	0x20014628

08002c00 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DAMAGEFONT = 3;    // arialbd_35_4bpp
    static const touchgfx::FontId TYPOGRAPHY_02 = 4; // arialbd_14_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002c00:	4770      	bx	lr

08002c02 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002c02:	b508      	push	{r3, lr}
    switch (typography)
 8002c04:	2906      	cmp	r1, #6
 8002c06:	d819      	bhi.n	8002c3c <_ZN23ApplicationFontProvider7getFontEt+0x3a>
 8002c08:	e8df f001 	tbb	[pc, r1]
 8002c0c:	0c08040c 	.word	0x0c08040c
 8002c10:	100c      	.short	0x100c
 8002c12:	14          	.byte	0x14
 8002c13:	00          	.byte	0x00
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::LARGE:
        // arialbd_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002c14:	f007 fbec 	bl	800a3f0 <_ZN17TypedTextDatabase8getFontsEv>
 8002c18:	6840      	ldr	r0, [r0, #4]
        // arialbd_14_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 8002c1a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002c1c:	f007 fbe8 	bl	800a3f0 <_ZN17TypedTextDatabase8getFontsEv>
 8002c20:	6880      	ldr	r0, [r0, #8]
 8002c22:	e7fa      	b.n	8002c1a <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002c24:	f007 fbe4 	bl	800a3f0 <_ZN17TypedTextDatabase8getFontsEv>
 8002c28:	6800      	ldr	r0, [r0, #0]
 8002c2a:	e7f6      	b.n	8002c1a <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002c2c:	f007 fbe0 	bl	800a3f0 <_ZN17TypedTextDatabase8getFontsEv>
 8002c30:	68c0      	ldr	r0, [r0, #12]
 8002c32:	e7f2      	b.n	8002c1a <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002c34:	f007 fbdc 	bl	800a3f0 <_ZN17TypedTextDatabase8getFontsEv>
 8002c38:	6900      	ldr	r0, [r0, #16]
 8002c3a:	e7ee      	b.n	8002c1a <_ZN23ApplicationFontProvider7getFontEt+0x18>
    switch (typography)
 8002c3c:	2000      	movs	r0, #0
 8002c3e:	e7ec      	b.n	8002c1a <_ZN23ApplicationFontProvider7getFontEt+0x18>

08002c40 <_ZN23ApplicationFontProviderD0Ev>:
 8002c40:	b510      	push	{r4, lr}
 8002c42:	2104      	movs	r1, #4
 8002c44:	4604      	mov	r4, r0
 8002c46:	f02a fe6e 	bl	802d926 <_ZdlPvj>
 8002c4a:	4620      	mov	r0, r4
 8002c4c:	bd10      	pop	{r4, pc}

08002c4e <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002c4e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002c50:	4770      	bx	lr

08002c52 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002c52:	4770      	bx	lr

08002c54 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002c54:	4770      	bx	lr

08002c56 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002c56:	4770      	bx	lr

08002c58 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002c58:	4770      	bx	lr

08002c5a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002c5a:	4770      	bx	lr

08002c5c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002c5c:	4770      	bx	lr

08002c5e <_ZN8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c5e:	4770      	bx	lr

08002c60 <_ZN20BackUpScreenViewBaseD1Ev>:
}

BackUpScreenViewBase::~BackUpScreenViewBase()
{

}
 8002c60:	4770      	bx	lr

08002c62 <_ZN20BackUpScreenViewBase11setupScreenEv>:

void BackUpScreenViewBase::setupScreen()
{

}
 8002c62:	4770      	bx	lr

08002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed() const
    {
        return pressed;
 8002c64:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002c68:	b14b      	cbz	r3, 8002c7e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002c6a:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 8002c6e:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002c70:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002c72:	b13b      	cbz	r3, 8002c84 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002c74:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 8002c78:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002c7a:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 8002c7c:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002c7e:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 8002c82:	e7f4      	b.n	8002c6e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002c84:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 8002c88:	e7f6      	b.n	8002c78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002c8a <_ZN8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002c8a:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002c8c:	68c2      	ldr	r2, [r0, #12]
 8002c8e:	6844      	ldr	r4, [r0, #4]
 8002c90:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002c92:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002c94:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002c98:	07d2      	lsls	r2, r2, #31
 8002c9a:	bf48      	it	mi
 8002c9c:	5962      	ldrmi	r2, [r4, r5]
 8002c9e:	689b      	ldr	r3, [r3, #8]
    }
 8002ca0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ca2:	bf48      	it	mi
 8002ca4:	58d3      	ldrmi	r3, [r2, r3]
 8002ca6:	4718      	bx	r3

08002ca8 <_ZNK8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 8002ca8:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002caa:	6840      	ldr	r0, [r0, #4]
 8002cac:	b130      	cbz	r0, 8002cbc <_ZNK8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002cae:	689a      	ldr	r2, [r3, #8]
 8002cb0:	b91a      	cbnz	r2, 8002cba <_ZNK8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8002cb2:	68d8      	ldr	r0, [r3, #12]
 8002cb4:	f000 0001 	and.w	r0, r0, #1
 8002cb8:	4770      	bx	lr
 8002cba:	2001      	movs	r0, #1
    }
 8002cbc:	4770      	bx	lr

08002cbe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002cbe:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8002cc2:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002cc6:	4770      	bx	lr

08002cc8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002cc8:	b510      	push	{r4, lr}
 8002cca:	2178      	movs	r1, #120	@ 0x78
 8002ccc:	4604      	mov	r4, r0
 8002cce:	f02a fe2a 	bl	802d926 <_ZdlPvj>
 8002cd2:	4620      	mov	r0, r4
 8002cd4:	bd10      	pop	{r4, pc}

08002cd6 <_ZN8touchgfx8CallbackI20BackUpScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cd6:	b510      	push	{r4, lr}
 8002cd8:	2110      	movs	r1, #16
 8002cda:	4604      	mov	r4, r0
 8002cdc:	f02a fe23 	bl	802d926 <_ZdlPvj>
 8002ce0:	4620      	mov	r0, r4
 8002ce2:	bd10      	pop	{r4, pc}

08002ce4 <_ZN20BackUpScreenViewBaseD0Ev>:
BackUpScreenViewBase::~BackUpScreenViewBase()
 8002ce4:	b510      	push	{r4, lr}
}
 8002ce6:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
BackUpScreenViewBase::~BackUpScreenViewBase()
 8002cea:	4604      	mov	r4, r0
}
 8002cec:	f02a fe1b 	bl	802d926 <_ZdlPvj>
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	bd10      	pop	{r4, pc}

08002cf4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002cf4:	b510      	push	{r4, lr}
 8002cf6:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002cf8:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8002cfa:	b150      	cbz	r0, 8002d12 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002cfc:	6803      	ldr	r3, [r0, #0]
 8002cfe:	68db      	ldr	r3, [r3, #12]
 8002d00:	4798      	blx	r3
 8002d02:	b130      	cbz	r0, 8002d12 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002d04:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8002d06:	6803      	ldr	r3, [r0, #0]
 8002d08:	4621      	mov	r1, r4
 8002d0a:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002d0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002d10:	4718      	bx	r3
    }
 8002d12:	bd10      	pop	{r4, pc}

08002d14 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002d14:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002d16:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002d18:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 8002d1c:	4604      	mov	r4, r0
 8002d1e:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002d20:	b90b      	cbnz	r3, 8002d26 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 8002d22:	b116      	cbz	r6, 8002d2a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 8002d24:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002d26:	2e00      	cmp	r6, #0
 8002d28:	d0fc      	beq.n	8002d24 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002d2a:	fab3 f383 	clz	r3, r3
 8002d2e:	095b      	lsrs	r3, r3, #5
 8002d30:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 8002d34:	6823      	ldr	r3, [r4, #0]
 8002d36:	4620      	mov	r0, r4
 8002d38:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8002d3c:	4798      	blx	r3
            invalidate();
 8002d3e:	6823      	ldr	r3, [r4, #0]
 8002d40:	4620      	mov	r0, r4
 8002d42:	695b      	ldr	r3, [r3, #20]
 8002d44:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002d46:	2e00      	cmp	r6, #0
 8002d48:	d0ec      	beq.n	8002d24 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 8002d4a:	792b      	ldrb	r3, [r5, #4]
 8002d4c:	2b01      	cmp	r3, #1
 8002d4e:	d1e9      	bne.n	8002d24 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002d50:	6823      	ldr	r3, [r4, #0]
 8002d52:	4620      	mov	r0, r4
 8002d54:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 8002d58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002d5c:	4718      	bx	r3

08002d5e <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void BackUpScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8002d5e:	b538      	push	{r3, r4, r5, lr}
    if (&src == &SELECT)
 8002d60:	f500 730e 	add.w	r3, r0, #568	@ 0x238
 8002d64:	4299      	cmp	r1, r3
{
 8002d66:	4604      	mov	r4, r0
 8002d68:	460d      	mov	r5, r1
    if (&src == &SELECT)
 8002d6a:	d103      	bne.n	8002d74 <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~BackUpScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d6c:	f018 fb4a 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Select
        //When SELECT clicked change screen to Character_2
        //Go to Character_2 with no screen transition
        application().gotoCharacter_2ScreenNoTransition();
 8002d70:	f001 f91e 	bl	8003fb0 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>
    }
    if (&src == &PLAY)
 8002d74:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 8002d78:	429d      	cmp	r5, r3
 8002d7a:	d103      	bne.n	8002d84 <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 8002d7c:	f018 fb42 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //PLAY
        //When PLAY clicked change screen to Character_2
        //Go to Character_2 with no screen transition
        application().gotoCharacter_2ScreenNoTransition();
 8002d80:	f001 f916 	bl	8003fb0 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>
    }
    if (&src == &REWARD)
 8002d84:	f504 74a4 	add.w	r4, r4, #328	@ 0x148
 8002d88:	42a5      	cmp	r5, r4
 8002d8a:	d105      	bne.n	8002d98 <_ZN20BackUpScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
 8002d8c:	f018 fb3a 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //REWARD
        //When REWARD clicked change screen to RewardScreen
        //Go to RewardScreen with no screen transition
        application().gotoRewardScreenScreenNoTransition();
    }
}
 8002d90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoRewardScreenScreenNoTransition();
 8002d94:	f001 b91c 	b.w	8003fd0 <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv>
}
 8002d98:	bd38      	pop	{r3, r4, r5, pc}

08002d9a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002d9a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002d9c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002d9e:	4604      	mov	r4, r0
        setX(x);
 8002da0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002da2:	4615      	mov	r5, r2
        setX(x);
 8002da4:	4798      	blx	r3
        setY(y);
 8002da6:	6823      	ldr	r3, [r4, #0]
 8002da8:	4629      	mov	r1, r5
 8002daa:	4620      	mov	r0, r4
 8002dac:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002dae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002db2:	4718      	bx	r3

08002db4 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002db4:	b570      	push	{r4, r5, r6, lr}
 8002db6:	4604      	mov	r4, r0
 8002db8:	461d      	mov	r5, r3
 8002dba:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002dbe:	f7ff ffec 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002dc2:	6823      	ldr	r3, [r4, #0]
 8002dc4:	4629      	mov	r1, r5
 8002dc6:	4620      	mov	r0, r4
 8002dc8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002dca:	4798      	blx	r3
        setHeight(height);
 8002dcc:	6823      	ldr	r3, [r4, #0]
 8002dce:	4631      	mov	r1, r6
 8002dd0:	4620      	mov	r0, r4
 8002dd2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002dd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002dd8:	4718      	bx	r3
	...

08002ddc <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 8002ddc:	4a09      	ldr	r2, [pc, #36]	@ (8002e04 <_ZN8touchgfx3BoxC1Ev+0x28>)
 8002dde:	6002      	str	r2, [r0, #0]
          touchable(false),
 8002de0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002de4:	2200      	movs	r2, #0
 8002de6:	8481      	strh	r1, [r0, #36]	@ 0x24
 8002de8:	21ff      	movs	r1, #255	@ 0xff
 8002dea:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002dee:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002df2:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002df6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002dfa:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 8002dfe:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8002e00:	4770      	bx	lr
 8002e02:	bf00      	nop
 8002e04:	080333f8 	.word	0x080333f8

08002e08 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>:
        handleAlphaUpdated();
 8002e08:	6803      	ldr	r3, [r0, #0]
        alpha = newAlpha;
 8002e0a:	f880 102d 	strb.w	r1, [r0, #45]	@ 0x2d
        handleAlphaUpdated();
 8002e0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002e12:	4718      	bx	r3

08002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e14:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
    BoxWithBorderButtonStyle()
 8002e18:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 8002e1a:	4606      	mov	r6, r0
 8002e1c:	8583      	strh	r3, [r0, #44]	@ 0x2c
        touchable = touch;
 8002e1e:	f240 1301 	movw	r3, #257	@ 0x101
          firstChild(0)
 8002e22:	2500      	movs	r5, #0
 8002e24:	8483      	strh	r3, [r0, #36]	@ 0x24
 8002e26:	4b12      	ldr	r3, [pc, #72]	@ (8002e70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 8002e28:	6285      	str	r5, [r0, #40]	@ 0x28
        : x(0), y(0), width(0), height(0)
 8002e2a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e2e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8002e32:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8002e36:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e3a:	6305      	str	r5, [r0, #48]	@ 0x30
 8002e3c:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 8002e40:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e42:	4630      	mov	r0, r6
 8002e44:	f7ff ffca 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8002e48:	4b0a      	ldr	r3, [pc, #40]	@ (8002e74 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 8002e4a:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 8002e4c:	462a      	mov	r2, r5
 8002e4e:	4629      	mov	r1, r5
 8002e50:	4630      	mov	r0, r6
        : color(0)
 8002e52:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 8002e56:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 8002e5a:	6625      	str	r5, [r4, #96]	@ 0x60
 8002e5c:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 8002e60:	f7ff ff9b 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e64:	4620      	mov	r0, r4
 8002e66:	4631      	mov	r1, r6
 8002e68:	f012 f948 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	bd70      	pop	{r4, r5, r6, pc}
 8002e70:	08031a6c 	.word	0x08031a6c
 8002e74:	08033460 	.word	0x08033460

08002e78 <_ZN20BackUpScreenViewBaseC1Ev>:
BackUpScreenViewBase::BackUpScreenViewBase() :
 8002e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e7c:	4604      	mov	r4, r0
 8002e7e:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &BackUpScreenViewBase::flexButtonCallbackHandler)
 8002e80:	46a2      	mov	sl, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002e82:	2500      	movs	r5, #0
 8002e84:	f01a fae4 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8002e88:	4ba9      	ldr	r3, [pc, #676]	@ (8003130 <_ZN20BackUpScreenViewBaseC1Ev+0x2b8>)
 8002e8a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002e8c:	f84a 3b40 	str.w	r3, [sl], #64
 8002e90:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8002e94:	4650      	mov	r0, sl
 8002e96:	f7ff ffa1 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8002e9a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e9e:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 8002ea2:	a907      	add	r1, sp, #28
 8002ea4:	4648      	mov	r0, r9
 8002ea6:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8002eaa:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002eae:	f014 ffff 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002eb2:	a907      	add	r1, sp, #28
 8002eb4:	4640      	mov	r0, r8
 8002eb6:	f104 06f0 	add.w	r6, r4, #240	@ 0xf0
 8002eba:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002ebe:	f014 fff7 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002ec2:	a907      	add	r1, sp, #28
 8002ec4:	4638      	mov	r0, r7
 8002ec6:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002eca:	f014 fff1 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002ece:	a907      	add	r1, sp, #28
 8002ed0:	4630      	mov	r0, r6
 8002ed2:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002ed6:	f014 ffeb 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002eda:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8002ede:	a907      	add	r1, sp, #28
 8002ee0:	4618      	mov	r0, r3
 8002ee2:	9302      	str	r3, [sp, #8]
 8002ee4:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002ee8:	f014 ffe2 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002eec:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8002ef0:	4618      	mov	r0, r3
 8002ef2:	9303      	str	r3, [sp, #12]
 8002ef4:	f7ff ff8e 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002ef8:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 8002efc:	4618      	mov	r0, r3
 8002efe:	9304      	str	r3, [sp, #16]
 8002f00:	f7ff ff88 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002f04:	f504 730e 	add.w	r3, r4, #568	@ 0x238
 8002f08:	4618      	mov	r0, r3
 8002f0a:	9305      	str	r3, [sp, #20]
 8002f0c:	f7ff ff82 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f10:	4b88      	ldr	r3, [pc, #544]	@ (8003134 <_ZN20BackUpScreenViewBaseC1Ev+0x2bc>)
 8002f12:	e9c4 34ac 	strd	r3, r4, [r4, #688]	@ 0x2b0
 8002f16:	4b88      	ldr	r3, [pc, #544]	@ (8003138 <_ZN20BackUpScreenViewBaseC1Ev+0x2c0>)
 8002f18:	e9c4 35ae 	strd	r3, r5, [r4, #696]	@ 0x2b8
    __background.setPosition(0, 0, 240, 320);
 8002f1c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002f20:	462a      	mov	r2, r5
 8002f22:	9300      	str	r3, [sp, #0]
 8002f24:	4629      	mov	r1, r5
 8002f26:	4650      	mov	r0, sl
 8002f28:	23f0      	movs	r3, #240	@ 0xf0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002f2a:	f104 0b04 	add.w	fp, r4, #4
 8002f2e:	f7ff ff41 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002f32:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002f36:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002f38:	4651      	mov	r1, sl
 8002f3a:	4658      	mov	r0, fp
 8002f3c:	f012 f8de 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f40:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 8002f42:	a907      	add	r1, sp, #28
 8002f44:	4648      	mov	r0, r9
 8002f46:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002f4a:	f015 fe4d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8002f4e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002f52:	462a      	mov	r2, r5
 8002f54:	9300      	str	r3, [sp, #0]
 8002f56:	4629      	mov	r1, r5
 8002f58:	23f0      	movs	r3, #240	@ 0xf0
 8002f5a:	4648      	mov	r0, r9
 8002f5c:	f7ff ff2a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002f60:	4629      	mov	r1, r5
 8002f62:	4648      	mov	r0, r9
 8002f64:	f014 ff5f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002f68:	4649      	mov	r1, r9
 8002f6a:	4658      	mov	r0, fp
 8002f6c:	f012 f8c6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f70:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 8002f72:	a907      	add	r1, sp, #28
 8002f74:	4640      	mov	r0, r8
 8002f76:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002f7a:	f015 fe35 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 8002f7e:	2370      	movs	r3, #112	@ 0x70
 8002f80:	220e      	movs	r2, #14
 8002f82:	9300      	str	r3, [sp, #0]
 8002f84:	4640      	mov	r0, r8
 8002f86:	239e      	movs	r3, #158	@ 0x9e
 8002f88:	2129      	movs	r1, #41	@ 0x29
 8002f8a:	f7ff ff13 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002f8e:	4629      	mov	r1, r5
 8002f90:	4640      	mov	r0, r8
 8002f92:	f014 ff48 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002f96:	4641      	mov	r1, r8
 8002f98:	4658      	mov	r0, fp
 8002f9a:	f012 f8af 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f9e:	234a      	movs	r3, #74	@ 0x4a
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA2_ID));
 8002fa0:	a907      	add	r1, sp, #28
 8002fa2:	4638      	mov	r0, r7
 8002fa4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002fa8:	f015 fe1e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(64, 146, 110, 73);
 8002fac:	2349      	movs	r3, #73	@ 0x49
 8002fae:	2292      	movs	r2, #146	@ 0x92
 8002fb0:	9300      	str	r3, [sp, #0]
 8002fb2:	4638      	mov	r0, r7
 8002fb4:	236e      	movs	r3, #110	@ 0x6e
 8002fb6:	2140      	movs	r1, #64	@ 0x40
 8002fb8:	f7ff fefc 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002fbc:	4629      	mov	r1, r5
 8002fbe:	4638      	mov	r0, r7
 8002fc0:	f014 ff31 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002fc4:	4639      	mov	r1, r7
 8002fc6:	4658      	mov	r0, fp
 8002fc8:	f012 f898 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002fcc:	233c      	movs	r3, #60	@ 0x3c
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8002fce:	a907      	add	r1, sp, #28
 8002fd0:	4630      	mov	r0, r6
 8002fd2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002fd6:	f015 fe07 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 8002fda:	2341      	movs	r3, #65	@ 0x41
 8002fdc:	22db      	movs	r2, #219	@ 0xdb
 8002fde:	9300      	str	r3, [sp, #0]
 8002fe0:	4630      	mov	r0, r6
 8002fe2:	237c      	movs	r3, #124	@ 0x7c
 8002fe4:	2139      	movs	r1, #57	@ 0x39
 8002fe6:	f7ff fee5 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002fea:	4629      	mov	r1, r5
 8002fec:	4630      	mov	r0, r6
 8002fee:	f014 ff1a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002ff2:	4631      	mov	r1, r6
 8002ff4:	4658      	mov	r0, fp
 8002ff6:	f012 f881 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 8002ffa:	9802      	ldr	r0, [sp, #8]
        down = colorPressed;
 8002ffc:	4f4f      	ldr	r7, [pc, #316]	@ (800313c <_ZN20BackUpScreenViewBaseC1Ev+0x2c4>)
 8002ffe:	f8df a148 	ldr.w	sl, [pc, #328]	@ 8003148 <_ZN20BackUpScreenViewBaseC1Ev+0x2d0>
 8003002:	2357      	movs	r3, #87	@ 0x57
 8003004:	a907      	add	r1, sp, #28
 8003006:	f8ad 301c 	strh.w	r3, [sp, #28]
 800300a:	f015 fded 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 800300e:	2324      	movs	r3, #36	@ 0x24
 8003010:	f44f 728c 	mov.w	r2, #280	@ 0x118
 8003014:	9802      	ldr	r0, [sp, #8]
 8003016:	9300      	str	r3, [sp, #0]
 8003018:	21b8      	movs	r1, #184	@ 0xb8
 800301a:	2337      	movs	r3, #55	@ 0x37
 800301c:	f7ff feca 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003020:	9802      	ldr	r0, [sp, #8]
 8003022:	4629      	mov	r1, r5
 8003024:	f014 feff 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 8003028:	f04f 092c 	mov.w	r9, #44	@ 0x2c
 800302c:	9902      	ldr	r1, [sp, #8]
 800302e:	4658      	mov	r0, fp
 8003030:	f012 f864 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003034:	4629      	mov	r1, r5
 8003036:	f8cd 9000 	str.w	r9, [sp]
 800303a:	462a      	mov	r2, r5
 800303c:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 8003040:	2337      	movs	r3, #55	@ 0x37
 8003042:	f7ff feb7 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003046:	4b3e      	ldr	r3, [pc, #248]	@ (8003140 <_ZN20BackUpScreenViewBaseC1Ev+0x2c8>)
 8003048:	4a3e      	ldr	r2, [pc, #248]	@ (8003144 <_ZN20BackUpScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 800304a:	9803      	ldr	r0, [sp, #12]
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800304c:	f04f 0805 	mov.w	r8, #5
        borderDown = borderColorPressed;
 8003050:	e9c4 326e 	strd	r3, r2, [r4, #440]	@ 0x1b8
        down = colorPressed;
 8003054:	e9c4 7a6c 	strd	r7, sl, [r4, #432]	@ 0x1b0
 8003058:	f8a4 81ac 	strh.w	r8, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 800305c:	f7ff fe02 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    REWARD.setAction(flexButtonCallback);
 8003060:	f504 762c 	add.w	r6, r4, #688	@ 0x2b0
    REWARD.setAlpha(6);
 8003064:	9803      	ldr	r0, [sp, #12]
 8003066:	2106      	movs	r1, #6
 8003068:	f7ff fece 	bl	8002e08 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    REWARD.setPosition(184, 276, 55, 44);
 800306c:	9803      	ldr	r0, [sp, #12]
        action = &callback;
 800306e:	f8c4 6178 	str.w	r6, [r4, #376]	@ 0x178
 8003072:	2337      	movs	r3, #55	@ 0x37
 8003074:	f8cd 9000 	str.w	r9, [sp]
 8003078:	f44f 728a 	mov.w	r2, #276	@ 0x114
 800307c:	21b8      	movs	r1, #184	@ 0xb8
 800307e:	f7ff fe99 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8003082:	f04f 0936 	mov.w	r9, #54	@ 0x36
 8003086:	9903      	ldr	r1, [sp, #12]
 8003088:	4658      	mov	r0, fp
 800308a:	f012 f837 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800308e:	4629      	mov	r1, r5
 8003090:	462a      	mov	r2, r5
 8003092:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 8003096:	f8cd 9000 	str.w	r9, [sp]
 800309a:	2366      	movs	r3, #102	@ 0x66
 800309c:	f7ff fe8a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 80030a0:	4b27      	ldr	r3, [pc, #156]	@ (8003140 <_ZN20BackUpScreenViewBaseC1Ev+0x2c8>)
 80030a2:	4a28      	ldr	r2, [pc, #160]	@ (8003144 <_ZN20BackUpScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 80030a4:	9804      	ldr	r0, [sp, #16]
 80030a6:	f8a4 8224 	strh.w	r8, [r4, #548]	@ 0x224
        borderDown = borderColorPressed;
 80030aa:	e9c4 328c 	strd	r3, r2, [r4, #560]	@ 0x230
        down = colorPressed;
 80030ae:	e9c4 7a8a 	strd	r7, sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 80030b2:	f7ff fdd7 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    PLAY.setAlpha(6);
 80030b6:	9804      	ldr	r0, [sp, #16]
 80030b8:	2106      	movs	r1, #6
 80030ba:	f7ff fea5 	bl	8002e08 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    PLAY.setPosition(69, 224, 102, 54);
 80030be:	9804      	ldr	r0, [sp, #16]
 80030c0:	f8c4 61f0 	str.w	r6, [r4, #496]	@ 0x1f0
 80030c4:	2366      	movs	r3, #102	@ 0x66
 80030c6:	22e0      	movs	r2, #224	@ 0xe0
 80030c8:	f8cd 9000 	str.w	r9, [sp]
 80030cc:	2145      	movs	r1, #69	@ 0x45
 80030ce:	f7ff fe71 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030d2:	9904      	ldr	r1, [sp, #16]
 80030d4:	4658      	mov	r0, fp
 80030d6:	f012 f811 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 80030da:	4629      	mov	r1, r5
 80030dc:	462a      	mov	r2, r5
 80030de:	f504 701b 	add.w	r0, r4, #620	@ 0x26c
 80030e2:	f8cd 9000 	str.w	r9, [sp]
 80030e6:	2366      	movs	r3, #102	@ 0x66
 80030e8:	f7ff fe64 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 80030ec:	4b14      	ldr	r3, [pc, #80]	@ (8003140 <_ZN20BackUpScreenViewBaseC1Ev+0x2c8>)
 80030ee:	4a15      	ldr	r2, [pc, #84]	@ (8003144 <_ZN20BackUpScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 80030f0:	9805      	ldr	r0, [sp, #20]
 80030f2:	f8a4 829c 	strh.w	r8, [r4, #668]	@ 0x29c
        borderDown = borderColorPressed;
 80030f6:	e9c4 32aa 	strd	r3, r2, [r4, #680]	@ 0x2a8
        down = colorPressed;
 80030fa:	e9c4 7aa8 	strd	r7, sl, [r4, #672]	@ 0x2a0
        handlePressedUpdated();
 80030fe:	f7ff fdb1 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    SELECT.setAlpha(6);
 8003102:	9805      	ldr	r0, [sp, #20]
 8003104:	2106      	movs	r1, #6
 8003106:	f7ff fe7f 	bl	8002e08 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    SELECT.setPosition(68, 160, 102, 54);
 800310a:	9805      	ldr	r0, [sp, #20]
 800310c:	f8c4 6268 	str.w	r6, [r4, #616]	@ 0x268
 8003110:	2366      	movs	r3, #102	@ 0x66
 8003112:	22a0      	movs	r2, #160	@ 0xa0
 8003114:	f8cd 9000 	str.w	r9, [sp]
 8003118:	2144      	movs	r1, #68	@ 0x44
 800311a:	f7ff fe4b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800311e:	4658      	mov	r0, fp
 8003120:	9905      	ldr	r1, [sp, #20]
 8003122:	f011 ffeb 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003126:	4620      	mov	r0, r4
 8003128:	b009      	add	sp, #36	@ 0x24
 800312a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800312e:	bf00      	nop
 8003130:	08031b20 	.word	0x08031b20
 8003134:	08031b08 	.word	0x08031b08
 8003138:	08002d5f 	.word	0x08002d5f
 800313c:	ff006699 	.word	0xff006699
 8003140:	ff003366 	.word	0xff003366
 8003144:	ff336699 	.word	0xff336699
 8003148:	ff0099cc 	.word	0xff0099cc

0800314c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800314c:	4800      	ldr	r0, [pc, #0]	@ (8003150 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800314e:	4770      	bx	lr
 8003150:	08031b4c 	.word	0x08031b4c

08003154 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003154:	205a      	movs	r0, #90	@ 0x5a
 8003156:	4770      	bx	lr

08003158 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8003158:	b513      	push	{r0, r1, r4, lr}
 800315a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800315c:	b151      	cbz	r1, 8003174 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800315e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8003160:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8003162:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003166:	aa01      	add	r2, sp, #4
 8003168:	689c      	ldr	r4, [r3, #8]
 800316a:	f10d 0303 	add.w	r3, sp, #3
 800316e:	47a0      	blx	r4
        return glyph;
    }
 8003170:	b002      	add	sp, #8
 8003172:	bd10      	pop	{r4, pc}
            return 0;
 8003174:	4608      	mov	r0, r1
 8003176:	e7fb      	b.n	8003170 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003178 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003178:	89c0      	ldrh	r0, [r0, #14]
 800317a:	4770      	bx	lr

0800317c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800317c:	8a00      	ldrh	r0, [r0, #16]
 800317e:	4770      	bx	lr

08003180 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8003180:	88c0      	ldrh	r0, [r0, #6]
 8003182:	4770      	bx	lr

08003184 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8003184:	8880      	ldrh	r0, [r0, #4]
 8003186:	4770      	bx	lr

08003188 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8003188:	7a80      	ldrb	r0, [r0, #10]
    }
 800318a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800318e:	4770      	bx	lr

08003190 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8003190:	7a80      	ldrb	r0, [r0, #10]
    }
 8003192:	09c0      	lsrs	r0, r0, #7
 8003194:	4770      	bx	lr

08003196 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8003196:	2000      	movs	r0, #0
 8003198:	4770      	bx	lr
	...

0800319c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 800319c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80031a4 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80031a0:	4770      	bx	lr
 80031a2:	bf00      	nop
 80031a4:	00000000 	.word	0x00000000

080031a8 <_ZN8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031a8:	4770      	bx	lr

080031aa <_ZN18Character1ViewBaseD1Ev>:
}

Character1ViewBase::~Character1ViewBase()
{

}
 80031aa:	4770      	bx	lr

080031ac <_ZN18Character1ViewBase11setupScreenEv>:

void Character1ViewBase::setupScreen()
{

}
 80031ac:	4770      	bx	lr

080031ae <_ZN8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80031ae:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80031b0:	68c2      	ldr	r2, [r0, #12]
 80031b2:	6844      	ldr	r4, [r0, #4]
 80031b4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80031b6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80031b8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80031bc:	07d2      	lsls	r2, r2, #31
 80031be:	bf48      	it	mi
 80031c0:	5962      	ldrmi	r2, [r4, r5]
 80031c2:	689b      	ldr	r3, [r3, #8]
    }
 80031c4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80031c6:	bf48      	it	mi
 80031c8:	58d3      	ldrmi	r3, [r2, r3]
 80031ca:	4718      	bx	r3

080031cc <_ZNK8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80031cc:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80031ce:	6840      	ldr	r0, [r0, #4]
 80031d0:	b130      	cbz	r0, 80031e0 <_ZNK8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80031d2:	689a      	ldr	r2, [r3, #8]
 80031d4:	b91a      	cbnz	r2, 80031de <_ZNK8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80031d6:	68d8      	ldr	r0, [r3, #12]
 80031d8:	f000 0001 	and.w	r0, r0, #1
 80031dc:	4770      	bx	lr
 80031de:	2001      	movs	r0, #1
    }
 80031e0:	4770      	bx	lr

080031e2 <_ZN8touchgfx8CallbackI18Character1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031e2:	b510      	push	{r4, lr}
 80031e4:	2110      	movs	r1, #16
 80031e6:	4604      	mov	r4, r0
 80031e8:	f02a fb9d 	bl	802d926 <_ZdlPvj>
 80031ec:	4620      	mov	r0, r4
 80031ee:	bd10      	pop	{r4, pc}

080031f0 <_ZN18Character1ViewBaseD0Ev>:
Character1ViewBase::~Character1ViewBase()
 80031f0:	b510      	push	{r4, lr}
}
 80031f2:	f44f 7190 	mov.w	r1, #288	@ 0x120
Character1ViewBase::~Character1ViewBase()
 80031f6:	4604      	mov	r4, r0
}
 80031f8:	f02a fb95 	bl	802d926 <_ZdlPvj>
 80031fc:	4620      	mov	r0, r4
 80031fe:	bd10      	pop	{r4, pc}

08003200 <_ZN18Character1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Character1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &GoHome)
 8003200:	3098      	adds	r0, #152	@ 0x98
 8003202:	4288      	cmp	r0, r1
{
 8003204:	b508      	push	{r3, lr}
    if (&src == &GoHome)
 8003206:	d105      	bne.n	8003214 <_ZN18Character1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~Character1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003208:	f018 f8fc 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When GoHome clicked change screen to SakuraFinalScreen
        //Go to SakuraFinalScreen with no screen transition
        application().gotoSakuraFinalScreenScreenNoTransition();
    }
}
 800320c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraFinalScreenScreenNoTransition();
 8003210:	f000 bf2e 	b.w	8004070 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>
}
 8003214:	bd08      	pop	{r3, pc}
	...

08003218 <_ZN18Character1ViewBaseC1Ev>:
Character1ViewBase::Character1ViewBase() :
 8003218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800321c:	4604      	mov	r4, r0
 800321e:	b085      	sub	sp, #20
    flexButtonCallback(this, &Character1ViewBase::flexButtonCallbackHandler)
 8003220:	46a0      	mov	r8, r4
 8003222:	2500      	movs	r5, #0
 8003224:	f01a f914 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8003228:	4b57      	ldr	r3, [pc, #348]	@ (8003388 <_ZN18Character1ViewBaseC1Ev+0x170>)
 800322a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 800322c:	f848 3b40 	str.w	r3, [r8], #64
 8003230:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8003234:	4640      	mov	r0, r8
 8003236:	f7ff fdd1 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 800323a:	a903      	add	r1, sp, #12
 800323c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8003240:	4638      	mov	r0, r7
 8003242:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003246:	f014 fe33 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 800324a:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 800324e:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
        touchable = touch;
 8003252:	f240 1301 	movw	r3, #257	@ 0x101
        : Box(), borderColor(0), borderSize(0)
 8003256:	f104 09cc 	add.w	r9, r4, #204	@ 0xcc
 800325a:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
        : T(), up(), down()
 800325e:	4b4b      	ldr	r3, [pc, #300]	@ (800338c <_ZN18Character1ViewBaseC1Ev+0x174>)
 8003260:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
        : x(0), y(0), width(0), height(0)
 8003264:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
 8003268:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
 800326c:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
 8003270:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
 8003274:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
 8003278:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 800327c:	4648      	mov	r0, r9
 800327e:	f7ff fdad 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8003282:	4b43      	ldr	r3, [pc, #268]	@ (8003390 <_ZN18Character1ViewBaseC1Ev+0x178>)
 8003284:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
 8003288:	f104 0698 	add.w	r6, r4, #152	@ 0x98
        borderBox.setXY(0, 0);
 800328c:	462a      	mov	r2, r5
        : color(0)
 800328e:	e9c4 5540 	strd	r5, r5, [r4, #256]	@ 0x100
 8003292:	e9c4 5542 	strd	r5, r5, [r4, #264]	@ 0x108
        : color(col)
 8003296:	f8c4 50f8 	str.w	r5, [r4, #248]	@ 0xf8
 800329a:	f8a4 50fc 	strh.w	r5, [r4, #252]	@ 0xfc
 800329e:	4629      	mov	r1, r5
 80032a0:	4648      	mov	r0, r9
 80032a2:	f7ff fd7a 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80032a6:	4649      	mov	r1, r9
 80032a8:	4630      	mov	r0, r6
 80032aa:	f011 ff27 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 80032ae:	4b39      	ldr	r3, [pc, #228]	@ (8003394 <_ZN18Character1ViewBaseC1Ev+0x17c>)
 80032b0:	e9c4 3444 	strd	r3, r4, [r4, #272]	@ 0x110
 80032b4:	4b38      	ldr	r3, [pc, #224]	@ (8003398 <_ZN18Character1ViewBaseC1Ev+0x180>)
    __background.setPosition(0, 0, 240, 320);
 80032b6:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
 80032ba:	e9c4 3546 	strd	r3, r5, [r4, #280]	@ 0x118
 80032be:	462a      	mov	r2, r5
 80032c0:	4629      	mov	r1, r5
 80032c2:	4640      	mov	r0, r8
 80032c4:	f8cd b000 	str.w	fp, [sp]
 80032c8:	23f0      	movs	r3, #240	@ 0xf0
 80032ca:	f7ff fd73 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032ce:	f104 0a04 	add.w	sl, r4, #4
 80032d2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80032d6:	66a3      	str	r3, [r4, #104]	@ 0x68
 80032d8:	4641      	mov	r1, r8
 80032da:	4650      	mov	r0, sl
 80032dc:	f011 ff0e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032e0:	231d      	movs	r3, #29
    background.setBitmap(touchgfx::Bitmap(BITMAP_CELEBRATE_ID));
 80032e2:	a903      	add	r1, sp, #12
 80032e4:	4638      	mov	r0, r7
 80032e6:	f8ad 300c 	strh.w	r3, [sp, #12]
 80032ea:	f015 fc7d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 80032ee:	462a      	mov	r2, r5
 80032f0:	23f0      	movs	r3, #240	@ 0xf0
 80032f2:	4629      	mov	r1, r5
 80032f4:	4638      	mov	r0, r7
 80032f6:	f8cd b000 	str.w	fp, [sp]
 80032fa:	f7ff fd5b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80032fe:	4629      	mov	r1, r5
 8003300:	4638      	mov	r0, r7
 8003302:	f014 fd90 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003306:	4639      	mov	r1, r7
 8003308:	4650      	mov	r0, sl
        borderBox.setPosition(x, y, width, height);
 800330a:	274d      	movs	r7, #77	@ 0x4d
 800330c:	f011 fef6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003310:	462a      	mov	r2, r5
 8003312:	4629      	mov	r1, r5
 8003314:	4648      	mov	r0, r9
 8003316:	9700      	str	r7, [sp, #0]
 8003318:	2370      	movs	r3, #112	@ 0x70
 800331a:	f7ff fd4b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 800331e:	2305      	movs	r3, #5
 8003320:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
        up = colorReleased;
 8003324:	4b1d      	ldr	r3, [pc, #116]	@ (800339c <_ZN18Character1ViewBaseC1Ev+0x184>)
 8003326:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
        down = colorPressed;
 800332a:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 800332e:	3333      	adds	r3, #51	@ 0x33
 8003330:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        borderUp = borderColorReleased;
 8003334:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8003338:	3b66      	subs	r3, #102	@ 0x66
 800333a:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
        borderDown = borderColorPressed;
 800333e:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8003342:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8003346:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
        handlePressedUpdated();
 800334a:	4630      	mov	r0, r6
 800334c:	f8d4 5098 	ldr.w	r5, [r4, #152]	@ 0x98
 8003350:	f7ff fc88 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8003354:	2306      	movs	r3, #6
 8003356:	f884 30c5 	strb.w	r3, [r4, #197]	@ 0xc5
        handleAlphaUpdated();
 800335a:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 800335e:	4630      	mov	r0, r6
 8003360:	4798      	blx	r3
    GoHome.setAction(flexButtonCallback);
 8003362:	f504 7388 	add.w	r3, r4, #272	@ 0x110
        action = &callback;
 8003366:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    GoHome.setPosition(61, 23, 112, 77);
 800336a:	2217      	movs	r2, #23
 800336c:	2370      	movs	r3, #112	@ 0x70
 800336e:	4630      	mov	r0, r6
 8003370:	9700      	str	r7, [sp, #0]
 8003372:	213d      	movs	r1, #61	@ 0x3d
 8003374:	f7ff fd1e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003378:	4650      	mov	r0, sl
 800337a:	4631      	mov	r1, r6
 800337c:	f011 febe 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003380:	4620      	mov	r0, r4
 8003382:	b005      	add	sp, #20
 8003384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003388:	08032274 	.word	0x08032274
 800338c:	08031a6c 	.word	0x08031a6c
 8003390:	08033460 	.word	0x08033460
 8003394:	0803225c 	.word	0x0803225c
 8003398:	08003201 	.word	0x08003201
 800339c:	ff006699 	.word	0xff006699

080033a0 <_ZN8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80033a0:	4770      	bx	lr

080033a2 <_ZN17CharacterViewBaseD1Ev>:
}

CharacterViewBase::~CharacterViewBase()
{

}
 80033a2:	4770      	bx	lr

080033a4 <_ZN17CharacterViewBase11setupScreenEv>:

void CharacterViewBase::setupScreen()
{

}
 80033a4:	4770      	bx	lr

080033a6 <_ZN8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80033a6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80033a8:	68c2      	ldr	r2, [r0, #12]
 80033aa:	6844      	ldr	r4, [r0, #4]
 80033ac:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80033ae:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80033b0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80033b4:	07d2      	lsls	r2, r2, #31
 80033b6:	bf48      	it	mi
 80033b8:	5962      	ldrmi	r2, [r4, r5]
 80033ba:	689b      	ldr	r3, [r3, #8]
    }
 80033bc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80033be:	bf48      	it	mi
 80033c0:	58d3      	ldrmi	r3, [r2, r3]
 80033c2:	4718      	bx	r3

080033c4 <_ZNK8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80033c4:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80033c6:	6840      	ldr	r0, [r0, #4]
 80033c8:	b130      	cbz	r0, 80033d8 <_ZNK8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80033ca:	689a      	ldr	r2, [r3, #8]
 80033cc:	b91a      	cbnz	r2, 80033d6 <_ZNK8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80033ce:	68d8      	ldr	r0, [r3, #12]
 80033d0:	f000 0001 	and.w	r0, r0, #1
 80033d4:	4770      	bx	lr
 80033d6:	2001      	movs	r0, #1
    }
 80033d8:	4770      	bx	lr

080033da <_ZN8touchgfx8CallbackI17CharacterViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80033da:	b510      	push	{r4, lr}
 80033dc:	2110      	movs	r1, #16
 80033de:	4604      	mov	r4, r0
 80033e0:	f02a faa1 	bl	802d926 <_ZdlPvj>
 80033e4:	4620      	mov	r0, r4
 80033e6:	bd10      	pop	{r4, pc}

080033e8 <_ZN17CharacterViewBaseD0Ev>:
CharacterViewBase::~CharacterViewBase()
 80033e8:	b510      	push	{r4, lr}
}
 80033ea:	f44f 7115 	mov.w	r1, #596	@ 0x254
CharacterViewBase::~CharacterViewBase()
 80033ee:	4604      	mov	r4, r0
}
 80033f0:	f02a fa99 	bl	802d926 <_ZdlPvj>
 80033f4:	4620      	mov	r0, r4
 80033f6:	bd10      	pop	{r4, pc}

080033f8 <_ZN17CharacterViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CharacterViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &MAINMENU_BUT)
 80033f8:	f500 70e6 	add.w	r0, r0, #460	@ 0x1cc
 80033fc:	4288      	cmp	r0, r1
{
 80033fe:	b508      	push	{r3, lr}
    if (&src == &MAINMENU_BUT)
 8003400:	d105      	bne.n	800340e <_ZN17CharacterViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~CharacterViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003402:	f017 ffff 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When MAINMENU_BUT clicked change screen to MainMenuScreen
        //Go to MainMenuScreen with no screen transition
        application().gotoMainMenuScreenScreenNoTransition();
    }
}
 8003406:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainMenuScreenScreenNoTransition();
 800340a:	f000 bd91 	b.w	8003f30 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>
}
 800340e:	bd08      	pop	{r3, pc}

08003410 <_ZN17CharacterViewBaseC1Ev>:
CharacterViewBase::CharacterViewBase() :
 8003410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003414:	4604      	mov	r4, r0
 8003416:	b08b      	sub	sp, #44	@ 0x2c
    flexButtonCallback(this, &CharacterViewBase::flexButtonCallbackHandler)
 8003418:	46a2      	mov	sl, r4
 800341a:	2500      	movs	r5, #0
 800341c:	f01a f818 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8003420:	4bc4      	ldr	r3, [pc, #784]	@ (8003734 <_ZN17CharacterViewBaseC1Ev+0x324>)
 8003422:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003424:	f84a 3b40 	str.w	r3, [sl], #64
 8003428:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 800342c:	4650      	mov	r0, sl
 800342e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003432:	f7ff fcd3 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8003436:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800343a:	a909      	add	r1, sp, #36	@ 0x24
 800343c:	4648      	mov	r0, r9
 800343e:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8003442:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003446:	f014 fd33 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800344a:	a909      	add	r1, sp, #36	@ 0x24
 800344c:	4640      	mov	r0, r8
 800344e:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003452:	f014 fd2d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003456:	a909      	add	r1, sp, #36	@ 0x24
 8003458:	4638      	mov	r0, r7
 800345a:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800345e:	f014 fd27 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003462:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8003466:	a909      	add	r1, sp, #36	@ 0x24
 8003468:	4618      	mov	r0, r3
 800346a:	9302      	str	r3, [sp, #8]
 800346c:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003470:	f014 fd1e 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003474:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003478:	a909      	add	r1, sp, #36	@ 0x24
 800347a:	4618      	mov	r0, r3
 800347c:	9303      	str	r3, [sp, #12]
 800347e:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003482:	f014 fd15 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003486:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 800348a:	a909      	add	r1, sp, #36	@ 0x24
 800348c:	4618      	mov	r0, r3
 800348e:	9304      	str	r3, [sp, #16]
 8003490:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8003494:	f014 fd0c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003498:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 800349c:	a909      	add	r1, sp, #36	@ 0x24
 800349e:	4618      	mov	r0, r3
 80034a0:	9305      	str	r3, [sp, #20]
 80034a2:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80034a6:	f014 fd03 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80034aa:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80034ae:	a909      	add	r1, sp, #36	@ 0x24
 80034b0:	4618      	mov	r0, r3
 80034b2:	9306      	str	r3, [sp, #24]
 80034b4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80034b8:	f014 fcfa 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 80034bc:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 80034c0:	f8a4 31f8 	strh.w	r3, [r4, #504]	@ 0x1f8
        touchable = touch;
 80034c4:	f240 1301 	movw	r3, #257	@ 0x101
 80034c8:	f8a4 31f0 	strh.w	r3, [r4, #496]	@ 0x1f0
        : T(), up(), down()
 80034cc:	4b9a      	ldr	r3, [pc, #616]	@ (8003738 <_ZN17CharacterViewBaseC1Ev+0x328>)
 80034ce:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
        : Box(), borderColor(0), borderSize(0)
 80034d2:	f504 7300 	add.w	r3, r4, #512	@ 0x200
        : x(0), y(0), width(0), height(0)
 80034d6:	e9c4 5574 	strd	r5, r5, [r4, #464]	@ 0x1d0
 80034da:	e9c4 5576 	strd	r5, r5, [r4, #472]	@ 0x1d8
          nextSibling(0),
 80034de:	e9c4 5578 	strd	r5, r5, [r4, #480]	@ 0x1e0
          cachedAbsX(0),
 80034e2:	e9c4 557a 	strd	r5, r5, [r4, #488]	@ 0x1e8
 80034e6:	f8c4 51f4 	str.w	r5, [r4, #500]	@ 0x1f4
 80034ea:	f8c4 51fc 	str.w	r5, [r4, #508]	@ 0x1fc
 80034ee:	4618      	mov	r0, r3
 80034f0:	9307      	str	r3, [sp, #28]
 80034f2:	f7ff fc73 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 80034f6:	4b91      	ldr	r3, [pc, #580]	@ (800373c <_ZN17CharacterViewBaseC1Ev+0x32c>)
 80034f8:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
 80034fc:	f504 7be6 	add.w	fp, r4, #460	@ 0x1cc
        borderBox.setXY(0, 0);
 8003500:	462a      	mov	r2, r5
        : color(0)
 8003502:	e9c4 558d 	strd	r5, r5, [r4, #564]	@ 0x234
 8003506:	e9c4 558f 	strd	r5, r5, [r4, #572]	@ 0x23c
 800350a:	9807      	ldr	r0, [sp, #28]
        : color(col)
 800350c:	f8c4 522c 	str.w	r5, [r4, #556]	@ 0x22c
 8003510:	f8a4 5230 	strh.w	r5, [r4, #560]	@ 0x230
 8003514:	4629      	mov	r1, r5
 8003516:	f7ff fc40 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800351a:	9907      	ldr	r1, [sp, #28]
 800351c:	4658      	mov	r0, fp
 800351e:	f011 fded 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003522:	4b87      	ldr	r3, [pc, #540]	@ (8003740 <_ZN17CharacterViewBaseC1Ev+0x330>)
 8003524:	e9c4 3491 	strd	r3, r4, [r4, #580]	@ 0x244
 8003528:	4b86      	ldr	r3, [pc, #536]	@ (8003744 <_ZN17CharacterViewBaseC1Ev+0x334>)
 800352a:	e9c4 3593 	strd	r3, r5, [r4, #588]	@ 0x24c
    __background.setPosition(0, 0, 240, 320);
 800352e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003532:	462a      	mov	r2, r5
 8003534:	9300      	str	r3, [sp, #0]
 8003536:	4629      	mov	r1, r5
 8003538:	4650      	mov	r0, sl
 800353a:	23f0      	movs	r3, #240	@ 0xf0
 800353c:	1d26      	adds	r6, r4, #4
 800353e:	f7ff fc39 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003542:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003546:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003548:	4651      	mov	r1, sl
 800354a:	4630      	mov	r0, r6
 800354c:	f011 fdd6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003550:	233b      	movs	r3, #59	@ 0x3b
    background.setBitmap(touchgfx::Bitmap(BITMAP_PICK_ID));
 8003552:	a909      	add	r1, sp, #36	@ 0x24
 8003554:	4648      	mov	r0, r9
 8003556:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800355a:	f015 fb45 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 800355e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003562:	462a      	mov	r2, r5
 8003564:	9300      	str	r3, [sp, #0]
 8003566:	4629      	mov	r1, r5
 8003568:	23f0      	movs	r3, #240	@ 0xf0
 800356a:	4648      	mov	r0, r9
 800356c:	f7ff fc22 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003570:	4629      	mov	r1, r5
 8003572:	4648      	mov	r0, r9
 8003574:	f014 fc57 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003578:	4649      	mov	r1, r9
 800357a:	4630      	mov	r0, r6
 800357c:	f011 fdbe 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(62, 76, 110, 160);
 8003580:	f04f 09a0 	mov.w	r9, #160	@ 0xa0
 8003584:	2333      	movs	r3, #51	@ 0x33
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 8003586:	a909      	add	r1, sp, #36	@ 0x24
 8003588:	4640      	mov	r0, r8
 800358a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800358e:	f015 fb2b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(62, 76, 110, 160);
 8003592:	224c      	movs	r2, #76	@ 0x4c
 8003594:	236e      	movs	r3, #110	@ 0x6e
 8003596:	4640      	mov	r0, r8
 8003598:	f8cd 9000 	str.w	r9, [sp]
 800359c:	213e      	movs	r1, #62	@ 0x3e
 800359e:	f7ff fc09 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80035a2:	4629      	mov	r1, r5
 80035a4:	4640      	mov	r0, r8
 80035a6:	f014 fc3e 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80035aa:	4641      	mov	r1, r8
 80035ac:	4630      	mov	r0, r6
 80035ae:	f011 fda5 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035b2:	234e      	movs	r3, #78	@ 0x4e
    sponge.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 80035b4:	a909      	add	r1, sp, #36	@ 0x24
 80035b6:	4638      	mov	r0, r7
 80035b8:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80035bc:	f015 fb14 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge.setPosition(57, 65, 132, 185);
 80035c0:	23b9      	movs	r3, #185	@ 0xb9
 80035c2:	2241      	movs	r2, #65	@ 0x41
 80035c4:	9300      	str	r3, [sp, #0]
 80035c6:	4638      	mov	r0, r7
 80035c8:	2384      	movs	r3, #132	@ 0x84
 80035ca:	2139      	movs	r1, #57	@ 0x39
 80035cc:	f7ff fbf2 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80035d0:	4629      	mov	r1, r5
 80035d2:	4638      	mov	r0, r7
 80035d4:	f014 fc27 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        visible = vis;
 80035d8:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 80035dc:	4639      	mov	r1, r7
 80035de:	4630      	mov	r0, r6
 80035e0:	f011 fd8c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura.setPosition(62, 67, 116, 178);
 80035e4:	27b2      	movs	r7, #178	@ 0xb2
    sakura.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 80035e6:	9802      	ldr	r0, [sp, #8]
 80035e8:	2342      	movs	r3, #66	@ 0x42
 80035ea:	a909      	add	r1, sp, #36	@ 0x24
 80035ec:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80035f0:	f015 fafa 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura.setPosition(62, 67, 116, 178);
 80035f4:	2243      	movs	r2, #67	@ 0x43
 80035f6:	2374      	movs	r3, #116	@ 0x74
 80035f8:	9802      	ldr	r0, [sp, #8]
 80035fa:	9700      	str	r7, [sp, #0]
 80035fc:	213e      	movs	r1, #62	@ 0x3e
 80035fe:	f7ff fbd9 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003602:	9802      	ldr	r0, [sp, #8]
 8003604:	4629      	mov	r1, r5
 8003606:	f014 fc0e 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800360a:	9902      	ldr	r1, [sp, #8]
 800360c:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8003610:	4630      	mov	r0, r6
 8003612:	f011 fd73 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura_lock.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_LOCK_ID));
 8003616:	9803      	ldr	r0, [sp, #12]
 8003618:	2345      	movs	r3, #69	@ 0x45
 800361a:	a909      	add	r1, sp, #36	@ 0x24
 800361c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003620:	f015 fae2 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura_lock.setPosition(62, 67, 116, 178);
 8003624:	2243      	movs	r2, #67	@ 0x43
 8003626:	2374      	movs	r3, #116	@ 0x74
 8003628:	9803      	ldr	r0, [sp, #12]
 800362a:	9700      	str	r7, [sp, #0]
 800362c:	213e      	movs	r1, #62	@ 0x3e
 800362e:	f7ff fbc1 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura_lock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003632:	9803      	ldr	r0, [sp, #12]
 8003634:	4629      	mov	r1, r5
 8003636:	f014 fbf6 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800363a:	9903      	ldr	r1, [sp, #12]
 800363c:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 8003640:	4630      	mov	r0, r6
 8003642:	f011 fd5b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sponge_lock.setBitmap(touchgfx::Bitmap(BITMAP_SPONG_LOCK_ID));
 8003646:	9804      	ldr	r0, [sp, #16]
 8003648:	234d      	movs	r3, #77	@ 0x4d
 800364a:	a909      	add	r1, sp, #36	@ 0x24
 800364c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003650:	f015 faca 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge_lock.setPosition(62, 67, 116, 178);
 8003654:	2243      	movs	r2, #67	@ 0x43
 8003656:	2374      	movs	r3, #116	@ 0x74
 8003658:	9804      	ldr	r0, [sp, #16]
 800365a:	9700      	str	r7, [sp, #0]
 800365c:	213e      	movs	r1, #62	@ 0x3e
 800365e:	f7ff fba9 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge_lock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003662:	9804      	ldr	r0, [sp, #16]
 8003664:	4629      	mov	r1, r5
 8003666:	f014 fbde 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800366a:	9904      	ldr	r1, [sp, #16]
 800366c:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 8003670:	4630      	mov	r0, r6
 8003672:	f011 fd43 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    rightarrow.setPosition(197, 135, 42, 54);
 8003676:	2736      	movs	r7, #54	@ 0x36
    rightarrow.setBitmap(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID));
 8003678:	9805      	ldr	r0, [sp, #20]
 800367a:	2341      	movs	r3, #65	@ 0x41
 800367c:	a909      	add	r1, sp, #36	@ 0x24
 800367e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003682:	f015 fab1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    rightarrow.setPosition(197, 135, 42, 54);
 8003686:	2287      	movs	r2, #135	@ 0x87
 8003688:	232a      	movs	r3, #42	@ 0x2a
 800368a:	9805      	ldr	r0, [sp, #20]
 800368c:	9700      	str	r7, [sp, #0]
 800368e:	21c5      	movs	r1, #197	@ 0xc5
 8003690:	f7ff fb90 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    rightarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003694:	9805      	ldr	r0, [sp, #20]
 8003696:	4629      	mov	r1, r5
 8003698:	f014 fbc5 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800369c:	9905      	ldr	r1, [sp, #20]
 800369e:	4630      	mov	r0, r6
 80036a0:	f011 fd2c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    leftarrow.setBitmap(touchgfx::Bitmap(BITMAP_LEFTARROW_ID));
 80036a4:	9806      	ldr	r0, [sp, #24]
 80036a6:	232e      	movs	r3, #46	@ 0x2e
 80036a8:	a909      	add	r1, sp, #36	@ 0x24
 80036aa:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80036ae:	f015 fa9b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    leftarrow.setPosition(0, 135, 42, 54);
 80036b2:	232a      	movs	r3, #42	@ 0x2a
 80036b4:	2287      	movs	r2, #135	@ 0x87
 80036b6:	9806      	ldr	r0, [sp, #24]
 80036b8:	9700      	str	r7, [sp, #0]
 80036ba:	4629      	mov	r1, r5
 80036bc:	f7ff fb7a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    leftarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80036c0:	9806      	ldr	r0, [sp, #24]
 80036c2:	4629      	mov	r1, r5
 80036c4:	f014 fbaf 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80036c8:	9906      	ldr	r1, [sp, #24]
 80036ca:	4630      	mov	r0, r6
 80036cc:	f011 fd16 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 80036d0:	4629      	mov	r1, r5
 80036d2:	9807      	ldr	r0, [sp, #28]
 80036d4:	f8cd 9000 	str.w	r9, [sp]
 80036d8:	462a      	mov	r2, r5
 80036da:	2366      	movs	r3, #102	@ 0x66
 80036dc:	f7ff fb6a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        up = colorReleased;
 80036e0:	f04f 33ff 	mov.w	r3, #4294967295
        borderDown = borderColorPressed;
 80036e4:	4a18      	ldr	r2, [pc, #96]	@ (8003748 <_ZN17CharacterViewBaseC1Ev+0x338>)
        borderSize = size;
 80036e6:	f8a4 5230 	strh.w	r5, [r4, #560]	@ 0x230
        down = colorPressed;
 80036ea:	e9c4 338d 	strd	r3, r3, [r4, #564]	@ 0x234
        borderDown = borderColorPressed;
 80036ee:	4b17      	ldr	r3, [pc, #92]	@ (800374c <_ZN17CharacterViewBaseC1Ev+0x33c>)
        handlePressedUpdated();
 80036f0:	f8d4 51cc 	ldr.w	r5, [r4, #460]	@ 0x1cc
        borderDown = borderColorPressed;
 80036f4:	e9c4 238f 	strd	r2, r3, [r4, #572]	@ 0x23c
        handlePressedUpdated();
 80036f8:	4658      	mov	r0, fp
 80036fa:	f7ff fab3 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 80036fe:	2306      	movs	r3, #6
 8003700:	f884 31f9 	strb.w	r3, [r4, #505]	@ 0x1f9
        handleAlphaUpdated();
 8003704:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8003708:	4658      	mov	r0, fp
 800370a:	4798      	blx	r3
    MAINMENU_BUT.setAction(flexButtonCallback);
 800370c:	f504 7311 	add.w	r3, r4, #580	@ 0x244
        action = &callback;
 8003710:	f8c4 31fc 	str.w	r3, [r4, #508]	@ 0x1fc
    MAINMENU_BUT.setPosition(70, 76, 102, 160);
 8003714:	224c      	movs	r2, #76	@ 0x4c
 8003716:	2366      	movs	r3, #102	@ 0x66
 8003718:	4658      	mov	r0, fp
 800371a:	f8cd 9000 	str.w	r9, [sp]
 800371e:	2146      	movs	r1, #70	@ 0x46
 8003720:	f7ff fb48 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003724:	4630      	mov	r0, r6
 8003726:	4659      	mov	r1, fp
 8003728:	f011 fce8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800372c:	4620      	mov	r0, r4
 800372e:	b00b      	add	sp, #44	@ 0x2c
 8003730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003734:	080322c0 	.word	0x080322c0
 8003738:	08031a6c 	.word	0x08031a6c
 800373c:	08033460 	.word	0x08033460
 8003740:	080322a8 	.word	0x080322a8
 8003744:	080033f9 	.word	0x080033f9
 8003748:	ff8a8a8a 	.word	0xff8a8a8a
 800374c:	ff336699 	.word	0xff336699

08003750 <_ZN8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003750:	4770      	bx	lr

08003752 <_ZN19Character_2ViewBaseD1Ev>:
}

Character_2ViewBase::~Character_2ViewBase()
{

}
 8003752:	4770      	bx	lr

08003754 <_ZN19Character_2ViewBase11setupScreenEv>:

void Character_2ViewBase::setupScreen()
{

}
 8003754:	4770      	bx	lr

08003756 <_ZN8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003756:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003758:	68c2      	ldr	r2, [r0, #12]
 800375a:	6844      	ldr	r4, [r0, #4]
 800375c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800375e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003760:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003764:	07d2      	lsls	r2, r2, #31
 8003766:	bf48      	it	mi
 8003768:	5962      	ldrmi	r2, [r4, r5]
 800376a:	689b      	ldr	r3, [r3, #8]
    }
 800376c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800376e:	bf48      	it	mi
 8003770:	58d3      	ldrmi	r3, [r2, r3]
 8003772:	4718      	bx	r3

08003774 <_ZNK8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003774:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003776:	6840      	ldr	r0, [r0, #4]
 8003778:	b130      	cbz	r0, 8003788 <_ZNK8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800377a:	689a      	ldr	r2, [r3, #8]
 800377c:	b91a      	cbnz	r2, 8003786 <_ZNK8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 800377e:	68d8      	ldr	r0, [r3, #12]
 8003780:	f000 0001 	and.w	r0, r0, #1
 8003784:	4770      	bx	lr
 8003786:	2001      	movs	r0, #1
    }
 8003788:	4770      	bx	lr

0800378a <_ZN8touchgfx8CallbackI19Character_2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800378a:	b510      	push	{r4, lr}
 800378c:	2110      	movs	r1, #16
 800378e:	4604      	mov	r4, r0
 8003790:	f02a f8c9 	bl	802d926 <_ZdlPvj>
 8003794:	4620      	mov	r0, r4
 8003796:	bd10      	pop	{r4, pc}

08003798 <_ZN19Character_2ViewBaseD0Ev>:
Character_2ViewBase::~Character_2ViewBase()
 8003798:	b510      	push	{r4, lr}
}
 800379a:	f44f 711d 	mov.w	r1, #628	@ 0x274
Character_2ViewBase::~Character_2ViewBase()
 800379e:	4604      	mov	r4, r0
}
 80037a0:	f02a f8c1 	bl	802d926 <_ZdlPvj>
 80037a4:	4620      	mov	r0, r4
 80037a6:	bd10      	pop	{r4, pc}

080037a8 <_ZN19Character_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Character_2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 80037a8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &sakurabutton)
 80037aa:	f500 73ba 	add.w	r3, r0, #372	@ 0x174
 80037ae:	4299      	cmp	r1, r3
{
 80037b0:	4604      	mov	r4, r0
 80037b2:	460d      	mov	r5, r1
    if (&src == &sakurabutton)
 80037b4:	d103      	bne.n	80037be <_ZN19Character_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Character_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80037b6:	f017 fe25 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Sakura_Select
        //When sakurabutton clicked change screen to SakuraMainScreen
        //Go to SakuraMainScreen with no screen transition
        application().gotoSakuraMainScreenScreenNoTransition();
 80037ba:	f000 fc19 	bl	8003ff0 <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv>
    }
    if (&src == &narutobutton)
 80037be:	f504 74f6 	add.w	r4, r4, #492	@ 0x1ec
 80037c2:	42a5      	cmp	r5, r4
 80037c4:	d105      	bne.n	80037d2 <_ZN19Character_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 80037c6:	f017 fe1d 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When narutobutton clicked change screen to NarutoGameScreen2
        //Go to NarutoGameScreen2 with no screen transition
        application().gotoNarutoGameScreen2ScreenNoTransition();
    }
}
 80037ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoNarutoGameScreen2ScreenNoTransition();
 80037ce:	f000 bc2f 	b.w	8004030 <_ZN23FrontendApplicationBase39gotoNarutoGameScreen2ScreenNoTransitionEv>
}
 80037d2:	bd38      	pop	{r3, r4, r5, pc}

080037d4 <_ZN19Character_2ViewBaseC1Ev>:
Character_2ViewBase::Character_2ViewBase() :
 80037d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037d8:	4604      	mov	r4, r0
 80037da:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &Character_2ViewBase::flexButtonCallbackHandler)
 80037dc:	46a2      	mov	sl, r4
 80037de:	2500      	movs	r5, #0
 80037e0:	f019 fe36 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 80037e4:	4ba7      	ldr	r3, [pc, #668]	@ (8003a84 <_ZN19Character_2ViewBaseC1Ev+0x2b0>)
 80037e6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80037e8:	f84a 3b40 	str.w	r3, [sl], #64
 80037ec:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 80037f0:	4650      	mov	r0, sl
 80037f2:	f7ff faf3 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 80037f6:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80037fa:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80037fe:	a907      	add	r1, sp, #28
 8003800:	4648      	mov	r0, r9
 8003802:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8003806:	f8ad 601c 	strh.w	r6, [sp, #28]
 800380a:	f014 fb51 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800380e:	a907      	add	r1, sp, #28
 8003810:	4640      	mov	r0, r8
 8003812:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003816:	f014 fb4b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800381a:	a907      	add	r1, sp, #28
 800381c:	4638      	mov	r0, r7
 800381e:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003822:	f014 fb45 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003826:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800382a:	a907      	add	r1, sp, #28
 800382c:	4618      	mov	r0, r3
 800382e:	9302      	str	r3, [sp, #8]
 8003830:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003834:	f014 fb3c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003838:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 800383c:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8003840:	a907      	add	r1, sp, #28
 8003842:	4618      	mov	r0, r3
 8003844:	9303      	str	r3, [sp, #12]
 8003846:	f8ad 601c 	strh.w	r6, [sp, #28]
 800384a:	f014 fb31 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800384e:	a907      	add	r1, sp, #28
 8003850:	4658      	mov	r0, fp
 8003852:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003856:	f014 fb2b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800385a:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 800385e:	4618      	mov	r0, r3
 8003860:	9304      	str	r3, [sp, #16]
 8003862:	f7ff fad7 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003866:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 800386a:	4618      	mov	r0, r3
 800386c:	9305      	str	r3, [sp, #20]
 800386e:	f7ff fad1 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003872:	4b85      	ldr	r3, [pc, #532]	@ (8003a88 <_ZN19Character_2ViewBaseC1Ev+0x2b4>)
 8003874:	e9c4 3499 	strd	r3, r4, [r4, #612]	@ 0x264
 8003878:	4b84      	ldr	r3, [pc, #528]	@ (8003a8c <_ZN19Character_2ViewBaseC1Ev+0x2b8>)
 800387a:	e9c4 359b 	strd	r3, r5, [r4, #620]	@ 0x26c
    __background.setPosition(0, 0, 240, 320);
 800387e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003882:	462a      	mov	r2, r5
 8003884:	9300      	str	r3, [sp, #0]
 8003886:	4629      	mov	r1, r5
 8003888:	4650      	mov	r0, sl
 800388a:	23f0      	movs	r3, #240	@ 0xf0
 800388c:	1d26      	adds	r6, r4, #4
 800388e:	f7ff fa91 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003892:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003896:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003898:	4651      	mov	r1, sl
 800389a:	4630      	mov	r0, r6
 800389c:	f011 fc2e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80038a0:	233b      	movs	r3, #59	@ 0x3b
    background.setBitmap(touchgfx::Bitmap(BITMAP_PICK_ID));
 80038a2:	a907      	add	r1, sp, #28
 80038a4:	4648      	mov	r0, r9
 80038a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80038aa:	f015 f99d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 80038ae:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80038b2:	462a      	mov	r2, r5
 80038b4:	9300      	str	r3, [sp, #0]
 80038b6:	4629      	mov	r1, r5
 80038b8:	23f0      	movs	r3, #240	@ 0xf0
 80038ba:	4648      	mov	r0, r9
 80038bc:	f7ff fa7a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80038c0:	4629      	mov	r1, r5
 80038c2:	4648      	mov	r0, r9
 80038c4:	f014 faaf 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80038c8:	4649      	mov	r1, r9
 80038ca:	4630      	mov	r0, r6
 80038cc:	f011 fc16 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(62, 76, 110, 160);
 80038d0:	f04f 0aa0 	mov.w	sl, #160	@ 0xa0
 80038d4:	2333      	movs	r3, #51	@ 0x33
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 80038d6:	a907      	add	r1, sp, #28
 80038d8:	4640      	mov	r0, r8
 80038da:	f8ad 301c 	strh.w	r3, [sp, #28]
 80038de:	f015 f983 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(62, 76, 110, 160);
 80038e2:	224c      	movs	r2, #76	@ 0x4c
 80038e4:	236e      	movs	r3, #110	@ 0x6e
 80038e6:	4640      	mov	r0, r8
 80038e8:	f8cd a000 	str.w	sl, [sp]
 80038ec:	213e      	movs	r1, #62	@ 0x3e
 80038ee:	f7ff fa61 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80038f2:	4629      	mov	r1, r5
 80038f4:	4640      	mov	r0, r8
 80038f6:	f014 fa96 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80038fa:	4641      	mov	r1, r8
 80038fc:	4630      	mov	r0, r6
 80038fe:	f011 fbfd 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003902:	234e      	movs	r3, #78	@ 0x4e
    sponge.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 8003904:	a907      	add	r1, sp, #28
 8003906:	4638      	mov	r0, r7
 8003908:	f8ad 301c 	strh.w	r3, [sp, #28]
 800390c:	f015 f96c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge.setPosition(57, 65, 132, 185);
 8003910:	23b9      	movs	r3, #185	@ 0xb9
 8003912:	2241      	movs	r2, #65	@ 0x41
 8003914:	9300      	str	r3, [sp, #0]
 8003916:	4638      	mov	r0, r7
 8003918:	2384      	movs	r3, #132	@ 0x84
 800391a:	2139      	movs	r1, #57	@ 0x39
 800391c:	f7ff fa4a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003920:	4629      	mov	r1, r5
 8003922:	4638      	mov	r0, r7
 8003924:	f014 fa7f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003928:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 800392c:	4639      	mov	r1, r7
 800392e:	4630      	mov	r0, r6
 8003930:	f011 fbe4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 8003934:	9802      	ldr	r0, [sp, #8]
 8003936:	2342      	movs	r3, #66	@ 0x42
 8003938:	a907      	add	r1, sp, #28
 800393a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800393e:	f015 f953 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura.setPosition(62, 67, 116, 178);
 8003942:	23b2      	movs	r3, #178	@ 0xb2
 8003944:	2243      	movs	r2, #67	@ 0x43
 8003946:	9802      	ldr	r0, [sp, #8]
 8003948:	9300      	str	r3, [sp, #0]
 800394a:	213e      	movs	r1, #62	@ 0x3e
 800394c:	2374      	movs	r3, #116	@ 0x74
 800394e:	f7ff fa31 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003952:	9802      	ldr	r0, [sp, #8]
 8003954:	4629      	mov	r1, r5
 8003956:	f014 fa66 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800395a:	9902      	ldr	r1, [sp, #8]
 800395c:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8003960:	4630      	mov	r0, r6
 8003962:	f011 fbcb 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    rightarrow.setPosition(197, 135, 42, 54);
 8003966:	2736      	movs	r7, #54	@ 0x36
    rightarrow.setBitmap(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID));
 8003968:	9803      	ldr	r0, [sp, #12]
 800396a:	2341      	movs	r3, #65	@ 0x41
 800396c:	a907      	add	r1, sp, #28
 800396e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003972:	f015 f939 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    rightarrow.setPosition(197, 135, 42, 54);
 8003976:	2287      	movs	r2, #135	@ 0x87
 8003978:	232a      	movs	r3, #42	@ 0x2a
 800397a:	9803      	ldr	r0, [sp, #12]
 800397c:	9700      	str	r7, [sp, #0]
 800397e:	21c5      	movs	r1, #197	@ 0xc5
 8003980:	f7ff fa18 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    rightarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003984:	9803      	ldr	r0, [sp, #12]
 8003986:	4629      	mov	r1, r5
 8003988:	f014 fa4d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800398c:	9903      	ldr	r1, [sp, #12]
 800398e:	4630      	mov	r0, r6
 8003990:	f011 fbb4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003994:	232e      	movs	r3, #46	@ 0x2e
    leftarrow.setBitmap(touchgfx::Bitmap(BITMAP_LEFTARROW_ID));
 8003996:	a907      	add	r1, sp, #28
 8003998:	4658      	mov	r0, fp
 800399a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800399e:	f015 f923 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    leftarrow.setPosition(0, 135, 42, 54);
 80039a2:	232a      	movs	r3, #42	@ 0x2a
 80039a4:	2287      	movs	r2, #135	@ 0x87
 80039a6:	9700      	str	r7, [sp, #0]
 80039a8:	4629      	mov	r1, r5
 80039aa:	4658      	mov	r0, fp
 80039ac:	f7ff fa02 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    leftarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80039b0:	4629      	mov	r1, r5
 80039b2:	4658      	mov	r0, fp
 80039b4:	f014 fa37 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80039b8:	4659      	mov	r1, fp
 80039ba:	4630      	mov	r0, r6
 80039bc:	f011 fb9e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 80039c0:	462a      	mov	r2, r5
 80039c2:	4629      	mov	r1, r5
 80039c4:	f504 70d4 	add.w	r0, r4, #424	@ 0x1a8
 80039c8:	f8cd a000 	str.w	sl, [sp]
 80039cc:	2366      	movs	r3, #102	@ 0x66
 80039ce:	f7ff f9f1 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 80039d2:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 8003a94 <_ZN19Character_2ViewBaseC1Ev+0x2c0>
 80039d6:	4b2e      	ldr	r3, [pc, #184]	@ (8003a90 <_ZN19Character_2ViewBaseC1Ev+0x2bc>)
        handlePressedUpdated();
 80039d8:	f8d4 8174 	ldr.w	r8, [r4, #372]	@ 0x174
 80039dc:	9804      	ldr	r0, [sp, #16]
 80039de:	f8a4 51d8 	strh.w	r5, [r4, #472]	@ 0x1d8
        up = colorReleased;
 80039e2:	f04f 37ff 	mov.w	r7, #4294967295
        borderDown = borderColorPressed;
 80039e6:	e9c4 b379 	strd	fp, r3, [r4, #484]	@ 0x1e4
        alpha = newAlpha;
 80039ea:	f04f 0906 	mov.w	r9, #6
        down = colorPressed;
 80039ee:	e9c4 7777 	strd	r7, r7, [r4, #476]	@ 0x1dc
        handlePressedUpdated();
 80039f2:	f7ff f937 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
 80039f6:	f884 91a1 	strb.w	r9, [r4, #417]	@ 0x1a1
        handleAlphaUpdated();
 80039fa:	f8d8 3090 	ldr.w	r3, [r8, #144]	@ 0x90
 80039fe:	9804      	ldr	r0, [sp, #16]
    sakurabutton.setAction(flexButtonCallback);
 8003a00:	f504 7819 	add.w	r8, r4, #612	@ 0x264
 8003a04:	4798      	blx	r3
 8003a06:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
    sakurabutton.setPosition(70, 76, 102, 160);
 8003a0a:	9804      	ldr	r0, [sp, #16]
        action = &callback;
 8003a0c:	f8c4 81a4 	str.w	r8, [r4, #420]	@ 0x1a4
 8003a10:	2366      	movs	r3, #102	@ 0x66
 8003a12:	224c      	movs	r2, #76	@ 0x4c
 8003a14:	f8cd a000 	str.w	sl, [sp]
 8003a18:	2146      	movs	r1, #70	@ 0x46
 8003a1a:	f7ff f9cb 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a1e:	9904      	ldr	r1, [sp, #16]
 8003a20:	4630      	mov	r0, r6
 8003a22:	f011 fb6b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8003a26:	462a      	mov	r2, r5
 8003a28:	4629      	mov	r1, r5
 8003a2a:	f504 7008 	add.w	r0, r4, #544	@ 0x220
 8003a2e:	f8cd a000 	str.w	sl, [sp]
 8003a32:	2366      	movs	r3, #102	@ 0x66
 8003a34:	f7ff f9be 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8003a38:	4b15      	ldr	r3, [pc, #84]	@ (8003a90 <_ZN19Character_2ViewBaseC1Ev+0x2bc>)
        handlePressedUpdated();
 8003a3a:	9805      	ldr	r0, [sp, #20]
 8003a3c:	f8a4 5250 	strh.w	r5, [r4, #592]	@ 0x250
        borderDown = borderColorPressed;
 8003a40:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
        handlePressedUpdated();
 8003a44:	f8d4 51ec 	ldr.w	r5, [r4, #492]	@ 0x1ec
        borderUp = borderColorReleased;
 8003a48:	f8c4 b25c 	str.w	fp, [r4, #604]	@ 0x25c
        down = colorPressed;
 8003a4c:	e9c4 7795 	strd	r7, r7, [r4, #596]	@ 0x254
        handlePressedUpdated();
 8003a50:	f7ff f908 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8003a54:	f884 9219 	strb.w	r9, [r4, #537]	@ 0x219
        handleAlphaUpdated();
 8003a58:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8003a5c:	9805      	ldr	r0, [sp, #20]
 8003a5e:	4798      	blx	r3
    narutobutton.setPosition(70, 76, 102, 160);
 8003a60:	9805      	ldr	r0, [sp, #20]
        action = &callback;
 8003a62:	f8c4 821c 	str.w	r8, [r4, #540]	@ 0x21c
 8003a66:	2366      	movs	r3, #102	@ 0x66
 8003a68:	224c      	movs	r2, #76	@ 0x4c
 8003a6a:	f8cd a000 	str.w	sl, [sp]
 8003a6e:	2146      	movs	r1, #70	@ 0x46
 8003a70:	f7ff f9a0 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a74:	4630      	mov	r0, r6
 8003a76:	9905      	ldr	r1, [sp, #20]
 8003a78:	f011 fb40 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003a7c:	4620      	mov	r0, r4
 8003a7e:	b009      	add	sp, #36	@ 0x24
 8003a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a84:	0803230c 	.word	0x0803230c
 8003a88:	080322f4 	.word	0x080322f4
 8003a8c:	080037a9 	.word	0x080037a9
 8003a90:	ff336699 	.word	0xff336699
 8003a94:	ff8a8a8a 	.word	0xff8a8a8a

08003a98 <_ZN8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a98:	4770      	bx	lr

08003a9a <_ZN23Character_FinalViewBaseD1Ev>:
}

Character_FinalViewBase::~Character_FinalViewBase()
{

}
 8003a9a:	4770      	bx	lr

08003a9c <_ZN23Character_FinalViewBase11setupScreenEv>:

void Character_FinalViewBase::setupScreen()
{

}
 8003a9c:	4770      	bx	lr

08003a9e <_ZN8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a9e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003aa0:	68c2      	ldr	r2, [r0, #12]
 8003aa2:	6844      	ldr	r4, [r0, #4]
 8003aa4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003aa6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003aa8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003aac:	07d2      	lsls	r2, r2, #31
 8003aae:	bf48      	it	mi
 8003ab0:	5962      	ldrmi	r2, [r4, r5]
 8003ab2:	689b      	ldr	r3, [r3, #8]
    }
 8003ab4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003ab6:	bf48      	it	mi
 8003ab8:	58d3      	ldrmi	r3, [r2, r3]
 8003aba:	4718      	bx	r3

08003abc <_ZNK8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8003abc:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8003abe:	6840      	ldr	r0, [r0, #4]
 8003ac0:	b130      	cbz	r0, 8003ad0 <_ZNK8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003ac2:	689a      	ldr	r2, [r3, #8]
 8003ac4:	b91a      	cbnz	r2, 8003ace <_ZNK8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8003ac6:	68d8      	ldr	r0, [r3, #12]
 8003ac8:	f000 0001 	and.w	r0, r0, #1
 8003acc:	4770      	bx	lr
 8003ace:	2001      	movs	r0, #1
    }
 8003ad0:	4770      	bx	lr

08003ad2 <_ZN8touchgfx8CallbackI23Character_FinalViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ad2:	b510      	push	{r4, lr}
 8003ad4:	2110      	movs	r1, #16
 8003ad6:	4604      	mov	r4, r0
 8003ad8:	f029 ff25 	bl	802d926 <_ZdlPvj>
 8003adc:	4620      	mov	r0, r4
 8003ade:	bd10      	pop	{r4, pc}

08003ae0 <_ZN23Character_FinalViewBaseD0Ev>:
Character_FinalViewBase::~Character_FinalViewBase()
 8003ae0:	b510      	push	{r4, lr}
}
 8003ae2:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
Character_FinalViewBase::~Character_FinalViewBase()
 8003ae6:	4604      	mov	r4, r0
}
 8003ae8:	f029 ff1d 	bl	802d926 <_ZdlPvj>
 8003aec:	4620      	mov	r0, r4
 8003aee:	bd10      	pop	{r4, pc}

08003af0 <_ZN23Character_FinalViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Character_FinalViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &spongebutton)
 8003af0:	f500 70ba 	add.w	r0, r0, #372	@ 0x174
 8003af4:	4288      	cmp	r0, r1
{
 8003af6:	b508      	push	{r3, lr}
    if (&src == &spongebutton)
 8003af8:	d105      	bne.n	8003b06 <_ZN23Character_FinalViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Character_FinalViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003afa:	f017 fc83 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //Sponge
        //When spongebutton clicked change screen to Sponge
        //Go to Sponge with no screen transition
        application().gotoSpongeScreenNoTransition();
    }
}
 8003afe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSpongeScreenNoTransition();
 8003b02:	f000 bae5 	b.w	80040d0 <_ZN23FrontendApplicationBase28gotoSpongeScreenNoTransitionEv>
}
 8003b06:	bd08      	pop	{r3, pc}

08003b08 <_ZN23Character_FinalViewBaseC1Ev>:
Character_FinalViewBase::Character_FinalViewBase() :
 8003b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b0c:	4604      	mov	r4, r0
 8003b0e:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &Character_FinalViewBase::flexButtonCallbackHandler)
 8003b10:	46a2      	mov	sl, r4
 8003b12:	2500      	movs	r5, #0
 8003b14:	f019 fc9c 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8003b18:	4ba3      	ldr	r3, [pc, #652]	@ (8003da8 <_ZN23Character_FinalViewBaseC1Ev+0x2a0>)
 8003b1a:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003b1c:	f84a 3b40 	str.w	r3, [sl], #64
 8003b20:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8003b24:	4650      	mov	r0, sl
 8003b26:	f7ff f959 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8003b2a:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8003b2e:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8003b32:	a907      	add	r1, sp, #28
 8003b34:	4648      	mov	r0, r9
 8003b36:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8003b3a:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003b3e:	f014 f9b7 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003b42:	a907      	add	r1, sp, #28
 8003b44:	4640      	mov	r0, r8
 8003b46:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003b4a:	f014 f9b1 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003b4e:	a907      	add	r1, sp, #28
 8003b50:	4638      	mov	r0, r7
 8003b52:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003b56:	f014 f9ab 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003b5a:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8003b5e:	a907      	add	r1, sp, #28
 8003b60:	4618      	mov	r0, r3
 8003b62:	9302      	str	r3, [sp, #8]
 8003b64:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003b68:	f014 f9a2 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003b6c:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003b70:	a907      	add	r1, sp, #28
 8003b72:	4618      	mov	r0, r3
 8003b74:	9303      	str	r3, [sp, #12]
 8003b76:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003b7a:	f014 f999 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003b7e:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8003b82:	a907      	add	r1, sp, #28
 8003b84:	4618      	mov	r0, r3
 8003b86:	9304      	str	r3, [sp, #16]
 8003b88:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003b8c:	f014 f990 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 8003b90:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8003b94:	f8a4 31a0 	strh.w	r3, [r4, #416]	@ 0x1a0
        touchable = touch;
 8003b98:	f240 1301 	movw	r3, #257	@ 0x101
 8003b9c:	f8a4 3198 	strh.w	r3, [r4, #408]	@ 0x198
        : T(), up(), down()
 8003ba0:	4b82      	ldr	r3, [pc, #520]	@ (8003dac <_ZN23Character_FinalViewBaseC1Ev+0x2a4>)
 8003ba2:	f8c4 3174 	str.w	r3, [r4, #372]	@ 0x174
        : Box(), borderColor(0), borderSize(0)
 8003ba6:	f504 73d4 	add.w	r3, r4, #424	@ 0x1a8
        : x(0), y(0), width(0), height(0)
 8003baa:	e9c4 555e 	strd	r5, r5, [r4, #376]	@ 0x178
 8003bae:	e9c4 5560 	strd	r5, r5, [r4, #384]	@ 0x180
          nextSibling(0),
 8003bb2:	e9c4 5562 	strd	r5, r5, [r4, #392]	@ 0x188
          cachedAbsX(0),
 8003bb6:	e9c4 5564 	strd	r5, r5, [r4, #400]	@ 0x190
 8003bba:	f8c4 519c 	str.w	r5, [r4, #412]	@ 0x19c
 8003bbe:	f8c4 51a4 	str.w	r5, [r4, #420]	@ 0x1a4
 8003bc2:	4618      	mov	r0, r3
 8003bc4:	9305      	str	r3, [sp, #20]
 8003bc6:	f7ff f909 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8003bca:	4b79      	ldr	r3, [pc, #484]	@ (8003db0 <_ZN23Character_FinalViewBaseC1Ev+0x2a8>)
 8003bcc:	f8c4 31a8 	str.w	r3, [r4, #424]	@ 0x1a8
 8003bd0:	f504 7bba 	add.w	fp, r4, #372	@ 0x174
        borderBox.setXY(0, 0);
 8003bd4:	462a      	mov	r2, r5
        : color(0)
 8003bd6:	e9c4 5577 	strd	r5, r5, [r4, #476]	@ 0x1dc
 8003bda:	e9c4 5579 	strd	r5, r5, [r4, #484]	@ 0x1e4
 8003bde:	9805      	ldr	r0, [sp, #20]
        : color(col)
 8003be0:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
 8003be4:	f8a4 51d8 	strh.w	r5, [r4, #472]	@ 0x1d8
 8003be8:	4629      	mov	r1, r5
 8003bea:	f7ff f8d6 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003bee:	9905      	ldr	r1, [sp, #20]
 8003bf0:	4658      	mov	r0, fp
 8003bf2:	f011 fa83 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003bf6:	4b6f      	ldr	r3, [pc, #444]	@ (8003db4 <_ZN23Character_FinalViewBaseC1Ev+0x2ac>)
 8003bf8:	e9c4 347b 	strd	r3, r4, [r4, #492]	@ 0x1ec
 8003bfc:	4b6e      	ldr	r3, [pc, #440]	@ (8003db8 <_ZN23Character_FinalViewBaseC1Ev+0x2b0>)
 8003bfe:	e9c4 357d 	strd	r3, r5, [r4, #500]	@ 0x1f4
    __background.setPosition(0, 0, 240, 320);
 8003c02:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003c06:	462a      	mov	r2, r5
 8003c08:	9300      	str	r3, [sp, #0]
 8003c0a:	4629      	mov	r1, r5
 8003c0c:	4650      	mov	r0, sl
 8003c0e:	23f0      	movs	r3, #240	@ 0xf0
 8003c10:	f7ff f8d0 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003c14:	1d26      	adds	r6, r4, #4
 8003c16:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003c1a:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003c1c:	4651      	mov	r1, sl
 8003c1e:	4630      	mov	r0, r6
 8003c20:	f011 fa6c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003c24:	233b      	movs	r3, #59	@ 0x3b
    background.setBitmap(touchgfx::Bitmap(BITMAP_PICK_ID));
 8003c26:	a907      	add	r1, sp, #28
 8003c28:	4648      	mov	r0, r9
 8003c2a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003c2e:	f014 ffdb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8003c32:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003c36:	462a      	mov	r2, r5
 8003c38:	9300      	str	r3, [sp, #0]
 8003c3a:	4629      	mov	r1, r5
 8003c3c:	23f0      	movs	r3, #240	@ 0xf0
 8003c3e:	4648      	mov	r0, r9
 8003c40:	f7ff f8b8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003c44:	4629      	mov	r1, r5
 8003c46:	4648      	mov	r0, r9
 8003c48:	f014 f8ed 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003c4c:	4649      	mov	r1, r9
 8003c4e:	4630      	mov	r0, r6
 8003c50:	f011 fa54 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(62, 76, 110, 160);
 8003c54:	f04f 09a0 	mov.w	r9, #160	@ 0xa0
 8003c58:	2333      	movs	r3, #51	@ 0x33
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 8003c5a:	a907      	add	r1, sp, #28
 8003c5c:	4640      	mov	r0, r8
 8003c5e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003c62:	f014 ffc1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(62, 76, 110, 160);
 8003c66:	224c      	movs	r2, #76	@ 0x4c
 8003c68:	236e      	movs	r3, #110	@ 0x6e
 8003c6a:	4640      	mov	r0, r8
 8003c6c:	f8cd 9000 	str.w	r9, [sp]
 8003c70:	213e      	movs	r1, #62	@ 0x3e
 8003c72:	f7ff f89f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003c76:	4629      	mov	r1, r5
 8003c78:	4640      	mov	r0, r8
 8003c7a:	f014 f8d4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        visible = vis;
 8003c7e:	f884 50bd 	strb.w	r5, [r4, #189]	@ 0xbd
 8003c82:	4641      	mov	r1, r8
 8003c84:	4630      	mov	r0, r6
 8003c86:	f011 fa39 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003c8a:	234e      	movs	r3, #78	@ 0x4e
    sponge.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 8003c8c:	a907      	add	r1, sp, #28
 8003c8e:	4638      	mov	r0, r7
 8003c90:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003c94:	f014 ffa8 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sponge.setPosition(57, 65, 132, 185);
 8003c98:	23b9      	movs	r3, #185	@ 0xb9
 8003c9a:	2241      	movs	r2, #65	@ 0x41
 8003c9c:	9300      	str	r3, [sp, #0]
 8003c9e:	4638      	mov	r0, r7
 8003ca0:	2384      	movs	r3, #132	@ 0x84
 8003ca2:	2139      	movs	r1, #57	@ 0x39
 8003ca4:	f7ff f886 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sponge.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003ca8:	4629      	mov	r1, r5
 8003caa:	4638      	mov	r0, r7
 8003cac:	f014 f8bb 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003cb0:	4639      	mov	r1, r7
 8003cb2:	4630      	mov	r0, r6
 8003cb4:	f011 fa22 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sakura.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 8003cb8:	9802      	ldr	r0, [sp, #8]
 8003cba:	2342      	movs	r3, #66	@ 0x42
 8003cbc:	a907      	add	r1, sp, #28
 8003cbe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003cc2:	f014 ff91 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sakura.setPosition(62, 67, 116, 178);
 8003cc6:	23b2      	movs	r3, #178	@ 0xb2
 8003cc8:	2243      	movs	r2, #67	@ 0x43
 8003cca:	9802      	ldr	r0, [sp, #8]
 8003ccc:	9300      	str	r3, [sp, #0]
 8003cce:	213e      	movs	r1, #62	@ 0x3e
 8003cd0:	2374      	movs	r3, #116	@ 0x74
 8003cd2:	f7ff f86f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sakura.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003cd6:	9802      	ldr	r0, [sp, #8]
 8003cd8:	4629      	mov	r1, r5
 8003cda:	f014 f8a4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003cde:	9902      	ldr	r1, [sp, #8]
 8003ce0:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8003ce4:	4630      	mov	r0, r6
 8003ce6:	f011 fa09 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    rightarrow.setPosition(197, 135, 42, 54);
 8003cea:	2736      	movs	r7, #54	@ 0x36
    rightarrow.setBitmap(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID));
 8003cec:	9803      	ldr	r0, [sp, #12]
 8003cee:	2341      	movs	r3, #65	@ 0x41
 8003cf0:	a907      	add	r1, sp, #28
 8003cf2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003cf6:	f014 ff77 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    rightarrow.setPosition(197, 135, 42, 54);
 8003cfa:	2287      	movs	r2, #135	@ 0x87
 8003cfc:	232a      	movs	r3, #42	@ 0x2a
 8003cfe:	9803      	ldr	r0, [sp, #12]
 8003d00:	9700      	str	r7, [sp, #0]
 8003d02:	21c5      	movs	r1, #197	@ 0xc5
 8003d04:	f7ff f856 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    rightarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003d08:	9803      	ldr	r0, [sp, #12]
 8003d0a:	4629      	mov	r1, r5
 8003d0c:	f014 f88b 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003d10:	9903      	ldr	r1, [sp, #12]
 8003d12:	4630      	mov	r0, r6
 8003d14:	f011 f9f2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    leftarrow.setBitmap(touchgfx::Bitmap(BITMAP_LEFTARROW_ID));
 8003d18:	9804      	ldr	r0, [sp, #16]
 8003d1a:	232e      	movs	r3, #46	@ 0x2e
 8003d1c:	a907      	add	r1, sp, #28
 8003d1e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003d22:	f014 ff61 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    leftarrow.setPosition(0, 135, 42, 54);
 8003d26:	232a      	movs	r3, #42	@ 0x2a
 8003d28:	2287      	movs	r2, #135	@ 0x87
 8003d2a:	9804      	ldr	r0, [sp, #16]
 8003d2c:	9700      	str	r7, [sp, #0]
 8003d2e:	4629      	mov	r1, r5
 8003d30:	f7ff f840 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    leftarrow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003d34:	9804      	ldr	r0, [sp, #16]
 8003d36:	4629      	mov	r1, r5
 8003d38:	f014 f875 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003d3c:	9904      	ldr	r1, [sp, #16]
 8003d3e:	4630      	mov	r0, r6
 8003d40:	f011 f9dc 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8003d44:	4629      	mov	r1, r5
 8003d46:	9805      	ldr	r0, [sp, #20]
 8003d48:	f8cd 9000 	str.w	r9, [sp]
 8003d4c:	462a      	mov	r2, r5
 8003d4e:	2366      	movs	r3, #102	@ 0x66
 8003d50:	f7ff f830 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        up = colorReleased;
 8003d54:	f04f 33ff 	mov.w	r3, #4294967295
        borderDown = borderColorPressed;
 8003d58:	4a18      	ldr	r2, [pc, #96]	@ (8003dbc <_ZN23Character_FinalViewBaseC1Ev+0x2b4>)
        borderSize = size;
 8003d5a:	f8a4 51d8 	strh.w	r5, [r4, #472]	@ 0x1d8
        down = colorPressed;
 8003d5e:	e9c4 3377 	strd	r3, r3, [r4, #476]	@ 0x1dc
        borderDown = borderColorPressed;
 8003d62:	4b17      	ldr	r3, [pc, #92]	@ (8003dc0 <_ZN23Character_FinalViewBaseC1Ev+0x2b8>)
        handlePressedUpdated();
 8003d64:	f8d4 5174 	ldr.w	r5, [r4, #372]	@ 0x174
        borderDown = borderColorPressed;
 8003d68:	e9c4 2379 	strd	r2, r3, [r4, #484]	@ 0x1e4
        handlePressedUpdated();
 8003d6c:	4658      	mov	r0, fp
 8003d6e:	f7fe ff79 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8003d72:	2306      	movs	r3, #6
 8003d74:	f884 31a1 	strb.w	r3, [r4, #417]	@ 0x1a1
        handleAlphaUpdated();
 8003d78:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8003d7c:	4658      	mov	r0, fp
 8003d7e:	4798      	blx	r3
    spongebutton.setAction(flexButtonCallback);
 8003d80:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
        action = &callback;
 8003d84:	f8c4 31a4 	str.w	r3, [r4, #420]	@ 0x1a4
    spongebutton.setPosition(70, 76, 102, 160);
 8003d88:	224c      	movs	r2, #76	@ 0x4c
 8003d8a:	2366      	movs	r3, #102	@ 0x66
 8003d8c:	4658      	mov	r0, fp
 8003d8e:	f8cd 9000 	str.w	r9, [sp]
 8003d92:	2146      	movs	r1, #70	@ 0x46
 8003d94:	f7ff f80e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d98:	4630      	mov	r0, r6
 8003d9a:	4659      	mov	r1, fp
 8003d9c:	f011 f9ae 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003da0:	4620      	mov	r0, r4
 8003da2:	b009      	add	sp, #36	@ 0x24
 8003da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003da8:	08032358 	.word	0x08032358
 8003dac:	08031a6c 	.word	0x08031a6c
 8003db0:	08033460 	.word	0x08033460
 8003db4:	08032340 	.word	0x08032340
 8003db8:	08003af1 	.word	0x08003af1
 8003dbc:	ff8a8a8a 	.word	0xff8a8a8a
 8003dc0:	ff336699 	.word	0xff336699

08003dc4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003dc4:	4770      	bx	lr

08003dc6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003dc6:	b510      	push	{r4, lr}
    }
 8003dc8:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003dca:	4604      	mov	r4, r0
    }
 8003dcc:	f029 fdab 	bl	802d926 <_ZdlPvj>
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	bd10      	pop	{r4, pc}

08003dd4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003dd4:	4770      	bx	lr

08003dd6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003dd6:	4770      	bx	lr

08003dd8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003dd8:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8003ddc:	6808      	ldr	r0, [r1, #0]
 8003dde:	6849      	ldr	r1, [r1, #4]
 8003de0:	c303      	stmia	r3!, {r0, r1}
    }
 8003de2:	4770      	bx	lr

08003de4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003de4:	4770      	bx	lr

08003de6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003de6:	4770      	bx	lr

08003de8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003de8:	6041      	str	r1, [r0, #4]
    }
 8003dea:	4770      	bx	lr

08003dec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003dec:	4770      	bx	lr

08003dee <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003dee:	4770      	bx	lr

08003df0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8003df0:	4b06      	ldr	r3, [pc, #24]	@ (8003e0c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003df2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003df6:	2300      	movs	r3, #0
 8003df8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MainMenuScreen

void FrontendApplicationBase::gotoMainMenuScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainMenuScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003dfc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003e00:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003e04:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMainMenuScreenScreenNoTransition();
    }
 8003e08:	4770      	bx	lr
 8003e0a:	bf00      	nop
 8003e0c:	080051a1 	.word	0x080051a1

08003e10 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003e10:	2301      	movs	r3, #1
 8003e12:	7203      	strb	r3, [r0, #8]
    }
 8003e14:	4770      	bx	lr

08003e16 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003e16:	4770      	bx	lr

08003e18 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003e18:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003e1a:	68c2      	ldr	r2, [r0, #12]
 8003e1c:	6841      	ldr	r1, [r0, #4]
 8003e1e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003e20:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003e22:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003e26:	07d2      	lsls	r2, r2, #31
 8003e28:	bf48      	it	mi
 8003e2a:	590a      	ldrmi	r2, [r1, r4]
 8003e2c:	689b      	ldr	r3, [r3, #8]
    }
 8003e2e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003e32:	bf48      	it	mi
 8003e34:	58d3      	ldrmi	r3, [r2, r3]
 8003e36:	4718      	bx	r3

08003e38 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8003e38:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003e3a:	6840      	ldr	r0, [r0, #4]
 8003e3c:	b130      	cbz	r0, 8003e4c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003e3e:	689a      	ldr	r2, [r3, #8]
 8003e40:	b91a      	cbnz	r2, 8003e4a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8003e42:	68d8      	ldr	r0, [r3, #12]
 8003e44:	f000 0001 	and.w	r0, r0, #1
 8003e48:	4770      	bx	lr
 8003e4a:	2001      	movs	r0, #1
    }
 8003e4c:	4770      	bx	lr

08003e4e <_ZN8touchgfx12NoTransitionD0Ev>:
 8003e4e:	b510      	push	{r4, lr}
 8003e50:	210c      	movs	r1, #12
 8003e52:	4604      	mov	r4, r0
 8003e54:	f029 fd67 	bl	802d926 <_ZdlPvj>
 8003e58:	4620      	mov	r0, r4
 8003e5a:	bd10      	pop	{r4, pc}

08003e5c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003e5c:	b510      	push	{r4, lr}
 8003e5e:	2110      	movs	r1, #16
 8003e60:	4604      	mov	r4, r0
 8003e62:	f029 fd60 	bl	802d926 <_ZdlPvj>
 8003e66:	4620      	mov	r0, r4
 8003e68:	bd10      	pop	{r4, pc}

08003e6a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003e6a:	b510      	push	{r4, lr}
 8003e6c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003e70:	4604      	mov	r4, r0
 8003e72:	f029 fd58 	bl	802d926 <_ZdlPvj>
 8003e76:	4620      	mov	r0, r4
 8003e78:	bd10      	pop	{r4, pc}

08003e7a <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003e7a:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003e7c:	f017 fac2 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
 8003e80:	6803      	ldr	r3, [r0, #0]
    }
 8003e82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003e86:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003e88:	4718      	bx	r3

08003e8a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003e8a:	b510      	push	{r4, lr}
 8003e8c:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003e8e:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8003e92:	b158      	cbz	r0, 8003eac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003e94:	6803      	ldr	r3, [r0, #0]
 8003e96:	68db      	ldr	r3, [r3, #12]
 8003e98:	4798      	blx	r3
 8003e9a:	b138      	cbz	r0, 8003eac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003e9c:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8003ea0:	6803      	ldr	r3, [r0, #0]
 8003ea2:	689b      	ldr	r3, [r3, #8]
 8003ea4:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003ea6:	2300      	movs	r3, #0
 8003ea8:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8003eac:	bd10      	pop	{r4, pc}
	...

08003eb0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003eb0:	4b04      	ldr	r3, [pc, #16]	@ (8003ec4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8003eb8:	b10a      	cbz	r2, 8003ebe <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003eba:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8003ebc:	b900      	cbnz	r0, 8003ec0 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003ebe:	6898      	ldr	r0, [r3, #8]
    }
 8003ec0:	4770      	bx	lr
 8003ec2:	bf00      	nop
 8003ec4:	200138e4 	.word	0x200138e4

08003ec8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003eca:	4617      	mov	r7, r2
 8003ecc:	4604      	mov	r4, r0
 8003ece:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003ed0:	f017 fb5a 	bl	801b588 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003ed4:	4b12      	ldr	r3, [pc, #72]	@ (8003f20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8003ed6:	601c      	str	r4, [r3, #0]
      model(m)
 8003ed8:	4b12      	ldr	r3, [pc, #72]	@ (8003f24 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003eda:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003edc:	4b12      	ldr	r3, [pc, #72]	@ (8003f28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 8003ede:	2500      	movs	r5, #0
 8003ee0:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8003ee4:	4b11      	ldr	r3, [pc, #68]	@ (8003f2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8003ee6:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 8003eea:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003eec:	6803      	ldr	r3, [r0, #0]
 8003eee:	2101      	movs	r1, #1
 8003ef0:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003ef2:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 8003ef6:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003efa:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003efc:	4628      	mov	r0, r5
 8003efe:	f006 fa2b 	bl	800a358 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003f02:	f7ff ffd5 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8003f06:	f021 fc2a 	bl	802575e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003f0a:	f7ff ffd1 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8003f0e:	f021 fca1 	bl	8025854 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8003f12:	f7ff ffcd 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8003f16:	f021 fca9 	bl	802586c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8003f1a:	4620      	mov	r0, r4
 8003f1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003f1e:	bf00      	nop
 8003f20:	20013938 	.word	0x20013938
 8003f24:	080323b4 	.word	0x080323b4
 8003f28:	0803239c 	.word	0x0803239c
 8003f2c:	200138e4 	.word	0x200138e4

08003f30 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003f30:	4b06      	ldr	r3, [pc, #24]	@ (8003f4c <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv+0x1c>)
 8003f32:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003f36:	2300      	movs	r3, #0
 8003f38:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f3c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003f40:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003f44:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003f48:	4770      	bx	lr
 8003f4a:	bf00      	nop
 8003f4c:	080051a1 	.word	0x080051a1

08003f50 <_ZN23FrontendApplicationBase32gotoGameScreenScreenNoTransitionEv>:
 8003f50:	4b06      	ldr	r3, [pc, #24]	@ (8003f6c <_ZN23FrontendApplicationBase32gotoGameScreenScreenNoTransitionEv+0x1c>)
 8003f52:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003f56:	2300      	movs	r3, #0
 8003f58:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen

void FrontendApplicationBase::gotoGameScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003f5c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003f60:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003f64:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003f68:	4770      	bx	lr
 8003f6a:	bf00      	nop
 8003f6c:	08005059 	.word	0x08005059

08003f70 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>:
 8003f70:	4b06      	ldr	r3, [pc, #24]	@ (8003f8c <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv+0x1c>)
 8003f72:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003f76:	2300      	movs	r3, #0
 8003f78:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// BackUpScreen

void FrontendApplicationBase::gotoBackUpScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoBackUpScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003f7c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003f80:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003f84:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003f88:	4770      	bx	lr
 8003f8a:	bf00      	nop
 8003f8c:	08004f11 	.word	0x08004f11

08003f90 <_ZN23FrontendApplicationBase31gotoCharacterScreenNoTransitionEv>:
 8003f90:	4b06      	ldr	r3, [pc, #24]	@ (8003fac <_ZN23FrontendApplicationBase31gotoCharacterScreenNoTransitionEv+0x1c>)
 8003f92:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003f96:	2300      	movs	r3, #0
 8003f98:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character

void FrontendApplicationBase::gotoCharacterScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacterScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003f9c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003fa0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003fa4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003fa8:	4770      	bx	lr
 8003faa:	bf00      	nop
 8003fac:	08004dc9 	.word	0x08004dc9

08003fb0 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>:
 8003fb0:	4b06      	ldr	r3, [pc, #24]	@ (8003fcc <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv+0x1c>)
 8003fb2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003fb6:	2300      	movs	r3, #0
 8003fb8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character_2

void FrontendApplicationBase::gotoCharacter_2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacter_2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003fbc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003fc0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003fc4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003fc8:	4770      	bx	lr
 8003fca:	bf00      	nop
 8003fcc:	08004c81 	.word	0x08004c81

08003fd0 <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv>:
 8003fd0:	4b06      	ldr	r3, [pc, #24]	@ (8003fec <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv+0x1c>)
 8003fd2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003fd6:	2300      	movs	r3, #0
 8003fd8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// RewardScreen

void FrontendApplicationBase::gotoRewardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRewardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003fdc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003fe0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003fe4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003fe8:	4770      	bx	lr
 8003fea:	bf00      	nop
 8003fec:	08004b39 	.word	0x08004b39

08003ff0 <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv>:
 8003ff0:	4b06      	ldr	r3, [pc, #24]	@ (800400c <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv+0x1c>)
 8003ff2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003ff6:	2300      	movs	r3, #0
 8003ff8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// SakuraMainScreen

void FrontendApplicationBase::gotoSakuraMainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSakuraMainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003ffc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004000:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004004:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004008:	4770      	bx	lr
 800400a:	bf00      	nop
 800400c:	080049f1 	.word	0x080049f1

08004010 <_ZN23FrontendApplicationBase38gotoSakuraGameScreenScreenNoTransitionEv>:
 8004010:	4b06      	ldr	r3, [pc, #24]	@ (800402c <_ZN23FrontendApplicationBase38gotoSakuraGameScreenScreenNoTransitionEv+0x1c>)
 8004012:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004016:	2300      	movs	r3, #0
 8004018:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// SakuraGameScreen

void FrontendApplicationBase::gotoSakuraGameScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSakuraGameScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800401c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004020:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004024:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004028:	4770      	bx	lr
 800402a:	bf00      	nop
 800402c:	080048a9 	.word	0x080048a9

08004030 <_ZN23FrontendApplicationBase39gotoNarutoGameScreen2ScreenNoTransitionEv>:
 8004030:	4b06      	ldr	r3, [pc, #24]	@ (800404c <_ZN23FrontendApplicationBase39gotoNarutoGameScreen2ScreenNoTransitionEv+0x1c>)
 8004032:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004036:	2300      	movs	r3, #0
 8004038:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// NarutoGameScreen2

void FrontendApplicationBase::gotoNarutoGameScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoNarutoGameScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800403c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004040:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004044:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004048:	4770      	bx	lr
 800404a:	bf00      	nop
 800404c:	08004761 	.word	0x08004761

08004050 <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv>:
 8004050:	4b06      	ldr	r3, [pc, #24]	@ (800406c <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv+0x1c>)
 8004052:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004056:	2300      	movs	r3, #0
 8004058:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character1

void FrontendApplicationBase::gotoCharacter1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacter1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800405c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004060:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004064:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004068:	4770      	bx	lr
 800406a:	bf00      	nop
 800406c:	08004619 	.word	0x08004619

08004070 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>:
 8004070:	4b06      	ldr	r3, [pc, #24]	@ (800408c <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv+0x1c>)
 8004072:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004076:	2300      	movs	r3, #0
 8004078:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// SakuraFinalScreen

void FrontendApplicationBase::gotoSakuraFinalScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSakuraFinalScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800407c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004080:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8004084:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004088:	4770      	bx	lr
 800408a:	bf00      	nop
 800408c:	080044d1 	.word	0x080044d1

08004090 <_ZN23FrontendApplicationBase39gotoRewardFinalScreenScreenNoTransitionEv>:
 8004090:	4b06      	ldr	r3, [pc, #24]	@ (80040ac <_ZN23FrontendApplicationBase39gotoRewardFinalScreenScreenNoTransitionEv+0x1c>)
 8004092:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8004096:	2300      	movs	r3, #0
 8004098:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// RewardFinalScreen

void FrontendApplicationBase::gotoRewardFinalScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoRewardFinalScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800409c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80040a0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80040a4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80040a8:	4770      	bx	lr
 80040aa:	bf00      	nop
 80040ac:	08004389 	.word	0x08004389

080040b0 <_ZN23FrontendApplicationBase37gotoCharacter_FinalScreenNoTransitionEv>:
 80040b0:	4b06      	ldr	r3, [pc, #24]	@ (80040cc <_ZN23FrontendApplicationBase37gotoCharacter_FinalScreenNoTransitionEv+0x1c>)
 80040b2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80040b6:	2300      	movs	r3, #0
 80040b8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Character_Final

void FrontendApplicationBase::gotoCharacter_FinalScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCharacter_FinalScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80040bc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80040c0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80040c4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80040c8:	4770      	bx	lr
 80040ca:	bf00      	nop
 80040cc:	08004241 	.word	0x08004241

080040d0 <_ZN23FrontendApplicationBase28gotoSpongeScreenNoTransitionEv>:
 80040d0:	4b06      	ldr	r3, [pc, #24]	@ (80040ec <_ZN23FrontendApplicationBase28gotoSpongeScreenNoTransitionEv+0x1c>)
 80040d2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80040d6:	2300      	movs	r3, #0
 80040d8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Sponge

void FrontendApplicationBase::gotoSpongeScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSpongeScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80040dc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80040e0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80040e4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80040e8:	4770      	bx	lr
 80040ea:	bf00      	nop
 80040ec:	080040f9 	.word	0x080040f9

080040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80040f0:	6803      	ldr	r3, [r0, #0]
 80040f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80040f4:	4718      	bx	r3
	...

080040f8 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoSpongeScreenNoTransitionImpl()
{
 80040f8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SpongeView, SpongePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80040fc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004100:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004102:	68b0      	ldr	r0, [r6, #8]
 8004104:	6803      	ldr	r3, [r0, #0]
 8004106:	6a1b      	ldr	r3, [r3, #32]
 8004108:	4798      	blx	r3
 800410a:	f5b0 7f4e 	cmp.w	r0, #824	@ 0x338
 800410e:	d205      	bcs.n	800411c <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x24>
 8004110:	4b43      	ldr	r3, [pc, #268]	@ (8004220 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x128>)
 8004112:	4a44      	ldr	r2, [pc, #272]	@ (8004224 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x12c>)
 8004114:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004116:	4844      	ldr	r0, [pc, #272]	@ (8004228 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x130>)
 8004118:	f02a fb42 	bl	802e7a0 <__assert_func>
 800411c:	6870      	ldr	r0, [r6, #4]
 800411e:	6803      	ldr	r3, [r0, #0]
 8004120:	6a1b      	ldr	r3, [r3, #32]
 8004122:	4798      	blx	r3
 8004124:	280f      	cmp	r0, #15
 8004126:	d803      	bhi.n	8004130 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x38>
 8004128:	4b40      	ldr	r3, [pc, #256]	@ (800422c <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x134>)
 800412a:	4a3e      	ldr	r2, [pc, #248]	@ (8004224 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x12c>)
 800412c:	21a4      	movs	r1, #164	@ 0xa4
 800412e:	e7f2      	b.n	8004116 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004130:	68f0      	ldr	r0, [r6, #12]
 8004132:	6803      	ldr	r3, [r0, #0]
 8004134:	6a1b      	ldr	r3, [r3, #32]
 8004136:	4798      	blx	r3
 8004138:	280b      	cmp	r0, #11
 800413a:	d803      	bhi.n	8004144 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x4c>
 800413c:	4b3c      	ldr	r3, [pc, #240]	@ (8004230 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x138>)
 800413e:	4a39      	ldr	r2, [pc, #228]	@ (8004224 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x12c>)
 8004140:	21a5      	movs	r1, #165	@ 0xa5
 8004142:	e7e8      	b.n	8004116 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004144:	f017 f95e 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004148:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004238 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800414c:	3004      	adds	r0, #4
 800414e:	f017 f97e 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004152:	f8d9 0000 	ldr.w	r0, [r9]
 8004156:	b110      	cbz	r0, 800415e <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004158:	6803      	ldr	r3, [r0, #0]
 800415a:	68db      	ldr	r3, [r3, #12]
 800415c:	4798      	blx	r3
    if (*currentTrans)
 800415e:	f8d9 0000 	ldr.w	r0, [r9]
 8004162:	b110      	cbz	r0, 800416a <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004164:	6803      	ldr	r3, [r0, #0]
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	4798      	blx	r3
    if (*currentScreen)
 800416a:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800423c <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x144>
 800416e:	f8d8 0000 	ldr.w	r0, [r8]
 8004172:	b110      	cbz	r0, 800417a <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004174:	6803      	ldr	r3, [r0, #0]
 8004176:	695b      	ldr	r3, [r3, #20]
 8004178:	4798      	blx	r3
    if (*currentPresenter)
 800417a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800417e:	b110      	cbz	r0, 8004186 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004180:	6803      	ldr	r3, [r0, #0]
 8004182:	685b      	ldr	r3, [r3, #4]
 8004184:	4798      	blx	r3
    if (*currentScreen)
 8004186:	f8d8 0000 	ldr.w	r0, [r8]
 800418a:	b110      	cbz	r0, 8004192 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800418c:	6803      	ldr	r3, [r0, #0]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	4798      	blx	r3
    if (*currentPresenter)
 8004192:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004196:	b110      	cbz	r0, 800419e <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004198:	6803      	ldr	r3, [r0, #0]
 800419a:	689b      	ldr	r3, [r3, #8]
 800419c:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800419e:	68f0      	ldr	r0, [r6, #12]
 80041a0:	2100      	movs	r1, #0
 80041a2:	f7ff ffa5 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 80041a6:	f04f 0b00 	mov.w	fp, #0
 80041aa:	4b22      	ldr	r3, [pc, #136]	@ (8004234 <_ZN23FrontendApplicationBase32gotoSpongeScreenNoTransitionImplEv+0x13c>)
 80041ac:	f8c0 b004 	str.w	fp, [r0, #4]
 80041b0:	4604      	mov	r4, r0
 80041b2:	f880 b008 	strb.w	fp, [r0, #8]
 80041b6:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041b8:	68b0      	ldr	r0, [r6, #8]
 80041ba:	6803      	ldr	r3, [r0, #0]
 80041bc:	4659      	mov	r1, fp
 80041be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041c0:	4798      	blx	r3
 80041c2:	4605      	mov	r5, r0
 80041c4:	f00b fdee 	bl	800fda4 <_ZN10SpongeViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041c8:	6870      	ldr	r0, [r6, #4]
 80041ca:	6803      	ldr	r3, [r0, #0]
 80041cc:	4659      	mov	r1, fp
 80041ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80041d0:	4798      	blx	r3
 80041d2:	4629      	mov	r1, r5
 80041d4:	4606      	mov	r6, r0
 80041d6:	f00b fdc3 	bl	800fd60 <_ZN15SpongePresenterC1ER10SpongeView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 80041da:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80041dc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80041e0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80041e4:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80041e8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80041ec:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80041ee:	f8c6 a008 	str.w	sl, [r6, #8]
 80041f2:	4628      	mov	r0, r5
 80041f4:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80041f6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80041f8:	4798      	blx	r3
    newPresenter->activate();
 80041fa:	6833      	ldr	r3, [r6, #0]
 80041fc:	4630      	mov	r0, r6
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004202:	4621      	mov	r1, r4
 8004204:	4628      	mov	r0, r5
 8004206:	f019 facf 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800420a:	6823      	ldr	r3, [r4, #0]
 800420c:	4620      	mov	r0, r4
 800420e:	691b      	ldr	r3, [r3, #16]
 8004210:	4798      	blx	r3
    newTransition->invalidate();
 8004212:	6823      	ldr	r3, [r4, #0]
 8004214:	695b      	ldr	r3, [r3, #20]
 8004216:	4620      	mov	r0, r4
}
 8004218:	b001      	add	sp, #4
 800421a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800421e:	4718      	bx	r3
 8004220:	0802fd49 	.word	0x0802fd49
 8004224:	0802fdd7 	.word	0x0802fdd7
 8004228:	0802fea7 	.word	0x0802fea7
 800422c:	0802feee 	.word	0x0802feee
 8004230:	0802ff91 	.word	0x0802ff91
 8004234:	08032408 	.word	0x08032408
 8004238:	2001392c 	.word	0x2001392c
 800423c:	20013928 	.word	0x20013928

08004240 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv>:
{
 8004240:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Character_FinalView, Character_FinalPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004244:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004248:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800424a:	68b0      	ldr	r0, [r6, #8]
 800424c:	6803      	ldr	r3, [r0, #0]
 800424e:	6a1b      	ldr	r3, [r3, #32]
 8004250:	4798      	blx	r3
 8004252:	f5b0 7ffe 	cmp.w	r0, #508	@ 0x1fc
 8004256:	d205      	bcs.n	8004264 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x24>
 8004258:	4b43      	ldr	r3, [pc, #268]	@ (8004368 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x128>)
 800425a:	4a44      	ldr	r2, [pc, #272]	@ (800436c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x12c>)
 800425c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800425e:	4844      	ldr	r0, [pc, #272]	@ (8004370 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x130>)
 8004260:	f02a fa9e 	bl	802e7a0 <__assert_func>
 8004264:	6870      	ldr	r0, [r6, #4]
 8004266:	6803      	ldr	r3, [r0, #0]
 8004268:	6a1b      	ldr	r3, [r3, #32]
 800426a:	4798      	blx	r3
 800426c:	280f      	cmp	r0, #15
 800426e:	d803      	bhi.n	8004278 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x38>
 8004270:	4b40      	ldr	r3, [pc, #256]	@ (8004374 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x134>)
 8004272:	4a3e      	ldr	r2, [pc, #248]	@ (800436c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x12c>)
 8004274:	21a4      	movs	r1, #164	@ 0xa4
 8004276:	e7f2      	b.n	800425e <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004278:	68f0      	ldr	r0, [r6, #12]
 800427a:	6803      	ldr	r3, [r0, #0]
 800427c:	6a1b      	ldr	r3, [r3, #32]
 800427e:	4798      	blx	r3
 8004280:	280b      	cmp	r0, #11
 8004282:	d803      	bhi.n	800428c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x4c>
 8004284:	4b3c      	ldr	r3, [pc, #240]	@ (8004378 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x138>)
 8004286:	4a39      	ldr	r2, [pc, #228]	@ (800436c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x12c>)
 8004288:	21a5      	movs	r1, #165	@ 0xa5
 800428a:	e7e8      	b.n	800425e <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800428c:	f017 f8ba 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004290:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004380 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x140>
 8004294:	3004      	adds	r0, #4
 8004296:	f017 f8da 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800429a:	f8d9 0000 	ldr.w	r0, [r9]
 800429e:	b110      	cbz	r0, 80042a6 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80042a0:	6803      	ldr	r3, [r0, #0]
 80042a2:	68db      	ldr	r3, [r3, #12]
 80042a4:	4798      	blx	r3
    if (*currentTrans)
 80042a6:	f8d9 0000 	ldr.w	r0, [r9]
 80042aa:	b110      	cbz	r0, 80042b2 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80042ac:	6803      	ldr	r3, [r0, #0]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	4798      	blx	r3
    if (*currentScreen)
 80042b2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004384 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x144>
 80042b6:	f8d8 0000 	ldr.w	r0, [r8]
 80042ba:	b110      	cbz	r0, 80042c2 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80042bc:	6803      	ldr	r3, [r0, #0]
 80042be:	695b      	ldr	r3, [r3, #20]
 80042c0:	4798      	blx	r3
    if (*currentPresenter)
 80042c2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80042c6:	b110      	cbz	r0, 80042ce <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80042c8:	6803      	ldr	r3, [r0, #0]
 80042ca:	685b      	ldr	r3, [r3, #4]
 80042cc:	4798      	blx	r3
    if (*currentScreen)
 80042ce:	f8d8 0000 	ldr.w	r0, [r8]
 80042d2:	b110      	cbz	r0, 80042da <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80042d4:	6803      	ldr	r3, [r0, #0]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	4798      	blx	r3
    if (*currentPresenter)
 80042da:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80042de:	b110      	cbz	r0, 80042e6 <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80042e0:	6803      	ldr	r3, [r0, #0]
 80042e2:	689b      	ldr	r3, [r3, #8]
 80042e4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80042e6:	68f0      	ldr	r0, [r6, #12]
 80042e8:	2100      	movs	r1, #0
 80042ea:	f7ff ff01 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80042ee:	f04f 0b00 	mov.w	fp, #0
 80042f2:	4b22      	ldr	r3, [pc, #136]	@ (800437c <_ZN23FrontendApplicationBase41gotoCharacter_FinalScreenNoTransitionImplEv+0x13c>)
 80042f4:	f8c0 b004 	str.w	fp, [r0, #4]
 80042f8:	4604      	mov	r4, r0
 80042fa:	f880 b008 	strb.w	fp, [r0, #8]
 80042fe:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004300:	68b0      	ldr	r0, [r6, #8]
 8004302:	6803      	ldr	r3, [r0, #0]
 8004304:	4659      	mov	r1, fp
 8004306:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004308:	4798      	blx	r3
 800430a:	4605      	mov	r5, r0
 800430c:	f006 fb74 	bl	800a9f8 <_ZN19Character_FinalViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004310:	6870      	ldr	r0, [r6, #4]
 8004312:	6803      	ldr	r3, [r0, #0]
 8004314:	4659      	mov	r1, fp
 8004316:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004318:	4798      	blx	r3
 800431a:	4629      	mov	r1, r5
 800431c:	4606      	mov	r6, r0
 800431e:	f006 fb49 	bl	800a9b4 <_ZN24Character_FinalPresenterC1ER19Character_FinalView>
    model->bind(newPresenter);
 8004322:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004324:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004328:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800432c:	f8c8 5000 	str.w	r5, [r8]
 8004330:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004334:	682b      	ldr	r3, [r5, #0]
 8004336:	f8c6 a008 	str.w	sl, [r6, #8]
 800433a:	4628      	mov	r0, r5
 800433c:	68db      	ldr	r3, [r3, #12]
 800433e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004340:	4798      	blx	r3
    newPresenter->activate();
 8004342:	6833      	ldr	r3, [r6, #0]
 8004344:	4630      	mov	r0, r6
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800434a:	4621      	mov	r1, r4
 800434c:	4628      	mov	r0, r5
 800434e:	f019 fa2b 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004352:	6823      	ldr	r3, [r4, #0]
 8004354:	4620      	mov	r0, r4
 8004356:	691b      	ldr	r3, [r3, #16]
 8004358:	4798      	blx	r3
    newTransition->invalidate();
 800435a:	6823      	ldr	r3, [r4, #0]
 800435c:	695b      	ldr	r3, [r3, #20]
 800435e:	4620      	mov	r0, r4
}
 8004360:	b001      	add	sp, #4
 8004362:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004366:	4718      	bx	r3
 8004368:	0802fd49 	.word	0x0802fd49
 800436c:	08030034 	.word	0x08030034
 8004370:	0802fea7 	.word	0x0802fea7
 8004374:	0802feee 	.word	0x0802feee
 8004378:	0802ff91 	.word	0x0802ff91
 800437c:	08032408 	.word	0x08032408
 8004380:	2001392c 	.word	0x2001392c
 8004384:	20013928 	.word	0x20013928

08004388 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv>:
{
 8004388:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<RewardFinalScreenView, RewardFinalScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800438c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004390:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004392:	68b0      	ldr	r0, [r6, #8]
 8004394:	6803      	ldr	r3, [r0, #0]
 8004396:	6a1b      	ldr	r3, [r3, #32]
 8004398:	4798      	blx	r3
 800439a:	f5b0 7fe8 	cmp.w	r0, #464	@ 0x1d0
 800439e:	d205      	bcs.n	80043ac <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x24>
 80043a0:	4b43      	ldr	r3, [pc, #268]	@ (80044b0 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x128>)
 80043a2:	4a44      	ldr	r2, [pc, #272]	@ (80044b4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x12c>)
 80043a4:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043a6:	4844      	ldr	r0, [pc, #272]	@ (80044b8 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x130>)
 80043a8:	f02a f9fa 	bl	802e7a0 <__assert_func>
 80043ac:	6870      	ldr	r0, [r6, #4]
 80043ae:	6803      	ldr	r3, [r0, #0]
 80043b0:	6a1b      	ldr	r3, [r3, #32]
 80043b2:	4798      	blx	r3
 80043b4:	280f      	cmp	r0, #15
 80043b6:	d803      	bhi.n	80043c0 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x38>
 80043b8:	4b40      	ldr	r3, [pc, #256]	@ (80044bc <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x134>)
 80043ba:	4a3e      	ldr	r2, [pc, #248]	@ (80044b4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x12c>)
 80043bc:	21a4      	movs	r1, #164	@ 0xa4
 80043be:	e7f2      	b.n	80043a6 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043c0:	68f0      	ldr	r0, [r6, #12]
 80043c2:	6803      	ldr	r3, [r0, #0]
 80043c4:	6a1b      	ldr	r3, [r3, #32]
 80043c6:	4798      	blx	r3
 80043c8:	280b      	cmp	r0, #11
 80043ca:	d803      	bhi.n	80043d4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x4c>
 80043cc:	4b3c      	ldr	r3, [pc, #240]	@ (80044c0 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x138>)
 80043ce:	4a39      	ldr	r2, [pc, #228]	@ (80044b4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x12c>)
 80043d0:	21a5      	movs	r1, #165	@ 0xa5
 80043d2:	e7e8      	b.n	80043a6 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80043d4:	f017 f816 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043d8:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80044c8 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x140>
 80043dc:	3004      	adds	r0, #4
 80043de:	f017 f836 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043e2:	f8d9 0000 	ldr.w	r0, [r9]
 80043e6:	b110      	cbz	r0, 80043ee <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80043e8:	6803      	ldr	r3, [r0, #0]
 80043ea:	68db      	ldr	r3, [r3, #12]
 80043ec:	4798      	blx	r3
    if (*currentTrans)
 80043ee:	f8d9 0000 	ldr.w	r0, [r9]
 80043f2:	b110      	cbz	r0, 80043fa <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80043f4:	6803      	ldr	r3, [r0, #0]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	4798      	blx	r3
    if (*currentScreen)
 80043fa:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80044cc <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x144>
 80043fe:	f8d8 0000 	ldr.w	r0, [r8]
 8004402:	b110      	cbz	r0, 800440a <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004404:	6803      	ldr	r3, [r0, #0]
 8004406:	695b      	ldr	r3, [r3, #20]
 8004408:	4798      	blx	r3
    if (*currentPresenter)
 800440a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800440e:	b110      	cbz	r0, 8004416 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004410:	6803      	ldr	r3, [r0, #0]
 8004412:	685b      	ldr	r3, [r3, #4]
 8004414:	4798      	blx	r3
    if (*currentScreen)
 8004416:	f8d8 0000 	ldr.w	r0, [r8]
 800441a:	b110      	cbz	r0, 8004422 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800441c:	6803      	ldr	r3, [r0, #0]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	4798      	blx	r3
    if (*currentPresenter)
 8004422:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004426:	b110      	cbz	r0, 800442e <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004428:	6803      	ldr	r3, [r0, #0]
 800442a:	689b      	ldr	r3, [r3, #8]
 800442c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800442e:	68f0      	ldr	r0, [r6, #12]
 8004430:	2100      	movs	r1, #0
 8004432:	f7ff fe5d 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004436:	f04f 0b00 	mov.w	fp, #0
 800443a:	4b22      	ldr	r3, [pc, #136]	@ (80044c4 <_ZN23FrontendApplicationBase43gotoRewardFinalScreenScreenNoTransitionImplEv+0x13c>)
 800443c:	f8c0 b004 	str.w	fp, [r0, #4]
 8004440:	4604      	mov	r4, r0
 8004442:	f880 b008 	strb.w	fp, [r0, #8]
 8004446:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004448:	68b0      	ldr	r0, [r6, #8]
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	4659      	mov	r1, fp
 800444e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004450:	4798      	blx	r3
 8004452:	4605      	mov	r5, r0
 8004454:	f009 ff32 	bl	800e2bc <_ZN21RewardFinalScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004458:	6870      	ldr	r0, [r6, #4]
 800445a:	6803      	ldr	r3, [r0, #0]
 800445c:	4659      	mov	r1, fp
 800445e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004460:	4798      	blx	r3
 8004462:	4629      	mov	r1, r5
 8004464:	4606      	mov	r6, r0
 8004466:	f009 ff07 	bl	800e278 <_ZN26RewardFinalScreenPresenterC1ER21RewardFinalScreenView>
    model->bind(newPresenter);
 800446a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800446c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004470:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004474:	f8c8 5000 	str.w	r5, [r8]
 8004478:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800447c:	682b      	ldr	r3, [r5, #0]
 800447e:	f8c6 a008 	str.w	sl, [r6, #8]
 8004482:	4628      	mov	r0, r5
 8004484:	68db      	ldr	r3, [r3, #12]
 8004486:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004488:	4798      	blx	r3
    newPresenter->activate();
 800448a:	6833      	ldr	r3, [r6, #0]
 800448c:	4630      	mov	r0, r6
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004492:	4621      	mov	r1, r4
 8004494:	4628      	mov	r0, r5
 8004496:	f019 f987 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800449a:	6823      	ldr	r3, [r4, #0]
 800449c:	4620      	mov	r0, r4
 800449e:	691b      	ldr	r3, [r3, #16]
 80044a0:	4798      	blx	r3
    newTransition->invalidate();
 80044a2:	6823      	ldr	r3, [r4, #0]
 80044a4:	695b      	ldr	r3, [r3, #20]
 80044a6:	4620      	mov	r0, r4
}
 80044a8:	b001      	add	sp, #4
 80044aa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044ae:	4718      	bx	r3
 80044b0:	0802fd49 	.word	0x0802fd49
 80044b4:	08030116 	.word	0x08030116
 80044b8:	0802fea7 	.word	0x0802fea7
 80044bc:	0802feee 	.word	0x0802feee
 80044c0:	0802ff91 	.word	0x0802ff91
 80044c4:	08032408 	.word	0x08032408
 80044c8:	2001392c 	.word	0x2001392c
 80044cc:	20013928 	.word	0x20013928

080044d0 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv>:
{
 80044d0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SakuraFinalScreenView, SakuraFinalScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044d4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80044d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044da:	68b0      	ldr	r0, [r6, #8]
 80044dc:	6803      	ldr	r3, [r0, #0]
 80044de:	6a1b      	ldr	r3, [r3, #32]
 80044e0:	4798      	blx	r3
 80044e2:	f5b0 7f12 	cmp.w	r0, #584	@ 0x248
 80044e6:	d205      	bcs.n	80044f4 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x24>
 80044e8:	4b43      	ldr	r3, [pc, #268]	@ (80045f8 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x128>)
 80044ea:	4a44      	ldr	r2, [pc, #272]	@ (80045fc <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x12c>)
 80044ec:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044ee:	4844      	ldr	r0, [pc, #272]	@ (8004600 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x130>)
 80044f0:	f02a f956 	bl	802e7a0 <__assert_func>
 80044f4:	6870      	ldr	r0, [r6, #4]
 80044f6:	6803      	ldr	r3, [r0, #0]
 80044f8:	6a1b      	ldr	r3, [r3, #32]
 80044fa:	4798      	blx	r3
 80044fc:	280f      	cmp	r0, #15
 80044fe:	d803      	bhi.n	8004508 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x38>
 8004500:	4b40      	ldr	r3, [pc, #256]	@ (8004604 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x134>)
 8004502:	4a3e      	ldr	r2, [pc, #248]	@ (80045fc <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x12c>)
 8004504:	21a4      	movs	r1, #164	@ 0xa4
 8004506:	e7f2      	b.n	80044ee <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004508:	68f0      	ldr	r0, [r6, #12]
 800450a:	6803      	ldr	r3, [r0, #0]
 800450c:	6a1b      	ldr	r3, [r3, #32]
 800450e:	4798      	blx	r3
 8004510:	280b      	cmp	r0, #11
 8004512:	d803      	bhi.n	800451c <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x4c>
 8004514:	4b3c      	ldr	r3, [pc, #240]	@ (8004608 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x138>)
 8004516:	4a39      	ldr	r2, [pc, #228]	@ (80045fc <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x12c>)
 8004518:	21a5      	movs	r1, #165	@ 0xa5
 800451a:	e7e8      	b.n	80044ee <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800451c:	f016 ff72 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004520:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004610 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x140>
 8004524:	3004      	adds	r0, #4
 8004526:	f016 ff92 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800452a:	f8d9 0000 	ldr.w	r0, [r9]
 800452e:	b110      	cbz	r0, 8004536 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004530:	6803      	ldr	r3, [r0, #0]
 8004532:	68db      	ldr	r3, [r3, #12]
 8004534:	4798      	blx	r3
    if (*currentTrans)
 8004536:	f8d9 0000 	ldr.w	r0, [r9]
 800453a:	b110      	cbz	r0, 8004542 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 800453c:	6803      	ldr	r3, [r0, #0]
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	4798      	blx	r3
    if (*currentScreen)
 8004542:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004614 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x144>
 8004546:	f8d8 0000 	ldr.w	r0, [r8]
 800454a:	b110      	cbz	r0, 8004552 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800454c:	6803      	ldr	r3, [r0, #0]
 800454e:	695b      	ldr	r3, [r3, #20]
 8004550:	4798      	blx	r3
    if (*currentPresenter)
 8004552:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004556:	b110      	cbz	r0, 800455e <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004558:	6803      	ldr	r3, [r0, #0]
 800455a:	685b      	ldr	r3, [r3, #4]
 800455c:	4798      	blx	r3
    if (*currentScreen)
 800455e:	f8d8 0000 	ldr.w	r0, [r8]
 8004562:	b110      	cbz	r0, 800456a <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004564:	6803      	ldr	r3, [r0, #0]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	4798      	blx	r3
    if (*currentPresenter)
 800456a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800456e:	b110      	cbz	r0, 8004576 <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004570:	6803      	ldr	r3, [r0, #0]
 8004572:	689b      	ldr	r3, [r3, #8]
 8004574:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004576:	68f0      	ldr	r0, [r6, #12]
 8004578:	2100      	movs	r1, #0
 800457a:	f7ff fdb9 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800457e:	f04f 0b00 	mov.w	fp, #0
 8004582:	4b22      	ldr	r3, [pc, #136]	@ (800460c <_ZN23FrontendApplicationBase43gotoSakuraFinalScreenScreenNoTransitionImplEv+0x13c>)
 8004584:	f8c0 b004 	str.w	fp, [r0, #4]
 8004588:	4604      	mov	r4, r0
 800458a:	f880 b008 	strb.w	fp, [r0, #8]
 800458e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004590:	68b0      	ldr	r0, [r6, #8]
 8004592:	6803      	ldr	r3, [r0, #0]
 8004594:	4659      	mov	r1, fp
 8004596:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004598:	4798      	blx	r3
 800459a:	4605      	mov	r5, r0
 800459c:	f009 ff06 	bl	800e3ac <_ZN21SakuraFinalScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045a0:	6870      	ldr	r0, [r6, #4]
 80045a2:	6803      	ldr	r3, [r0, #0]
 80045a4:	4659      	mov	r1, fp
 80045a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045a8:	4798      	blx	r3
 80045aa:	4629      	mov	r1, r5
 80045ac:	4606      	mov	r6, r0
 80045ae:	f009 fedb 	bl	800e368 <_ZN26SakuraFinalScreenPresenterC1ER21SakuraFinalScreenView>
    model->bind(newPresenter);
 80045b2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80045b4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80045b8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80045bc:	f8c8 5000 	str.w	r5, [r8]
 80045c0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045c4:	682b      	ldr	r3, [r5, #0]
 80045c6:	f8c6 a008 	str.w	sl, [r6, #8]
 80045ca:	4628      	mov	r0, r5
 80045cc:	68db      	ldr	r3, [r3, #12]
 80045ce:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80045d0:	4798      	blx	r3
    newPresenter->activate();
 80045d2:	6833      	ldr	r3, [r6, #0]
 80045d4:	4630      	mov	r0, r6
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045da:	4621      	mov	r1, r4
 80045dc:	4628      	mov	r0, r5
 80045de:	f019 f8e3 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045e2:	6823      	ldr	r3, [r4, #0]
 80045e4:	4620      	mov	r0, r4
 80045e6:	691b      	ldr	r3, [r3, #16]
 80045e8:	4798      	blx	r3
    newTransition->invalidate();
 80045ea:	6823      	ldr	r3, [r4, #0]
 80045ec:	695b      	ldr	r3, [r3, #20]
 80045ee:	4620      	mov	r0, r4
}
 80045f0:	b001      	add	sp, #4
 80045f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045f6:	4718      	bx	r3
 80045f8:	0802fd49 	.word	0x0802fd49
 80045fc:	080301fc 	.word	0x080301fc
 8004600:	0802fea7 	.word	0x0802fea7
 8004604:	0802feee 	.word	0x0802feee
 8004608:	0802ff91 	.word	0x0802ff91
 800460c:	08032408 	.word	0x08032408
 8004610:	2001392c 	.word	0x2001392c
 8004614:	20013928 	.word	0x20013928

08004618 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv>:
{
 8004618:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Character1View, Character1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800461c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004620:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004622:	68b0      	ldr	r0, [r6, #8]
 8004624:	6803      	ldr	r3, [r0, #0]
 8004626:	6a1b      	ldr	r3, [r3, #32]
 8004628:	4798      	blx	r3
 800462a:	f5b0 7f90 	cmp.w	r0, #288	@ 0x120
 800462e:	d205      	bcs.n	800463c <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x24>
 8004630:	4b43      	ldr	r3, [pc, #268]	@ (8004740 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x128>)
 8004632:	4a44      	ldr	r2, [pc, #272]	@ (8004744 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x12c>)
 8004634:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004636:	4844      	ldr	r0, [pc, #272]	@ (8004748 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x130>)
 8004638:	f02a f8b2 	bl	802e7a0 <__assert_func>
 800463c:	6870      	ldr	r0, [r6, #4]
 800463e:	6803      	ldr	r3, [r0, #0]
 8004640:	6a1b      	ldr	r3, [r3, #32]
 8004642:	4798      	blx	r3
 8004644:	280f      	cmp	r0, #15
 8004646:	d803      	bhi.n	8004650 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x38>
 8004648:	4b40      	ldr	r3, [pc, #256]	@ (800474c <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x134>)
 800464a:	4a3e      	ldr	r2, [pc, #248]	@ (8004744 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x12c>)
 800464c:	21a4      	movs	r1, #164	@ 0xa4
 800464e:	e7f2      	b.n	8004636 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004650:	68f0      	ldr	r0, [r6, #12]
 8004652:	6803      	ldr	r3, [r0, #0]
 8004654:	6a1b      	ldr	r3, [r3, #32]
 8004656:	4798      	blx	r3
 8004658:	280b      	cmp	r0, #11
 800465a:	d803      	bhi.n	8004664 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x4c>
 800465c:	4b3c      	ldr	r3, [pc, #240]	@ (8004750 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x138>)
 800465e:	4a39      	ldr	r2, [pc, #228]	@ (8004744 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x12c>)
 8004660:	21a5      	movs	r1, #165	@ 0xa5
 8004662:	e7e8      	b.n	8004636 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004664:	f016 fece 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004668:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004758 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x140>
 800466c:	3004      	adds	r0, #4
 800466e:	f016 feee 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004672:	f8d9 0000 	ldr.w	r0, [r9]
 8004676:	b110      	cbz	r0, 800467e <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004678:	6803      	ldr	r3, [r0, #0]
 800467a:	68db      	ldr	r3, [r3, #12]
 800467c:	4798      	blx	r3
    if (*currentTrans)
 800467e:	f8d9 0000 	ldr.w	r0, [r9]
 8004682:	b110      	cbz	r0, 800468a <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004684:	6803      	ldr	r3, [r0, #0]
 8004686:	681b      	ldr	r3, [r3, #0]
 8004688:	4798      	blx	r3
    if (*currentScreen)
 800468a:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800475c <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x144>
 800468e:	f8d8 0000 	ldr.w	r0, [r8]
 8004692:	b110      	cbz	r0, 800469a <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004694:	6803      	ldr	r3, [r0, #0]
 8004696:	695b      	ldr	r3, [r3, #20]
 8004698:	4798      	blx	r3
    if (*currentPresenter)
 800469a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800469e:	b110      	cbz	r0, 80046a6 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80046a0:	6803      	ldr	r3, [r0, #0]
 80046a2:	685b      	ldr	r3, [r3, #4]
 80046a4:	4798      	blx	r3
    if (*currentScreen)
 80046a6:	f8d8 0000 	ldr.w	r0, [r8]
 80046aa:	b110      	cbz	r0, 80046b2 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80046ac:	6803      	ldr	r3, [r0, #0]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	4798      	blx	r3
    if (*currentPresenter)
 80046b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80046b6:	b110      	cbz	r0, 80046be <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80046b8:	6803      	ldr	r3, [r0, #0]
 80046ba:	689b      	ldr	r3, [r3, #8]
 80046bc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046be:	68f0      	ldr	r0, [r6, #12]
 80046c0:	2100      	movs	r1, #0
 80046c2:	f7ff fd15 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80046c6:	f04f 0b00 	mov.w	fp, #0
 80046ca:	4b22      	ldr	r3, [pc, #136]	@ (8004754 <_ZN23FrontendApplicationBase36gotoCharacter1ScreenNoTransitionImplEv+0x13c>)
 80046cc:	f8c0 b004 	str.w	fp, [r0, #4]
 80046d0:	4604      	mov	r4, r0
 80046d2:	f880 b008 	strb.w	fp, [r0, #8]
 80046d6:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046d8:	68b0      	ldr	r0, [r6, #8]
 80046da:	6803      	ldr	r3, [r0, #0]
 80046dc:	4659      	mov	r1, fp
 80046de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046e0:	4798      	blx	r3
 80046e2:	4605      	mov	r5, r0
 80046e4:	f005 ff10 	bl	800a508 <_ZN14Character1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046e8:	6870      	ldr	r0, [r6, #4]
 80046ea:	6803      	ldr	r3, [r0, #0]
 80046ec:	4659      	mov	r1, fp
 80046ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046f0:	4798      	blx	r3
 80046f2:	4629      	mov	r1, r5
 80046f4:	4606      	mov	r6, r0
 80046f6:	f005 fee5 	bl	800a4c4 <_ZN19Character1PresenterC1ER14Character1View>
    model->bind(newPresenter);
 80046fa:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80046fc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004700:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004704:	f8c8 5000 	str.w	r5, [r8]
 8004708:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800470c:	682b      	ldr	r3, [r5, #0]
 800470e:	f8c6 a008 	str.w	sl, [r6, #8]
 8004712:	4628      	mov	r0, r5
 8004714:	68db      	ldr	r3, [r3, #12]
 8004716:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004718:	4798      	blx	r3
    newPresenter->activate();
 800471a:	6833      	ldr	r3, [r6, #0]
 800471c:	4630      	mov	r0, r6
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004722:	4621      	mov	r1, r4
 8004724:	4628      	mov	r0, r5
 8004726:	f019 f83f 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800472a:	6823      	ldr	r3, [r4, #0]
 800472c:	4620      	mov	r0, r4
 800472e:	691b      	ldr	r3, [r3, #16]
 8004730:	4798      	blx	r3
    newTransition->invalidate();
 8004732:	6823      	ldr	r3, [r4, #0]
 8004734:	695b      	ldr	r3, [r3, #20]
 8004736:	4620      	mov	r0, r4
}
 8004738:	b001      	add	sp, #4
 800473a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800473e:	4718      	bx	r3
 8004740:	0802fd49 	.word	0x0802fd49
 8004744:	080302e2 	.word	0x080302e2
 8004748:	0802fea7 	.word	0x0802fea7
 800474c:	0802feee 	.word	0x0802feee
 8004750:	0802ff91 	.word	0x0802ff91
 8004754:	08032408 	.word	0x08032408
 8004758:	2001392c 	.word	0x2001392c
 800475c:	20013928 	.word	0x20013928

08004760 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv>:
{
 8004760:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<NarutoGameScreen2View, NarutoGameScreen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004764:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004768:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800476a:	68b0      	ldr	r0, [r6, #8]
 800476c:	6803      	ldr	r3, [r0, #0]
 800476e:	6a1b      	ldr	r3, [r3, #32]
 8004770:	4798      	blx	r3
 8004772:	f5b0 6f2d 	cmp.w	r0, #2768	@ 0xad0
 8004776:	d205      	bcs.n	8004784 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x24>
 8004778:	4b43      	ldr	r3, [pc, #268]	@ (8004888 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x128>)
 800477a:	4a44      	ldr	r2, [pc, #272]	@ (800488c <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x12c>)
 800477c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800477e:	4844      	ldr	r0, [pc, #272]	@ (8004890 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x130>)
 8004780:	f02a f80e 	bl	802e7a0 <__assert_func>
 8004784:	6870      	ldr	r0, [r6, #4]
 8004786:	6803      	ldr	r3, [r0, #0]
 8004788:	6a1b      	ldr	r3, [r3, #32]
 800478a:	4798      	blx	r3
 800478c:	280f      	cmp	r0, #15
 800478e:	d803      	bhi.n	8004798 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x38>
 8004790:	4b40      	ldr	r3, [pc, #256]	@ (8004894 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x134>)
 8004792:	4a3e      	ldr	r2, [pc, #248]	@ (800488c <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x12c>)
 8004794:	21a4      	movs	r1, #164	@ 0xa4
 8004796:	e7f2      	b.n	800477e <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004798:	68f0      	ldr	r0, [r6, #12]
 800479a:	6803      	ldr	r3, [r0, #0]
 800479c:	6a1b      	ldr	r3, [r3, #32]
 800479e:	4798      	blx	r3
 80047a0:	280b      	cmp	r0, #11
 80047a2:	d803      	bhi.n	80047ac <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x4c>
 80047a4:	4b3c      	ldr	r3, [pc, #240]	@ (8004898 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x138>)
 80047a6:	4a39      	ldr	r2, [pc, #228]	@ (800488c <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x12c>)
 80047a8:	21a5      	movs	r1, #165	@ 0xa5
 80047aa:	e7e8      	b.n	800477e <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80047ac:	f016 fe2a 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80047b0:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80048a0 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x140>
 80047b4:	3004      	adds	r0, #4
 80047b6:	f016 fe4a 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80047ba:	f8d9 0000 	ldr.w	r0, [r9]
 80047be:	b110      	cbz	r0, 80047c6 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80047c0:	6803      	ldr	r3, [r0, #0]
 80047c2:	68db      	ldr	r3, [r3, #12]
 80047c4:	4798      	blx	r3
    if (*currentTrans)
 80047c6:	f8d9 0000 	ldr.w	r0, [r9]
 80047ca:	b110      	cbz	r0, 80047d2 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80047cc:	6803      	ldr	r3, [r0, #0]
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	4798      	blx	r3
    if (*currentScreen)
 80047d2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80048a4 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x144>
 80047d6:	f8d8 0000 	ldr.w	r0, [r8]
 80047da:	b110      	cbz	r0, 80047e2 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80047dc:	6803      	ldr	r3, [r0, #0]
 80047de:	695b      	ldr	r3, [r3, #20]
 80047e0:	4798      	blx	r3
    if (*currentPresenter)
 80047e2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80047e6:	b110      	cbz	r0, 80047ee <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80047e8:	6803      	ldr	r3, [r0, #0]
 80047ea:	685b      	ldr	r3, [r3, #4]
 80047ec:	4798      	blx	r3
    if (*currentScreen)
 80047ee:	f8d8 0000 	ldr.w	r0, [r8]
 80047f2:	b110      	cbz	r0, 80047fa <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80047f4:	6803      	ldr	r3, [r0, #0]
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	4798      	blx	r3
    if (*currentPresenter)
 80047fa:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80047fe:	b110      	cbz	r0, 8004806 <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004800:	6803      	ldr	r3, [r0, #0]
 8004802:	689b      	ldr	r3, [r3, #8]
 8004804:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004806:	68f0      	ldr	r0, [r6, #12]
 8004808:	2100      	movs	r1, #0
 800480a:	f7ff fc71 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800480e:	f04f 0b00 	mov.w	fp, #0
 8004812:	4b22      	ldr	r3, [pc, #136]	@ (800489c <_ZN23FrontendApplicationBase43gotoNarutoGameScreen2ScreenNoTransitionImplEv+0x13c>)
 8004814:	f8c0 b004 	str.w	fp, [r0, #4]
 8004818:	4604      	mov	r4, r0
 800481a:	f880 b008 	strb.w	fp, [r0, #8]
 800481e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004820:	68b0      	ldr	r0, [r6, #8]
 8004822:	6803      	ldr	r3, [r0, #0]
 8004824:	4659      	mov	r1, fp
 8004826:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004828:	4798      	blx	r3
 800482a:	4605      	mov	r5, r0
 800482c:	f008 f8e2 	bl	800c9f4 <_ZN21NarutoGameScreen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004830:	6870      	ldr	r0, [r6, #4]
 8004832:	6803      	ldr	r3, [r0, #0]
 8004834:	4659      	mov	r1, fp
 8004836:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004838:	4798      	blx	r3
 800483a:	4629      	mov	r1, r5
 800483c:	4606      	mov	r6, r0
 800483e:	f008 f8af 	bl	800c9a0 <_ZN26NarutoGameScreen2PresenterC1ER21NarutoGameScreen2View>
    model->bind(newPresenter);
 8004842:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004844:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004848:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800484c:	f8c8 5000 	str.w	r5, [r8]
 8004850:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004854:	682b      	ldr	r3, [r5, #0]
 8004856:	f8c6 a008 	str.w	sl, [r6, #8]
 800485a:	4628      	mov	r0, r5
 800485c:	68db      	ldr	r3, [r3, #12]
 800485e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004860:	4798      	blx	r3
    newPresenter->activate();
 8004862:	6833      	ldr	r3, [r6, #0]
 8004864:	4630      	mov	r0, r6
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800486a:	4621      	mov	r1, r4
 800486c:	4628      	mov	r0, r5
 800486e:	f018 ff9b 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004872:	6823      	ldr	r3, [r4, #0]
 8004874:	4620      	mov	r0, r4
 8004876:	691b      	ldr	r3, [r3, #16]
 8004878:	4798      	blx	r3
    newTransition->invalidate();
 800487a:	6823      	ldr	r3, [r4, #0]
 800487c:	695b      	ldr	r3, [r3, #20]
 800487e:	4620      	mov	r0, r4
}
 8004880:	b001      	add	sp, #4
 8004882:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004886:	4718      	bx	r3
 8004888:	0802fd49 	.word	0x0802fd49
 800488c:	080303ba 	.word	0x080303ba
 8004890:	0802fea7 	.word	0x0802fea7
 8004894:	0802feee 	.word	0x0802feee
 8004898:	0802ff91 	.word	0x0802ff91
 800489c:	08032408 	.word	0x08032408
 80048a0:	2001392c 	.word	0x2001392c
 80048a4:	20013928 	.word	0x20013928

080048a8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv>:
{
 80048a8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SakuraGameScreenView, SakuraGameScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80048ac:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80048b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80048b2:	68b0      	ldr	r0, [r6, #8]
 80048b4:	6803      	ldr	r3, [r0, #0]
 80048b6:	6a1b      	ldr	r3, [r3, #32]
 80048b8:	4798      	blx	r3
 80048ba:	f5b0 6f2d 	cmp.w	r0, #2768	@ 0xad0
 80048be:	d205      	bcs.n	80048cc <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x24>
 80048c0:	4b43      	ldr	r3, [pc, #268]	@ (80049d0 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x128>)
 80048c2:	4a44      	ldr	r2, [pc, #272]	@ (80049d4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x12c>)
 80048c4:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048c6:	4844      	ldr	r0, [pc, #272]	@ (80049d8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x130>)
 80048c8:	f029 ff6a 	bl	802e7a0 <__assert_func>
 80048cc:	6870      	ldr	r0, [r6, #4]
 80048ce:	6803      	ldr	r3, [r0, #0]
 80048d0:	6a1b      	ldr	r3, [r3, #32]
 80048d2:	4798      	blx	r3
 80048d4:	280f      	cmp	r0, #15
 80048d6:	d803      	bhi.n	80048e0 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x38>
 80048d8:	4b40      	ldr	r3, [pc, #256]	@ (80049dc <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x134>)
 80048da:	4a3e      	ldr	r2, [pc, #248]	@ (80049d4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x12c>)
 80048dc:	21a4      	movs	r1, #164	@ 0xa4
 80048de:	e7f2      	b.n	80048c6 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048e0:	68f0      	ldr	r0, [r6, #12]
 80048e2:	6803      	ldr	r3, [r0, #0]
 80048e4:	6a1b      	ldr	r3, [r3, #32]
 80048e6:	4798      	blx	r3
 80048e8:	280b      	cmp	r0, #11
 80048ea:	d803      	bhi.n	80048f4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x4c>
 80048ec:	4b3c      	ldr	r3, [pc, #240]	@ (80049e0 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x138>)
 80048ee:	4a39      	ldr	r2, [pc, #228]	@ (80049d4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x12c>)
 80048f0:	21a5      	movs	r1, #165	@ 0xa5
 80048f2:	e7e8      	b.n	80048c6 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80048f4:	f016 fd86 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048f8:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80049e8 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x140>
 80048fc:	3004      	adds	r0, #4
 80048fe:	f016 fda6 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004902:	f8d9 0000 	ldr.w	r0, [r9]
 8004906:	b110      	cbz	r0, 800490e <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004908:	6803      	ldr	r3, [r0, #0]
 800490a:	68db      	ldr	r3, [r3, #12]
 800490c:	4798      	blx	r3
    if (*currentTrans)
 800490e:	f8d9 0000 	ldr.w	r0, [r9]
 8004912:	b110      	cbz	r0, 800491a <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004914:	6803      	ldr	r3, [r0, #0]
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	4798      	blx	r3
    if (*currentScreen)
 800491a:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80049ec <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x144>
 800491e:	f8d8 0000 	ldr.w	r0, [r8]
 8004922:	b110      	cbz	r0, 800492a <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004924:	6803      	ldr	r3, [r0, #0]
 8004926:	695b      	ldr	r3, [r3, #20]
 8004928:	4798      	blx	r3
    if (*currentPresenter)
 800492a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800492e:	b110      	cbz	r0, 8004936 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004930:	6803      	ldr	r3, [r0, #0]
 8004932:	685b      	ldr	r3, [r3, #4]
 8004934:	4798      	blx	r3
    if (*currentScreen)
 8004936:	f8d8 0000 	ldr.w	r0, [r8]
 800493a:	b110      	cbz	r0, 8004942 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800493c:	6803      	ldr	r3, [r0, #0]
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	4798      	blx	r3
    if (*currentPresenter)
 8004942:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004946:	b110      	cbz	r0, 800494e <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004948:	6803      	ldr	r3, [r0, #0]
 800494a:	689b      	ldr	r3, [r3, #8]
 800494c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800494e:	68f0      	ldr	r0, [r6, #12]
 8004950:	2100      	movs	r1, #0
 8004952:	f7ff fbcd 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004956:	f04f 0b00 	mov.w	fp, #0
 800495a:	4b22      	ldr	r3, [pc, #136]	@ (80049e4 <_ZN23FrontendApplicationBase42gotoSakuraGameScreenScreenNoTransitionImplEv+0x13c>)
 800495c:	f8c0 b004 	str.w	fp, [r0, #4]
 8004960:	4604      	mov	r4, r0
 8004962:	f880 b008 	strb.w	fp, [r0, #8]
 8004966:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004968:	68b0      	ldr	r0, [r6, #8]
 800496a:	6803      	ldr	r3, [r0, #0]
 800496c:	4659      	mov	r1, fp
 800496e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004970:	4798      	blx	r3
 8004972:	4605      	mov	r5, r0
 8004974:	f009 fd5e 	bl	800e434 <_ZN20SakuraGameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004978:	6870      	ldr	r0, [r6, #4]
 800497a:	6803      	ldr	r3, [r0, #0]
 800497c:	4659      	mov	r1, fp
 800497e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004980:	4798      	blx	r3
 8004982:	4629      	mov	r1, r5
 8004984:	4606      	mov	r6, r0
 8004986:	f009 fd2b 	bl	800e3e0 <_ZN25SakuraGameScreenPresenterC1ER20SakuraGameScreenView>
    model->bind(newPresenter);
 800498a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800498c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004990:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004994:	f8c8 5000 	str.w	r5, [r8]
 8004998:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800499c:	682b      	ldr	r3, [r5, #0]
 800499e:	f8c6 a008 	str.w	sl, [r6, #8]
 80049a2:	4628      	mov	r0, r5
 80049a4:	68db      	ldr	r3, [r3, #12]
 80049a6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80049a8:	4798      	blx	r3
    newPresenter->activate();
 80049aa:	6833      	ldr	r3, [r6, #0]
 80049ac:	4630      	mov	r0, r6
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049b2:	4621      	mov	r1, r4
 80049b4:	4628      	mov	r0, r5
 80049b6:	f018 fef7 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049ba:	6823      	ldr	r3, [r4, #0]
 80049bc:	4620      	mov	r0, r4
 80049be:	691b      	ldr	r3, [r3, #16]
 80049c0:	4798      	blx	r3
    newTransition->invalidate();
 80049c2:	6823      	ldr	r3, [r4, #0]
 80049c4:	695b      	ldr	r3, [r3, #20]
 80049c6:	4620      	mov	r0, r4
}
 80049c8:	b001      	add	sp, #4
 80049ca:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049ce:	4718      	bx	r3
 80049d0:	0802fd49 	.word	0x0802fd49
 80049d4:	080304a0 	.word	0x080304a0
 80049d8:	0802fea7 	.word	0x0802fea7
 80049dc:	0802feee 	.word	0x0802feee
 80049e0:	0802ff91 	.word	0x0802ff91
 80049e4:	08032408 	.word	0x08032408
 80049e8:	2001392c 	.word	0x2001392c
 80049ec:	20013928 	.word	0x20013928

080049f0 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv>:
{
 80049f0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SakuraMainScreenView, SakuraMainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049f4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80049f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049fa:	68b0      	ldr	r0, [r6, #8]
 80049fc:	6803      	ldr	r3, [r0, #0]
 80049fe:	6a1b      	ldr	r3, [r3, #32]
 8004a00:	4798      	blx	r3
 8004a02:	f5b0 7f30 	cmp.w	r0, #704	@ 0x2c0
 8004a06:	d205      	bcs.n	8004a14 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x24>
 8004a08:	4b43      	ldr	r3, [pc, #268]	@ (8004b18 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x128>)
 8004a0a:	4a44      	ldr	r2, [pc, #272]	@ (8004b1c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x12c>)
 8004a0c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a0e:	4844      	ldr	r0, [pc, #272]	@ (8004b20 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x130>)
 8004a10:	f029 fec6 	bl	802e7a0 <__assert_func>
 8004a14:	6870      	ldr	r0, [r6, #4]
 8004a16:	6803      	ldr	r3, [r0, #0]
 8004a18:	6a1b      	ldr	r3, [r3, #32]
 8004a1a:	4798      	blx	r3
 8004a1c:	280f      	cmp	r0, #15
 8004a1e:	d803      	bhi.n	8004a28 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x38>
 8004a20:	4b40      	ldr	r3, [pc, #256]	@ (8004b24 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x134>)
 8004a22:	4a3e      	ldr	r2, [pc, #248]	@ (8004b1c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x12c>)
 8004a24:	21a4      	movs	r1, #164	@ 0xa4
 8004a26:	e7f2      	b.n	8004a0e <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a28:	68f0      	ldr	r0, [r6, #12]
 8004a2a:	6803      	ldr	r3, [r0, #0]
 8004a2c:	6a1b      	ldr	r3, [r3, #32]
 8004a2e:	4798      	blx	r3
 8004a30:	280b      	cmp	r0, #11
 8004a32:	d803      	bhi.n	8004a3c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x4c>
 8004a34:	4b3c      	ldr	r3, [pc, #240]	@ (8004b28 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x138>)
 8004a36:	4a39      	ldr	r2, [pc, #228]	@ (8004b1c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x12c>)
 8004a38:	21a5      	movs	r1, #165	@ 0xa5
 8004a3a:	e7e8      	b.n	8004a0e <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004a3c:	f016 fce2 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a40:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004b30 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x140>
 8004a44:	3004      	adds	r0, #4
 8004a46:	f016 fd02 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a4a:	f8d9 0000 	ldr.w	r0, [r9]
 8004a4e:	b110      	cbz	r0, 8004a56 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a50:	6803      	ldr	r3, [r0, #0]
 8004a52:	68db      	ldr	r3, [r3, #12]
 8004a54:	4798      	blx	r3
    if (*currentTrans)
 8004a56:	f8d9 0000 	ldr.w	r0, [r9]
 8004a5a:	b110      	cbz	r0, 8004a62 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a5c:	6803      	ldr	r3, [r0, #0]
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	4798      	blx	r3
    if (*currentScreen)
 8004a62:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004b34 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x144>
 8004a66:	f8d8 0000 	ldr.w	r0, [r8]
 8004a6a:	b110      	cbz	r0, 8004a72 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004a6c:	6803      	ldr	r3, [r0, #0]
 8004a6e:	695b      	ldr	r3, [r3, #20]
 8004a70:	4798      	blx	r3
    if (*currentPresenter)
 8004a72:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004a76:	b110      	cbz	r0, 8004a7e <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004a78:	6803      	ldr	r3, [r0, #0]
 8004a7a:	685b      	ldr	r3, [r3, #4]
 8004a7c:	4798      	blx	r3
    if (*currentScreen)
 8004a7e:	f8d8 0000 	ldr.w	r0, [r8]
 8004a82:	b110      	cbz	r0, 8004a8a <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a84:	6803      	ldr	r3, [r0, #0]
 8004a86:	681b      	ldr	r3, [r3, #0]
 8004a88:	4798      	blx	r3
    if (*currentPresenter)
 8004a8a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004a8e:	b110      	cbz	r0, 8004a96 <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a90:	6803      	ldr	r3, [r0, #0]
 8004a92:	689b      	ldr	r3, [r3, #8]
 8004a94:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a96:	68f0      	ldr	r0, [r6, #12]
 8004a98:	2100      	movs	r1, #0
 8004a9a:	f7ff fb29 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004a9e:	f04f 0b00 	mov.w	fp, #0
 8004aa2:	4b22      	ldr	r3, [pc, #136]	@ (8004b2c <_ZN23FrontendApplicationBase42gotoSakuraMainScreenScreenNoTransitionImplEv+0x13c>)
 8004aa4:	f8c0 b004 	str.w	fp, [r0, #4]
 8004aa8:	4604      	mov	r4, r0
 8004aaa:	f880 b008 	strb.w	fp, [r0, #8]
 8004aae:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ab0:	68b0      	ldr	r0, [r6, #8]
 8004ab2:	6803      	ldr	r3, [r0, #0]
 8004ab4:	4659      	mov	r1, fp
 8004ab6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ab8:	4798      	blx	r3
 8004aba:	4605      	mov	r5, r0
 8004abc:	f00b f936 	bl	800fd2c <_ZN20SakuraMainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ac0:	6870      	ldr	r0, [r6, #4]
 8004ac2:	6803      	ldr	r3, [r0, #0]
 8004ac4:	4659      	mov	r1, fp
 8004ac6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ac8:	4798      	blx	r3
 8004aca:	4629      	mov	r1, r5
 8004acc:	4606      	mov	r6, r0
 8004ace:	f00b f90b 	bl	800fce8 <_ZN25SakuraMainScreenPresenterC1ER20SakuraMainScreenView>
    model->bind(newPresenter);
 8004ad2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004ad4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004ad8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004adc:	f8c8 5000 	str.w	r5, [r8]
 8004ae0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ae4:	682b      	ldr	r3, [r5, #0]
 8004ae6:	f8c6 a008 	str.w	sl, [r6, #8]
 8004aea:	4628      	mov	r0, r5
 8004aec:	68db      	ldr	r3, [r3, #12]
 8004aee:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004af0:	4798      	blx	r3
    newPresenter->activate();
 8004af2:	6833      	ldr	r3, [r6, #0]
 8004af4:	4630      	mov	r0, r6
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004afa:	4621      	mov	r1, r4
 8004afc:	4628      	mov	r0, r5
 8004afe:	f018 fe53 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b02:	6823      	ldr	r3, [r4, #0]
 8004b04:	4620      	mov	r0, r4
 8004b06:	691b      	ldr	r3, [r3, #16]
 8004b08:	4798      	blx	r3
    newTransition->invalidate();
 8004b0a:	6823      	ldr	r3, [r4, #0]
 8004b0c:	695b      	ldr	r3, [r3, #20]
 8004b0e:	4620      	mov	r0, r4
}
 8004b10:	b001      	add	sp, #4
 8004b12:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b16:	4718      	bx	r3
 8004b18:	0802fd49 	.word	0x0802fd49
 8004b1c:	08030584 	.word	0x08030584
 8004b20:	0802fea7 	.word	0x0802fea7
 8004b24:	0802feee 	.word	0x0802feee
 8004b28:	0802ff91 	.word	0x0802ff91
 8004b2c:	08032408 	.word	0x08032408
 8004b30:	2001392c 	.word	0x2001392c
 8004b34:	20013928 	.word	0x20013928

08004b38 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv>:
{
 8004b38:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<RewardScreenView, RewardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b3c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004b40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b42:	68b0      	ldr	r0, [r6, #8]
 8004b44:	6803      	ldr	r3, [r0, #0]
 8004b46:	6a1b      	ldr	r3, [r3, #32]
 8004b48:	4798      	blx	r3
 8004b4a:	f5b0 7fbc 	cmp.w	r0, #376	@ 0x178
 8004b4e:	d205      	bcs.n	8004b5c <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x24>
 8004b50:	4b43      	ldr	r3, [pc, #268]	@ (8004c60 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x128>)
 8004b52:	4a44      	ldr	r2, [pc, #272]	@ (8004c64 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x12c>)
 8004b54:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b56:	4844      	ldr	r0, [pc, #272]	@ (8004c68 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x130>)
 8004b58:	f029 fe22 	bl	802e7a0 <__assert_func>
 8004b5c:	6870      	ldr	r0, [r6, #4]
 8004b5e:	6803      	ldr	r3, [r0, #0]
 8004b60:	6a1b      	ldr	r3, [r3, #32]
 8004b62:	4798      	blx	r3
 8004b64:	280f      	cmp	r0, #15
 8004b66:	d803      	bhi.n	8004b70 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x38>
 8004b68:	4b40      	ldr	r3, [pc, #256]	@ (8004c6c <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x134>)
 8004b6a:	4a3e      	ldr	r2, [pc, #248]	@ (8004c64 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x12c>)
 8004b6c:	21a4      	movs	r1, #164	@ 0xa4
 8004b6e:	e7f2      	b.n	8004b56 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b70:	68f0      	ldr	r0, [r6, #12]
 8004b72:	6803      	ldr	r3, [r0, #0]
 8004b74:	6a1b      	ldr	r3, [r3, #32]
 8004b76:	4798      	blx	r3
 8004b78:	280b      	cmp	r0, #11
 8004b7a:	d803      	bhi.n	8004b84 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x4c>
 8004b7c:	4b3c      	ldr	r3, [pc, #240]	@ (8004c70 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x138>)
 8004b7e:	4a39      	ldr	r2, [pc, #228]	@ (8004c64 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x12c>)
 8004b80:	21a5      	movs	r1, #165	@ 0xa5
 8004b82:	e7e8      	b.n	8004b56 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b84:	f016 fc3e 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b88:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004c78 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x140>
 8004b8c:	3004      	adds	r0, #4
 8004b8e:	f016 fc5e 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b92:	f8d9 0000 	ldr.w	r0, [r9]
 8004b96:	b110      	cbz	r0, 8004b9e <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b98:	6803      	ldr	r3, [r0, #0]
 8004b9a:	68db      	ldr	r3, [r3, #12]
 8004b9c:	4798      	blx	r3
    if (*currentTrans)
 8004b9e:	f8d9 0000 	ldr.w	r0, [r9]
 8004ba2:	b110      	cbz	r0, 8004baa <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ba4:	6803      	ldr	r3, [r0, #0]
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	4798      	blx	r3
    if (*currentScreen)
 8004baa:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004c7c <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x144>
 8004bae:	f8d8 0000 	ldr.w	r0, [r8]
 8004bb2:	b110      	cbz	r0, 8004bba <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004bb4:	6803      	ldr	r3, [r0, #0]
 8004bb6:	695b      	ldr	r3, [r3, #20]
 8004bb8:	4798      	blx	r3
    if (*currentPresenter)
 8004bba:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004bbe:	b110      	cbz	r0, 8004bc6 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004bc0:	6803      	ldr	r3, [r0, #0]
 8004bc2:	685b      	ldr	r3, [r3, #4]
 8004bc4:	4798      	blx	r3
    if (*currentScreen)
 8004bc6:	f8d8 0000 	ldr.w	r0, [r8]
 8004bca:	b110      	cbz	r0, 8004bd2 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004bcc:	6803      	ldr	r3, [r0, #0]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	4798      	blx	r3
    if (*currentPresenter)
 8004bd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004bd6:	b110      	cbz	r0, 8004bde <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004bd8:	6803      	ldr	r3, [r0, #0]
 8004bda:	689b      	ldr	r3, [r3, #8]
 8004bdc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004bde:	68f0      	ldr	r0, [r6, #12]
 8004be0:	2100      	movs	r1, #0
 8004be2:	f7ff fa85 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004be6:	f04f 0b00 	mov.w	fp, #0
 8004bea:	4b22      	ldr	r3, [pc, #136]	@ (8004c74 <_ZN23FrontendApplicationBase38gotoRewardScreenScreenNoTransitionImplEv+0x13c>)
 8004bec:	f8c0 b004 	str.w	fp, [r0, #4]
 8004bf0:	4604      	mov	r4, r0
 8004bf2:	f880 b008 	strb.w	fp, [r0, #8]
 8004bf6:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bf8:	68b0      	ldr	r0, [r6, #8]
 8004bfa:	6803      	ldr	r3, [r0, #0]
 8004bfc:	4659      	mov	r1, fp
 8004bfe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c00:	4798      	blx	r3
 8004c02:	4605      	mov	r5, r0
 8004c04:	f009 fb96 	bl	800e334 <_ZN16RewardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c08:	6870      	ldr	r0, [r6, #4]
 8004c0a:	6803      	ldr	r3, [r0, #0]
 8004c0c:	4659      	mov	r1, fp
 8004c0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c10:	4798      	blx	r3
 8004c12:	4629      	mov	r1, r5
 8004c14:	4606      	mov	r6, r0
 8004c16:	f009 fb6b 	bl	800e2f0 <_ZN21RewardScreenPresenterC1ER16RewardScreenView>
    model->bind(newPresenter);
 8004c1a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004c1c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004c20:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004c24:	f8c8 5000 	str.w	r5, [r8]
 8004c28:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c2c:	682b      	ldr	r3, [r5, #0]
 8004c2e:	f8c6 a008 	str.w	sl, [r6, #8]
 8004c32:	4628      	mov	r0, r5
 8004c34:	68db      	ldr	r3, [r3, #12]
 8004c36:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004c38:	4798      	blx	r3
    newPresenter->activate();
 8004c3a:	6833      	ldr	r3, [r6, #0]
 8004c3c:	4630      	mov	r0, r6
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c42:	4621      	mov	r1, r4
 8004c44:	4628      	mov	r0, r5
 8004c46:	f018 fdaf 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c4a:	6823      	ldr	r3, [r4, #0]
 8004c4c:	4620      	mov	r0, r4
 8004c4e:	691b      	ldr	r3, [r3, #16]
 8004c50:	4798      	blx	r3
    newTransition->invalidate();
 8004c52:	6823      	ldr	r3, [r4, #0]
 8004c54:	695b      	ldr	r3, [r3, #20]
 8004c56:	4620      	mov	r0, r4
}
 8004c58:	b001      	add	sp, #4
 8004c5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c5e:	4718      	bx	r3
 8004c60:	0802fd49 	.word	0x0802fd49
 8004c64:	08030668 	.word	0x08030668
 8004c68:	0802fea7 	.word	0x0802fea7
 8004c6c:	0802feee 	.word	0x0802feee
 8004c70:	0802ff91 	.word	0x0802ff91
 8004c74:	08032408 	.word	0x08032408
 8004c78:	2001392c 	.word	0x2001392c
 8004c7c:	20013928 	.word	0x20013928

08004c80 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv>:
{
 8004c80:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Character_2View, Character_2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c84:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004c88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c8a:	68b0      	ldr	r0, [r6, #8]
 8004c8c:	6803      	ldr	r3, [r0, #0]
 8004c8e:	6a1b      	ldr	r3, [r3, #32]
 8004c90:	4798      	blx	r3
 8004c92:	f5b0 7f1e 	cmp.w	r0, #632	@ 0x278
 8004c96:	d205      	bcs.n	8004ca4 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x24>
 8004c98:	4b43      	ldr	r3, [pc, #268]	@ (8004da8 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x128>)
 8004c9a:	4a44      	ldr	r2, [pc, #272]	@ (8004dac <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x12c>)
 8004c9c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c9e:	4844      	ldr	r0, [pc, #272]	@ (8004db0 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x130>)
 8004ca0:	f029 fd7e 	bl	802e7a0 <__assert_func>
 8004ca4:	6870      	ldr	r0, [r6, #4]
 8004ca6:	6803      	ldr	r3, [r0, #0]
 8004ca8:	6a1b      	ldr	r3, [r3, #32]
 8004caa:	4798      	blx	r3
 8004cac:	280f      	cmp	r0, #15
 8004cae:	d803      	bhi.n	8004cb8 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x38>
 8004cb0:	4b40      	ldr	r3, [pc, #256]	@ (8004db4 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x134>)
 8004cb2:	4a3e      	ldr	r2, [pc, #248]	@ (8004dac <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x12c>)
 8004cb4:	21a4      	movs	r1, #164	@ 0xa4
 8004cb6:	e7f2      	b.n	8004c9e <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004cb8:	68f0      	ldr	r0, [r6, #12]
 8004cba:	6803      	ldr	r3, [r0, #0]
 8004cbc:	6a1b      	ldr	r3, [r3, #32]
 8004cbe:	4798      	blx	r3
 8004cc0:	280b      	cmp	r0, #11
 8004cc2:	d803      	bhi.n	8004ccc <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x4c>
 8004cc4:	4b3c      	ldr	r3, [pc, #240]	@ (8004db8 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x138>)
 8004cc6:	4a39      	ldr	r2, [pc, #228]	@ (8004dac <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x12c>)
 8004cc8:	21a5      	movs	r1, #165	@ 0xa5
 8004cca:	e7e8      	b.n	8004c9e <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ccc:	f016 fb9a 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004cd0:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004dc0 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x140>
 8004cd4:	3004      	adds	r0, #4
 8004cd6:	f016 fbba 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004cda:	f8d9 0000 	ldr.w	r0, [r9]
 8004cde:	b110      	cbz	r0, 8004ce6 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004ce0:	6803      	ldr	r3, [r0, #0]
 8004ce2:	68db      	ldr	r3, [r3, #12]
 8004ce4:	4798      	blx	r3
    if (*currentTrans)
 8004ce6:	f8d9 0000 	ldr.w	r0, [r9]
 8004cea:	b110      	cbz	r0, 8004cf2 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004cec:	6803      	ldr	r3, [r0, #0]
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	4798      	blx	r3
    if (*currentScreen)
 8004cf2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004dc4 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x144>
 8004cf6:	f8d8 0000 	ldr.w	r0, [r8]
 8004cfa:	b110      	cbz	r0, 8004d02 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004cfc:	6803      	ldr	r3, [r0, #0]
 8004cfe:	695b      	ldr	r3, [r3, #20]
 8004d00:	4798      	blx	r3
    if (*currentPresenter)
 8004d02:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004d06:	b110      	cbz	r0, 8004d0e <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d08:	6803      	ldr	r3, [r0, #0]
 8004d0a:	685b      	ldr	r3, [r3, #4]
 8004d0c:	4798      	blx	r3
    if (*currentScreen)
 8004d0e:	f8d8 0000 	ldr.w	r0, [r8]
 8004d12:	b110      	cbz	r0, 8004d1a <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d14:	6803      	ldr	r3, [r0, #0]
 8004d16:	681b      	ldr	r3, [r3, #0]
 8004d18:	4798      	blx	r3
    if (*currentPresenter)
 8004d1a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004d1e:	b110      	cbz	r0, 8004d26 <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d20:	6803      	ldr	r3, [r0, #0]
 8004d22:	689b      	ldr	r3, [r3, #8]
 8004d24:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d26:	68f0      	ldr	r0, [r6, #12]
 8004d28:	2100      	movs	r1, #0
 8004d2a:	f7ff f9e1 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004d2e:	f04f 0b00 	mov.w	fp, #0
 8004d32:	4b22      	ldr	r3, [pc, #136]	@ (8004dbc <_ZN23FrontendApplicationBase37gotoCharacter_2ScreenNoTransitionImplEv+0x13c>)
 8004d34:	f8c0 b004 	str.w	fp, [r0, #4]
 8004d38:	4604      	mov	r4, r0
 8004d3a:	f880 b008 	strb.w	fp, [r0, #8]
 8004d3e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d40:	68b0      	ldr	r0, [r6, #8]
 8004d42:	6803      	ldr	r3, [r0, #0]
 8004d44:	4659      	mov	r1, fp
 8004d46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d48:	4798      	blx	r3
 8004d4a:	4605      	mov	r5, r0
 8004d4c:	f005 fd5e 	bl	800a80c <_ZN15Character_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d50:	6870      	ldr	r0, [r6, #4]
 8004d52:	6803      	ldr	r3, [r0, #0]
 8004d54:	4659      	mov	r1, fp
 8004d56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d58:	4798      	blx	r3
 8004d5a:	4629      	mov	r1, r5
 8004d5c:	4606      	mov	r6, r0
 8004d5e:	f005 fd33 	bl	800a7c8 <_ZN20Character_2PresenterC1ER15Character_2View>
    model->bind(newPresenter);
 8004d62:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004d64:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004d68:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004d6c:	f8c8 5000 	str.w	r5, [r8]
 8004d70:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d74:	682b      	ldr	r3, [r5, #0]
 8004d76:	f8c6 a008 	str.w	sl, [r6, #8]
 8004d7a:	4628      	mov	r0, r5
 8004d7c:	68db      	ldr	r3, [r3, #12]
 8004d7e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004d80:	4798      	blx	r3
    newPresenter->activate();
 8004d82:	6833      	ldr	r3, [r6, #0]
 8004d84:	4630      	mov	r0, r6
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d8a:	4621      	mov	r1, r4
 8004d8c:	4628      	mov	r0, r5
 8004d8e:	f018 fd0b 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d92:	6823      	ldr	r3, [r4, #0]
 8004d94:	4620      	mov	r0, r4
 8004d96:	691b      	ldr	r3, [r3, #16]
 8004d98:	4798      	blx	r3
    newTransition->invalidate();
 8004d9a:	6823      	ldr	r3, [r4, #0]
 8004d9c:	695b      	ldr	r3, [r3, #20]
 8004d9e:	4620      	mov	r0, r4
}
 8004da0:	b001      	add	sp, #4
 8004da2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004da6:	4718      	bx	r3
 8004da8:	0802fd49 	.word	0x0802fd49
 8004dac:	08030744 	.word	0x08030744
 8004db0:	0802fea7 	.word	0x0802fea7
 8004db4:	0802feee 	.word	0x0802feee
 8004db8:	0802ff91 	.word	0x0802ff91
 8004dbc:	08032408 	.word	0x08032408
 8004dc0:	2001392c 	.word	0x2001392c
 8004dc4:	20013928 	.word	0x20013928

08004dc8 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv>:
{
 8004dc8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<CharacterView, CharacterPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004dcc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004dd0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004dd2:	68b0      	ldr	r0, [r6, #8]
 8004dd4:	6803      	ldr	r3, [r0, #0]
 8004dd6:	6a1b      	ldr	r3, [r3, #32]
 8004dd8:	4798      	blx	r3
 8004dda:	f5b0 7f16 	cmp.w	r0, #600	@ 0x258
 8004dde:	d205      	bcs.n	8004dec <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x24>
 8004de0:	4b43      	ldr	r3, [pc, #268]	@ (8004ef0 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x128>)
 8004de2:	4a44      	ldr	r2, [pc, #272]	@ (8004ef4 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x12c>)
 8004de4:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004de6:	4844      	ldr	r0, [pc, #272]	@ (8004ef8 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x130>)
 8004de8:	f029 fcda 	bl	802e7a0 <__assert_func>
 8004dec:	6870      	ldr	r0, [r6, #4]
 8004dee:	6803      	ldr	r3, [r0, #0]
 8004df0:	6a1b      	ldr	r3, [r3, #32]
 8004df2:	4798      	blx	r3
 8004df4:	280f      	cmp	r0, #15
 8004df6:	d803      	bhi.n	8004e00 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x38>
 8004df8:	4b40      	ldr	r3, [pc, #256]	@ (8004efc <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x134>)
 8004dfa:	4a3e      	ldr	r2, [pc, #248]	@ (8004ef4 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x12c>)
 8004dfc:	21a4      	movs	r1, #164	@ 0xa4
 8004dfe:	e7f2      	b.n	8004de6 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e00:	68f0      	ldr	r0, [r6, #12]
 8004e02:	6803      	ldr	r3, [r0, #0]
 8004e04:	6a1b      	ldr	r3, [r3, #32]
 8004e06:	4798      	blx	r3
 8004e08:	280b      	cmp	r0, #11
 8004e0a:	d803      	bhi.n	8004e14 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x4c>
 8004e0c:	4b3c      	ldr	r3, [pc, #240]	@ (8004f00 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x138>)
 8004e0e:	4a39      	ldr	r2, [pc, #228]	@ (8004ef4 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x12c>)
 8004e10:	21a5      	movs	r1, #165	@ 0xa5
 8004e12:	e7e8      	b.n	8004de6 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004e14:	f016 faf6 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e18:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004f08 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x140>
 8004e1c:	3004      	adds	r0, #4
 8004e1e:	f016 fb16 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e22:	f8d9 0000 	ldr.w	r0, [r9]
 8004e26:	b110      	cbz	r0, 8004e2e <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e28:	6803      	ldr	r3, [r0, #0]
 8004e2a:	68db      	ldr	r3, [r3, #12]
 8004e2c:	4798      	blx	r3
    if (*currentTrans)
 8004e2e:	f8d9 0000 	ldr.w	r0, [r9]
 8004e32:	b110      	cbz	r0, 8004e3a <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004e34:	6803      	ldr	r3, [r0, #0]
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	4798      	blx	r3
    if (*currentScreen)
 8004e3a:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004f0c <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x144>
 8004e3e:	f8d8 0000 	ldr.w	r0, [r8]
 8004e42:	b110      	cbz	r0, 8004e4a <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004e44:	6803      	ldr	r3, [r0, #0]
 8004e46:	695b      	ldr	r3, [r3, #20]
 8004e48:	4798      	blx	r3
    if (*currentPresenter)
 8004e4a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004e4e:	b110      	cbz	r0, 8004e56 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e50:	6803      	ldr	r3, [r0, #0]
 8004e52:	685b      	ldr	r3, [r3, #4]
 8004e54:	4798      	blx	r3
    if (*currentScreen)
 8004e56:	f8d8 0000 	ldr.w	r0, [r8]
 8004e5a:	b110      	cbz	r0, 8004e62 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e5c:	6803      	ldr	r3, [r0, #0]
 8004e5e:	681b      	ldr	r3, [r3, #0]
 8004e60:	4798      	blx	r3
    if (*currentPresenter)
 8004e62:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004e66:	b110      	cbz	r0, 8004e6e <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e68:	6803      	ldr	r3, [r0, #0]
 8004e6a:	689b      	ldr	r3, [r3, #8]
 8004e6c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e6e:	68f0      	ldr	r0, [r6, #12]
 8004e70:	2100      	movs	r1, #0
 8004e72:	f7ff f93d 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004e76:	f04f 0b00 	mov.w	fp, #0
 8004e7a:	4b22      	ldr	r3, [pc, #136]	@ (8004f04 <_ZN23FrontendApplicationBase35gotoCharacterScreenNoTransitionImplEv+0x13c>)
 8004e7c:	f8c0 b004 	str.w	fp, [r0, #4]
 8004e80:	4604      	mov	r4, r0
 8004e82:	f880 b008 	strb.w	fp, [r0, #8]
 8004e86:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e88:	68b0      	ldr	r0, [r6, #8]
 8004e8a:	6803      	ldr	r3, [r0, #0]
 8004e8c:	4659      	mov	r1, fp
 8004e8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004e90:	4798      	blx	r3
 8004e92:	4605      	mov	r5, r0
 8004e94:	f005 fb74 	bl	800a580 <_ZN13CharacterViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e98:	6870      	ldr	r0, [r6, #4]
 8004e9a:	6803      	ldr	r3, [r0, #0]
 8004e9c:	4659      	mov	r1, fp
 8004e9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ea0:	4798      	blx	r3
 8004ea2:	4629      	mov	r1, r5
 8004ea4:	4606      	mov	r6, r0
 8004ea6:	f005 fb49 	bl	800a53c <_ZN18CharacterPresenterC1ER13CharacterView>
    model->bind(newPresenter);
 8004eaa:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004eac:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004eb0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004eb4:	f8c8 5000 	str.w	r5, [r8]
 8004eb8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ebc:	682b      	ldr	r3, [r5, #0]
 8004ebe:	f8c6 a008 	str.w	sl, [r6, #8]
 8004ec2:	4628      	mov	r0, r5
 8004ec4:	68db      	ldr	r3, [r3, #12]
 8004ec6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004ec8:	4798      	blx	r3
    newPresenter->activate();
 8004eca:	6833      	ldr	r3, [r6, #0]
 8004ecc:	4630      	mov	r0, r6
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ed2:	4621      	mov	r1, r4
 8004ed4:	4628      	mov	r0, r5
 8004ed6:	f018 fc67 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004eda:	6823      	ldr	r3, [r4, #0]
 8004edc:	4620      	mov	r0, r4
 8004ede:	691b      	ldr	r3, [r3, #16]
 8004ee0:	4798      	blx	r3
    newTransition->invalidate();
 8004ee2:	6823      	ldr	r3, [r4, #0]
 8004ee4:	695b      	ldr	r3, [r3, #20]
 8004ee6:	4620      	mov	r0, r4
}
 8004ee8:	b001      	add	sp, #4
 8004eea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004eee:	4718      	bx	r3
 8004ef0:	0802fd49 	.word	0x0802fd49
 8004ef4:	0803081e 	.word	0x0803081e
 8004ef8:	0802fea7 	.word	0x0802fea7
 8004efc:	0802feee 	.word	0x0802feee
 8004f00:	0802ff91 	.word	0x0802ff91
 8004f04:	08032408 	.word	0x08032408
 8004f08:	2001392c 	.word	0x2001392c
 8004f0c:	20013928 	.word	0x20013928

08004f10 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv>:
{
 8004f10:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<BackUpScreenView, BackUpScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f14:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004f18:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f1a:	68b0      	ldr	r0, [r6, #8]
 8004f1c:	6803      	ldr	r3, [r0, #0]
 8004f1e:	6a1b      	ldr	r3, [r3, #32]
 8004f20:	4798      	blx	r3
 8004f22:	f5b0 7f30 	cmp.w	r0, #704	@ 0x2c0
 8004f26:	d205      	bcs.n	8004f34 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x24>
 8004f28:	4b43      	ldr	r3, [pc, #268]	@ (8005038 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x128>)
 8004f2a:	4a44      	ldr	r2, [pc, #272]	@ (800503c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x12c>)
 8004f2c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f2e:	4844      	ldr	r0, [pc, #272]	@ (8005040 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x130>)
 8004f30:	f029 fc36 	bl	802e7a0 <__assert_func>
 8004f34:	6870      	ldr	r0, [r6, #4]
 8004f36:	6803      	ldr	r3, [r0, #0]
 8004f38:	6a1b      	ldr	r3, [r3, #32]
 8004f3a:	4798      	blx	r3
 8004f3c:	280f      	cmp	r0, #15
 8004f3e:	d803      	bhi.n	8004f48 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x38>
 8004f40:	4b40      	ldr	r3, [pc, #256]	@ (8005044 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x134>)
 8004f42:	4a3e      	ldr	r2, [pc, #248]	@ (800503c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x12c>)
 8004f44:	21a4      	movs	r1, #164	@ 0xa4
 8004f46:	e7f2      	b.n	8004f2e <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f48:	68f0      	ldr	r0, [r6, #12]
 8004f4a:	6803      	ldr	r3, [r0, #0]
 8004f4c:	6a1b      	ldr	r3, [r3, #32]
 8004f4e:	4798      	blx	r3
 8004f50:	280b      	cmp	r0, #11
 8004f52:	d803      	bhi.n	8004f5c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x4c>
 8004f54:	4b3c      	ldr	r3, [pc, #240]	@ (8005048 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x138>)
 8004f56:	4a39      	ldr	r2, [pc, #228]	@ (800503c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x12c>)
 8004f58:	21a5      	movs	r1, #165	@ 0xa5
 8004f5a:	e7e8      	b.n	8004f2e <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004f5c:	f016 fa52 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f60:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8005050 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x140>
 8004f64:	3004      	adds	r0, #4
 8004f66:	f016 fa72 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f6a:	f8d9 0000 	ldr.w	r0, [r9]
 8004f6e:	b110      	cbz	r0, 8004f76 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8004f70:	6803      	ldr	r3, [r0, #0]
 8004f72:	68db      	ldr	r3, [r3, #12]
 8004f74:	4798      	blx	r3
    if (*currentTrans)
 8004f76:	f8d9 0000 	ldr.w	r0, [r9]
 8004f7a:	b110      	cbz	r0, 8004f82 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8004f7c:	6803      	ldr	r3, [r0, #0]
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	4798      	blx	r3
    if (*currentScreen)
 8004f82:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8005054 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x144>
 8004f86:	f8d8 0000 	ldr.w	r0, [r8]
 8004f8a:	b110      	cbz	r0, 8004f92 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004f8c:	6803      	ldr	r3, [r0, #0]
 8004f8e:	695b      	ldr	r3, [r3, #20]
 8004f90:	4798      	blx	r3
    if (*currentPresenter)
 8004f92:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004f96:	b110      	cbz	r0, 8004f9e <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004f98:	6803      	ldr	r3, [r0, #0]
 8004f9a:	685b      	ldr	r3, [r3, #4]
 8004f9c:	4798      	blx	r3
    if (*currentScreen)
 8004f9e:	f8d8 0000 	ldr.w	r0, [r8]
 8004fa2:	b110      	cbz	r0, 8004faa <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004fa4:	6803      	ldr	r3, [r0, #0]
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	4798      	blx	r3
    if (*currentPresenter)
 8004faa:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004fae:	b110      	cbz	r0, 8004fb6 <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004fb0:	6803      	ldr	r3, [r0, #0]
 8004fb2:	689b      	ldr	r3, [r3, #8]
 8004fb4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004fb6:	68f0      	ldr	r0, [r6, #12]
 8004fb8:	2100      	movs	r1, #0
 8004fba:	f7ff f899 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004fbe:	f04f 0b00 	mov.w	fp, #0
 8004fc2:	4b22      	ldr	r3, [pc, #136]	@ (800504c <_ZN23FrontendApplicationBase38gotoBackUpScreenScreenNoTransitionImplEv+0x13c>)
 8004fc4:	f8c0 b004 	str.w	fp, [r0, #4]
 8004fc8:	4604      	mov	r4, r0
 8004fca:	f880 b008 	strb.w	fp, [r0, #8]
 8004fce:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004fd0:	68b0      	ldr	r0, [r6, #8]
 8004fd2:	6803      	ldr	r3, [r0, #0]
 8004fd4:	4659      	mov	r1, fp
 8004fd6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fd8:	4798      	blx	r3
 8004fda:	4605      	mov	r5, r0
 8004fdc:	f005 fa58 	bl	800a490 <_ZN16BackUpScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004fe0:	6870      	ldr	r0, [r6, #4]
 8004fe2:	6803      	ldr	r3, [r0, #0]
 8004fe4:	4659      	mov	r1, fp
 8004fe6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fe8:	4798      	blx	r3
 8004fea:	4629      	mov	r1, r5
 8004fec:	4606      	mov	r6, r0
 8004fee:	f005 fa2d 	bl	800a44c <_ZN21BackUpScreenPresenterC1ER16BackUpScreenView>
    model->bind(newPresenter);
 8004ff2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004ff4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004ff8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004ffc:	f8c8 5000 	str.w	r5, [r8]
 8005000:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005004:	682b      	ldr	r3, [r5, #0]
 8005006:	f8c6 a008 	str.w	sl, [r6, #8]
 800500a:	4628      	mov	r0, r5
 800500c:	68db      	ldr	r3, [r3, #12]
 800500e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8005010:	4798      	blx	r3
    newPresenter->activate();
 8005012:	6833      	ldr	r3, [r6, #0]
 8005014:	4630      	mov	r0, r6
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800501a:	4621      	mov	r1, r4
 800501c:	4628      	mov	r0, r5
 800501e:	f018 fbc3 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005022:	6823      	ldr	r3, [r4, #0]
 8005024:	4620      	mov	r0, r4
 8005026:	691b      	ldr	r3, [r3, #16]
 8005028:	4798      	blx	r3
    newTransition->invalidate();
 800502a:	6823      	ldr	r3, [r4, #0]
 800502c:	695b      	ldr	r3, [r3, #20]
 800502e:	4620      	mov	r0, r4
}
 8005030:	b001      	add	sp, #4
 8005032:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005036:	4718      	bx	r3
 8005038:	0802fd49 	.word	0x0802fd49
 800503c:	080308f4 	.word	0x080308f4
 8005040:	0802fea7 	.word	0x0802fea7
 8005044:	0802feee 	.word	0x0802feee
 8005048:	0802ff91 	.word	0x0802ff91
 800504c:	08032408 	.word	0x08032408
 8005050:	2001392c 	.word	0x2001392c
 8005054:	20013928 	.word	0x20013928

08005058 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv>:
{
 8005058:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<GameScreenView, GameScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800505c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8005060:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005062:	68b0      	ldr	r0, [r6, #8]
 8005064:	6803      	ldr	r3, [r0, #0]
 8005066:	6a1b      	ldr	r3, [r3, #32]
 8005068:	4798      	blx	r3
 800506a:	f5b0 5f96 	cmp.w	r0, #4800	@ 0x12c0
 800506e:	d205      	bcs.n	800507c <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x24>
 8005070:	4b43      	ldr	r3, [pc, #268]	@ (8005180 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x128>)
 8005072:	4a44      	ldr	r2, [pc, #272]	@ (8005184 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x12c>)
 8005074:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005076:	4844      	ldr	r0, [pc, #272]	@ (8005188 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x130>)
 8005078:	f029 fb92 	bl	802e7a0 <__assert_func>
 800507c:	6870      	ldr	r0, [r6, #4]
 800507e:	6803      	ldr	r3, [r0, #0]
 8005080:	6a1b      	ldr	r3, [r3, #32]
 8005082:	4798      	blx	r3
 8005084:	280f      	cmp	r0, #15
 8005086:	d803      	bhi.n	8005090 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x38>
 8005088:	4b40      	ldr	r3, [pc, #256]	@ (800518c <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x134>)
 800508a:	4a3e      	ldr	r2, [pc, #248]	@ (8005184 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x12c>)
 800508c:	21a4      	movs	r1, #164	@ 0xa4
 800508e:	e7f2      	b.n	8005076 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005090:	68f0      	ldr	r0, [r6, #12]
 8005092:	6803      	ldr	r3, [r0, #0]
 8005094:	6a1b      	ldr	r3, [r3, #32]
 8005096:	4798      	blx	r3
 8005098:	280b      	cmp	r0, #11
 800509a:	d803      	bhi.n	80050a4 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x4c>
 800509c:	4b3c      	ldr	r3, [pc, #240]	@ (8005190 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x138>)
 800509e:	4a39      	ldr	r2, [pc, #228]	@ (8005184 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x12c>)
 80050a0:	21a5      	movs	r1, #165	@ 0xa5
 80050a2:	e7e8      	b.n	8005076 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80050a4:	f016 f9ae 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80050a8:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8005198 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x140>
 80050ac:	3004      	adds	r0, #4
 80050ae:	f016 f9ce 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80050b2:	f8d9 0000 	ldr.w	r0, [r9]
 80050b6:	b110      	cbz	r0, 80050be <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80050b8:	6803      	ldr	r3, [r0, #0]
 80050ba:	68db      	ldr	r3, [r3, #12]
 80050bc:	4798      	blx	r3
    if (*currentTrans)
 80050be:	f8d9 0000 	ldr.w	r0, [r9]
 80050c2:	b110      	cbz	r0, 80050ca <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80050c4:	6803      	ldr	r3, [r0, #0]
 80050c6:	681b      	ldr	r3, [r3, #0]
 80050c8:	4798      	blx	r3
    if (*currentScreen)
 80050ca:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800519c <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x144>
 80050ce:	f8d8 0000 	ldr.w	r0, [r8]
 80050d2:	b110      	cbz	r0, 80050da <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80050d4:	6803      	ldr	r3, [r0, #0]
 80050d6:	695b      	ldr	r3, [r3, #20]
 80050d8:	4798      	blx	r3
    if (*currentPresenter)
 80050da:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80050de:	b110      	cbz	r0, 80050e6 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80050e0:	6803      	ldr	r3, [r0, #0]
 80050e2:	685b      	ldr	r3, [r3, #4]
 80050e4:	4798      	blx	r3
    if (*currentScreen)
 80050e6:	f8d8 0000 	ldr.w	r0, [r8]
 80050ea:	b110      	cbz	r0, 80050f2 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80050ec:	6803      	ldr	r3, [r0, #0]
 80050ee:	681b      	ldr	r3, [r3, #0]
 80050f0:	4798      	blx	r3
    if (*currentPresenter)
 80050f2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80050f6:	b110      	cbz	r0, 80050fe <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80050f8:	6803      	ldr	r3, [r0, #0]
 80050fa:	689b      	ldr	r3, [r3, #8]
 80050fc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80050fe:	68f0      	ldr	r0, [r6, #12]
 8005100:	2100      	movs	r1, #0
 8005102:	f7fe fff5 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8005106:	f04f 0b00 	mov.w	fp, #0
 800510a:	4b22      	ldr	r3, [pc, #136]	@ (8005194 <_ZN23FrontendApplicationBase36gotoGameScreenScreenNoTransitionImplEv+0x13c>)
 800510c:	f8c0 b004 	str.w	fp, [r0, #4]
 8005110:	4604      	mov	r4, r0
 8005112:	f880 b008 	strb.w	fp, [r0, #8]
 8005116:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005118:	68b0      	ldr	r0, [r6, #8]
 800511a:	6803      	ldr	r3, [r0, #0]
 800511c:	4659      	mov	r1, fp
 800511e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005120:	4798      	blx	r3
 8005122:	4605      	mov	r5, r0
 8005124:	f005 fcfe 	bl	800ab24 <_ZN14GameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005128:	6870      	ldr	r0, [r6, #4]
 800512a:	6803      	ldr	r3, [r0, #0]
 800512c:	4659      	mov	r1, fp
 800512e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005130:	4798      	blx	r3
 8005132:	4629      	mov	r1, r5
 8005134:	4606      	mov	r6, r0
 8005136:	f005 fc97 	bl	800aa68 <_ZN19GameScreenPresenterC1ER14GameScreenView>
    model->bind(newPresenter);
 800513a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800513c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8005140:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8005144:	f8c8 5000 	str.w	r5, [r8]
 8005148:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800514c:	682b      	ldr	r3, [r5, #0]
 800514e:	f8c6 a008 	str.w	sl, [r6, #8]
 8005152:	4628      	mov	r0, r5
 8005154:	68db      	ldr	r3, [r3, #12]
 8005156:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8005158:	4798      	blx	r3
    newPresenter->activate();
 800515a:	6833      	ldr	r3, [r6, #0]
 800515c:	4630      	mov	r0, r6
 800515e:	681b      	ldr	r3, [r3, #0]
 8005160:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005162:	4621      	mov	r1, r4
 8005164:	4628      	mov	r0, r5
 8005166:	f018 fb1f 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800516a:	6823      	ldr	r3, [r4, #0]
 800516c:	4620      	mov	r0, r4
 800516e:	691b      	ldr	r3, [r3, #16]
 8005170:	4798      	blx	r3
    newTransition->invalidate();
 8005172:	6823      	ldr	r3, [r4, #0]
 8005174:	695b      	ldr	r3, [r3, #20]
 8005176:	4620      	mov	r0, r4
}
 8005178:	b001      	add	sp, #4
 800517a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800517e:	4718      	bx	r3
 8005180:	0802fd49 	.word	0x0802fd49
 8005184:	080309d0 	.word	0x080309d0
 8005188:	0802fea7 	.word	0x0802fea7
 800518c:	0802feee 	.word	0x0802feee
 8005190:	0802ff91 	.word	0x0802ff91
 8005194:	08032408 	.word	0x08032408
 8005198:	2001392c 	.word	0x2001392c
 800519c:	20013928 	.word	0x20013928

080051a0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv>:
{
 80051a0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainMenuScreenView, MainMenuScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051a4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80051a8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051aa:	68b0      	ldr	r0, [r6, #8]
 80051ac:	6803      	ldr	r3, [r0, #0]
 80051ae:	6a1b      	ldr	r3, [r3, #32]
 80051b0:	4798      	blx	r3
 80051b2:	f5b0 7f13 	cmp.w	r0, #588	@ 0x24c
 80051b6:	d205      	bcs.n	80051c4 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x24>
 80051b8:	4b43      	ldr	r3, [pc, #268]	@ (80052c8 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x128>)
 80051ba:	4a44      	ldr	r2, [pc, #272]	@ (80052cc <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x12c>)
 80051bc:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051be:	4844      	ldr	r0, [pc, #272]	@ (80052d0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x130>)
 80051c0:	f029 faee 	bl	802e7a0 <__assert_func>
 80051c4:	6870      	ldr	r0, [r6, #4]
 80051c6:	6803      	ldr	r3, [r0, #0]
 80051c8:	6a1b      	ldr	r3, [r3, #32]
 80051ca:	4798      	blx	r3
 80051cc:	280f      	cmp	r0, #15
 80051ce:	d803      	bhi.n	80051d8 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x38>
 80051d0:	4b40      	ldr	r3, [pc, #256]	@ (80052d4 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x134>)
 80051d2:	4a3e      	ldr	r2, [pc, #248]	@ (80052cc <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x12c>)
 80051d4:	21a4      	movs	r1, #164	@ 0xa4
 80051d6:	e7f2      	b.n	80051be <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80051d8:	68f0      	ldr	r0, [r6, #12]
 80051da:	6803      	ldr	r3, [r0, #0]
 80051dc:	6a1b      	ldr	r3, [r3, #32]
 80051de:	4798      	blx	r3
 80051e0:	280b      	cmp	r0, #11
 80051e2:	d803      	bhi.n	80051ec <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x4c>
 80051e4:	4b3c      	ldr	r3, [pc, #240]	@ (80052d8 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x138>)
 80051e6:	4a39      	ldr	r2, [pc, #228]	@ (80052cc <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x12c>)
 80051e8:	21a5      	movs	r1, #165	@ 0xa5
 80051ea:	e7e8      	b.n	80051be <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80051ec:	f016 f90a 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051f0:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80052e0 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x140>
 80051f4:	3004      	adds	r0, #4
 80051f6:	f016 f92a 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051fa:	f8d9 0000 	ldr.w	r0, [r9]
 80051fe:	b110      	cbz	r0, 8005206 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8005200:	6803      	ldr	r3, [r0, #0]
 8005202:	68db      	ldr	r3, [r3, #12]
 8005204:	4798      	blx	r3
    if (*currentTrans)
 8005206:	f8d9 0000 	ldr.w	r0, [r9]
 800520a:	b110      	cbz	r0, 8005212 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 800520c:	6803      	ldr	r3, [r0, #0]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	4798      	blx	r3
    if (*currentScreen)
 8005212:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80052e4 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x144>
 8005216:	f8d8 0000 	ldr.w	r0, [r8]
 800521a:	b110      	cbz	r0, 8005222 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800521c:	6803      	ldr	r3, [r0, #0]
 800521e:	695b      	ldr	r3, [r3, #20]
 8005220:	4798      	blx	r3
    if (*currentPresenter)
 8005222:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8005226:	b110      	cbz	r0, 800522e <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005228:	6803      	ldr	r3, [r0, #0]
 800522a:	685b      	ldr	r3, [r3, #4]
 800522c:	4798      	blx	r3
    if (*currentScreen)
 800522e:	f8d8 0000 	ldr.w	r0, [r8]
 8005232:	b110      	cbz	r0, 800523a <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005234:	6803      	ldr	r3, [r0, #0]
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	4798      	blx	r3
    if (*currentPresenter)
 800523a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800523e:	b110      	cbz	r0, 8005246 <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005240:	6803      	ldr	r3, [r0, #0]
 8005242:	689b      	ldr	r3, [r3, #8]
 8005244:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005246:	68f0      	ldr	r0, [r6, #12]
 8005248:	2100      	movs	r1, #0
 800524a:	f7fe ff51 	bl	80040f0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800524e:	f04f 0b00 	mov.w	fp, #0
 8005252:	4b22      	ldr	r3, [pc, #136]	@ (80052dc <_ZN23FrontendApplicationBase40gotoMainMenuScreenScreenNoTransitionImplEv+0x13c>)
 8005254:	f8c0 b004 	str.w	fp, [r0, #4]
 8005258:	4604      	mov	r4, r0
 800525a:	f880 b008 	strb.w	fp, [r0, #8]
 800525e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005260:	68b0      	ldr	r0, [r6, #8]
 8005262:	6803      	ldr	r3, [r0, #0]
 8005264:	4659      	mov	r1, fp
 8005266:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005268:	4798      	blx	r3
 800526a:	4605      	mov	r5, r0
 800526c:	f007 fb68 	bl	800c940 <_ZN18MainMenuScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005270:	6870      	ldr	r0, [r6, #4]
 8005272:	6803      	ldr	r3, [r0, #0]
 8005274:	4659      	mov	r1, fp
 8005276:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005278:	4798      	blx	r3
 800527a:	4629      	mov	r1, r5
 800527c:	4606      	mov	r6, r0
 800527e:	f007 fb23 	bl	800c8c8 <_ZN23MainMenuScreenPresenterC1ER18MainMenuScreenView>
    model->bind(newPresenter);
 8005282:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8005284:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8005288:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800528c:	f8c8 5000 	str.w	r5, [r8]
 8005290:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005294:	682b      	ldr	r3, [r5, #0]
 8005296:	f8c6 a008 	str.w	sl, [r6, #8]
 800529a:	4628      	mov	r0, r5
 800529c:	68db      	ldr	r3, [r3, #12]
 800529e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80052a0:	4798      	blx	r3
    newPresenter->activate();
 80052a2:	6833      	ldr	r3, [r6, #0]
 80052a4:	4630      	mov	r0, r6
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052aa:	4621      	mov	r1, r4
 80052ac:	4628      	mov	r0, r5
 80052ae:	f018 fa7b 	bl	801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052b2:	6823      	ldr	r3, [r4, #0]
 80052b4:	4620      	mov	r0, r4
 80052b6:	691b      	ldr	r3, [r3, #16]
 80052b8:	4798      	blx	r3
    newTransition->invalidate();
 80052ba:	6823      	ldr	r3, [r4, #0]
 80052bc:	695b      	ldr	r3, [r3, #20]
 80052be:	4620      	mov	r0, r4
}
 80052c0:	b001      	add	sp, #4
 80052c2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052c6:	4718      	bx	r3
 80052c8:	0802fd49 	.word	0x0802fd49
 80052cc:	08030aa8 	.word	0x08030aa8
 80052d0:	0802fea7 	.word	0x0802fea7
 80052d4:	0802feee 	.word	0x0802feee
 80052d8:	0802ff91 	.word	0x0802ff91
 80052dc:	08032408 	.word	0x08032408
 80052e0:	2001392c 	.word	0x2001392c
 80052e4:	20013928 	.word	0x20013928

080052e8 <_ZN18GameScreenViewBaseD1Ev>:
}

GameScreenViewBase::~GameScreenViewBase()
{

}
 80052e8:	4770      	bx	lr

080052ea <_ZN18GameScreenViewBase11setupScreenEv>:

void GameScreenViewBase::setupScreen()
{

}
 80052ea:	4770      	bx	lr

080052ec <_ZN18GameScreenViewBaseD0Ev>:
GameScreenViewBase::~GameScreenViewBase()
 80052ec:	b510      	push	{r4, lr}
}
 80052ee:	f241 215c 	movw	r1, #4700	@ 0x125c
GameScreenViewBase::~GameScreenViewBase()
 80052f2:	4604      	mov	r4, r0
}
 80052f4:	f028 fb17 	bl	802d926 <_ZdlPvj>
 80052f8:	4620      	mov	r0, r4
 80052fa:	bd10      	pop	{r4, pc}

080052fc <_ZN8touchgfx8TextAreaC1Ev>:
          touchable(false),
 80052fc:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8005300:	8481      	strh	r1, [r0, #36]	@ 0x24
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005302:	490d      	ldr	r1, [pc, #52]	@ (8005338 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8005304:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 8005306:	490d      	ldr	r1, [pc, #52]	@ (800533c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8005308:	6281      	str	r1, [r0, #40]	@ 0x28
 800530a:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800530e:	8581      	strh	r1, [r0, #44]	@ 0x2c
 8005310:	f44f 017f 	mov.w	r1, #16711680	@ 0xff0000
        : x(0), y(0), width(0), height(0)
 8005314:	2200      	movs	r2, #0
 8005316:	6341      	str	r1, [r0, #52]	@ 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005318:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 800531c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8005320:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8005324:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8005328:	e9c0 2207 	strd	r2, r2, [r0, #28]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 800532c:	e9c0 1210 	strd	r1, r2, [r0, #64]	@ 0x40
        : color(col)
 8005330:	6302      	str	r2, [r0, #48]	@ 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005332:	8702      	strh	r2, [r0, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005334:	63c2      	str	r2, [r0, #60]	@ 0x3c
    }
 8005336:	4770      	bx	lr
 8005338:	08033368 	.word	0x08033368
 800533c:	0803238c 	.word	0x0803238c

08005340 <_ZN18GameScreenViewBaseC1Ev>:
GameScreenViewBase::GameScreenViewBase()
 8005340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005344:	4604      	mov	r4, r0
 8005346:	b0db      	sub	sp, #364	@ 0x16c
 8005348:	46a2      	mov	sl, r4
        : presenter(0)
 800534a:	2500      	movs	r5, #0
 800534c:	f018 f880 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8005350:	4bd1      	ldr	r3, [pc, #836]	@ (8005698 <_ZN18GameScreenViewBaseC1Ev+0x358>)
 8005352:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8005354:	f84a 3b40 	str.w	r3, [sl], #64
 8005358:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 800535c:	4650      	mov	r0, sl
 800535e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8005362:	f7fd fd3b 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8005366:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 800536a:	a958      	add	r1, sp, #352	@ 0x160
 800536c:	4638      	mov	r0, r7
 800536e:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
 8005372:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005376:	f012 fd9b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800537a:	a958      	add	r1, sp, #352	@ 0x160
 800537c:	4648      	mov	r0, r9
 800537e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005382:	f012 fd95 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005386:	a958      	add	r1, sp, #352	@ 0x160
 8005388:	4640      	mov	r0, r8
 800538a:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800538e:	f012 fd8f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005392:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8005396:	a958      	add	r1, sp, #352	@ 0x160
 8005398:	4618      	mov	r0, r3
 800539a:	9323      	str	r3, [sp, #140]	@ 0x8c
 800539c:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053a0:	f012 fd86 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053a4:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80053a8:	a958      	add	r1, sp, #352	@ 0x160
 80053aa:	4618      	mov	r0, r3
 80053ac:	9324      	str	r3, [sp, #144]	@ 0x90
 80053ae:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053b2:	f012 fd7d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053b6:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 80053ba:	a958      	add	r1, sp, #352	@ 0x160
 80053bc:	4618      	mov	r0, r3
 80053be:	9325      	str	r3, [sp, #148]	@ 0x94
 80053c0:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053c4:	f012 fd74 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053c8:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 80053cc:	a958      	add	r1, sp, #352	@ 0x160
 80053ce:	4618      	mov	r0, r3
 80053d0:	9326      	str	r3, [sp, #152]	@ 0x98
 80053d2:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053d6:	f012 fd6b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053da:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80053de:	a958      	add	r1, sp, #352	@ 0x160
 80053e0:	4618      	mov	r0, r3
 80053e2:	9327      	str	r3, [sp, #156]	@ 0x9c
 80053e4:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053e8:	f012 fd62 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053ec:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 80053f0:	a958      	add	r1, sp, #352	@ 0x160
 80053f2:	4618      	mov	r0, r3
 80053f4:	9328      	str	r3, [sp, #160]	@ 0xa0
 80053f6:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80053fa:	f012 fd59 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80053fe:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 8005402:	a958      	add	r1, sp, #352	@ 0x160
 8005404:	4618      	mov	r0, r3
 8005406:	9329      	str	r3, [sp, #164]	@ 0xa4
 8005408:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800540c:	f012 fd50 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005410:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8005414:	a958      	add	r1, sp, #352	@ 0x160
 8005416:	4618      	mov	r0, r3
 8005418:	932a      	str	r3, [sp, #168]	@ 0xa8
 800541a:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800541e:	f012 fd47 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005422:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 8005426:	a958      	add	r1, sp, #352	@ 0x160
 8005428:	4618      	mov	r0, r3
 800542a:	932b      	str	r3, [sp, #172]	@ 0xac
 800542c:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005430:	f012 fd3e 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005434:	f504 731f 	add.w	r3, r4, #636	@ 0x27c
 8005438:	a958      	add	r1, sp, #352	@ 0x160
 800543a:	4618      	mov	r0, r3
 800543c:	932c      	str	r3, [sp, #176]	@ 0xb0
 800543e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005442:	f012 fd35 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005446:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 800544a:	a958      	add	r1, sp, #352	@ 0x160
 800544c:	4618      	mov	r0, r3
 800544e:	932d      	str	r3, [sp, #180]	@ 0xb4
 8005450:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005454:	f012 fd2c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005458:	f504 7335 	add.w	r3, r4, #724	@ 0x2d4
 800545c:	a958      	add	r1, sp, #352	@ 0x160
 800545e:	4618      	mov	r0, r3
 8005460:	932e      	str	r3, [sp, #184]	@ 0xb8
 8005462:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005466:	f012 fd23 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800546a:	f504 7340 	add.w	r3, r4, #768	@ 0x300
 800546e:	a958      	add	r1, sp, #352	@ 0x160
 8005470:	4618      	mov	r0, r3
 8005472:	932f      	str	r3, [sp, #188]	@ 0xbc
 8005474:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005478:	f012 fd1a 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800547c:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 8005480:	a958      	add	r1, sp, #352	@ 0x160
 8005482:	4618      	mov	r0, r3
 8005484:	9330      	str	r3, [sp, #192]	@ 0xc0
 8005486:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800548a:	f012 fd11 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800548e:	f504 7356 	add.w	r3, r4, #856	@ 0x358
 8005492:	a958      	add	r1, sp, #352	@ 0x160
 8005494:	4618      	mov	r0, r3
 8005496:	9331      	str	r3, [sp, #196]	@ 0xc4
 8005498:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800549c:	f012 fd08 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80054a0:	f504 7361 	add.w	r3, r4, #900	@ 0x384
 80054a4:	a958      	add	r1, sp, #352	@ 0x160
 80054a6:	4618      	mov	r0, r3
 80054a8:	9332      	str	r3, [sp, #200]	@ 0xc8
 80054aa:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80054ae:	f012 fcff 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80054b2:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 80054b6:	a958      	add	r1, sp, #352	@ 0x160
 80054b8:	4618      	mov	r0, r3
 80054ba:	9333      	str	r3, [sp, #204]	@ 0xcc
 80054bc:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80054c0:	f012 fcf6 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80054c4:	f504 7377 	add.w	r3, r4, #988	@ 0x3dc
 80054c8:	a958      	add	r1, sp, #352	@ 0x160
 80054ca:	4618      	mov	r0, r3
 80054cc:	9334      	str	r3, [sp, #208]	@ 0xd0
 80054ce:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80054d2:	f012 fced 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80054d6:	f504 6381 	add.w	r3, r4, #1032	@ 0x408
 80054da:	a958      	add	r1, sp, #352	@ 0x160
 80054dc:	4618      	mov	r0, r3
 80054de:	9335      	str	r3, [sp, #212]	@ 0xd4
 80054e0:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80054e4:	f012 fce4 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80054e8:	f204 4334 	addw	r3, r4, #1076	@ 0x434
 80054ec:	a958      	add	r1, sp, #352	@ 0x160
 80054ee:	4618      	mov	r0, r3
 80054f0:	9336      	str	r3, [sp, #216]	@ 0xd8
 80054f2:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80054f6:	f012 fcdb 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80054fa:	f504 638c 	add.w	r3, r4, #1120	@ 0x460
 80054fe:	a958      	add	r1, sp, #352	@ 0x160
 8005500:	4618      	mov	r0, r3
 8005502:	9337      	str	r3, [sp, #220]	@ 0xdc
 8005504:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005508:	f012 fcd2 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800550c:	f204 438c 	addw	r3, r4, #1164	@ 0x48c
 8005510:	a958      	add	r1, sp, #352	@ 0x160
 8005512:	4618      	mov	r0, r3
 8005514:	9338      	str	r3, [sp, #224]	@ 0xe0
 8005516:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800551a:	f012 fcc9 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800551e:	f504 6397 	add.w	r3, r4, #1208	@ 0x4b8
 8005522:	a958      	add	r1, sp, #352	@ 0x160
 8005524:	4618      	mov	r0, r3
 8005526:	9339      	str	r3, [sp, #228]	@ 0xe4
 8005528:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800552c:	f012 fcc0 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005530:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 8005534:	a958      	add	r1, sp, #352	@ 0x160
 8005536:	4618      	mov	r0, r3
 8005538:	933a      	str	r3, [sp, #232]	@ 0xe8
 800553a:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 800553e:	f012 fcb7 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005542:	f504 63a2 	add.w	r3, r4, #1296	@ 0x510
 8005546:	a958      	add	r1, sp, #352	@ 0x160
 8005548:	4618      	mov	r0, r3
 800554a:	933b      	str	r3, [sp, #236]	@ 0xec
 800554c:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005550:	f012 fcae 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005554:	f204 533c 	addw	r3, r4, #1340	@ 0x53c
 8005558:	a958      	add	r1, sp, #352	@ 0x160
 800555a:	4618      	mov	r0, r3
 800555c:	933c      	str	r3, [sp, #240]	@ 0xf0
 800555e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005562:	f012 fca5 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005566:	f504 63ad 	add.w	r3, r4, #1384	@ 0x568
 800556a:	a958      	add	r1, sp, #352	@ 0x160
 800556c:	4618      	mov	r0, r3
 800556e:	933d      	str	r3, [sp, #244]	@ 0xf4
 8005570:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005574:	f012 fc9c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005578:	f204 5394 	addw	r3, r4, #1428	@ 0x594
 800557c:	a958      	add	r1, sp, #352	@ 0x160
 800557e:	4618      	mov	r0, r3
 8005580:	933e      	str	r3, [sp, #248]	@ 0xf8
 8005582:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005586:	f012 fc93 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800558a:	f504 63b8 	add.w	r3, r4, #1472	@ 0x5c0
 800558e:	a958      	add	r1, sp, #352	@ 0x160
 8005590:	4618      	mov	r0, r3
 8005592:	933f      	str	r3, [sp, #252]	@ 0xfc
 8005594:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005598:	f012 fc8a 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800559c:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
 80055a0:	a958      	add	r1, sp, #352	@ 0x160
 80055a2:	4618      	mov	r0, r3
 80055a4:	9340      	str	r3, [sp, #256]	@ 0x100
 80055a6:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80055aa:	f012 fc81 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80055ae:	f504 63c3 	add.w	r3, r4, #1560	@ 0x618
 80055b2:	a958      	add	r1, sp, #352	@ 0x160
 80055b4:	4618      	mov	r0, r3
 80055b6:	9341      	str	r3, [sp, #260]	@ 0x104
 80055b8:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80055bc:	f012 fc78 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80055c0:	f204 6344 	addw	r3, r4, #1604	@ 0x644
 80055c4:	a958      	add	r1, sp, #352	@ 0x160
 80055c6:	4618      	mov	r0, r3
 80055c8:	9342      	str	r3, [sp, #264]	@ 0x108
 80055ca:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80055ce:	f012 fc6f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80055d2:	f504 63ce 	add.w	r3, r4, #1648	@ 0x670
 80055d6:	a958      	add	r1, sp, #352	@ 0x160
 80055d8:	4618      	mov	r0, r3
 80055da:	9343      	str	r3, [sp, #268]	@ 0x10c
 80055dc:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80055e0:	f012 fc66 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80055e4:	f204 639c 	addw	r3, r4, #1692	@ 0x69c
 80055e8:	a958      	add	r1, sp, #352	@ 0x160
 80055ea:	4618      	mov	r0, r3
 80055ec:	9344      	str	r3, [sp, #272]	@ 0x110
 80055ee:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80055f2:	f012 fc5d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80055f6:	f504 63d9 	add.w	r3, r4, #1736	@ 0x6c8
 80055fa:	a958      	add	r1, sp, #352	@ 0x160
 80055fc:	4618      	mov	r0, r3
 80055fe:	9345      	str	r3, [sp, #276]	@ 0x114
 8005600:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005604:	f012 fc54 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005608:	f204 63f4 	addw	r3, r4, #1780	@ 0x6f4
 800560c:	a958      	add	r1, sp, #352	@ 0x160
 800560e:	4618      	mov	r0, r3
 8005610:	9346      	str	r3, [sp, #280]	@ 0x118
 8005612:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005616:	f012 fc4b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800561a:	f504 63e4 	add.w	r3, r4, #1824	@ 0x720
 800561e:	a958      	add	r1, sp, #352	@ 0x160
 8005620:	4618      	mov	r0, r3
 8005622:	9347      	str	r3, [sp, #284]	@ 0x11c
 8005624:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005628:	f012 fc42 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800562c:	f204 734c 	addw	r3, r4, #1868	@ 0x74c
 8005630:	4618      	mov	r0, r3
 8005632:	9352      	str	r3, [sp, #328]	@ 0x148
 8005634:	f7fd fbd2 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8005638:	f504 63ef 	add.w	r3, r4, #1912	@ 0x778
 800563c:	4618      	mov	r0, r3
 800563e:	9353      	str	r3, [sp, #332]	@ 0x14c
 8005640:	f7fd fbcc 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8005644:	f204 73a4 	addw	r3, r4, #1956	@ 0x7a4
 8005648:	a958      	add	r1, sp, #352	@ 0x160
 800564a:	4618      	mov	r0, r3
 800564c:	9348      	str	r3, [sp, #288]	@ 0x120
 800564e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005652:	f012 fc2d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005656:	f504 63fa 	add.w	r3, r4, #2000	@ 0x7d0
 800565a:	a958      	add	r1, sp, #352	@ 0x160
 800565c:	4618      	mov	r0, r3
 800565e:	9349      	str	r3, [sp, #292]	@ 0x124
 8005660:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005664:	f012 fc24 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005668:	f204 73fc 	addw	r3, r4, #2044	@ 0x7fc
 800566c:	a958      	add	r1, sp, #352	@ 0x160
 800566e:	4618      	mov	r0, r3
 8005670:	934a      	str	r3, [sp, #296]	@ 0x128
 8005672:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005676:	f012 fc1b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800567a:	f604 0328 	addw	r3, r4, #2088	@ 0x828
 800567e:	a958      	add	r1, sp, #352	@ 0x160
 8005680:	4618      	mov	r0, r3
 8005682:	934b      	str	r3, [sp, #300]	@ 0x12c
 8005684:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 8005688:	f012 fc12 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800568c:	f604 0354 	addw	r3, r4, #2132	@ 0x854
 8005690:	a958      	add	r1, sp, #352	@ 0x160
 8005692:	4618      	mov	r0, r3
 8005694:	e002      	b.n	800569c <_ZN18GameScreenViewBaseC1Ev+0x35c>
 8005696:	bf00      	nop
 8005698:	0803242c 	.word	0x0803242c
 800569c:	934c      	str	r3, [sp, #304]	@ 0x130
 800569e:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80056a2:	f012 fc05 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80056a6:	f504 6308 	add.w	r3, r4, #2176	@ 0x880
 80056aa:	a958      	add	r1, sp, #352	@ 0x160
 80056ac:	4618      	mov	r0, r3
 80056ae:	934d      	str	r3, [sp, #308]	@ 0x134
 80056b0:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80056b4:	f012 fbfc 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80056b8:	f604 03ac 	addw	r3, r4, #2220	@ 0x8ac
 80056bc:	a958      	add	r1, sp, #352	@ 0x160
 80056be:	4618      	mov	r0, r3
 80056c0:	934e      	str	r3, [sp, #312]	@ 0x138
 80056c2:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80056c6:	f012 fbf3 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80056ca:	f604 03d8 	addw	r3, r4, #2264	@ 0x8d8
 80056ce:	a958      	add	r1, sp, #352	@ 0x160
 80056d0:	4618      	mov	r0, r3
 80056d2:	934f      	str	r3, [sp, #316]	@ 0x13c
 80056d4:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80056d8:	f012 fbea 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80056dc:	f604 1304 	addw	r3, r4, #2308	@ 0x904
 80056e0:	a958      	add	r1, sp, #352	@ 0x160
 80056e2:	4618      	mov	r0, r3
 80056e4:	9350      	str	r3, [sp, #320]	@ 0x140
 80056e6:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80056ea:	f012 fbe1 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80056ee:	f504 6313 	add.w	r3, r4, #2352	@ 0x930
 80056f2:	a958      	add	r1, sp, #352	@ 0x160
 80056f4:	4618      	mov	r0, r3
 80056f6:	9351      	str	r3, [sp, #324]	@ 0x144
 80056f8:	f8ad 6160 	strh.w	r6, [sp, #352]	@ 0x160
 80056fc:	f012 fbd8 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005700:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 8005704:	4618      	mov	r0, r3
 8005706:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005708:	f7ff fdf8 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 800570c:	f604 13a4 	addw	r3, r4, #2468	@ 0x9a4
 8005710:	4618      	mov	r0, r3
 8005712:	930c      	str	r3, [sp, #48]	@ 0x30
 8005714:	f7ff fdf2 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005718:	f604 13ec 	addw	r3, r4, #2540	@ 0x9ec
 800571c:	4618      	mov	r0, r3
 800571e:	930d      	str	r3, [sp, #52]	@ 0x34
 8005720:	f7ff fdec 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005724:	f604 2334 	addw	r3, r4, #2612	@ 0xa34
 8005728:	4618      	mov	r0, r3
 800572a:	930e      	str	r3, [sp, #56]	@ 0x38
 800572c:	f7ff fde6 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005730:	f604 237c 	addw	r3, r4, #2684	@ 0xa7c
 8005734:	4618      	mov	r0, r3
 8005736:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005738:	f7ff fde0 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 800573c:	f604 23c4 	addw	r3, r4, #2756	@ 0xac4
 8005740:	4618      	mov	r0, r3
 8005742:	9310      	str	r3, [sp, #64]	@ 0x40
 8005744:	f7ff fdda 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005748:	f604 330c 	addw	r3, r4, #2828	@ 0xb0c
 800574c:	4618      	mov	r0, r3
 800574e:	9311      	str	r3, [sp, #68]	@ 0x44
 8005750:	f7ff fdd4 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005754:	f604 3354 	addw	r3, r4, #2900	@ 0xb54
 8005758:	4618      	mov	r0, r3
 800575a:	9312      	str	r3, [sp, #72]	@ 0x48
 800575c:	f7ff fdce 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005760:	f604 339c 	addw	r3, r4, #2972	@ 0xb9c
 8005764:	4618      	mov	r0, r3
 8005766:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005768:	f7ff fdc8 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 800576c:	f604 33e4 	addw	r3, r4, #3044	@ 0xbe4
 8005770:	4618      	mov	r0, r3
 8005772:	9314      	str	r3, [sp, #80]	@ 0x50
 8005774:	f7ff fdc2 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005778:	f604 432c 	addw	r3, r4, #3116	@ 0xc2c
 800577c:	4618      	mov	r0, r3
 800577e:	9315      	str	r3, [sp, #84]	@ 0x54
 8005780:	f7ff fdbc 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005784:	f604 4374 	addw	r3, r4, #3188	@ 0xc74
 8005788:	4618      	mov	r0, r3
 800578a:	9316      	str	r3, [sp, #88]	@ 0x58
 800578c:	f7ff fdb6 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005790:	f604 43bc 	addw	r3, r4, #3260	@ 0xcbc
 8005794:	4618      	mov	r0, r3
 8005796:	9317      	str	r3, [sp, #92]	@ 0x5c
 8005798:	f7ff fdb0 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 800579c:	f604 5304 	addw	r3, r4, #3332	@ 0xd04
 80057a0:	4618      	mov	r0, r3
 80057a2:	9318      	str	r3, [sp, #96]	@ 0x60
 80057a4:	f7ff fdaa 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057a8:	f604 534c 	addw	r3, r4, #3404	@ 0xd4c
 80057ac:	4618      	mov	r0, r3
 80057ae:	9319      	str	r3, [sp, #100]	@ 0x64
 80057b0:	f7ff fda4 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057b4:	f604 5394 	addw	r3, r4, #3476	@ 0xd94
 80057b8:	4618      	mov	r0, r3
 80057ba:	931a      	str	r3, [sp, #104]	@ 0x68
 80057bc:	f7ff fd9e 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057c0:	f604 53dc 	addw	r3, r4, #3548	@ 0xddc
 80057c4:	4618      	mov	r0, r3
 80057c6:	931b      	str	r3, [sp, #108]	@ 0x6c
 80057c8:	f7ff fd98 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057cc:	f604 6324 	addw	r3, r4, #3620	@ 0xe24
 80057d0:	4618      	mov	r0, r3
 80057d2:	931c      	str	r3, [sp, #112]	@ 0x70
 80057d4:	f7ff fd92 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057d8:	f604 636c 	addw	r3, r4, #3692	@ 0xe6c
 80057dc:	4618      	mov	r0, r3
 80057de:	931d      	str	r3, [sp, #116]	@ 0x74
 80057e0:	f7ff fd8c 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057e4:	f604 63b4 	addw	r3, r4, #3764	@ 0xeb4
 80057e8:	4618      	mov	r0, r3
 80057ea:	931e      	str	r3, [sp, #120]	@ 0x78
 80057ec:	f7ff fd86 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057f0:	f604 63fc 	addw	r3, r4, #3836	@ 0xefc
 80057f4:	4618      	mov	r0, r3
 80057f6:	931f      	str	r3, [sp, #124]	@ 0x7c
 80057f8:	f7ff fd80 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 80057fc:	f604 7344 	addw	r3, r4, #3908	@ 0xf44
 8005800:	4618      	mov	r0, r3
 8005802:	9320      	str	r3, [sp, #128]	@ 0x80
 8005804:	f7ff fd7a 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005808:	f604 738c 	addw	r3, r4, #3980	@ 0xf8c
 800580c:	4618      	mov	r0, r3
 800580e:	9321      	str	r3, [sp, #132]	@ 0x84
 8005810:	f7ff fd74 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005814:	f604 73d4 	addw	r3, r4, #4052	@ 0xfd4
 8005818:	4618      	mov	r0, r3
 800581a:	9322      	str	r3, [sp, #136]	@ 0x88
 800581c:	f7ff fd6e 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005820:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8005824:	331c      	adds	r3, #28
 8005826:	4618      	mov	r0, r3
 8005828:	9303      	str	r3, [sp, #12]
 800582a:	f7ff fd67 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 800582e:	f504 5383 	add.w	r3, r4, #4192	@ 0x1060
 8005832:	3304      	adds	r3, #4
 8005834:	4618      	mov	r0, r3
 8005836:	9304      	str	r3, [sp, #16]
 8005838:	f7ff fd60 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 800583c:	f504 5385 	add.w	r3, r4, #4256	@ 0x10a0
 8005840:	330c      	adds	r3, #12
 8005842:	4618      	mov	r0, r3
 8005844:	9305      	str	r3, [sp, #20]
 8005846:	f7ff fd59 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 800584a:	f504 5387 	add.w	r3, r4, #4320	@ 0x10e0
 800584e:	3314      	adds	r3, #20
 8005850:	4618      	mov	r0, r3
 8005852:	9306      	str	r3, [sp, #24]
 8005854:	f7ff fd52 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005858:	f504 5389 	add.w	r3, r4, #4384	@ 0x1120
 800585c:	331c      	adds	r3, #28
 800585e:	4618      	mov	r0, r3
 8005860:	9307      	str	r3, [sp, #28]
 8005862:	f7ff fd4b 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005866:	f504 538c 	add.w	r3, r4, #4480	@ 0x1180
 800586a:	3304      	adds	r3, #4
 800586c:	4618      	mov	r0, r3
 800586e:	9308      	str	r3, [sp, #32]
 8005870:	f7ff fd44 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005874:	f504 538e 	add.w	r3, r4, #4544	@ 0x11c0
 8005878:	330c      	adds	r3, #12
 800587a:	4618      	mov	r0, r3
 800587c:	9309      	str	r3, [sp, #36]	@ 0x24
 800587e:	f7ff fd3d 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
 8005882:	f504 5390 	add.w	r3, r4, #4608	@ 0x1200
 8005886:	3314      	adds	r3, #20
    __background.setPosition(0, 0, 240, 320);
 8005888:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
GameScreenViewBase::GameScreenViewBase()
 800588c:	4618      	mov	r0, r3
 800588e:	930a      	str	r3, [sp, #40]	@ 0x28
 8005890:	f7ff fd34 	bl	80052fc <_ZN8touchgfx8TextAreaC1Ev>
    __background.setPosition(0, 0, 240, 320);
 8005894:	462a      	mov	r2, r5
 8005896:	f8cd b000 	str.w	fp, [sp]
 800589a:	4629      	mov	r1, r5
 800589c:	4650      	mov	r0, sl
 800589e:	23f0      	movs	r3, #240	@ 0xf0
 80058a0:	1d26      	adds	r6, r4, #4
 80058a2:	f7fd fa87 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80058a6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80058aa:	66a3      	str	r3, [r4, #104]	@ 0x68
 80058ac:	4651      	mov	r1, sl
 80058ae:	4630      	mov	r0, r6
 80058b0:	f00f fc24 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80058b4:	2353      	movs	r3, #83	@ 0x53
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_STAGE2_ID));
 80058b6:	a958      	add	r1, sp, #352	@ 0x160
 80058b8:	4638      	mov	r0, r7
 80058ba:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80058be:	f013 f993 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 80058c2:	462a      	mov	r2, r5
 80058c4:	23f0      	movs	r3, #240	@ 0xf0
 80058c6:	f8cd b000 	str.w	fp, [sp]
 80058ca:	4629      	mov	r1, r5
 80058cc:	4638      	mov	r0, r7
 80058ce:	f7fd fa71 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80058d2:	4629      	mov	r1, r5
 80058d4:	4638      	mov	r0, r7
 80058d6:	f012 faa6 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80058da:	4639      	mov	r1, r7
 80058dc:	4630      	mov	r0, r6
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 80058de:	271d      	movs	r7, #29
 80058e0:	f00f fc0c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80058e4:	2301      	movs	r3, #1
    BITMAP_HP_100_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR1_ID));
 80058e6:	a958      	add	r1, sp, #352	@ 0x160
 80058e8:	4648      	mov	r0, r9
 80058ea:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80058ee:	f013 f97b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 80058f2:	2369      	movs	r3, #105	@ 0x69
 80058f4:	2206      	movs	r2, #6
 80058f6:	9700      	str	r7, [sp, #0]
 80058f8:	4648      	mov	r0, r9
 80058fa:	2105      	movs	r1, #5
 80058fc:	f7fd fa5a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005900:	4629      	mov	r1, r5
 8005902:	4648      	mov	r0, r9
 8005904:	f012 fa8f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005908:	4649      	mov	r1, r9
 800590a:	4630      	mov	r0, r6
 800590c:	f00f fbf6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005910:	f04f 0b03 	mov.w	fp, #3
    BITMAP_HP_10_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR11_ID));
 8005914:	a958      	add	r1, sp, #352	@ 0x160
 8005916:	4640      	mov	r0, r8
 8005918:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
 800591c:	f013 f964 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID.setPosition(5, 6, 105, 29);
 8005920:	2206      	movs	r2, #6
 8005922:	2369      	movs	r3, #105	@ 0x69
 8005924:	9700      	str	r7, [sp, #0]
 8005926:	4640      	mov	r0, r8
 8005928:	2105      	movs	r1, #5
 800592a:	f7fd fa43 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800592e:	4629      	mov	r1, r5
 8005930:	4640      	mov	r0, r8
 8005932:	f012 fa78 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005936:	4641      	mov	r1, r8
 8005938:	4630      	mov	r0, r6
        visible = vis;
 800593a:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 800593e:	f00f fbdd 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR12_ID));
 8005942:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8005944:	2304      	movs	r3, #4
 8005946:	a958      	add	r1, sp, #352	@ 0x160
 8005948:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 800594c:	f013 f94c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID.setPosition(5, 6, 105, 29);
 8005950:	2206      	movs	r2, #6
 8005952:	2369      	movs	r3, #105	@ 0x69
 8005954:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8005956:	9700      	str	r7, [sp, #0]
 8005958:	2105      	movs	r1, #5
 800595a:	f7fd fa2b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800595e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8005960:	4629      	mov	r1, r5
 8005962:	f012 fa60 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005966:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8005968:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 800596c:	4630      	mov	r0, r6
 800596e:	f00f fbc5 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR10_ID));
 8005972:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8005974:	2302      	movs	r3, #2
 8005976:	a958      	add	r1, sp, #352	@ 0x160
 8005978:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 800597c:	f013 f934 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID.setPosition(5, 6, 105, 29);
 8005980:	2206      	movs	r2, #6
 8005982:	2369      	movs	r3, #105	@ 0x69
 8005984:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8005986:	9700      	str	r7, [sp, #0]
 8005988:	2105      	movs	r1, #5
 800598a:	f7fd fa13 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800598e:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8005990:	4629      	mov	r1, r5
 8005992:	f012 fa48 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005996:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8005998:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 800599c:	4630      	mov	r0, r6
 800599e:	f00f fbad 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR9_ID));
 80059a2:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80059a4:	230c      	movs	r3, #12
 80059a6:	a958      	add	r1, sp, #352	@ 0x160
 80059a8:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80059ac:	f013 f91c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID.setPosition(5, 6, 105, 29);
 80059b0:	2206      	movs	r2, #6
 80059b2:	2369      	movs	r3, #105	@ 0x69
 80059b4:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80059b6:	9700      	str	r7, [sp, #0]
 80059b8:	2105      	movs	r1, #5
 80059ba:	f7fd f9fb 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80059be:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80059c0:	4629      	mov	r1, r5
 80059c2:	f012 fa30 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80059c6:	9925      	ldr	r1, [sp, #148]	@ 0x94
 80059c8:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 80059cc:	4630      	mov	r0, r6
 80059ce:	f00f fb95 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR8_ID));
 80059d2:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80059d4:	230b      	movs	r3, #11
 80059d6:	a958      	add	r1, sp, #352	@ 0x160
 80059d8:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 80059dc:	f013 f904 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID.setPosition(5, 6, 105, 29);
 80059e0:	2206      	movs	r2, #6
 80059e2:	2369      	movs	r3, #105	@ 0x69
 80059e4:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80059e6:	9700      	str	r7, [sp, #0]
 80059e8:	2105      	movs	r1, #5
 80059ea:	f7fd f9e3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80059ee:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80059f0:	4629      	mov	r1, r5
 80059f2:	f012 fa18 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80059f6:	9926      	ldr	r1, [sp, #152]	@ 0x98
 80059f8:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 80059fc:	4630      	mov	r0, r6
 80059fe:	f00f fb7d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR7_ID));
 8005a02:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8005a04:	230a      	movs	r3, #10
 8005a06:	a958      	add	r1, sp, #352	@ 0x160
 8005a08:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005a0c:	f013 f8ec 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID.setPosition(5, 6, 105, 29);
 8005a10:	2206      	movs	r2, #6
 8005a12:	2369      	movs	r3, #105	@ 0x69
 8005a14:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8005a16:	9700      	str	r7, [sp, #0]
 8005a18:	2105      	movs	r1, #5
 8005a1a:	f7fd f9cb 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005a1e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8005a20:	4629      	mov	r1, r5
 8005a22:	f012 fa00 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005a26:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 8005a28:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8005a2c:	4630      	mov	r0, r6
 8005a2e:	f00f fb65 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR6_ID));
 8005a32:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8005a34:	2309      	movs	r3, #9
 8005a36:	a958      	add	r1, sp, #352	@ 0x160
 8005a38:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005a3c:	f013 f8d4 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID.setPosition(5, 6, 105, 29);
 8005a40:	2206      	movs	r2, #6
 8005a42:	2369      	movs	r3, #105	@ 0x69
 8005a44:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8005a46:	9700      	str	r7, [sp, #0]
 8005a48:	2105      	movs	r1, #5
 8005a4a:	f7fd f9b3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005a4e:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8005a50:	4629      	mov	r1, r5
 8005a52:	f012 f9e8 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005a56:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8005a58:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 8005a5c:	4630      	mov	r0, r6
 8005a5e:	f00f fb4d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR5_ID));
 8005a62:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8005a64:	2308      	movs	r3, #8
 8005a66:	a958      	add	r1, sp, #352	@ 0x160
 8005a68:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005a6c:	f013 f8bc 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID.setPosition(5, 6, 105, 29);
 8005a70:	2369      	movs	r3, #105	@ 0x69
 8005a72:	2206      	movs	r2, #6
 8005a74:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8005a76:	9700      	str	r7, [sp, #0]
 8005a78:	2105      	movs	r1, #5
 8005a7a:	f7fd f99b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005a7e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8005a80:	4629      	mov	r1, r5
 8005a82:	f012 f9d0 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005a86:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8005a88:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 8005a8c:	4630      	mov	r0, r6
 8005a8e:	f00f fb35 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005a92:	f04f 0807 	mov.w	r8, #7
    BITMAP_HP_80_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR4_ID));
 8005a96:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8005a98:	f8ad 8160 	strh.w	r8, [sp, #352]	@ 0x160
 8005a9c:	a958      	add	r1, sp, #352	@ 0x160
 8005a9e:	f013 f8a3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID.setPosition(5, 6, 105, 29);
 8005aa2:	2369      	movs	r3, #105	@ 0x69
 8005aa4:	2206      	movs	r2, #6
 8005aa6:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8005aa8:	9700      	str	r7, [sp, #0]
 8005aaa:	2105      	movs	r1, #5
 8005aac:	f7fd f982 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005ab0:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8005ab2:	4629      	mov	r1, r5
 8005ab4:	f012 f9b7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005ab8:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8005aba:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 8005abe:	4630      	mov	r0, r6
 8005ac0:	f04f 0906 	mov.w	r9, #6
 8005ac4:	f00f fb1a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR3_ID));
 8005ac8:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8005aca:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8005ace:	a958      	add	r1, sp, #352	@ 0x160
 8005ad0:	f013 f88a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID.setPosition(5, 6, 105, 29);
 8005ad4:	464a      	mov	r2, r9
 8005ad6:	2369      	movs	r3, #105	@ 0x69
 8005ad8:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8005ada:	9700      	str	r7, [sp, #0]
 8005adc:	2105      	movs	r1, #5
 8005ade:	f7fd f969 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005ae2:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8005ae4:	4629      	mov	r1, r5
 8005ae6:	f012 f99e 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005aea:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8005aec:	f884 5275 	strb.w	r5, [r4, #629]	@ 0x275
 8005af0:	4630      	mov	r0, r6
 8005af2:	f00f fb03 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005af6:	f04f 0a05 	mov.w	sl, #5
    BITMAP_HP_100_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BAR2_ID));
 8005afa:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8005afc:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
 8005b00:	a958      	add	r1, sp, #352	@ 0x160
 8005b02:	f013 f871 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID_1.setPosition(126, 6, 105, 29);
 8005b06:	464a      	mov	r2, r9
 8005b08:	2369      	movs	r3, #105	@ 0x69
 8005b0a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8005b0c:	9700      	str	r7, [sp, #0]
 8005b0e:	217e      	movs	r1, #126	@ 0x7e
 8005b10:	f7fd f950 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b14:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8005b16:	4629      	mov	r1, r5
 8005b18:	f012 f985 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005b1c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8005b1e:	4630      	mov	r0, r6
 8005b20:	f00f faec 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH9_ID));
 8005b24:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8005b26:	2316      	movs	r3, #22
 8005b28:	a958      	add	r1, sp, #352	@ 0x160
 8005b2a:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005b2e:	f013 f85b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID_1.setPosition(126, 6, 105, 29);
 8005b32:	464a      	mov	r2, r9
 8005b34:	2369      	movs	r3, #105	@ 0x69
 8005b36:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8005b38:	9700      	str	r7, [sp, #0]
 8005b3a:	217e      	movs	r1, #126	@ 0x7e
 8005b3c:	f7fd f93a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b40:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8005b42:	4629      	mov	r1, r5
 8005b44:	f012 f96f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005b48:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8005b4a:	f884 52cd 	strb.w	r5, [r4, #717]	@ 0x2cd
 8005b4e:	4630      	mov	r0, r6
 8005b50:	f00f fad4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH8_ID));
 8005b54:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8005b56:	2315      	movs	r3, #21
 8005b58:	a958      	add	r1, sp, #352	@ 0x160
 8005b5a:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005b5e:	f013 f843 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID_1.setPosition(126, 6, 105, 29);
 8005b62:	464a      	mov	r2, r9
 8005b64:	2369      	movs	r3, #105	@ 0x69
 8005b66:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8005b68:	9700      	str	r7, [sp, #0]
 8005b6a:	217e      	movs	r1, #126	@ 0x7e
 8005b6c:	f7fd f922 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b70:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8005b72:	4629      	mov	r1, r5
 8005b74:	f012 f957 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005b78:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 8005b7a:	f884 52f9 	strb.w	r5, [r4, #761]	@ 0x2f9
 8005b7e:	4630      	mov	r0, r6
 8005b80:	f00f fabc 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH7_ID));
 8005b84:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8005b86:	2314      	movs	r3, #20
 8005b88:	a958      	add	r1, sp, #352	@ 0x160
 8005b8a:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005b8e:	f013 f82b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID_1.setPosition(126, 6, 105, 29);
 8005b92:	464a      	mov	r2, r9
 8005b94:	2369      	movs	r3, #105	@ 0x69
 8005b96:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8005b98:	9700      	str	r7, [sp, #0]
 8005b9a:	217e      	movs	r1, #126	@ 0x7e
 8005b9c:	f7fd f90a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005ba0:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8005ba2:	4629      	mov	r1, r5
 8005ba4:	f012 f93f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005ba8:	992f      	ldr	r1, [sp, #188]	@ 0xbc
 8005baa:	f884 5325 	strb.w	r5, [r4, #805]	@ 0x325
 8005bae:	4630      	mov	r0, r6
 8005bb0:	f00f faa4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH6_ID));
 8005bb4:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8005bb6:	2313      	movs	r3, #19
 8005bb8:	a958      	add	r1, sp, #352	@ 0x160
 8005bba:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005bbe:	f013 f813 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID_1.setPosition(126, 6, 105, 29);
 8005bc2:	464a      	mov	r2, r9
 8005bc4:	2369      	movs	r3, #105	@ 0x69
 8005bc6:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8005bc8:	9700      	str	r7, [sp, #0]
 8005bca:	217e      	movs	r1, #126	@ 0x7e
 8005bcc:	f7fd f8f2 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005bd0:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8005bd2:	4629      	mov	r1, r5
 8005bd4:	f012 f927 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005bd8:	9930      	ldr	r1, [sp, #192]	@ 0xc0
 8005bda:	f884 5351 	strb.w	r5, [r4, #849]	@ 0x351
 8005bde:	4630      	mov	r0, r6
 8005be0:	f00f fa8c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH5_ID));
 8005be4:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8005be6:	2312      	movs	r3, #18
 8005be8:	a958      	add	r1, sp, #352	@ 0x160
 8005bea:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005bee:	f012 fffb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID_1.setPosition(126, 6, 105, 29);
 8005bf2:	464a      	mov	r2, r9
 8005bf4:	2369      	movs	r3, #105	@ 0x69
 8005bf6:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8005bf8:	9700      	str	r7, [sp, #0]
 8005bfa:	217e      	movs	r1, #126	@ 0x7e
 8005bfc:	f7fd f8da 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005c00:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8005c02:	4629      	mov	r1, r5
 8005c04:	f012 f90f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005c08:	9931      	ldr	r1, [sp, #196]	@ 0xc4
 8005c0a:	f884 537d 	strb.w	r5, [r4, #893]	@ 0x37d
 8005c0e:	4630      	mov	r0, r6
 8005c10:	f00f fa74 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH4_ID));
 8005c14:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8005c16:	2311      	movs	r3, #17
 8005c18:	a958      	add	r1, sp, #352	@ 0x160
 8005c1a:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005c1e:	f012 ffe3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID_1.setPosition(126, 6, 105, 29);
 8005c22:	464a      	mov	r2, r9
 8005c24:	2369      	movs	r3, #105	@ 0x69
 8005c26:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8005c28:	9700      	str	r7, [sp, #0]
 8005c2a:	217e      	movs	r1, #126	@ 0x7e
 8005c2c:	f7fd f8c2 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005c30:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8005c32:	4629      	mov	r1, r5
 8005c34:	f012 f8f7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005c38:	9932      	ldr	r1, [sp, #200]	@ 0xc8
 8005c3a:	f884 53a9 	strb.w	r5, [r4, #937]	@ 0x3a9
 8005c3e:	4630      	mov	r0, r6
 8005c40:	f00f fa5c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH3_ID));
 8005c44:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8005c46:	2310      	movs	r3, #16
 8005c48:	a958      	add	r1, sp, #352	@ 0x160
 8005c4a:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005c4e:	f012 ffcb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID_1.setPosition(126, 6, 105, 29);
 8005c52:	464a      	mov	r2, r9
 8005c54:	2369      	movs	r3, #105	@ 0x69
 8005c56:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8005c58:	9700      	str	r7, [sp, #0]
 8005c5a:	217e      	movs	r1, #126	@ 0x7e
 8005c5c:	f7fd f8aa 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005c60:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8005c62:	4629      	mov	r1, r5
 8005c64:	f012 f8df 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005c68:	9933      	ldr	r1, [sp, #204]	@ 0xcc
 8005c6a:	f884 53d5 	strb.w	r5, [r4, #981]	@ 0x3d5
 8005c6e:	4630      	mov	r0, r6
 8005c70:	f00f fa44 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH2_ID));
 8005c74:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8005c76:	230f      	movs	r3, #15
 8005c78:	a958      	add	r1, sp, #352	@ 0x160
 8005c7a:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005c7e:	f012 ffb3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID_1.setPosition(126, 6, 105, 29);
 8005c82:	464a      	mov	r2, r9
 8005c84:	2369      	movs	r3, #105	@ 0x69
 8005c86:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8005c88:	9700      	str	r7, [sp, #0]
 8005c8a:	217e      	movs	r1, #126	@ 0x7e
 8005c8c:	f7fd f892 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005c90:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8005c92:	4629      	mov	r1, r5
 8005c94:	f012 f8c7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005c98:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 8005c9a:	f884 5401 	strb.w	r5, [r4, #1025]	@ 0x401
 8005c9e:	4630      	mov	r0, r6
 8005ca0:	f00f fa2c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_10_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH1_ID));
 8005ca4:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8005ca6:	f04f 030e 	mov.w	r3, #14
 8005caa:	a958      	add	r1, sp, #352	@ 0x160
 8005cac:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005cb0:	f012 ff9a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID_1.setPosition(126, 6, 105, 29);
 8005cb4:	464a      	mov	r2, r9
 8005cb6:	2369      	movs	r3, #105	@ 0x69
 8005cb8:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8005cba:	9700      	str	r7, [sp, #0]
 8005cbc:	217e      	movs	r1, #126	@ 0x7e
 8005cbe:	f7fd f879 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005cc2:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8005cc4:	4629      	mov	r1, r5
 8005cc6:	f012 f8ae 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005cca:	9935      	ldr	r1, [sp, #212]	@ 0xd4
 8005ccc:	f884 542d 	strb.w	r5, [r4, #1069]	@ 0x42d
 8005cd0:	4630      	mov	r0, r6
 8005cd2:	f00f fa13 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH0_ID));
 8005cd6:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 8005cd8:	230d      	movs	r3, #13
 8005cda:	a958      	add	r1, sp, #352	@ 0x160
 8005cdc:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005ce0:	f012 ff82 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID_1.setPosition(126, 6, 105, 29);
 8005ce4:	464a      	mov	r2, r9
 8005ce6:	2369      	movs	r3, #105	@ 0x69
 8005ce8:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 8005cea:	9700      	str	r7, [sp, #0]
 8005cec:	217e      	movs	r1, #126	@ 0x7e
 8005cee:	f7fd f861 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005cf2:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 8005cf4:	4629      	mov	r1, r5
 8005cf6:	f012 f896 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005cfa:	9936      	ldr	r1, [sp, #216]	@ 0xd8
 8005cfc:	f884 5459 	strb.w	r5, [r4, #1113]	@ 0x459
 8005d00:	4630      	mov	r0, r6
 8005d02:	f00f f9fb 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setPosition(167, 107, 64, 85);
 8005d06:	f04f 0955 	mov.w	r9, #85	@ 0x55
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_ID));
 8005d0a:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8005d0c:	2317      	movs	r3, #23
 8005d0e:	a958      	add	r1, sp, #352	@ 0x160
 8005d10:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005d14:	f012 ff68 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(167, 107, 64, 85);
 8005d18:	2340      	movs	r3, #64	@ 0x40
 8005d1a:	226b      	movs	r2, #107	@ 0x6b
 8005d1c:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8005d1e:	f8cd 9000 	str.w	r9, [sp]
 8005d22:	21a7      	movs	r1, #167	@ 0xa7
 8005d24:	f7fd f846 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005d28:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8005d2a:	4629      	mov	r1, r5
 8005d2c:	f012 f87b 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005d30:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 8005d32:	4630      	mov	r0, r6
 8005d34:	f00f f9e2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_win.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_WIN_ID));
 8005d38:	9838      	ldr	r0, [sp, #224]	@ 0xe0
 8005d3a:	f04f 021c 	mov.w	r2, #28
 8005d3e:	a958      	add	r1, sp, #352	@ 0x160
 8005d40:	f8ad 2160 	strh.w	r2, [sp, #352]	@ 0x160
 8005d44:	f012 ff50 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_win.setPosition(161, 107, 76, 85);
 8005d48:	234c      	movs	r3, #76	@ 0x4c
 8005d4a:	226b      	movs	r2, #107	@ 0x6b
 8005d4c:	9838      	ldr	r0, [sp, #224]	@ 0xe0
 8005d4e:	f8cd 9000 	str.w	r9, [sp]
 8005d52:	21a1      	movs	r1, #161	@ 0xa1
 8005d54:	f7fd f82e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005d58:	9838      	ldr	r0, [sp, #224]	@ 0xe0
 8005d5a:	4629      	mov	r1, r5
 8005d5c:	f012 f863 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005d60:	9938      	ldr	r1, [sp, #224]	@ 0xe0
 8005d62:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 8005d66:	4630      	mov	r0, r6
 8005d68:	f00f f9c8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_lose.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_DIE_ID));
 8005d6c:	a858      	add	r0, sp, #352	@ 0x160
 8005d6e:	f04f 011a 	mov.w	r1, #26
 8005d72:	f8ad 1160 	strh.w	r1, [sp, #352]	@ 0x160
 8005d76:	4601      	mov	r1, r0
 8005d78:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 8005d7a:	f012 ff35 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_lose.setPosition(167, 112, 64, 85);
 8005d7e:	2340      	movs	r3, #64	@ 0x40
 8005d80:	2270      	movs	r2, #112	@ 0x70
 8005d82:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 8005d84:	f8cd 9000 	str.w	r9, [sp]
 8005d88:	21a7      	movs	r1, #167	@ 0xa7
 8005d8a:	f7fd f813 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005d8e:	9839      	ldr	r0, [sp, #228]	@ 0xe4
 8005d90:	4629      	mov	r1, r5
 8005d92:	f012 f848 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005d96:	9939      	ldr	r1, [sp, #228]	@ 0xe4
 8005d98:	f884 54dd 	strb.w	r5, [r4, #1245]	@ 0x4dd
 8005d9c:	4630      	mov	r0, r6
 8005d9e:	f00f f9ad 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_SPE_ID));
 8005da2:	f50d 7cb0 	add.w	ip, sp, #352	@ 0x160
 8005da6:	f04f 001b 	mov.w	r0, #27
 8005daa:	4661      	mov	r1, ip
 8005dac:	f8ad 0160 	strh.w	r0, [sp, #352]	@ 0x160
 8005db0:	983a      	ldr	r0, [sp, #232]	@ 0xe8
 8005db2:	f012 ff19 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe.setPosition(99, 62, 117, 130);
 8005db6:	2382      	movs	r3, #130	@ 0x82
 8005db8:	223e      	movs	r2, #62	@ 0x3e
 8005dba:	983a      	ldr	r0, [sp, #232]	@ 0xe8
 8005dbc:	9300      	str	r3, [sp, #0]
 8005dbe:	2163      	movs	r1, #99	@ 0x63
 8005dc0:	2375      	movs	r3, #117	@ 0x75
 8005dc2:	f7fc fff7 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005dc6:	983a      	ldr	r0, [sp, #232]	@ 0xe8
 8005dc8:	4629      	mov	r1, r5
 8005dca:	f012 f82c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005dce:	993a      	ldr	r1, [sp, #232]	@ 0xe8
 8005dd0:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 8005dd4:	4630      	mov	r0, r6
 8005dd6:	f00f f991 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_def.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_DEF_ID));
 8005dda:	f50d 7eb0 	add.w	lr, sp, #352	@ 0x160
 8005dde:	f04f 0c19 	mov.w	ip, #25
 8005de2:	4671      	mov	r1, lr
 8005de4:	983b      	ldr	r0, [sp, #236]	@ 0xec
 8005de6:	f8ad c160 	strh.w	ip, [sp, #352]	@ 0x160
 8005dea:	f012 fefd 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_def.setPosition(164, 95, 76, 97);
 8005dee:	2361      	movs	r3, #97	@ 0x61
 8005df0:	225f      	movs	r2, #95	@ 0x5f
 8005df2:	983b      	ldr	r0, [sp, #236]	@ 0xec
 8005df4:	9300      	str	r3, [sp, #0]
 8005df6:	21a4      	movs	r1, #164	@ 0xa4
 8005df8:	234c      	movs	r3, #76	@ 0x4c
 8005dfa:	f7fc ffdb 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005dfe:	983b      	ldr	r0, [sp, #236]	@ 0xec
 8005e00:	4629      	mov	r1, r5
 8005e02:	f012 f810 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005e06:	993b      	ldr	r1, [sp, #236]	@ 0xec
 8005e08:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 8005e0c:	4630      	mov	r0, r6
 8005e0e:	f00f f975 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e12:	f04f 0e18 	mov.w	lr, #24
    bleach_atk.setBitmap(touchgfx::Bitmap(BITMAP_BLEACH_ATK_ID));
 8005e16:	983c      	ldr	r0, [sp, #240]	@ 0xf0
 8005e18:	f8ad e160 	strh.w	lr, [sp, #352]	@ 0x160
 8005e1c:	a958      	add	r1, sp, #352	@ 0x160
 8005e1e:	f012 fee3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_atk.setPosition(110, 66, 103, 126);
 8005e22:	237e      	movs	r3, #126	@ 0x7e
 8005e24:	2242      	movs	r2, #66	@ 0x42
 8005e26:	983c      	ldr	r0, [sp, #240]	@ 0xf0
 8005e28:	9300      	str	r3, [sp, #0]
 8005e2a:	216e      	movs	r1, #110	@ 0x6e
 8005e2c:	2367      	movs	r3, #103	@ 0x67
 8005e2e:	f7fc ffc1 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005e32:	983c      	ldr	r0, [sp, #240]	@ 0xf0
 8005e34:	4629      	mov	r1, r5
 8005e36:	f011 fff6 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005e3a:	993c      	ldr	r1, [sp, #240]	@ 0xf0
 8005e3c:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 8005e40:	4630      	mov	r0, r6
 8005e42:	f00f f95b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 8005e46:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 8005e48:	2333      	movs	r3, #51	@ 0x33
 8005e4a:	a958      	add	r1, sp, #352	@ 0x160
 8005e4c:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005e50:	f012 feca 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(3, 110, 67, 85);
 8005e54:	2343      	movs	r3, #67	@ 0x43
 8005e56:	226e      	movs	r2, #110	@ 0x6e
 8005e58:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 8005e5a:	f8cd 9000 	str.w	r9, [sp]
 8005e5e:	4659      	mov	r1, fp
 8005e60:	f7fc ffa8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005e64:	983d      	ldr	r0, [sp, #244]	@ 0xf4
 8005e66:	4629      	mov	r1, r5
 8005e68:	f011 ffdd 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005e6c:	f04f 0b38 	mov.w	fp, #56	@ 0x38
 8005e70:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8005e72:	4630      	mov	r0, r6
 8005e74:	f00f f942 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e78:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_WIN_ID));
 8005e7c:	f50d 7bb0 	add.w	fp, sp, #352	@ 0x160
 8005e80:	983e      	ldr	r0, [sp, #248]	@ 0xf8
 8005e82:	4659      	mov	r1, fp
    naruto_win.setPosition(7, 99, 73, 93);
 8005e84:	f04f 0b5d 	mov.w	fp, #93	@ 0x5d
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_WIN_ID));
 8005e88:	f012 feae 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_win.setPosition(7, 99, 73, 93);
 8005e8c:	2263      	movs	r2, #99	@ 0x63
 8005e8e:	2349      	movs	r3, #73	@ 0x49
 8005e90:	983e      	ldr	r0, [sp, #248]	@ 0xf8
 8005e92:	f8cd b000 	str.w	fp, [sp]
 8005e96:	4641      	mov	r1, r8
 8005e98:	f7fc ff8c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005e9c:	983e      	ldr	r0, [sp, #248]	@ 0xf8
 8005e9e:	4629      	mov	r1, r5
 8005ea0:	f011 ffc1 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005ea4:	993e      	ldr	r1, [sp, #248]	@ 0xf8
 8005ea6:	f884 55b9 	strb.w	r5, [r4, #1465]	@ 0x5b9
 8005eaa:	4630      	mov	r0, r6
 8005eac:	f00f f926 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_lose.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DIE_ID));
 8005eb0:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 8005eb2:	2336      	movs	r3, #54	@ 0x36
 8005eb4:	a958      	add	r1, sp, #352	@ 0x160
 8005eb6:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005eba:	f012 fe95 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_lose.setPosition(7, 117, 67, 85);
 8005ebe:	2275      	movs	r2, #117	@ 0x75
 8005ec0:	2343      	movs	r3, #67	@ 0x43
 8005ec2:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 8005ec4:	f8cd 9000 	str.w	r9, [sp]
 8005ec8:	4641      	mov	r1, r8
 8005eca:	f7fc ff73 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005ece:	983f      	ldr	r0, [sp, #252]	@ 0xfc
 8005ed0:	4629      	mov	r1, r5
 8005ed2:	f011 ffa8 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_SPE_ID));
 8005ed6:	f50d 78b0 	add.w	r8, sp, #352	@ 0x160
 8005eda:	993f      	ldr	r1, [sp, #252]	@ 0xfc
 8005edc:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 8005ee0:	4630      	mov	r0, r6
 8005ee2:	f00f f90b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005ee6:	9840      	ldr	r0, [sp, #256]	@ 0x100
 8005ee8:	2337      	movs	r3, #55	@ 0x37
 8005eea:	4641      	mov	r1, r8
 8005eec:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005ef0:	f012 fe7a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(63, 103, 69, 93);
 8005ef4:	2267      	movs	r2, #103	@ 0x67
 8005ef6:	2345      	movs	r3, #69	@ 0x45
 8005ef8:	9840      	ldr	r0, [sp, #256]	@ 0x100
 8005efa:	f8cd b000 	str.w	fp, [sp]
 8005efe:	213f      	movs	r1, #63	@ 0x3f
 8005f00:	f7fc ff58 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005f04:	9840      	ldr	r0, [sp, #256]	@ 0x100
 8005f06:	4629      	mov	r1, r5
 8005f08:	f011 ff8d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005f0c:	9940      	ldr	r1, [sp, #256]	@ 0x100
 8005f0e:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 8005f12:	4630      	mov	r0, r6
 8005f14:	f00f f8f2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DEF_ID));
 8005f18:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8005f1a:	2335      	movs	r3, #53	@ 0x35
 8005f1c:	4641      	mov	r1, r8
    naruto_def.setPosition(5, 100, 69, 92);
 8005f1e:	f04f 085c 	mov.w	r8, #92	@ 0x5c
 8005f22:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DEF_ID));
 8005f26:	f012 fe5f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(5, 100, 69, 92);
 8005f2a:	2264      	movs	r2, #100	@ 0x64
 8005f2c:	2345      	movs	r3, #69	@ 0x45
 8005f2e:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8005f30:	f8cd 8000 	str.w	r8, [sp]
 8005f34:	4651      	mov	r1, sl
 8005f36:	f7fc ff3d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005f3a:	9841      	ldr	r0, [sp, #260]	@ 0x104
 8005f3c:	4629      	mov	r1, r5
 8005f3e:	f011 ff72 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_ATK_ID));
 8005f42:	f50d 79b0 	add.w	r9, sp, #352	@ 0x160
 8005f46:	9941      	ldr	r1, [sp, #260]	@ 0x104
 8005f48:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 8005f4c:	4630      	mov	r0, r6
 8005f4e:	f00f f8d5 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005f52:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8005f54:	2334      	movs	r3, #52	@ 0x34
 8005f56:	4649      	mov	r1, r9
 8005f58:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005f5c:	f012 fe44 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(57, 100, 69, 92);
 8005f60:	2345      	movs	r3, #69	@ 0x45
 8005f62:	2264      	movs	r2, #100	@ 0x64
 8005f64:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8005f66:	f8cd 8000 	str.w	r8, [sp]
 8005f6a:	2139      	movs	r1, #57	@ 0x39
 8005f6c:	f7fc ff22 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005f70:	9842      	ldr	r0, [sp, #264]	@ 0x108
 8005f72:	4629      	mov	r1, r5
 8005f74:	f011 ff57 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005f78:	9942      	ldr	r1, [sp, #264]	@ 0x108
 8005f7a:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 8005f7e:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 8005f80:	f04f 082e 	mov.w	r8, #46	@ 0x2e
 8005f84:	f00f f8ba 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 8005f88:	9843      	ldr	r0, [sp, #268]	@ 0x10c
 8005f8a:	f8ad 5160 	strh.w	r5, [sp, #352]	@ 0x160
 8005f8e:	4649      	mov	r1, r9
 8005f90:	f012 fe2a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 8005f94:	4643      	mov	r3, r8
 8005f96:	22f2      	movs	r2, #242	@ 0xf2
 8005f98:	9843      	ldr	r0, [sp, #268]	@ 0x10c
 8005f9a:	f8cd 8000 	str.w	r8, [sp]
 8005f9e:	2140      	movs	r1, #64	@ 0x40
 8005fa0:	f7fc ff08 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005fa4:	9843      	ldr	r0, [sp, #268]	@ 0x10c
 8005fa6:	4629      	mov	r1, r5
 8005fa8:	f011 ff3d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8005fac:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 8005fb0:	9943      	ldr	r1, [sp, #268]	@ 0x10c
 8005fb2:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 8005fb6:	4630      	mov	r0, r6
 8005fb8:	f00f f8a0 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005fbc:	f04f 091f 	mov.w	r9, #31
 8005fc0:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8005fc2:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8005fc6:	4651      	mov	r1, sl
 8005fc8:	f012 fe0e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 8005fcc:	4643      	mov	r3, r8
 8005fce:	22f2      	movs	r2, #242	@ 0xf2
 8005fd0:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8005fd2:	f8cd 8000 	str.w	r8, [sp]
 8005fd6:	217c      	movs	r1, #124	@ 0x7c
 8005fd8:	f7fc feec 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005fdc:	9844      	ldr	r0, [sp, #272]	@ 0x110
 8005fde:	4629      	mov	r1, r5
 8005fe0:	f011 ff21 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005fe4:	9944      	ldr	r1, [sp, #272]	@ 0x110
 8005fe6:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 8005fea:	4630      	mov	r0, r6
 8005fec:	f00f f886 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 8005ff0:	9845      	ldr	r0, [sp, #276]	@ 0x114
 8005ff2:	234c      	movs	r3, #76	@ 0x4c
 8005ff4:	4651      	mov	r1, sl
 8005ff6:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 8005ffa:	f012 fdf5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 8005ffe:	4643      	mov	r3, r8
 8006000:	22f2      	movs	r2, #242	@ 0xf2
 8006002:	9845      	ldr	r0, [sp, #276]	@ 0x114
 8006004:	f8cd 8000 	str.w	r8, [sp]
 8006008:	21b8      	movs	r1, #184	@ 0xb8
 800600a:	f7fc fed3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800600e:	9845      	ldr	r0, [sp, #276]	@ 0x114
 8006010:	4629      	mov	r1, r5
 8006012:	f011 ff08 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006016:	f04f 0a3a 	mov.w	sl, #58	@ 0x3a
 800601a:	9945      	ldr	r1, [sp, #276]	@ 0x114
 800601c:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 8006020:	4630      	mov	r0, r6
 8006022:	f00f f86b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006026:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 800602a:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 800602e:	9846      	ldr	r0, [sp, #280]	@ 0x118
 8006030:	4651      	mov	r1, sl
 8006032:	f012 fdd9 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 8006036:	4643      	mov	r3, r8
 8006038:	22f1      	movs	r2, #241	@ 0xf1
 800603a:	9846      	ldr	r0, [sp, #280]	@ 0x118
 800603c:	f8cd 8000 	str.w	r8, [sp]
 8006040:	2102      	movs	r1, #2
 8006042:	f7fc feb7 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006046:	9846      	ldr	r0, [sp, #280]	@ 0x118
 8006048:	4629      	mov	r1, r5
 800604a:	f011 feec 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800604e:	f04f 0a39 	mov.w	sl, #57	@ 0x39
 8006052:	9946      	ldr	r1, [sp, #280]	@ 0x118
 8006054:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 8006058:	4630      	mov	r0, r6
 800605a:	f00f f84f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800605e:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 8006062:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 8006066:	9847      	ldr	r0, [sp, #284]	@ 0x11c
 8006068:	4651      	mov	r1, sl
 800606a:	f012 fdbd 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 800606e:	4643      	mov	r3, r8
 8006070:	22f1      	movs	r2, #241	@ 0xf1
 8006072:	9847      	ldr	r0, [sp, #284]	@ 0x11c
 8006074:	f8cd 8000 	str.w	r8, [sp]
 8006078:	2102      	movs	r1, #2
 800607a:	f7fc fe9b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800607e:	9847      	ldr	r0, [sp, #284]	@ 0x11c
 8006080:	4629      	mov	r1, r5
 8006082:	f011 fed0 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    chakra_box1.setPosition(14, 43, 86, 5);
 8006086:	f04f 0805 	mov.w	r8, #5
 800608a:	9947      	ldr	r1, [sp, #284]	@ 0x11c
 800608c:	4630      	mov	r0, r6
 800608e:	f00f f835 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006092:	9852      	ldr	r0, [sp, #328]	@ 0x148
 8006094:	f8cd 8000 	str.w	r8, [sp]
 8006098:	2356      	movs	r3, #86	@ 0x56
 800609a:	f8df 8724 	ldr.w	r8, [pc, #1828]	@ 80067c0 <_ZN18GameScreenViewBaseC1Ev+0x1480>
 800609e:	222b      	movs	r2, #43	@ 0x2b
 80060a0:	210e      	movs	r1, #14
 80060a2:	f7fc fe87 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakra_box2.setPosition(135, 43, 86, 5);
 80060a6:	f04f 0a05 	mov.w	sl, #5
 80060aa:	9952      	ldr	r1, [sp, #328]	@ 0x148
 80060ac:	f8c4 8774 	str.w	r8, [r4, #1908]	@ 0x774
 80060b0:	4630      	mov	r0, r6
 80060b2:	f00f f823 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80060b6:	222b      	movs	r2, #43	@ 0x2b
 80060b8:	9853      	ldr	r0, [sp, #332]	@ 0x14c
 80060ba:	f8cd a000 	str.w	sl, [sp]
 80060be:	2356      	movs	r3, #86	@ 0x56
 80060c0:	2187      	movs	r1, #135	@ 0x87
 80060c2:	f7fc fe77 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80060c6:	9953      	ldr	r1, [sp, #332]	@ 0x14c
 80060c8:	f8c4 87a0 	str.w	r8, [r4, #1952]	@ 0x7a0
 80060cc:	4630      	mov	r0, r6
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 80060ce:	f50d 78b0 	add.w	r8, sp, #352	@ 0x160
 80060d2:	f00f f813 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80060d6:	9848      	ldr	r0, [sp, #288]	@ 0x120
 80060d8:	232a      	movs	r3, #42	@ 0x2a
 80060da:	4641      	mov	r1, r8
    gameover.setPosition(65, 6, 110, 157);
 80060dc:	f04f 089d 	mov.w	r8, #157	@ 0x9d
 80060e0:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 80060e4:	f012 fd80 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.setPosition(65, 6, 110, 157);
 80060e8:	2206      	movs	r2, #6
 80060ea:	236e      	movs	r3, #110	@ 0x6e
 80060ec:	9848      	ldr	r0, [sp, #288]	@ 0x120
 80060ee:	f8cd 8000 	str.w	r8, [sp]
 80060f2:	2141      	movs	r1, #65	@ 0x41
 80060f4:	f7fc fe5e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    gameover.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80060f8:	9848      	ldr	r0, [sp, #288]	@ 0x120
 80060fa:	4629      	mov	r1, r5
 80060fc:	f011 fe93 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    win.setBitmap(touchgfx::Bitmap(BITMAP_YOUWIN_ID));
 8006100:	f50d 7ab0 	add.w	sl, sp, #352	@ 0x160
 8006104:	9948      	ldr	r1, [sp, #288]	@ 0x120
 8006106:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 800610a:	4630      	mov	r0, r6
 800610c:	f00e fff6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006110:	9849      	ldr	r0, [sp, #292]	@ 0x124
 8006112:	2359      	movs	r3, #89	@ 0x59
 8006114:	4651      	mov	r1, sl
 8006116:	f8ad 3160 	strh.w	r3, [sp, #352]	@ 0x160
 800611a:	f012 fd65 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    win.setPosition(65, 6, 110, 157);
 800611e:	236e      	movs	r3, #110	@ 0x6e
 8006120:	2206      	movs	r2, #6
 8006122:	9849      	ldr	r0, [sp, #292]	@ 0x124
 8006124:	f8cd 8000 	str.w	r8, [sp]
 8006128:	2141      	movs	r1, #65	@ 0x41
 800612a:	f7fc fe43 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800612e:	9849      	ldr	r0, [sp, #292]	@ 0x124
 8006130:	4629      	mov	r1, r5
 8006132:	f011 fe78 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006136:	9949      	ldr	r1, [sp, #292]	@ 0x124
 8006138:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5
 800613c:	4630      	mov	r0, r6
 800613e:	f00e ffdd 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_2.setPosition(199, 61, 32, 37);
 8006142:	f04f 0825 	mov.w	r8, #37	@ 0x25
    x2dame_2.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8006146:	984a      	ldr	r0, [sp, #296]	@ 0x128
 8006148:	f04f 0958 	mov.w	r9, #88	@ 0x58
 800614c:	4651      	mov	r1, sl
 800614e:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8006152:	f012 fd49 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_2.setPosition(199, 61, 32, 37);
 8006156:	2320      	movs	r3, #32
 8006158:	223d      	movs	r2, #61	@ 0x3d
 800615a:	984a      	ldr	r0, [sp, #296]	@ 0x128
 800615c:	f8cd 8000 	str.w	r8, [sp]
 8006160:	21c7      	movs	r1, #199	@ 0xc7
 8006162:	f7fc fe27 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006166:	984a      	ldr	r0, [sp, #296]	@ 0x128
 8006168:	4629      	mov	r1, r5
 800616a:	f011 fe5c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800616e:	994a      	ldr	r1, [sp, #296]	@ 0x128
 8006170:	f884 5821 	strb.w	r5, [r4, #2081]	@ 0x821
 8006174:	4630      	mov	r0, r6
 8006176:	f00e ffc1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_1.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 800617a:	984b      	ldr	r0, [sp, #300]	@ 0x12c
 800617c:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8006180:	4651      	mov	r1, sl
 8006182:	f012 fd31 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_1.setPosition(7, 61, 32, 37);
 8006186:	2320      	movs	r3, #32
 8006188:	223d      	movs	r2, #61	@ 0x3d
 800618a:	984b      	ldr	r0, [sp, #300]	@ 0x12c
 800618c:	f8cd 8000 	str.w	r8, [sp]
 8006190:	2107      	movs	r1, #7
 8006192:	f7fc fe0f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006196:	984b      	ldr	r0, [sp, #300]	@ 0x12c
 8006198:	4629      	mov	r1, r5
 800619a:	f011 fe44 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    healthplus_1.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 800619e:	f50d 7bb0 	add.w	fp, sp, #352	@ 0x160
 80061a2:	994b      	ldr	r1, [sp, #300]	@ 0x12c
 80061a4:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
 80061a8:	4630      	mov	r0, r6
 80061aa:	f00e ffa7 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061ae:	f04f 0a2c 	mov.w	sl, #44	@ 0x2c
 80061b2:	984c      	ldr	r0, [sp, #304]	@ 0x130
 80061b4:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
 80061b8:	4659      	mov	r1, fp
 80061ba:	f012 fd15 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_1.setPosition(9, 61, 32, 37);
 80061be:	2320      	movs	r3, #32
 80061c0:	223d      	movs	r2, #61	@ 0x3d
 80061c2:	984c      	ldr	r0, [sp, #304]	@ 0x130
 80061c4:	f8cd 8000 	str.w	r8, [sp]
 80061c8:	2109      	movs	r1, #9
 80061ca:	f7fc fdf3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80061ce:	984c      	ldr	r0, [sp, #304]	@ 0x130
 80061d0:	4629      	mov	r1, r5
 80061d2:	f011 fe28 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80061d6:	994c      	ldr	r1, [sp, #304]	@ 0x130
 80061d8:	f884 5879 	strb.w	r5, [r4, #2169]	@ 0x879
 80061dc:	4630      	mov	r0, r6
 80061de:	f00e ff8d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061e2:	f04f 091e 	mov.w	r9, #30
    chakragain_1.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 80061e6:	984d      	ldr	r0, [sp, #308]	@ 0x134
 80061e8:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 80061ec:	4659      	mov	r1, fp
 80061ee:	f012 fcfb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_1.setPosition(9, 61, 32, 37);
 80061f2:	2320      	movs	r3, #32
 80061f4:	223d      	movs	r2, #61	@ 0x3d
 80061f6:	984d      	ldr	r0, [sp, #308]	@ 0x134
 80061f8:	f8cd 8000 	str.w	r8, [sp]
 80061fc:	2109      	movs	r1, #9
 80061fe:	f7fc fdd9 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006202:	984d      	ldr	r0, [sp, #308]	@ 0x134
 8006204:	4629      	mov	r1, r5
 8006206:	f011 fe0e 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800620a:	994d      	ldr	r1, [sp, #308]	@ 0x134
 800620c:	f884 58a5 	strb.w	r5, [r4, #2213]	@ 0x8a5
 8006210:	4630      	mov	r0, r6
 8006212:	f00e ff73 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006216:	f04f 0b4b 	mov.w	fp, #75	@ 0x4b
    sheild_1.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 800621a:	984e      	ldr	r0, [sp, #312]	@ 0x138
 800621c:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
 8006220:	a958      	add	r1, sp, #352	@ 0x160
 8006222:	f012 fce1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_1.setPosition(8, 59, 32, 37);
 8006226:	2320      	movs	r3, #32
 8006228:	223b      	movs	r2, #59	@ 0x3b
 800622a:	984e      	ldr	r0, [sp, #312]	@ 0x138
 800622c:	f8cd 8000 	str.w	r8, [sp]
 8006230:	2108      	movs	r1, #8
 8006232:	f7fc fdbf 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006236:	984e      	ldr	r0, [sp, #312]	@ 0x138
 8006238:	4629      	mov	r1, r5
 800623a:	f011 fdf4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800623e:	994e      	ldr	r1, [sp, #312]	@ 0x138
 8006240:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 8006244:	4630      	mov	r0, r6
 8006246:	f00e ff59 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800624a:	f8ad b160 	strh.w	fp, [sp, #352]	@ 0x160
    sheild_2.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 800624e:	f50d 7bb0 	add.w	fp, sp, #352	@ 0x160
 8006252:	984f      	ldr	r0, [sp, #316]	@ 0x13c
 8006254:	4659      	mov	r1, fp
 8006256:	f012 fcc7 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_2.setPosition(199, 58, 32, 37);
 800625a:	2320      	movs	r3, #32
 800625c:	223a      	movs	r2, #58	@ 0x3a
 800625e:	984f      	ldr	r0, [sp, #316]	@ 0x13c
 8006260:	f8cd 8000 	str.w	r8, [sp]
 8006264:	21c7      	movs	r1, #199	@ 0xc7
 8006266:	f7fc fda5 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800626a:	984f      	ldr	r0, [sp, #316]	@ 0x13c
 800626c:	4629      	mov	r1, r5
 800626e:	f011 fdda 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006272:	994f      	ldr	r1, [sp, #316]	@ 0x13c
 8006274:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 8006278:	4630      	mov	r0, r6
 800627a:	f00e ff3f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakragain_2.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 800627e:	9850      	ldr	r0, [sp, #320]	@ 0x140
 8006280:	f8ad 9160 	strh.w	r9, [sp, #352]	@ 0x160
 8006284:	4659      	mov	r1, fp
 8006286:	f012 fcaf 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_2.setPosition(199, 61, 32, 37);
 800628a:	2320      	movs	r3, #32
 800628c:	223d      	movs	r2, #61	@ 0x3d
 800628e:	9850      	ldr	r0, [sp, #320]	@ 0x140
 8006290:	f8cd 8000 	str.w	r8, [sp]
 8006294:	21c7      	movs	r1, #199	@ 0xc7
 8006296:	f7fc fd8d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800629a:	9850      	ldr	r0, [sp, #320]	@ 0x140
 800629c:	4629      	mov	r1, r5
 800629e:	f011 fdc2 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80062a2:	9950      	ldr	r1, [sp, #320]	@ 0x140
 80062a4:	f884 5929 	strb.w	r5, [r4, #2345]	@ 0x929
 80062a8:	4630      	mov	r0, r6
 80062aa:	f00e ff27 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    healthplus_2.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 80062ae:	9851      	ldr	r0, [sp, #324]	@ 0x144
 80062b0:	f8ad a160 	strh.w	sl, [sp, #352]	@ 0x160
 80062b4:	4659      	mov	r1, fp
 80062b6:	f012 fc97 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_2.setPosition(199, 61, 32, 37);
 80062ba:	2320      	movs	r3, #32
 80062bc:	223d      	movs	r2, #61	@ 0x3d
 80062be:	9851      	ldr	r0, [sp, #324]	@ 0x144
 80062c0:	f8cd 8000 	str.w	r8, [sp]
 80062c4:	21c7      	movs	r1, #199	@ 0xc7
 80062c6:	f7fc fd75 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80062ca:	9851      	ldr	r0, [sp, #324]	@ 0x144
 80062cc:	f8df a4f4 	ldr.w	sl, [pc, #1268]	@ 80067c4 <_ZN18GameScreenViewBaseC1Ev+0x1484>
 80062d0:	4629      	mov	r1, r5
 80062d2:	f011 fda8 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80062d6:	9951      	ldr	r1, [sp, #324]	@ 0x144
 80062d8:	f884 5955 	strb.w	r5, [r4, #2389]	@ 0x955
 80062dc:	4630      	mov	r0, r6
        boundingArea = calculateBoundingArea();
 80062de:	f50d 78a8 	add.w	r8, sp, #336	@ 0x150
        color = newColor;
 80062e2:	f04f 4b7f 	mov.w	fp, #4278190080	@ 0xff000000
 80062e6:	f00e ff09 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_0.setXY(64, 113);
 80062ea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80062ec:	2271      	movs	r2, #113	@ 0x71
 80062ee:	2140      	movs	r1, #64	@ 0x40
 80062f0:	f7fc fd53 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80062f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        color = newColor;
 80062f6:	f8c4 b98c 	str.w	fp, [r4, #2444]	@ 0x98c
        boundingArea = calculateBoundingArea();
 80062fa:	4640      	mov	r0, r8
        linespace = space;
 80062fc:	f8a4 5990 	strh.w	r5, [r4, #2448]	@ 0x990
        boundingArea = calculateBoundingArea();
 8006300:	f012 f8da 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006304:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006308:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800630a:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800630e:	333c      	adds	r3, #60	@ 0x3c
 8006310:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006314:	f04f 031f 	mov.w	r3, #31
    minus_0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q361));
 8006318:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800631a:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800631e:	a958      	add	r1, sp, #352	@ 0x160
 8006320:	f012 fb72 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006324:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006326:	f884 5981 	strb.w	r5, [r4, #2433]	@ 0x981
 800632a:	4630      	mov	r0, r6
 800632c:	f00e fee6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_0_1.setXY(161, 107);
 8006330:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006332:	226b      	movs	r2, #107	@ 0x6b
 8006334:	21a1      	movs	r1, #161	@ 0xa1
 8006336:	f7fc fd30 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 800633a:	990c      	ldr	r1, [sp, #48]	@ 0x30
        color = newColor;
 800633c:	f8c4 b9d4 	str.w	fp, [r4, #2516]	@ 0x9d4
        boundingArea = calculateBoundingArea();
 8006340:	4640      	mov	r0, r8
        linespace = space;
 8006342:	f8a4 59d8 	strh.w	r5, [r4, #2520]	@ 0x9d8
        boundingArea = calculateBoundingArea();
 8006346:	f012 f8b7 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800634a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800634e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006350:	f8ad 9164 	strh.w	r9, [sp, #356]	@ 0x164
 8006354:	333c      	adds	r3, #60	@ 0x3c
    minus_0_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F1PO));
 8006356:	f50d 79b0 	add.w	r9, sp, #352	@ 0x160
 800635a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800635e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006360:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006364:	4649      	mov	r1, r9
 8006366:	f012 fb4f 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800636a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800636c:	f884 59c9 	strb.w	r5, [r4, #2505]	@ 0x9c9
 8006370:	4630      	mov	r0, r6
 8006372:	f00e fec3 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_1.setXY(82, 140);
 8006376:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8006378:	228c      	movs	r2, #140	@ 0x8c
 800637a:	2152      	movs	r1, #82	@ 0x52
 800637c:	f7fc fd0d 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006380:	990d      	ldr	r1, [sp, #52]	@ 0x34
        color = newColor;
 8006382:	f8c4 ba1c 	str.w	fp, [r4, #2588]	@ 0xa1c
        boundingArea = calculateBoundingArea();
 8006386:	4640      	mov	r0, r8
        linespace = space;
 8006388:	f8a4 5a20 	strh.w	r5, [r4, #2592]	@ 0xa20
        boundingArea = calculateBoundingArea();
 800638c:	f012 f894 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006390:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006394:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006396:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800639a:	333c      	adds	r3, #60	@ 0x3c
 800639c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80063a0:	2312      	movs	r3, #18
    minus_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JUKL));
 80063a2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80063a4:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80063a8:	4649      	mov	r1, r9
 80063aa:	f012 fb2d 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063ae:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80063b0:	f884 5a11 	strb.w	r5, [r4, #2577]	@ 0xa11
 80063b4:	4630      	mov	r0, r6
 80063b6:	f00e fea1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_1_1.setXY(181, 87);
 80063ba:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80063bc:	2257      	movs	r2, #87	@ 0x57
 80063be:	21b5      	movs	r1, #181	@ 0xb5
 80063c0:	f7fc fceb 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80063c4:	990e      	ldr	r1, [sp, #56]	@ 0x38
        color = newColor;
 80063c6:	f8c4 ba64 	str.w	fp, [r4, #2660]	@ 0xa64
        boundingArea = calculateBoundingArea();
 80063ca:	4640      	mov	r0, r8
        linespace = space;
 80063cc:	f8a4 5a68 	strh.w	r5, [r4, #2664]	@ 0xa68
        boundingArea = calculateBoundingArea();
 80063d0:	f012 f872 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80063d4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80063d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80063da:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80063de:	333c      	adds	r3, #60	@ 0x3c
 80063e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80063e4:	2311      	movs	r3, #17
    minus_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_539L));
 80063e6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80063e8:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80063ec:	4649      	mov	r1, r9
 80063ee:	f012 fb0b 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063f2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80063f4:	f884 5a59 	strb.w	r5, [r4, #2649]	@ 0xa59
 80063f8:	4630      	mov	r0, r6
 80063fa:	f00e fe7f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_3.setXY(65, 107);
 80063fe:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8006400:	226b      	movs	r2, #107	@ 0x6b
 8006402:	2141      	movs	r1, #65	@ 0x41
 8006404:	f7fc fcc9 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006408:	990f      	ldr	r1, [sp, #60]	@ 0x3c
        color = newColor;
 800640a:	f8c4 baac 	str.w	fp, [r4, #2732]	@ 0xaac
        boundingArea = calculateBoundingArea();
 800640e:	4640      	mov	r0, r8
        linespace = space;
 8006410:	f8a4 5ab0 	strh.w	r5, [r4, #2736]	@ 0xab0
        boundingArea = calculateBoundingArea();
 8006414:	f012 f850 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006418:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800641c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800641e:	f8ad 7164 	strh.w	r7, [sp, #356]	@ 0x164
 8006422:	333c      	adds	r3, #60	@ 0x3c
 8006424:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ABJK));
 8006428:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800642a:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800642e:	4649      	mov	r1, r9
 8006430:	f012 faea 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006434:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8006436:	f884 5aa1 	strb.w	r5, [r4, #2721]	@ 0xaa1
 800643a:	4630      	mov	r0, r6
 800643c:	f00e fe5e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_3_1.setXY(190, 87);
 8006440:	9810      	ldr	r0, [sp, #64]	@ 0x40
        color = newColor;
 8006442:	4fde      	ldr	r7, [pc, #888]	@ (80067bc <_ZN18GameScreenViewBaseC1Ev+0x147c>)
 8006444:	2257      	movs	r2, #87	@ 0x57
 8006446:	21be      	movs	r1, #190	@ 0xbe
 8006448:	f7fc fca7 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800644c:	9910      	ldr	r1, [sp, #64]	@ 0x40
        color = newColor;
 800644e:	f8c4 baf4 	str.w	fp, [r4, #2804]	@ 0xaf4
        boundingArea = calculateBoundingArea();
 8006452:	4640      	mov	r0, r8
        linespace = space;
 8006454:	f8a4 5af8 	strh.w	r5, [r4, #2808]	@ 0xaf8
        boundingArea = calculateBoundingArea();
 8006458:	f012 f82e 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800645c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006460:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006462:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006466:	333c      	adds	r3, #60	@ 0x3c
 8006468:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800646c:	f04f 021c 	mov.w	r2, #28
    minus_3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7L2W));
 8006470:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8006472:	f8ad 2164 	strh.w	r2, [sp, #356]	@ 0x164
 8006476:	4649      	mov	r1, r9
 8006478:	f012 fac6 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800647c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800647e:	f884 5ae9 	strb.w	r5, [r4, #2793]	@ 0xae9
 8006482:	4630      	mov	r0, r6
 8006484:	f00e fe3a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_4.setXY(65, 107);
 8006488:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800648a:	226b      	movs	r2, #107	@ 0x6b
 800648c:	2141      	movs	r1, #65	@ 0x41
 800648e:	f7fc fc84 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006492:	9911      	ldr	r1, [sp, #68]	@ 0x44
        color = newColor;
 8006494:	f8c4 bb3c 	str.w	fp, [r4, #2876]	@ 0xb3c
        boundingArea = calculateBoundingArea();
 8006498:	4640      	mov	r0, r8
        linespace = space;
 800649a:	f8a4 5b40 	strh.w	r5, [r4, #2880]	@ 0xb40
        boundingArea = calculateBoundingArea();
 800649e:	f012 f80b 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064a2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80064a6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80064a8:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80064ac:	333c      	adds	r3, #60	@ 0x3c
 80064ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064b2:	f04f 001b 	mov.w	r0, #27
 80064b6:	f8ad 0164 	strh.w	r0, [sp, #356]	@ 0x164
    minus_4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D4S));
 80064ba:	4649      	mov	r1, r9
 80064bc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80064be:	f012 faa3 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064c2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80064c4:	f884 5b31 	strb.w	r5, [r4, #2865]	@ 0xb31
 80064c8:	4630      	mov	r0, r6
 80064ca:	f00e fe17 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_4_1.setXY(65, 107);
 80064ce:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80064d0:	226b      	movs	r2, #107	@ 0x6b
 80064d2:	2141      	movs	r1, #65	@ 0x41
 80064d4:	f7fc fc61 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80064d8:	9912      	ldr	r1, [sp, #72]	@ 0x48
        color = newColor;
 80064da:	f8c4 bb84 	str.w	fp, [r4, #2948]	@ 0xb84
        boundingArea = calculateBoundingArea();
 80064de:	4640      	mov	r0, r8
        linespace = space;
 80064e0:	f8a4 5b88 	strh.w	r5, [r4, #2952]	@ 0xb88
        boundingArea = calculateBoundingArea();
 80064e4:	f011 ffe8 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064e8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80064ec:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80064ee:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80064f2:	333c      	adds	r3, #60	@ 0x3c
 80064f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064f8:	f04f 011a 	mov.w	r1, #26
    minus_4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PNWU));
 80064fc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80064fe:	f8ad 1164 	strh.w	r1, [sp, #356]	@ 0x164
 8006502:	4649      	mov	r1, r9
 8006504:	f012 fa80 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006508:	9912      	ldr	r1, [sp, #72]	@ 0x48
 800650a:	f884 5b79 	strb.w	r5, [r4, #2937]	@ 0xb79
 800650e:	4630      	mov	r0, r6
 8006510:	f00e fdf4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_5.setXY(56, 87);
 8006514:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8006516:	2257      	movs	r2, #87	@ 0x57
 8006518:	2138      	movs	r1, #56	@ 0x38
 800651a:	f7fc fc3e 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 800651e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
        color = newColor;
 8006520:	f8c4 bbcc 	str.w	fp, [r4, #3020]	@ 0xbcc
        boundingArea = calculateBoundingArea();
 8006524:	4640      	mov	r0, r8
        linespace = space;
 8006526:	f8a4 5bd0 	strh.w	r5, [r4, #3024]	@ 0xbd0
        boundingArea = calculateBoundingArea();
 800652a:	f011 ffc5 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800652e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006532:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006534:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006538:	333c      	adds	r3, #60	@ 0x3c
 800653a:	f04f 0c19 	mov.w	ip, #25
 800653e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V88D));
 8006542:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8006544:	f8ad c164 	strh.w	ip, [sp, #356]	@ 0x164
 8006548:	4649      	mov	r1, r9
 800654a:	f012 fa5d 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800654e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006550:	f884 5bc1 	strb.w	r5, [r4, #3009]	@ 0xbc1
 8006554:	4630      	mov	r0, r6
 8006556:	f00e fdd1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_5_1.setXY(149, 150);
 800655a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800655c:	2296      	movs	r2, #150	@ 0x96
 800655e:	2195      	movs	r1, #149	@ 0x95
 8006560:	f7fc fc1b 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006564:	9914      	ldr	r1, [sp, #80]	@ 0x50
        color = newColor;
 8006566:	f8c4 bc14 	str.w	fp, [r4, #3092]	@ 0xc14
        boundingArea = calculateBoundingArea();
 800656a:	4640      	mov	r0, r8
        linespace = space;
 800656c:	f8a4 5c18 	strh.w	r5, [r4, #3096]	@ 0xc18
        boundingArea = calculateBoundingArea();
 8006570:	f011 ffa2 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006574:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006578:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800657a:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800657e:	333c      	adds	r3, #60	@ 0x3c
 8006580:	f04f 0e18 	mov.w	lr, #24
 8006584:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NE6X));
 8006588:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800658a:	f8ad e164 	strh.w	lr, [sp, #356]	@ 0x164
 800658e:	4649      	mov	r1, r9
 8006590:	f012 fa3a 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006594:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8006596:	f884 5c09 	strb.w	r5, [r4, #3081]	@ 0xc09
 800659a:	4630      	mov	r0, r6
 800659c:	f00e fdae 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_6.setXY(74, 150);
 80065a0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80065a2:	2296      	movs	r2, #150	@ 0x96
 80065a4:	214a      	movs	r1, #74	@ 0x4a
 80065a6:	f7fc fbf8 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80065aa:	9915      	ldr	r1, [sp, #84]	@ 0x54
        color = newColor;
 80065ac:	f8c4 bc5c 	str.w	fp, [r4, #3164]	@ 0xc5c
        boundingArea = calculateBoundingArea();
 80065b0:	4640      	mov	r0, r8
        linespace = space;
 80065b2:	f8a4 5c60 	strh.w	r5, [r4, #3168]	@ 0xc60
        boundingArea = calculateBoundingArea();
 80065b6:	f011 ff7f 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065ba:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065be:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80065c0:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80065c4:	333c      	adds	r3, #60	@ 0x3c
 80065c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065ca:	2317      	movs	r3, #23
    minus_6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WFFX));
 80065cc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80065ce:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80065d2:	4649      	mov	r1, r9
 80065d4:	f012 fa18 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065d8:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80065da:	f884 5c51 	strb.w	r5, [r4, #3153]	@ 0xc51
 80065de:	4630      	mov	r0, r6
 80065e0:	f00e fd8c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_6_1.setXY(190, 87);
 80065e4:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80065e6:	2257      	movs	r2, #87	@ 0x57
 80065e8:	21be      	movs	r1, #190	@ 0xbe
 80065ea:	f7fc fbd6 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80065ee:	9916      	ldr	r1, [sp, #88]	@ 0x58
        color = newColor;
 80065f0:	f8c4 bca4 	str.w	fp, [r4, #3236]	@ 0xca4
        boundingArea = calculateBoundingArea();
 80065f4:	4640      	mov	r0, r8
        linespace = space;
 80065f6:	f8a4 5ca8 	strh.w	r5, [r4, #3240]	@ 0xca8
        boundingArea = calculateBoundingArea();
 80065fa:	f011 ff5d 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065fe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006602:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8006604:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006608:	333c      	adds	r3, #60	@ 0x3c
 800660a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800660e:	2316      	movs	r3, #22
    minus_6_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1O0B));
 8006610:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8006612:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006616:	4649      	mov	r1, r9
 8006618:	f012 f9f6 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800661c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800661e:	f884 5c99 	strb.w	r5, [r4, #3225]	@ 0xc99
 8006622:	4630      	mov	r0, r6
 8006624:	f00e fd6a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_7.setXY(33, 87);
 8006628:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800662a:	2257      	movs	r2, #87	@ 0x57
 800662c:	2121      	movs	r1, #33	@ 0x21
 800662e:	f7fc fbb4 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006632:	9917      	ldr	r1, [sp, #92]	@ 0x5c
        color = newColor;
 8006634:	f8c4 bcec 	str.w	fp, [r4, #3308]	@ 0xcec
        boundingArea = calculateBoundingArea();
 8006638:	4640      	mov	r0, r8
        linespace = space;
 800663a:	f8a4 5cf0 	strh.w	r5, [r4, #3312]	@ 0xcf0
        boundingArea = calculateBoundingArea();
 800663e:	f011 ff3b 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006642:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006646:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8006648:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800664c:	333c      	adds	r3, #60	@ 0x3c
 800664e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006652:	2315      	movs	r3, #21
    minus_7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_56L9));
 8006654:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8006656:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800665a:	4649      	mov	r1, r9
 800665c:	f012 f9d4 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006660:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006662:	f884 5ce1 	strb.w	r5, [r4, #3297]	@ 0xce1
 8006666:	4630      	mov	r0, r6
 8006668:	f00e fd48 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_7_1.setXY(143, 160);
 800666c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800666e:	22a0      	movs	r2, #160	@ 0xa0
 8006670:	218f      	movs	r1, #143	@ 0x8f
 8006672:	f7fc fb92 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006676:	9918      	ldr	r1, [sp, #96]	@ 0x60
        color = newColor;
 8006678:	f8c4 bd34 	str.w	fp, [r4, #3380]	@ 0xd34
        boundingArea = calculateBoundingArea();
 800667c:	4640      	mov	r0, r8
        linespace = space;
 800667e:	f8a4 5d38 	strh.w	r5, [r4, #3384]	@ 0xd38
        boundingArea = calculateBoundingArea();
 8006682:	f011 ff19 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006686:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800668a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800668c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006690:	333c      	adds	r3, #60	@ 0x3c
 8006692:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006696:	2314      	movs	r3, #20
    minus_7_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TA5C));
 8006698:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800669a:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800669e:	4649      	mov	r1, r9
 80066a0:	f012 f9b2 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066a4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80066a6:	f884 5d29 	strb.w	r5, [r4, #3369]	@ 0xd29
 80066aa:	4630      	mov	r0, r6
 80066ac:	f00e fd26 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_8.setXY(65, 97);
 80066b0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80066b2:	2261      	movs	r2, #97	@ 0x61
 80066b4:	2141      	movs	r1, #65	@ 0x41
 80066b6:	f7fc fb70 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80066ba:	9919      	ldr	r1, [sp, #100]	@ 0x64
        color = newColor;
 80066bc:	f8c4 bd7c 	str.w	fp, [r4, #3452]	@ 0xd7c
        boundingArea = calculateBoundingArea();
 80066c0:	4640      	mov	r0, r8
        linespace = space;
 80066c2:	f8a4 5d80 	strh.w	r5, [r4, #3456]	@ 0xd80
        boundingArea = calculateBoundingArea();
 80066c6:	f011 fef7 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066ca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80066ce:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80066d0:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80066d4:	333c      	adds	r3, #60	@ 0x3c
 80066d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066da:	2313      	movs	r3, #19
    minus_8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QFOP));
 80066dc:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80066de:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80066e2:	4649      	mov	r1, r9
 80066e4:	f012 f990 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066e8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80066ea:	f884 5d71 	strb.w	r5, [r4, #3441]	@ 0xd71
 80066ee:	4630      	mov	r0, r6
 80066f0:	f00e fd04 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_8_1.setXY(158, 87);
 80066f4:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80066f6:	2257      	movs	r2, #87	@ 0x57
 80066f8:	219e      	movs	r1, #158	@ 0x9e
 80066fa:	f7fc fb4e 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80066fe:	991a      	ldr	r1, [sp, #104]	@ 0x68
        color = newColor;
 8006700:	f8c4 bdc4 	str.w	fp, [r4, #3524]	@ 0xdc4
        boundingArea = calculateBoundingArea();
 8006704:	4640      	mov	r0, r8
        linespace = space;
 8006706:	f8a4 5dc8 	strh.w	r5, [r4, #3528]	@ 0xdc8
        boundingArea = calculateBoundingArea();
 800670a:	f011 fed5 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800670e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006712:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8006714:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006718:	333c      	adds	r3, #60	@ 0x3c
 800671a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800671e:	2310      	movs	r3, #16
    minus_8_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NC8X));
 8006720:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8006722:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006726:	4649      	mov	r1, r9
 8006728:	f012 f96e 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800672c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800672e:	f884 5db9 	strb.w	r5, [r4, #3513]	@ 0xdb9
 8006732:	4630      	mov	r0, r6
 8006734:	f00e fce2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_10.setXY(65, 97);
 8006738:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800673a:	2261      	movs	r2, #97	@ 0x61
 800673c:	2141      	movs	r1, #65	@ 0x41
 800673e:	f7fc fb2c 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006742:	991b      	ldr	r1, [sp, #108]	@ 0x6c
        color = newColor;
 8006744:	f8c4 7e0c 	str.w	r7, [r4, #3596]	@ 0xe0c
        boundingArea = calculateBoundingArea();
 8006748:	4640      	mov	r0, r8
        linespace = space;
 800674a:	f8a4 5e10 	strh.w	r5, [r4, #3600]	@ 0xe10
        boundingArea = calculateBoundingArea();
 800674e:	f011 feb3 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006752:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006756:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8006758:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800675c:	333c      	adds	r3, #60	@ 0x3c
 800675e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006762:	230f      	movs	r3, #15
    minus_10.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G9CR));
 8006764:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8006766:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800676a:	4649      	mov	r1, r9
 800676c:	f012 f94c 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006770:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8006772:	f884 5e01 	strb.w	r5, [r4, #3585]	@ 0xe01
 8006776:	4630      	mov	r0, r6
 8006778:	f00e fcc0 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_10_1.setXY(164, 87);
 800677c:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800677e:	2257      	movs	r2, #87	@ 0x57
 8006780:	21a4      	movs	r1, #164	@ 0xa4
 8006782:	f7fc fb0a 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006786:	991c      	ldr	r1, [sp, #112]	@ 0x70
        color = newColor;
 8006788:	f8c4 7e54 	str.w	r7, [r4, #3668]	@ 0xe54
        boundingArea = calculateBoundingArea();
 800678c:	4640      	mov	r0, r8
        linespace = space;
 800678e:	f8a4 5e58 	strh.w	r5, [r4, #3672]	@ 0xe58
        boundingArea = calculateBoundingArea();
 8006792:	f011 fe91 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006796:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800679a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 800679c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80067a0:	333c      	adds	r3, #60	@ 0x3c
 80067a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067a6:	f04f 030e 	mov.w	r3, #14
    minus_10_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G9X8));
 80067aa:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80067ac:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80067b0:	4649      	mov	r1, r9
 80067b2:	f012 f929 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067b6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80067b8:	e006      	b.n	80067c8 <_ZN18GameScreenViewBaseC1Ev+0x1488>
 80067ba:	bf00      	nop
 80067bc:	ffdb2323 	.word	0xffdb2323
 80067c0:	ff0066ff 	.word	0xff0066ff
 80067c4:	0803238c 	.word	0x0803238c
 80067c8:	f884 5e49 	strb.w	r5, [r4, #3657]	@ 0xe49
 80067cc:	4630      	mov	r0, r6
 80067ce:	f00e fc95 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_12.setXY(65, 97);
 80067d2:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80067d4:	2261      	movs	r2, #97	@ 0x61
 80067d6:	2141      	movs	r1, #65	@ 0x41
 80067d8:	f7fc fadf 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80067dc:	991d      	ldr	r1, [sp, #116]	@ 0x74
        color = newColor;
 80067de:	f8c4 7e9c 	str.w	r7, [r4, #3740]	@ 0xe9c
        boundingArea = calculateBoundingArea();
 80067e2:	4640      	mov	r0, r8
        linespace = space;
 80067e4:	f8a4 5ea0 	strh.w	r5, [r4, #3744]	@ 0xea0
        boundingArea = calculateBoundingArea();
 80067e8:	f011 fe66 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067ec:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067f0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80067f2:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80067f6:	333c      	adds	r3, #60	@ 0x3c
 80067f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067fc:	f04f 090d 	mov.w	r9, #13
    minus_12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FVK3));
 8006800:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8006802:	f8ad 9164 	strh.w	r9, [sp, #356]	@ 0x164
 8006806:	a958      	add	r1, sp, #352	@ 0x160
 8006808:	f012 f8fe 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800680c:	991d      	ldr	r1, [sp, #116]	@ 0x74
 800680e:	f884 5e91 	strb.w	r5, [r4, #3729]	@ 0xe91
 8006812:	4630      	mov	r0, r6
 8006814:	f00e fc72 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_12_1.setXY(170, 87);
 8006818:	981e      	ldr	r0, [sp, #120]	@ 0x78
 800681a:	2257      	movs	r2, #87	@ 0x57
 800681c:	21aa      	movs	r1, #170	@ 0xaa
 800681e:	f7fc fabc 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006822:	991e      	ldr	r1, [sp, #120]	@ 0x78
        color = newColor;
 8006824:	f8c4 7ee4 	str.w	r7, [r4, #3812]	@ 0xee4
        boundingArea = calculateBoundingArea();
 8006828:	4640      	mov	r0, r8
        linespace = space;
 800682a:	f8a4 5ee8 	strh.w	r5, [r4, #3816]	@ 0xee8
        boundingArea = calculateBoundingArea();
 800682e:	f011 fe43 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006832:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006836:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8006838:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 800683c:	333c      	adds	r3, #60	@ 0x3c
 800683e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006842:	230c      	movs	r3, #12
    minus_12_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VMY7));
 8006844:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8006846:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800684a:	a958      	add	r1, sp, #352	@ 0x160
 800684c:	f012 f8dc 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006850:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8006852:	f884 5ed9 	strb.w	r5, [r4, #3801]	@ 0xed9
 8006856:	4630      	mov	r0, r6
 8006858:	f00e fc50 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_15.setXY(59, 129);
 800685c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 800685e:	2281      	movs	r2, #129	@ 0x81
 8006860:	213b      	movs	r1, #59	@ 0x3b
 8006862:	f7fc fa9a 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006866:	991f      	ldr	r1, [sp, #124]	@ 0x7c
        color = newColor;
 8006868:	f8c4 7f2c 	str.w	r7, [r4, #3884]	@ 0xf2c
        boundingArea = calculateBoundingArea();
 800686c:	4640      	mov	r0, r8
        linespace = space;
 800686e:	f8a4 5f30 	strh.w	r5, [r4, #3888]	@ 0xf30
        boundingArea = calculateBoundingArea();
 8006872:	f011 fe21 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006876:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800687a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 800687c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006880:	333c      	adds	r3, #60	@ 0x3c
 8006882:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006886:	230b      	movs	r3, #11
    minus_15.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJL7));
 8006888:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 800688a:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800688e:	a958      	add	r1, sp, #352	@ 0x160
 8006890:	f012 f8ba 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006894:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8006896:	f884 5f21 	strb.w	r5, [r4, #3873]	@ 0xf21
 800689a:	4630      	mov	r0, r6
 800689c:	f00e fc2e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_15_1.setXY(147, 140);
 80068a0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80068a2:	228c      	movs	r2, #140	@ 0x8c
 80068a4:	2193      	movs	r1, #147	@ 0x93
 80068a6:	f7fc fa78 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80068aa:	9920      	ldr	r1, [sp, #128]	@ 0x80
        color = newColor;
 80068ac:	f8c4 7f74 	str.w	r7, [r4, #3956]	@ 0xf74
        boundingArea = calculateBoundingArea();
 80068b0:	4640      	mov	r0, r8
        linespace = space;
 80068b2:	f8a4 5f78 	strh.w	r5, [r4, #3960]	@ 0xf78
        boundingArea = calculateBoundingArea();
 80068b6:	f011 fdff 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068ba:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80068be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80068c0:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80068c4:	333c      	adds	r3, #60	@ 0x3c
 80068c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80068ca:	230a      	movs	r3, #10
    minus_15_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X1OE));
 80068cc:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80068ce:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80068d2:	a958      	add	r1, sp, #352	@ 0x160
 80068d4:	f012 f898 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068d8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80068da:	f884 5f69 	strb.w	r5, [r4, #3945]	@ 0xf69
 80068de:	4630      	mov	r0, r6
 80068e0:	f00e fc0c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_17.setXY(13, 77);
 80068e4:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80068e6:	224d      	movs	r2, #77	@ 0x4d
 80068e8:	4649      	mov	r1, r9
 80068ea:	f7fc fa56 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80068ee:	9921      	ldr	r1, [sp, #132]	@ 0x84
        color = newColor;
 80068f0:	f8c4 7fbc 	str.w	r7, [r4, #4028]	@ 0xfbc
        boundingArea = calculateBoundingArea();
 80068f4:	4640      	mov	r0, r8
        linespace = space;
 80068f6:	f8a4 5fc0 	strh.w	r5, [r4, #4032]	@ 0xfc0
        boundingArea = calculateBoundingArea();
 80068fa:	f011 fddd 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068fe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006902:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8006904:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006908:	333c      	adds	r3, #60	@ 0x3c
 800690a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800690e:	2309      	movs	r3, #9
    minus_17.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BS6E));
 8006910:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8006912:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006916:	a958      	add	r1, sp, #352	@ 0x160
        color = newColor;
 8006918:	f504 5980 	add.w	r9, r4, #4096	@ 0x1000
 800691c:	f012 f874 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006920:	9921      	ldr	r1, [sp, #132]	@ 0x84
 8006922:	f884 5fb1 	strb.w	r5, [r4, #4017]	@ 0xfb1
 8006926:	4630      	mov	r0, r6
 8006928:	f00e fbe8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_17_1.setXY(199, 87);
 800692c:	9822      	ldr	r0, [sp, #136]	@ 0x88
 800692e:	2257      	movs	r2, #87	@ 0x57
 8006930:	21c7      	movs	r1, #199	@ 0xc7
 8006932:	f7fc fa32 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006936:	9922      	ldr	r1, [sp, #136]	@ 0x88
        color = newColor;
 8006938:	f8c9 7004 	str.w	r7, [r9, #4]
        boundingArea = calculateBoundingArea();
 800693c:	4640      	mov	r0, r8
        linespace = space;
 800693e:	f8a9 5008 	strh.w	r5, [r9, #8]
        boundingArea = calculateBoundingArea();
 8006942:	f011 fdb9 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006946:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800694a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800694c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006950:	333c      	adds	r3, #60	@ 0x3c
 8006952:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006956:	2308      	movs	r3, #8
    minus_17_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0R2K));
 8006958:	9822      	ldr	r0, [sp, #136]	@ 0x88
 800695a:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 800695e:	a958      	add	r1, sp, #352	@ 0x160
 8006960:	f012 f852 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006964:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8006966:	f884 5ff9 	strb.w	r5, [r4, #4089]	@ 0xff9
 800696a:	4630      	mov	r0, r6
 800696c:	f00e fbc6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_20.setXY(57, 96);
 8006970:	9803      	ldr	r0, [sp, #12]
 8006972:	2260      	movs	r2, #96	@ 0x60
 8006974:	2139      	movs	r1, #57	@ 0x39
 8006976:	f7fc fa10 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 800697a:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 800697c:	f8c9 704c 	str.w	r7, [r9, #76]	@ 0x4c
        boundingArea = calculateBoundingArea();
 8006980:	4640      	mov	r0, r8
        linespace = space;
 8006982:	f8a9 5050 	strh.w	r5, [r9, #80]	@ 0x50
        boundingArea = calculateBoundingArea();
 8006986:	f011 fd97 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800698a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800698e:	9b03      	ldr	r3, [sp, #12]
 8006990:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006994:	333c      	adds	r3, #60	@ 0x3c
 8006996:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800699a:	2307      	movs	r3, #7
    minus_20.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MAJN));
 800699c:	9803      	ldr	r0, [sp, #12]
 800699e:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80069a2:	a958      	add	r1, sp, #352	@ 0x160
 80069a4:	f012 f830 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069a8:	9903      	ldr	r1, [sp, #12]
 80069aa:	f889 5041 	strb.w	r5, [r9, #65]	@ 0x41
 80069ae:	4630      	mov	r0, r6
 80069b0:	f00e fba4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_20_1.setXY(147, 136);
 80069b4:	9804      	ldr	r0, [sp, #16]
 80069b6:	2288      	movs	r2, #136	@ 0x88
 80069b8:	2193      	movs	r1, #147	@ 0x93
 80069ba:	f7fc f9ee 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 80069be:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80069c0:	f8c9 7094 	str.w	r7, [r9, #148]	@ 0x94
        boundingArea = calculateBoundingArea();
 80069c4:	4640      	mov	r0, r8
        linespace = space;
 80069c6:	f8a9 5098 	strh.w	r5, [r9, #152]	@ 0x98
        boundingArea = calculateBoundingArea();
 80069ca:	f011 fd75 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069ce:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80069d2:	9b04      	ldr	r3, [sp, #16]
 80069d4:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 80069d8:	333c      	adds	r3, #60	@ 0x3c
 80069da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069de:	2306      	movs	r3, #6
    minus_20_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UGWJ));
 80069e0:	9804      	ldr	r0, [sp, #16]
 80069e2:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 80069e6:	a958      	add	r1, sp, #352	@ 0x160
 80069e8:	f012 f80e 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069ec:	9904      	ldr	r1, [sp, #16]
 80069ee:	f889 5089 	strb.w	r5, [r9, #137]	@ 0x89
 80069f2:	4630      	mov	r0, r6
 80069f4:	f00e fb82 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_25.setXY(69, 160);
 80069f8:	9805      	ldr	r0, [sp, #20]
        color = newColor;
 80069fa:	4f6a      	ldr	r7, [pc, #424]	@ (8006ba4 <_ZN18GameScreenViewBaseC1Ev+0x1864>)
 80069fc:	22a0      	movs	r2, #160	@ 0xa0
 80069fe:	2145      	movs	r1, #69	@ 0x45
 8006a00:	f7fc f9cb 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006a04:	4b68      	ldr	r3, [pc, #416]	@ (8006ba8 <_ZN18GameScreenViewBaseC1Ev+0x1868>)
        boundingArea = calculateBoundingArea();
 8006a06:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8006a08:	f8c9 30dc 	str.w	r3, [r9, #220]	@ 0xdc
        boundingArea = calculateBoundingArea();
 8006a0c:	4640      	mov	r0, r8
        linespace = space;
 8006a0e:	f8a9 50e0 	strh.w	r5, [r9, #224]	@ 0xe0
        boundingArea = calculateBoundingArea();
 8006a12:	f011 fd51 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a16:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006a1a:	9b05      	ldr	r3, [sp, #20]
 8006a1c:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006a20:	333c      	adds	r3, #60	@ 0x3c
 8006a22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a26:	f04f 0305 	mov.w	r3, #5
    minus_25.setTypedText(touchgfx::TypedText(T___SINGLEUSE_92IF));
 8006a2a:	9805      	ldr	r0, [sp, #20]
 8006a2c:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006a30:	a958      	add	r1, sp, #352	@ 0x160
 8006a32:	f011 ffe9 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a36:	9905      	ldr	r1, [sp, #20]
 8006a38:	f889 50d1 	strb.w	r5, [r9, #209]	@ 0xd1
 8006a3c:	4630      	mov	r0, r6
 8006a3e:	f00e fb5d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_25_1.setXY(137, 129);
 8006a42:	9806      	ldr	r0, [sp, #24]
 8006a44:	2281      	movs	r2, #129	@ 0x81
 8006a46:	2189      	movs	r1, #137	@ 0x89
 8006a48:	f7fc f9a7 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a4c:	4b57      	ldr	r3, [pc, #348]	@ (8006bac <_ZN18GameScreenViewBaseC1Ev+0x186c>)
        boundingArea = calculateBoundingArea();
 8006a4e:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8006a50:	f8c9 3124 	str.w	r3, [r9, #292]	@ 0x124
        boundingArea = calculateBoundingArea();
 8006a54:	4640      	mov	r0, r8
        linespace = space;
 8006a56:	f8a9 5128 	strh.w	r5, [r9, #296]	@ 0x128
        boundingArea = calculateBoundingArea();
 8006a5a:	f011 fd2d 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a5e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006a62:	9b06      	ldr	r3, [sp, #24]
 8006a64:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006a68:	333c      	adds	r3, #60	@ 0x3c
 8006a6a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a6e:	2304      	movs	r3, #4
    minus_25_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8UBD));
 8006a70:	9806      	ldr	r0, [sp, #24]
 8006a72:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006a76:	a958      	add	r1, sp, #352	@ 0x160
 8006a78:	f011 ffc6 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a7c:	9906      	ldr	r1, [sp, #24]
 8006a7e:	f889 5119 	strb.w	r5, [r9, #281]	@ 0x119
 8006a82:	4630      	mov	r0, r6
 8006a84:	f00e fb3a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_40.setXY(49, 79);
 8006a88:	9807      	ldr	r0, [sp, #28]
 8006a8a:	224f      	movs	r2, #79	@ 0x4f
 8006a8c:	2131      	movs	r1, #49	@ 0x31
 8006a8e:	f7fc f984 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006a92:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 8006a94:	f8c9 716c 	str.w	r7, [r9, #364]	@ 0x16c
        boundingArea = calculateBoundingArea();
 8006a98:	4640      	mov	r0, r8
        linespace = space;
 8006a9a:	f8a9 5170 	strh.w	r5, [r9, #368]	@ 0x170
        boundingArea = calculateBoundingArea();
 8006a9e:	f011 fd0b 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006aa2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006aa6:	9b07      	ldr	r3, [sp, #28]
 8006aa8:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006aac:	333c      	adds	r3, #60	@ 0x3c
 8006aae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ab2:	2303      	movs	r3, #3
    minus_40.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YRWP));
 8006ab4:	9807      	ldr	r0, [sp, #28]
 8006ab6:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006aba:	a958      	add	r1, sp, #352	@ 0x160
 8006abc:	f011 ffa4 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ac0:	9907      	ldr	r1, [sp, #28]
 8006ac2:	f889 5161 	strb.w	r5, [r9, #353]	@ 0x161
 8006ac6:	4630      	mov	r0, r6
 8006ac8:	f00e fb18 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_40_1.setXY(169, 72);
 8006acc:	9808      	ldr	r0, [sp, #32]
 8006ace:	2248      	movs	r2, #72	@ 0x48
 8006ad0:	21a9      	movs	r1, #169	@ 0xa9
 8006ad2:	f7fc f962 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006ad6:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 8006ad8:	f8c9 71b4 	str.w	r7, [r9, #436]	@ 0x1b4
        boundingArea = calculateBoundingArea();
 8006adc:	4640      	mov	r0, r8
        linespace = space;
 8006ade:	f8a9 51b8 	strh.w	r5, [r9, #440]	@ 0x1b8
        boundingArea = calculateBoundingArea();
 8006ae2:	f011 fce9 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ae6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006aea:	9b08      	ldr	r3, [sp, #32]
 8006aec:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006af0:	333c      	adds	r3, #60	@ 0x3c
 8006af2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006af6:	2302      	movs	r3, #2
    minus_40_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7X4W));
 8006af8:	9808      	ldr	r0, [sp, #32]
 8006afa:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006afe:	a958      	add	r1, sp, #352	@ 0x160
 8006b00:	f011 ff82 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b04:	9908      	ldr	r1, [sp, #32]
 8006b06:	f889 51a9 	strb.w	r5, [r9, #425]	@ 0x1a9
 8006b0a:	4630      	mov	r0, r6
 8006b0c:	f00e faf6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006b10:	f5a7 6780 	sub.w	r7, r7, #1024	@ 0x400
    minus_100.setXY(14, 125);
 8006b14:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b16:	227d      	movs	r2, #125	@ 0x7d
 8006b18:	210e      	movs	r1, #14
 8006b1a:	f7fc f93e 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006b1e:	9909      	ldr	r1, [sp, #36]	@ 0x24
        color = newColor;
 8006b20:	f8c9 71fc 	str.w	r7, [r9, #508]	@ 0x1fc
        boundingArea = calculateBoundingArea();
 8006b24:	4640      	mov	r0, r8
        linespace = space;
 8006b26:	f8a9 5200 	strh.w	r5, [r9, #512]	@ 0x200
        boundingArea = calculateBoundingArea();
 8006b2a:	f011 fcc5 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b2e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006b32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006b34:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006b38:	333c      	adds	r3, #60	@ 0x3c
 8006b3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b3e:	2301      	movs	r3, #1
    minus_100.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5C1E));
 8006b40:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b42:	f8ad 3164 	strh.w	r3, [sp, #356]	@ 0x164
 8006b46:	a958      	add	r1, sp, #352	@ 0x160
 8006b48:	f011 ff5e 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b4c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8006b4e:	f889 51f1 	strb.w	r5, [r9, #497]	@ 0x1f1
 8006b52:	4630      	mov	r0, r6
 8006b54:	f00e fad2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minus_100_1.setXY(150, 125);
 8006b58:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006b5a:	227d      	movs	r2, #125	@ 0x7d
 8006b5c:	2196      	movs	r1, #150	@ 0x96
 8006b5e:	f7fc f91c 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8006b62:	990a      	ldr	r1, [sp, #40]	@ 0x28
        color = newColor;
 8006b64:	f8c9 7244 	str.w	r7, [r9, #580]	@ 0x244
        boundingArea = calculateBoundingArea();
 8006b68:	4640      	mov	r0, r8
        linespace = space;
 8006b6a:	f8a9 5248 	strh.w	r5, [r9, #584]	@ 0x248
        boundingArea = calculateBoundingArea();
 8006b6e:	f011 fca3 	bl	80184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b72:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006b76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006b78:	f8cd a160 	str.w	sl, [sp, #352]	@ 0x160
 8006b7c:	333c      	adds	r3, #60	@ 0x3c
 8006b7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    minus_100_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M86E));
 8006b82:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006b84:	f8ad 5164 	strh.w	r5, [sp, #356]	@ 0x164
 8006b88:	a958      	add	r1, sp, #352	@ 0x160
 8006b8a:	f011 ff3d 	bl	8018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b8e:	4630      	mov	r0, r6
 8006b90:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006b92:	f889 5239 	strb.w	r5, [r9, #569]	@ 0x239
 8006b96:	f00e fab1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b9a:	4620      	mov	r0, r4
 8006b9c:	b05b      	add	sp, #364	@ 0x16c
 8006b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ba2:	bf00      	nop
 8006ba4:	fffff200 	.word	0xfffff200
 8006ba8:	ffeaf525 	.word	0xffeaf525
 8006bac:	ffd9c723 	.word	0xffd9c723

08006bb0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006bb0:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8006bb2:	4770      	bx	lr

08006bb4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8006bb4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8006bb6:	4770      	bx	lr

08006bb8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006bb8:	4770      	bx	lr

08006bba <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8006bba:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8006bbc:	880b      	ldrh	r3, [r1, #0]
{
 8006bbe:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8006bc0:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8006bc2:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8006bc4:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8006bc6:	b29b      	uxth	r3, r3
    return pixels + offset;
 8006bc8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8006bcc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8006bd0:	4418      	add	r0, r3
 8006bd2:	bd10      	pop	{r4, pc}

08006bd4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8006bd4:	b510      	push	{r4, lr}
 8006bd6:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8006bd8:	b1ba      	cbz	r2, 8006c0a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8006bda:	7b10      	ldrb	r0, [r2, #12]
 8006bdc:	b168      	cbz	r0, 8006bfa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8006bde:	7b53      	ldrb	r3, [r2, #13]
 8006be0:	7ad2      	ldrb	r2, [r2, #11]
 8006be2:	021b      	lsls	r3, r3, #8
 8006be4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006be8:	431a      	orrs	r2, r3
 8006bea:	6a23      	ldr	r3, [r4, #32]
 8006bec:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8006bf0:	881a      	ldrh	r2, [r3, #0]
 8006bf2:	428a      	cmp	r2, r1
 8006bf4:	d102      	bne.n	8006bfc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8006bf6:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8006bfa:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8006bfc:	d805      	bhi.n	8006c0a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006bfe:	3801      	subs	r0, #1
 8006c00:	b280      	uxth	r0, r0
 8006c02:	3304      	adds	r3, #4
 8006c04:	2800      	cmp	r0, #0
 8006c06:	d1f3      	bne.n	8006bf0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8006c08:	e7f7      	b.n	8006bfa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006c0a:	2000      	movs	r0, #0
 8006c0c:	e7f5      	b.n	8006bfa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006c0e <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006c0e:	b510      	push	{r4, lr}
 8006c10:	212c      	movs	r1, #44	@ 0x2c
 8006c12:	4604      	mov	r4, r0
 8006c14:	f026 fe87 	bl	802d926 <_ZdlPvj>
 8006c18:	4620      	mov	r0, r4
 8006c1a:	bd10      	pop	{r4, pc}

08006c1c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006c1c:	b530      	push	{r4, r5, lr}
 8006c1e:	b08b      	sub	sp, #44	@ 0x2c
 8006c20:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006c22:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8006c26:	9508      	str	r5, [sp, #32]
 8006c28:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8006c2c:	9507      	str	r5, [sp, #28]
 8006c2e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8006c32:	9506      	str	r5, [sp, #24]
 8006c34:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8006c38:	9505      	str	r5, [sp, #20]
 8006c3a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8006c3e:	9504      	str	r5, [sp, #16]
 8006c40:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8006c44:	9503      	str	r5, [sp, #12]
 8006c46:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8006c4a:	9502      	str	r5, [sp, #8]
 8006c4c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8006c50:	9501      	str	r5, [sp, #4]
 8006c52:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8006c56:	9500      	str	r5, [sp, #0]
 8006c58:	f016 f9de 	bl	801d018 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8006c5c:	4b06      	ldr	r3, [pc, #24]	@ (8006c78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8006c5e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006c60:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8006c62:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006c64:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8006c66:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006c68:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006c6a:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8006c6c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8006c6e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8006c70:	4620      	mov	r0, r4
 8006c72:	b00b      	add	sp, #44	@ 0x2c
 8006c74:	bd30      	pop	{r4, r5, pc}
 8006c76:	bf00      	nop
 8006c78:	08032460 	.word	0x08032460

08006c7c <_ZN8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c7c:	4770      	bx	lr

08006c7e <_ZN22MainMenuScreenViewBaseD1Ev>:
}

MainMenuScreenViewBase::~MainMenuScreenViewBase()
{

}
 8006c7e:	4770      	bx	lr

08006c80 <_ZN22MainMenuScreenViewBase11setupScreenEv>:

void MainMenuScreenViewBase::setupScreen()
{

}
 8006c80:	4770      	bx	lr

08006c82 <_ZN8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006c82:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c84:	68c2      	ldr	r2, [r0, #12]
 8006c86:	6844      	ldr	r4, [r0, #4]
 8006c88:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006c8a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006c8c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006c90:	07d2      	lsls	r2, r2, #31
 8006c92:	bf48      	it	mi
 8006c94:	5962      	ldrmi	r2, [r4, r5]
 8006c96:	689b      	ldr	r3, [r3, #8]
    }
 8006c98:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c9a:	bf48      	it	mi
 8006c9c:	58d3      	ldrmi	r3, [r2, r3]
 8006c9e:	4718      	bx	r3

08006ca0 <_ZNK8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8006ca0:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8006ca2:	6840      	ldr	r0, [r0, #4]
 8006ca4:	b130      	cbz	r0, 8006cb4 <_ZNK8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8006ca6:	689a      	ldr	r2, [r3, #8]
 8006ca8:	b91a      	cbnz	r2, 8006cb2 <_ZNK8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8006caa:	68d8      	ldr	r0, [r3, #12]
 8006cac:	f000 0001 	and.w	r0, r0, #1
 8006cb0:	4770      	bx	lr
 8006cb2:	2001      	movs	r0, #1
    }
 8006cb4:	4770      	bx	lr

08006cb6 <_ZN8touchgfx8CallbackI22MainMenuScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006cb6:	b510      	push	{r4, lr}
 8006cb8:	2110      	movs	r1, #16
 8006cba:	4604      	mov	r4, r0
 8006cbc:	f026 fe33 	bl	802d926 <_ZdlPvj>
 8006cc0:	4620      	mov	r0, r4
 8006cc2:	bd10      	pop	{r4, pc}

08006cc4 <_ZN22MainMenuScreenViewBaseD0Ev>:
MainMenuScreenViewBase::~MainMenuScreenViewBase()
 8006cc4:	b510      	push	{r4, lr}
}
 8006cc6:	f44f 7112 	mov.w	r1, #584	@ 0x248
MainMenuScreenViewBase::~MainMenuScreenViewBase()
 8006cca:	4604      	mov	r4, r0
}
 8006ccc:	f026 fe2b 	bl	802d926 <_ZdlPvj>
 8006cd0:	4620      	mov	r0, r4
 8006cd2:	bd10      	pop	{r4, pc}

08006cd4 <_ZN22MainMenuScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainMenuScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8006cd4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &SELECT)
 8006cd6:	f500 73e0 	add.w	r3, r0, #448	@ 0x1c0
 8006cda:	4299      	cmp	r1, r3
{
 8006cdc:	4604      	mov	r4, r0
 8006cde:	460d      	mov	r5, r1
    if (&src == &SELECT)
 8006ce0:	d103      	bne.n	8006cea <_ZN22MainMenuScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~MainMenuScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006ce2:	f014 fb8f 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Select
        //When SELECT clicked change screen to Character
        //Go to Character with no screen transition
        application().gotoCharacterScreenNoTransition();
 8006ce6:	f7fd f953 	bl	8003f90 <_ZN23FrontendApplicationBase31gotoCharacterScreenNoTransitionEv>
    }
    if (&src == &PLAY)
 8006cea:	f504 74a4 	add.w	r4, r4, #328	@ 0x148
 8006cee:	42a5      	cmp	r5, r4
 8006cf0:	d105      	bne.n	8006cfe <_ZN22MainMenuScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 8006cf2:	f014 fb87 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //GameScreen
        //When PLAY clicked change screen to GameScreen
        //Go to GameScreen with no screen transition
        application().gotoGameScreenScreenNoTransition();
    }
}
 8006cf6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoGameScreenScreenNoTransition();
 8006cfa:	f7fd b929 	b.w	8003f50 <_ZN23FrontendApplicationBase32gotoGameScreenScreenNoTransitionEv>
}
 8006cfe:	bd38      	pop	{r3, r4, r5, pc}

08006d00 <_ZN22MainMenuScreenViewBaseC1Ev>:
MainMenuScreenViewBase::MainMenuScreenViewBase() :
 8006d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d04:	4604      	mov	r4, r0
 8006d06:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &MainMenuScreenViewBase::flexButtonCallbackHandler)
 8006d08:	46a2      	mov	sl, r4
 8006d0a:	2500      	movs	r5, #0
 8006d0c:	f016 fba0 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8006d10:	4b95      	ldr	r3, [pc, #596]	@ (8006f68 <_ZN22MainMenuScreenViewBaseC1Ev+0x268>)
 8006d12:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006d14:	f84a 3b40 	str.w	r3, [sl], #64
 8006d18:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8006d1c:	4650      	mov	r0, sl
 8006d1e:	f7fc f85d 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8006d22:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8006d26:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 8006d2a:	a907      	add	r1, sp, #28
 8006d2c:	4648      	mov	r0, r9
 8006d2e:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8006d32:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006d36:	f011 f8bb 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d3a:	a907      	add	r1, sp, #28
 8006d3c:	4640      	mov	r0, r8
 8006d3e:	f104 06f0 	add.w	r6, r4, #240	@ 0xf0
 8006d42:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006d46:	f011 f8b3 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d4a:	a907      	add	r1, sp, #28
 8006d4c:	4638      	mov	r0, r7
 8006d4e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006d52:	f011 f8ad 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d56:	a907      	add	r1, sp, #28
 8006d58:	4630      	mov	r0, r6
 8006d5a:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006d5e:	f011 f8a7 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d62:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8006d66:	a907      	add	r1, sp, #28
 8006d68:	4618      	mov	r0, r3
 8006d6a:	9303      	str	r3, [sp, #12]
 8006d6c:	f8ad b01c 	strh.w	fp, [sp, #28]
 8006d70:	f011 f89e 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006d74:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8006d78:	4618      	mov	r0, r3
 8006d7a:	9304      	str	r3, [sp, #16]
 8006d7c:	f7fc f84a 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006d80:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 8006d84:	4618      	mov	r0, r3
 8006d86:	9305      	str	r3, [sp, #20]
 8006d88:	f7fc f844 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d8c:	4b77      	ldr	r3, [pc, #476]	@ (8006f6c <_ZN22MainMenuScreenViewBaseC1Ev+0x26c>)
 8006d8e:	e9c4 348e 	strd	r3, r4, [r4, #568]	@ 0x238
 8006d92:	4b77      	ldr	r3, [pc, #476]	@ (8006f70 <_ZN22MainMenuScreenViewBaseC1Ev+0x270>)
 8006d94:	e9c4 3590 	strd	r3, r5, [r4, #576]	@ 0x240
    __background.setPosition(0, 0, 240, 320);
 8006d98:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006d9c:	462a      	mov	r2, r5
 8006d9e:	9300      	str	r3, [sp, #0]
 8006da0:	4629      	mov	r1, r5
 8006da2:	4650      	mov	r0, sl
 8006da4:	23f0      	movs	r3, #240	@ 0xf0
 8006da6:	f7fc f805 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006daa:	f104 0b04 	add.w	fp, r4, #4
 8006dae:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8006db2:	66a3      	str	r3, [r4, #104]	@ 0x68
 8006db4:	4651      	mov	r1, sl
 8006db6:	4658      	mov	r0, fp
 8006db8:	f00e f9a0 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006dbc:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 8006dbe:	a907      	add	r1, sp, #28
 8006dc0:	4648      	mov	r0, r9
 8006dc2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006dc6:	f011 ff0f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 8006dca:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006dce:	462a      	mov	r2, r5
 8006dd0:	9300      	str	r3, [sp, #0]
 8006dd2:	4629      	mov	r1, r5
 8006dd4:	23f0      	movs	r3, #240	@ 0xf0
 8006dd6:	4648      	mov	r0, r9
 8006dd8:	f7fb ffec 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006ddc:	4629      	mov	r1, r5
 8006dde:	4648      	mov	r0, r9
 8006de0:	f011 f821 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006de4:	4649      	mov	r1, r9
 8006de6:	4658      	mov	r0, fp
 8006de8:	f00e f988 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006dec:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 8006dee:	a907      	add	r1, sp, #28
 8006df0:	4640      	mov	r0, r8
 8006df2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006df6:	f011 fef7 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 8006dfa:	2370      	movs	r3, #112	@ 0x70
 8006dfc:	220e      	movs	r2, #14
 8006dfe:	9300      	str	r3, [sp, #0]
 8006e00:	4640      	mov	r0, r8
 8006e02:	239e      	movs	r3, #158	@ 0x9e
 8006e04:	2129      	movs	r1, #41	@ 0x29
 8006e06:	f7fb ffd5 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006e0a:	4629      	mov	r1, r5
 8006e0c:	4640      	mov	r0, r8
 8006e0e:	f011 f80a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006e12:	4641      	mov	r1, r8
 8006e14:	4658      	mov	r0, fp
 8006e16:	f00e f971 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e1a:	2349      	movs	r3, #73	@ 0x49
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA_ID));
 8006e1c:	a907      	add	r1, sp, #28
 8006e1e:	4638      	mov	r0, r7
 8006e20:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006e24:	f011 fee0 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(56, 145, 129, 64);
 8006e28:	2340      	movs	r3, #64	@ 0x40
 8006e2a:	2291      	movs	r2, #145	@ 0x91
 8006e2c:	9300      	str	r3, [sp, #0]
 8006e2e:	4638      	mov	r0, r7
 8006e30:	2381      	movs	r3, #129	@ 0x81
 8006e32:	2138      	movs	r1, #56	@ 0x38
 8006e34:	f7fb ffbe 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006e38:	4629      	mov	r1, r5
 8006e3a:	4638      	mov	r0, r7
 8006e3c:	f010 fff3 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006e40:	4639      	mov	r1, r7
 8006e42:	4658      	mov	r0, fp
 8006e44:	f00e f95a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e48:	233c      	movs	r3, #60	@ 0x3c
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8006e4a:	a907      	add	r1, sp, #28
 8006e4c:	4630      	mov	r0, r6
 8006e4e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006e52:	f011 fec9 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 8006e56:	2341      	movs	r3, #65	@ 0x41
 8006e58:	22db      	movs	r2, #219	@ 0xdb
 8006e5a:	9300      	str	r3, [sp, #0]
 8006e5c:	4630      	mov	r0, r6
 8006e5e:	237c      	movs	r3, #124	@ 0x7c
 8006e60:	2139      	movs	r1, #57	@ 0x39
 8006e62:	f7fb ffa7 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006e66:	4629      	mov	r1, r5
 8006e68:	4630      	mov	r0, r6
 8006e6a:	f010 ffdc 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006e6e:	4631      	mov	r1, r6
 8006e70:	4658      	mov	r0, fp
 8006e72:	f00e f943 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 8006e76:	9803      	ldr	r0, [sp, #12]
        down = colorPressed;
 8006e78:	f8df a104 	ldr.w	sl, [pc, #260]	@ 8006f80 <_ZN22MainMenuScreenViewBaseC1Ev+0x280>
 8006e7c:	2357      	movs	r3, #87	@ 0x57
 8006e7e:	a907      	add	r1, sp, #28
 8006e80:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006e84:	f011 feb0 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 8006e88:	2324      	movs	r3, #36	@ 0x24
 8006e8a:	f44f 728c 	mov.w	r2, #280	@ 0x118
 8006e8e:	9803      	ldr	r0, [sp, #12]
 8006e90:	9300      	str	r3, [sp, #0]
 8006e92:	21b8      	movs	r1, #184	@ 0xb8
 8006e94:	2337      	movs	r3, #55	@ 0x37
 8006e96:	f7fb ff8d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006e9a:	9803      	ldr	r0, [sp, #12]
 8006e9c:	4629      	mov	r1, r5
 8006e9e:	f010 ffc2 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 8006ea2:	2636      	movs	r6, #54	@ 0x36
 8006ea4:	9903      	ldr	r1, [sp, #12]
 8006ea6:	4658      	mov	r0, fp
 8006ea8:	f00e f928 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006eac:	462a      	mov	r2, r5
 8006eae:	4629      	mov	r1, r5
 8006eb0:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 8006eb4:	9600      	str	r6, [sp, #0]
 8006eb6:	2366      	movs	r3, #102	@ 0x66
 8006eb8:	f7fb ff7c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8006ebc:	4a2d      	ldr	r2, [pc, #180]	@ (8006f74 <_ZN22MainMenuScreenViewBaseC1Ev+0x274>)
 8006ebe:	492e      	ldr	r1, [pc, #184]	@ (8006f78 <_ZN22MainMenuScreenViewBaseC1Ev+0x278>)
        down = colorPressed;
 8006ec0:	4b2e      	ldr	r3, [pc, #184]	@ (8006f7c <_ZN22MainMenuScreenViewBaseC1Ev+0x27c>)
        handlePressedUpdated();
 8006ec2:	f8d4 7148 	ldr.w	r7, [r4, #328]	@ 0x148
 8006ec6:	9804      	ldr	r0, [sp, #16]
 8006ec8:	f04f 0905 	mov.w	r9, #5
        borderDown = borderColorPressed;
 8006ecc:	e9c4 216e 	strd	r2, r1, [r4, #440]	@ 0x1b8
        down = colorPressed;
 8006ed0:	e9c4 a36c 	strd	sl, r3, [r4, #432]	@ 0x1b0
        alpha = newAlpha;
 8006ed4:	f04f 0806 	mov.w	r8, #6
 8006ed8:	f8a4 91ac 	strh.w	r9, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 8006edc:	f7fb fec2 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
 8006ee0:	f884 8175 	strb.w	r8, [r4, #373]	@ 0x175
        handleAlphaUpdated();
 8006ee4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8006ee8:	9804      	ldr	r0, [sp, #16]
    PLAY.setAction(flexButtonCallback);
 8006eea:	f504 770e 	add.w	r7, r4, #568	@ 0x238
 8006eee:	4798      	blx	r3
    PLAY.setPosition(69, 224, 102, 54);
 8006ef0:	9804      	ldr	r0, [sp, #16]
        action = &callback;
 8006ef2:	f8c4 7178 	str.w	r7, [r4, #376]	@ 0x178
 8006ef6:	2366      	movs	r3, #102	@ 0x66
 8006ef8:	22e0      	movs	r2, #224	@ 0xe0
 8006efa:	9600      	str	r6, [sp, #0]
 8006efc:	2145      	movs	r1, #69	@ 0x45
 8006efe:	f7fb ff59 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f02:	9904      	ldr	r1, [sp, #16]
 8006f04:	4658      	mov	r0, fp
 8006f06:	f00e f8f9 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8006f0a:	462a      	mov	r2, r5
 8006f0c:	4629      	mov	r1, r5
 8006f0e:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 8006f12:	9600      	str	r6, [sp, #0]
 8006f14:	2366      	movs	r3, #102	@ 0x66
 8006f16:	f7fb ff4d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderUp = borderColorReleased;
 8006f1a:	4a16      	ldr	r2, [pc, #88]	@ (8006f74 <_ZN22MainMenuScreenViewBaseC1Ev+0x274>)
 8006f1c:	4b17      	ldr	r3, [pc, #92]	@ (8006f7c <_ZN22MainMenuScreenViewBaseC1Ev+0x27c>)
        borderDown = borderColorPressed;
 8006f1e:	4916      	ldr	r1, [pc, #88]	@ (8006f78 <_ZN22MainMenuScreenViewBaseC1Ev+0x278>)
 8006f20:	f8c4 1234 	str.w	r1, [r4, #564]	@ 0x234
        borderUp = borderColorReleased;
 8006f24:	e9c4 328b 	strd	r3, r2, [r4, #556]	@ 0x22c
        handlePressedUpdated();
 8006f28:	f8d4 51c0 	ldr.w	r5, [r4, #448]	@ 0x1c0
 8006f2c:	9805      	ldr	r0, [sp, #20]
 8006f2e:	f8a4 9224 	strh.w	r9, [r4, #548]	@ 0x224
        up = colorReleased;
 8006f32:	f8c4 a228 	str.w	sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 8006f36:	f7fb fe95 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8006f3a:	f884 81ed 	strb.w	r8, [r4, #493]	@ 0x1ed
        handleAlphaUpdated();
 8006f3e:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8006f42:	9805      	ldr	r0, [sp, #20]
 8006f44:	4798      	blx	r3
    SELECT.setPosition(68, 150, 102, 54);
 8006f46:	9805      	ldr	r0, [sp, #20]
        action = &callback;
 8006f48:	f8c4 71f0 	str.w	r7, [r4, #496]	@ 0x1f0
 8006f4c:	2366      	movs	r3, #102	@ 0x66
 8006f4e:	2296      	movs	r2, #150	@ 0x96
 8006f50:	9600      	str	r6, [sp, #0]
 8006f52:	2144      	movs	r1, #68	@ 0x44
 8006f54:	f7fb ff2e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f58:	4658      	mov	r0, fp
 8006f5a:	9905      	ldr	r1, [sp, #20]
 8006f5c:	f00e f8ce 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006f60:	4620      	mov	r0, r4
 8006f62:	b009      	add	sp, #36	@ 0x24
 8006f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f68:	080324e0 	.word	0x080324e0
 8006f6c:	080324c8 	.word	0x080324c8
 8006f70:	08006cd5 	.word	0x08006cd5
 8006f74:	ff003366 	.word	0xff003366
 8006f78:	ff336699 	.word	0xff336699
 8006f7c:	ff0099cc 	.word	0xff0099cc
 8006f80:	ff006699 	.word	0xff006699

08006f84 <_ZN25NarutoGameScreen2ViewBaseD1Ev>:
}

NarutoGameScreen2ViewBase::~NarutoGameScreen2ViewBase()
{

}
 8006f84:	4770      	bx	lr

08006f86 <_ZN25NarutoGameScreen2ViewBase11setupScreenEv>:

void NarutoGameScreen2ViewBase::setupScreen()
{

}
 8006f86:	4770      	bx	lr

08006f88 <_ZN25NarutoGameScreen2ViewBaseD0Ev>:
NarutoGameScreen2ViewBase::~NarutoGameScreen2ViewBase()
 8006f88:	b510      	push	{r4, lr}
}
 8006f8a:	f640 2164 	movw	r1, #2660	@ 0xa64
NarutoGameScreen2ViewBase::~NarutoGameScreen2ViewBase()
 8006f8e:	4604      	mov	r4, r0
}
 8006f90:	f026 fcc9 	bl	802d926 <_ZdlPvj>
 8006f94:	4620      	mov	r0, r4
 8006f96:	bd10      	pop	{r4, pc}

08006f98 <_ZN25NarutoGameScreen2ViewBaseC1Ev>:
NarutoGameScreen2ViewBase::NarutoGameScreen2ViewBase()
 8006f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f9c:	4604      	mov	r4, r0
 8006f9e:	b0bb      	sub	sp, #236	@ 0xec
 8006fa0:	46a2      	mov	sl, r4
 8006fa2:	2500      	movs	r5, #0
 8006fa4:	f016 fa54 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8006fa8:	4bd0      	ldr	r3, [pc, #832]	@ (80072ec <_ZN25NarutoGameScreen2ViewBaseC1Ev+0x354>)
 8006faa:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006fac:	f84a 3b40 	str.w	r3, [sl], #64
 8006fb0:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8006fb4:	4650      	mov	r0, sl
 8006fb6:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8006fba:	f7fb ff0f 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8006fbe:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8006fc2:	a939      	add	r1, sp, #228	@ 0xe4
 8006fc4:	4648      	mov	r0, r9
 8006fc6:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8006fca:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006fce:	f010 ff6f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006fd2:	a939      	add	r1, sp, #228	@ 0xe4
 8006fd4:	4640      	mov	r0, r8
 8006fd6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006fda:	f010 ff69 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006fde:	a939      	add	r1, sp, #228	@ 0xe4
 8006fe0:	4638      	mov	r0, r7
 8006fe2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006fe6:	f010 ff63 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006fea:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8006fee:	a939      	add	r1, sp, #228	@ 0xe4
 8006ff0:	4618      	mov	r0, r3
 8006ff2:	9302      	str	r3, [sp, #8]
 8006ff4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8006ff8:	f010 ff5a 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006ffc:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8007000:	a939      	add	r1, sp, #228	@ 0xe4
 8007002:	4618      	mov	r0, r3
 8007004:	9303      	str	r3, [sp, #12]
 8007006:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800700a:	f010 ff51 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800700e:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8007012:	a939      	add	r1, sp, #228	@ 0xe4
 8007014:	4618      	mov	r0, r3
 8007016:	9304      	str	r3, [sp, #16]
 8007018:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800701c:	f010 ff48 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007020:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8007024:	a939      	add	r1, sp, #228	@ 0xe4
 8007026:	4618      	mov	r0, r3
 8007028:	9305      	str	r3, [sp, #20]
 800702a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800702e:	f010 ff3f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007032:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 8007036:	a939      	add	r1, sp, #228	@ 0xe4
 8007038:	4618      	mov	r0, r3
 800703a:	9306      	str	r3, [sp, #24]
 800703c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007040:	f010 ff36 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007044:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8007048:	a939      	add	r1, sp, #228	@ 0xe4
 800704a:	4618      	mov	r0, r3
 800704c:	9307      	str	r3, [sp, #28]
 800704e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007052:	f010 ff2d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007056:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 800705a:	a939      	add	r1, sp, #228	@ 0xe4
 800705c:	4618      	mov	r0, r3
 800705e:	9308      	str	r3, [sp, #32]
 8007060:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007064:	f010 ff24 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007068:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 800706c:	a939      	add	r1, sp, #228	@ 0xe4
 800706e:	4618      	mov	r0, r3
 8007070:	9309      	str	r3, [sp, #36]	@ 0x24
 8007072:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007076:	f010 ff1b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800707a:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 800707e:	a939      	add	r1, sp, #228	@ 0xe4
 8007080:	4618      	mov	r0, r3
 8007082:	930a      	str	r3, [sp, #40]	@ 0x28
 8007084:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007088:	f010 ff12 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800708c:	f504 731f 	add.w	r3, r4, #636	@ 0x27c
 8007090:	a939      	add	r1, sp, #228	@ 0xe4
 8007092:	4618      	mov	r0, r3
 8007094:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007096:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800709a:	f010 ff09 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800709e:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 80070a2:	a939      	add	r1, sp, #228	@ 0xe4
 80070a4:	4618      	mov	r0, r3
 80070a6:	930c      	str	r3, [sp, #48]	@ 0x30
 80070a8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80070ac:	f010 ff00 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80070b0:	f504 7335 	add.w	r3, r4, #724	@ 0x2d4
 80070b4:	a939      	add	r1, sp, #228	@ 0xe4
 80070b6:	4618      	mov	r0, r3
 80070b8:	930d      	str	r3, [sp, #52]	@ 0x34
 80070ba:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80070be:	f010 fef7 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80070c2:	f504 7340 	add.w	r3, r4, #768	@ 0x300
 80070c6:	a939      	add	r1, sp, #228	@ 0xe4
 80070c8:	4618      	mov	r0, r3
 80070ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80070cc:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80070d0:	f010 feee 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80070d4:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 80070d8:	a939      	add	r1, sp, #228	@ 0xe4
 80070da:	4618      	mov	r0, r3
 80070dc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80070de:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80070e2:	f010 fee5 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80070e6:	f504 7356 	add.w	r3, r4, #856	@ 0x358
 80070ea:	a939      	add	r1, sp, #228	@ 0xe4
 80070ec:	4618      	mov	r0, r3
 80070ee:	9310      	str	r3, [sp, #64]	@ 0x40
 80070f0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80070f4:	f010 fedc 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80070f8:	f504 7361 	add.w	r3, r4, #900	@ 0x384
 80070fc:	a939      	add	r1, sp, #228	@ 0xe4
 80070fe:	4618      	mov	r0, r3
 8007100:	9311      	str	r3, [sp, #68]	@ 0x44
 8007102:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007106:	f010 fed3 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800710a:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 800710e:	a939      	add	r1, sp, #228	@ 0xe4
 8007110:	4618      	mov	r0, r3
 8007112:	9312      	str	r3, [sp, #72]	@ 0x48
 8007114:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007118:	f010 feca 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800711c:	f504 7377 	add.w	r3, r4, #988	@ 0x3dc
 8007120:	a939      	add	r1, sp, #228	@ 0xe4
 8007122:	4618      	mov	r0, r3
 8007124:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007126:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800712a:	f010 fec1 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800712e:	f504 6381 	add.w	r3, r4, #1032	@ 0x408
 8007132:	a939      	add	r1, sp, #228	@ 0xe4
 8007134:	4618      	mov	r0, r3
 8007136:	9314      	str	r3, [sp, #80]	@ 0x50
 8007138:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800713c:	f010 feb8 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007140:	f204 4334 	addw	r3, r4, #1076	@ 0x434
 8007144:	a939      	add	r1, sp, #228	@ 0xe4
 8007146:	4618      	mov	r0, r3
 8007148:	9315      	str	r3, [sp, #84]	@ 0x54
 800714a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800714e:	f010 feaf 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007152:	f504 638c 	add.w	r3, r4, #1120	@ 0x460
 8007156:	a939      	add	r1, sp, #228	@ 0xe4
 8007158:	4618      	mov	r0, r3
 800715a:	9316      	str	r3, [sp, #88]	@ 0x58
 800715c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007160:	f010 fea6 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007164:	f204 438c 	addw	r3, r4, #1164	@ 0x48c
 8007168:	a939      	add	r1, sp, #228	@ 0xe4
 800716a:	4618      	mov	r0, r3
 800716c:	9317      	str	r3, [sp, #92]	@ 0x5c
 800716e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007172:	f010 fe9d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007176:	f504 6397 	add.w	r3, r4, #1208	@ 0x4b8
 800717a:	a939      	add	r1, sp, #228	@ 0xe4
 800717c:	4618      	mov	r0, r3
 800717e:	9318      	str	r3, [sp, #96]	@ 0x60
 8007180:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007184:	f010 fe94 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007188:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 800718c:	a939      	add	r1, sp, #228	@ 0xe4
 800718e:	4618      	mov	r0, r3
 8007190:	9319      	str	r3, [sp, #100]	@ 0x64
 8007192:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007196:	f010 fe8b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800719a:	f504 63a2 	add.w	r3, r4, #1296	@ 0x510
 800719e:	a939      	add	r1, sp, #228	@ 0xe4
 80071a0:	4618      	mov	r0, r3
 80071a2:	931a      	str	r3, [sp, #104]	@ 0x68
 80071a4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80071a8:	f010 fe82 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80071ac:	f204 533c 	addw	r3, r4, #1340	@ 0x53c
 80071b0:	f504 6bad 	add.w	fp, r4, #1384	@ 0x568
 80071b4:	a939      	add	r1, sp, #228	@ 0xe4
 80071b6:	4618      	mov	r0, r3
 80071b8:	931b      	str	r3, [sp, #108]	@ 0x6c
 80071ba:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80071be:	f010 fe77 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80071c2:	a939      	add	r1, sp, #228	@ 0xe4
 80071c4:	4658      	mov	r0, fp
 80071c6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80071ca:	f010 fe71 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80071ce:	f204 5394 	addw	r3, r4, #1428	@ 0x594
 80071d2:	a939      	add	r1, sp, #228	@ 0xe4
 80071d4:	4618      	mov	r0, r3
 80071d6:	931c      	str	r3, [sp, #112]	@ 0x70
 80071d8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80071dc:	f010 fe68 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80071e0:	f504 63b8 	add.w	r3, r4, #1472	@ 0x5c0
 80071e4:	a939      	add	r1, sp, #228	@ 0xe4
 80071e6:	4618      	mov	r0, r3
 80071e8:	931d      	str	r3, [sp, #116]	@ 0x74
 80071ea:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80071ee:	f010 fe5f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80071f2:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
 80071f6:	a939      	add	r1, sp, #228	@ 0xe4
 80071f8:	4618      	mov	r0, r3
 80071fa:	931e      	str	r3, [sp, #120]	@ 0x78
 80071fc:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007200:	f010 fe56 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007204:	f504 63c3 	add.w	r3, r4, #1560	@ 0x618
 8007208:	a939      	add	r1, sp, #228	@ 0xe4
 800720a:	4618      	mov	r0, r3
 800720c:	931f      	str	r3, [sp, #124]	@ 0x7c
 800720e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007212:	f010 fe4d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007216:	f204 6344 	addw	r3, r4, #1604	@ 0x644
 800721a:	a939      	add	r1, sp, #228	@ 0xe4
 800721c:	4618      	mov	r0, r3
 800721e:	9320      	str	r3, [sp, #128]	@ 0x80
 8007220:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007224:	f010 fe44 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007228:	f504 63ce 	add.w	r3, r4, #1648	@ 0x670
 800722c:	a939      	add	r1, sp, #228	@ 0xe4
 800722e:	4618      	mov	r0, r3
 8007230:	9321      	str	r3, [sp, #132]	@ 0x84
 8007232:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007236:	f010 fe3b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800723a:	f204 639c 	addw	r3, r4, #1692	@ 0x69c
 800723e:	a939      	add	r1, sp, #228	@ 0xe4
 8007240:	4618      	mov	r0, r3
 8007242:	9322      	str	r3, [sp, #136]	@ 0x88
 8007244:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007248:	f010 fe32 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800724c:	f504 63d9 	add.w	r3, r4, #1736	@ 0x6c8
 8007250:	a939      	add	r1, sp, #228	@ 0xe4
 8007252:	4618      	mov	r0, r3
 8007254:	9323      	str	r3, [sp, #140]	@ 0x8c
 8007256:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800725a:	f010 fe29 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800725e:	f204 63f4 	addw	r3, r4, #1780	@ 0x6f4
 8007262:	a939      	add	r1, sp, #228	@ 0xe4
 8007264:	4618      	mov	r0, r3
 8007266:	9324      	str	r3, [sp, #144]	@ 0x90
 8007268:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800726c:	f010 fe20 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007270:	f504 63e4 	add.w	r3, r4, #1824	@ 0x720
 8007274:	a939      	add	r1, sp, #228	@ 0xe4
 8007276:	4618      	mov	r0, r3
 8007278:	9325      	str	r3, [sp, #148]	@ 0x94
 800727a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800727e:	f010 fe17 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007282:	f204 734c 	addw	r3, r4, #1868	@ 0x74c
 8007286:	a939      	add	r1, sp, #228	@ 0xe4
 8007288:	4618      	mov	r0, r3
 800728a:	9326      	str	r3, [sp, #152]	@ 0x98
 800728c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007290:	f010 fe0e 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007294:	f504 63ef 	add.w	r3, r4, #1912	@ 0x778
 8007298:	a939      	add	r1, sp, #228	@ 0xe4
 800729a:	4618      	mov	r0, r3
 800729c:	9327      	str	r3, [sp, #156]	@ 0x9c
 800729e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80072a2:	f010 fe05 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80072a6:	f204 73a4 	addw	r3, r4, #1956	@ 0x7a4
 80072aa:	a939      	add	r1, sp, #228	@ 0xe4
 80072ac:	4618      	mov	r0, r3
 80072ae:	9328      	str	r3, [sp, #160]	@ 0xa0
 80072b0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80072b4:	f010 fdfc 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80072b8:	f504 63fa 	add.w	r3, r4, #2000	@ 0x7d0
 80072bc:	a939      	add	r1, sp, #228	@ 0xe4
 80072be:	4618      	mov	r0, r3
 80072c0:	9329      	str	r3, [sp, #164]	@ 0xa4
 80072c2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80072c6:	f010 fdf3 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80072ca:	f204 73fc 	addw	r3, r4, #2044	@ 0x7fc
 80072ce:	a939      	add	r1, sp, #228	@ 0xe4
 80072d0:	4618      	mov	r0, r3
 80072d2:	932a      	str	r3, [sp, #168]	@ 0xa8
 80072d4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80072d8:	f010 fdea 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80072dc:	f604 0328 	addw	r3, r4, #2088	@ 0x828
 80072e0:	a939      	add	r1, sp, #228	@ 0xe4
 80072e2:	4618      	mov	r0, r3
 80072e4:	932b      	str	r3, [sp, #172]	@ 0xac
 80072e6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80072ea:	e001      	b.n	80072f0 <_ZN25NarutoGameScreen2ViewBaseC1Ev+0x358>
 80072ec:	08032514 	.word	0x08032514
 80072f0:	f010 fdde 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80072f4:	f604 0354 	addw	r3, r4, #2132	@ 0x854
 80072f8:	4618      	mov	r0, r3
 80072fa:	9336      	str	r3, [sp, #216]	@ 0xd8
 80072fc:	f7fb fd6e 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8007300:	f504 6308 	add.w	r3, r4, #2176	@ 0x880
 8007304:	4618      	mov	r0, r3
 8007306:	9337      	str	r3, [sp, #220]	@ 0xdc
 8007308:	f7fb fd68 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 800730c:	f604 03ac 	addw	r3, r4, #2220	@ 0x8ac
 8007310:	a939      	add	r1, sp, #228	@ 0xe4
 8007312:	4618      	mov	r0, r3
 8007314:	932c      	str	r3, [sp, #176]	@ 0xb0
 8007316:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800731a:	f010 fdc9 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800731e:	f604 03d8 	addw	r3, r4, #2264	@ 0x8d8
 8007322:	a939      	add	r1, sp, #228	@ 0xe4
 8007324:	4618      	mov	r0, r3
 8007326:	932d      	str	r3, [sp, #180]	@ 0xb4
 8007328:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800732c:	f010 fdc0 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007330:	f604 1304 	addw	r3, r4, #2308	@ 0x904
 8007334:	a939      	add	r1, sp, #228	@ 0xe4
 8007336:	4618      	mov	r0, r3
 8007338:	932e      	str	r3, [sp, #184]	@ 0xb8
 800733a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800733e:	f010 fdb7 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007342:	f504 6313 	add.w	r3, r4, #2352	@ 0x930
 8007346:	a939      	add	r1, sp, #228	@ 0xe4
 8007348:	4618      	mov	r0, r3
 800734a:	932f      	str	r3, [sp, #188]	@ 0xbc
 800734c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007350:	f010 fdae 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007354:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 8007358:	a939      	add	r1, sp, #228	@ 0xe4
 800735a:	4618      	mov	r0, r3
 800735c:	9330      	str	r3, [sp, #192]	@ 0xc0
 800735e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007362:	f010 fda5 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007366:	f604 1388 	addw	r3, r4, #2440	@ 0x988
 800736a:	a939      	add	r1, sp, #228	@ 0xe4
 800736c:	4618      	mov	r0, r3
 800736e:	9331      	str	r3, [sp, #196]	@ 0xc4
 8007370:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007374:	f010 fd9c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007378:	f604 13b4 	addw	r3, r4, #2484	@ 0x9b4
 800737c:	a939      	add	r1, sp, #228	@ 0xe4
 800737e:	4618      	mov	r0, r3
 8007380:	9332      	str	r3, [sp, #200]	@ 0xc8
 8007382:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007386:	f010 fd93 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800738a:	f504 631e 	add.w	r3, r4, #2528	@ 0x9e0
 800738e:	a939      	add	r1, sp, #228	@ 0xe4
 8007390:	4618      	mov	r0, r3
 8007392:	9333      	str	r3, [sp, #204]	@ 0xcc
 8007394:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8007398:	f010 fd8a 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800739c:	f604 230c 	addw	r3, r4, #2572	@ 0xa0c
 80073a0:	a939      	add	r1, sp, #228	@ 0xe4
 80073a2:	4618      	mov	r0, r3
 80073a4:	9334      	str	r3, [sp, #208]	@ 0xd0
 80073a6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80073aa:	f010 fd81 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80073ae:	f604 2338 	addw	r3, r4, #2616	@ 0xa38
 80073b2:	a939      	add	r1, sp, #228	@ 0xe4
 80073b4:	4618      	mov	r0, r3
 80073b6:	9335      	str	r3, [sp, #212]	@ 0xd4
 80073b8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80073bc:	f010 fd78 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 80073c0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80073c4:	462a      	mov	r2, r5
 80073c6:	9300      	str	r3, [sp, #0]
 80073c8:	4629      	mov	r1, r5
 80073ca:	4650      	mov	r0, sl
 80073cc:	23f0      	movs	r3, #240	@ 0xf0
 80073ce:	1d26      	adds	r6, r4, #4
 80073d0:	f7fb fcf0 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073d4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80073d8:	66a3      	str	r3, [r4, #104]	@ 0x68
 80073da:	4651      	mov	r1, sl
 80073dc:	4630      	mov	r0, r6
 80073de:	f00d fe8d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80073e2:	f04f 0352 	mov.w	r3, #82	@ 0x52
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_STAGE1_ID));
 80073e6:	a939      	add	r1, sp, #228	@ 0xe4
 80073e8:	4648      	mov	r0, r9
 80073ea:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80073ee:	f011 fbfb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 80073f2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80073f6:	462a      	mov	r2, r5
 80073f8:	9300      	str	r3, [sp, #0]
 80073fa:	4629      	mov	r1, r5
 80073fc:	23f0      	movs	r3, #240	@ 0xf0
 80073fe:	4648      	mov	r0, r9
 8007400:	f7fb fcd8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007404:	4629      	mov	r1, r5
 8007406:	4648      	mov	r0, r9
 8007408:	f010 fd0d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800740c:	4649      	mov	r1, r9
 800740e:	4630      	mov	r0, r6
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 8007410:	f04f 091d 	mov.w	r9, #29
 8007414:	f00d fe72 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007418:	2301      	movs	r3, #1
    BITMAP_HP_100_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR1_ID));
 800741a:	a939      	add	r1, sp, #228	@ 0xe4
 800741c:	4640      	mov	r0, r8
 800741e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007422:	f011 fbe1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 8007426:	2206      	movs	r2, #6
 8007428:	2369      	movs	r3, #105	@ 0x69
 800742a:	f8cd 9000 	str.w	r9, [sp]
 800742e:	4640      	mov	r0, r8
 8007430:	2105      	movs	r1, #5
 8007432:	f7fb fcbf 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007436:	4629      	mov	r1, r5
 8007438:	4640      	mov	r0, r8
 800743a:	f010 fcf4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800743e:	4641      	mov	r1, r8
 8007440:	4630      	mov	r0, r6
 8007442:	f00d fe5b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007446:	2303      	movs	r3, #3
    BITMAP_HP_10_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR11_ID));
 8007448:	a939      	add	r1, sp, #228	@ 0xe4
 800744a:	4638      	mov	r0, r7
 800744c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007450:	f011 fbca 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID.setPosition(5, 6, 105, 29);
 8007454:	2206      	movs	r2, #6
 8007456:	2369      	movs	r3, #105	@ 0x69
 8007458:	f8cd 9000 	str.w	r9, [sp]
 800745c:	4638      	mov	r0, r7
 800745e:	2105      	movs	r1, #5
 8007460:	f7fb fca8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007464:	4629      	mov	r1, r5
 8007466:	4638      	mov	r0, r7
 8007468:	f010 fcdd 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800746c:	4639      	mov	r1, r7
 800746e:	4630      	mov	r0, r6
 8007470:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 8007474:	f00d fe42 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR12_ID));
 8007478:	9802      	ldr	r0, [sp, #8]
 800747a:	2304      	movs	r3, #4
 800747c:	a939      	add	r1, sp, #228	@ 0xe4
 800747e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007482:	f011 fbb1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID.setPosition(5, 6, 105, 29);
 8007486:	2206      	movs	r2, #6
 8007488:	2369      	movs	r3, #105	@ 0x69
 800748a:	9802      	ldr	r0, [sp, #8]
 800748c:	f8cd 9000 	str.w	r9, [sp]
 8007490:	2105      	movs	r1, #5
 8007492:	f7fb fc8f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007496:	9802      	ldr	r0, [sp, #8]
 8007498:	4629      	mov	r1, r5
 800749a:	f010 fcc4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800749e:	9902      	ldr	r1, [sp, #8]
 80074a0:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 80074a4:	4630      	mov	r0, r6
 80074a6:	f00d fe29 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR10_ID));
 80074aa:	9803      	ldr	r0, [sp, #12]
 80074ac:	2302      	movs	r3, #2
 80074ae:	a939      	add	r1, sp, #228	@ 0xe4
 80074b0:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80074b4:	f011 fb98 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID.setPosition(5, 6, 105, 29);
 80074b8:	2206      	movs	r2, #6
 80074ba:	2369      	movs	r3, #105	@ 0x69
 80074bc:	9803      	ldr	r0, [sp, #12]
 80074be:	f8cd 9000 	str.w	r9, [sp]
 80074c2:	2105      	movs	r1, #5
 80074c4:	f7fb fc76 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80074c8:	9803      	ldr	r0, [sp, #12]
 80074ca:	4629      	mov	r1, r5
 80074cc:	f010 fcab 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80074d0:	9903      	ldr	r1, [sp, #12]
 80074d2:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 80074d6:	4630      	mov	r0, r6
 80074d8:	f00d fe10 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR9_ID));
 80074dc:	9804      	ldr	r0, [sp, #16]
 80074de:	230c      	movs	r3, #12
 80074e0:	a939      	add	r1, sp, #228	@ 0xe4
 80074e2:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80074e6:	f011 fb7f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID.setPosition(5, 6, 105, 29);
 80074ea:	2206      	movs	r2, #6
 80074ec:	2369      	movs	r3, #105	@ 0x69
 80074ee:	9804      	ldr	r0, [sp, #16]
 80074f0:	f8cd 9000 	str.w	r9, [sp]
 80074f4:	2105      	movs	r1, #5
 80074f6:	f7fb fc5d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80074fa:	9804      	ldr	r0, [sp, #16]
 80074fc:	4629      	mov	r1, r5
 80074fe:	f010 fc92 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007502:	9904      	ldr	r1, [sp, #16]
 8007504:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 8007508:	4630      	mov	r0, r6
 800750a:	f00d fdf7 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR8_ID));
 800750e:	9805      	ldr	r0, [sp, #20]
 8007510:	230b      	movs	r3, #11
 8007512:	a939      	add	r1, sp, #228	@ 0xe4
 8007514:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007518:	f011 fb66 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID.setPosition(5, 6, 105, 29);
 800751c:	2206      	movs	r2, #6
 800751e:	2369      	movs	r3, #105	@ 0x69
 8007520:	9805      	ldr	r0, [sp, #20]
 8007522:	f8cd 9000 	str.w	r9, [sp]
 8007526:	2105      	movs	r1, #5
 8007528:	f7fb fc44 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800752c:	9805      	ldr	r0, [sp, #20]
 800752e:	4629      	mov	r1, r5
 8007530:	f010 fc79 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007534:	9905      	ldr	r1, [sp, #20]
 8007536:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 800753a:	4630      	mov	r0, r6
 800753c:	f00d fdde 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR7_ID));
 8007540:	9806      	ldr	r0, [sp, #24]
 8007542:	230a      	movs	r3, #10
 8007544:	a939      	add	r1, sp, #228	@ 0xe4
 8007546:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800754a:	f011 fb4d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID.setPosition(5, 6, 105, 29);
 800754e:	2206      	movs	r2, #6
 8007550:	2369      	movs	r3, #105	@ 0x69
 8007552:	9806      	ldr	r0, [sp, #24]
 8007554:	f8cd 9000 	str.w	r9, [sp]
 8007558:	2105      	movs	r1, #5
 800755a:	f7fb fc2b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800755e:	9806      	ldr	r0, [sp, #24]
 8007560:	4629      	mov	r1, r5
 8007562:	f010 fc60 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007566:	9906      	ldr	r1, [sp, #24]
 8007568:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 800756c:	4630      	mov	r0, r6
 800756e:	f00d fdc5 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR6_ID));
 8007572:	9807      	ldr	r0, [sp, #28]
 8007574:	2309      	movs	r3, #9
 8007576:	a939      	add	r1, sp, #228	@ 0xe4
 8007578:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800757c:	f011 fb34 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID.setPosition(5, 6, 105, 29);
 8007580:	2206      	movs	r2, #6
 8007582:	2369      	movs	r3, #105	@ 0x69
 8007584:	9807      	ldr	r0, [sp, #28]
 8007586:	f8cd 9000 	str.w	r9, [sp]
 800758a:	2105      	movs	r1, #5
 800758c:	f7fb fc12 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007590:	9807      	ldr	r0, [sp, #28]
 8007592:	4629      	mov	r1, r5
 8007594:	f010 fc47 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007598:	9907      	ldr	r1, [sp, #28]
 800759a:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 800759e:	4630      	mov	r0, r6
 80075a0:	f00d fdac 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR5_ID));
 80075a4:	9808      	ldr	r0, [sp, #32]
 80075a6:	2308      	movs	r3, #8
 80075a8:	a939      	add	r1, sp, #228	@ 0xe4
 80075aa:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80075ae:	f011 fb1b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID.setPosition(5, 6, 105, 29);
 80075b2:	2206      	movs	r2, #6
 80075b4:	2369      	movs	r3, #105	@ 0x69
 80075b6:	9808      	ldr	r0, [sp, #32]
 80075b8:	f8cd 9000 	str.w	r9, [sp]
 80075bc:	2105      	movs	r1, #5
 80075be:	f7fb fbf9 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80075c2:	9808      	ldr	r0, [sp, #32]
 80075c4:	4629      	mov	r1, r5
 80075c6:	f010 fc2e 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80075ca:	9908      	ldr	r1, [sp, #32]
 80075cc:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 80075d0:	4630      	mov	r0, r6
 80075d2:	f00d fd93 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR4_ID));
 80075d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80075d8:	2307      	movs	r3, #7
 80075da:	a939      	add	r1, sp, #228	@ 0xe4
 80075dc:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80075e0:	f011 fb02 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID.setPosition(5, 6, 105, 29);
 80075e4:	2369      	movs	r3, #105	@ 0x69
 80075e6:	2206      	movs	r2, #6
 80075e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80075ea:	f8cd 9000 	str.w	r9, [sp]
 80075ee:	2105      	movs	r1, #5
 80075f0:	f7fb fbe0 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80075f4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80075f6:	4629      	mov	r1, r5
 80075f8:	f010 fc15 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80075fc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80075fe:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 8007602:	4630      	mov	r0, r6
 8007604:	2706      	movs	r7, #6
 8007606:	f00d fd79 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR3_ID));
 800760a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800760c:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 8007610:	a939      	add	r1, sp, #228	@ 0xe4
 8007612:	f011 fae9 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID.setPosition(5, 6, 105, 29);
 8007616:	463a      	mov	r2, r7
 8007618:	2369      	movs	r3, #105	@ 0x69
 800761a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800761c:	f8cd 9000 	str.w	r9, [sp]
 8007620:	2105      	movs	r1, #5
 8007622:	f7fb fbc7 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007626:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8007628:	4629      	mov	r1, r5
 800762a:	f010 fbfc 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800762e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8007630:	f884 5275 	strb.w	r5, [r4, #629]	@ 0x275
 8007634:	4630      	mov	r0, r6
 8007636:	f00d fd61 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 800763a:	f04f 0a43 	mov.w	sl, #67	@ 0x43
    BITMAP_HP_130_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUBOSS_ID));
 800763e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8007640:	f04f 0330 	mov.w	r3, #48	@ 0x30
 8007644:	a939      	add	r1, sp, #228	@ 0xe4
 8007646:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800764a:	f011 facd 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 800764e:	f06f 0208 	mvn.w	r2, #8
 8007652:	2366      	movs	r3, #102	@ 0x66
 8007654:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8007656:	f8cd a000 	str.w	sl, [sp]
 800765a:	2181      	movs	r1, #129	@ 0x81
 800765c:	f7fb fbaa 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_130_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007660:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8007662:	4629      	mov	r1, r5
 8007664:	f010 fbdf 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007668:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800766a:	4630      	mov	r0, r6
 800766c:	f00d fd46 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_120_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_2_ID));
 8007670:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8007672:	2331      	movs	r3, #49	@ 0x31
 8007674:	a939      	add	r1, sp, #228	@ 0xe4
 8007676:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800767a:	f011 fab5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_120_ID_1.setPosition(129, -9, 102, 67);
 800767e:	f06f 0208 	mvn.w	r2, #8
 8007682:	2366      	movs	r3, #102	@ 0x66
 8007684:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8007686:	f8cd a000 	str.w	sl, [sp]
 800768a:	2181      	movs	r1, #129	@ 0x81
 800768c:	f7fb fb92 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_120_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007690:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8007692:	4629      	mov	r1, r5
 8007694:	f010 fbc7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007698:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800769a:	f884 52cd 	strb.w	r5, [r4, #717]	@ 0x2cd
 800769e:	4630      	mov	r0, r6
 80076a0:	f00d fd2c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_110_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_3_ID));
 80076a4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80076a6:	2332      	movs	r3, #50	@ 0x32
 80076a8:	a939      	add	r1, sp, #228	@ 0xe4
 80076aa:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80076ae:	f011 fa9b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_110_ID_1.setPosition(129, -9, 102, 67);
 80076b2:	f06f 0208 	mvn.w	r2, #8
 80076b6:	2366      	movs	r3, #102	@ 0x66
 80076b8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80076ba:	f8cd a000 	str.w	sl, [sp]
 80076be:	2181      	movs	r1, #129	@ 0x81
 80076c0:	f7fb fb78 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_110_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80076c4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80076c6:	4629      	mov	r1, r5
 80076c8:	f010 fbad 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80076cc:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80076ce:	f884 52f9 	strb.w	r5, [r4, #761]	@ 0x2f9
 80076d2:	4630      	mov	r0, r6
 80076d4:	f00d fd12 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_100_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BAR2_ID));
 80076d8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80076da:	2305      	movs	r3, #5
 80076dc:	a939      	add	r1, sp, #228	@ 0xe4
 80076de:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80076e2:	f011 fa81 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID_1.setPosition(126, 6, 105, 29);
 80076e6:	463a      	mov	r2, r7
 80076e8:	2369      	movs	r3, #105	@ 0x69
 80076ea:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80076ec:	f8cd 9000 	str.w	r9, [sp]
 80076f0:	217e      	movs	r1, #126	@ 0x7e
 80076f2:	f7fb fb5f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80076f6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80076f8:	4629      	mov	r1, r5
 80076fa:	f010 fb94 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80076fe:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8007700:	f884 5325 	strb.w	r5, [r4, #805]	@ 0x325
 8007704:	4630      	mov	r0, r6
 8007706:	f00d fcf9 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH9_ID));
 800770a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800770c:	2316      	movs	r3, #22
 800770e:	a939      	add	r1, sp, #228	@ 0xe4
 8007710:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007714:	f011 fa68 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID_1.setPosition(126, 6, 105, 29);
 8007718:	463a      	mov	r2, r7
 800771a:	2369      	movs	r3, #105	@ 0x69
 800771c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800771e:	f8cd 9000 	str.w	r9, [sp]
 8007722:	217e      	movs	r1, #126	@ 0x7e
 8007724:	f7fb fb46 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007728:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800772a:	4629      	mov	r1, r5
 800772c:	f010 fb7b 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007730:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8007732:	f884 5351 	strb.w	r5, [r4, #849]	@ 0x351
 8007736:	4630      	mov	r0, r6
 8007738:	f00d fce0 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH8_ID));
 800773c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800773e:	2315      	movs	r3, #21
 8007740:	a939      	add	r1, sp, #228	@ 0xe4
 8007742:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007746:	f011 fa4f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID_1.setPosition(126, 6, 105, 29);
 800774a:	463a      	mov	r2, r7
 800774c:	2369      	movs	r3, #105	@ 0x69
 800774e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8007750:	f8cd 9000 	str.w	r9, [sp]
 8007754:	217e      	movs	r1, #126	@ 0x7e
 8007756:	f7fb fb2d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800775a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800775c:	4629      	mov	r1, r5
 800775e:	f010 fb62 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007762:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8007764:	f884 537d 	strb.w	r5, [r4, #893]	@ 0x37d
 8007768:	4630      	mov	r0, r6
 800776a:	f00d fcc7 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH7_ID));
 800776e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8007770:	2314      	movs	r3, #20
 8007772:	a939      	add	r1, sp, #228	@ 0xe4
 8007774:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007778:	f011 fa36 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID_1.setPosition(126, 6, 105, 29);
 800777c:	463a      	mov	r2, r7
 800777e:	2369      	movs	r3, #105	@ 0x69
 8007780:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8007782:	f8cd 9000 	str.w	r9, [sp]
 8007786:	217e      	movs	r1, #126	@ 0x7e
 8007788:	f7fb fb14 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800778c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800778e:	4629      	mov	r1, r5
 8007790:	f010 fb49 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007794:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8007796:	f884 53a9 	strb.w	r5, [r4, #937]	@ 0x3a9
 800779a:	4630      	mov	r0, r6
 800779c:	f00d fcae 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH6_ID));
 80077a0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80077a2:	2313      	movs	r3, #19
 80077a4:	a939      	add	r1, sp, #228	@ 0xe4
 80077a6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80077aa:	f011 fa1d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID_1.setPosition(126, 6, 105, 29);
 80077ae:	463a      	mov	r2, r7
 80077b0:	2369      	movs	r3, #105	@ 0x69
 80077b2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80077b4:	f8cd 9000 	str.w	r9, [sp]
 80077b8:	217e      	movs	r1, #126	@ 0x7e
 80077ba:	f7fb fafb 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80077be:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80077c0:	4629      	mov	r1, r5
 80077c2:	f010 fb30 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80077c6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80077c8:	f884 53d5 	strb.w	r5, [r4, #981]	@ 0x3d5
 80077cc:	4630      	mov	r0, r6
 80077ce:	f00d fc95 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH5_ID));
 80077d2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80077d4:	f04f 0312 	mov.w	r3, #18
 80077d8:	a939      	add	r1, sp, #228	@ 0xe4
 80077da:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80077de:	f011 fa03 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID_1.setPosition(126, 6, 105, 29);
 80077e2:	463a      	mov	r2, r7
 80077e4:	2369      	movs	r3, #105	@ 0x69
 80077e6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80077e8:	f8cd 9000 	str.w	r9, [sp]
 80077ec:	217e      	movs	r1, #126	@ 0x7e
 80077ee:	f7fb fae1 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80077f2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80077f4:	4629      	mov	r1, r5
 80077f6:	f010 fb16 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80077fa:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80077fc:	f884 5401 	strb.w	r5, [r4, #1025]	@ 0x401
 8007800:	4630      	mov	r0, r6
 8007802:	f00d fc7b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH4_ID));
 8007806:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8007808:	2311      	movs	r3, #17
 800780a:	a939      	add	r1, sp, #228	@ 0xe4
 800780c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007810:	f011 f9ea 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID_1.setPosition(126, 6, 105, 29);
 8007814:	463a      	mov	r2, r7
 8007816:	2369      	movs	r3, #105	@ 0x69
 8007818:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800781a:	f8cd 9000 	str.w	r9, [sp]
 800781e:	217e      	movs	r1, #126	@ 0x7e
 8007820:	f7fb fac8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007824:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8007826:	4629      	mov	r1, r5
 8007828:	f010 fafd 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800782c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 800782e:	f884 542d 	strb.w	r5, [r4, #1069]	@ 0x42d
 8007832:	4630      	mov	r0, r6
 8007834:	f00d fc62 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH3_ID));
 8007838:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800783a:	2310      	movs	r3, #16
 800783c:	a939      	add	r1, sp, #228	@ 0xe4
 800783e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007842:	f011 f9d1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID_1.setPosition(126, 6, 105, 29);
 8007846:	463a      	mov	r2, r7
 8007848:	2369      	movs	r3, #105	@ 0x69
 800784a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800784c:	f8cd 9000 	str.w	r9, [sp]
 8007850:	217e      	movs	r1, #126	@ 0x7e
 8007852:	f7fb faaf 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007856:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8007858:	4629      	mov	r1, r5
 800785a:	f010 fae4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800785e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8007860:	f884 5459 	strb.w	r5, [r4, #1113]	@ 0x459
 8007864:	4630      	mov	r0, r6
 8007866:	f00d fc49 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH2_ID));
 800786a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 800786c:	f04f 030f 	mov.w	r3, #15
 8007870:	a939      	add	r1, sp, #228	@ 0xe4
 8007872:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007876:	f011 f9b7 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID_1.setPosition(126, 6, 105, 29);
 800787a:	463a      	mov	r2, r7
 800787c:	2369      	movs	r3, #105	@ 0x69
 800787e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8007880:	f8cd 9000 	str.w	r9, [sp]
 8007884:	217e      	movs	r1, #126	@ 0x7e
 8007886:	f7fb fa95 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800788a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 800788c:	4629      	mov	r1, r5
 800788e:	f010 faca 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007892:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8007894:	f884 5485 	strb.w	r5, [r4, #1157]	@ 0x485
 8007898:	4630      	mov	r0, r6
 800789a:	f00d fc2f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_10_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH1_ID));
 800789e:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80078a0:	f04f 030e 	mov.w	r3, #14
 80078a4:	a939      	add	r1, sp, #228	@ 0xe4
 80078a6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80078aa:	f011 f99d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID_1.setPosition(126, 6, 105, 29);
 80078ae:	463a      	mov	r2, r7
 80078b0:	2369      	movs	r3, #105	@ 0x69
 80078b2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80078b4:	f8cd 9000 	str.w	r9, [sp]
 80078b8:	217e      	movs	r1, #126	@ 0x7e
 80078ba:	f7fb fa7b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80078be:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80078c0:	4629      	mov	r1, r5
 80078c2:	f010 fab0 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80078c6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80078c8:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 80078cc:	4630      	mov	r0, r6
 80078ce:	f00d fc15 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH0_ID));
 80078d2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80078d4:	230d      	movs	r3, #13
 80078d6:	a939      	add	r1, sp, #228	@ 0xe4
 80078d8:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80078dc:	f011 f984 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID_1.setPosition(126, 6, 105, 29);
 80078e0:	463a      	mov	r2, r7
 80078e2:	2369      	movs	r3, #105	@ 0x69
 80078e4:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80078e6:	f8cd 9000 	str.w	r9, [sp]
 80078ea:	217e      	movs	r1, #126	@ 0x7e
 80078ec:	f7fb fa62 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80078f0:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80078f2:	4629      	mov	r1, r5
 80078f4:	f010 fa97 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80078f8:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80078fa:	f884 54dd 	strb.w	r5, [r4, #1245]	@ 0x4dd
 80078fe:	4630      	mov	r0, r6
 8007900:	f00d fbfc 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire1.setBitmap(touchgfx::Bitmap(BITMAP_FIRE1_ID));
 8007904:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8007906:	2328      	movs	r3, #40	@ 0x28
 8007908:	a939      	add	r1, sp, #228	@ 0xe4
 800790a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800790e:	f011 f96b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire1.setPosition(82, 154, 85, 87);
 8007912:	2357      	movs	r3, #87	@ 0x57
 8007914:	229a      	movs	r2, #154	@ 0x9a
 8007916:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8007918:	9300      	str	r3, [sp, #0]
 800791a:	2152      	movs	r1, #82	@ 0x52
 800791c:	2355      	movs	r3, #85	@ 0x55
 800791e:	f7fb fa49 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007922:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8007924:	4629      	mov	r1, r5
 8007926:	f010 fa7e 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800792a:	9919      	ldr	r1, [sp, #100]	@ 0x64
 800792c:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 8007930:	4630      	mov	r0, r6
 8007932:	f00d fbe3 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire2.setBitmap(touchgfx::Bitmap(BITMAP_FIRE2_ID));
 8007936:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8007938:	2329      	movs	r3, #41	@ 0x29
 800793a:	a939      	add	r1, sp, #228	@ 0xe4
 800793c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007940:	f011 f952 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire2.setPosition(-19, 43, 129, 209);
 8007944:	23d1      	movs	r3, #209	@ 0xd1
 8007946:	222b      	movs	r2, #43	@ 0x2b
 8007948:	981a      	ldr	r0, [sp, #104]	@ 0x68
 800794a:	9300      	str	r3, [sp, #0]
 800794c:	f06f 0112 	mvn.w	r1, #18
 8007950:	2381      	movs	r3, #129	@ 0x81
 8007952:	f7fb fa2f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007956:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8007958:	4629      	mov	r1, r5
 800795a:	f010 fa64 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800795e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8007960:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 8007964:	4630      	mov	r0, r6
 8007966:	f00d fbc9 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_lose.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_LOSE_ID));
 800796a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800796c:	2324      	movs	r3, #36	@ 0x24
 800796e:	a939      	add	r1, sp, #228	@ 0xe4
 8007970:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007974:	f011 f938 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_lose.setPosition(100, 137, 147, 115);
 8007978:	2373      	movs	r3, #115	@ 0x73
 800797a:	2289      	movs	r2, #137	@ 0x89
 800797c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800797e:	9300      	str	r3, [sp, #0]
 8007980:	2164      	movs	r1, #100	@ 0x64
 8007982:	2393      	movs	r3, #147	@ 0x93
 8007984:	f7fb fa16 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007988:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 800798a:	4629      	mov	r1, r5
 800798c:	f010 fa4b 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007990:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8007992:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 8007996:	4630      	mov	r0, r6
 8007998:	2720      	movs	r7, #32
 800799a:	f00d fbaf 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_win.setPosition(94, 62, 146, 172);
 800799e:	f04f 09ac 	mov.w	r9, #172	@ 0xac
    bleach_win.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 80079a2:	a939      	add	r1, sp, #228	@ 0xe4
 80079a4:	4658      	mov	r0, fp
 80079a6:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 80079aa:	f011 f91d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_win.setPosition(94, 62, 146, 172);
 80079ae:	2392      	movs	r3, #146	@ 0x92
 80079b0:	223e      	movs	r2, #62	@ 0x3e
 80079b2:	f8cd 9000 	str.w	r9, [sp]
 80079b6:	4658      	mov	r0, fp
 80079b8:	215e      	movs	r1, #94	@ 0x5e
 80079ba:	f7fb f9fb 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80079be:	4629      	mov	r1, r5
 80079c0:	4658      	mov	r0, fp
 80079c2:	f010 fa30 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80079c6:	4659      	mov	r1, fp
 80079c8:	4630      	mov	r0, r6
 80079ca:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 80079ce:	f00d fb95 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80079d2:	f04f 0b26 	mov.w	fp, #38	@ 0x26
    bleach_spe_fire.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_FIRE_ID));
 80079d6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80079d8:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 80079dc:	a939      	add	r1, sp, #228	@ 0xe4
 80079de:	f011 f903 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe_fire.setPosition(-11, 80, 186, 190);
 80079e2:	23be      	movs	r3, #190	@ 0xbe
 80079e4:	2250      	movs	r2, #80	@ 0x50
 80079e6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	f06f 010a 	mvn.w	r1, #10
 80079ee:	23ba      	movs	r3, #186	@ 0xba
 80079f0:	f7fb f9e0 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe_fire.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80079f4:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80079f6:	4629      	mov	r1, r5
 80079f8:	f010 fa15 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80079fc:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80079fe:	f884 55b9 	strb.w	r5, [r4, #1465]	@ 0x5b9
 8007a02:	4630      	mov	r0, r6
 8007a04:	f04f 0825 	mov.w	r8, #37	@ 0x25
 8007a08:	f00d fb78 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_ID));
 8007a0c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8007a0e:	f8ad 80e4 	strh.w	r8, [sp, #228]	@ 0xe4
 8007a12:	a939      	add	r1, sp, #228	@ 0xe4
 8007a14:	f011 f8e8 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe.setPosition(126, 48, 117, 130);
 8007a18:	2382      	movs	r3, #130	@ 0x82
 8007a1a:	2230      	movs	r2, #48	@ 0x30
 8007a1c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8007a1e:	9300      	str	r3, [sp, #0]
 8007a20:	217e      	movs	r1, #126	@ 0x7e
 8007a22:	2375      	movs	r3, #117	@ 0x75
 8007a24:	f7fb f9c6 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007a28:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8007a2a:	4629      	mov	r1, r5
 8007a2c:	f010 f9fb 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007a30:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8007a32:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 8007a36:	4630      	mov	r0, r6
 8007a38:	f00d fb60 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_def.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_DEF_ID));
 8007a3c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8007a3e:	2323      	movs	r3, #35	@ 0x23
 8007a40:	a939      	add	r1, sp, #228	@ 0xe4
 8007a42:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007a46:	f011 f8cf 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_def.setPosition(100, 62, 140, 179);
 8007a4a:	23b3      	movs	r3, #179	@ 0xb3
 8007a4c:	223e      	movs	r2, #62	@ 0x3e
 8007a4e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8007a50:	9300      	str	r3, [sp, #0]
 8007a52:	2164      	movs	r1, #100	@ 0x64
 8007a54:	238c      	movs	r3, #140	@ 0x8c
 8007a56:	f7fb f9ad 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007a5a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8007a5c:	4629      	mov	r1, r5
 8007a5e:	f010 f9e2 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007a62:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8007a64:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 8007a68:	4630      	mov	r0, r6
 8007a6a:	f00d fb47 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_atk.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ATK_ID));
 8007a6e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8007a70:	2321      	movs	r3, #33	@ 0x21
 8007a72:	a939      	add	r1, sp, #228	@ 0xe4
 8007a74:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007a78:	f011 f8b6 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_atk.setPosition(94, 62, 152, 172);
 8007a7c:	2398      	movs	r3, #152	@ 0x98
 8007a7e:	223e      	movs	r2, #62	@ 0x3e
 8007a80:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8007a82:	f8cd 9000 	str.w	r9, [sp]
 8007a86:	215e      	movs	r1, #94	@ 0x5e
 8007a88:	f7fb f994 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007a8c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8007a8e:	4629      	mov	r1, r5
 8007a90:	f010 f9c9 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007a94:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 8007a96:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 8007a9a:	4630      	mov	r0, r6
 8007a9c:	f00d fb2e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 8007aa0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8007aa2:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 8007aa6:	a939      	add	r1, sp, #228	@ 0xe4
 8007aa8:	f011 f89e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(100, 62, 146, 172);
 8007aac:	223e      	movs	r2, #62	@ 0x3e
 8007aae:	2392      	movs	r3, #146	@ 0x92
 8007ab0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8007ab2:	f8cd 9000 	str.w	r9, [sp]
 8007ab6:	2164      	movs	r1, #100	@ 0x64
 8007ab8:	f7fb f97c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007abc:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8007abe:	4629      	mov	r1, r5
 8007ac0:	f010 f9b1 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007ac4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8007ac6:	4630      	mov	r0, r6
 8007ac8:	f00d fb18 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto.setPosition(15, 148, 67, 85);
 8007acc:	f04f 0955 	mov.w	r9, #85	@ 0x55
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_NAGUTO_ID));
 8007ad0:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8007ad2:	2333      	movs	r3, #51	@ 0x33
 8007ad4:	a939      	add	r1, sp, #228	@ 0xe4
 8007ad6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007ada:	f011 f885 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(15, 148, 67, 85);
 8007ade:	4653      	mov	r3, sl
 8007ae0:	2294      	movs	r2, #148	@ 0x94
 8007ae2:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8007ae4:	f8cd 9000 	str.w	r9, [sp]
 8007ae8:	210f      	movs	r1, #15
 8007aea:	f7fb f963 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007aee:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8007af0:	4629      	mov	r1, r5
 8007af2:	f010 f998 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007af6:	9921      	ldr	r1, [sp, #132]	@ 0x84
 8007af8:	4630      	mov	r0, r6
 8007afa:	f00d faff 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_win.setPosition(18, 138, 70, 96);
 8007afe:	f04f 0a60 	mov.w	sl, #96	@ 0x60
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_WIN_ID));
 8007b02:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8007b04:	2338      	movs	r3, #56	@ 0x38
 8007b06:	a939      	add	r1, sp, #228	@ 0xe4
 8007b08:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007b0c:	f011 f86c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_win.setPosition(18, 138, 70, 96);
 8007b10:	228a      	movs	r2, #138	@ 0x8a
 8007b12:	2346      	movs	r3, #70	@ 0x46
 8007b14:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8007b16:	f8cd a000 	str.w	sl, [sp]
 8007b1a:	2112      	movs	r1, #18
 8007b1c:	f7fb f94a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007b20:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8007b22:	4629      	mov	r1, r5
 8007b24:	f010 f97f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007b28:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8007b2a:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 8007b2e:	4630      	mov	r0, r6
 8007b30:	f00d fae4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_lose.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DIE_ID));
 8007b34:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8007b36:	2336      	movs	r3, #54	@ 0x36
 8007b38:	a939      	add	r1, sp, #228	@ 0xe4
 8007b3a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007b3e:	f011 f853 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_lose.setPosition(23, 167, 71, 85);
 8007b42:	22a7      	movs	r2, #167	@ 0xa7
 8007b44:	2347      	movs	r3, #71	@ 0x47
 8007b46:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8007b48:	f8cd 9000 	str.w	r9, [sp]
 8007b4c:	2117      	movs	r1, #23
 8007b4e:	f7fb f931 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007b52:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8007b54:	4629      	mov	r1, r5
 8007b56:	f010 f966 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007b5a:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 8007b5c:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 8007b60:	4630      	mov	r0, r6
 8007b62:	f00d facb 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_SPE_ID));
 8007b66:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8007b68:	2337      	movs	r3, #55	@ 0x37
 8007b6a:	a939      	add	r1, sp, #228	@ 0xe4
 8007b6c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007b70:	f011 f83a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(38, 130, 72, 104);
 8007b74:	2368      	movs	r3, #104	@ 0x68
 8007b76:	2282      	movs	r2, #130	@ 0x82
 8007b78:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8007b7a:	9300      	str	r3, [sp, #0]
 8007b7c:	4659      	mov	r1, fp
 8007b7e:	2348      	movs	r3, #72	@ 0x48
 8007b80:	f7fb f918 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007b84:	9824      	ldr	r0, [sp, #144]	@ 0x90
 8007b86:	4629      	mov	r1, r5
 8007b88:	f010 f94d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007b8c:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8007b8e:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 8007b92:	4630      	mov	r0, r6
 8007b94:	f00d fab2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_DEF_ID));
 8007b98:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8007b9a:	2335      	movs	r3, #53	@ 0x35
 8007b9c:	a939      	add	r1, sp, #228	@ 0xe4
 8007b9e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007ba2:	f011 f821 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(15, 142, 67, 85);
 8007ba6:	228e      	movs	r2, #142	@ 0x8e
 8007ba8:	2343      	movs	r3, #67	@ 0x43
 8007baa:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8007bac:	f8cd 9000 	str.w	r9, [sp]
 8007bb0:	210f      	movs	r1, #15
 8007bb2:	f7fb f8ff 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007bb6:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8007bb8:	4629      	mov	r1, r5
 8007bba:	f010 f934 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007bbe:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8007bc0:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 8007bc4:	4630      	mov	r0, r6
 8007bc6:	f00d fa99 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_NARUTO_ATK_ID));
 8007bca:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8007bcc:	2334      	movs	r3, #52	@ 0x34
 8007bce:	a939      	add	r1, sp, #228	@ 0xe4
 8007bd0:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007bd4:	f011 f808 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(38, 137, 72, 96);
 8007bd8:	2348      	movs	r3, #72	@ 0x48
 8007bda:	2289      	movs	r2, #137	@ 0x89
 8007bdc:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8007bde:	f8cd a000 	str.w	sl, [sp]
 8007be2:	4659      	mov	r1, fp
 8007be4:	f7fb f8e6 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007be8:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8007bea:	f8df a34c 	ldr.w	sl, [pc, #844]	@ 8007f38 <_ZN25NarutoGameScreen2ViewBaseC1Ev+0xfa0>
 8007bee:	4629      	mov	r1, r5
 8007bf0:	f010 f919 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007bf4:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8007bf6:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 8007bfa:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 8007bfc:	f04f 092e 	mov.w	r9, #46	@ 0x2e
 8007c00:	f00d fa7c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 8007c04:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8007c06:	f8ad 50e4 	strh.w	r5, [sp, #228]	@ 0xe4
 8007c0a:	a939      	add	r1, sp, #228	@ 0xe4
 8007c0c:	f010 ffec 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 8007c10:	464b      	mov	r3, r9
 8007c12:	22f2      	movs	r2, #242	@ 0xf2
 8007c14:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8007c16:	f8cd 9000 	str.w	r9, [sp]
 8007c1a:	2140      	movs	r1, #64	@ 0x40
 8007c1c:	f7fb f8ca 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007c20:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8007c22:	4629      	mov	r1, r5
 8007c24:	f010 f8ff 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007c28:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 8007c2a:	f884 579d 	strb.w	r5, [r4, #1949]	@ 0x79d
 8007c2e:	4630      	mov	r0, r6
 8007c30:	f00d fa64 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8007c34:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8007c36:	231f      	movs	r3, #31
 8007c38:	a939      	add	r1, sp, #228	@ 0xe4
 8007c3a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007c3e:	f010 ffd3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 8007c42:	464b      	mov	r3, r9
 8007c44:	22f2      	movs	r2, #242	@ 0xf2
 8007c46:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8007c48:	f8cd 9000 	str.w	r9, [sp]
 8007c4c:	217c      	movs	r1, #124	@ 0x7c
 8007c4e:	f7fb f8b1 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007c52:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8007c54:	4629      	mov	r1, r5
 8007c56:	f010 f8e6 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007c5a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8007c5c:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 8007c60:	4630      	mov	r0, r6
 8007c62:	f00d fa4b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 8007c66:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8007c68:	234c      	movs	r3, #76	@ 0x4c
 8007c6a:	a939      	add	r1, sp, #228	@ 0xe4
 8007c6c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007c70:	f010 ffba 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 8007c74:	464b      	mov	r3, r9
 8007c76:	22f2      	movs	r2, #242	@ 0xf2
 8007c78:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8007c7a:	f8cd 9000 	str.w	r9, [sp]
 8007c7e:	21b8      	movs	r1, #184	@ 0xb8
 8007c80:	f7fb f898 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007c84:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8007c86:	4629      	mov	r1, r5
 8007c88:	f010 f8cd 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007c8c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8007c8e:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5
 8007c92:	4630      	mov	r0, r6
 8007c94:	f00d fa32 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 8007c98:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8007c9a:	f04f 033a 	mov.w	r3, #58	@ 0x3a
 8007c9e:	a939      	add	r1, sp, #228	@ 0xe4
 8007ca0:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007ca4:	f010 ffa0 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 8007ca8:	464b      	mov	r3, r9
 8007caa:	22f1      	movs	r2, #241	@ 0xf1
 8007cac:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8007cae:	f8cd 9000 	str.w	r9, [sp]
 8007cb2:	2102      	movs	r1, #2
 8007cb4:	f7fb f87e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007cb8:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8007cba:	4629      	mov	r1, r5
 8007cbc:	f010 f8b3 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007cc0:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8007cc2:	f884 5821 	strb.w	r5, [r4, #2081]	@ 0x821
 8007cc6:	4630      	mov	r0, r6
 8007cc8:	f00d fa18 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 8007ccc:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8007cce:	2339      	movs	r3, #57	@ 0x39
 8007cd0:	a939      	add	r1, sp, #228	@ 0xe4
 8007cd2:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007cd6:	f010 ff87 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 8007cda:	464b      	mov	r3, r9
 8007cdc:	22f1      	movs	r2, #241	@ 0xf1
 8007cde:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8007ce0:	f8cd 9000 	str.w	r9, [sp]
 8007ce4:	2102      	movs	r1, #2
 8007ce6:	f7fb f865 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007cea:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8007cec:	4629      	mov	r1, r5
 8007cee:	f010 f89a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    chakra_box1.setPosition(14, 43, 86, 5);
 8007cf2:	f04f 0905 	mov.w	r9, #5
 8007cf6:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8007cf8:	4630      	mov	r0, r6
 8007cfa:	f00d f9ff 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007cfe:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 8007d00:	f8cd 9000 	str.w	r9, [sp]
 8007d04:	2356      	movs	r3, #86	@ 0x56
 8007d06:	222b      	movs	r2, #43	@ 0x2b
 8007d08:	210e      	movs	r1, #14
 8007d0a:	f7fb f853 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d0e:	9936      	ldr	r1, [sp, #216]	@ 0xd8
 8007d10:	f8c4 a87c 	str.w	sl, [r4, #2172]	@ 0x87c
 8007d14:	4630      	mov	r0, r6
 8007d16:	f00d f9f1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakra_box2.setPosition(135, 43, 86, 5);
 8007d1a:	222b      	movs	r2, #43	@ 0x2b
 8007d1c:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 8007d1e:	f8cd 9000 	str.w	r9, [sp]
 8007d22:	2356      	movs	r3, #86	@ 0x56
 8007d24:	2187      	movs	r1, #135	@ 0x87
 8007d26:	f7fb f845 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d2a:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 8007d2c:	f8c4 a8a8 	str.w	sl, [r4, #2216]	@ 0x8a8
 8007d30:	4630      	mov	r0, r6
 8007d32:	f00d f9e3 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gameover.setPosition(65, 6, 110, 157);
 8007d36:	f04f 099d 	mov.w	r9, #157	@ 0x9d
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 8007d3a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8007d3c:	232a      	movs	r3, #42	@ 0x2a
 8007d3e:	a939      	add	r1, sp, #228	@ 0xe4
 8007d40:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007d44:	f010 ff50 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.setPosition(65, 6, 110, 157);
 8007d48:	2206      	movs	r2, #6
 8007d4a:	236e      	movs	r3, #110	@ 0x6e
 8007d4c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8007d4e:	f8cd 9000 	str.w	r9, [sp]
 8007d52:	2141      	movs	r1, #65	@ 0x41
 8007d54:	f7fb f82e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    gameover.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007d58:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8007d5a:	4629      	mov	r1, r5
 8007d5c:	f010 f863 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007d60:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8007d62:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 8007d66:	4630      	mov	r0, r6
 8007d68:	f00d f9c8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    win.setBitmap(touchgfx::Bitmap(BITMAP_YOUWIN_ID));
 8007d6c:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8007d6e:	2359      	movs	r3, #89	@ 0x59
 8007d70:	a939      	add	r1, sp, #228	@ 0xe4
 8007d72:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8007d76:	f010 ff37 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    win.setPosition(65, 6, 110, 157);
 8007d7a:	236e      	movs	r3, #110	@ 0x6e
 8007d7c:	2206      	movs	r2, #6
 8007d7e:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8007d80:	f8cd 9000 	str.w	r9, [sp]
 8007d84:	2141      	movs	r1, #65	@ 0x41
 8007d86:	f7fb f815 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007d8a:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 8007d8c:	4629      	mov	r1, r5
 8007d8e:	f010 f84a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007d92:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8007d94:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 8007d98:	4630      	mov	r0, r6
 8007d9a:	f00d f9af 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007d9e:	f04f 0958 	mov.w	r9, #88	@ 0x58
    x2dame_2.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8007da2:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8007da4:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007da8:	a939      	add	r1, sp, #228	@ 0xe4
 8007daa:	f010 ff1d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_2.setPosition(199, 61, 32, 37);
 8007dae:	463b      	mov	r3, r7
 8007db0:	223d      	movs	r2, #61	@ 0x3d
 8007db2:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8007db4:	f8cd 8000 	str.w	r8, [sp]
 8007db8:	21c7      	movs	r1, #199	@ 0xc7
 8007dba:	f7fa fffb 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007dbe:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8007dc0:	4629      	mov	r1, r5
 8007dc2:	f010 f830 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007dc6:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 8007dc8:	f884 5929 	strb.w	r5, [r4, #2345]	@ 0x929
 8007dcc:	4630      	mov	r0, r6
 8007dce:	f00d f995 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_1.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 8007dd2:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8007dd4:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007dd8:	a939      	add	r1, sp, #228	@ 0xe4
 8007dda:	f010 ff05 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_1.setPosition(7, 61, 32, 37);
 8007dde:	463b      	mov	r3, r7
 8007de0:	223d      	movs	r2, #61	@ 0x3d
 8007de2:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8007de4:	f8cd 8000 	str.w	r8, [sp]
 8007de8:	2107      	movs	r1, #7
 8007dea:	f7fa ffe3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007dee:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8007df0:	4629      	mov	r1, r5
 8007df2:	f010 f818 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007df6:	992f      	ldr	r1, [sp, #188]	@ 0xbc
 8007df8:	f884 5955 	strb.w	r5, [r4, #2389]	@ 0x955
 8007dfc:	4630      	mov	r0, r6
 8007dfe:	f00d f97d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e02:	f04f 092c 	mov.w	r9, #44	@ 0x2c
    healthplus_1.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8007e06:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8007e08:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007e0c:	a939      	add	r1, sp, #228	@ 0xe4
 8007e0e:	f010 feeb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_1.setPosition(9, 61, 32, 37);
 8007e12:	463b      	mov	r3, r7
 8007e14:	223d      	movs	r2, #61	@ 0x3d
 8007e16:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8007e18:	f8cd 8000 	str.w	r8, [sp]
 8007e1c:	2109      	movs	r1, #9
 8007e1e:	f7fa ffc9 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007e22:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8007e24:	4629      	mov	r1, r5
 8007e26:	f00f fffe 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007e2a:	9930      	ldr	r1, [sp, #192]	@ 0xc0
 8007e2c:	f884 5981 	strb.w	r5, [r4, #2433]	@ 0x981
 8007e30:	4630      	mov	r0, r6
 8007e32:	f00d f963 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e36:	f04f 0a1e 	mov.w	sl, #30
    chakragain_1.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 8007e3a:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8007e3c:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8007e40:	a939      	add	r1, sp, #228	@ 0xe4
 8007e42:	f010 fed1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_1.setPosition(9, 61, 32, 37);
 8007e46:	463b      	mov	r3, r7
 8007e48:	223d      	movs	r2, #61	@ 0x3d
 8007e4a:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8007e4c:	f8cd 8000 	str.w	r8, [sp]
 8007e50:	2109      	movs	r1, #9
 8007e52:	f7fa ffaf 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007e56:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8007e58:	4629      	mov	r1, r5
 8007e5a:	f00f ffe4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007e5e:	9931      	ldr	r1, [sp, #196]	@ 0xc4
 8007e60:	f884 59ad 	strb.w	r5, [r4, #2477]	@ 0x9ad
 8007e64:	4630      	mov	r0, r6
 8007e66:	f00d f949 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e6a:	f04f 0b4b 	mov.w	fp, #75	@ 0x4b
    sheild_1.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 8007e6e:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8007e70:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 8007e74:	a939      	add	r1, sp, #228	@ 0xe4
 8007e76:	f010 feb7 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_1.setPosition(8, 59, 32, 37);
 8007e7a:	463b      	mov	r3, r7
 8007e7c:	223b      	movs	r2, #59	@ 0x3b
 8007e7e:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8007e80:	f8cd 8000 	str.w	r8, [sp]
 8007e84:	2108      	movs	r1, #8
 8007e86:	f7fa ff95 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007e8a:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 8007e8c:	4629      	mov	r1, r5
 8007e8e:	f00f ffca 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007e92:	9932      	ldr	r1, [sp, #200]	@ 0xc8
 8007e94:	f884 59d9 	strb.w	r5, [r4, #2521]	@ 0x9d9
 8007e98:	4630      	mov	r0, r6
 8007e9a:	f00d f92f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sheild_2.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 8007e9e:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8007ea0:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 8007ea4:	a939      	add	r1, sp, #228	@ 0xe4
 8007ea6:	f010 fe9f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_2.setPosition(199, 58, 32, 37);
 8007eaa:	463b      	mov	r3, r7
 8007eac:	223a      	movs	r2, #58	@ 0x3a
 8007eae:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8007eb0:	f8cd 8000 	str.w	r8, [sp]
 8007eb4:	21c7      	movs	r1, #199	@ 0xc7
 8007eb6:	f7fa ff7d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007eba:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8007ebc:	4629      	mov	r1, r5
 8007ebe:	f00f ffb2 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007ec2:	9933      	ldr	r1, [sp, #204]	@ 0xcc
 8007ec4:	f884 5a05 	strb.w	r5, [r4, #2565]	@ 0xa05
 8007ec8:	4630      	mov	r0, r6
 8007eca:	f00d f917 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakragain_2.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 8007ece:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8007ed0:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8007ed4:	a939      	add	r1, sp, #228	@ 0xe4
 8007ed6:	f010 fe87 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_2.setPosition(199, 61, 32, 37);
 8007eda:	463b      	mov	r3, r7
 8007edc:	223d      	movs	r2, #61	@ 0x3d
 8007ede:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8007ee0:	f8cd 8000 	str.w	r8, [sp]
 8007ee4:	21c7      	movs	r1, #199	@ 0xc7
 8007ee6:	f7fa ff65 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007eea:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8007eec:	4629      	mov	r1, r5
 8007eee:	f00f ff9a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007ef2:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 8007ef4:	f884 5a31 	strb.w	r5, [r4, #2609]	@ 0xa31
 8007ef8:	4630      	mov	r0, r6
 8007efa:	f00d f8ff 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    healthplus_2.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8007efe:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8007f00:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8007f04:	a939      	add	r1, sp, #228	@ 0xe4
 8007f06:	f010 fe6f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_2.setPosition(199, 61, 32, 37);
 8007f0a:	463b      	mov	r3, r7
 8007f0c:	223d      	movs	r2, #61	@ 0x3d
 8007f0e:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8007f10:	f8cd 8000 	str.w	r8, [sp]
 8007f14:	21c7      	movs	r1, #199	@ 0xc7
 8007f16:	f7fa ff4d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8007f1a:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8007f1c:	4629      	mov	r1, r5
 8007f1e:	f00f ff82 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8007f22:	4630      	mov	r0, r6
 8007f24:	9935      	ldr	r1, [sp, #212]	@ 0xd4
 8007f26:	f884 5a5d 	strb.w	r5, [r4, #2653]	@ 0xa5d
 8007f2a:	f00d f8e7 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007f2e:	4620      	mov	r0, r4
 8007f30:	b03b      	add	sp, #236	@ 0xec
 8007f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f36:	bf00      	nop
 8007f38:	ff0066ff 	.word	0xff0066ff

08007f3c <_ZN8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f3c:	4770      	bx	lr

08007f3e <_ZN25RewardFinalScreenViewBaseD1Ev>:
}

RewardFinalScreenViewBase::~RewardFinalScreenViewBase()
{

}
 8007f3e:	4770      	bx	lr

08007f40 <_ZN25RewardFinalScreenViewBase11setupScreenEv>:

void RewardFinalScreenViewBase::setupScreen()
{

}
 8007f40:	4770      	bx	lr

08007f42 <_ZN8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007f42:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f44:	68c2      	ldr	r2, [r0, #12]
 8007f46:	6844      	ldr	r4, [r0, #4]
 8007f48:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007f4a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007f4c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007f50:	07d2      	lsls	r2, r2, #31
 8007f52:	bf48      	it	mi
 8007f54:	5962      	ldrmi	r2, [r4, r5]
 8007f56:	689b      	ldr	r3, [r3, #8]
    }
 8007f58:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f5a:	bf48      	it	mi
 8007f5c:	58d3      	ldrmi	r3, [r2, r3]
 8007f5e:	4718      	bx	r3

08007f60 <_ZNK8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8007f60:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8007f62:	6840      	ldr	r0, [r0, #4]
 8007f64:	b130      	cbz	r0, 8007f74 <_ZNK8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8007f66:	689a      	ldr	r2, [r3, #8]
 8007f68:	b91a      	cbnz	r2, 8007f72 <_ZNK8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8007f6a:	68d8      	ldr	r0, [r3, #12]
 8007f6c:	f000 0001 	and.w	r0, r0, #1
 8007f70:	4770      	bx	lr
 8007f72:	2001      	movs	r0, #1
    }
 8007f74:	4770      	bx	lr

08007f76 <_ZN8touchgfx8CallbackI25RewardFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f76:	b510      	push	{r4, lr}
 8007f78:	2110      	movs	r1, #16
 8007f7a:	4604      	mov	r4, r0
 8007f7c:	f025 fcd3 	bl	802d926 <_ZdlPvj>
 8007f80:	4620      	mov	r0, r4
 8007f82:	bd10      	pop	{r4, pc}

08007f84 <_ZN25RewardFinalScreenViewBaseD0Ev>:
RewardFinalScreenViewBase::~RewardFinalScreenViewBase()
 8007f84:	b510      	push	{r4, lr}
}
 8007f86:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
RewardFinalScreenViewBase::~RewardFinalScreenViewBase()
 8007f8a:	4604      	mov	r4, r0
}
 8007f8c:	f025 fccb 	bl	802d926 <_ZdlPvj>
 8007f90:	4620      	mov	r0, r4
 8007f92:	bd10      	pop	{r4, pc}

08007f94 <_ZN25RewardFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void RewardFinalScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &REWARD)
 8007f94:	30c4      	adds	r0, #196	@ 0xc4
 8007f96:	4288      	cmp	r0, r1
{
 8007f98:	b508      	push	{r3, lr}
    if (&src == &REWARD)
 8007f9a:	d105      	bne.n	8007fa8 <_ZN25RewardFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~RewardFinalScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007f9c:	f013 fa32 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //BackHome
        //When REWARD clicked change screen to SakuraFinalScreen
        //Go to SakuraFinalScreen with no screen transition
        application().gotoSakuraFinalScreenScreenNoTransition();
    }
}
 8007fa0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraFinalScreenScreenNoTransition();
 8007fa4:	f7fc b864 	b.w	8004070 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>
}
 8007fa8:	bd08      	pop	{r3, pc}
	...

08007fac <_ZN25RewardFinalScreenViewBaseC1Ev>:
RewardFinalScreenViewBase::RewardFinalScreenViewBase() :
 8007fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fb0:	4604      	mov	r4, r0
 8007fb2:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &RewardFinalScreenViewBase::flexButtonCallbackHandler)
 8007fb4:	46a2      	mov	sl, r4
 8007fb6:	2500      	movs	r5, #0
 8007fb8:	f015 fa4a 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8007fbc:	4b9a      	ldr	r3, [pc, #616]	@ (8008228 <_ZN25RewardFinalScreenViewBaseC1Ev+0x27c>)
 8007fbe:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8007fc0:	f84a 3b40 	str.w	r3, [sl], #64
 8007fc4:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8007fc8:	4650      	mov	r0, sl
 8007fca:	f7fa ff07 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8007fce:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8007fd2:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8007fd6:	a907      	add	r1, sp, #28
 8007fd8:	4648      	mov	r0, r9
 8007fda:	f8ad 601c 	strh.w	r6, [sp, #28]
 8007fde:	f00f ff67 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8007fe2:	a907      	add	r1, sp, #28
 8007fe4:	4640      	mov	r0, r8
 8007fe6:	f8ad 601c 	strh.w	r6, [sp, #28]
 8007fea:	f00f ff61 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 8007fee:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8007ff2:	f8a4 30f0 	strh.w	r3, [r4, #240]	@ 0xf0
        touchable = touch;
 8007ff6:	f240 1301 	movw	r3, #257	@ 0x101
 8007ffa:	f8a4 30e8 	strh.w	r3, [r4, #232]	@ 0xe8
        : T(), up(), down()
 8007ffe:	4b8b      	ldr	r3, [pc, #556]	@ (800822c <_ZN25RewardFinalScreenViewBaseC1Ev+0x280>)
 8008000:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
        : Box(), borderColor(0), borderSize(0)
 8008004:	f104 03f8 	add.w	r3, r4, #248	@ 0xf8
        : x(0), y(0), width(0), height(0)
 8008008:	e9c4 5532 	strd	r5, r5, [r4, #200]	@ 0xc8
 800800c:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
          nextSibling(0),
 8008010:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
          cachedAbsX(0),
 8008014:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
 8008018:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
 800801c:	f8c4 50f4 	str.w	r5, [r4, #244]	@ 0xf4
 8008020:	4618      	mov	r0, r3
 8008022:	9305      	str	r3, [sp, #20]
 8008024:	f7fa feda 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8008028:	4b81      	ldr	r3, [pc, #516]	@ (8008230 <_ZN25RewardFinalScreenViewBaseC1Ev+0x284>)
 800802a:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
        borderBox.setXY(0, 0);
 800802e:	462a      	mov	r2, r5
 8008030:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8008034:	9805      	ldr	r0, [sp, #20]
        : color(col)
 8008036:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 800803a:	4629      	mov	r1, r5
        : color(0)
 800803c:	e9c4 554b 	strd	r5, r5, [r4, #300]	@ 0x12c
 8008040:	e9c4 554d 	strd	r5, r5, [r4, #308]	@ 0x134
 8008044:	f8a4 5128 	strh.w	r5, [r4, #296]	@ 0x128
 8008048:	f7fa fea7 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800804c:	9905      	ldr	r1, [sp, #20]
 800804e:	4638      	mov	r0, r7
 8008050:	f00d f854 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008054:	f504 739e 	add.w	r3, r4, #316	@ 0x13c
 8008058:	a907      	add	r1, sp, #28
 800805a:	4618      	mov	r0, r3
 800805c:	9303      	str	r3, [sp, #12]
 800805e:	f8ad 601c 	strh.w	r6, [sp, #28]
 8008062:	f00f ff25 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008066:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
 800806a:	f504 7bca 	add.w	fp, r4, #404	@ 0x194
 800806e:	a907      	add	r1, sp, #28
 8008070:	4618      	mov	r0, r3
 8008072:	9304      	str	r3, [sp, #16]
 8008074:	f8ad 601c 	strh.w	r6, [sp, #28]
 8008078:	f00f ff1a 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800807c:	a907      	add	r1, sp, #28
 800807e:	4658      	mov	r0, fp
 8008080:	f8ad 601c 	strh.w	r6, [sp, #28]
 8008084:	f00f ff14 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008088:	4b6a      	ldr	r3, [pc, #424]	@ (8008234 <_ZN25RewardFinalScreenViewBaseC1Ev+0x288>)
 800808a:	e9c4 3470 	strd	r3, r4, [r4, #448]	@ 0x1c0
 800808e:	4b6a      	ldr	r3, [pc, #424]	@ (8008238 <_ZN25RewardFinalScreenViewBaseC1Ev+0x28c>)
 8008090:	e9c4 3572 	strd	r3, r5, [r4, #456]	@ 0x1c8
    __background.setPosition(0, 0, 240, 320);
 8008094:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008098:	462a      	mov	r2, r5
 800809a:	9300      	str	r3, [sp, #0]
 800809c:	4629      	mov	r1, r5
 800809e:	4650      	mov	r0, sl
 80080a0:	23f0      	movs	r3, #240	@ 0xf0
 80080a2:	f7fa fe87 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80080a6:	1d26      	adds	r6, r4, #4
 80080a8:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80080ac:	66a3      	str	r3, [r4, #104]	@ 0x68
 80080ae:	4651      	mov	r1, sl
 80080b0:	4630      	mov	r0, r6
 80080b2:	f00d f823 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80080b6:	2340      	movs	r3, #64	@ 0x40
    background.setBitmap(touchgfx::Bitmap(BITMAP_REWARD3_ID));
 80080b8:	a907      	add	r1, sp, #28
 80080ba:	4648      	mov	r0, r9
 80080bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80080c0:	f010 fd92 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, -6, 240, 334);
 80080c4:	f44f 73a7 	mov.w	r3, #334	@ 0x14e
 80080c8:	f06f 0205 	mvn.w	r2, #5
 80080cc:	9300      	str	r3, [sp, #0]
 80080ce:	4629      	mov	r1, r5
 80080d0:	23f0      	movs	r3, #240	@ 0xf0
 80080d2:	4648      	mov	r0, r9
 80080d4:	f7fa fe6e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80080d8:	4629      	mov	r1, r5
 80080da:	4648      	mov	r0, r9
 80080dc:	f00f fea3 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80080e0:	4649      	mov	r1, r9
 80080e2:	4630      	mov	r0, r6
 80080e4:	f00d f80a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80080e8:	f04f 092d 	mov.w	r9, #45	@ 0x2d
    home.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ID));
 80080ec:	a907      	add	r1, sp, #28
 80080ee:	4640      	mov	r0, r8
 80080f0:	f8ad 901c 	strh.w	r9, [sp, #28]
 80080f4:	f010 fd78 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    home.setPosition(187, 278, 59, 42);
 80080f8:	232a      	movs	r3, #42	@ 0x2a
 80080fa:	f44f 728b 	mov.w	r2, #278	@ 0x116
 80080fe:	9300      	str	r3, [sp, #0]
 8008100:	4640      	mov	r0, r8
 8008102:	233b      	movs	r3, #59	@ 0x3b
 8008104:	21bb      	movs	r1, #187	@ 0xbb
 8008106:	f7fa fe55 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    home.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800810a:	4629      	mov	r1, r5
 800810c:	4640      	mov	r0, r8
 800810e:	f00f fe8a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008112:	4641      	mov	r1, r8
 8008114:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 8008116:	f04f 082f 	mov.w	r8, #47	@ 0x2f
 800811a:	f00c ffef 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800811e:	462a      	mov	r2, r5
 8008120:	4629      	mov	r1, r5
 8008122:	9805      	ldr	r0, [sp, #20]
 8008124:	f8cd 8000 	str.w	r8, [sp]
 8008128:	232c      	movs	r3, #44	@ 0x2c
 800812a:	f7fa fe43 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 800812e:	2305      	movs	r3, #5
 8008130:	f8a4 3128 	strh.w	r3, [r4, #296]	@ 0x128
        up = colorReleased;
 8008134:	4b41      	ldr	r3, [pc, #260]	@ (800823c <_ZN25RewardFinalScreenViewBaseC1Ev+0x290>)
 8008136:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
        down = colorPressed;
 800813a:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 800813e:	3333      	adds	r3, #51	@ 0x33
 8008140:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        borderUp = borderColorReleased;
 8008144:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8008148:	3b66      	subs	r3, #102	@ 0x66
 800814a:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
        borderDown = borderColorPressed;
 800814e:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8008152:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8008156:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
        handlePressedUpdated();
 800815a:	4638      	mov	r0, r7
 800815c:	f8d4 a0c4 	ldr.w	sl, [r4, #196]	@ 0xc4
 8008160:	f7fa fd80 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8008164:	230a      	movs	r3, #10
 8008166:	f884 30f1 	strb.w	r3, [r4, #241]	@ 0xf1
        handleAlphaUpdated();
 800816a:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 800816e:	4638      	mov	r0, r7
 8008170:	4798      	blx	r3
    REWARD.setAction(flexButtonCallback);
 8008172:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
        action = &callback;
 8008176:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
    REWARD.setPosition(194, 273, 44, 47);
 800817a:	f240 1211 	movw	r2, #273	@ 0x111
 800817e:	232c      	movs	r3, #44	@ 0x2c
 8008180:	4638      	mov	r0, r7
 8008182:	f8cd 8000 	str.w	r8, [sp]
 8008186:	21c2      	movs	r1, #194	@ 0xc2
 8008188:	f7fa fe14 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800818c:	4639      	mov	r1, r7
 800818e:	4630      	mov	r0, r6
 8008190:	f00c ffb4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sword.setBitmap(touchgfx::Bitmap(BITMAP_SWORD_ID));
 8008194:	9803      	ldr	r0, [sp, #12]
 8008196:	2354      	movs	r3, #84	@ 0x54
 8008198:	a907      	add	r1, sp, #28
 800819a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800819e:	f010 fd23 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sword.setPosition(25, 30, 61, 78);
 80081a2:	234e      	movs	r3, #78	@ 0x4e
 80081a4:	221e      	movs	r2, #30
 80081a6:	9803      	ldr	r0, [sp, #12]
 80081a8:	9300      	str	r3, [sp, #0]
 80081aa:	2119      	movs	r1, #25
 80081ac:	233d      	movs	r3, #61	@ 0x3d
 80081ae:	f7fa fe01 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sword.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80081b2:	9803      	ldr	r0, [sp, #12]
 80081b4:	4629      	mov	r1, r5
 80081b6:	f00f fe36 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80081ba:	9903      	ldr	r1, [sp, #12]
 80081bc:	4630      	mov	r0, r6
 80081be:	f00c ff9d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dragontrophy.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_CUP_ID));
 80081c2:	9804      	ldr	r0, [sp, #16]
 80081c4:	2322      	movs	r3, #34	@ 0x22
 80081c6:	a907      	add	r1, sp, #28
 80081c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80081cc:	f010 fd0c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    dragontrophy.setPosition(82, 45, 82, 63);
 80081d0:	233f      	movs	r3, #63	@ 0x3f
 80081d2:	9300      	str	r3, [sp, #0]
 80081d4:	2352      	movs	r3, #82	@ 0x52
 80081d6:	464a      	mov	r2, r9
 80081d8:	4619      	mov	r1, r3
 80081da:	9804      	ldr	r0, [sp, #16]
 80081dc:	f7fa fdea 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    dragontrophy.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80081e0:	9804      	ldr	r0, [sp, #16]
 80081e2:	4629      	mov	r1, r5
 80081e4:	f00f fe1f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80081e8:	9904      	ldr	r1, [sp, #16]
 80081ea:	4630      	mov	r0, r6
 80081ec:	f00c ff86 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80081f0:	232b      	movs	r3, #43	@ 0x2b
    dragontrophy_1.setBitmap(touchgfx::Bitmap(BITMAP_HEAD_ID));
 80081f2:	a907      	add	r1, sp, #28
 80081f4:	4658      	mov	r0, fp
 80081f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80081fa:	f010 fcf5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    dragontrophy_1.setPosition(164, 30, 59, 85);
 80081fe:	2355      	movs	r3, #85	@ 0x55
 8008200:	221e      	movs	r2, #30
 8008202:	9300      	str	r3, [sp, #0]
 8008204:	4658      	mov	r0, fp
 8008206:	233b      	movs	r3, #59	@ 0x3b
 8008208:	21a4      	movs	r1, #164	@ 0xa4
 800820a:	f7fa fdd3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    dragontrophy_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800820e:	4629      	mov	r1, r5
 8008210:	4658      	mov	r0, fp
 8008212:	f00f fe08 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008216:	4630      	mov	r0, r6
 8008218:	4659      	mov	r1, fp
 800821a:	f00c ff6f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800821e:	4620      	mov	r0, r4
 8008220:	b009      	add	sp, #36	@ 0x24
 8008222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008226:	bf00      	nop
 8008228:	08032560 	.word	0x08032560
 800822c:	08031a6c 	.word	0x08031a6c
 8008230:	08033460 	.word	0x08033460
 8008234:	08032548 	.word	0x08032548
 8008238:	08007f95 	.word	0x08007f95
 800823c:	ff006699 	.word	0xff006699

08008240 <_ZN8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008240:	4770      	bx	lr

08008242 <_ZN20RewardScreenViewBaseD1Ev>:
}

RewardScreenViewBase::~RewardScreenViewBase()
{

}
 8008242:	4770      	bx	lr

08008244 <_ZN20RewardScreenViewBase11setupScreenEv>:

void RewardScreenViewBase::setupScreen()
{

}
 8008244:	4770      	bx	lr

08008246 <_ZN8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008246:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008248:	68c2      	ldr	r2, [r0, #12]
 800824a:	6844      	ldr	r4, [r0, #4]
 800824c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800824e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008250:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008254:	07d2      	lsls	r2, r2, #31
 8008256:	bf48      	it	mi
 8008258:	5962      	ldrmi	r2, [r4, r5]
 800825a:	689b      	ldr	r3, [r3, #8]
    }
 800825c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800825e:	bf48      	it	mi
 8008260:	58d3      	ldrmi	r3, [r2, r3]
 8008262:	4718      	bx	r3

08008264 <_ZNK8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8008264:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8008266:	6840      	ldr	r0, [r0, #4]
 8008268:	b130      	cbz	r0, 8008278 <_ZNK8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800826a:	689a      	ldr	r2, [r3, #8]
 800826c:	b91a      	cbnz	r2, 8008276 <_ZNK8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 800826e:	68d8      	ldr	r0, [r3, #12]
 8008270:	f000 0001 	and.w	r0, r0, #1
 8008274:	4770      	bx	lr
 8008276:	2001      	movs	r0, #1
    }
 8008278:	4770      	bx	lr

0800827a <_ZN8touchgfx8CallbackI20RewardScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800827a:	b510      	push	{r4, lr}
 800827c:	2110      	movs	r1, #16
 800827e:	4604      	mov	r4, r0
 8008280:	f025 fb51 	bl	802d926 <_ZdlPvj>
 8008284:	4620      	mov	r0, r4
 8008286:	bd10      	pop	{r4, pc}

08008288 <_ZN20RewardScreenViewBaseD0Ev>:
RewardScreenViewBase::~RewardScreenViewBase()
 8008288:	b510      	push	{r4, lr}
}
 800828a:	f44f 71bc 	mov.w	r1, #376	@ 0x178
RewardScreenViewBase::~RewardScreenViewBase()
 800828e:	4604      	mov	r4, r0
}
 8008290:	f025 fb49 	bl	802d926 <_ZdlPvj>
 8008294:	4620      	mov	r0, r4
 8008296:	bd10      	pop	{r4, pc}

08008298 <_ZN20RewardScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void RewardScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &REWARD)
 8008298:	30c4      	adds	r0, #196	@ 0xc4
 800829a:	4288      	cmp	r0, r1
{
 800829c:	b508      	push	{r3, lr}
    if (&src == &REWARD)
 800829e:	d105      	bne.n	80082ac <_ZN20RewardScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~RewardScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80082a0:	f013 f8b0 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //BackHome
        //When REWARD clicked change screen to SakuraMainScreen
        //Go to SakuraMainScreen with no screen transition
        application().gotoSakuraMainScreenScreenNoTransition();
    }
}
 80082a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraMainScreenScreenNoTransition();
 80082a8:	f7fb bea2 	b.w	8003ff0 <_ZN23FrontendApplicationBase38gotoSakuraMainScreenScreenNoTransitionEv>
}
 80082ac:	bd08      	pop	{r3, pc}
	...

080082b0 <_ZN20RewardScreenViewBaseC1Ev>:
RewardScreenViewBase::RewardScreenViewBase() :
 80082b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082b4:	4604      	mov	r4, r0
 80082b6:	b087      	sub	sp, #28
    flexButtonCallback(this, &RewardScreenViewBase::flexButtonCallbackHandler)
 80082b8:	46a3      	mov	fp, r4
 80082ba:	2500      	movs	r5, #0
 80082bc:	f015 f8c8 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 80082c0:	4b79      	ldr	r3, [pc, #484]	@ (80084a8 <_ZN20RewardScreenViewBaseC1Ev+0x1f8>)
 80082c2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80082c4:	f84b 3b40 	str.w	r3, [fp], #64
 80082c8:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 80082cc:	4658      	mov	r0, fp
 80082ce:	f7fa fd85 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 80082d2:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 80082d6:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80082da:	a905      	add	r1, sp, #20
 80082dc:	4650      	mov	r0, sl
 80082de:	f8ad 6014 	strh.w	r6, [sp, #20]
 80082e2:	f00f fde5 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80082e6:	a905      	add	r1, sp, #20
 80082e8:	4648      	mov	r0, r9
 80082ea:	f8ad 6014 	strh.w	r6, [sp, #20]
 80082ee:	f00f fddf 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pressed(false), alpha(255), action(0)
 80082f2:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 80082f6:	f8a4 30f0 	strh.w	r3, [r4, #240]	@ 0xf0
        touchable = touch;
 80082fa:	f240 1301 	movw	r3, #257	@ 0x101
 80082fe:	f8a4 30e8 	strh.w	r3, [r4, #232]	@ 0xe8
        : T(), up(), down()
 8008302:	4b6a      	ldr	r3, [pc, #424]	@ (80084ac <_ZN20RewardScreenViewBaseC1Ev+0x1fc>)
 8008304:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
        : Box(), borderColor(0), borderSize(0)
 8008308:	f104 03f8 	add.w	r3, r4, #248	@ 0xf8
        : x(0), y(0), width(0), height(0)
 800830c:	e9c4 5532 	strd	r5, r5, [r4, #200]	@ 0xc8
 8008310:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
          nextSibling(0),
 8008314:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
          cachedAbsX(0),
 8008318:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
 800831c:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
 8008320:	f8c4 50f4 	str.w	r5, [r4, #244]	@ 0xf4
 8008324:	4618      	mov	r0, r3
 8008326:	9303      	str	r3, [sp, #12]
 8008328:	f7fa fd58 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 800832c:	4b60      	ldr	r3, [pc, #384]	@ (80084b0 <_ZN20RewardScreenViewBaseC1Ev+0x200>)
 800832e:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
 8008332:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
        borderBox.setXY(0, 0);
 8008336:	462a      	mov	r2, r5
 8008338:	9803      	ldr	r0, [sp, #12]
        : color(col)
 800833a:	f8c4 5124 	str.w	r5, [r4, #292]	@ 0x124
 800833e:	4629      	mov	r1, r5
        : color(0)
 8008340:	e9c4 554b 	strd	r5, r5, [r4, #300]	@ 0x12c
 8008344:	e9c4 554d 	strd	r5, r5, [r4, #308]	@ 0x134
 8008348:	f8a4 5128 	strh.w	r5, [r4, #296]	@ 0x128
 800834c:	f7fa fd25 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8008350:	f504 779e 	add.w	r7, r4, #316	@ 0x13c
        T::add(borderBox);
 8008354:	9903      	ldr	r1, [sp, #12]
 8008356:	4640      	mov	r0, r8
 8008358:	f00c fed0 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800835c:	a905      	add	r1, sp, #20
 800835e:	4638      	mov	r0, r7
 8008360:	f8ad 6014 	strh.w	r6, [sp, #20]
 8008364:	f00f fda4 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008368:	4b52      	ldr	r3, [pc, #328]	@ (80084b4 <_ZN20RewardScreenViewBaseC1Ev+0x204>)
 800836a:	e9c4 345a 	strd	r3, r4, [r4, #360]	@ 0x168
 800836e:	4b52      	ldr	r3, [pc, #328]	@ (80084b8 <_ZN20RewardScreenViewBaseC1Ev+0x208>)
 8008370:	e9c4 355c 	strd	r3, r5, [r4, #368]	@ 0x170
    __background.setPosition(0, 0, 240, 320);
 8008374:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008378:	462a      	mov	r2, r5
 800837a:	9300      	str	r3, [sp, #0]
 800837c:	4629      	mov	r1, r5
 800837e:	4658      	mov	r0, fp
 8008380:	23f0      	movs	r3, #240	@ 0xf0
 8008382:	f7fa fd17 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008386:	1d26      	adds	r6, r4, #4
 8008388:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800838c:	66a3      	str	r3, [r4, #104]	@ 0x68
 800838e:	4659      	mov	r1, fp
 8008390:	4630      	mov	r0, r6
 8008392:	f00c feb3 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008396:	233e      	movs	r3, #62	@ 0x3e
    background.setBitmap(touchgfx::Bitmap(BITMAP_REWARD_ID));
 8008398:	a905      	add	r1, sp, #20
 800839a:	4650      	mov	r0, sl
 800839c:	f8ad 3014 	strh.w	r3, [sp, #20]
 80083a0:	f010 fc22 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, -6, 240, 334);
 80083a4:	f44f 73a7 	mov.w	r3, #334	@ 0x14e
 80083a8:	f06f 0205 	mvn.w	r2, #5
 80083ac:	9300      	str	r3, [sp, #0]
 80083ae:	4629      	mov	r1, r5
 80083b0:	23f0      	movs	r3, #240	@ 0xf0
 80083b2:	4650      	mov	r0, sl
 80083b4:	f7fa fcfe 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80083b8:	4629      	mov	r1, r5
 80083ba:	4650      	mov	r0, sl
 80083bc:	f00f fd33 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80083c0:	4651      	mov	r1, sl
 80083c2:	4630      	mov	r0, r6
 80083c4:	f00c fe9a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80083c8:	232d      	movs	r3, #45	@ 0x2d
    home.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ID));
 80083ca:	a905      	add	r1, sp, #20
 80083cc:	4648      	mov	r0, r9
 80083ce:	f8ad 3014 	strh.w	r3, [sp, #20]
 80083d2:	f010 fc09 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    home.setPosition(187, 278, 59, 42);
 80083d6:	232a      	movs	r3, #42	@ 0x2a
 80083d8:	f44f 728b 	mov.w	r2, #278	@ 0x116
 80083dc:	9300      	str	r3, [sp, #0]
 80083de:	4648      	mov	r0, r9
 80083e0:	233b      	movs	r3, #59	@ 0x3b
 80083e2:	21bb      	movs	r1, #187	@ 0xbb
 80083e4:	f7fa fce6 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    home.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80083e8:	4629      	mov	r1, r5
 80083ea:	4648      	mov	r0, r9
 80083ec:	f00f fd1b 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80083f0:	4649      	mov	r1, r9
 80083f2:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 80083f4:	f04f 092f 	mov.w	r9, #47	@ 0x2f
 80083f8:	f00c fe80 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80083fc:	462a      	mov	r2, r5
 80083fe:	4629      	mov	r1, r5
 8008400:	9803      	ldr	r0, [sp, #12]
 8008402:	f8cd 9000 	str.w	r9, [sp]
 8008406:	232c      	movs	r3, #44	@ 0x2c
 8008408:	f7fa fcd4 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 800840c:	2305      	movs	r3, #5
 800840e:	f8a4 3128 	strh.w	r3, [r4, #296]	@ 0x128
        up = colorReleased;
 8008412:	4b2a      	ldr	r3, [pc, #168]	@ (80084bc <_ZN20RewardScreenViewBaseC1Ev+0x20c>)
 8008414:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
        down = colorPressed;
 8008418:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 800841c:	3333      	adds	r3, #51	@ 0x33
 800841e:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        borderUp = borderColorReleased;
 8008422:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8008426:	3b66      	subs	r3, #102	@ 0x66
 8008428:	f8c4 3134 	str.w	r3, [r4, #308]	@ 0x134
        borderDown = borderColorPressed;
 800842c:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8008430:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8008434:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
        handlePressedUpdated();
 8008438:	4640      	mov	r0, r8
 800843a:	f8d4 a0c4 	ldr.w	sl, [r4, #196]	@ 0xc4
 800843e:	f7fa fc11 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8008442:	230a      	movs	r3, #10
 8008444:	f884 30f1 	strb.w	r3, [r4, #241]	@ 0xf1
        handleAlphaUpdated();
 8008448:	f8da 3090 	ldr.w	r3, [sl, #144]	@ 0x90
 800844c:	4640      	mov	r0, r8
 800844e:	4798      	blx	r3
    REWARD.setAction(flexButtonCallback);
 8008450:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
        action = &callback;
 8008454:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
    REWARD.setPosition(194, 273, 44, 47);
 8008458:	f240 1211 	movw	r2, #273	@ 0x111
 800845c:	232c      	movs	r3, #44	@ 0x2c
 800845e:	4640      	mov	r0, r8
 8008460:	f8cd 9000 	str.w	r9, [sp]
 8008464:	21c2      	movs	r1, #194	@ 0xc2
 8008466:	f7fa fca5 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800846a:	4641      	mov	r1, r8
 800846c:	4630      	mov	r0, r6
 800846e:	f00c fe45 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008472:	2354      	movs	r3, #84	@ 0x54
    sword.setBitmap(touchgfx::Bitmap(BITMAP_SWORD_ID));
 8008474:	a905      	add	r1, sp, #20
 8008476:	4638      	mov	r0, r7
 8008478:	f8ad 3014 	strh.w	r3, [sp, #20]
 800847c:	f010 fbb4 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sword.setPosition(25, 30, 61, 78);
 8008480:	234e      	movs	r3, #78	@ 0x4e
 8008482:	221e      	movs	r2, #30
 8008484:	9300      	str	r3, [sp, #0]
 8008486:	4638      	mov	r0, r7
 8008488:	233d      	movs	r3, #61	@ 0x3d
 800848a:	2119      	movs	r1, #25
 800848c:	f7fa fc92 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sword.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008490:	4629      	mov	r1, r5
 8008492:	4638      	mov	r0, r7
 8008494:	f00f fcc7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008498:	4630      	mov	r0, r6
 800849a:	4639      	mov	r1, r7
 800849c:	f00c fe2e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80084a0:	4620      	mov	r0, r4
 80084a2:	b007      	add	sp, #28
 80084a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084a8:	080325ac 	.word	0x080325ac
 80084ac:	08031a6c 	.word	0x08031a6c
 80084b0:	08033460 	.word	0x08033460
 80084b4:	08032594 	.word	0x08032594
 80084b8:	08008299 	.word	0x08008299
 80084bc:	ff006699 	.word	0xff006699

080084c0 <_ZN8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80084c0:	4770      	bx	lr

080084c2 <_ZN25SakuraFinalScreenViewBaseD1Ev>:
}

SakuraFinalScreenViewBase::~SakuraFinalScreenViewBase()
{

}
 80084c2:	4770      	bx	lr

080084c4 <_ZN25SakuraFinalScreenViewBase11setupScreenEv>:

void SakuraFinalScreenViewBase::setupScreen()
{

}
 80084c4:	4770      	bx	lr

080084c6 <_ZN8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80084c6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80084c8:	68c2      	ldr	r2, [r0, #12]
 80084ca:	6844      	ldr	r4, [r0, #4]
 80084cc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80084ce:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80084d0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80084d4:	07d2      	lsls	r2, r2, #31
 80084d6:	bf48      	it	mi
 80084d8:	5962      	ldrmi	r2, [r4, r5]
 80084da:	689b      	ldr	r3, [r3, #8]
    }
 80084dc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80084de:	bf48      	it	mi
 80084e0:	58d3      	ldrmi	r3, [r2, r3]
 80084e2:	4718      	bx	r3

080084e4 <_ZNK8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80084e4:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80084e6:	6840      	ldr	r0, [r0, #4]
 80084e8:	b130      	cbz	r0, 80084f8 <_ZNK8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80084ea:	689a      	ldr	r2, [r3, #8]
 80084ec:	b91a      	cbnz	r2, 80084f6 <_ZNK8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80084ee:	68d8      	ldr	r0, [r3, #12]
 80084f0:	f000 0001 	and.w	r0, r0, #1
 80084f4:	4770      	bx	lr
 80084f6:	2001      	movs	r0, #1
    }
 80084f8:	4770      	bx	lr

080084fa <_ZN8touchgfx8CallbackI25SakuraFinalScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80084fa:	b510      	push	{r4, lr}
 80084fc:	2110      	movs	r1, #16
 80084fe:	4604      	mov	r4, r0
 8008500:	f025 fa11 	bl	802d926 <_ZdlPvj>
 8008504:	4620      	mov	r0, r4
 8008506:	bd10      	pop	{r4, pc}

08008508 <_ZN25SakuraFinalScreenViewBaseD0Ev>:
SakuraFinalScreenViewBase::~SakuraFinalScreenViewBase()
 8008508:	b510      	push	{r4, lr}
}
 800850a:	f44f 7112 	mov.w	r1, #584	@ 0x248
SakuraFinalScreenViewBase::~SakuraFinalScreenViewBase()
 800850e:	4604      	mov	r4, r0
}
 8008510:	f025 fa09 	bl	802d926 <_ZdlPvj>
 8008514:	4620      	mov	r0, r4
 8008516:	bd10      	pop	{r4, pc}

08008518 <_ZN25SakuraFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SakuraFinalScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8008518:	b538      	push	{r3, r4, r5, lr}
    if (&src == &reward1)
 800851a:	f500 73a4 	add.w	r3, r0, #328	@ 0x148
 800851e:	4299      	cmp	r1, r3
{
 8008520:	4604      	mov	r4, r0
 8008522:	460d      	mov	r5, r1
    if (&src == &reward1)
 8008524:	d103      	bne.n	800852e <_ZN25SakuraFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~SakuraFinalScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008526:	f012 ff6d 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //REWARD
        //When reward1 clicked change screen to RewardFinalScreen
        //Go to RewardFinalScreen with no screen transition
        application().gotoRewardFinalScreenScreenNoTransition();
 800852a:	f7fb fdb1 	bl	8004090 <_ZN23FrontendApplicationBase39gotoRewardFinalScreenScreenNoTransitionEv>
    }
    if (&src == &SELECT)
 800852e:	f504 74e0 	add.w	r4, r4, #448	@ 0x1c0
 8008532:	42a5      	cmp	r5, r4
 8008534:	d105      	bne.n	8008542 <_ZN25SakuraFinalScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 8008536:	f012 ff65 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //SELECT
        //When SELECT clicked change screen to Character_Final
        //Go to Character_Final with no screen transition
        application().gotoCharacter_FinalScreenNoTransition();
    }
}
 800853a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCharacter_FinalScreenNoTransition();
 800853e:	f7fb bdb7 	b.w	80040b0 <_ZN23FrontendApplicationBase37gotoCharacter_FinalScreenNoTransitionEv>
}
 8008542:	bd38      	pop	{r3, r4, r5, pc}

08008544 <_ZN25SakuraFinalScreenViewBaseC1Ev>:
SakuraFinalScreenViewBase::SakuraFinalScreenViewBase() :
 8008544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008548:	4604      	mov	r4, r0
 800854a:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &SakuraFinalScreenViewBase::flexButtonCallbackHandler)
 800854c:	46a2      	mov	sl, r4
 800854e:	2600      	movs	r6, #0
 8008550:	f014 ff7e 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8008554:	4b98      	ldr	r3, [pc, #608]	@ (80087b8 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x274>)
 8008556:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8008558:	f84a 3b40 	str.w	r3, [sl], #64
 800855c:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8008560:	4650      	mov	r0, sl
 8008562:	f7fa fc3b 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8008566:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800856a:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 800856e:	a907      	add	r1, sp, #28
 8008570:	4648      	mov	r0, r9
 8008572:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8008576:	f8ad b01c 	strh.w	fp, [sp, #28]
 800857a:	f00f fc99 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800857e:	a907      	add	r1, sp, #28
 8008580:	4640      	mov	r0, r8
 8008582:	f8ad b01c 	strh.w	fp, [sp, #28]
 8008586:	f00f fc93 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800858a:	a907      	add	r1, sp, #28
 800858c:	4638      	mov	r0, r7
 800858e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8008592:	f00f fc8d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008596:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800859a:	f504 758e 	add.w	r5, r4, #284	@ 0x11c
 800859e:	a907      	add	r1, sp, #28
 80085a0:	4618      	mov	r0, r3
 80085a2:	9303      	str	r3, [sp, #12]
 80085a4:	f8ad b01c 	strh.w	fp, [sp, #28]
 80085a8:	f00f fc82 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80085ac:	a907      	add	r1, sp, #28
 80085ae:	4628      	mov	r0, r5
 80085b0:	f8ad b01c 	strh.w	fp, [sp, #28]
 80085b4:	f00f fc7c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80085b8:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 80085bc:	4618      	mov	r0, r3
 80085be:	9304      	str	r3, [sp, #16]
 80085c0:	f7fa fc28 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80085c4:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 80085c8:	4618      	mov	r0, r3
 80085ca:	9305      	str	r3, [sp, #20]
 80085cc:	f7fa fc22 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80085d0:	4b7a      	ldr	r3, [pc, #488]	@ (80087bc <_ZN25SakuraFinalScreenViewBaseC1Ev+0x278>)
 80085d2:	e9c4 348e 	strd	r3, r4, [r4, #568]	@ 0x238
 80085d6:	4b7a      	ldr	r3, [pc, #488]	@ (80087c0 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x27c>)
 80085d8:	e9c4 3690 	strd	r3, r6, [r4, #576]	@ 0x240
    __background.setPosition(0, 0, 240, 320);
 80085dc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80085e0:	4632      	mov	r2, r6
 80085e2:	9300      	str	r3, [sp, #0]
 80085e4:	4631      	mov	r1, r6
 80085e6:	4650      	mov	r0, sl
 80085e8:	23f0      	movs	r3, #240	@ 0xf0
 80085ea:	f7fa fbe3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80085ee:	f104 0b04 	add.w	fp, r4, #4
 80085f2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80085f6:	66a3      	str	r3, [r4, #104]	@ 0x68
 80085f8:	4651      	mov	r1, sl
 80085fa:	4658      	mov	r0, fp
 80085fc:	f00c fd7e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008600:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 8008602:	a907      	add	r1, sp, #28
 8008604:	4648      	mov	r0, r9
 8008606:	f8ad 301c 	strh.w	r3, [sp, #28]
 800860a:	f010 faed 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 800860e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008612:	4632      	mov	r2, r6
 8008614:	9300      	str	r3, [sp, #0]
 8008616:	4631      	mov	r1, r6
 8008618:	23f0      	movs	r3, #240	@ 0xf0
 800861a:	4648      	mov	r0, r9
 800861c:	f7fa fbca 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008620:	4631      	mov	r1, r6
 8008622:	4648      	mov	r0, r9
 8008624:	f00f fbff 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008628:	4649      	mov	r1, r9
 800862a:	4658      	mov	r0, fp
 800862c:	f00c fd66 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008630:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 8008632:	a907      	add	r1, sp, #28
 8008634:	4640      	mov	r0, r8
 8008636:	f8ad 301c 	strh.w	r3, [sp, #28]
 800863a:	f010 fad5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 800863e:	2370      	movs	r3, #112	@ 0x70
 8008640:	220e      	movs	r2, #14
 8008642:	9300      	str	r3, [sp, #0]
 8008644:	4640      	mov	r0, r8
 8008646:	239e      	movs	r3, #158	@ 0x9e
 8008648:	2129      	movs	r1, #41	@ 0x29
 800864a:	f7fa fbb3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800864e:	4631      	mov	r1, r6
 8008650:	4640      	mov	r0, r8
 8008652:	f00f fbe8 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008656:	4641      	mov	r1, r8
 8008658:	4658      	mov	r0, fp
 800865a:	f00c fd4f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800865e:	2349      	movs	r3, #73	@ 0x49
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA_ID));
 8008660:	a907      	add	r1, sp, #28
 8008662:	4638      	mov	r0, r7
 8008664:	f8ad 301c 	strh.w	r3, [sp, #28]
 8008668:	f010 fabe 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(56, 145, 129, 64);
 800866c:	2340      	movs	r3, #64	@ 0x40
 800866e:	2291      	movs	r2, #145	@ 0x91
 8008670:	9300      	str	r3, [sp, #0]
 8008672:	4638      	mov	r0, r7
 8008674:	2381      	movs	r3, #129	@ 0x81
 8008676:	2138      	movs	r1, #56	@ 0x38
 8008678:	f7fa fb9c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800867c:	4631      	mov	r1, r6
 800867e:	4638      	mov	r0, r7
 8008680:	f00f fbd1 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008684:	4639      	mov	r1, r7
 8008686:	4658      	mov	r0, fp
 8008688:	f00c fd38 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    play_img.setPosition(57, 219, 124, 65);
 800868c:	f04f 0841 	mov.w	r8, #65	@ 0x41
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8008690:	9803      	ldr	r0, [sp, #12]
        down = colorPressed;
 8008692:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 80087d0 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x28c>
 8008696:	233c      	movs	r3, #60	@ 0x3c
 8008698:	a907      	add	r1, sp, #28
 800869a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800869e:	f010 faa3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 80086a2:	22db      	movs	r2, #219	@ 0xdb
 80086a4:	237c      	movs	r3, #124	@ 0x7c
 80086a6:	9803      	ldr	r0, [sp, #12]
 80086a8:	f8cd 8000 	str.w	r8, [sp]
 80086ac:	2139      	movs	r1, #57	@ 0x39
 80086ae:	f7fa fb81 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80086b2:	9803      	ldr	r0, [sp, #12]
 80086b4:	4631      	mov	r1, r6
 80086b6:	f00f fbb6 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80086ba:	9903      	ldr	r1, [sp, #12]
 80086bc:	4658      	mov	r0, fp
 80086be:	f00c fd1d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80086c2:	2357      	movs	r3, #87	@ 0x57
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 80086c4:	a907      	add	r1, sp, #28
 80086c6:	4628      	mov	r0, r5
 80086c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80086cc:	f010 fa8c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 80086d0:	2324      	movs	r3, #36	@ 0x24
 80086d2:	f44f 728c 	mov.w	r2, #280	@ 0x118
 80086d6:	9300      	str	r3, [sp, #0]
 80086d8:	4628      	mov	r0, r5
 80086da:	2337      	movs	r3, #55	@ 0x37
 80086dc:	21b8      	movs	r1, #184	@ 0xb8
 80086de:	f7fa fb69 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80086e2:	4631      	mov	r1, r6
 80086e4:	4628      	mov	r0, r5
 80086e6:	f00f fb9e 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 80086ea:	2728      	movs	r7, #40	@ 0x28
 80086ec:	4629      	mov	r1, r5
 80086ee:	4658      	mov	r0, fp
 80086f0:	f00c fd04 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80086f4:	9700      	str	r7, [sp, #0]
 80086f6:	4632      	mov	r2, r6
 80086f8:	4631      	mov	r1, r6
 80086fa:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 80086fe:	233a      	movs	r3, #58	@ 0x3a
 8008700:	f7fa fb58 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8008704:	4a2f      	ldr	r2, [pc, #188]	@ (80087c4 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x280>)
 8008706:	4930      	ldr	r1, [pc, #192]	@ (80087c8 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x284>)
        down = colorPressed;
 8008708:	4b30      	ldr	r3, [pc, #192]	@ (80087cc <_ZN25SakuraFinalScreenViewBaseC1Ev+0x288>)
        handlePressedUpdated();
 800870a:	9804      	ldr	r0, [sp, #16]
 800870c:	f8d4 5148 	ldr.w	r5, [r4, #328]	@ 0x148
 8008710:	f04f 0905 	mov.w	r9, #5
        borderDown = borderColorPressed;
 8008714:	e9c4 216e 	strd	r2, r1, [r4, #440]	@ 0x1b8
        down = colorPressed;
 8008718:	e9c4 a36c 	strd	sl, r3, [r4, #432]	@ 0x1b0
 800871c:	f8a4 91ac 	strh.w	r9, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 8008720:	f7fa faa0 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8008724:	f04f 0006 	mov.w	r0, #6
 8008728:	f884 0175 	strb.w	r0, [r4, #373]	@ 0x175
        handleAlphaUpdated();
 800872c:	f8d5 3090 	ldr.w	r3, [r5, #144]	@ 0x90
 8008730:	9804      	ldr	r0, [sp, #16]
    reward1.setAction(flexButtonCallback);
 8008732:	f504 750e 	add.w	r5, r4, #568	@ 0x238
 8008736:	4798      	blx	r3
    reward1.setPosition(181, 280, 58, 40);
 8008738:	9804      	ldr	r0, [sp, #16]
        action = &callback;
 800873a:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 800873e:	233a      	movs	r3, #58	@ 0x3a
 8008740:	9700      	str	r7, [sp, #0]
 8008742:	f44f 728c 	mov.w	r2, #280	@ 0x118
 8008746:	21b5      	movs	r1, #181	@ 0xb5
 8008748:	f7fa fb34 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 800874c:	2732      	movs	r7, #50	@ 0x32
 800874e:	9904      	ldr	r1, [sp, #16]
 8008750:	4658      	mov	r0, fp
 8008752:	f00c fcd3 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008756:	4632      	mov	r2, r6
 8008758:	4631      	mov	r1, r6
 800875a:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 800875e:	9700      	str	r7, [sp, #0]
 8008760:	236e      	movs	r3, #110	@ 0x6e
 8008762:	f7fa fb27 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderUp = borderColorReleased;
 8008766:	4a17      	ldr	r2, [pc, #92]	@ (80087c4 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x280>)
 8008768:	4b18      	ldr	r3, [pc, #96]	@ (80087cc <_ZN25SakuraFinalScreenViewBaseC1Ev+0x288>)
        borderDown = borderColorPressed;
 800876a:	4917      	ldr	r1, [pc, #92]	@ (80087c8 <_ZN25SakuraFinalScreenViewBaseC1Ev+0x284>)
 800876c:	f8c4 1234 	str.w	r1, [r4, #564]	@ 0x234
        borderUp = borderColorReleased;
 8008770:	e9c4 328b 	strd	r3, r2, [r4, #556]	@ 0x22c
        handlePressedUpdated();
 8008774:	9805      	ldr	r0, [sp, #20]
 8008776:	f8a4 9224 	strh.w	r9, [r4, #548]	@ 0x224
        up = colorReleased;
 800877a:	f8c4 a228 	str.w	sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 800877e:	f8d4 91c0 	ldr.w	r9, [r4, #448]	@ 0x1c0
 8008782:	f7fa fa6f 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8008786:	f04f 0006 	mov.w	r0, #6
 800878a:	f884 01ed 	strb.w	r0, [r4, #493]	@ 0x1ed
        handleAlphaUpdated();
 800878e:	f8d9 3090 	ldr.w	r3, [r9, #144]	@ 0x90
 8008792:	9805      	ldr	r0, [sp, #20]
 8008794:	4798      	blx	r3
    SELECT.setPosition(65, 152, 110, 50);
 8008796:	9805      	ldr	r0, [sp, #20]
        action = &callback;
 8008798:	f8c4 51f0 	str.w	r5, [r4, #496]	@ 0x1f0
 800879c:	236e      	movs	r3, #110	@ 0x6e
 800879e:	2298      	movs	r2, #152	@ 0x98
 80087a0:	4641      	mov	r1, r8
 80087a2:	9700      	str	r7, [sp, #0]
 80087a4:	f7fa fb06 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80087a8:	4658      	mov	r0, fp
 80087aa:	9905      	ldr	r1, [sp, #20]
 80087ac:	f00c fca6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80087b0:	4620      	mov	r0, r4
 80087b2:	b009      	add	sp, #36	@ 0x24
 80087b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80087b8:	080325f8 	.word	0x080325f8
 80087bc:	080325e0 	.word	0x080325e0
 80087c0:	08008519 	.word	0x08008519
 80087c4:	ff003366 	.word	0xff003366
 80087c8:	ff336699 	.word	0xff336699
 80087cc:	ff0099cc 	.word	0xff0099cc
 80087d0:	ff006699 	.word	0xff006699

080087d4 <_ZN24SakuraGameScreenViewBaseD1Ev>:
}

SakuraGameScreenViewBase::~SakuraGameScreenViewBase()
{

}
 80087d4:	4770      	bx	lr

080087d6 <_ZN24SakuraGameScreenViewBase11setupScreenEv>:

void SakuraGameScreenViewBase::setupScreen()
{

}
 80087d6:	4770      	bx	lr

080087d8 <_ZN24SakuraGameScreenViewBaseD0Ev>:
SakuraGameScreenViewBase::~SakuraGameScreenViewBase()
 80087d8:	b510      	push	{r4, lr}
}
 80087da:	f640 2164 	movw	r1, #2660	@ 0xa64
SakuraGameScreenViewBase::~SakuraGameScreenViewBase()
 80087de:	4604      	mov	r4, r0
}
 80087e0:	f025 f8a1 	bl	802d926 <_ZdlPvj>
 80087e4:	4620      	mov	r0, r4
 80087e6:	bd10      	pop	{r4, pc}

080087e8 <_ZN24SakuraGameScreenViewBaseC1Ev>:
SakuraGameScreenViewBase::SakuraGameScreenViewBase()
 80087e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80087ec:	4604      	mov	r4, r0
 80087ee:	b0bb      	sub	sp, #236	@ 0xec
 80087f0:	46a2      	mov	sl, r4
 80087f2:	2500      	movs	r5, #0
 80087f4:	f014 fe2c 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 80087f8:	4bd0      	ldr	r3, [pc, #832]	@ (8008b3c <_ZN24SakuraGameScreenViewBaseC1Ev+0x354>)
 80087fa:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80087fc:	f84a 3b40 	str.w	r3, [sl], #64
 8008800:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8008804:	4650      	mov	r0, sl
 8008806:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800880a:	f7fa fae7 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 800880e:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8008812:	a939      	add	r1, sp, #228	@ 0xe4
 8008814:	4648      	mov	r0, r9
 8008816:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 800881a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800881e:	f00f fb47 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008822:	a939      	add	r1, sp, #228	@ 0xe4
 8008824:	4640      	mov	r0, r8
 8008826:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800882a:	f00f fb41 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800882e:	a939      	add	r1, sp, #228	@ 0xe4
 8008830:	4638      	mov	r0, r7
 8008832:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008836:	f00f fb3b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800883a:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800883e:	a939      	add	r1, sp, #228	@ 0xe4
 8008840:	4618      	mov	r0, r3
 8008842:	9302      	str	r3, [sp, #8]
 8008844:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008848:	f00f fb32 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800884c:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8008850:	a939      	add	r1, sp, #228	@ 0xe4
 8008852:	4618      	mov	r0, r3
 8008854:	9303      	str	r3, [sp, #12]
 8008856:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800885a:	f00f fb29 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800885e:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8008862:	a939      	add	r1, sp, #228	@ 0xe4
 8008864:	4618      	mov	r0, r3
 8008866:	9304      	str	r3, [sp, #16]
 8008868:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800886c:	f00f fb20 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008870:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8008874:	a939      	add	r1, sp, #228	@ 0xe4
 8008876:	4618      	mov	r0, r3
 8008878:	9305      	str	r3, [sp, #20]
 800887a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800887e:	f00f fb17 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008882:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 8008886:	a939      	add	r1, sp, #228	@ 0xe4
 8008888:	4618      	mov	r0, r3
 800888a:	9306      	str	r3, [sp, #24]
 800888c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008890:	f00f fb0e 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008894:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8008898:	a939      	add	r1, sp, #228	@ 0xe4
 800889a:	4618      	mov	r0, r3
 800889c:	9307      	str	r3, [sp, #28]
 800889e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088a2:	f00f fb05 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088a6:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 80088aa:	a939      	add	r1, sp, #228	@ 0xe4
 80088ac:	4618      	mov	r0, r3
 80088ae:	9308      	str	r3, [sp, #32]
 80088b0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088b4:	f00f fafc 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088b8:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 80088bc:	a939      	add	r1, sp, #228	@ 0xe4
 80088be:	4618      	mov	r0, r3
 80088c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80088c2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088c6:	f00f faf3 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088ca:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 80088ce:	a939      	add	r1, sp, #228	@ 0xe4
 80088d0:	4618      	mov	r0, r3
 80088d2:	930a      	str	r3, [sp, #40]	@ 0x28
 80088d4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088d8:	f00f faea 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088dc:	f504 731f 	add.w	r3, r4, #636	@ 0x27c
 80088e0:	a939      	add	r1, sp, #228	@ 0xe4
 80088e2:	4618      	mov	r0, r3
 80088e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80088e6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088ea:	f00f fae1 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80088ee:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 80088f2:	a939      	add	r1, sp, #228	@ 0xe4
 80088f4:	4618      	mov	r0, r3
 80088f6:	930c      	str	r3, [sp, #48]	@ 0x30
 80088f8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80088fc:	f00f fad8 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008900:	f504 7335 	add.w	r3, r4, #724	@ 0x2d4
 8008904:	a939      	add	r1, sp, #228	@ 0xe4
 8008906:	4618      	mov	r0, r3
 8008908:	930d      	str	r3, [sp, #52]	@ 0x34
 800890a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800890e:	f00f facf 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008912:	f504 7340 	add.w	r3, r4, #768	@ 0x300
 8008916:	a939      	add	r1, sp, #228	@ 0xe4
 8008918:	4618      	mov	r0, r3
 800891a:	930e      	str	r3, [sp, #56]	@ 0x38
 800891c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008920:	f00f fac6 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008924:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 8008928:	a939      	add	r1, sp, #228	@ 0xe4
 800892a:	4618      	mov	r0, r3
 800892c:	930f      	str	r3, [sp, #60]	@ 0x3c
 800892e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008932:	f00f fabd 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008936:	f504 7356 	add.w	r3, r4, #856	@ 0x358
 800893a:	a939      	add	r1, sp, #228	@ 0xe4
 800893c:	4618      	mov	r0, r3
 800893e:	9310      	str	r3, [sp, #64]	@ 0x40
 8008940:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008944:	f00f fab4 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008948:	f504 7361 	add.w	r3, r4, #900	@ 0x384
 800894c:	a939      	add	r1, sp, #228	@ 0xe4
 800894e:	4618      	mov	r0, r3
 8008950:	9311      	str	r3, [sp, #68]	@ 0x44
 8008952:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008956:	f00f faab 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800895a:	f504 736c 	add.w	r3, r4, #944	@ 0x3b0
 800895e:	a939      	add	r1, sp, #228	@ 0xe4
 8008960:	4618      	mov	r0, r3
 8008962:	9312      	str	r3, [sp, #72]	@ 0x48
 8008964:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008968:	f00f faa2 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800896c:	f504 7377 	add.w	r3, r4, #988	@ 0x3dc
 8008970:	a939      	add	r1, sp, #228	@ 0xe4
 8008972:	4618      	mov	r0, r3
 8008974:	9313      	str	r3, [sp, #76]	@ 0x4c
 8008976:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800897a:	f00f fa99 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800897e:	f504 6381 	add.w	r3, r4, #1032	@ 0x408
 8008982:	a939      	add	r1, sp, #228	@ 0xe4
 8008984:	4618      	mov	r0, r3
 8008986:	9314      	str	r3, [sp, #80]	@ 0x50
 8008988:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 800898c:	f00f fa90 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008990:	f204 4334 	addw	r3, r4, #1076	@ 0x434
 8008994:	f504 6b8c 	add.w	fp, r4, #1120	@ 0x460
 8008998:	a939      	add	r1, sp, #228	@ 0xe4
 800899a:	4618      	mov	r0, r3
 800899c:	9315      	str	r3, [sp, #84]	@ 0x54
 800899e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80089a2:	f00f fa85 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80089a6:	a939      	add	r1, sp, #228	@ 0xe4
 80089a8:	4658      	mov	r0, fp
 80089aa:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80089ae:	f00f fa7f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80089b2:	f204 438c 	addw	r3, r4, #1164	@ 0x48c
 80089b6:	a939      	add	r1, sp, #228	@ 0xe4
 80089b8:	4618      	mov	r0, r3
 80089ba:	9316      	str	r3, [sp, #88]	@ 0x58
 80089bc:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80089c0:	f00f fa76 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80089c4:	f504 6397 	add.w	r3, r4, #1208	@ 0x4b8
 80089c8:	a939      	add	r1, sp, #228	@ 0xe4
 80089ca:	4618      	mov	r0, r3
 80089cc:	9317      	str	r3, [sp, #92]	@ 0x5c
 80089ce:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80089d2:	f00f fa6d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80089d6:	f204 43e4 	addw	r3, r4, #1252	@ 0x4e4
 80089da:	a939      	add	r1, sp, #228	@ 0xe4
 80089dc:	4618      	mov	r0, r3
 80089de:	9318      	str	r3, [sp, #96]	@ 0x60
 80089e0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80089e4:	f00f fa64 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80089e8:	f504 63a2 	add.w	r3, r4, #1296	@ 0x510
 80089ec:	a939      	add	r1, sp, #228	@ 0xe4
 80089ee:	4618      	mov	r0, r3
 80089f0:	9319      	str	r3, [sp, #100]	@ 0x64
 80089f2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 80089f6:	f00f fa5b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80089fa:	f204 533c 	addw	r3, r4, #1340	@ 0x53c
 80089fe:	a939      	add	r1, sp, #228	@ 0xe4
 8008a00:	4618      	mov	r0, r3
 8008a02:	931a      	str	r3, [sp, #104]	@ 0x68
 8008a04:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a08:	f00f fa52 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a0c:	f504 63ad 	add.w	r3, r4, #1384	@ 0x568
 8008a10:	a939      	add	r1, sp, #228	@ 0xe4
 8008a12:	4618      	mov	r0, r3
 8008a14:	931b      	str	r3, [sp, #108]	@ 0x6c
 8008a16:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a1a:	f00f fa49 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a1e:	f204 5394 	addw	r3, r4, #1428	@ 0x594
 8008a22:	a939      	add	r1, sp, #228	@ 0xe4
 8008a24:	4618      	mov	r0, r3
 8008a26:	931c      	str	r3, [sp, #112]	@ 0x70
 8008a28:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a2c:	f00f fa40 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a30:	f504 63b8 	add.w	r3, r4, #1472	@ 0x5c0
 8008a34:	a939      	add	r1, sp, #228	@ 0xe4
 8008a36:	4618      	mov	r0, r3
 8008a38:	931d      	str	r3, [sp, #116]	@ 0x74
 8008a3a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a3e:	f00f fa37 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a42:	f204 53ec 	addw	r3, r4, #1516	@ 0x5ec
 8008a46:	a939      	add	r1, sp, #228	@ 0xe4
 8008a48:	4618      	mov	r0, r3
 8008a4a:	931e      	str	r3, [sp, #120]	@ 0x78
 8008a4c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a50:	f00f fa2e 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a54:	f504 63c3 	add.w	r3, r4, #1560	@ 0x618
 8008a58:	a939      	add	r1, sp, #228	@ 0xe4
 8008a5a:	4618      	mov	r0, r3
 8008a5c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8008a5e:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a62:	f00f fa25 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a66:	f204 6344 	addw	r3, r4, #1604	@ 0x644
 8008a6a:	a939      	add	r1, sp, #228	@ 0xe4
 8008a6c:	4618      	mov	r0, r3
 8008a6e:	9320      	str	r3, [sp, #128]	@ 0x80
 8008a70:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a74:	f00f fa1c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a78:	f504 63ce 	add.w	r3, r4, #1648	@ 0x670
 8008a7c:	a939      	add	r1, sp, #228	@ 0xe4
 8008a7e:	4618      	mov	r0, r3
 8008a80:	9321      	str	r3, [sp, #132]	@ 0x84
 8008a82:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a86:	f00f fa13 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a8a:	f204 639c 	addw	r3, r4, #1692	@ 0x69c
 8008a8e:	a939      	add	r1, sp, #228	@ 0xe4
 8008a90:	4618      	mov	r0, r3
 8008a92:	9322      	str	r3, [sp, #136]	@ 0x88
 8008a94:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008a98:	f00f fa0a 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008a9c:	f504 63d9 	add.w	r3, r4, #1736	@ 0x6c8
 8008aa0:	a939      	add	r1, sp, #228	@ 0xe4
 8008aa2:	4618      	mov	r0, r3
 8008aa4:	9323      	str	r3, [sp, #140]	@ 0x8c
 8008aa6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008aaa:	f00f fa01 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008aae:	f204 63f4 	addw	r3, r4, #1780	@ 0x6f4
 8008ab2:	a939      	add	r1, sp, #228	@ 0xe4
 8008ab4:	4618      	mov	r0, r3
 8008ab6:	9324      	str	r3, [sp, #144]	@ 0x90
 8008ab8:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008abc:	f00f f9f8 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008ac0:	f504 63e4 	add.w	r3, r4, #1824	@ 0x720
 8008ac4:	a939      	add	r1, sp, #228	@ 0xe4
 8008ac6:	4618      	mov	r0, r3
 8008ac8:	9325      	str	r3, [sp, #148]	@ 0x94
 8008aca:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008ace:	f00f f9ef 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008ad2:	f204 734c 	addw	r3, r4, #1868	@ 0x74c
 8008ad6:	a939      	add	r1, sp, #228	@ 0xe4
 8008ad8:	4618      	mov	r0, r3
 8008ada:	9326      	str	r3, [sp, #152]	@ 0x98
 8008adc:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008ae0:	f00f f9e6 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008ae4:	f504 63ef 	add.w	r3, r4, #1912	@ 0x778
 8008ae8:	a939      	add	r1, sp, #228	@ 0xe4
 8008aea:	4618      	mov	r0, r3
 8008aec:	9327      	str	r3, [sp, #156]	@ 0x9c
 8008aee:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008af2:	f00f f9dd 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008af6:	f204 73a4 	addw	r3, r4, #1956	@ 0x7a4
 8008afa:	a939      	add	r1, sp, #228	@ 0xe4
 8008afc:	4618      	mov	r0, r3
 8008afe:	9328      	str	r3, [sp, #160]	@ 0xa0
 8008b00:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008b04:	f00f f9d4 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008b08:	f504 63fa 	add.w	r3, r4, #2000	@ 0x7d0
 8008b0c:	a939      	add	r1, sp, #228	@ 0xe4
 8008b0e:	4618      	mov	r0, r3
 8008b10:	9329      	str	r3, [sp, #164]	@ 0xa4
 8008b12:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008b16:	f00f f9cb 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008b1a:	f204 73fc 	addw	r3, r4, #2044	@ 0x7fc
 8008b1e:	a939      	add	r1, sp, #228	@ 0xe4
 8008b20:	4618      	mov	r0, r3
 8008b22:	932a      	str	r3, [sp, #168]	@ 0xa8
 8008b24:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008b28:	f00f f9c2 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008b2c:	f604 0328 	addw	r3, r4, #2088	@ 0x828
 8008b30:	a939      	add	r1, sp, #228	@ 0xe4
 8008b32:	4618      	mov	r0, r3
 8008b34:	932b      	str	r3, [sp, #172]	@ 0xac
 8008b36:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008b3a:	e001      	b.n	8008b40 <_ZN24SakuraGameScreenViewBaseC1Ev+0x358>
 8008b3c:	0803262c 	.word	0x0803262c
 8008b40:	f00f f9b6 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008b44:	f604 0354 	addw	r3, r4, #2132	@ 0x854
 8008b48:	4618      	mov	r0, r3
 8008b4a:	9336      	str	r3, [sp, #216]	@ 0xd8
 8008b4c:	f7fa f946 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8008b50:	f504 6308 	add.w	r3, r4, #2176	@ 0x880
 8008b54:	4618      	mov	r0, r3
 8008b56:	9337      	str	r3, [sp, #220]	@ 0xdc
 8008b58:	f7fa f940 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8008b5c:	f604 03ac 	addw	r3, r4, #2220	@ 0x8ac
 8008b60:	a939      	add	r1, sp, #228	@ 0xe4
 8008b62:	4618      	mov	r0, r3
 8008b64:	932c      	str	r3, [sp, #176]	@ 0xb0
 8008b66:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008b6a:	f00f f9a1 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008b6e:	f604 03d8 	addw	r3, r4, #2264	@ 0x8d8
 8008b72:	a939      	add	r1, sp, #228	@ 0xe4
 8008b74:	4618      	mov	r0, r3
 8008b76:	932d      	str	r3, [sp, #180]	@ 0xb4
 8008b78:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008b7c:	f00f f998 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008b80:	f604 1304 	addw	r3, r4, #2308	@ 0x904
 8008b84:	a939      	add	r1, sp, #228	@ 0xe4
 8008b86:	4618      	mov	r0, r3
 8008b88:	932e      	str	r3, [sp, #184]	@ 0xb8
 8008b8a:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008b8e:	f00f f98f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008b92:	f504 6313 	add.w	r3, r4, #2352	@ 0x930
 8008b96:	a939      	add	r1, sp, #228	@ 0xe4
 8008b98:	4618      	mov	r0, r3
 8008b9a:	932f      	str	r3, [sp, #188]	@ 0xbc
 8008b9c:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008ba0:	f00f f986 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008ba4:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 8008ba8:	a939      	add	r1, sp, #228	@ 0xe4
 8008baa:	4618      	mov	r0, r3
 8008bac:	9330      	str	r3, [sp, #192]	@ 0xc0
 8008bae:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008bb2:	f00f f97d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008bb6:	f604 1388 	addw	r3, r4, #2440	@ 0x988
 8008bba:	a939      	add	r1, sp, #228	@ 0xe4
 8008bbc:	4618      	mov	r0, r3
 8008bbe:	9331      	str	r3, [sp, #196]	@ 0xc4
 8008bc0:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008bc4:	f00f f974 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008bc8:	f604 13b4 	addw	r3, r4, #2484	@ 0x9b4
 8008bcc:	a939      	add	r1, sp, #228	@ 0xe4
 8008bce:	4618      	mov	r0, r3
 8008bd0:	9332      	str	r3, [sp, #200]	@ 0xc8
 8008bd2:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008bd6:	f00f f96b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008bda:	f504 631e 	add.w	r3, r4, #2528	@ 0x9e0
 8008bde:	a939      	add	r1, sp, #228	@ 0xe4
 8008be0:	4618      	mov	r0, r3
 8008be2:	9333      	str	r3, [sp, #204]	@ 0xcc
 8008be4:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008be8:	f00f f962 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008bec:	f604 230c 	addw	r3, r4, #2572	@ 0xa0c
 8008bf0:	a939      	add	r1, sp, #228	@ 0xe4
 8008bf2:	4618      	mov	r0, r3
 8008bf4:	9334      	str	r3, [sp, #208]	@ 0xd0
 8008bf6:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008bfa:	f00f f959 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8008bfe:	f604 2338 	addw	r3, r4, #2616	@ 0xa38
 8008c02:	a939      	add	r1, sp, #228	@ 0xe4
 8008c04:	4618      	mov	r0, r3
 8008c06:	9335      	str	r3, [sp, #212]	@ 0xd4
 8008c08:	f8ad 60e4 	strh.w	r6, [sp, #228]	@ 0xe4
 8008c0c:	f00f f950 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 8008c10:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008c14:	462a      	mov	r2, r5
 8008c16:	9300      	str	r3, [sp, #0]
 8008c18:	4629      	mov	r1, r5
 8008c1a:	4650      	mov	r0, sl
 8008c1c:	23f0      	movs	r3, #240	@ 0xf0
 8008c1e:	1d26      	adds	r6, r4, #4
 8008c20:	f7fa f8c8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008c24:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8008c28:	66a3      	str	r3, [r4, #104]	@ 0x68
 8008c2a:	4651      	mov	r1, sl
 8008c2c:	4630      	mov	r0, r6
 8008c2e:	f00c fa65 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008c32:	f04f 0352 	mov.w	r3, #82	@ 0x52
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_STAGE1_ID));
 8008c36:	a939      	add	r1, sp, #228	@ 0xe4
 8008c38:	4648      	mov	r0, r9
 8008c3a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008c3e:	f00f ffd3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 8008c42:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8008c46:	462a      	mov	r2, r5
 8008c48:	9300      	str	r3, [sp, #0]
 8008c4a:	4629      	mov	r1, r5
 8008c4c:	23f0      	movs	r3, #240	@ 0xf0
 8008c4e:	4648      	mov	r0, r9
 8008c50:	f7fa f8b0 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008c54:	4629      	mov	r1, r5
 8008c56:	4648      	mov	r0, r9
 8008c58:	f00f f8e5 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008c5c:	4649      	mov	r1, r9
 8008c5e:	4630      	mov	r0, r6
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 8008c60:	f04f 091d 	mov.w	r9, #29
 8008c64:	f00c fa4a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008c68:	2301      	movs	r3, #1
    BITMAP_HP_100_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR1_ID));
 8008c6a:	a939      	add	r1, sp, #228	@ 0xe4
 8008c6c:	4640      	mov	r0, r8
 8008c6e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008c72:	f00f ffb9 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID.setPosition(5, 6, 105, 29);
 8008c76:	2206      	movs	r2, #6
 8008c78:	2369      	movs	r3, #105	@ 0x69
 8008c7a:	f8cd 9000 	str.w	r9, [sp]
 8008c7e:	4640      	mov	r0, r8
 8008c80:	2105      	movs	r1, #5
 8008c82:	f7fa f897 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008c86:	4629      	mov	r1, r5
 8008c88:	4640      	mov	r0, r8
 8008c8a:	f00f f8cc 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008c8e:	4641      	mov	r1, r8
 8008c90:	4630      	mov	r0, r6
 8008c92:	f00c fa33 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008c96:	2303      	movs	r3, #3
    BITMAP_HP_10_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR11_ID));
 8008c98:	a939      	add	r1, sp, #228	@ 0xe4
 8008c9a:	4638      	mov	r0, r7
 8008c9c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008ca0:	f00f ffa2 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID.setPosition(5, 6, 105, 29);
 8008ca4:	2206      	movs	r2, #6
 8008ca6:	2369      	movs	r3, #105	@ 0x69
 8008ca8:	f8cd 9000 	str.w	r9, [sp]
 8008cac:	4638      	mov	r0, r7
 8008cae:	2105      	movs	r1, #5
 8008cb0:	f7fa f880 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008cb4:	4629      	mov	r1, r5
 8008cb6:	4638      	mov	r0, r7
 8008cb8:	f00f f8b5 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008cbc:	4639      	mov	r1, r7
 8008cbe:	4630      	mov	r0, r6
        visible = vis;
 8008cc0:	f884 50e9 	strb.w	r5, [r4, #233]	@ 0xe9
 8008cc4:	f00c fa1a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR12_ID));
 8008cc8:	9802      	ldr	r0, [sp, #8]
 8008cca:	2304      	movs	r3, #4
 8008ccc:	a939      	add	r1, sp, #228	@ 0xe4
 8008cce:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008cd2:	f00f ff89 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID.setPosition(5, 6, 105, 29);
 8008cd6:	2206      	movs	r2, #6
 8008cd8:	2369      	movs	r3, #105	@ 0x69
 8008cda:	9802      	ldr	r0, [sp, #8]
 8008cdc:	f8cd 9000 	str.w	r9, [sp]
 8008ce0:	2105      	movs	r1, #5
 8008ce2:	f7fa f867 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008ce6:	9802      	ldr	r0, [sp, #8]
 8008ce8:	4629      	mov	r1, r5
 8008cea:	f00f f89c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008cee:	9902      	ldr	r1, [sp, #8]
 8008cf0:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8008cf4:	4630      	mov	r0, r6
 8008cf6:	f00c fa01 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_20_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR10_ID));
 8008cfa:	9803      	ldr	r0, [sp, #12]
 8008cfc:	2302      	movs	r3, #2
 8008cfe:	a939      	add	r1, sp, #228	@ 0xe4
 8008d00:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008d04:	f00f ff70 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID.setPosition(5, 6, 105, 29);
 8008d08:	2206      	movs	r2, #6
 8008d0a:	2369      	movs	r3, #105	@ 0x69
 8008d0c:	9803      	ldr	r0, [sp, #12]
 8008d0e:	f8cd 9000 	str.w	r9, [sp]
 8008d12:	2105      	movs	r1, #5
 8008d14:	f7fa f84e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008d18:	9803      	ldr	r0, [sp, #12]
 8008d1a:	4629      	mov	r1, r5
 8008d1c:	f00f f883 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008d20:	9903      	ldr	r1, [sp, #12]
 8008d22:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 8008d26:	4630      	mov	r0, r6
 8008d28:	f00c f9e8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR9_ID));
 8008d2c:	9804      	ldr	r0, [sp, #16]
 8008d2e:	230c      	movs	r3, #12
 8008d30:	a939      	add	r1, sp, #228	@ 0xe4
 8008d32:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008d36:	f00f ff57 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID.setPosition(5, 6, 105, 29);
 8008d3a:	2206      	movs	r2, #6
 8008d3c:	2369      	movs	r3, #105	@ 0x69
 8008d3e:	9804      	ldr	r0, [sp, #16]
 8008d40:	f8cd 9000 	str.w	r9, [sp]
 8008d44:	2105      	movs	r1, #5
 8008d46:	f7fa f835 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008d4a:	9804      	ldr	r0, [sp, #16]
 8008d4c:	4629      	mov	r1, r5
 8008d4e:	f00f f86a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008d52:	9904      	ldr	r1, [sp, #16]
 8008d54:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 8008d58:	4630      	mov	r0, r6
 8008d5a:	f00c f9cf 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR8_ID));
 8008d5e:	9805      	ldr	r0, [sp, #20]
 8008d60:	230b      	movs	r3, #11
 8008d62:	a939      	add	r1, sp, #228	@ 0xe4
 8008d64:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008d68:	f00f ff3e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID.setPosition(5, 6, 105, 29);
 8008d6c:	2206      	movs	r2, #6
 8008d6e:	2369      	movs	r3, #105	@ 0x69
 8008d70:	9805      	ldr	r0, [sp, #20]
 8008d72:	f8cd 9000 	str.w	r9, [sp]
 8008d76:	2105      	movs	r1, #5
 8008d78:	f7fa f81c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008d7c:	9805      	ldr	r0, [sp, #20]
 8008d7e:	4629      	mov	r1, r5
 8008d80:	f00f f851 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008d84:	9905      	ldr	r1, [sp, #20]
 8008d86:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 8008d8a:	4630      	mov	r0, r6
 8008d8c:	f00c f9b6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR7_ID));
 8008d90:	9806      	ldr	r0, [sp, #24]
 8008d92:	230a      	movs	r3, #10
 8008d94:	a939      	add	r1, sp, #228	@ 0xe4
 8008d96:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008d9a:	f00f ff25 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID.setPosition(5, 6, 105, 29);
 8008d9e:	2206      	movs	r2, #6
 8008da0:	2369      	movs	r3, #105	@ 0x69
 8008da2:	9806      	ldr	r0, [sp, #24]
 8008da4:	f8cd 9000 	str.w	r9, [sp]
 8008da8:	2105      	movs	r1, #5
 8008daa:	f7fa f803 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008dae:	9806      	ldr	r0, [sp, #24]
 8008db0:	4629      	mov	r1, r5
 8008db2:	f00f f838 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008db6:	9906      	ldr	r1, [sp, #24]
 8008db8:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8008dbc:	4630      	mov	r0, r6
 8008dbe:	f00c f99d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR6_ID));
 8008dc2:	9807      	ldr	r0, [sp, #28]
 8008dc4:	2309      	movs	r3, #9
 8008dc6:	a939      	add	r1, sp, #228	@ 0xe4
 8008dc8:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008dcc:	f00f ff0c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID.setPosition(5, 6, 105, 29);
 8008dd0:	2206      	movs	r2, #6
 8008dd2:	2369      	movs	r3, #105	@ 0x69
 8008dd4:	9807      	ldr	r0, [sp, #28]
 8008dd6:	f8cd 9000 	str.w	r9, [sp]
 8008dda:	2105      	movs	r1, #5
 8008ddc:	f7f9 ffea 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008de0:	9807      	ldr	r0, [sp, #28]
 8008de2:	4629      	mov	r1, r5
 8008de4:	f00f f81f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008de8:	9907      	ldr	r1, [sp, #28]
 8008dea:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 8008dee:	4630      	mov	r0, r6
 8008df0:	f00c f984 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR5_ID));
 8008df4:	9808      	ldr	r0, [sp, #32]
 8008df6:	2308      	movs	r3, #8
 8008df8:	a939      	add	r1, sp, #228	@ 0xe4
 8008dfa:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008dfe:	f00f fef3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID.setPosition(5, 6, 105, 29);
 8008e02:	2206      	movs	r2, #6
 8008e04:	2369      	movs	r3, #105	@ 0x69
 8008e06:	9808      	ldr	r0, [sp, #32]
 8008e08:	f8cd 9000 	str.w	r9, [sp]
 8008e0c:	2105      	movs	r1, #5
 8008e0e:	f7f9 ffd1 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008e12:	9808      	ldr	r0, [sp, #32]
 8008e14:	4629      	mov	r1, r5
 8008e16:	f00f f806 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008e1a:	9908      	ldr	r1, [sp, #32]
 8008e1c:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 8008e20:	4630      	mov	r0, r6
 8008e22:	f00c f96b 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR4_ID));
 8008e26:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008e28:	2307      	movs	r3, #7
 8008e2a:	a939      	add	r1, sp, #228	@ 0xe4
 8008e2c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008e30:	f00f feda 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID.setPosition(5, 6, 105, 29);
 8008e34:	2369      	movs	r3, #105	@ 0x69
 8008e36:	2206      	movs	r2, #6
 8008e38:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008e3a:	f8cd 9000 	str.w	r9, [sp]
 8008e3e:	2105      	movs	r1, #5
 8008e40:	f7f9 ffb8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008e44:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008e46:	4629      	mov	r1, r5
 8008e48:	f00e ffed 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008e4c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8008e4e:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 8008e52:	4630      	mov	r0, r6
 8008e54:	2706      	movs	r7, #6
 8008e56:	f00c f951 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID.setBitmap(touchgfx::Bitmap(BITMAP_BAR3_ID));
 8008e5a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8008e5c:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 8008e60:	a939      	add	r1, sp, #228	@ 0xe4
 8008e62:	f00f fec1 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID.setPosition(5, 6, 105, 29);
 8008e66:	463a      	mov	r2, r7
 8008e68:	2369      	movs	r3, #105	@ 0x69
 8008e6a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8008e6c:	f8cd 9000 	str.w	r9, [sp]
 8008e70:	2105      	movs	r1, #5
 8008e72:	f7f9 ff9f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008e76:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8008e78:	4629      	mov	r1, r5
 8008e7a:	f00e ffd4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008e7e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8008e80:	f884 5275 	strb.w	r5, [r4, #629]	@ 0x275
 8008e84:	4630      	mov	r0, r6
 8008e86:	f00c f939 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 8008e8a:	f04f 0a43 	mov.w	sl, #67	@ 0x43
    BITMAP_HP_130_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUBOSS_ID));
 8008e8e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8008e90:	f04f 0330 	mov.w	r3, #48	@ 0x30
 8008e94:	a939      	add	r1, sp, #228	@ 0xe4
 8008e96:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008e9a:	f00f fea5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_130_ID_1.setPosition(129, -9, 102, 67);
 8008e9e:	f06f 0208 	mvn.w	r2, #8
 8008ea2:	2366      	movs	r3, #102	@ 0x66
 8008ea4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8008ea6:	f8cd a000 	str.w	sl, [sp]
 8008eaa:	2181      	movs	r1, #129	@ 0x81
 8008eac:	f7f9 ff82 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_130_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008eb0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8008eb2:	4629      	mov	r1, r5
 8008eb4:	f00e ffb7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008eb8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8008eba:	4630      	mov	r0, r6
 8008ebc:	f00c f91e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_120_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_2_ID));
 8008ec0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8008ec2:	2331      	movs	r3, #49	@ 0x31
 8008ec4:	a939      	add	r1, sp, #228	@ 0xe4
 8008ec6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008eca:	f00f fe8d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_120_ID_1.setPosition(129, -9, 102, 67);
 8008ece:	f06f 0208 	mvn.w	r2, #8
 8008ed2:	2366      	movs	r3, #102	@ 0x66
 8008ed4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8008ed6:	f8cd a000 	str.w	sl, [sp]
 8008eda:	2181      	movs	r1, #129	@ 0x81
 8008edc:	f7f9 ff6a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_120_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008ee0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8008ee2:	4629      	mov	r1, r5
 8008ee4:	f00e ff9f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008ee8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8008eea:	f884 52cd 	strb.w	r5, [r4, #717]	@ 0x2cd
 8008eee:	4630      	mov	r0, r6
 8008ef0:	f00c f904 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_110_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_MAUVANG_3_ID));
 8008ef4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008ef6:	2332      	movs	r3, #50	@ 0x32
 8008ef8:	a939      	add	r1, sp, #228	@ 0xe4
 8008efa:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008efe:	f00f fe73 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_110_ID_1.setPosition(129, -9, 102, 67);
 8008f02:	f06f 0208 	mvn.w	r2, #8
 8008f06:	2366      	movs	r3, #102	@ 0x66
 8008f08:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008f0a:	f8cd a000 	str.w	sl, [sp]
 8008f0e:	2181      	movs	r1, #129	@ 0x81
 8008f10:	f7f9 ff50 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_110_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008f14:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008f16:	4629      	mov	r1, r5
 8008f18:	f00e ff85 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008f1c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8008f1e:	f884 52f9 	strb.w	r5, [r4, #761]	@ 0x2f9
 8008f22:	4630      	mov	r0, r6
 8008f24:	f00c f8ea 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_100_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BAR2_ID));
 8008f28:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008f2a:	2305      	movs	r3, #5
 8008f2c:	a939      	add	r1, sp, #228	@ 0xe4
 8008f2e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008f32:	f00f fe59 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_100_ID_1.setPosition(126, 6, 105, 29);
 8008f36:	463a      	mov	r2, r7
 8008f38:	2369      	movs	r3, #105	@ 0x69
 8008f3a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008f3c:	f8cd 9000 	str.w	r9, [sp]
 8008f40:	217e      	movs	r1, #126	@ 0x7e
 8008f42:	f7f9 ff37 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_100_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008f46:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008f48:	4629      	mov	r1, r5
 8008f4a:	f00e ff6c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008f4e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8008f50:	f884 5325 	strb.w	r5, [r4, #805]	@ 0x325
 8008f54:	4630      	mov	r0, r6
 8008f56:	f00c f8d1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_90_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH9_ID));
 8008f5a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8008f5c:	2316      	movs	r3, #22
 8008f5e:	a939      	add	r1, sp, #228	@ 0xe4
 8008f60:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008f64:	f00f fe40 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_90_ID_1.setPosition(126, 6, 105, 29);
 8008f68:	463a      	mov	r2, r7
 8008f6a:	2369      	movs	r3, #105	@ 0x69
 8008f6c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8008f6e:	f8cd 9000 	str.w	r9, [sp]
 8008f72:	217e      	movs	r1, #126	@ 0x7e
 8008f74:	f7f9 ff1e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_90_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008f78:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8008f7a:	4629      	mov	r1, r5
 8008f7c:	f00e ff53 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008f80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8008f82:	f884 5351 	strb.w	r5, [r4, #849]	@ 0x351
 8008f86:	4630      	mov	r0, r6
 8008f88:	f00c f8b8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_80_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH8_ID));
 8008f8c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008f8e:	2315      	movs	r3, #21
 8008f90:	a939      	add	r1, sp, #228	@ 0xe4
 8008f92:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008f96:	f00f fe27 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_80_ID_1.setPosition(126, 6, 105, 29);
 8008f9a:	463a      	mov	r2, r7
 8008f9c:	2369      	movs	r3, #105	@ 0x69
 8008f9e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008fa0:	f8cd 9000 	str.w	r9, [sp]
 8008fa4:	217e      	movs	r1, #126	@ 0x7e
 8008fa6:	f7f9 ff05 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_80_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008faa:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008fac:	4629      	mov	r1, r5
 8008fae:	f00e ff3a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008fb2:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8008fb4:	f884 537d 	strb.w	r5, [r4, #893]	@ 0x37d
 8008fb8:	4630      	mov	r0, r6
 8008fba:	f00c f89f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_70_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH7_ID));
 8008fbe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8008fc0:	2314      	movs	r3, #20
 8008fc2:	a939      	add	r1, sp, #228	@ 0xe4
 8008fc4:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008fc8:	f00f fe0e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_70_ID_1.setPosition(126, 6, 105, 29);
 8008fcc:	463a      	mov	r2, r7
 8008fce:	2369      	movs	r3, #105	@ 0x69
 8008fd0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8008fd2:	f8cd 9000 	str.w	r9, [sp]
 8008fd6:	217e      	movs	r1, #126	@ 0x7e
 8008fd8:	f7f9 feec 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_70_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8008fdc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8008fde:	4629      	mov	r1, r5
 8008fe0:	f00e ff21 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8008fe4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8008fe6:	f884 53a9 	strb.w	r5, [r4, #937]	@ 0x3a9
 8008fea:	4630      	mov	r0, r6
 8008fec:	f00c f886 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_60_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH6_ID));
 8008ff0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8008ff2:	2313      	movs	r3, #19
 8008ff4:	a939      	add	r1, sp, #228	@ 0xe4
 8008ff6:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8008ffa:	f00f fdf5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_60_ID_1.setPosition(126, 6, 105, 29);
 8008ffe:	463a      	mov	r2, r7
 8009000:	2369      	movs	r3, #105	@ 0x69
 8009002:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8009004:	f8cd 9000 	str.w	r9, [sp]
 8009008:	217e      	movs	r1, #126	@ 0x7e
 800900a:	f7f9 fed3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_60_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800900e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8009010:	4629      	mov	r1, r5
 8009012:	f00e ff08 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009016:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8009018:	f884 53d5 	strb.w	r5, [r4, #981]	@ 0x3d5
 800901c:	4630      	mov	r0, r6
 800901e:	f00c f86d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_50_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH5_ID));
 8009022:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8009024:	f04f 0312 	mov.w	r3, #18
 8009028:	a939      	add	r1, sp, #228	@ 0xe4
 800902a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800902e:	f00f fddb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_50_ID_1.setPosition(126, 6, 105, 29);
 8009032:	463a      	mov	r2, r7
 8009034:	2369      	movs	r3, #105	@ 0x69
 8009036:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8009038:	f8cd 9000 	str.w	r9, [sp]
 800903c:	217e      	movs	r1, #126	@ 0x7e
 800903e:	f7f9 feb9 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_50_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009042:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8009044:	4629      	mov	r1, r5
 8009046:	f00e feee 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800904a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800904c:	f884 5401 	strb.w	r5, [r4, #1025]	@ 0x401
 8009050:	4630      	mov	r0, r6
 8009052:	f00c f853 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_40_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH4_ID));
 8009056:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8009058:	2311      	movs	r3, #17
 800905a:	a939      	add	r1, sp, #228	@ 0xe4
 800905c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009060:	f00f fdc2 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_40_ID_1.setPosition(126, 6, 105, 29);
 8009064:	463a      	mov	r2, r7
 8009066:	2369      	movs	r3, #105	@ 0x69
 8009068:	9814      	ldr	r0, [sp, #80]	@ 0x50
 800906a:	f8cd 9000 	str.w	r9, [sp]
 800906e:	217e      	movs	r1, #126	@ 0x7e
 8009070:	f7f9 fea0 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_40_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009074:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8009076:	4629      	mov	r1, r5
 8009078:	f00e fed5 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800907c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 800907e:	f884 542d 	strb.w	r5, [r4, #1069]	@ 0x42d
 8009082:	4630      	mov	r0, r6
 8009084:	f00c f83a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_30_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH3_ID));
 8009088:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800908a:	2310      	movs	r3, #16
 800908c:	a939      	add	r1, sp, #228	@ 0xe4
 800908e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009092:	f00f fda9 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_30_ID_1.setPosition(126, 6, 105, 29);
 8009096:	463a      	mov	r2, r7
 8009098:	2369      	movs	r3, #105	@ 0x69
 800909a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 800909c:	f8cd 9000 	str.w	r9, [sp]
 80090a0:	217e      	movs	r1, #126	@ 0x7e
 80090a2:	f7f9 fe87 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_30_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80090a6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80090a8:	4629      	mov	r1, r5
 80090aa:	f00e febc 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80090ae:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80090b0:	f884 5459 	strb.w	r5, [r4, #1113]	@ 0x459
 80090b4:	4630      	mov	r0, r6
 80090b6:	f00c f821 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80090ba:	f04f 030f 	mov.w	r3, #15
    BITMAP_HP_20_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH2_ID));
 80090be:	a939      	add	r1, sp, #228	@ 0xe4
 80090c0:	4658      	mov	r0, fp
 80090c2:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80090c6:	f00f fd8f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_20_ID_1.setPosition(126, 6, 105, 29);
 80090ca:	463a      	mov	r2, r7
 80090cc:	2369      	movs	r3, #105	@ 0x69
 80090ce:	f8cd 9000 	str.w	r9, [sp]
 80090d2:	4658      	mov	r0, fp
 80090d4:	217e      	movs	r1, #126	@ 0x7e
 80090d6:	f7f9 fe6d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_20_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80090da:	4629      	mov	r1, r5
 80090dc:	4658      	mov	r0, fp
 80090de:	f00e fea2 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80090e2:	4659      	mov	r1, fp
 80090e4:	4630      	mov	r0, r6
 80090e6:	f884 5485 	strb.w	r5, [r4, #1157]	@ 0x485
 80090ea:	f00c f807 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80090ee:	f04f 0b0e 	mov.w	fp, #14
    BITMAP_HP_10_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH1_ID));
 80090f2:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80090f4:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 80090f8:	a939      	add	r1, sp, #228	@ 0xe4
 80090fa:	f00f fd75 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_10_ID_1.setPosition(126, 6, 105, 29);
 80090fe:	463a      	mov	r2, r7
 8009100:	2369      	movs	r3, #105	@ 0x69
 8009102:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8009104:	f8cd 9000 	str.w	r9, [sp]
 8009108:	217e      	movs	r1, #126	@ 0x7e
 800910a:	f7f9 fe53 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_10_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800910e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8009110:	4629      	mov	r1, r5
 8009112:	f00e fe88 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009116:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8009118:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 800911c:	4630      	mov	r0, r6
 800911e:	f00b ffed 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BITMAP_HP_0_ID_1.setBitmap(touchgfx::Bitmap(BITMAP_BARHEALTH0_ID));
 8009122:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8009124:	230d      	movs	r3, #13
 8009126:	a939      	add	r1, sp, #228	@ 0xe4
 8009128:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800912c:	f00f fd5c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BITMAP_HP_0_ID_1.setPosition(126, 6, 105, 29);
 8009130:	463a      	mov	r2, r7
 8009132:	2369      	movs	r3, #105	@ 0x69
 8009134:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8009136:	f8cd 9000 	str.w	r9, [sp]
 800913a:	217e      	movs	r1, #126	@ 0x7e
 800913c:	f7f9 fe3a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    BITMAP_HP_0_ID_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009140:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8009142:	4629      	mov	r1, r5
 8009144:	f00e fe6f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009148:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800914a:	f884 54dd 	strb.w	r5, [r4, #1245]	@ 0x4dd
 800914e:	4630      	mov	r0, r6
 8009150:	f00b ffd4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire1.setBitmap(touchgfx::Bitmap(BITMAP_FIRE1_ID));
 8009154:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8009156:	2328      	movs	r3, #40	@ 0x28
 8009158:	a939      	add	r1, sp, #228	@ 0xe4
 800915a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800915e:	f00f fd43 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire1.setPosition(82, 154, 85, 87);
 8009162:	2357      	movs	r3, #87	@ 0x57
 8009164:	229a      	movs	r2, #154	@ 0x9a
 8009166:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8009168:	9300      	str	r3, [sp, #0]
 800916a:	2152      	movs	r1, #82	@ 0x52
 800916c:	2355      	movs	r3, #85	@ 0x55
 800916e:	f7f9 fe21 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009172:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8009174:	4629      	mov	r1, r5
 8009176:	f00e fe56 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800917a:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800917c:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 8009180:	4630      	mov	r0, r6
 8009182:	f00b ffbb 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    fire2.setBitmap(touchgfx::Bitmap(BITMAP_FIRE2_ID));
 8009186:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8009188:	2329      	movs	r3, #41	@ 0x29
 800918a:	a939      	add	r1, sp, #228	@ 0xe4
 800918c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009190:	f00f fd2a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    fire2.setPosition(-19, 43, 129, 209);
 8009194:	23d1      	movs	r3, #209	@ 0xd1
 8009196:	222b      	movs	r2, #43	@ 0x2b
 8009198:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800919a:	9300      	str	r3, [sp, #0]
 800919c:	f06f 0112 	mvn.w	r1, #18
 80091a0:	2381      	movs	r3, #129	@ 0x81
 80091a2:	f7f9 fe07 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    fire2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80091a6:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80091a8:	4629      	mov	r1, r5
 80091aa:	f00e fe3c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80091ae:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80091b0:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 80091b4:	4630      	mov	r0, r6
 80091b6:	f00b ffa1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_lose.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_LOSE_ID));
 80091ba:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80091bc:	2324      	movs	r3, #36	@ 0x24
 80091be:	a939      	add	r1, sp, #228	@ 0xe4
 80091c0:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80091c4:	f00f fd10 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_lose.setPosition(100, 137, 147, 115);
 80091c8:	2373      	movs	r3, #115	@ 0x73
 80091ca:	2289      	movs	r2, #137	@ 0x89
 80091cc:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80091ce:	9300      	str	r3, [sp, #0]
 80091d0:	2164      	movs	r1, #100	@ 0x64
 80091d2:	2393      	movs	r3, #147	@ 0x93
 80091d4:	f7f9 fdee 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80091d8:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80091da:	4629      	mov	r1, r5
 80091dc:	f00e fe23 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80091e0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80091e2:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 80091e6:	4630      	mov	r0, r6
 80091e8:	2720      	movs	r7, #32
 80091ea:	f00b ff87 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_win.setPosition(94, 62, 146, 172);
 80091ee:	f04f 09ac 	mov.w	r9, #172	@ 0xac
    bleach_win.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 80091f2:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80091f4:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 80091f8:	a939      	add	r1, sp, #228	@ 0xe4
 80091fa:	f00f fcf5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_win.setPosition(94, 62, 146, 172);
 80091fe:	223e      	movs	r2, #62	@ 0x3e
 8009200:	2392      	movs	r3, #146	@ 0x92
 8009202:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8009204:	f8cd 9000 	str.w	r9, [sp]
 8009208:	215e      	movs	r1, #94	@ 0x5e
 800920a:	f7f9 fdd3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800920e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8009210:	4629      	mov	r1, r5
 8009212:	f00e fe08 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009216:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8009218:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800921c:	4630      	mov	r0, r6
 800921e:	f00b ff6d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe_fire.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_FIRE_ID));
 8009222:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8009224:	f04f 0326 	mov.w	r3, #38	@ 0x26
 8009228:	a939      	add	r1, sp, #228	@ 0xe4
 800922a:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800922e:	f00f fcdb 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe_fire.setPosition(-11, 80, 186, 190);
 8009232:	23be      	movs	r3, #190	@ 0xbe
 8009234:	2250      	movs	r2, #80	@ 0x50
 8009236:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8009238:	9300      	str	r3, [sp, #0]
 800923a:	f06f 010a 	mvn.w	r1, #10
 800923e:	23ba      	movs	r3, #186	@ 0xba
 8009240:	f7f9 fdb8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe_fire.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009244:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8009246:	4629      	mov	r1, r5
 8009248:	f00e fded 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800924c:	991c      	ldr	r1, [sp, #112]	@ 0x70
 800924e:	f884 55b9 	strb.w	r5, [r4, #1465]	@ 0x5b9
 8009252:	4630      	mov	r0, r6
 8009254:	f04f 0825 	mov.w	r8, #37	@ 0x25
 8009258:	f00b ff50 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_spe.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_SPE_ID));
 800925c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 800925e:	f8ad 80e4 	strh.w	r8, [sp, #228]	@ 0xe4
 8009262:	a939      	add	r1, sp, #228	@ 0xe4
 8009264:	f00f fcc0 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_spe.setPosition(126, 48, 117, 130);
 8009268:	2382      	movs	r3, #130	@ 0x82
 800926a:	2230      	movs	r2, #48	@ 0x30
 800926c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 800926e:	9300      	str	r3, [sp, #0]
 8009270:	217e      	movs	r1, #126	@ 0x7e
 8009272:	2375      	movs	r3, #117	@ 0x75
 8009274:	f7f9 fd9e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009278:	981d      	ldr	r0, [sp, #116]	@ 0x74
 800927a:	4629      	mov	r1, r5
 800927c:	f00e fdd3 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009280:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8009282:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 8009286:	4630      	mov	r0, r6
 8009288:	f00b ff38 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_def.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_DEF_ID));
 800928c:	981e      	ldr	r0, [sp, #120]	@ 0x78
 800928e:	2323      	movs	r3, #35	@ 0x23
 8009290:	a939      	add	r1, sp, #228	@ 0xe4
 8009292:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009296:	f00f fca7 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_def.setPosition(100, 62, 140, 179);
 800929a:	23b3      	movs	r3, #179	@ 0xb3
 800929c:	223e      	movs	r2, #62	@ 0x3e
 800929e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80092a0:	9300      	str	r3, [sp, #0]
 80092a2:	2164      	movs	r1, #100	@ 0x64
 80092a4:	238c      	movs	r3, #140	@ 0x8c
 80092a6:	f7f9 fd85 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80092aa:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80092ac:	4629      	mov	r1, r5
 80092ae:	f00e fdba 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80092b2:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80092b4:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 80092b8:	4630      	mov	r0, r6
 80092ba:	f00b ff1f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach_atk.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ATK_ID));
 80092be:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80092c0:	2321      	movs	r3, #33	@ 0x21
 80092c2:	a939      	add	r1, sp, #228	@ 0xe4
 80092c4:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80092c8:	f00f fc8e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach_atk.setPosition(94, 62, 152, 172);
 80092cc:	2398      	movs	r3, #152	@ 0x98
 80092ce:	223e      	movs	r2, #62	@ 0x3e
 80092d0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80092d2:	f8cd 9000 	str.w	r9, [sp]
 80092d6:	215e      	movs	r1, #94	@ 0x5e
 80092d8:	f7f9 fd6c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80092dc:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80092de:	4629      	mov	r1, r5
 80092e0:	f00e fda1 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80092e4:	991f      	ldr	r1, [sp, #124]	@ 0x7c
 80092e6:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 80092ea:	4630      	mov	r0, r6
 80092ec:	f00b ff06 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_DRAGON_ID));
 80092f0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80092f2:	f8ad 70e4 	strh.w	r7, [sp, #228]	@ 0xe4
 80092f6:	a939      	add	r1, sp, #228	@ 0xe4
 80092f8:	f00f fc76 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(100, 62, 146, 172);
 80092fc:	2392      	movs	r3, #146	@ 0x92
 80092fe:	223e      	movs	r2, #62	@ 0x3e
 8009300:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8009302:	f8cd 9000 	str.w	r9, [sp]
 8009306:	2164      	movs	r1, #100	@ 0x64
 8009308:	f7f9 fd54 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800930c:	9820      	ldr	r0, [sp, #128]	@ 0x80
 800930e:	4629      	mov	r1, r5
 8009310:	f00e fd89 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009314:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8009316:	4630      	mov	r0, r6
 8009318:	f00b fef0 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800931c:	f04f 0942 	mov.w	r9, #66	@ 0x42
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ID));
 8009320:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8009322:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8009326:	a939      	add	r1, sp, #228	@ 0xe4
 8009328:	f00f fc5e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(15, 148, 67, 85);
 800932c:	2355      	movs	r3, #85	@ 0x55
 800932e:	2294      	movs	r2, #148	@ 0x94
 8009330:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8009332:	9300      	str	r3, [sp, #0]
 8009334:	210f      	movs	r1, #15
 8009336:	4653      	mov	r3, sl
 8009338:	f7f9 fd3c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800933c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 800933e:	4629      	mov	r1, r5
 8009340:	f00e fd71 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009344:	9921      	ldr	r1, [sp, #132]	@ 0x84
 8009346:	4630      	mov	r0, r6
 8009348:	f00b fed8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800934c:	f04f 0a48 	mov.w	sl, #72	@ 0x48
    naruto_win.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_WIN_ID));
 8009350:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8009352:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8009356:	a939      	add	r1, sp, #228	@ 0xe4
 8009358:	f00f fc46 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_win.setPosition(18, 145, 61, 91);
 800935c:	235b      	movs	r3, #91	@ 0x5b
 800935e:	2291      	movs	r2, #145	@ 0x91
 8009360:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8009362:	9300      	str	r3, [sp, #0]
 8009364:	2112      	movs	r1, #18
 8009366:	233d      	movs	r3, #61	@ 0x3d
 8009368:	f7f9 fd24 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800936c:	9822      	ldr	r0, [sp, #136]	@ 0x88
 800936e:	4629      	mov	r1, r5
 8009370:	f00e fd59 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009374:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8009376:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800937a:	4630      	mov	r0, r6
 800937c:	f00b febe 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_lose.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_LOSE_ID));
 8009380:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8009382:	2346      	movs	r3, #70	@ 0x46
 8009384:	a939      	add	r1, sp, #228	@ 0xe4
 8009386:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800938a:	f00f fc2d 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_lose.setPosition(23, 197, 71, 55);
 800938e:	2337      	movs	r3, #55	@ 0x37
 8009390:	22c5      	movs	r2, #197	@ 0xc5
 8009392:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8009394:	9300      	str	r3, [sp, #0]
 8009396:	2117      	movs	r1, #23
 8009398:	2347      	movs	r3, #71	@ 0x47
 800939a:	f7f9 fd0b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_lose.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800939e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80093a0:	4629      	mov	r1, r5
 80093a2:	f00e fd40 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80093a6:	9923      	ldr	r1, [sp, #140]	@ 0x8c
 80093a8:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 80093ac:	4630      	mov	r0, r6
 80093ae:	f00b fea5 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_SPE_ID));
 80093b2:	9824      	ldr	r0, [sp, #144]	@ 0x90
 80093b4:	2347      	movs	r3, #71	@ 0x47
 80093b6:	a939      	add	r1, sp, #228	@ 0xe4
 80093b8:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80093bc:	f00f fc14 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(14, 138, 72, 104);
 80093c0:	2368      	movs	r3, #104	@ 0x68
 80093c2:	228a      	movs	r2, #138	@ 0x8a
 80093c4:	9824      	ldr	r0, [sp, #144]	@ 0x90
 80093c6:	9300      	str	r3, [sp, #0]
 80093c8:	4659      	mov	r1, fp
 80093ca:	4653      	mov	r3, sl
 80093cc:	f7f9 fcf2 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80093d0:	9824      	ldr	r0, [sp, #144]	@ 0x90
 80093d2:	f8df a3b0 	ldr.w	sl, [pc, #944]	@ 8009784 <_ZN24SakuraGameScreenViewBaseC1Ev+0xf9c>
 80093d6:	4629      	mov	r1, r5
 80093d8:	f00e fd25 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80093dc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80093de:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 80093e2:	4630      	mov	r0, r6
 80093e4:	f00b fe8a 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_DEF_ID));
 80093e8:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80093ea:	2344      	movs	r3, #68	@ 0x44
 80093ec:	a939      	add	r1, sp, #228	@ 0xe4
 80093ee:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80093f2:	f00f fbf9 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(22, 154, 52, 73);
 80093f6:	2349      	movs	r3, #73	@ 0x49
 80093f8:	229a      	movs	r2, #154	@ 0x9a
 80093fa:	9825      	ldr	r0, [sp, #148]	@ 0x94
 80093fc:	9300      	str	r3, [sp, #0]
 80093fe:	2116      	movs	r1, #22
 8009400:	2334      	movs	r3, #52	@ 0x34
 8009402:	f7f9 fcd7 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009406:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8009408:	4629      	mov	r1, r5
 800940a:	f00e fd0c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800940e:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8009410:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 8009414:	4630      	mov	r0, r6
 8009416:	f00b fe71 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_SAKURA_ATK_ID));
 800941a:	9826      	ldr	r0, [sp, #152]	@ 0x98
 800941c:	2343      	movs	r3, #67	@ 0x43
 800941e:	a939      	add	r1, sp, #228	@ 0xe4
 8009420:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009424:	f00f fbe0 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(38, 160, 88, 66);
 8009428:	2358      	movs	r3, #88	@ 0x58
 800942a:	22a0      	movs	r2, #160	@ 0xa0
 800942c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 800942e:	f8cd 9000 	str.w	r9, [sp]
 8009432:	2126      	movs	r1, #38	@ 0x26
 8009434:	f7f9 fcbe 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009438:	9826      	ldr	r0, [sp, #152]	@ 0x98
 800943a:	4629      	mov	r1, r5
 800943c:	f00e fcf3 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009440:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8009442:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 8009446:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 8009448:	f04f 092e 	mov.w	r9, #46	@ 0x2e
 800944c:	f00b fe56 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 8009450:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8009452:	f8ad 50e4 	strh.w	r5, [sp, #228]	@ 0xe4
 8009456:	a939      	add	r1, sp, #228	@ 0xe4
 8009458:	f00f fbc6 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 800945c:	464b      	mov	r3, r9
 800945e:	22f2      	movs	r2, #242	@ 0xf2
 8009460:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8009462:	f8cd 9000 	str.w	r9, [sp]
 8009466:	2140      	movs	r1, #64	@ 0x40
 8009468:	f7f9 fca4 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800946c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 800946e:	4629      	mov	r1, r5
 8009470:	f00e fcd9 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009474:	9927      	ldr	r1, [sp, #156]	@ 0x9c
 8009476:	f884 579d 	strb.w	r5, [r4, #1949]	@ 0x79d
 800947a:	4630      	mov	r0, r6
 800947c:	f00b fe3e 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8009480:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8009482:	231f      	movs	r3, #31
 8009484:	a939      	add	r1, sp, #228	@ 0xe4
 8009486:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 800948a:	f00f fbad 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 800948e:	464b      	mov	r3, r9
 8009490:	22f2      	movs	r2, #242	@ 0xf2
 8009492:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8009494:	f8cd 9000 	str.w	r9, [sp]
 8009498:	217c      	movs	r1, #124	@ 0x7c
 800949a:	f7f9 fc8b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800949e:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 80094a0:	4629      	mov	r1, r5
 80094a2:	f00e fcc0 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80094a6:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80094a8:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 80094ac:	4630      	mov	r0, r6
 80094ae:	f00b fe25 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 80094b2:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80094b4:	234c      	movs	r3, #76	@ 0x4c
 80094b6:	a939      	add	r1, sp, #228	@ 0xe4
 80094b8:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80094bc:	f00f fb94 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 80094c0:	464b      	mov	r3, r9
 80094c2:	22f2      	movs	r2, #242	@ 0xf2
 80094c4:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80094c6:	f8cd 9000 	str.w	r9, [sp]
 80094ca:	21b8      	movs	r1, #184	@ 0xb8
 80094cc:	f7f9 fc72 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80094d0:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80094d2:	4629      	mov	r1, r5
 80094d4:	f00e fca7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80094d8:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 80094da:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5
 80094de:	4630      	mov	r0, r6
 80094e0:	f00b fe0c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 80094e4:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80094e6:	f04f 033a 	mov.w	r3, #58	@ 0x3a
 80094ea:	a939      	add	r1, sp, #228	@ 0xe4
 80094ec:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80094f0:	f00f fb7a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 80094f4:	464b      	mov	r3, r9
 80094f6:	22f1      	movs	r2, #241	@ 0xf1
 80094f8:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 80094fa:	f8cd 9000 	str.w	r9, [sp]
 80094fe:	2102      	movs	r1, #2
 8009500:	f7f9 fc58 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009504:	982a      	ldr	r0, [sp, #168]	@ 0xa8
 8009506:	4629      	mov	r1, r5
 8009508:	f00e fc8d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800950c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800950e:	f884 5821 	strb.w	r5, [r4, #2081]	@ 0x821
 8009512:	4630      	mov	r0, r6
 8009514:	f00b fdf2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 8009518:	982b      	ldr	r0, [sp, #172]	@ 0xac
 800951a:	2339      	movs	r3, #57	@ 0x39
 800951c:	a939      	add	r1, sp, #228	@ 0xe4
 800951e:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009522:	f00f fb61 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 8009526:	464b      	mov	r3, r9
 8009528:	22f1      	movs	r2, #241	@ 0xf1
 800952a:	982b      	ldr	r0, [sp, #172]	@ 0xac
 800952c:	f8cd 9000 	str.w	r9, [sp]
 8009530:	2102      	movs	r1, #2
 8009532:	f7f9 fc3f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009536:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8009538:	4629      	mov	r1, r5
 800953a:	f00e fc74 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    chakra_box1.setPosition(14, 43, 86, 5);
 800953e:	f04f 0905 	mov.w	r9, #5
 8009542:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8009544:	4630      	mov	r0, r6
 8009546:	f00b fdd9 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800954a:	9836      	ldr	r0, [sp, #216]	@ 0xd8
 800954c:	f8cd 9000 	str.w	r9, [sp]
 8009550:	2356      	movs	r3, #86	@ 0x56
 8009552:	222b      	movs	r2, #43	@ 0x2b
 8009554:	4659      	mov	r1, fp
 8009556:	f7f9 fc2d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800955a:	9936      	ldr	r1, [sp, #216]	@ 0xd8
 800955c:	f8c4 a87c 	str.w	sl, [r4, #2172]	@ 0x87c
 8009560:	4630      	mov	r0, r6
 8009562:	f00b fdcb 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakra_box2.setPosition(135, 43, 86, 5);
 8009566:	222b      	movs	r2, #43	@ 0x2b
 8009568:	9837      	ldr	r0, [sp, #220]	@ 0xdc
 800956a:	f8cd 9000 	str.w	r9, [sp]
 800956e:	2356      	movs	r3, #86	@ 0x56
 8009570:	2187      	movs	r1, #135	@ 0x87
 8009572:	f7f9 fc1f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009576:	9937      	ldr	r1, [sp, #220]	@ 0xdc
 8009578:	f8c4 a8a8 	str.w	sl, [r4, #2216]	@ 0x8a8
 800957c:	4630      	mov	r0, r6
 800957e:	f00b fdbd 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gameover.setPosition(65, 6, 110, 157);
 8009582:	f04f 099d 	mov.w	r9, #157	@ 0x9d
    gameover.setBitmap(touchgfx::Bitmap(BITMAP_GAMEOVER_ID));
 8009586:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8009588:	232a      	movs	r3, #42	@ 0x2a
 800958a:	a939      	add	r1, sp, #228	@ 0xe4
 800958c:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 8009590:	f00f fb2a 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    gameover.setPosition(65, 6, 110, 157);
 8009594:	2206      	movs	r2, #6
 8009596:	236e      	movs	r3, #110	@ 0x6e
 8009598:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800959a:	f8cd 9000 	str.w	r9, [sp]
 800959e:	2141      	movs	r1, #65	@ 0x41
 80095a0:	f7f9 fc08 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    gameover.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80095a4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 80095a6:	4629      	mov	r1, r5
 80095a8:	f00e fc3d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80095ac:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 80095ae:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 80095b2:	4630      	mov	r0, r6
 80095b4:	f00b fda2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    win.setBitmap(touchgfx::Bitmap(BITMAP_YOUWIN_ID));
 80095b8:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80095ba:	2359      	movs	r3, #89	@ 0x59
 80095bc:	a939      	add	r1, sp, #228	@ 0xe4
 80095be:	f8ad 30e4 	strh.w	r3, [sp, #228]	@ 0xe4
 80095c2:	f00f fb11 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    win.setPosition(65, 6, 110, 157);
 80095c6:	236e      	movs	r3, #110	@ 0x6e
 80095c8:	2206      	movs	r2, #6
 80095ca:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80095cc:	f8cd 9000 	str.w	r9, [sp]
 80095d0:	2141      	movs	r1, #65	@ 0x41
 80095d2:	f7f9 fbef 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    win.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80095d6:	982d      	ldr	r0, [sp, #180]	@ 0xb4
 80095d8:	4629      	mov	r1, r5
 80095da:	f00e fc24 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80095de:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80095e0:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 80095e4:	4630      	mov	r0, r6
 80095e6:	f00b fd89 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80095ea:	f04f 0958 	mov.w	r9, #88	@ 0x58
    x2dame_2.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 80095ee:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 80095f0:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 80095f4:	a939      	add	r1, sp, #228	@ 0xe4
 80095f6:	f00f faf7 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_2.setPosition(199, 61, 32, 37);
 80095fa:	463b      	mov	r3, r7
 80095fc:	223d      	movs	r2, #61	@ 0x3d
 80095fe:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 8009600:	f8cd 8000 	str.w	r8, [sp]
 8009604:	21c7      	movs	r1, #199	@ 0xc7
 8009606:	f7f9 fbd5 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800960a:	982e      	ldr	r0, [sp, #184]	@ 0xb8
 800960c:	4629      	mov	r1, r5
 800960e:	f00e fc0a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009612:	992e      	ldr	r1, [sp, #184]	@ 0xb8
 8009614:	f884 5929 	strb.w	r5, [r4, #2345]	@ 0x929
 8009618:	4630      	mov	r0, r6
 800961a:	f00b fd6f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    x2dame_1.setBitmap(touchgfx::Bitmap(BITMAP_X2DAME_ID));
 800961e:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8009620:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8009624:	a939      	add	r1, sp, #228	@ 0xe4
 8009626:	f00f fadf 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x2dame_1.setPosition(7, 61, 32, 37);
 800962a:	463b      	mov	r3, r7
 800962c:	223d      	movs	r2, #61	@ 0x3d
 800962e:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 8009630:	f8cd 8000 	str.w	r8, [sp]
 8009634:	2107      	movs	r1, #7
 8009636:	f7f9 fbbd 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    x2dame_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800963a:	982f      	ldr	r0, [sp, #188]	@ 0xbc
 800963c:	4629      	mov	r1, r5
 800963e:	f00e fbf2 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009642:	992f      	ldr	r1, [sp, #188]	@ 0xbc
 8009644:	f884 5955 	strb.w	r5, [r4, #2389]	@ 0x955
 8009648:	4630      	mov	r0, r6
 800964a:	f00b fd57 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800964e:	f04f 092c 	mov.w	r9, #44	@ 0x2c
    healthplus_1.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 8009652:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8009654:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8009658:	a939      	add	r1, sp, #228	@ 0xe4
 800965a:	f00f fac5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_1.setPosition(9, 61, 32, 37);
 800965e:	463b      	mov	r3, r7
 8009660:	223d      	movs	r2, #61	@ 0x3d
 8009662:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8009664:	f8cd 8000 	str.w	r8, [sp]
 8009668:	2109      	movs	r1, #9
 800966a:	f7f9 fba3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800966e:	9830      	ldr	r0, [sp, #192]	@ 0xc0
 8009670:	4629      	mov	r1, r5
 8009672:	f00e fbd8 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009676:	9930      	ldr	r1, [sp, #192]	@ 0xc0
 8009678:	f884 5981 	strb.w	r5, [r4, #2433]	@ 0x981
 800967c:	4630      	mov	r0, r6
 800967e:	f00b fd3d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009682:	f04f 0a1e 	mov.w	sl, #30
    chakragain_1.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 8009686:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8009688:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 800968c:	a939      	add	r1, sp, #228	@ 0xe4
 800968e:	f00f faab 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_1.setPosition(9, 61, 32, 37);
 8009692:	463b      	mov	r3, r7
 8009694:	223d      	movs	r2, #61	@ 0x3d
 8009696:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 8009698:	f8cd 8000 	str.w	r8, [sp]
 800969c:	2109      	movs	r1, #9
 800969e:	f7f9 fb89 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80096a2:	9831      	ldr	r0, [sp, #196]	@ 0xc4
 80096a4:	4629      	mov	r1, r5
 80096a6:	f00e fbbe 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80096aa:	9931      	ldr	r1, [sp, #196]	@ 0xc4
 80096ac:	f884 59ad 	strb.w	r5, [r4, #2477]	@ 0x9ad
 80096b0:	4630      	mov	r0, r6
 80096b2:	f00b fd23 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80096b6:	f04f 0b4b 	mov.w	fp, #75	@ 0x4b
    sheild_1.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 80096ba:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 80096bc:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 80096c0:	a939      	add	r1, sp, #228	@ 0xe4
 80096c2:	f00f fa91 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_1.setPosition(8, 59, 32, 37);
 80096c6:	463b      	mov	r3, r7
 80096c8:	223b      	movs	r2, #59	@ 0x3b
 80096ca:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 80096cc:	f8cd 8000 	str.w	r8, [sp]
 80096d0:	2108      	movs	r1, #8
 80096d2:	f7f9 fb6f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80096d6:	9832      	ldr	r0, [sp, #200]	@ 0xc8
 80096d8:	4629      	mov	r1, r5
 80096da:	f00e fba4 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80096de:	9932      	ldr	r1, [sp, #200]	@ 0xc8
 80096e0:	f884 59d9 	strb.w	r5, [r4, #2521]	@ 0x9d9
 80096e4:	4630      	mov	r0, r6
 80096e6:	f00b fd09 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sheild_2.setBitmap(touchgfx::Bitmap(BITMAP_SHIELD_ID));
 80096ea:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 80096ec:	f8ad b0e4 	strh.w	fp, [sp, #228]	@ 0xe4
 80096f0:	a939      	add	r1, sp, #228	@ 0xe4
 80096f2:	f00f fa79 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    sheild_2.setPosition(199, 58, 32, 37);
 80096f6:	463b      	mov	r3, r7
 80096f8:	223a      	movs	r2, #58	@ 0x3a
 80096fa:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 80096fc:	f8cd 8000 	str.w	r8, [sp]
 8009700:	21c7      	movs	r1, #199	@ 0xc7
 8009702:	f7f9 fb57 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    sheild_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009706:	9833      	ldr	r0, [sp, #204]	@ 0xcc
 8009708:	4629      	mov	r1, r5
 800970a:	f00e fb8c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800970e:	9933      	ldr	r1, [sp, #204]	@ 0xcc
 8009710:	f884 5a05 	strb.w	r5, [r4, #2565]	@ 0xa05
 8009714:	4630      	mov	r0, r6
 8009716:	f00b fcf1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    chakragain_2.setBitmap(touchgfx::Bitmap(BITMAP_CHAKRAGAIN_ID));
 800971a:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 800971c:	f8ad a0e4 	strh.w	sl, [sp, #228]	@ 0xe4
 8009720:	a939      	add	r1, sp, #228	@ 0xe4
 8009722:	f00f fa61 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    chakragain_2.setPosition(199, 61, 32, 37);
 8009726:	463b      	mov	r3, r7
 8009728:	223d      	movs	r2, #61	@ 0x3d
 800972a:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 800972c:	f8cd 8000 	str.w	r8, [sp]
 8009730:	21c7      	movs	r1, #199	@ 0xc7
 8009732:	f7f9 fb3f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    chakragain_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009736:	9834      	ldr	r0, [sp, #208]	@ 0xd0
 8009738:	4629      	mov	r1, r5
 800973a:	f00e fb74 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800973e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
 8009740:	f884 5a31 	strb.w	r5, [r4, #2609]	@ 0xa31
 8009744:	4630      	mov	r0, r6
 8009746:	f00b fcd9 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    healthplus_2.setBitmap(touchgfx::Bitmap(BITMAP_HEALTHPLUS_ID));
 800974a:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 800974c:	f8ad 90e4 	strh.w	r9, [sp, #228]	@ 0xe4
 8009750:	a939      	add	r1, sp, #228	@ 0xe4
 8009752:	f00f fa49 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    healthplus_2.setPosition(199, 61, 32, 37);
 8009756:	463b      	mov	r3, r7
 8009758:	223d      	movs	r2, #61	@ 0x3d
 800975a:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 800975c:	f8cd 8000 	str.w	r8, [sp]
 8009760:	21c7      	movs	r1, #199	@ 0xc7
 8009762:	f7f9 fb27 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    healthplus_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009766:	9835      	ldr	r0, [sp, #212]	@ 0xd4
 8009768:	4629      	mov	r1, r5
 800976a:	f00e fb5c 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800976e:	4630      	mov	r0, r6
 8009770:	9935      	ldr	r1, [sp, #212]	@ 0xd4
 8009772:	f884 5a5d 	strb.w	r5, [r4, #2653]	@ 0xa5d
 8009776:	f00b fcc1 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800977a:	4620      	mov	r0, r4
 800977c:	b03b      	add	sp, #236	@ 0xec
 800977e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009782:	bf00      	nop
 8009784:	ff0066ff 	.word	0xff0066ff

08009788 <_ZN8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009788:	4770      	bx	lr

0800978a <_ZN24SakuraMainScreenViewBaseD1Ev>:
}

SakuraMainScreenViewBase::~SakuraMainScreenViewBase()
{

}
 800978a:	4770      	bx	lr

0800978c <_ZN24SakuraMainScreenViewBase11setupScreenEv>:

void SakuraMainScreenViewBase::setupScreen()
{

}
 800978c:	4770      	bx	lr

0800978e <_ZN8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800978e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009790:	68c2      	ldr	r2, [r0, #12]
 8009792:	6844      	ldr	r4, [r0, #4]
 8009794:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009796:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009798:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800979c:	07d2      	lsls	r2, r2, #31
 800979e:	bf48      	it	mi
 80097a0:	5962      	ldrmi	r2, [r4, r5]
 80097a2:	689b      	ldr	r3, [r3, #8]
    }
 80097a4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80097a6:	bf48      	it	mi
 80097a8:	58d3      	ldrmi	r3, [r2, r3]
 80097aa:	4718      	bx	r3

080097ac <_ZNK8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80097ac:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80097ae:	6840      	ldr	r0, [r0, #4]
 80097b0:	b130      	cbz	r0, 80097c0 <_ZNK8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80097b2:	689a      	ldr	r2, [r3, #8]
 80097b4:	b91a      	cbnz	r2, 80097be <_ZNK8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80097b6:	68d8      	ldr	r0, [r3, #12]
 80097b8:	f000 0001 	and.w	r0, r0, #1
 80097bc:	4770      	bx	lr
 80097be:	2001      	movs	r0, #1
    }
 80097c0:	4770      	bx	lr

080097c2 <_ZN8touchgfx8CallbackI24SakuraMainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80097c2:	b510      	push	{r4, lr}
 80097c4:	2110      	movs	r1, #16
 80097c6:	4604      	mov	r4, r0
 80097c8:	f024 f8ad 	bl	802d926 <_ZdlPvj>
 80097cc:	4620      	mov	r0, r4
 80097ce:	bd10      	pop	{r4, pc}

080097d0 <_ZN24SakuraMainScreenViewBaseD0Ev>:
SakuraMainScreenViewBase::~SakuraMainScreenViewBase()
 80097d0:	b510      	push	{r4, lr}
}
 80097d2:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
SakuraMainScreenViewBase::~SakuraMainScreenViewBase()
 80097d6:	4604      	mov	r4, r0
}
 80097d8:	f024 f8a5 	bl	802d926 <_ZdlPvj>
 80097dc:	4620      	mov	r0, r4
 80097de:	bd10      	pop	{r4, pc}

080097e0 <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SakuraMainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 80097e0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &SELECT_1)
 80097e2:	f500 730e 	add.w	r3, r0, #568	@ 0x238
 80097e6:	4299      	cmp	r1, r3
{
 80097e8:	4604      	mov	r4, r0
 80097ea:	460d      	mov	r5, r1
    if (&src == &SELECT_1)
 80097ec:	d103      	bne.n	80097f6 <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~SakuraMainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80097ee:	f011 fe09 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Select
        //When SELECT_1 clicked change screen to Character_2
        //Go to Character_2 with no screen transition
        application().gotoCharacter_2ScreenNoTransition();
 80097f2:	f7fa fbdd 	bl	8003fb0 <_ZN23FrontendApplicationBase33gotoCharacter_2ScreenNoTransitionEv>
    }
    if (&src == &PLAY)
 80097f6:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 80097fa:	429d      	cmp	r5, r3
 80097fc:	d103      	bne.n	8009806 <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 80097fe:	f011 fe01 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //GameScreen
        //When PLAY clicked change screen to SakuraGameScreen
        //Go to SakuraGameScreen with no screen transition
        application().gotoSakuraGameScreenScreenNoTransition();
 8009802:	f7fa fc05 	bl	8004010 <_ZN23FrontendApplicationBase38gotoSakuraGameScreenScreenNoTransitionEv>
    }
    if (&src == &REWARD)
 8009806:	f504 74a4 	add.w	r4, r4, #328	@ 0x148
 800980a:	42a5      	cmp	r5, r4
 800980c:	d105      	bne.n	800981a <_ZN24SakuraMainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
 800980e:	f011 fdf9 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //REWARD
        //When REWARD clicked change screen to RewardScreen
        //Go to RewardScreen with no screen transition
        application().gotoRewardScreenScreenNoTransition();
    }
}
 8009812:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoRewardScreenScreenNoTransition();
 8009816:	f7fa bbdb 	b.w	8003fd0 <_ZN23FrontendApplicationBase34gotoRewardScreenScreenNoTransitionEv>
}
 800981a:	bd38      	pop	{r3, r4, r5, pc}

0800981c <_ZN24SakuraMainScreenViewBaseC1Ev>:
SakuraMainScreenViewBase::SakuraMainScreenViewBase() :
 800981c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009820:	4604      	mov	r4, r0
 8009822:	b089      	sub	sp, #36	@ 0x24
    flexButtonCallback(this, &SakuraMainScreenViewBase::flexButtonCallbackHandler)
 8009824:	46a2      	mov	sl, r4
 8009826:	2500      	movs	r5, #0
 8009828:	f013 fe12 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 800982c:	4ba9      	ldr	r3, [pc, #676]	@ (8009ad4 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2b8>)
 800982e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8009830:	f84a 3b40 	str.w	r3, [sl], #64
 8009834:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8009838:	4650      	mov	r0, sl
 800983a:	f7f9 facf 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 800983e:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8009842:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 8009846:	a907      	add	r1, sp, #28
 8009848:	4648      	mov	r0, r9
 800984a:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 800984e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8009852:	f00e fb2d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009856:	a907      	add	r1, sp, #28
 8009858:	4640      	mov	r0, r8
 800985a:	f104 06f0 	add.w	r6, r4, #240	@ 0xf0
 800985e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8009862:	f00e fb25 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009866:	a907      	add	r1, sp, #28
 8009868:	4638      	mov	r0, r7
 800986a:	f8ad b01c 	strh.w	fp, [sp, #28]
 800986e:	f00e fb1f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009872:	a907      	add	r1, sp, #28
 8009874:	4630      	mov	r0, r6
 8009876:	f8ad b01c 	strh.w	fp, [sp, #28]
 800987a:	f00e fb19 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800987e:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8009882:	a907      	add	r1, sp, #28
 8009884:	4618      	mov	r0, r3
 8009886:	9302      	str	r3, [sp, #8]
 8009888:	f8ad b01c 	strh.w	fp, [sp, #28]
 800988c:	f00e fb10 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009890:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8009894:	4618      	mov	r0, r3
 8009896:	9303      	str	r3, [sp, #12]
 8009898:	f7f9 fabc 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800989c:	f504 73e0 	add.w	r3, r4, #448	@ 0x1c0
 80098a0:	4618      	mov	r0, r3
 80098a2:	9304      	str	r3, [sp, #16]
 80098a4:	f7f9 fab6 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80098a8:	f504 730e 	add.w	r3, r4, #568	@ 0x238
 80098ac:	4618      	mov	r0, r3
 80098ae:	9305      	str	r3, [sp, #20]
 80098b0:	f7f9 fab0 	bl	8002e14 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80098b4:	4b88      	ldr	r3, [pc, #544]	@ (8009ad8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2bc>)
 80098b6:	e9c4 34ac 	strd	r3, r4, [r4, #688]	@ 0x2b0
 80098ba:	4b88      	ldr	r3, [pc, #544]	@ (8009adc <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c0>)
 80098bc:	e9c4 35ae 	strd	r3, r5, [r4, #696]	@ 0x2b8
    __background.setPosition(0, 0, 240, 320);
 80098c0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80098c4:	462a      	mov	r2, r5
 80098c6:	9300      	str	r3, [sp, #0]
 80098c8:	4629      	mov	r1, r5
 80098ca:	4650      	mov	r0, sl
 80098cc:	23f0      	movs	r3, #240	@ 0xf0
 80098ce:	f104 0b04 	add.w	fp, r4, #4
 80098d2:	f7f9 fa6f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80098d6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80098da:	66a3      	str	r3, [r4, #104]	@ 0x68
 80098dc:	4651      	mov	r1, sl
 80098de:	4658      	mov	r0, fp
 80098e0:	f00b fc0c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80098e4:	232f      	movs	r3, #47	@ 0x2f
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_ID));
 80098e6:	a907      	add	r1, sp, #28
 80098e8:	4648      	mov	r0, r9
 80098ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80098ee:	f00f f97b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(0, 0, 240, 320);
 80098f2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80098f6:	462a      	mov	r2, r5
 80098f8:	9300      	str	r3, [sp, #0]
 80098fa:	4629      	mov	r1, r5
 80098fc:	23f0      	movs	r3, #240	@ 0xf0
 80098fe:	4648      	mov	r0, r9
 8009900:	f7f9 fa58 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009904:	4629      	mov	r1, r5
 8009906:	4648      	mov	r0, r9
 8009908:	f00e fa8d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800990c:	4649      	mov	r1, r9
 800990e:	4658      	mov	r0, fp
 8009910:	f00b fbf4 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009914:	2355      	movs	r3, #85	@ 0x55
    title.setBitmap(touchgfx::Bitmap(BITMAP_TITLE1_ID));
 8009916:	a907      	add	r1, sp, #28
 8009918:	4640      	mov	r0, r8
 800991a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800991e:	f00f f963 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title.setPosition(41, 14, 158, 112);
 8009922:	2370      	movs	r3, #112	@ 0x70
 8009924:	220e      	movs	r2, #14
 8009926:	9300      	str	r3, [sp, #0]
 8009928:	4640      	mov	r0, r8
 800992a:	239e      	movs	r3, #158	@ 0x9e
 800992c:	2129      	movs	r1, #41	@ 0x29
 800992e:	f7f9 fa41 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    title.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009932:	4629      	mov	r1, r5
 8009934:	4640      	mov	r0, r8
 8009936:	f00e fa76 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800993a:	4641      	mov	r1, r8
 800993c:	4658      	mov	r0, fp
 800993e:	f00b fbdd 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009942:	2349      	movs	r3, #73	@ 0x49
    select_img.setBitmap(touchgfx::Bitmap(BITMAP_SELECTCHA_ID));
 8009944:	a907      	add	r1, sp, #28
 8009946:	4638      	mov	r0, r7
 8009948:	f8ad 301c 	strh.w	r3, [sp, #28]
 800994c:	f00f f94c 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select_img.setPosition(56, 145, 129, 64);
 8009950:	2340      	movs	r3, #64	@ 0x40
 8009952:	2291      	movs	r2, #145	@ 0x91
 8009954:	9300      	str	r3, [sp, #0]
 8009956:	4638      	mov	r0, r7
 8009958:	2381      	movs	r3, #129	@ 0x81
 800995a:	2138      	movs	r1, #56	@ 0x38
 800995c:	f7f9 fa2a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    select_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009960:	4629      	mov	r1, r5
 8009962:	4638      	mov	r0, r7
 8009964:	f00e fa5f 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009968:	4639      	mov	r1, r7
 800996a:	4658      	mov	r0, fp
 800996c:	f00b fbc6 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009970:	233c      	movs	r3, #60	@ 0x3c
    play_img.setBitmap(touchgfx::Bitmap(BITMAP_PLAYNOW_ID));
 8009972:	a907      	add	r1, sp, #28
 8009974:	4630      	mov	r0, r6
 8009976:	f8ad 301c 	strh.w	r3, [sp, #28]
 800997a:	f00f f935 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    play_img.setPosition(57, 219, 124, 65);
 800997e:	2341      	movs	r3, #65	@ 0x41
 8009980:	22db      	movs	r2, #219	@ 0xdb
 8009982:	9300      	str	r3, [sp, #0]
 8009984:	4630      	mov	r0, r6
 8009986:	237c      	movs	r3, #124	@ 0x7c
 8009988:	2139      	movs	r1, #57	@ 0x39
 800998a:	f7f9 fa13 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    play_img.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800998e:	4629      	mov	r1, r5
 8009990:	4630      	mov	r0, r6
 8009992:	f00e fa48 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009996:	4631      	mov	r1, r6
 8009998:	4658      	mov	r0, fp
 800999a:	f00b fbaf 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    reward.setBitmap(touchgfx::Bitmap(BITMAP_TROPHY_ID));
 800999e:	9802      	ldr	r0, [sp, #8]
        down = colorPressed;
 80099a0:	4f4f      	ldr	r7, [pc, #316]	@ (8009ae0 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c4>)
 80099a2:	f8df a148 	ldr.w	sl, [pc, #328]	@ 8009aec <_ZN24SakuraMainScreenViewBaseC1Ev+0x2d0>
 80099a6:	2357      	movs	r3, #87	@ 0x57
 80099a8:	a907      	add	r1, sp, #28
 80099aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80099ae:	f00f f91b 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    reward.setPosition(184, 280, 55, 36);
 80099b2:	2324      	movs	r3, #36	@ 0x24
 80099b4:	f44f 728c 	mov.w	r2, #280	@ 0x118
 80099b8:	9802      	ldr	r0, [sp, #8]
 80099ba:	9300      	str	r3, [sp, #0]
 80099bc:	21b8      	movs	r1, #184	@ 0xb8
 80099be:	2337      	movs	r3, #55	@ 0x37
 80099c0:	f7f9 f9f8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    reward.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80099c4:	9802      	ldr	r0, [sp, #8]
 80099c6:	4629      	mov	r1, r5
 80099c8:	f00e fa2d 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 80099cc:	f04f 092c 	mov.w	r9, #44	@ 0x2c
 80099d0:	9902      	ldr	r1, [sp, #8]
 80099d2:	4658      	mov	r0, fp
 80099d4:	f00b fb92 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80099d8:	4629      	mov	r1, r5
 80099da:	f8cd 9000 	str.w	r9, [sp]
 80099de:	462a      	mov	r2, r5
 80099e0:	f504 70be 	add.w	r0, r4, #380	@ 0x17c
 80099e4:	2337      	movs	r3, #55	@ 0x37
 80099e6:	f7f9 f9e5 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 80099ea:	4b3e      	ldr	r3, [pc, #248]	@ (8009ae4 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c8>)
 80099ec:	4a3e      	ldr	r2, [pc, #248]	@ (8009ae8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 80099ee:	9803      	ldr	r0, [sp, #12]
 80099f0:	f04f 0805 	mov.w	r8, #5
        borderDown = borderColorPressed;
 80099f4:	e9c4 326e 	strd	r3, r2, [r4, #440]	@ 0x1b8
        down = colorPressed;
 80099f8:	e9c4 7a6c 	strd	r7, sl, [r4, #432]	@ 0x1b0
 80099fc:	f8a4 81ac 	strh.w	r8, [r4, #428]	@ 0x1ac
        handlePressedUpdated();
 8009a00:	f7f9 f930 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    REWARD.setAction(flexButtonCallback);
 8009a04:	f504 762c 	add.w	r6, r4, #688	@ 0x2b0
    REWARD.setAlpha(6);
 8009a08:	9803      	ldr	r0, [sp, #12]
 8009a0a:	2106      	movs	r1, #6
 8009a0c:	f7f9 f9fc 	bl	8002e08 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    REWARD.setPosition(184, 276, 55, 44);
 8009a10:	9803      	ldr	r0, [sp, #12]
 8009a12:	f8c4 6178 	str.w	r6, [r4, #376]	@ 0x178
 8009a16:	2337      	movs	r3, #55	@ 0x37
 8009a18:	f8cd 9000 	str.w	r9, [sp]
 8009a1c:	f44f 728a 	mov.w	r2, #276	@ 0x114
 8009a20:	21b8      	movs	r1, #184	@ 0xb8
 8009a22:	f7f9 f9c7 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8009a26:	f04f 0936 	mov.w	r9, #54	@ 0x36
 8009a2a:	9903      	ldr	r1, [sp, #12]
 8009a2c:	4658      	mov	r0, fp
 8009a2e:	f00b fb65 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a32:	4629      	mov	r1, r5
 8009a34:	462a      	mov	r2, r5
 8009a36:	f504 70fa 	add.w	r0, r4, #500	@ 0x1f4
 8009a3a:	f8cd 9000 	str.w	r9, [sp]
 8009a3e:	2366      	movs	r3, #102	@ 0x66
 8009a40:	f7f9 f9b8 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8009a44:	4b27      	ldr	r3, [pc, #156]	@ (8009ae4 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c8>)
 8009a46:	4a28      	ldr	r2, [pc, #160]	@ (8009ae8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 8009a48:	9804      	ldr	r0, [sp, #16]
 8009a4a:	f8a4 8224 	strh.w	r8, [r4, #548]	@ 0x224
        borderDown = borderColorPressed;
 8009a4e:	e9c4 328c 	strd	r3, r2, [r4, #560]	@ 0x230
        down = colorPressed;
 8009a52:	e9c4 7a8a 	strd	r7, sl, [r4, #552]	@ 0x228
        handlePressedUpdated();
 8009a56:	f7f9 f905 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    PLAY.setAlpha(6);
 8009a5a:	9804      	ldr	r0, [sp, #16]
 8009a5c:	2106      	movs	r1, #6
 8009a5e:	f7f9 f9d3 	bl	8002e08 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    PLAY.setPosition(69, 224, 102, 54);
 8009a62:	9804      	ldr	r0, [sp, #16]
 8009a64:	f8c4 61f0 	str.w	r6, [r4, #496]	@ 0x1f0
 8009a68:	2366      	movs	r3, #102	@ 0x66
 8009a6a:	22e0      	movs	r2, #224	@ 0xe0
 8009a6c:	f8cd 9000 	str.w	r9, [sp]
 8009a70:	2145      	movs	r1, #69	@ 0x45
 8009a72:	f7f9 f99f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a76:	9904      	ldr	r1, [sp, #16]
 8009a78:	4658      	mov	r0, fp
 8009a7a:	f00b fb3f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8009a7e:	4629      	mov	r1, r5
 8009a80:	462a      	mov	r2, r5
 8009a82:	f504 701b 	add.w	r0, r4, #620	@ 0x26c
 8009a86:	f8cd 9000 	str.w	r9, [sp]
 8009a8a:	2366      	movs	r3, #102	@ 0x66
 8009a8c:	f7f9 f992 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderDown = borderColorPressed;
 8009a90:	4b14      	ldr	r3, [pc, #80]	@ (8009ae4 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2c8>)
 8009a92:	4a15      	ldr	r2, [pc, #84]	@ (8009ae8 <_ZN24SakuraMainScreenViewBaseC1Ev+0x2cc>)
        handlePressedUpdated();
 8009a94:	9805      	ldr	r0, [sp, #20]
 8009a96:	f8a4 829c 	strh.w	r8, [r4, #668]	@ 0x29c
        borderDown = borderColorPressed;
 8009a9a:	e9c4 32aa 	strd	r3, r2, [r4, #680]	@ 0x2a8
        down = colorPressed;
 8009a9e:	e9c4 7aa8 	strd	r7, sl, [r4, #672]	@ 0x2a0
        handlePressedUpdated();
 8009aa2:	f7f9 f8df 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    SELECT_1.setAlpha(6);
 8009aa6:	9805      	ldr	r0, [sp, #20]
 8009aa8:	2106      	movs	r1, #6
 8009aaa:	f7f9 f9ad 	bl	8002e08 <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    SELECT_1.setPosition(68, 160, 102, 54);
 8009aae:	9805      	ldr	r0, [sp, #20]
 8009ab0:	f8c4 6268 	str.w	r6, [r4, #616]	@ 0x268
 8009ab4:	2366      	movs	r3, #102	@ 0x66
 8009ab6:	22a0      	movs	r2, #160	@ 0xa0
 8009ab8:	f8cd 9000 	str.w	r9, [sp]
 8009abc:	2144      	movs	r1, #68	@ 0x44
 8009abe:	f7f9 f979 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009ac2:	4658      	mov	r0, fp
 8009ac4:	9905      	ldr	r1, [sp, #20]
 8009ac6:	f00b fb19 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009aca:	4620      	mov	r0, r4
 8009acc:	b009      	add	sp, #36	@ 0x24
 8009ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ad2:	bf00      	nop
 8009ad4:	08032678 	.word	0x08032678
 8009ad8:	08032660 	.word	0x08032660
 8009adc:	080097e1 	.word	0x080097e1
 8009ae0:	ff006699 	.word	0xff006699
 8009ae4:	ff003366 	.word	0xff003366
 8009ae8:	ff336699 	.word	0xff336699
 8009aec:	ff0099cc 	.word	0xff0099cc

08009af0 <_ZN8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009af0:	4770      	bx	lr

08009af2 <_ZN14SpongeViewBaseD1Ev>:
}

SpongeViewBase::~SpongeViewBase()
{

}
 8009af2:	4770      	bx	lr

08009af4 <_ZN14SpongeViewBase11setupScreenEv>:

void SpongeViewBase::setupScreen()
{

}
 8009af4:	4770      	bx	lr

08009af6 <_ZN8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009af6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009af8:	68c2      	ldr	r2, [r0, #12]
 8009afa:	6844      	ldr	r4, [r0, #4]
 8009afc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009afe:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009b00:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009b04:	07d2      	lsls	r2, r2, #31
 8009b06:	bf48      	it	mi
 8009b08:	5962      	ldrmi	r2, [r4, r5]
 8009b0a:	689b      	ldr	r3, [r3, #8]
    }
 8009b0c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009b0e:	bf48      	it	mi
 8009b10:	58d3      	ldrmi	r3, [r2, r3]
 8009b12:	4718      	bx	r3

08009b14 <_ZNK8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8009b14:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8009b16:	6840      	ldr	r0, [r0, #4]
 8009b18:	b130      	cbz	r0, 8009b28 <_ZNK8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8009b1a:	689a      	ldr	r2, [r3, #8]
 8009b1c:	b91a      	cbnz	r2, 8009b26 <_ZNK8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8009b1e:	68d8      	ldr	r0, [r3, #12]
 8009b20:	f000 0001 	and.w	r0, r0, #1
 8009b24:	4770      	bx	lr
 8009b26:	2001      	movs	r0, #1
    }
 8009b28:	4770      	bx	lr

08009b2a <_ZN8touchgfx8CallbackI14SpongeViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009b2a:	b510      	push	{r4, lr}
 8009b2c:	2110      	movs	r1, #16
 8009b2e:	4604      	mov	r4, r0
 8009b30:	f023 fef9 	bl	802d926 <_ZdlPvj>
 8009b34:	4620      	mov	r0, r4
 8009b36:	bd10      	pop	{r4, pc}

08009b38 <_ZN14SpongeViewBaseD0Ev>:
SpongeViewBase::~SpongeViewBase()
 8009b38:	b510      	push	{r4, lr}
}
 8009b3a:	f44f 714c 	mov.w	r1, #816	@ 0x330
SpongeViewBase::~SpongeViewBase()
 8009b3e:	4604      	mov	r4, r0
}
 8009b40:	f023 fef1 	bl	802d926 <_ZdlPvj>
 8009b44:	4620      	mov	r0, r4
 8009b46:	bd10      	pop	{r4, pc}

08009b48 <_ZN14SpongeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SpongeViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &REWARD)
 8009b48:	f500 702a 	add.w	r0, r0, #680	@ 0x2a8
 8009b4c:	4288      	cmp	r0, r1
{
 8009b4e:	b508      	push	{r3, lr}
    if (&src == &REWARD)
 8009b50:	d105      	bne.n	8009b5e <_ZN14SpongeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~SpongeViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009b52:	f011 fc57 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //Home
        //When REWARD clicked change screen to SakuraFinalScreen
        //Go to SakuraFinalScreen with no screen transition
        application().gotoSakuraFinalScreenScreenNoTransition();
    }
}
 8009b56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSakuraFinalScreenScreenNoTransition();
 8009b5a:	f7fa ba89 	b.w	8004070 <_ZN23FrontendApplicationBase39gotoSakuraFinalScreenScreenNoTransitionEv>
}
 8009b5e:	bd08      	pop	{r3, pc}

08009b60 <_ZN14SpongeViewBaseC1Ev>:
SpongeViewBase::SpongeViewBase() :
 8009b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b64:	4604      	mov	r4, r0
 8009b66:	b091      	sub	sp, #68	@ 0x44
    flexButtonCallback(this, &SpongeViewBase::flexButtonCallbackHandler)
 8009b68:	46a2      	mov	sl, r4
 8009b6a:	2500      	movs	r5, #0
 8009b6c:	f013 fc70 	bl	801d450 <_ZN8touchgfx6ScreenC1Ev>
 8009b70:	4bd7      	ldr	r3, [pc, #860]	@ (8009ed0 <_ZN14SpongeViewBaseC1Ev+0x370>)
 8009b72:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8009b74:	f84a 3b40 	str.w	r3, [sl], #64
 8009b78:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8009b7c:	4650      	mov	r0, sl
 8009b7e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8009b82:	f7f9 f92b 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8009b86:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8009b8a:	a90f      	add	r1, sp, #60	@ 0x3c
 8009b8c:	4648      	mov	r0, r9
 8009b8e:	f104 07c4 	add.w	r7, r4, #196	@ 0xc4
 8009b92:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009b96:	f00e f98b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009b9a:	a90f      	add	r1, sp, #60	@ 0x3c
 8009b9c:	4640      	mov	r0, r8
 8009b9e:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009ba2:	f00e f985 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009ba6:	a90f      	add	r1, sp, #60	@ 0x3c
 8009ba8:	4638      	mov	r0, r7
 8009baa:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009bae:	f00e f97f 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009bb2:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8009bb6:	a90f      	add	r1, sp, #60	@ 0x3c
 8009bb8:	4618      	mov	r0, r3
 8009bba:	9303      	str	r3, [sp, #12]
 8009bbc:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009bc0:	f00e f976 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009bc4:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8009bc8:	a90f      	add	r1, sp, #60	@ 0x3c
 8009bca:	4618      	mov	r0, r3
 8009bcc:	9304      	str	r3, [sp, #16]
 8009bce:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009bd2:	f00e f96d 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009bd6:	f504 73a4 	add.w	r3, r4, #328	@ 0x148
 8009bda:	a90f      	add	r1, sp, #60	@ 0x3c
 8009bdc:	4618      	mov	r0, r3
 8009bde:	9305      	str	r3, [sp, #20]
 8009be0:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009be4:	f00e f964 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009be8:	f504 73ba 	add.w	r3, r4, #372	@ 0x174
 8009bec:	a90f      	add	r1, sp, #60	@ 0x3c
 8009bee:	4618      	mov	r0, r3
 8009bf0:	9306      	str	r3, [sp, #24]
 8009bf2:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009bf6:	f00e f95b 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009bfa:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 8009bfe:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c00:	4618      	mov	r0, r3
 8009c02:	9307      	str	r3, [sp, #28]
 8009c04:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009c08:	f00e f952 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009c0c:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8009c10:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c12:	4618      	mov	r0, r3
 8009c14:	9308      	str	r3, [sp, #32]
 8009c16:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009c1a:	f00e f949 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009c1e:	f504 73fc 	add.w	r3, r4, #504	@ 0x1f8
 8009c22:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c24:	4618      	mov	r0, r3
 8009c26:	9309      	str	r3, [sp, #36]	@ 0x24
 8009c28:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009c2c:	f00e f940 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009c30:	f504 7309 	add.w	r3, r4, #548	@ 0x224
 8009c34:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c36:	4618      	mov	r0, r3
 8009c38:	930a      	str	r3, [sp, #40]	@ 0x28
 8009c3a:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009c3e:	f00e f937 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009c42:	f504 7314 	add.w	r3, r4, #592	@ 0x250
 8009c46:	f504 7b1f 	add.w	fp, r4, #636	@ 0x27c
 8009c4a:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c4c:	4618      	mov	r0, r3
 8009c4e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009c50:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009c54:	f00e f92c 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009c58:	a90f      	add	r1, sp, #60	@ 0x3c
 8009c5a:	4658      	mov	r0, fp
 8009c5c:	f8ad 603c 	strh.w	r6, [sp, #60]	@ 0x3c
 8009c60:	f00e f926 	bl	8017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8009c64:	f504 732a 	add.w	r3, r4, #680	@ 0x2a8
 8009c68:	930c      	str	r3, [sp, #48]	@ 0x30
        : pressed(false), alpha(255), action(0)
 8009c6a:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8009c6e:	f8a4 32d4 	strh.w	r3, [r4, #724]	@ 0x2d4
        touchable = touch;
 8009c72:	f240 1301 	movw	r3, #257	@ 0x101
 8009c76:	f8a4 32cc 	strh.w	r3, [r4, #716]	@ 0x2cc
        : T(), up(), down()
 8009c7a:	4b96      	ldr	r3, [pc, #600]	@ (8009ed4 <_ZN14SpongeViewBaseC1Ev+0x374>)
 8009c7c:	f8c4 32a8 	str.w	r3, [r4, #680]	@ 0x2a8
        : Box(), borderColor(0), borderSize(0)
 8009c80:	f504 7337 	add.w	r3, r4, #732	@ 0x2dc
        : x(0), y(0), width(0), height(0)
 8009c84:	e9c4 55ab 	strd	r5, r5, [r4, #684]	@ 0x2ac
 8009c88:	e9c4 55ad 	strd	r5, r5, [r4, #692]	@ 0x2b4
          nextSibling(0),
 8009c8c:	e9c4 55af 	strd	r5, r5, [r4, #700]	@ 0x2bc
          cachedAbsX(0),
 8009c90:	e9c4 55b1 	strd	r5, r5, [r4, #708]	@ 0x2c4
 8009c94:	f8c4 52d0 	str.w	r5, [r4, #720]	@ 0x2d0
 8009c98:	f8c4 52d8 	str.w	r5, [r4, #728]	@ 0x2d8
 8009c9c:	4618      	mov	r0, r3
 8009c9e:	930d      	str	r3, [sp, #52]	@ 0x34
 8009ca0:	f7f9 f89c 	bl	8002ddc <_ZN8touchgfx3BoxC1Ev>
 8009ca4:	4b8c      	ldr	r3, [pc, #560]	@ (8009ed8 <_ZN14SpongeViewBaseC1Ev+0x378>)
 8009ca6:	f8c4 32dc 	str.w	r3, [r4, #732]	@ 0x2dc
        borderBox.setXY(0, 0);
 8009caa:	462a      	mov	r2, r5
 8009cac:	980d      	ldr	r0, [sp, #52]	@ 0x34
        : color(col)
 8009cae:	f8c4 5308 	str.w	r5, [r4, #776]	@ 0x308
 8009cb2:	4629      	mov	r1, r5
        : color(0)
 8009cb4:	e9c4 55c4 	strd	r5, r5, [r4, #784]	@ 0x310
 8009cb8:	e9c4 55c6 	strd	r5, r5, [r4, #792]	@ 0x318
 8009cbc:	f8a4 530c 	strh.w	r5, [r4, #780]	@ 0x30c
 8009cc0:	f7f9 f86b 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8009cc4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009cc8:	f00b fa18 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009ccc:	4b83      	ldr	r3, [pc, #524]	@ (8009edc <_ZN14SpongeViewBaseC1Ev+0x37c>)
 8009cce:	e9c4 34c8 	strd	r3, r4, [r4, #800]	@ 0x320
 8009cd2:	4b83      	ldr	r3, [pc, #524]	@ (8009ee0 <_ZN14SpongeViewBaseC1Ev+0x380>)
 8009cd4:	e9c4 35ca 	strd	r3, r5, [r4, #808]	@ 0x328
    __background.setPosition(0, 0, 240, 320);
 8009cd8:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009cdc:	462a      	mov	r2, r5
 8009cde:	9300      	str	r3, [sp, #0]
 8009ce0:	4629      	mov	r1, r5
 8009ce2:	4650      	mov	r0, sl
 8009ce4:	23f0      	movs	r3, #240	@ 0xf0
 8009ce6:	1d26      	adds	r6, r4, #4
 8009ce8:	f7f9 f864 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009cec:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8009cf0:	66a3      	str	r3, [r4, #104]	@ 0x68
 8009cf2:	4651      	mov	r1, sl
 8009cf4:	4630      	mov	r0, r6
 8009cf6:	f00b fa01 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009cfa:	2356      	movs	r3, #86	@ 0x56
    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_TRAIN_ID));
 8009cfc:	a90f      	add	r1, sp, #60	@ 0x3c
 8009cfe:	4648      	mov	r0, r9
 8009d00:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009d04:	f00e ff70 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    san_Dau.setPosition(0, 0, 240, 320);
 8009d08:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009d0c:	462a      	mov	r2, r5
 8009d0e:	9300      	str	r3, [sp, #0]
 8009d10:	4629      	mov	r1, r5
 8009d12:	23f0      	movs	r3, #240	@ 0xf0
 8009d14:	4648      	mov	r0, r9
 8009d16:	f7f9 f84d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009d1a:	4629      	mov	r1, r5
 8009d1c:	4648      	mov	r0, r9
 8009d1e:	f00e f882 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009d22:	4649      	mov	r1, r9
 8009d24:	4630      	mov	r0, r6
 8009d26:	f00b f9e9 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bleach.setPosition(131, 118, 120, 103);
 8009d2a:	f04f 0967 	mov.w	r9, #103	@ 0x67
 8009d2e:	2327      	movs	r3, #39	@ 0x27
    bleach.setBitmap(touchgfx::Bitmap(BITMAP_DUMMY_ID));
 8009d30:	a90f      	add	r1, sp, #60	@ 0x3c
 8009d32:	4640      	mov	r0, r8
 8009d34:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009d38:	f00e ff56 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bleach.setPosition(131, 118, 120, 103);
 8009d3c:	2378      	movs	r3, #120	@ 0x78
 8009d3e:	2276      	movs	r2, #118	@ 0x76
 8009d40:	4640      	mov	r0, r8
 8009d42:	f8cd 9000 	str.w	r9, [sp]
 8009d46:	2183      	movs	r1, #131	@ 0x83
 8009d48:	f7f9 f834 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009d4c:	4629      	mov	r1, r5
 8009d4e:	4640      	mov	r0, r8
 8009d50:	f00e f869 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009d54:	4641      	mov	r1, r8
 8009d56:	4630      	mov	r0, r6
 8009d58:	f00b f9d0 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009d5c:	f04f 084e 	mov.w	r8, #78	@ 0x4e
    naruto.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
 8009d60:	a90f      	add	r1, sp, #60	@ 0x3c
 8009d62:	4638      	mov	r0, r7
 8009d64:	f8ad 803c 	strh.w	r8, [sp, #60]	@ 0x3c
 8009d68:	f00e ff3e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto.setPosition(8, 118, 80, 103);
 8009d6c:	2276      	movs	r2, #118	@ 0x76
 8009d6e:	2350      	movs	r3, #80	@ 0x50
 8009d70:	4638      	mov	r0, r7
 8009d72:	f8cd 9000 	str.w	r9, [sp]
 8009d76:	2108      	movs	r1, #8
 8009d78:	f7f9 f81c 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009d7c:	4629      	mov	r1, r5
 8009d7e:	4638      	mov	r0, r7
 8009d80:	f00e f851 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009d84:	4639      	mov	r1, r7
 8009d86:	4630      	mov	r0, r6
 8009d88:	f00b f9b8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_SPE_ID));
 8009d8c:	9803      	ldr	r0, [sp, #12]
 8009d8e:	2351      	movs	r3, #81	@ 0x51
 8009d90:	a90f      	add	r1, sp, #60	@ 0x3c
 8009d92:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009d96:	f00e ff27 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe.setPosition(12, 78, 108, 143);
 8009d9a:	238f      	movs	r3, #143	@ 0x8f
 8009d9c:	4642      	mov	r2, r8
 8009d9e:	9803      	ldr	r0, [sp, #12]
 8009da0:	9300      	str	r3, [sp, #0]
 8009da2:	210c      	movs	r1, #12
 8009da4:	236c      	movs	r3, #108	@ 0x6c
 8009da6:	f7f9 f805 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009daa:	9803      	ldr	r0, [sp, #12]
 8009dac:	4629      	mov	r1, r5
 8009dae:	f00e f83a 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009db2:	9903      	ldr	r1, [sp, #12]
        visible = vis;
 8009db4:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 8009db8:	4630      	mov	r0, r6
 8009dba:	f00b f99f 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_spe_1.setBitmap(touchgfx::Bitmap(BITMAP_PUNCH_ID));
 8009dbe:	9804      	ldr	r0, [sp, #16]
 8009dc0:	233d      	movs	r3, #61	@ 0x3d
 8009dc2:	a90f      	add	r1, sp, #60	@ 0x3c
 8009dc4:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009dc8:	f00e ff0e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_spe_1.setPosition(155, 47, 77, 122);
 8009dcc:	237a      	movs	r3, #122	@ 0x7a
 8009dce:	222f      	movs	r2, #47	@ 0x2f
 8009dd0:	9804      	ldr	r0, [sp, #16]
 8009dd2:	9300      	str	r3, [sp, #0]
 8009dd4:	219b      	movs	r1, #155	@ 0x9b
 8009dd6:	234d      	movs	r3, #77	@ 0x4d
 8009dd8:	f7f8 ffec 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_spe_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009ddc:	9804      	ldr	r0, [sp, #16]
 8009dde:	4629      	mov	r1, r5
 8009de0:	f00e f821 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009de4:	9904      	ldr	r1, [sp, #16]
 8009de6:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 8009dea:	4630      	mov	r0, r6
 8009dec:	f00b f986 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_DEF_ID));
 8009df0:	9805      	ldr	r0, [sp, #20]
 8009df2:	2350      	movs	r3, #80	@ 0x50
 8009df4:	a90f      	add	r1, sp, #60	@ 0x3c
 8009df6:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009dfa:	f00e fef5 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_def.setPosition(8, 111, 91, 121);
 8009dfe:	2379      	movs	r3, #121	@ 0x79
 8009e00:	226f      	movs	r2, #111	@ 0x6f
 8009e02:	9805      	ldr	r0, [sp, #20]
 8009e04:	9300      	str	r3, [sp, #0]
 8009e06:	2108      	movs	r1, #8
 8009e08:	235b      	movs	r3, #91	@ 0x5b
 8009e0a:	f7f8 ffd3 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009e0e:	9805      	ldr	r0, [sp, #20]
 8009e10:	4629      	mov	r1, r5
 8009e12:	f00e f808 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009e16:	9905      	ldr	r1, [sp, #20]
 8009e18:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 8009e1c:	4630      	mov	r0, r6
 8009e1e:	f00b f96d 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ATK_ID));
 8009e22:	9806      	ldr	r0, [sp, #24]
 8009e24:	234f      	movs	r3, #79	@ 0x4f
 8009e26:	a90f      	add	r1, sp, #60	@ 0x3c
 8009e28:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009e2c:	f00e fedc 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    naruto_atk.setPosition(8, 118, 184, 115);
 8009e30:	2373      	movs	r3, #115	@ 0x73
 8009e32:	2276      	movs	r2, #118	@ 0x76
 8009e34:	9806      	ldr	r0, [sp, #24]
 8009e36:	9300      	str	r3, [sp, #0]
 8009e38:	2108      	movs	r1, #8
 8009e3a:	23b8      	movs	r3, #184	@ 0xb8
 8009e3c:	f7f8 ffba 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009e40:	9806      	ldr	r0, [sp, #24]
 8009e42:	4629      	mov	r1, r5
 8009e44:	f00d ffef 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009e48:	9906      	ldr	r1, [sp, #24]
 8009e4a:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 8009e4e:	4630      	mov	r0, r6
    btn_attack.setPosition(64, 242, 46, 46);
 8009e50:	272e      	movs	r7, #46	@ 0x2e
 8009e52:	f00b f953 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
 8009e56:	9807      	ldr	r0, [sp, #28]
 8009e58:	f8ad 503c 	strh.w	r5, [sp, #60]	@ 0x3c
 8009e5c:	a90f      	add	r1, sp, #60	@ 0x3c
 8009e5e:	f00e fec3 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_attack.setPosition(64, 242, 46, 46);
 8009e62:	463b      	mov	r3, r7
 8009e64:	22f2      	movs	r2, #242	@ 0xf2
 8009e66:	9807      	ldr	r0, [sp, #28]
 8009e68:	9700      	str	r7, [sp, #0]
 8009e6a:	2140      	movs	r1, #64	@ 0x40
 8009e6c:	f7f8 ffa2 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009e70:	9807      	ldr	r0, [sp, #28]
 8009e72:	4629      	mov	r1, r5
 8009e74:	f00d ffd7 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009e78:	9907      	ldr	r1, [sp, #28]
 8009e7a:	f884 51c5 	strb.w	r5, [r4, #453]	@ 0x1c5
 8009e7e:	4630      	mov	r0, r6
 8009e80:	f00b f93c 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
 8009e84:	9808      	ldr	r0, [sp, #32]
 8009e86:	231f      	movs	r3, #31
 8009e88:	a90f      	add	r1, sp, #60	@ 0x3c
 8009e8a:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009e8e:	f00e feab 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_def.setPosition(124, 242, 46, 46);
 8009e92:	463b      	mov	r3, r7
 8009e94:	22f2      	movs	r2, #242	@ 0xf2
 8009e96:	9808      	ldr	r0, [sp, #32]
 8009e98:	9700      	str	r7, [sp, #0]
 8009e9a:	217c      	movs	r1, #124	@ 0x7c
 8009e9c:	f7f8 ff8a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009ea0:	9808      	ldr	r0, [sp, #32]
 8009ea2:	4629      	mov	r1, r5
 8009ea4:	f00d ffbf 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009ea8:	9908      	ldr	r1, [sp, #32]
 8009eaa:	f884 51f1 	strb.w	r5, [r4, #497]	@ 0x1f1
 8009eae:	4630      	mov	r0, r6
 8009eb0:	f00b f924 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
 8009eb4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009eb6:	234c      	movs	r3, #76	@ 0x4c
 8009eb8:	a90f      	add	r1, sp, #60	@ 0x3c
 8009eba:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009ebe:	f00e fe93 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_spe.setPosition(184, 242, 46, 46);
 8009ec2:	463b      	mov	r3, r7
 8009ec4:	22f2      	movs	r2, #242	@ 0xf2
 8009ec6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009ec8:	9700      	str	r7, [sp, #0]
 8009eca:	21b8      	movs	r1, #184	@ 0xb8
 8009ecc:	e00a      	b.n	8009ee4 <_ZN14SpongeViewBaseC1Ev+0x384>
 8009ece:	bf00      	nop
 8009ed0:	080326c4 	.word	0x080326c4
 8009ed4:	08031a6c 	.word	0x08031a6c
 8009ed8:	08033460 	.word	0x08033460
 8009edc:	080326ac 	.word	0x080326ac
 8009ee0:	08009b49 	.word	0x08009b49
 8009ee4:	f7f8 ff66 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009ee8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8009eea:	4629      	mov	r1, r5
 8009eec:	f00d ff9b 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009ef0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009ef2:	f884 521d 	strb.w	r5, [r4, #541]	@ 0x21d
 8009ef6:	4630      	mov	r0, r6
 8009ef8:	f00b f900 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
 8009efc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8009efe:	233a      	movs	r3, #58	@ 0x3a
 8009f00:	a90f      	add	r1, sp, #60	@ 0x3c
 8009f02:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009f06:	f00e fe6f 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow2.setPosition(2, 241, 46, 46);
 8009f0a:	463b      	mov	r3, r7
 8009f0c:	22f1      	movs	r2, #241	@ 0xf1
 8009f0e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8009f10:	9700      	str	r7, [sp, #0]
 8009f12:	2102      	movs	r1, #2
 8009f14:	f7f8 ff4e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009f18:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8009f1a:	4629      	mov	r1, r5
 8009f1c:	f00d ff83 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009f20:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8009f22:	f884 5249 	strb.w	r5, [r4, #585]	@ 0x249
 8009f26:	4630      	mov	r0, r6
 8009f28:	f00b f8e8 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
 8009f2c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009f2e:	2339      	movs	r3, #57	@ 0x39
 8009f30:	a90f      	add	r1, sp, #60	@ 0x3c
 8009f32:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009f36:	f00e fe57 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    btn_arrow1.setPosition(2, 241, 46, 46);
 8009f3a:	463b      	mov	r3, r7
 8009f3c:	22f1      	movs	r2, #241	@ 0xf1
 8009f3e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009f40:	9700      	str	r7, [sp, #0]
 8009f42:	2102      	movs	r1, #2
 8009f44:	f7f8 ff36 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009f48:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8009f4a:	4629      	mov	r1, r5
 8009f4c:	f00d ff6b 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8009f50:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009f52:	4630      	mov	r0, r6
 8009f54:	f00b f8d2 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009f58:	232d      	movs	r3, #45	@ 0x2d
    home.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ID));
 8009f5a:	a90f      	add	r1, sp, #60	@ 0x3c
 8009f5c:	4658      	mov	r0, fp
 8009f5e:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8009f62:	f00e fe41 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    home.setPosition(198, 292, 42, 28);
 8009f66:	231c      	movs	r3, #28
 8009f68:	f44f 7292 	mov.w	r2, #292	@ 0x124
 8009f6c:	9300      	str	r3, [sp, #0]
 8009f6e:	4658      	mov	r0, fp
 8009f70:	232a      	movs	r3, #42	@ 0x2a
 8009f72:	21c6      	movs	r1, #198	@ 0xc6
 8009f74:	f7f8 ff1e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
    home.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8009f78:	4629      	mov	r1, r5
 8009f7a:	4658      	mov	r0, fp
 8009f7c:	f00d ff53 	bl	8017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
        borderBox.setPosition(x, y, width, height);
 8009f80:	2721      	movs	r7, #33	@ 0x21
 8009f82:	4659      	mov	r1, fp
 8009f84:	4630      	mov	r0, r6
 8009f86:	f00b f8b9 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009f8a:	462a      	mov	r2, r5
 8009f8c:	4629      	mov	r1, r5
 8009f8e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009f90:	9700      	str	r7, [sp, #0]
 8009f92:	231b      	movs	r3, #27
 8009f94:	f7f8 ff0e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8009f98:	2305      	movs	r3, #5
 8009f9a:	f8a4 330c 	strh.w	r3, [r4, #780]	@ 0x30c
        up = colorReleased;
 8009f9e:	4b17      	ldr	r3, [pc, #92]	@ (8009ffc <_ZN14SpongeViewBaseC1Ev+0x49c>)
 8009fa0:	f8c4 3310 	str.w	r3, [r4, #784]	@ 0x310
        down = colorPressed;
 8009fa4:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8009fa8:	3333      	adds	r3, #51	@ 0x33
 8009faa:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
        borderUp = borderColorReleased;
 8009fae:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8009fb2:	3b66      	subs	r3, #102	@ 0x66
 8009fb4:	f8c4 3318 	str.w	r3, [r4, #792]	@ 0x318
        borderDown = borderColorPressed;
 8009fb8:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8009fbc:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
        handlePressedUpdated();
 8009fc0:	980c      	ldr	r0, [sp, #48]	@ 0x30
        borderDown = borderColorPressed;
 8009fc2:	f8c4 331c 	str.w	r3, [r4, #796]	@ 0x31c
        handlePressedUpdated();
 8009fc6:	f7f8 fe4d 	bl	8002c64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
        alpha = newAlpha;
 8009fca:	230a      	movs	r3, #10
 8009fcc:	f884 32d5 	strb.w	r3, [r4, #725]	@ 0x2d5
        alpha = newAlpha;
 8009fd0:	f884 3302 	strb.w	r3, [r4, #770]	@ 0x302
    REWARD.setAction(flexButtonCallback);
 8009fd4:	f504 7348 	add.w	r3, r4, #800	@ 0x320
        action = &callback;
 8009fd8:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
    REWARD.setPosition(205, 287, 27, 33);
 8009fdc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8009fde:	9700      	str	r7, [sp, #0]
 8009fe0:	231b      	movs	r3, #27
 8009fe2:	f240 121f 	movw	r2, #287	@ 0x11f
 8009fe6:	21cd      	movs	r1, #205	@ 0xcd
 8009fe8:	f7f8 fee4 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009fec:	4630      	mov	r0, r6
 8009fee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8009ff0:	f00b f884 	bl	80150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009ff4:	4620      	mov	r0, r4
 8009ff6:	b011      	add	sp, #68	@ 0x44
 8009ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ffc:	ff006699 	.word	0xff006699

0800a000 <__tcf_0>:

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp()
{
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 1, 14, 14, 0, 0, 4, 1, 0, 0, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a000:	4770      	bx	lr
	...

0800a004 <_Z23getFont_arialbd_14_4bppv>:
{
 800a004:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 1, 14, 14, 0, 0, 4, 1, 0, 0, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a006:	4d16      	ldr	r5, [pc, #88]	@ (800a060 <_Z23getFont_arialbd_14_4bppv+0x5c>)
 800a008:	682c      	ldr	r4, [r5, #0]
 800a00a:	f014 0401 	ands.w	r4, r4, #1
{
 800a00e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 1, 14, 14, 0, 0, 4, 1, 0, 0, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a010:	f3bf 8f5b 	dmb	ish
 800a014:	d121      	bne.n	800a05a <_Z23getFont_arialbd_14_4bppv+0x56>
 800a016:	4628      	mov	r0, r5
 800a018:	f023 fc87 	bl	802d92a <__cxa_guard_acquire>
 800a01c:	b1e8      	cbz	r0, 800a05a <_Z23getFont_arialbd_14_4bppv+0x56>
 800a01e:	4b11      	ldr	r3, [pc, #68]	@ (800a064 <_Z23getFont_arialbd_14_4bppv+0x60>)
 800a020:	4911      	ldr	r1, [pc, #68]	@ (800a068 <_Z23getFont_arialbd_14_4bppv+0x64>)
 800a022:	4812      	ldr	r0, [pc, #72]	@ (800a06c <_Z23getFont_arialbd_14_4bppv+0x68>)
 800a024:	940a      	str	r4, [sp, #40]	@ 0x28
 800a026:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 800a02a:	233f      	movs	r3, #63	@ 0x3f
 800a02c:	9309      	str	r3, [sp, #36]	@ 0x24
 800a02e:	4b10      	ldr	r3, [pc, #64]	@ (800a070 <_Z23getFont_arialbd_14_4bppv+0x6c>)
 800a030:	9308      	str	r3, [sp, #32]
 800a032:	4b10      	ldr	r3, [pc, #64]	@ (800a074 <_Z23getFont_arialbd_14_4bppv+0x70>)
 800a034:	9405      	str	r4, [sp, #20]
 800a036:	2201      	movs	r2, #1
 800a038:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a03c:	2304      	movs	r3, #4
 800a03e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a042:	230e      	movs	r3, #14
 800a044:	9300      	str	r3, [sp, #0]
 800a046:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a04a:	f7fc fde7 	bl	8006c1c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a04e:	480a      	ldr	r0, [pc, #40]	@ (800a078 <_Z23getFont_arialbd_14_4bppv+0x74>)
 800a050:	f024 fbc4 	bl	802e7dc <atexit>
 800a054:	4628      	mov	r0, r5
 800a056:	f023 fc74 	bl	802d942 <__cxa_guard_release>
    return arialbd_14_4bpp;
}
 800a05a:	4804      	ldr	r0, [pc, #16]	@ (800a06c <_Z23getFont_arialbd_14_4bppv+0x68>)
 800a05c:	b00f      	add	sp, #60	@ 0x3c
 800a05e:	bd30      	pop	{r4, r5, pc}
 800a060:	20002a58 	.word	0x20002a58
 800a064:	080326f0 	.word	0x080326f0
 800a068:	08034524 	.word	0x08034524
 800a06c:	20002a5c 	.word	0x20002a5c
 800a070:	08034638 	.word	0x08034638
 800a074:	0803464c 	.word	0x0803464c
 800a078:	0800a001 	.word	0x0800a001

0800a07c <__tcf_0>:
extern const touchgfx::FontContextualFormsTable arialbd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_arialbd_20_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_20_4bpp()
{
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a07c:	4770      	bx	lr
	...

0800a080 <_Z23getFont_arialbd_20_4bppv>:
{
 800a080:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a082:	4d17      	ldr	r5, [pc, #92]	@ (800a0e0 <_Z23getFont_arialbd_20_4bppv+0x60>)
 800a084:	682c      	ldr	r4, [r5, #0]
 800a086:	f014 0401 	ands.w	r4, r4, #1
{
 800a08a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_20_4bpp(glyphs_arialbd_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_arialbd_20_4bpp, kerning_arialbd_20_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a08c:	f3bf 8f5b 	dmb	ish
 800a090:	d122      	bne.n	800a0d8 <_Z23getFont_arialbd_20_4bppv+0x58>
 800a092:	4628      	mov	r0, r5
 800a094:	f023 fc49 	bl	802d92a <__cxa_guard_acquire>
 800a098:	b1f0      	cbz	r0, 800a0d8 <_Z23getFont_arialbd_20_4bppv+0x58>
 800a09a:	4b12      	ldr	r3, [pc, #72]	@ (800a0e4 <_Z23getFont_arialbd_20_4bppv+0x64>)
 800a09c:	4912      	ldr	r1, [pc, #72]	@ (800a0e8 <_Z23getFont_arialbd_20_4bppv+0x68>)
 800a09e:	4813      	ldr	r0, [pc, #76]	@ (800a0ec <_Z23getFont_arialbd_20_4bppv+0x6c>)
 800a0a0:	940a      	str	r4, [sp, #40]	@ 0x28
 800a0a2:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 800a0a6:	233f      	movs	r3, #63	@ 0x3f
 800a0a8:	9309      	str	r3, [sp, #36]	@ 0x24
 800a0aa:	4b11      	ldr	r3, [pc, #68]	@ (800a0f0 <_Z23getFont_arialbd_20_4bppv+0x70>)
 800a0ac:	9308      	str	r3, [sp, #32]
 800a0ae:	4b11      	ldr	r3, [pc, #68]	@ (800a0f4 <_Z23getFont_arialbd_20_4bppv+0x74>)
 800a0b0:	9405      	str	r4, [sp, #20]
 800a0b2:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a0b6:	2201      	movs	r2, #1
 800a0b8:	2304      	movs	r3, #4
 800a0ba:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a0be:	2314      	movs	r3, #20
 800a0c0:	9300      	str	r3, [sp, #0]
 800a0c2:	220b      	movs	r2, #11
 800a0c4:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a0c8:	f7fc fda8 	bl	8006c1c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a0cc:	480a      	ldr	r0, [pc, #40]	@ (800a0f8 <_Z23getFont_arialbd_20_4bppv+0x78>)
 800a0ce:	f024 fb85 	bl	802e7dc <atexit>
 800a0d2:	4628      	mov	r0, r5
 800a0d4:	f023 fc35 	bl	802d942 <__cxa_guard_release>
    return arialbd_20_4bpp;
}
 800a0d8:	4804      	ldr	r0, [pc, #16]	@ (800a0ec <_Z23getFont_arialbd_20_4bppv+0x6c>)
 800a0da:	b00f      	add	sp, #60	@ 0x3c
 800a0dc:	bd30      	pop	{r4, r5, pc}
 800a0de:	bf00      	nop
 800a0e0:	20002a88 	.word	0x20002a88
 800a0e4:	080326f0 	.word	0x080326f0
 800a0e8:	08034534 	.word	0x08034534
 800a0ec:	20002a8c 	.word	0x20002a8c
 800a0f0:	0803463c 	.word	0x0803463c
 800a0f4:	08034650 	.word	0x08034650
 800a0f8:	0800a07d 	.word	0x0800a07d

0800a0fc <__tcf_0>:
extern const touchgfx::FontContextualFormsTable arialbd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_arialbd_35_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_35_4bpp()
{
    static touchgfx::GeneratedFont arialbd_35_4bpp(glyphs_arialbd_35_4bpp, 5, 35, 35, 0, 0, 4, 1, 0, 0, unicodes_arialbd_35_4bpp, kerning_arialbd_35_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a0fc:	4770      	bx	lr
	...

0800a100 <_Z23getFont_arialbd_35_4bppv>:
{
 800a100:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_35_4bpp(glyphs_arialbd_35_4bpp, 5, 35, 35, 0, 0, 4, 1, 0, 0, unicodes_arialbd_35_4bpp, kerning_arialbd_35_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a102:	4d17      	ldr	r5, [pc, #92]	@ (800a160 <_Z23getFont_arialbd_35_4bppv+0x60>)
 800a104:	682c      	ldr	r4, [r5, #0]
 800a106:	f014 0401 	ands.w	r4, r4, #1
{
 800a10a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont arialbd_35_4bpp(glyphs_arialbd_35_4bpp, 5, 35, 35, 0, 0, 4, 1, 0, 0, unicodes_arialbd_35_4bpp, kerning_arialbd_35_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a10c:	f3bf 8f5b 	dmb	ish
 800a110:	d122      	bne.n	800a158 <_Z23getFont_arialbd_35_4bppv+0x58>
 800a112:	4628      	mov	r0, r5
 800a114:	f023 fc09 	bl	802d92a <__cxa_guard_acquire>
 800a118:	b1f0      	cbz	r0, 800a158 <_Z23getFont_arialbd_35_4bppv+0x58>
 800a11a:	4b12      	ldr	r3, [pc, #72]	@ (800a164 <_Z23getFont_arialbd_35_4bppv+0x64>)
 800a11c:	4912      	ldr	r1, [pc, #72]	@ (800a168 <_Z23getFont_arialbd_35_4bppv+0x68>)
 800a11e:	4813      	ldr	r0, [pc, #76]	@ (800a16c <_Z23getFont_arialbd_35_4bppv+0x6c>)
 800a120:	940a      	str	r4, [sp, #40]	@ 0x28
 800a122:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 800a126:	233f      	movs	r3, #63	@ 0x3f
 800a128:	9309      	str	r3, [sp, #36]	@ 0x24
 800a12a:	4b11      	ldr	r3, [pc, #68]	@ (800a170 <_Z23getFont_arialbd_35_4bppv+0x70>)
 800a12c:	9308      	str	r3, [sp, #32]
 800a12e:	4b11      	ldr	r3, [pc, #68]	@ (800a174 <_Z23getFont_arialbd_35_4bppv+0x74>)
 800a130:	9405      	str	r4, [sp, #20]
 800a132:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a136:	2201      	movs	r2, #1
 800a138:	2304      	movs	r3, #4
 800a13a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a13e:	2323      	movs	r3, #35	@ 0x23
 800a140:	9300      	str	r3, [sp, #0]
 800a142:	2205      	movs	r2, #5
 800a144:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a148:	f7fc fd68 	bl	8006c1c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a14c:	480a      	ldr	r0, [pc, #40]	@ (800a178 <_Z23getFont_arialbd_35_4bppv+0x78>)
 800a14e:	f024 fb45 	bl	802e7dc <atexit>
 800a152:	4628      	mov	r0, r5
 800a154:	f023 fbf5 	bl	802d942 <__cxa_guard_release>
    return arialbd_35_4bpp;
}
 800a158:	4804      	ldr	r0, [pc, #16]	@ (800a16c <_Z23getFont_arialbd_35_4bppv+0x6c>)
 800a15a:	b00f      	add	sp, #60	@ 0x3c
 800a15c:	bd30      	pop	{r4, r5, pc}
 800a15e:	bf00      	nop
 800a160:	20002ab8 	.word	0x20002ab8
 800a164:	080326f0 	.word	0x080326f0
 800a168:	080345d0 	.word	0x080345d0
 800a16c:	20002abc 	.word	0x20002abc
 800a170:	08034640 	.word	0x08034640
 800a174:	08034654 	.word	0x08034654
 800a178:	0800a0fd 	.word	0x0800a0fd

0800a17c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a17c:	4770      	bx	lr
	...

0800a180 <_Z23getFont_verdana_10_4bppv>:
{
 800a180:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a182:	4d16      	ldr	r5, [pc, #88]	@ (800a1dc <_Z23getFont_verdana_10_4bppv+0x5c>)
 800a184:	682c      	ldr	r4, [r5, #0]
 800a186:	f014 0401 	ands.w	r4, r4, #1
{
 800a18a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a18c:	f3bf 8f5b 	dmb	ish
 800a190:	d120      	bne.n	800a1d4 <_Z23getFont_verdana_10_4bppv+0x54>
 800a192:	4628      	mov	r0, r5
 800a194:	f023 fbc9 	bl	802d92a <__cxa_guard_acquire>
 800a198:	b1e0      	cbz	r0, 800a1d4 <_Z23getFont_verdana_10_4bppv+0x54>
 800a19a:	233f      	movs	r3, #63	@ 0x3f
 800a19c:	9309      	str	r3, [sp, #36]	@ 0x24
 800a19e:	4b10      	ldr	r3, [pc, #64]	@ (800a1e0 <_Z23getFont_verdana_10_4bppv+0x60>)
 800a1a0:	9308      	str	r3, [sp, #32]
 800a1a2:	4b10      	ldr	r3, [pc, #64]	@ (800a1e4 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a1a4:	4910      	ldr	r1, [pc, #64]	@ (800a1e8 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a1a6:	4811      	ldr	r0, [pc, #68]	@ (800a1ec <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a1a8:	940a      	str	r4, [sp, #40]	@ 0x28
 800a1aa:	2201      	movs	r2, #1
 800a1ac:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a1b0:	2304      	movs	r3, #4
 800a1b2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a1b6:	230a      	movs	r3, #10
 800a1b8:	9300      	str	r3, [sp, #0]
 800a1ba:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800a1be:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a1c2:	9405      	str	r4, [sp, #20]
 800a1c4:	f7fc fd2a 	bl	8006c1c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a1c8:	4809      	ldr	r0, [pc, #36]	@ (800a1f0 <_Z23getFont_verdana_10_4bppv+0x70>)
 800a1ca:	f024 fb07 	bl	802e7dc <atexit>
 800a1ce:	4628      	mov	r0, r5
 800a1d0:	f023 fbb7 	bl	802d942 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a1d4:	4805      	ldr	r0, [pc, #20]	@ (800a1ec <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a1d6:	b00f      	add	sp, #60	@ 0x3c
 800a1d8:	bd30      	pop	{r4, r5, pc}
 800a1da:	bf00      	nop
 800a1dc:	20002ae8 	.word	0x20002ae8
 800a1e0:	08034644 	.word	0x08034644
 800a1e4:	08034658 	.word	0x08034658
 800a1e8:	08034618 	.word	0x08034618
 800a1ec:	20002aec 	.word	0x20002aec
 800a1f0:	0800a17d 	.word	0x0800a17d

0800a1f4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a1f4:	4770      	bx	lr
	...

0800a1f8 <_Z23getFont_verdana_20_4bppv>:
{
 800a1f8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a1fa:	4d16      	ldr	r5, [pc, #88]	@ (800a254 <_Z23getFont_verdana_20_4bppv+0x5c>)
 800a1fc:	682c      	ldr	r4, [r5, #0]
 800a1fe:	f014 0401 	ands.w	r4, r4, #1
{
 800a202:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a204:	f3bf 8f5b 	dmb	ish
 800a208:	d120      	bne.n	800a24c <_Z23getFont_verdana_20_4bppv+0x54>
 800a20a:	4628      	mov	r0, r5
 800a20c:	f023 fb8d 	bl	802d92a <__cxa_guard_acquire>
 800a210:	b1e0      	cbz	r0, 800a24c <_Z23getFont_verdana_20_4bppv+0x54>
 800a212:	233f      	movs	r3, #63	@ 0x3f
 800a214:	9309      	str	r3, [sp, #36]	@ 0x24
 800a216:	4b10      	ldr	r3, [pc, #64]	@ (800a258 <_Z23getFont_verdana_20_4bppv+0x60>)
 800a218:	9308      	str	r3, [sp, #32]
 800a21a:	4b10      	ldr	r3, [pc, #64]	@ (800a25c <_Z23getFont_verdana_20_4bppv+0x64>)
 800a21c:	4910      	ldr	r1, [pc, #64]	@ (800a260 <_Z23getFont_verdana_20_4bppv+0x68>)
 800a21e:	4811      	ldr	r0, [pc, #68]	@ (800a264 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800a220:	940a      	str	r4, [sp, #40]	@ 0x28
 800a222:	2201      	movs	r2, #1
 800a224:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a228:	2304      	movs	r3, #4
 800a22a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a22e:	2314      	movs	r3, #20
 800a230:	9300      	str	r3, [sp, #0]
 800a232:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800a236:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a23a:	9405      	str	r4, [sp, #20]
 800a23c:	f7fc fcee 	bl	8006c1c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a240:	4809      	ldr	r0, [pc, #36]	@ (800a268 <_Z23getFont_verdana_20_4bppv+0x70>)
 800a242:	f024 facb 	bl	802e7dc <atexit>
 800a246:	4628      	mov	r0, r5
 800a248:	f023 fb7b 	bl	802d942 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 800a24c:	4805      	ldr	r0, [pc, #20]	@ (800a264 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800a24e:	b00f      	add	sp, #60	@ 0x3c
 800a250:	bd30      	pop	{r4, r5, pc}
 800a252:	bf00      	nop
 800a254:	20002b18 	.word	0x20002b18
 800a258:	08034648 	.word	0x08034648
 800a25c:	0803465c 	.word	0x0803465c
 800a260:	08034628 	.word	0x08034628
 800a264:	20002b1c 	.word	0x20002b1c
 800a268:	0800a1f5 	.word	0x0800a1f5

0800a26c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 800a26c:	2000      	movs	r0, #0
 800a26e:	4770      	bx	lr

0800a270 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800a270:	2000      	movs	r0, #0
 800a272:	4770      	bx	lr

0800a274 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a274:	b40e      	push	{r1, r2, r3}
 800a276:	b503      	push	{r0, r1, lr}
 800a278:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a27a:	2100      	movs	r1, #0
{
 800a27c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a280:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a282:	f012 f947 	bl	801c514 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a286:	b002      	add	sp, #8
 800a288:	f85d eb04 	ldr.w	lr, [sp], #4
 800a28c:	b003      	add	sp, #12
 800a28e:	4770      	bx	lr

0800a290 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a290:	b40c      	push	{r2, r3}
 800a292:	b507      	push	{r0, r1, r2, lr}
 800a294:	ab04      	add	r3, sp, #16
 800a296:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a29a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a29c:	f012 f93a 	bl	801c514 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a2a0:	b003      	add	sp, #12
 800a2a2:	f85d eb04 	ldr.w	lr, [sp], #4
 800a2a6:	b002      	add	sp, #8
 800a2a8:	4770      	bx	lr
	...

0800a2ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a2ac:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800a2ae:	b510      	push	{r4, lr}
 800a2b0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a2b2:	b373      	cbz	r3, 800a312 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a2b4:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 800a2b6:	b92b      	cbnz	r3, 800a2c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a2b8:	4b18      	ldr	r3, [pc, #96]	@ (800a31c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a2ba:	4a19      	ldr	r2, [pc, #100]	@ (800a320 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a2bc:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a2be:	4819      	ldr	r0, [pc, #100]	@ (800a324 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a2c0:	f024 fa6e 	bl	802e7a0 <__assert_func>
            return buffer[pos];
 800a2c4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800a2c6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a2ca:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 800a2cc:	b30b      	cbz	r3, 800a312 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a2ce:	f013 ffc4 	bl	801e25a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a2d2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800a2d4:	2b01      	cmp	r3, #1
 800a2d6:	d803      	bhi.n	800a2e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a2d8:	4b13      	ldr	r3, [pc, #76]	@ (800a328 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a2da:	4a14      	ldr	r2, [pc, #80]	@ (800a32c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a2dc:	21cb      	movs	r1, #203	@ 0xcb
 800a2de:	e7ee      	b.n	800a2be <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a2e0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800a2e2:	1c53      	adds	r3, r2, #1
 800a2e4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a2e6:	2b09      	cmp	r3, #9
 800a2e8:	4619      	mov	r1, r3
 800a2ea:	bf88      	it	hi
 800a2ec:	f1a3 010a 	subhi.w	r1, r3, #10
 800a2f0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a2f4:	f640 103f 	movw	r0, #2367	@ 0x93f
 800a2f8:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 800a2fa:	4281      	cmp	r1, r0
 800a2fc:	d109      	bne.n	800a312 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a2fe:	2b0a      	cmp	r3, #10
 800a300:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a304:	bf28      	it	cs
 800a306:	2300      	movcs	r3, #0
 800a308:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a30c:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 800a30e:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 800a310:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a312:	4620      	mov	r0, r4
}
 800a314:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a318:	f013 bea2 	b.w	801e060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a31c:	08030b88 	.word	0x08030b88
 800a320:	08030b91 	.word	0x08030b91
 800a324:	08030c3c 	.word	0x08030c3c
 800a328:	08030c86 	.word	0x08030c86
 800a32c:	08030c94 	.word	0x08030c94

0800a330 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a330:	f013 be5d 	b.w	801dfee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a334 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a334:	b510      	push	{r4, lr}
 800a336:	b086      	sub	sp, #24
 800a338:	ac02      	add	r4, sp, #8
 800a33a:	e884 0006 	stmia.w	r4, {r1, r2}
 800a33e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a340:	ab0a      	add	r3, sp, #40	@ 0x28
 800a342:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a344:	9301      	str	r3, [sp, #4]
 800a346:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a348:	9300      	str	r3, [sp, #0]
 800a34a:	4621      	mov	r1, r4
 800a34c:	9b08      	ldr	r3, [sp, #32]
 800a34e:	f010 fbdb 	bl	801ab08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a352:	b006      	add	sp, #24
 800a354:	bd10      	pop	{r4, pc}
	...

0800a358 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a358:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a35a:	bb18      	cbnz	r0, 800a3a4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a35c:	4b12      	ldr	r3, [pc, #72]	@ (800a3a8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a35e:	4813      	ldr	r0, [pc, #76]	@ (800a3ac <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a360:	681c      	ldr	r4, [r3, #0]
 800a362:	4913      	ldr	r1, [pc, #76]	@ (800a3b0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a364:	b1b4      	cbz	r4, 800a394 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a366:	6822      	ldr	r2, [r4, #0]
 800a368:	4422      	add	r2, r4
 800a36a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a36c:	6862      	ldr	r2, [r4, #4]
 800a36e:	4422      	add	r2, r4
 800a370:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a372:	68a2      	ldr	r2, [r4, #8]
 800a374:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a376:	4b0f      	ldr	r3, [pc, #60]	@ (800a3b4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a378:	2200      	movs	r2, #0
 800a37a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a37c:	f000 f838 	bl	800a3f0 <_ZN17TypedTextDatabase8getFontsEv>
 800a380:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a382:	f000 f833 	bl	800a3ec <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a386:	4b0c      	ldr	r3, [pc, #48]	@ (800a3b8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a388:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a38a:	4b0c      	ldr	r3, [pc, #48]	@ (800a3bc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a38c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a38e:	4b0c      	ldr	r3, [pc, #48]	@ (800a3c0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a390:	8018      	strh	r0, [r3, #0]
    }
}
 800a392:	e007      	b.n	800a3a4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a394:	4b0b      	ldr	r3, [pc, #44]	@ (800a3c4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a396:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a398:	4b0b      	ldr	r3, [pc, #44]	@ (800a3c8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a39a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a39c:	4b0b      	ldr	r3, [pc, #44]	@ (800a3cc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a39e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a3a0:	2c00      	cmp	r4, #0
 800a3a2:	d1e8      	bne.n	800a376 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a3a4:	bd38      	pop	{r3, r4, r5, pc}
 800a3a6:	bf00      	nop
 800a3a8:	20002b54 	.word	0x20002b54
 800a3ac:	20002b4c 	.word	0x20002b4c
 800a3b0:	20002b48 	.word	0x20002b48
 800a3b4:	20002b50 	.word	0x20002b50
 800a3b8:	2001393c 	.word	0x2001393c
 800a3bc:	20013944 	.word	0x20013944
 800a3c0:	20013940 	.word	0x20013940
 800a3c4:	080346e0 	.word	0x080346e0
 800a3c8:	08034660 	.word	0x08034660
 800a3cc:	08034760 	.word	0x08034760

0800a3d0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a3d0:	4b04      	ldr	r3, [pc, #16]	@ (800a3e4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a3d2:	681b      	ldr	r3, [r3, #0]
 800a3d4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a3d8:	4b03      	ldr	r3, [pc, #12]	@ (800a3e8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a3da:	681b      	ldr	r3, [r3, #0]
}
 800a3dc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a3e0:	4770      	bx	lr
 800a3e2:	bf00      	nop
 800a3e4:	20002b48 	.word	0x20002b48
 800a3e8:	20002b4c 	.word	0x20002b4c

0800a3ec <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a3ec:	2020      	movs	r0, #32
 800a3ee:	4770      	bx	lr

0800a3f0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a3f0:	4800      	ldr	r0, [pc, #0]	@ (800a3f4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a3f2:	4770      	bx	lr
 800a3f4:	20002b58 	.word	0x20002b58

0800a3f8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_arialbd_14_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a3f8:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800a3fa:	f7ff fefd 	bl	800a1f8 <_Z23getFont_verdana_20_4bppv>
};
 800a3fe:	4c07      	ldr	r4, [pc, #28]	@ (800a41c <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 800a400:	6020      	str	r0, [r4, #0]
    &(getFont_arialbd_20_4bpp()),
 800a402:	f7ff fe3d 	bl	800a080 <_Z23getFont_arialbd_20_4bppv>
};
 800a406:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a408:	f7ff feba 	bl	800a180 <_Z23getFont_verdana_10_4bppv>
};
 800a40c:	60a0      	str	r0, [r4, #8]
    &(getFont_arialbd_35_4bpp()),
 800a40e:	f7ff fe77 	bl	800a100 <_Z23getFont_arialbd_35_4bppv>
};
 800a412:	60e0      	str	r0, [r4, #12]
    &(getFont_arialbd_14_4bpp())
 800a414:	f7ff fdf6 	bl	800a004 <_Z23getFont_arialbd_14_4bppv>
};
 800a418:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 800a41a:	bd10      	pop	{r4, pc}
 800a41c:	20002b58 	.word	0x20002b58

0800a420 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 800a420:	b510      	push	{r4, lr}
    pointArray = 0;
 800a422:	2400      	movs	r4, #0
 800a424:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 800a426:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 800a428:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 800a42a:	601c      	str	r4, [r3, #0]
}
 800a42c:	bd10      	pop	{r4, pc}

0800a42e <_ZN21BackUpScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~BackUpScreenPresenter() {}
 800a42e:	4770      	bx	lr

0800a430 <_ZThn4_N21BackUpScreenPresenterD1Ev>:
 800a430:	3804      	subs	r0, #4
 800a432:	4770      	bx	lr

0800a434 <_ZN21BackUpScreenPresenter10deactivateEv>:
}

void BackUpScreenPresenter::activate()
{

}
 800a434:	4770      	bx	lr

0800a436 <_ZN21BackUpScreenPresenterD0Ev>:
 800a436:	b510      	push	{r4, lr}
 800a438:	2110      	movs	r1, #16
 800a43a:	4604      	mov	r4, r0
 800a43c:	f023 fa73 	bl	802d926 <_ZdlPvj>
 800a440:	4620      	mov	r0, r4
 800a442:	bd10      	pop	{r4, pc}

0800a444 <_ZThn4_N21BackUpScreenPresenterD0Ev>:
 800a444:	f1a0 0004 	sub.w	r0, r0, #4
 800a448:	e7f5      	b.n	800a436 <_ZN21BackUpScreenPresenterD0Ev>
	...

0800a44c <_ZN21BackUpScreenPresenterC1ER16BackUpScreenView>:
    ModelListener() : model(0) {}
 800a44c:	2200      	movs	r2, #0
 800a44e:	6082      	str	r2, [r0, #8]
    : view(v)
 800a450:	4a02      	ldr	r2, [pc, #8]	@ (800a45c <_ZN21BackUpScreenPresenterC1ER16BackUpScreenView+0x10>)
 800a452:	6002      	str	r2, [r0, #0]
 800a454:	3218      	adds	r2, #24
 800a456:	6042      	str	r2, [r0, #4]
 800a458:	60c1      	str	r1, [r0, #12]
}
 800a45a:	4770      	bx	lr
 800a45c:	08032b50 	.word	0x08032b50

0800a460 <_ZN16BackUpScreenView14tearDownScreenEv>:
}

void BackUpScreenView::tearDownScreen()
{
    BackUpScreenViewBase::tearDownScreen();
}
 800a460:	4770      	bx	lr
	...

0800a464 <_ZN16BackUpScreenViewD1Ev>:

class BackUpScreenView : public BackUpScreenViewBase
{
public:
    BackUpScreenView();
    virtual ~BackUpScreenView() {}
 800a464:	b510      	push	{r4, lr}
 800a466:	4b03      	ldr	r3, [pc, #12]	@ (800a474 <_ZN16BackUpScreenViewD1Ev+0x10>)
 800a468:	6003      	str	r3, [r0, #0]
 800a46a:	4604      	mov	r4, r0
 800a46c:	f7f8 fbf8 	bl	8002c60 <_ZN20BackUpScreenViewBaseD1Ev>
 800a470:	4620      	mov	r0, r4
 800a472:	bd10      	pop	{r4, pc}
 800a474:	08032b78 	.word	0x08032b78

0800a478 <_ZN16BackUpScreenViewD0Ev>:
 800a478:	b510      	push	{r4, lr}
 800a47a:	4604      	mov	r4, r0
 800a47c:	f7ff fff2 	bl	800a464 <_ZN16BackUpScreenViewD1Ev>
 800a480:	4620      	mov	r0, r4
 800a482:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
 800a486:	f023 fa4e 	bl	802d926 <_ZdlPvj>
 800a48a:	4620      	mov	r0, r4
 800a48c:	bd10      	pop	{r4, pc}
	...

0800a490 <_ZN16BackUpScreenViewC1Ev>:
BackUpScreenView::BackUpScreenView()
 800a490:	b510      	push	{r4, lr}
 800a492:	4604      	mov	r4, r0
 800a494:	f7f8 fcf0 	bl	8002e78 <_ZN20BackUpScreenViewBaseC1Ev>
 800a498:	4b01      	ldr	r3, [pc, #4]	@ (800a4a0 <_ZN16BackUpScreenViewC1Ev+0x10>)
 800a49a:	6023      	str	r3, [r4, #0]
}
 800a49c:	4620      	mov	r0, r4
 800a49e:	bd10      	pop	{r4, pc}
 800a4a0:	08032b78 	.word	0x08032b78

0800a4a4 <_ZN16BackUpScreenView11setupScreenEv>:
    BackUpScreenViewBase::setupScreen();
 800a4a4:	f7f8 bbdd 	b.w	8002c62 <_ZN20BackUpScreenViewBase11setupScreenEv>

0800a4a8 <_ZN19Character1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Character1Presenter() {}
 800a4a8:	4770      	bx	lr

0800a4aa <_ZThn4_N19Character1PresenterD1Ev>:
 800a4aa:	3804      	subs	r0, #4
 800a4ac:	4770      	bx	lr

0800a4ae <_ZN19Character1Presenter10deactivateEv>:
}

void Character1Presenter::activate()
{

}
 800a4ae:	4770      	bx	lr

0800a4b0 <_ZN19Character1PresenterD0Ev>:
 800a4b0:	b510      	push	{r4, lr}
 800a4b2:	2110      	movs	r1, #16
 800a4b4:	4604      	mov	r4, r0
 800a4b6:	f023 fa36 	bl	802d926 <_ZdlPvj>
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	bd10      	pop	{r4, pc}

0800a4be <_ZThn4_N19Character1PresenterD0Ev>:
 800a4be:	f1a0 0004 	sub.w	r0, r0, #4
 800a4c2:	e7f5      	b.n	800a4b0 <_ZN19Character1PresenterD0Ev>

0800a4c4 <_ZN19Character1PresenterC1ER14Character1View>:
 800a4c4:	2200      	movs	r2, #0
 800a4c6:	6082      	str	r2, [r0, #8]
    : view(v)
 800a4c8:	4a02      	ldr	r2, [pc, #8]	@ (800a4d4 <_ZN19Character1PresenterC1ER14Character1View+0x10>)
 800a4ca:	6002      	str	r2, [r0, #0]
 800a4cc:	3218      	adds	r2, #24
 800a4ce:	6042      	str	r2, [r0, #4]
 800a4d0:	60c1      	str	r1, [r0, #12]
}
 800a4d2:	4770      	bx	lr
 800a4d4:	08032bac 	.word	0x08032bac

0800a4d8 <_ZN14Character1View14tearDownScreenEv>:
}

void Character1View::tearDownScreen()
{
    Character1ViewBase::tearDownScreen();
}
 800a4d8:	4770      	bx	lr
	...

0800a4dc <_ZN14Character1ViewD1Ev>:

class Character1View : public Character1ViewBase
{
public:
    Character1View();
    virtual ~Character1View() {}
 800a4dc:	b510      	push	{r4, lr}
 800a4de:	4b03      	ldr	r3, [pc, #12]	@ (800a4ec <_ZN14Character1ViewD1Ev+0x10>)
 800a4e0:	6003      	str	r3, [r0, #0]
 800a4e2:	4604      	mov	r4, r0
 800a4e4:	f7f8 fe61 	bl	80031aa <_ZN18Character1ViewBaseD1Ev>
 800a4e8:	4620      	mov	r0, r4
 800a4ea:	bd10      	pop	{r4, pc}
 800a4ec:	08032bd4 	.word	0x08032bd4

0800a4f0 <_ZN14Character1ViewD0Ev>:
 800a4f0:	b510      	push	{r4, lr}
 800a4f2:	4604      	mov	r4, r0
 800a4f4:	f7ff fff2 	bl	800a4dc <_ZN14Character1ViewD1Ev>
 800a4f8:	4620      	mov	r0, r4
 800a4fa:	f44f 7190 	mov.w	r1, #288	@ 0x120
 800a4fe:	f023 fa12 	bl	802d926 <_ZdlPvj>
 800a502:	4620      	mov	r0, r4
 800a504:	bd10      	pop	{r4, pc}
	...

0800a508 <_ZN14Character1ViewC1Ev>:
Character1View::Character1View()
 800a508:	b510      	push	{r4, lr}
 800a50a:	4604      	mov	r4, r0
 800a50c:	f7f8 fe84 	bl	8003218 <_ZN18Character1ViewBaseC1Ev>
 800a510:	4b01      	ldr	r3, [pc, #4]	@ (800a518 <_ZN14Character1ViewC1Ev+0x10>)
 800a512:	6023      	str	r3, [r4, #0]
}
 800a514:	4620      	mov	r0, r4
 800a516:	bd10      	pop	{r4, pc}
 800a518:	08032bd4 	.word	0x08032bd4

0800a51c <_ZN14Character1View11setupScreenEv>:
    Character1ViewBase::setupScreen();
 800a51c:	f7f8 be46 	b.w	80031ac <_ZN18Character1ViewBase11setupScreenEv>

0800a520 <_ZN18CharacterPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CharacterPresenter() {}
 800a520:	4770      	bx	lr

0800a522 <_ZThn4_N18CharacterPresenterD1Ev>:
 800a522:	3804      	subs	r0, #4
 800a524:	4770      	bx	lr

0800a526 <_ZN18CharacterPresenter10deactivateEv>:
}

void CharacterPresenter::activate()
{
    // Activation logic here
}
 800a526:	4770      	bx	lr

0800a528 <_ZN18CharacterPresenterD0Ev>:
 800a528:	b510      	push	{r4, lr}
 800a52a:	2110      	movs	r1, #16
 800a52c:	4604      	mov	r4, r0
 800a52e:	f023 f9fa 	bl	802d926 <_ZdlPvj>
 800a532:	4620      	mov	r0, r4
 800a534:	bd10      	pop	{r4, pc}

0800a536 <_ZThn4_N18CharacterPresenterD0Ev>:
 800a536:	f1a0 0004 	sub.w	r0, r0, #4
 800a53a:	e7f5      	b.n	800a528 <_ZN18CharacterPresenterD0Ev>

0800a53c <_ZN18CharacterPresenterC1ER13CharacterView>:
 800a53c:	2200      	movs	r2, #0
 800a53e:	6082      	str	r2, [r0, #8]
    : view(v)
 800a540:	4a02      	ldr	r2, [pc, #8]	@ (800a54c <_ZN18CharacterPresenterC1ER13CharacterView+0x10>)
 800a542:	6002      	str	r2, [r0, #0]
 800a544:	3218      	adds	r2, #24
 800a546:	6042      	str	r2, [r0, #4]
 800a548:	60c1      	str	r1, [r0, #12]
}
 800a54a:	4770      	bx	lr
 800a54c:	08032c08 	.word	0x08032c08

0800a550 <_ZN13CharacterView14tearDownScreenEv>:
}

void CharacterView::tearDownScreen()
{
    CharacterViewBase::tearDownScreen();
}
 800a550:	4770      	bx	lr
	...

0800a554 <_ZN13CharacterViewD1Ev>:

class CharacterView : public CharacterViewBase
{
public:
    CharacterView();
    virtual ~CharacterView() {}
 800a554:	b510      	push	{r4, lr}
 800a556:	4b03      	ldr	r3, [pc, #12]	@ (800a564 <_ZN13CharacterViewD1Ev+0x10>)
 800a558:	6003      	str	r3, [r0, #0]
 800a55a:	4604      	mov	r4, r0
 800a55c:	f7f8 ff21 	bl	80033a2 <_ZN17CharacterViewBaseD1Ev>
 800a560:	4620      	mov	r0, r4
 800a562:	bd10      	pop	{r4, pc}
 800a564:	08032c30 	.word	0x08032c30

0800a568 <_ZN13CharacterViewD0Ev>:
 800a568:	b510      	push	{r4, lr}
 800a56a:	4604      	mov	r4, r0
 800a56c:	f7ff fff2 	bl	800a554 <_ZN13CharacterViewD1Ev>
 800a570:	4620      	mov	r0, r4
 800a572:	f44f 7116 	mov.w	r1, #600	@ 0x258
 800a576:	f023 f9d6 	bl	802d926 <_ZdlPvj>
 800a57a:	4620      	mov	r0, r4
 800a57c:	bd10      	pop	{r4, pc}
	...

0800a580 <_ZN13CharacterViewC1Ev>:
CharacterView::CharacterView() : currentCharacterIndex(NARUTO)
 800a580:	b510      	push	{r4, lr}
 800a582:	4604      	mov	r4, r0
 800a584:	f7f8 ff44 	bl	8003410 <_ZN17CharacterViewBaseC1Ev>
 800a588:	4b03      	ldr	r3, [pc, #12]	@ (800a598 <_ZN13CharacterViewC1Ev+0x18>)
 800a58a:	6023      	str	r3, [r4, #0]
 800a58c:	2300      	movs	r3, #0
 800a58e:	f8c4 3254 	str.w	r3, [r4, #596]	@ 0x254
}
 800a592:	4620      	mov	r0, r4
 800a594:	bd10      	pop	{r4, pc}
 800a596:	bf00      	nop
 800a598:	08032c30 	.word	0x08032c30

0800a59c <_ZN13CharacterView17hideAllCharactersEv>:
 800a59c:	2300      	movs	r3, #0
 800a59e:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800a5a2:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800a5a6:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 800a5aa:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800a5ae:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
    naruto.setVisible(false);
    sponge.setVisible(false);
    sakura.setVisible(false);
    sakura_lock.setVisible(false);
    sponge_lock.setVisible(false);
}
 800a5b2:	4770      	bx	lr

0800a5b4 <_ZN13CharacterView7testLEDEv>:

void CharacterView::testLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800a5b4:	4802      	ldr	r0, [pc, #8]	@ (800a5c0 <_ZN13CharacterView7testLEDEv+0xc>)
 800a5b6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800a5ba:	f006 bad4 	b.w	8010b66 <HAL_GPIO_TogglePin>
 800a5be:	bf00      	nop
 800a5c0:	40021800 	.word	0x40021800

0800a5c4 <_ZN13CharacterView11setupScreenEv>:
{
 800a5c4:	b510      	push	{r4, lr}
 800a5c6:	4604      	mov	r4, r0
    CharacterViewBase::setupScreen();
 800a5c8:	f7f8 feec 	bl	80033a4 <_ZN17CharacterViewBase11setupScreenEv>
    hideAllCharacters();
 800a5cc:	4620      	mov	r0, r4
 800a5ce:	f7ff ffe5 	bl	800a59c <_ZN13CharacterView17hideAllCharactersEv>
 800a5d2:	2301      	movs	r3, #1
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 800a5d4:	1d20      	adds	r0, r4, #4
 800a5d6:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 800a5da:	f012 f8c5 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    testLED();
 800a5de:	4620      	mov	r0, r4
}
 800a5e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    testLED();
 800a5e4:	f7ff bfe6 	b.w	800a5b4 <_ZN13CharacterView7testLEDEv>

0800a5e8 <_ZN13CharacterView16leftArrowClickedEv>:
{
 800a5e8:	b510      	push	{r4, lr}
 800a5ea:	4604      	mov	r4, r0
    testLED();
 800a5ec:	f7ff ffe2 	bl	800a5b4 <_ZN13CharacterView7testLEDEv>
    currentCharacterIndex--;
 800a5f0:	f8d4 2254 	ldr.w	r2, [r4, #596]	@ 0x254
        currentCharacterIndex = CHARACTER_COUNT - 1;
 800a5f4:	3a01      	subs	r2, #1
 800a5f6:	bf48      	it	mi
 800a5f8:	2202      	movmi	r2, #2
 800a5fa:	f8c4 2254 	str.w	r2, [r4, #596]	@ 0x254
    hideAllCharacters();
 800a5fe:	4620      	mov	r0, r4
 800a600:	f7ff ffcc 	bl	800a59c <_ZN13CharacterView17hideAllCharactersEv>
    switch (currentCharacterIndex) {
 800a604:	2a01      	cmp	r2, #1
 800a606:	d00a      	beq.n	800a61e <_ZN13CharacterView16leftArrowClickedEv+0x36>
 800a608:	2a02      	cmp	r2, #2
 800a60a:	d011      	beq.n	800a630 <_ZN13CharacterView16leftArrowClickedEv+0x48>
 800a60c:	b912      	cbnz	r2, 800a614 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
 800a60e:	2301      	movs	r3, #1
 800a610:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 800a614:	1d20      	adds	r0, r4, #4
}
 800a616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a61a:	f012 b8a5 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (sakuraUnlocked) {
 800a61e:	4b09      	ldr	r3, [pc, #36]	@ (800a644 <_ZN13CharacterView16leftArrowClickedEv+0x5c>)
 800a620:	781b      	ldrb	r3, [r3, #0]
 800a622:	b113      	cbz	r3, 800a62a <_ZN13CharacterView16leftArrowClickedEv+0x42>
 800a624:	f884 2115 	strb.w	r2, [r4, #277]	@ 0x115
    }
 800a628:	e7f4      	b.n	800a614 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
        visible = vis;
 800a62a:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
    }
 800a62e:	e7f1      	b.n	800a614 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
            if (spongeUnlocked) {
 800a630:	4b05      	ldr	r3, [pc, #20]	@ (800a648 <_ZN13CharacterView16leftArrowClickedEv+0x60>)
 800a632:	781a      	ldrb	r2, [r3, #0]
 800a634:	2301      	movs	r3, #1
 800a636:	b112      	cbz	r2, 800a63e <_ZN13CharacterView16leftArrowClickedEv+0x56>
        visible = vis;
 800a638:	f884 30e9 	strb.w	r3, [r4, #233]	@ 0xe9
    }
 800a63c:	e7ea      	b.n	800a614 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
        visible = vis;
 800a63e:	f884 316d 	strb.w	r3, [r4, #365]	@ 0x16d
    }
 800a642:	e7e7      	b.n	800a614 <_ZN13CharacterView16leftArrowClickedEv+0x2c>
 800a644:	20002b71 	.word	0x20002b71
 800a648:	20002b70 	.word	0x20002b70

0800a64c <_ZN13CharacterView17rightArrowClickedEv>:
{
 800a64c:	b510      	push	{r4, lr}
 800a64e:	4604      	mov	r4, r0
    testLED();
 800a650:	f7ff ffb0 	bl	800a5b4 <_ZN13CharacterView7testLEDEv>
    currentCharacterIndex++;
 800a654:	f8d4 2254 	ldr.w	r2, [r4, #596]	@ 0x254
 800a658:	3201      	adds	r2, #1
        currentCharacterIndex = 0;
 800a65a:	2a03      	cmp	r2, #3
 800a65c:	bfa8      	it	ge
 800a65e:	2200      	movge	r2, #0
 800a660:	f8c4 2254 	str.w	r2, [r4, #596]	@ 0x254
    hideAllCharacters();
 800a664:	4620      	mov	r0, r4
 800a666:	f7ff ff99 	bl	800a59c <_ZN13CharacterView17hideAllCharactersEv>
    switch (currentCharacterIndex) {
 800a66a:	2a01      	cmp	r2, #1
 800a66c:	d00a      	beq.n	800a684 <_ZN13CharacterView17rightArrowClickedEv+0x38>
 800a66e:	2a02      	cmp	r2, #2
 800a670:	d011      	beq.n	800a696 <_ZN13CharacterView17rightArrowClickedEv+0x4a>
 800a672:	b912      	cbnz	r2, 800a67a <_ZN13CharacterView17rightArrowClickedEv+0x2e>
        visible = vis;
 800a674:	2301      	movs	r3, #1
 800a676:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
 800a67a:	1d20      	adds	r0, r4, #4
}
 800a67c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a680:	f012 b872 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (sakuraUnlocked) {
 800a684:	4b09      	ldr	r3, [pc, #36]	@ (800a6ac <_ZN13CharacterView17rightArrowClickedEv+0x60>)
 800a686:	781b      	ldrb	r3, [r3, #0]
 800a688:	b113      	cbz	r3, 800a690 <_ZN13CharacterView17rightArrowClickedEv+0x44>
 800a68a:	f884 2115 	strb.w	r2, [r4, #277]	@ 0x115
    }
 800a68e:	e7f4      	b.n	800a67a <_ZN13CharacterView17rightArrowClickedEv+0x2e>
        visible = vis;
 800a690:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
    }
 800a694:	e7f1      	b.n	800a67a <_ZN13CharacterView17rightArrowClickedEv+0x2e>
            if (spongeUnlocked) {
 800a696:	4b06      	ldr	r3, [pc, #24]	@ (800a6b0 <_ZN13CharacterView17rightArrowClickedEv+0x64>)
 800a698:	781a      	ldrb	r2, [r3, #0]
 800a69a:	2301      	movs	r3, #1
 800a69c:	b112      	cbz	r2, 800a6a4 <_ZN13CharacterView17rightArrowClickedEv+0x58>
        visible = vis;
 800a69e:	f884 30e9 	strb.w	r3, [r4, #233]	@ 0xe9
    }
 800a6a2:	e7ea      	b.n	800a67a <_ZN13CharacterView17rightArrowClickedEv+0x2e>
        visible = vis;
 800a6a4:	f884 316d 	strb.w	r3, [r4, #365]	@ 0x16d
    }
 800a6a8:	e7e7      	b.n	800a67a <_ZN13CharacterView17rightArrowClickedEv+0x2e>
 800a6aa:	bf00      	nop
 800a6ac:	20002b71 	.word	0x20002b71
 800a6b0:	20002b70 	.word	0x20002b70

0800a6b4 <_ZN13CharacterView10testUnlockEv>:
void CharacterView::testUnlock()
{
    // Test function: Touch giữa màn hình để unlock characters
    static int unlockStep = 0;

    switch (unlockStep) {
 800a6b4:	4a20      	ldr	r2, [pc, #128]	@ (800a738 <_ZN13CharacterView10testUnlockEv+0x84>)
 800a6b6:	4921      	ldr	r1, [pc, #132]	@ (800a73c <_ZN13CharacterView10testUnlockEv+0x88>)
 800a6b8:	6813      	ldr	r3, [r2, #0]
 800a6ba:	2b01      	cmp	r3, #1
{
 800a6bc:	b510      	push	{r4, lr}
 800a6be:	4c20      	ldr	r4, [pc, #128]	@ (800a740 <_ZN13CharacterView10testUnlockEv+0x8c>)
    switch (unlockStep) {
 800a6c0:	d016      	beq.n	800a6f0 <_ZN13CharacterView10testUnlockEv+0x3c>
 800a6c2:	2b02      	cmp	r3, #2
 800a6c4:	d017      	beq.n	800a6f6 <_ZN13CharacterView10testUnlockEv+0x42>
 800a6c6:	b913      	cbnz	r3, 800a6ce <_ZN13CharacterView10testUnlockEv+0x1a>
    void leftArrowClicked();
    void rightArrowClicked();

public:
    // Static methods to unlock characters (call from GameScreen)
    static void unlockSakura() { sakuraUnlocked = true; }
 800a6c8:	2301      	movs	r3, #1
 800a6ca:	7023      	strb	r3, [r4, #0]
            unlockStep = 1;
            break;
        case 1:
            // Second touch: unlock Sponge
            unlockSponge();
            unlockStep = 2;
 800a6cc:	6013      	str	r3, [r2, #0]
            currentCharacterIndex = NARUTO;
            break;
    }

    // Update display after unlock change
    hideAllCharacters();
 800a6ce:	f7ff ff65 	bl	800a59c <_ZN13CharacterView17hideAllCharactersEv>

    // Show current character if unlocked
    if (currentCharacterIndex == NARUTO) {
 800a6d2:	f8d0 3254 	ldr.w	r3, [r0, #596]	@ 0x254
        naruto.setVisible(true);
    } else if (currentCharacterIndex == SAKURA && sakuraUnlocked) {
 800a6d6:	7822      	ldrb	r2, [r4, #0]
        sakura.setVisible(true);
    } else if (currentCharacterIndex == SPONGE && spongeUnlocked) {
 800a6d8:	7809      	ldrb	r1, [r1, #0]
    if (currentCharacterIndex == NARUTO) {
 800a6da:	b323      	cbz	r3, 800a726 <_ZN13CharacterView10testUnlockEv+0x72>
    } else if (currentCharacterIndex == SAKURA && sakuraUnlocked) {
 800a6dc:	2b01      	cmp	r3, #1
 800a6de:	d111      	bne.n	800a704 <_ZN13CharacterView10testUnlockEv+0x50>
 800a6e0:	b1f2      	cbz	r2, 800a720 <_ZN13CharacterView10testUnlockEv+0x6c>
        visible = vis;
 800a6e2:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
        naruto.setVisible(true);
    }

    // Always show lock images for locked characters
    if (!sakuraUnlocked) sakura_lock.setVisible(true);
    if (!spongeUnlocked) sponge_lock.setVisible(true);
 800a6e6:	b9b1      	cbnz	r1, 800a716 <_ZN13CharacterView10testUnlockEv+0x62>
 800a6e8:	2301      	movs	r3, #1
 800a6ea:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
    }
 800a6ee:	e012      	b.n	800a716 <_ZN13CharacterView10testUnlockEv+0x62>
    static void unlockSponge() { spongeUnlocked = true; }
 800a6f0:	700b      	strb	r3, [r1, #0]
            unlockStep = 2;
 800a6f2:	2302      	movs	r3, #2
 800a6f4:	e7ea      	b.n	800a6cc <_ZN13CharacterView10testUnlockEv+0x18>
    static void resetProgress() { sakuraUnlocked = false; spongeUnlocked = false; }
 800a6f6:	2300      	movs	r3, #0
 800a6f8:	7023      	strb	r3, [r4, #0]
 800a6fa:	700b      	strb	r3, [r1, #0]
            unlockStep = 0;
 800a6fc:	6013      	str	r3, [r2, #0]
            currentCharacterIndex = NARUTO;
 800a6fe:	f8c0 3254 	str.w	r3, [r0, #596]	@ 0x254
            break;
 800a702:	e7e4      	b.n	800a6ce <_ZN13CharacterView10testUnlockEv+0x1a>
    } else if (currentCharacterIndex == SPONGE && spongeUnlocked) {
 800a704:	2b02      	cmp	r3, #2
 800a706:	d10b      	bne.n	800a720 <_ZN13CharacterView10testUnlockEv+0x6c>
 800a708:	b151      	cbz	r1, 800a720 <_ZN13CharacterView10testUnlockEv+0x6c>
        visible = vis;
 800a70a:	2301      	movs	r3, #1
 800a70c:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
    if (!sakuraUnlocked) sakura_lock.setVisible(true);
 800a710:	b90a      	cbnz	r2, 800a716 <_ZN13CharacterView10testUnlockEv+0x62>
 800a712:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141

    invalidate();
}
 800a716:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a71a:	3004      	adds	r0, #4
 800a71c:	f012 b824 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        currentCharacterIndex = NARUTO;
 800a720:	2300      	movs	r3, #0
 800a722:	f8c0 3254 	str.w	r3, [r0, #596]	@ 0x254
 800a726:	2301      	movs	r3, #1
 800a728:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
    if (!sakuraUnlocked) sakura_lock.setVisible(true);
 800a72c:	2a00      	cmp	r2, #0
 800a72e:	d1da      	bne.n	800a6e6 <_ZN13CharacterView10testUnlockEv+0x32>
 800a730:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
    }
 800a734:	e7d7      	b.n	800a6e6 <_ZN13CharacterView10testUnlockEv+0x32>
 800a736:	bf00      	nop
 800a738:	20002b6c 	.word	0x20002b6c
 800a73c:	20002b70 	.word	0x20002b70
 800a740:	20002b71 	.word	0x20002b71

0800a744 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800a744:	b538      	push	{r3, r4, r5, lr}
 800a746:	460d      	mov	r5, r1
 800a748:	4604      	mov	r4, r0
    testLED();
 800a74a:	f7ff ff33 	bl	800a5b4 <_ZN13CharacterView7testLEDEv>
    if (clickX >= 80 && clickX <= 160 && clickY >= 250 && clickY <= 300) {
 800a74e:	88ea      	ldrh	r2, [r5, #6]
        return clickY;
 800a750:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800a754:	f1a2 0150 	sub.w	r1, r2, #80	@ 0x50
 800a758:	2950      	cmp	r1, #80	@ 0x50
 800a75a:	d808      	bhi.n	800a76e <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x2a>
 800a75c:	3bfa      	subs	r3, #250	@ 0xfa
 800a75e:	b29b      	uxth	r3, r3
 800a760:	2b32      	cmp	r3, #50	@ 0x32
 800a762:	d81c      	bhi.n	800a79e <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
        testUnlock();
 800a764:	4620      	mov	r0, r4
}
 800a766:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        testUnlock();
 800a76a:	f7ff bfa3 	b.w	800a6b4 <_ZN13CharacterView10testUnlockEv>
    if (clickX >= 197 && clickX <= 239 && clickY >= 135 && clickY <= 189)
 800a76e:	f1a2 01c5 	sub.w	r1, r2, #197	@ 0xc5
 800a772:	292a      	cmp	r1, #42	@ 0x2a
 800a774:	d808      	bhi.n	800a788 <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x44>
 800a776:	3b87      	subs	r3, #135	@ 0x87
 800a778:	b29b      	uxth	r3, r3
 800a77a:	2b36      	cmp	r3, #54	@ 0x36
 800a77c:	d80f      	bhi.n	800a79e <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
        rightArrowClicked();
 800a77e:	4620      	mov	r0, r4
}
 800a780:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        rightArrowClicked();
 800a784:	f7ff bf62 	b.w	800a64c <_ZN13CharacterView17rightArrowClickedEv>
    if (clickX >= 0 && clickX <= 42 && clickY >= 135 && clickY <= 189)
 800a788:	2a2a      	cmp	r2, #42	@ 0x2a
 800a78a:	d808      	bhi.n	800a79e <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
 800a78c:	3b87      	subs	r3, #135	@ 0x87
 800a78e:	b29b      	uxth	r3, r3
 800a790:	2b36      	cmp	r3, #54	@ 0x36
 800a792:	d804      	bhi.n	800a79e <_ZN13CharacterView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
        leftArrowClicked();
 800a794:	4620      	mov	r0, r4
}
 800a796:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        leftArrowClicked();
 800a79a:	f7ff bf25 	b.w	800a5e8 <_ZN13CharacterView16leftArrowClickedEv>
    CharacterViewBase::handleClickEvent(evt);
 800a79e:	4629      	mov	r1, r5
 800a7a0:	4620      	mov	r0, r4
}
 800a7a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    CharacterViewBase::handleClickEvent(evt);
 800a7a6:	f012 bd3d 	b.w	801d224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>

0800a7aa <_ZN20Character_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Character_2Presenter() {}
 800a7aa:	4770      	bx	lr

0800a7ac <_ZThn4_N20Character_2PresenterD1Ev>:
 800a7ac:	3804      	subs	r0, #4
 800a7ae:	4770      	bx	lr

0800a7b0 <_ZN20Character_2Presenter10deactivateEv>:
}

void Character_2Presenter::activate()
{

}
 800a7b0:	4770      	bx	lr

0800a7b2 <_ZN20Character_2PresenterD0Ev>:
 800a7b2:	b510      	push	{r4, lr}
 800a7b4:	2110      	movs	r1, #16
 800a7b6:	4604      	mov	r4, r0
 800a7b8:	f023 f8b5 	bl	802d926 <_ZdlPvj>
 800a7bc:	4620      	mov	r0, r4
 800a7be:	bd10      	pop	{r4, pc}

0800a7c0 <_ZThn4_N20Character_2PresenterD0Ev>:
 800a7c0:	f1a0 0004 	sub.w	r0, r0, #4
 800a7c4:	e7f5      	b.n	800a7b2 <_ZN20Character_2PresenterD0Ev>
	...

0800a7c8 <_ZN20Character_2PresenterC1ER15Character_2View>:
 800a7c8:	2200      	movs	r2, #0
 800a7ca:	6082      	str	r2, [r0, #8]
    : view(v)
 800a7cc:	4a02      	ldr	r2, [pc, #8]	@ (800a7d8 <_ZN20Character_2PresenterC1ER15Character_2View+0x10>)
 800a7ce:	6002      	str	r2, [r0, #0]
 800a7d0:	3218      	adds	r2, #24
 800a7d2:	6042      	str	r2, [r0, #4]
 800a7d4:	60c1      	str	r1, [r0, #12]
}
 800a7d6:	4770      	bx	lr
 800a7d8:	08032c64 	.word	0x08032c64

0800a7dc <_ZN15Character_2View14tearDownScreenEv>:
}

void Character_2View::tearDownScreen()
{
    Character_2ViewBase::tearDownScreen();
}
 800a7dc:	4770      	bx	lr
	...

0800a7e0 <_ZN15Character_2ViewD1Ev>:

class Character_2View : public Character_2ViewBase
{
public:
    Character_2View();
    virtual ~Character_2View() {}
 800a7e0:	b510      	push	{r4, lr}
 800a7e2:	4b03      	ldr	r3, [pc, #12]	@ (800a7f0 <_ZN15Character_2ViewD1Ev+0x10>)
 800a7e4:	6003      	str	r3, [r0, #0]
 800a7e6:	4604      	mov	r4, r0
 800a7e8:	f7f8 ffb3 	bl	8003752 <_ZN19Character_2ViewBaseD1Ev>
 800a7ec:	4620      	mov	r0, r4
 800a7ee:	bd10      	pop	{r4, pc}
 800a7f0:	08032c8c 	.word	0x08032c8c

0800a7f4 <_ZN15Character_2ViewD0Ev>:
 800a7f4:	b510      	push	{r4, lr}
 800a7f6:	4604      	mov	r4, r0
 800a7f8:	f7ff fff2 	bl	800a7e0 <_ZN15Character_2ViewD1Ev>
 800a7fc:	4620      	mov	r0, r4
 800a7fe:	f44f 711e 	mov.w	r1, #632	@ 0x278
 800a802:	f023 f890 	bl	802d926 <_ZdlPvj>
 800a806:	4620      	mov	r0, r4
 800a808:	bd10      	pop	{r4, pc}
	...

0800a80c <_ZN15Character_2ViewC1Ev>:
Character_2View::Character_2View() : currentCharacterIndex(NARUTO)
 800a80c:	b510      	push	{r4, lr}
 800a80e:	4604      	mov	r4, r0
 800a810:	f7f8 ffe0 	bl	80037d4 <_ZN19Character_2ViewBaseC1Ev>
 800a814:	4b03      	ldr	r3, [pc, #12]	@ (800a824 <_ZN15Character_2ViewC1Ev+0x18>)
 800a816:	6023      	str	r3, [r4, #0]
 800a818:	2300      	movs	r3, #0
 800a81a:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
}
 800a81e:	4620      	mov	r0, r4
 800a820:	bd10      	pop	{r4, pc}
 800a822:	bf00      	nop
 800a824:	08032c8c 	.word	0x08032c8c

0800a828 <_ZN15Character_2View7testLEDEv>:
    narutobutton.invalidate();
}

void Character_2View::testLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800a828:	4802      	ldr	r0, [pc, #8]	@ (800a834 <_ZN15Character_2View7testLEDEv+0xc>)
 800a82a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800a82e:	f006 b99a 	b.w	8010b66 <HAL_GPIO_TogglePin>
 800a832:	bf00      	nop
 800a834:	40021800 	.word	0x40021800

0800a838 <_ZN15Character_2View17hideAllCharactersEv>:
{
 800a838:	b510      	push	{r4, lr}
        visible = vis;
 800a83a:	2300      	movs	r3, #0
 800a83c:	4604      	mov	r4, r0
 800a83e:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800a842:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 800a846:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
    naruto.invalidate();
 800a84a:	3098      	adds	r0, #152	@ 0x98
 800a84c:	f011 ff8c 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sakura.invalidate();
 800a850:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800a854:	f011 ff88 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sponge.invalidate();
 800a858:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
}
 800a85c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sponge.invalidate();
 800a860:	f011 bf82 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800a864 <_ZN15Character_2View14hideAllButtonsEv>:
{
 800a864:	b510      	push	{r4, lr}
        touchable = touch;
 800a866:	2300      	movs	r3, #0
 800a868:	4604      	mov	r4, r0
 800a86a:	f8a0 3198 	strh.w	r3, [r0, #408]	@ 0x198
 800a86e:	f8a0 3210 	strh.w	r3, [r0, #528]	@ 0x210
    sakurabutton.invalidate();
 800a872:	f500 70ba 	add.w	r0, r0, #372	@ 0x174
 800a876:	f011 ff77 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    narutobutton.invalidate();
 800a87a:	f504 70f6 	add.w	r0, r4, #492	@ 0x1ec
}
 800a87e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    narutobutton.invalidate();
 800a882:	f011 bf71 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800a886 <_ZN15Character_2View11setupScreenEv>:
{
 800a886:	b510      	push	{r4, lr}
 800a888:	4604      	mov	r4, r0
    Character_2ViewBase::setupScreen();
 800a88a:	f7f8 ff63 	bl	8003754 <_ZN19Character_2ViewBase11setupScreenEv>
    currentCharacterIndex = NARUTO;
 800a88e:	2300      	movs	r3, #0
 800a890:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
    hideAllCharacters();
 800a894:	4620      	mov	r0, r4
 800a896:	f7ff ffcf 	bl	800a838 <_ZN15Character_2View17hideAllCharactersEv>
    hideAllButtons();
 800a89a:	4620      	mov	r0, r4
 800a89c:	f7ff ffe2 	bl	800a864 <_ZN15Character_2View14hideAllButtonsEv>
        visible = vis;
 800a8a0:	2301      	movs	r3, #1
 800a8a2:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
        touchable = touch;
 800a8a6:	f240 1301 	movw	r3, #257	@ 0x101
 800a8aa:	1d20      	adds	r0, r4, #4
 800a8ac:	f8a4 3210 	strh.w	r3, [r4, #528]	@ 0x210
 800a8b0:	f011 ff5a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    testLED(); // Confirm setup
 800a8b4:	4620      	mov	r0, r4
}
 800a8b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    testLED(); // Confirm setup
 800a8ba:	f7ff bfb5 	b.w	800a828 <_ZN15Character_2View7testLEDEv>

0800a8be <_ZN15Character_2View20showCurrentCharacterEv>:
{
 800a8be:	b510      	push	{r4, lr}
 800a8c0:	4604      	mov	r4, r0
    hideAllCharacters();
 800a8c2:	f7ff ffb9 	bl	800a838 <_ZN15Character_2View17hideAllCharactersEv>
    hideAllButtons();
 800a8c6:	4620      	mov	r0, r4
 800a8c8:	f7ff ffcc 	bl	800a864 <_ZN15Character_2View14hideAllButtonsEv>
    switch (currentCharacterIndex) {
 800a8cc:	f8d4 3274 	ldr.w	r3, [r4, #628]	@ 0x274
 800a8d0:	2b01      	cmp	r3, #1
 800a8d2:	d00e      	beq.n	800a8f2 <_ZN15Character_2View20showCurrentCharacterEv+0x34>
 800a8d4:	2b02      	cmp	r3, #2
 800a8d6:	d013      	beq.n	800a900 <_ZN15Character_2View20showCurrentCharacterEv+0x42>
 800a8d8:	b933      	cbnz	r3, 800a8e8 <_ZN15Character_2View20showCurrentCharacterEv+0x2a>
        visible = vis;
 800a8da:	2301      	movs	r3, #1
 800a8dc:	f884 30bd 	strb.w	r3, [r4, #189]	@ 0xbd
        touchable = touch;
 800a8e0:	f240 1301 	movw	r3, #257	@ 0x101
 800a8e4:	f8a4 3210 	strh.w	r3, [r4, #528]	@ 0x210
 800a8e8:	1d20      	adds	r0, r4, #4
}
 800a8ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a8ee:	f011 bf3b 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        visible = vis;
 800a8f2:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        touchable = touch;
 800a8f6:	f240 1301 	movw	r3, #257	@ 0x101
 800a8fa:	f8a4 3198 	strh.w	r3, [r4, #408]	@ 0x198
    }
 800a8fe:	e7f3      	b.n	800a8e8 <_ZN15Character_2View20showCurrentCharacterEv+0x2a>
        visible = vis;
 800a900:	2301      	movs	r3, #1
 800a902:	f884 30e9 	strb.w	r3, [r4, #233]	@ 0xe9
    }
 800a906:	e7ef      	b.n	800a8e8 <_ZN15Character_2View20showCurrentCharacterEv+0x2a>

0800a908 <_ZN15Character_2View16leftArrowClickedEv>:
{
 800a908:	b510      	push	{r4, lr}
 800a90a:	4604      	mov	r4, r0
    testLED();
 800a90c:	f7ff ff8c 	bl	800a828 <_ZN15Character_2View7testLEDEv>
    currentCharacterIndex--;
 800a910:	f8d4 3274 	ldr.w	r3, [r4, #628]	@ 0x274
        currentCharacterIndex = CHARACTER_COUNT - 1;
 800a914:	3b01      	subs	r3, #1
 800a916:	bf48      	it	mi
 800a918:	2302      	movmi	r3, #2
 800a91a:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
    showCurrentCharacter();
 800a91e:	4620      	mov	r0, r4
}
 800a920:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    showCurrentCharacter();
 800a924:	f7ff bfcb 	b.w	800a8be <_ZN15Character_2View20showCurrentCharacterEv>

0800a928 <_ZN15Character_2View17rightArrowClickedEv>:
{
 800a928:	b510      	push	{r4, lr}
 800a92a:	4604      	mov	r4, r0
    testLED();
 800a92c:	f7ff ff7c 	bl	800a828 <_ZN15Character_2View7testLEDEv>
    currentCharacterIndex++;
 800a930:	f8d4 3274 	ldr.w	r3, [r4, #628]	@ 0x274
 800a934:	3301      	adds	r3, #1
        currentCharacterIndex = 0;
 800a936:	2b03      	cmp	r3, #3
 800a938:	bfa8      	it	ge
 800a93a:	2300      	movge	r3, #0
 800a93c:	f8c4 3274 	str.w	r3, [r4, #628]	@ 0x274
    showCurrentCharacter();
 800a940:	4620      	mov	r0, r4
}
 800a942:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    showCurrentCharacter();
 800a946:	f7ff bfba 	b.w	800a8be <_ZN15Character_2View20showCurrentCharacterEv>

0800a94a <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800a94a:	b538      	push	{r3, r4, r5, lr}
 800a94c:	460d      	mov	r5, r1
 800a94e:	4604      	mov	r4, r0
    testLED();
 800a950:	f7ff ff6a 	bl	800a828 <_ZN15Character_2View7testLEDEv>
    if (clickX >= 197 && clickX <= 239 && clickY >= 135 && clickY <= 189)
 800a954:	88ea      	ldrh	r2, [r5, #6]
 800a956:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800a95a:	f1a2 01c5 	sub.w	r1, r2, #197	@ 0xc5
 800a95e:	292a      	cmp	r1, #42	@ 0x2a
 800a960:	d808      	bhi.n	800a974 <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x2a>
 800a962:	3b87      	subs	r3, #135	@ 0x87
 800a964:	b29b      	uxth	r3, r3
 800a966:	2b36      	cmp	r3, #54	@ 0x36
 800a968:	d80f      	bhi.n	800a98a <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x40>
        rightArrowClicked();
 800a96a:	4620      	mov	r0, r4
}
 800a96c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        rightArrowClicked();
 800a970:	f7ff bfda 	b.w	800a928 <_ZN15Character_2View17rightArrowClickedEv>
    if (clickX >= 0 && clickX <= 42 && clickY >= 135 && clickY <= 189)
 800a974:	2a2a      	cmp	r2, #42	@ 0x2a
 800a976:	d808      	bhi.n	800a98a <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x40>
 800a978:	3b87      	subs	r3, #135	@ 0x87
 800a97a:	b29b      	uxth	r3, r3
 800a97c:	2b36      	cmp	r3, #54	@ 0x36
 800a97e:	d804      	bhi.n	800a98a <_ZN15Character_2View16handleClickEventERKN8touchgfx10ClickEventE+0x40>
        leftArrowClicked();
 800a980:	4620      	mov	r0, r4
}
 800a982:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        leftArrowClicked();
 800a986:	f7ff bfbf 	b.w	800a908 <_ZN15Character_2View16leftArrowClickedEv>
    Character_2ViewBase::handleClickEvent(evt);
 800a98a:	4629      	mov	r1, r5
 800a98c:	4620      	mov	r0, r4
}
 800a98e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    Character_2ViewBase::handleClickEvent(evt);
 800a992:	f012 bc47 	b.w	801d224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>

0800a996 <_ZN24Character_FinalPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Character_FinalPresenter() {}
 800a996:	4770      	bx	lr

0800a998 <_ZThn4_N24Character_FinalPresenterD1Ev>:
 800a998:	3804      	subs	r0, #4
 800a99a:	4770      	bx	lr

0800a99c <_ZN24Character_FinalPresenter10deactivateEv>:
}

void Character_FinalPresenter::activate()
{

}
 800a99c:	4770      	bx	lr

0800a99e <_ZN24Character_FinalPresenterD0Ev>:
 800a99e:	b510      	push	{r4, lr}
 800a9a0:	2110      	movs	r1, #16
 800a9a2:	4604      	mov	r4, r0
 800a9a4:	f022 ffbf 	bl	802d926 <_ZdlPvj>
 800a9a8:	4620      	mov	r0, r4
 800a9aa:	bd10      	pop	{r4, pc}

0800a9ac <_ZThn4_N24Character_FinalPresenterD0Ev>:
 800a9ac:	f1a0 0004 	sub.w	r0, r0, #4
 800a9b0:	e7f5      	b.n	800a99e <_ZN24Character_FinalPresenterD0Ev>
	...

0800a9b4 <_ZN24Character_FinalPresenterC1ER19Character_FinalView>:
 800a9b4:	2200      	movs	r2, #0
 800a9b6:	6082      	str	r2, [r0, #8]
    : view(v)
 800a9b8:	4a02      	ldr	r2, [pc, #8]	@ (800a9c4 <_ZN24Character_FinalPresenterC1ER19Character_FinalView+0x10>)
 800a9ba:	6002      	str	r2, [r0, #0]
 800a9bc:	3218      	adds	r2, #24
 800a9be:	6042      	str	r2, [r0, #4]
 800a9c0:	60c1      	str	r1, [r0, #12]
}
 800a9c2:	4770      	bx	lr
 800a9c4:	08032cc0 	.word	0x08032cc0

0800a9c8 <_ZN19Character_FinalView14tearDownScreenEv>:
}

void Character_FinalView::tearDownScreen()
{
    Character_FinalViewBase::tearDownScreen();
}
 800a9c8:	4770      	bx	lr
	...

0800a9cc <_ZN19Character_FinalViewD1Ev>:

class Character_FinalView : public Character_FinalViewBase
{
public:
    Character_FinalView();
    virtual ~Character_FinalView() {}
 800a9cc:	b510      	push	{r4, lr}
 800a9ce:	4b03      	ldr	r3, [pc, #12]	@ (800a9dc <_ZN19Character_FinalViewD1Ev+0x10>)
 800a9d0:	6003      	str	r3, [r0, #0]
 800a9d2:	4604      	mov	r4, r0
 800a9d4:	f7f9 f861 	bl	8003a9a <_ZN23Character_FinalViewBaseD1Ev>
 800a9d8:	4620      	mov	r0, r4
 800a9da:	bd10      	pop	{r4, pc}
 800a9dc:	08032ce8 	.word	0x08032ce8

0800a9e0 <_ZN19Character_FinalViewD0Ev>:
 800a9e0:	b510      	push	{r4, lr}
 800a9e2:	4604      	mov	r4, r0
 800a9e4:	f7ff fff2 	bl	800a9cc <_ZN19Character_FinalViewD1Ev>
 800a9e8:	4620      	mov	r0, r4
 800a9ea:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
 800a9ee:	f022 ff9a 	bl	802d926 <_ZdlPvj>
 800a9f2:	4620      	mov	r0, r4
 800a9f4:	bd10      	pop	{r4, pc}
	...

0800a9f8 <_ZN19Character_FinalViewC1Ev>:
Character_FinalView::Character_FinalView()
 800a9f8:	b510      	push	{r4, lr}
 800a9fa:	4604      	mov	r4, r0
 800a9fc:	f7f9 f884 	bl	8003b08 <_ZN23Character_FinalViewBaseC1Ev>
 800aa00:	4b01      	ldr	r3, [pc, #4]	@ (800aa08 <_ZN19Character_FinalViewC1Ev+0x10>)
 800aa02:	6023      	str	r3, [r4, #0]
}
 800aa04:	4620      	mov	r0, r4
 800aa06:	bd10      	pop	{r4, pc}
 800aa08:	08032ce8 	.word	0x08032ce8

0800aa0c <_ZN19Character_FinalView11setupScreenEv>:
    Character_FinalViewBase::setupScreen();
 800aa0c:	f7f9 b846 	b.w	8003a9c <_ZN23Character_FinalViewBase11setupScreenEv>

0800aa10 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800aa10:	4770      	bx	lr

0800aa12 <_ZN19FrontendApplicationD0Ev>:
 800aa12:	b510      	push	{r4, lr}
 800aa14:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800aa18:	4604      	mov	r4, r0
 800aa1a:	f022 ff84 	bl	802d926 <_ZdlPvj>
 800aa1e:	4620      	mov	r0, r4
 800aa20:	bd10      	pop	{r4, pc}

0800aa22 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800aa22:	b510      	push	{r4, lr}
 800aa24:	4604      	mov	r4, r0
    {
        model.tick();
 800aa26:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 800aa2a:	f001 ffaa 	bl	800c982 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800aa2e:	4620      	mov	r0, r4
    }
 800aa30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800aa34:	f010 bd68 	b.w	801b508 <_ZN8touchgfx11Application15handleTickEventEv>

0800aa38 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800aa38:	b510      	push	{r4, lr}
 800aa3a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800aa3c:	f7f9 fa44 	bl	8003ec8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800aa40:	4b01      	ldr	r3, [pc, #4]	@ (800aa48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800aa42:	6023      	str	r3, [r4, #0]
{

}
 800aa44:	4620      	mov	r0, r4
 800aa46:	bd10      	pop	{r4, pc}
 800aa48:	08032d1c 	.word	0x08032d1c

0800aa4c <_ZN19GameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreenPresenter() {}
 800aa4c:	4770      	bx	lr

0800aa4e <_ZThn4_N19GameScreenPresenterD1Ev>:
 800aa4e:	3804      	subs	r0, #4
 800aa50:	4770      	bx	lr

0800aa52 <_ZN19GameScreenPresenter10deactivateEv>:
}

void GameScreenPresenter::activate()
{

}
 800aa52:	4770      	bx	lr

0800aa54 <_ZN19GameScreenPresenterD0Ev>:
 800aa54:	b510      	push	{r4, lr}
 800aa56:	2110      	movs	r1, #16
 800aa58:	4604      	mov	r4, r0
 800aa5a:	f022 ff64 	bl	802d926 <_ZdlPvj>
 800aa5e:	4620      	mov	r0, r4
 800aa60:	bd10      	pop	{r4, pc}

0800aa62 <_ZThn4_N19GameScreenPresenterD0Ev>:
 800aa62:	f1a0 0004 	sub.w	r0, r0, #4
 800aa66:	e7f5      	b.n	800aa54 <_ZN19GameScreenPresenterD0Ev>

0800aa68 <_ZN19GameScreenPresenterC1ER14GameScreenView>:
 800aa68:	2200      	movs	r2, #0
 800aa6a:	6082      	str	r2, [r0, #8]
    : view(v)
 800aa6c:	4a02      	ldr	r2, [pc, #8]	@ (800aa78 <_ZN19GameScreenPresenterC1ER14GameScreenView+0x10>)
 800aa6e:	6002      	str	r2, [r0, #0]
 800aa70:	3218      	adds	r2, #24
 800aa72:	6042      	str	r2, [r0, #4]
 800aa74:	60c1      	str	r1, [r0, #12]
}
 800aa76:	4770      	bx	lr
 800aa78:	08032d70 	.word	0x08032d70

0800aa7c <_ZN14GameScreenView12checkGameEndEv>:
}

void GameScreenView::tearDownScreen()
{
    GameScreenViewBase::tearDownScreen();
}
 800aa7c:	4770      	bx	lr
	...

0800aa80 <_ZN14GameScreenViewD1Ev>:

class GameScreenView : public GameScreenViewBase
{
public:
    GameScreenView();
    virtual ~GameScreenView() {}
 800aa80:	b510      	push	{r4, lr}
 800aa82:	4b03      	ldr	r3, [pc, #12]	@ (800aa90 <_ZN14GameScreenViewD1Ev+0x10>)
 800aa84:	6003      	str	r3, [r0, #0]
 800aa86:	4604      	mov	r4, r0
 800aa88:	f7fa fc2e 	bl	80052e8 <_ZN18GameScreenViewBaseD1Ev>
 800aa8c:	4620      	mov	r0, r4
 800aa8e:	bd10      	pop	{r4, pc}
 800aa90:	08032d98 	.word	0x08032d98

0800aa94 <_ZN14GameScreenViewD0Ev>:
 800aa94:	b510      	push	{r4, lr}
 800aa96:	4604      	mov	r4, r0
 800aa98:	f7ff fff2 	bl	800aa80 <_ZN14GameScreenViewD1Ev>
 800aa9c:	4620      	mov	r0, r4
 800aa9e:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800aaa2:	f022 ff40 	bl	802d926 <_ZdlPvj>
 800aaa6:	4620      	mov	r0, r4
 800aaa8:	bd10      	pop	{r4, pc}
	...

0800aaac <_ZN14GameScreenView15calculateDamageEibbb.part.0>:

    return min + (mixed % (max - min + 1));
}

// Cập nhật calculateDamage function để hỗ trợ power-ups
int GameScreenView::calculateDamage(int baseDamage, bool isDefending, bool hasDoubleAttack, bool hasShield)
 800aaac:	b570      	push	{r4, r5, r6, lr}
 800aaae:	4604      	mov	r4, r0
 800aab0:	460e      	mov	r6, r1
    }

    int finalDamage = baseDamage;

    // Apply double damage first
    if (hasDoubleAttack) {
 800aab2:	4615      	mov	r5, r2
 800aab4:	b13a      	cbz	r2, 800aac6 <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x1a>
        finalDamage = (int)(baseDamage * 2.5); // x2.5 như yêu cầu
 800aab6:	f7f5 fe67 	bl	8000788 <__aeabi_i2d>
 800aaba:	4b09      	ldr	r3, [pc, #36]	@ (800aae0 <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x34>)
 800aabc:	2200      	movs	r2, #0
 800aabe:	f7f5 fbe7 	bl	8000290 <__aeabi_dmul>
 800aac2:	f7f5 fecb 	bl	800085c <__aeabi_d2iz>
    }

    // Apply defense reduction
    if (isDefending) {
 800aac6:	b13e      	cbz	r6, 800aad8 <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2c>
        if (finalDamage == 40 || (hasDoubleAttack && baseDamage == 40)) {
 800aac8:	2828      	cmp	r0, #40	@ 0x28
 800aaca:	d006      	beq.n	800aada <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2e>
 800aacc:	b10d      	cbz	r5, 800aad2 <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x26>
 800aace:	2c28      	cmp	r4, #40	@ 0x28
 800aad0:	d003      	beq.n	800aada <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2e>
            // Special attack khi bị defend: giảm xuống 25 damage
            finalDamage = 25;
        } else {
            // Đòn thường khi bị defend: giảm 50%
            finalDamage = finalDamage / 2;
 800aad2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800aad6:	1040      	asrs	r0, r0, #1
        }
    }

    return finalDamage;
}
 800aad8:	bd70      	pop	{r4, r5, r6, pc}
            finalDamage = 25;
 800aada:	2019      	movs	r0, #25
 800aadc:	e7fc      	b.n	800aad8 <_ZN14GameScreenView15calculateDamageEibbb.part.0+0x2c>
 800aade:	bf00      	nop
 800aae0:	40040000 	.word	0x40040000

0800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>:
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800aae4:	4802      	ldr	r0, [pc, #8]	@ (800aaf0 <_ZN14GameScreenView9toggleLEDEv.constprop.0+0xc>)
 800aae6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800aaea:	f006 b83c 	b.w	8010b66 <HAL_GPIO_TogglePin>
 800aaee:	bf00      	nop
 800aaf0:	40021800 	.word	0x40021800

0800aaf4 <_ZNK8touchgfx4Rect9intersectEss>:
     *
     * @return true if point lies inside rectangle.
     */
    bool intersect(int16_t otherX, int16_t otherY) const
    {
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800aaf4:	f9b0 3000 	ldrsh.w	r3, [r0]
 800aaf8:	428b      	cmp	r3, r1
    bool intersect(int16_t otherX, int16_t otherY) const
 800aafa:	b510      	push	{r4, lr}
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800aafc:	dc10      	bgt.n	800ab20 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
        return x + width;
 800aafe:	8884      	ldrh	r4, [r0, #4]
 800ab00:	4423      	add	r3, r4
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800ab02:	b21b      	sxth	r3, r3
 800ab04:	4299      	cmp	r1, r3
 800ab06:	da0b      	bge.n	800ab20 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800ab08:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ab0c:	4293      	cmp	r3, r2
 800ab0e:	dc07      	bgt.n	800ab20 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
        return y + height;
 800ab10:	88c1      	ldrh	r1, [r0, #6]
 800ab12:	440b      	add	r3, r1
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800ab14:	b21b      	sxth	r3, r3
 800ab16:	429a      	cmp	r2, r3
 800ab18:	bfac      	ite	ge
 800ab1a:	2000      	movge	r0, #0
 800ab1c:	2001      	movlt	r0, #1
    }
 800ab1e:	bd10      	pop	{r4, pc}
        return otherX >= x && otherX < right() && otherY >= y && otherY < bottom();
 800ab20:	2000      	movs	r0, #0
 800ab22:	e7fc      	b.n	800ab1e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800ab24 <_ZN14GameScreenViewC1Ev>:
GameScreenView::GameScreenView()
 800ab24:	b510      	push	{r4, lr}
 800ab26:	4604      	mov	r4, r0
 800ab28:	f7fa fc0a 	bl	8005340 <_ZN18GameScreenViewBaseC1Ev>
 800ab2c:	4b0d      	ldr	r3, [pc, #52]	@ (800ab64 <_ZN14GameScreenViewC1Ev+0x40>)
 800ab2e:	6023      	str	r3, [r4, #0]
    resetTimer = 0;
 800ab30:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800ab34:	2200      	movs	r2, #0
    randomSeed = 12345; // Khởi tạo seed cho random
 800ab36:	f243 0139 	movw	r1, #12345	@ 0x3039
    resetTimer = 0;
 800ab3a:	f8c3 2278 	str.w	r2, [r3, #632]	@ 0x278
    resetTimerActive = false;
 800ab3e:	f883 227c 	strb.w	r2, [r3, #636]	@ 0x27c
    randomSeed = 12345; // Khởi tạo seed cho random
 800ab42:	f8c3 12bc 	str.w	r1, [r3, #700]	@ 0x2bc
    damageDisplayTimer = 0;
 800ab46:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
    damageDisplayActive = false;
 800ab4a:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    currentDamageAmount = 0;
 800ab4e:	f8c3 22a0 	str.w	r2, [r3, #672]	@ 0x2a0
    isPlayerDamage = false;
 800ab52:	f883 22a4 	strb.w	r2, [r3, #676]	@ 0x2a4
    damageTextAIStartY = 141;    // Default Y position for AI damage
 800ab56:	2163      	movs	r1, #99	@ 0x63
 800ab58:	228d      	movs	r2, #141	@ 0x8d
 800ab5a:	e9c3 12ad 	strd	r1, r2, [r3, #692]	@ 0x2b4
}
 800ab5e:	4620      	mov	r0, r4
 800ab60:	bd10      	pop	{r4, pc}
 800ab62:	bf00      	nop
 800ab64:	08032d98 	.word	0x08032d98

0800ab68 <_ZN14GameScreenView8initGPIOEv>:
{
 800ab68:	b570      	push	{r4, r5, r6, lr}
 800ab6a:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800ab6c:	2400      	movs	r4, #0
 800ab6e:	4b0f      	ldr	r3, [pc, #60]	@ (800abac <_ZN14GameScreenView8initGPIOEv+0x44>)
 800ab70:	9400      	str	r4, [sp, #0]
 800ab72:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800ab74:	4d0e      	ldr	r5, [pc, #56]	@ (800abb0 <_ZN14GameScreenView8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800ab76:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800ab7a:	631a      	str	r2, [r3, #48]	@ 0x30
 800ab7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800ab7e:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800ab80:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800ab84:	9300      	str	r3, [sp, #0]
 800ab86:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800ab88:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800ab8c:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800ab8e:	a901      	add	r1, sp, #4
 800ab90:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800ab92:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800ab96:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800ab9a:	f005 fef5 	bl	8010988 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800ab9e:	4622      	mov	r2, r4
 800aba0:	4631      	mov	r1, r6
 800aba2:	4628      	mov	r0, r5
 800aba4:	f005 ffda 	bl	8010b5c <HAL_GPIO_WritePin>
}
 800aba8:	b006      	add	sp, #24
 800abaa:	bd70      	pop	{r4, r5, r6, pc}
 800abac:	40023800 	.word	0x40023800
 800abb0:	40021800 	.word	0x40021800

0800abb4 <_ZN14GameScreenView14debugGameStateEv>:
    if (gameEnded) {
 800abb4:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
{
 800abb8:	b538      	push	{r3, r4, r5, lr}
    if (gameEnded) {
 800abba:	f890 3265 	ldrb.w	r3, [r0, #613]	@ 0x265
 800abbe:	b12b      	cbz	r3, 800abcc <_ZN14GameScreenView14debugGameStateEv+0x18>
 800abc0:	240a      	movs	r4, #10
            toggleLED();
 800abc2:	f7ff ff8f 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800abc6:	3c01      	subs	r4, #1
 800abc8:	d1fb      	bne.n	800abc2 <_ZN14GameScreenView14debugGameStateEv+0xe>
}
 800abca:	bd38      	pop	{r3, r4, r5, pc}
        if (playerPowerUpActive && aiPowerUpActive) {
 800abcc:	f890 2294 	ldrb.w	r2, [r0, #660]	@ 0x294
 800abd0:	f890 3295 	ldrb.w	r3, [r0, #661]	@ 0x295
 800abd4:	b152      	cbz	r2, 800abec <_ZN14GameScreenView14debugGameStateEv+0x38>
            blinkCount = 2; // Chỉ player có
 800abd6:	2b00      	cmp	r3, #0
 800abd8:	bf14      	ite	ne
 800abda:	2504      	movne	r5, #4
 800abdc:	2502      	moveq	r5, #2
        for (int i = 0; i < blinkCount; i++) {
 800abde:	2400      	movs	r4, #0
 800abe0:	3401      	adds	r4, #1
            toggleLED();
 800abe2:	f7ff ff7f 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < blinkCount; i++) {
 800abe6:	42a5      	cmp	r5, r4
 800abe8:	d1fa      	bne.n	800abe0 <_ZN14GameScreenView14debugGameStateEv+0x2c>
 800abea:	e7ee      	b.n	800abca <_ZN14GameScreenView14debugGameStateEv+0x16>
        int blinkCount = 1; // Default: no power-ups
 800abec:	2b00      	cmp	r3, #0
 800abee:	bf14      	ite	ne
 800abf0:	2503      	movne	r5, #3
 800abf2:	2501      	moveq	r5, #1
 800abf4:	e7f3      	b.n	800abde <_ZN14GameScreenView14debugGameStateEv+0x2a>
	...

0800abf8 <_ZN14GameScreenView20generateRandomNumberEii>:
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800abf8:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
{
 800abfc:	b530      	push	{r4, r5, lr}
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800abfe:	4b0e      	ldr	r3, [pc, #56]	@ (800ac38 <_ZN14GameScreenView20generateRandomNumberEii+0x40>)
 800ac00:	f8d0 42bc 	ldr.w	r4, [r0, #700]	@ 0x2bc
 800ac04:	4d0d      	ldr	r5, [pc, #52]	@ (800ac3c <_ZN14GameScreenView20generateRandomNumberEii+0x44>)
 800ac06:	fb05 3304 	mla	r3, r5, r4, r3
 800ac0a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800ac0e:	f8c0 32bc 	str.w	r3, [r0, #700]	@ 0x2bc
    mixed *= 0x85ebca6b;
 800ac12:	480b      	ldr	r0, [pc, #44]	@ (800ac40 <_ZN14GameScreenView20generateRandomNumberEii+0x48>)
    mixed ^= mixed >> 16;
 800ac14:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    mixed *= 0x85ebca6b;
 800ac18:	4343      	muls	r3, r0
    mixed *= 0xc2b2ae35;
 800ac1a:	480a      	ldr	r0, [pc, #40]	@ (800ac44 <_ZN14GameScreenView20generateRandomNumberEii+0x4c>)
    mixed ^= mixed >> 13;
 800ac1c:	ea83 3353 	eor.w	r3, r3, r3, lsr #13
    mixed *= 0xc2b2ae35;
 800ac20:	4343      	muls	r3, r0
    return min + (mixed % (max - min + 1));
 800ac22:	1a52      	subs	r2, r2, r1
    mixed ^= mixed >> 16;
 800ac24:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    return min + (mixed % (max - min + 1));
 800ac28:	3201      	adds	r2, #1
 800ac2a:	fbb3 f0f2 	udiv	r0, r3, r2
 800ac2e:	fb02 3010 	mls	r0, r2, r0, r3
}
 800ac32:	4408      	add	r0, r1
 800ac34:	bd30      	pop	{r4, r5, pc}
 800ac36:	bf00      	nop
 800ac38:	3c6ef35f 	.word	0x3c6ef35f
 800ac3c:	0019660d 	.word	0x0019660d
 800ac40:	85ebca6b 	.word	0x85ebca6b
 800ac44:	c2b2ae35 	.word	0xc2b2ae35

0800ac48 <_ZN14GameScreenView14hideDamageTextEv>:
{
 800ac48:	b570      	push	{r4, r5, r6, lr}
        visible = vis;
 800ac4a:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
 800ac4e:	2500      	movs	r5, #0
 800ac50:	4604      	mov	r4, r0
 800ac52:	f880 5981 	strb.w	r5, [r0, #2433]	@ 0x981
 800ac56:	f880 5a11 	strb.w	r5, [r0, #2577]	@ 0xa11
 800ac5a:	f880 5aa1 	strb.w	r5, [r0, #2721]	@ 0xaa1
 800ac5e:	f880 5b31 	strb.w	r5, [r0, #2865]	@ 0xb31
 800ac62:	f880 5bc1 	strb.w	r5, [r0, #3009]	@ 0xbc1
 800ac66:	f880 5c51 	strb.w	r5, [r0, #3153]	@ 0xc51
 800ac6a:	f880 5ce1 	strb.w	r5, [r0, #3297]	@ 0xce1
 800ac6e:	f880 5d71 	strb.w	r5, [r0, #3441]	@ 0xd71
 800ac72:	f880 5e01 	strb.w	r5, [r0, #3585]	@ 0xe01
 800ac76:	f880 5e91 	strb.w	r5, [r0, #3729]	@ 0xe91
 800ac7a:	f880 5f21 	strb.w	r5, [r0, #3873]	@ 0xf21
 800ac7e:	f880 5fb1 	strb.w	r5, [r0, #4017]	@ 0xfb1
 800ac82:	f886 5041 	strb.w	r5, [r6, #65]	@ 0x41
 800ac86:	f886 50d1 	strb.w	r5, [r6, #209]	@ 0xd1
 800ac8a:	f886 5161 	strb.w	r5, [r6, #353]	@ 0x161
 800ac8e:	f886 51f1 	strb.w	r5, [r6, #497]	@ 0x1f1
    minus_0.invalidate(); minus_1.invalidate(); minus_3.invalidate();
 800ac92:	f600 105c 	addw	r0, r0, #2396	@ 0x95c
 800ac96:	f880 506d 	strb.w	r5, [r0, #109]	@ 0x6d
 800ac9a:	f880 50fd 	strb.w	r5, [r0, #253]	@ 0xfd
 800ac9e:	f880 518d 	strb.w	r5, [r0, #397]	@ 0x18d
 800aca2:	f880 521d 	strb.w	r5, [r0, #541]	@ 0x21d
 800aca6:	f880 52ad 	strb.w	r5, [r0, #685]	@ 0x2ad
 800acaa:	f880 533d 	strb.w	r5, [r0, #829]	@ 0x33d
 800acae:	f880 53cd 	strb.w	r5, [r0, #973]	@ 0x3cd
 800acb2:	f880 545d 	strb.w	r5, [r0, #1117]	@ 0x45d
 800acb6:	f880 54ed 	strb.w	r5, [r0, #1261]	@ 0x4ed
 800acba:	f880 557d 	strb.w	r5, [r0, #1405]	@ 0x57d
 800acbe:	f880 560d 	strb.w	r5, [r0, #1549]	@ 0x60d
 800acc2:	f880 569d 	strb.w	r5, [r0, #1693]	@ 0x69d
 800acc6:	f886 5089 	strb.w	r5, [r6, #137]	@ 0x89
 800acca:	f886 5119 	strb.w	r5, [r6, #281]	@ 0x119
 800acce:	f886 51a9 	strb.w	r5, [r6, #425]	@ 0x1a9
 800acd2:	f886 5239 	strb.w	r5, [r6, #569]	@ 0x239
 800acd6:	f011 fd47 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800acda:	f604 10ec 	addw	r0, r4, #2540	@ 0x9ec
 800acde:	f011 fd43 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ace2:	f604 207c 	addw	r0, r4, #2684	@ 0xa7c
 800ace6:	f011 fd3f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_4.invalidate(); minus_5.invalidate(); minus_6.invalidate();
 800acea:	f604 300c 	addw	r0, r4, #2828	@ 0xb0c
 800acee:	f011 fd3b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800acf2:	f604 309c 	addw	r0, r4, #2972	@ 0xb9c
 800acf6:	f011 fd37 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800acfa:	f604 402c 	addw	r0, r4, #3116	@ 0xc2c
 800acfe:	f011 fd33 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_7.invalidate(); minus_8.invalidate(); minus_10.invalidate();
 800ad02:	f604 40bc 	addw	r0, r4, #3260	@ 0xcbc
 800ad06:	f011 fd2f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad0a:	f604 504c 	addw	r0, r4, #3404	@ 0xd4c
 800ad0e:	f011 fd2b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad12:	f604 50dc 	addw	r0, r4, #3548	@ 0xddc
 800ad16:	f011 fd27 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_12.invalidate(); minus_15.invalidate(); minus_17.invalidate();
 800ad1a:	f604 606c 	addw	r0, r4, #3692	@ 0xe6c
 800ad1e:	f011 fd23 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad22:	f604 60fc 	addw	r0, r4, #3836	@ 0xefc
 800ad26:	f011 fd1f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad2a:	f604 708c 	addw	r0, r4, #3980	@ 0xf8c
 800ad2e:	f011 fd1b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_20.invalidate(); minus_25.invalidate(); minus_40.invalidate();
 800ad32:	4630      	mov	r0, r6
 800ad34:	301c      	adds	r0, #28
 800ad36:	f011 fd17 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad3a:	f504 5085 	add.w	r0, r4, #4256	@ 0x10a0
 800ad3e:	300c      	adds	r0, #12
 800ad40:	f011 fd12 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad44:	f504 5089 	add.w	r0, r4, #4384	@ 0x1120
 800ad48:	301c      	adds	r0, #28
 800ad4a:	f011 fd0d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_100.invalidate();
 800ad4e:	f504 508e 	add.w	r0, r4, #4544	@ 0x11c0
 800ad52:	300c      	adds	r0, #12
 800ad54:	f011 fd08 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_0_1.invalidate(); minus_1_1.invalidate(); minus_3_1.invalidate();
 800ad58:	f604 10a4 	addw	r0, r4, #2468	@ 0x9a4
 800ad5c:	f011 fd04 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad60:	f604 2034 	addw	r0, r4, #2612	@ 0xa34
 800ad64:	f011 fd00 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad68:	f604 20c4 	addw	r0, r4, #2756	@ 0xac4
 800ad6c:	f011 fcfc 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_4_1.invalidate(); minus_5_1.invalidate(); minus_6_1.invalidate();
 800ad70:	f604 3054 	addw	r0, r4, #2900	@ 0xb54
 800ad74:	f011 fcf8 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad78:	f604 30e4 	addw	r0, r4, #3044	@ 0xbe4
 800ad7c:	f011 fcf4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad80:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 800ad84:	f011 fcf0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_7_1.invalidate(); minus_8_1.invalidate(); minus_10_1.invalidate();
 800ad88:	f604 5004 	addw	r0, r4, #3332	@ 0xd04
 800ad8c:	f011 fcec 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad90:	f604 5094 	addw	r0, r4, #3476	@ 0xd94
 800ad94:	f011 fce8 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ad98:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800ad9c:	f011 fce4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_12_1.invalidate(); minus_15_1.invalidate(); minus_17_1.invalidate();
 800ada0:	f604 60b4 	addw	r0, r4, #3764	@ 0xeb4
 800ada4:	f011 fce0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ada8:	f604 7044 	addw	r0, r4, #3908	@ 0xf44
 800adac:	f011 fcdc 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800adb0:	f604 70d4 	addw	r0, r4, #4052	@ 0xfd4
 800adb4:	f011 fcd8 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_20_1.invalidate(); minus_25_1.invalidate(); minus_40_1.invalidate();
 800adb8:	f504 5083 	add.w	r0, r4, #4192	@ 0x1060
 800adbc:	3004      	adds	r0, #4
 800adbe:	f011 fcd3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800adc2:	f504 5087 	add.w	r0, r4, #4320	@ 0x10e0
 800adc6:	3014      	adds	r0, #20
 800adc8:	f011 fcce 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800adcc:	f504 508c 	add.w	r0, r4, #4480	@ 0x1180
 800add0:	3004      	adds	r0, #4
 800add2:	f011 fcc9 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    minus_100_1.invalidate();
 800add6:	f504 5090 	add.w	r0, r4, #4608	@ 0x1200
 800adda:	3014      	adds	r0, #20
 800addc:	f011 fcc4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    currentAIDamage = 0;
 800ade0:	e9c6 55aa 	strd	r5, r5, [r6, #680]	@ 0x2a8
    damageDisplayActive = false;
 800ade4:	f886 529c 	strb.w	r5, [r6, #668]	@ 0x29c
    damageDisplayTimer = 0;
 800ade8:	f8c6 5298 	str.w	r5, [r6, #664]	@ 0x298
    playerDamageActive = false;
 800adec:	f8a6 52b0 	strh.w	r5, [r6, #688]	@ 0x2b0
}
 800adf0:	bd70      	pop	{r4, r5, r6, pc}

0800adf2 <_ZN14GameScreenView14showDamageTextEii>:
{
 800adf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800adf4:	460e      	mov	r6, r1
 800adf6:	4617      	mov	r7, r2
 800adf8:	4604      	mov	r4, r0
    hideDamageText();
 800adfa:	f7ff ff25 	bl	800ac48 <_ZN14GameScreenView14hideDamageTextEv>
    currentPlayerDamage = playerDamage;
 800adfe:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
    playerDamageActive = (playerDamage > 0);
 800ae02:	2e00      	cmp	r6, #0
 800ae04:	bfd4      	ite	le
 800ae06:	2300      	movle	r3, #0
 800ae08:	2301      	movgt	r3, #1
    aiDamageActive = (aiDamage > 0);
 800ae0a:	2f00      	cmp	r7, #0
    playerDamageActive = (playerDamage > 0);
 800ae0c:	f885 32b0 	strb.w	r3, [r5, #688]	@ 0x2b0
    aiDamageActive = (aiDamage > 0);
 800ae10:	bfd4      	ite	le
 800ae12:	2300      	movle	r3, #0
 800ae14:	2301      	movgt	r3, #1
    if (playerDamage > 0) {
 800ae16:	2e00      	cmp	r6, #0
    currentAIDamage = aiDamage;
 800ae18:	e9c5 67aa 	strd	r6, r7, [r5, #680]	@ 0x2a8
    aiDamageActive = (aiDamage > 0);
 800ae1c:	f885 32b1 	strb.w	r3, [r5, #689]	@ 0x2b1
    if (playerDamage > 0) {
 800ae20:	dd36      	ble.n	800ae90 <_ZN14GameScreenView14showDamageTextEii+0x9e>
        switch(playerDamage) {
 800ae22:	2e28      	cmp	r6, #40	@ 0x28
 800ae24:	f04f 0301 	mov.w	r3, #1
 800ae28:	dc1a      	bgt.n	800ae60 <_ZN14GameScreenView14showDamageTextEii+0x6e>
 800ae2a:	1e71      	subs	r1, r6, #1
 800ae2c:	22ff      	movs	r2, #255	@ 0xff
 800ae2e:	2927      	cmp	r1, #39	@ 0x27
 800ae30:	f200 80b3 	bhi.w	800af9a <_ZN14GameScreenView14showDamageTextEii+0x1a8>
 800ae34:	e8df f001 	tbb	[pc, r1]
 800ae38:	6a632222 	.word	0x6a632222
 800ae3c:	867f7871 	.word	0x867f7871
 800ae40:	8db1cfb1 	.word	0x8db1cfb1
 800ae44:	b194b1b1 	.word	0xb194b1b1
 800ae48:	c8b1b19b 	.word	0xc8b1b19b
 800ae4c:	b1b1b1b1 	.word	0xb1b1b1b1
 800ae50:	b1b1b1a2 	.word	0xb1b1b1a2
 800ae54:	b1b1b1b1 	.word	0xb1b1b1b1
 800ae58:	b1b1b1b1 	.word	0xb1b1b1b1
 800ae5c:	a9b1b1b1 	.word	0xa9b1b1b1
 800ae60:	2e64      	cmp	r6, #100	@ 0x64
 800ae62:	d002      	beq.n	800ae6a <_ZN14GameScreenView14showDamageTextEii+0x78>
                if (playerDamage >= 90) {
 800ae64:	2e59      	cmp	r6, #89	@ 0x59
 800ae66:	f340 809a 	ble.w	800af9e <_ZN14GameScreenView14showDamageTextEii+0x1ac>
 800ae6a:	f885 31f1 	strb.w	r3, [r5, #497]	@ 0x1f1
        alpha = newAlpha;
 800ae6e:	23ff      	movs	r3, #255	@ 0xff
 800ae70:	f885 3202 	strb.w	r3, [r5, #514]	@ 0x202
                    minus_100.invalidate();
 800ae74:	f504 508e 	add.w	r0, r4, #4544	@ 0x11c0
                    minus_25.invalidate();
 800ae78:	300c      	adds	r0, #12
 800ae7a:	e005      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800ae7c:	f884 3a11 	strb.w	r3, [r4, #2577]	@ 0xa11
 800ae80:	f884 2a22 	strb.w	r2, [r4, #2594]	@ 0xa22
                minus_1.invalidate();
 800ae84:	f604 10ec 	addw	r0, r4, #2540	@ 0x9ec
                    minus_10.invalidate();
 800ae88:	f011 fc6e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800ae8c:	f7ff fe2a 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    if (aiDamage > 0) {
 800ae90:	2f00      	cmp	r7, #0
 800ae92:	f340 80c0 	ble.w	800b016 <_ZN14GameScreenView14showDamageTextEii+0x224>
        switch(aiDamage) {
 800ae96:	2f28      	cmp	r7, #40	@ 0x28
 800ae98:	f04f 0301 	mov.w	r3, #1
 800ae9c:	f300 80a2 	bgt.w	800afe4 <_ZN14GameScreenView14showDamageTextEii+0x1f2>
 800aea0:	1e79      	subs	r1, r7, #1
 800aea2:	22ff      	movs	r2, #255	@ 0xff
 800aea4:	2927      	cmp	r1, #39	@ 0x27
 800aea6:	f200 811b 	bhi.w	800b0e0 <_ZN14GameScreenView14showDamageTextEii+0x2ee>
 800aeaa:	e8df f011 	tbh	[pc, r1, lsl #1]
 800aeae:	00a8      	.short	0x00a8
 800aeb0:	00cc00a8 	.word	0x00cc00a8
 800aeb4:	00da00d3 	.word	0x00da00d3
 800aeb8:	00e800e1 	.word	0x00e800e1
 800aebc:	011900ef 	.word	0x011900ef
 800aec0:	01190137 	.word	0x01190137
 800aec4:	011900f6 	.word	0x011900f6
 800aec8:	00fd0119 	.word	0x00fd0119
 800aecc:	01040119 	.word	0x01040119
 800aed0:	01190119 	.word	0x01190119
 800aed4:	01190130 	.word	0x01190130
 800aed8:	01190119 	.word	0x01190119
 800aedc:	010a0119 	.word	0x010a0119
 800aee0:	01190119 	.word	0x01190119
 800aee4:	01190119 	.word	0x01190119
 800aee8:	01190119 	.word	0x01190119
 800aeec:	01190119 	.word	0x01190119
 800aef0:	01190119 	.word	0x01190119
 800aef4:	01190119 	.word	0x01190119
 800aef8:	01190119 	.word	0x01190119
 800aefc:	0111      	.short	0x0111
 800aefe:	f884 3aa1 	strb.w	r3, [r4, #2721]	@ 0xaa1
 800af02:	f884 2ab2 	strb.w	r2, [r4, #2738]	@ 0xab2
                minus_3.invalidate();
 800af06:	f604 207c 	addw	r0, r4, #2684	@ 0xa7c
 800af0a:	e7bd      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af0c:	f884 3b31 	strb.w	r3, [r4, #2865]	@ 0xb31
 800af10:	f884 2b42 	strb.w	r2, [r4, #2882]	@ 0xb42
                minus_4.invalidate();
 800af14:	f604 300c 	addw	r0, r4, #2828	@ 0xb0c
 800af18:	e7b6      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af1a:	f884 3bc1 	strb.w	r3, [r4, #3009]	@ 0xbc1
 800af1e:	f884 2bd2 	strb.w	r2, [r4, #3026]	@ 0xbd2
                minus_5.invalidate();
 800af22:	f604 309c 	addw	r0, r4, #2972	@ 0xb9c
 800af26:	e7af      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af28:	f884 3c51 	strb.w	r3, [r4, #3153]	@ 0xc51
 800af2c:	f884 2c62 	strb.w	r2, [r4, #3170]	@ 0xc62
                minus_6.invalidate();
 800af30:	f604 402c 	addw	r0, r4, #3116	@ 0xc2c
 800af34:	e7a8      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af36:	f884 3ce1 	strb.w	r3, [r4, #3297]	@ 0xce1
 800af3a:	f884 2cf2 	strb.w	r2, [r4, #3314]	@ 0xcf2
                minus_7.invalidate();
 800af3e:	f604 40bc 	addw	r0, r4, #3260	@ 0xcbc
 800af42:	e7a1      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af44:	f884 3d71 	strb.w	r3, [r4, #3441]	@ 0xd71
 800af48:	f884 2d82 	strb.w	r2, [r4, #3458]	@ 0xd82
                minus_8.invalidate();
 800af4c:	f604 504c 	addw	r0, r4, #3404	@ 0xd4c
 800af50:	e79a      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af52:	f884 3e91 	strb.w	r3, [r4, #3729]	@ 0xe91
 800af56:	f884 2ea2 	strb.w	r2, [r4, #3746]	@ 0xea2
                minus_12.invalidate();
 800af5a:	f604 606c 	addw	r0, r4, #3692	@ 0xe6c
 800af5e:	e793      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af60:	f884 3f21 	strb.w	r3, [r4, #3873]	@ 0xf21
 800af64:	f884 2f32 	strb.w	r2, [r4, #3890]	@ 0xf32
                minus_15.invalidate();
 800af68:	f604 60fc 	addw	r0, r4, #3836	@ 0xefc
 800af6c:	e78c      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af6e:	f884 3fb1 	strb.w	r3, [r4, #4017]	@ 0xfb1
 800af72:	f884 2fc2 	strb.w	r2, [r4, #4034]	@ 0xfc2
                minus_17.invalidate();
 800af76:	f604 708c 	addw	r0, r4, #3980	@ 0xf8c
 800af7a:	e785      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
 800af7c:	f885 30d1 	strb.w	r3, [r5, #209]	@ 0xd1
 800af80:	f885 20e2 	strb.w	r2, [r5, #226]	@ 0xe2
                    minus_25.invalidate();
 800af84:	f504 5085 	add.w	r0, r4, #4256	@ 0x10a0
 800af88:	e776      	b.n	800ae78 <_ZN14GameScreenView14showDamageTextEii+0x86>
 800af8a:	f885 3161 	strb.w	r3, [r5, #353]	@ 0x161
 800af8e:	f885 2172 	strb.w	r2, [r5, #370]	@ 0x172
                    minus_40.invalidate();
 800af92:	f504 5089 	add.w	r0, r4, #4384	@ 0x1120
                    minus_20.invalidate();
 800af96:	301c      	adds	r0, #28
 800af98:	e776      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
                } else if (playerDamage >= 35) {
 800af9a:	2e22      	cmp	r6, #34	@ 0x22
 800af9c:	dd06      	ble.n	800afac <_ZN14GameScreenView14showDamageTextEii+0x1ba>
 800af9e:	2301      	movs	r3, #1
 800afa0:	f885 3161 	strb.w	r3, [r5, #353]	@ 0x161
 800afa4:	23ff      	movs	r3, #255	@ 0xff
 800afa6:	f885 3172 	strb.w	r3, [r5, #370]	@ 0x172
 800afaa:	e7f2      	b.n	800af92 <_ZN14GameScreenView14showDamageTextEii+0x1a0>
                } else if (playerDamage >= 22) {
 800afac:	2e15      	cmp	r6, #21
 800afae:	f04f 0301 	mov.w	r3, #1
 800afb2:	dd05      	ble.n	800afc0 <_ZN14GameScreenView14showDamageTextEii+0x1ce>
 800afb4:	f885 30d1 	strb.w	r3, [r5, #209]	@ 0xd1
 800afb8:	23ff      	movs	r3, #255	@ 0xff
 800afba:	f885 30e2 	strb.w	r3, [r5, #226]	@ 0xe2
 800afbe:	e7e1      	b.n	800af84 <_ZN14GameScreenView14showDamageTextEii+0x192>
                } else if (playerDamage >= 18) {
 800afc0:	2e11      	cmp	r6, #17
 800afc2:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 800afc6:	dd06      	ble.n	800afd6 <_ZN14GameScreenView14showDamageTextEii+0x1e4>
 800afc8:	f885 3041 	strb.w	r3, [r5, #65]	@ 0x41
 800afcc:	f885 2052 	strb.w	r2, [r5, #82]	@ 0x52
                    minus_20.invalidate();
 800afd0:	f504 5080 	add.w	r0, r4, #4096	@ 0x1000
 800afd4:	e7df      	b.n	800af96 <_ZN14GameScreenView14showDamageTextEii+0x1a4>
 800afd6:	f884 3e01 	strb.w	r3, [r4, #3585]	@ 0xe01
 800afda:	f884 2e12 	strb.w	r2, [r4, #3602]	@ 0xe12
                    minus_10.invalidate();
 800afde:	f604 50dc 	addw	r0, r4, #3548	@ 0xddc
 800afe2:	e751      	b.n	800ae88 <_ZN14GameScreenView14showDamageTextEii+0x96>
        switch(aiDamage) {
 800afe4:	2f64      	cmp	r7, #100	@ 0x64
 800afe6:	d001      	beq.n	800afec <_ZN14GameScreenView14showDamageTextEii+0x1fa>
                if (aiDamage >= 90) {
 800afe8:	2f59      	cmp	r7, #89	@ 0x59
 800afea:	dd7b      	ble.n	800b0e4 <_ZN14GameScreenView14showDamageTextEii+0x2f2>
 800afec:	f885 3239 	strb.w	r3, [r5, #569]	@ 0x239
 800aff0:	23ff      	movs	r3, #255	@ 0xff
 800aff2:	f885 324a 	strb.w	r3, [r5, #586]	@ 0x24a
                    minus_100_1.invalidate();
 800aff6:	f504 5090 	add.w	r0, r4, #4608	@ 0x1200
                    minus_25_1.invalidate();
 800affa:	3014      	adds	r0, #20
 800affc:	e005      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800affe:	f884 3a59 	strb.w	r3, [r4, #2649]	@ 0xa59
 800b002:	f884 2a6a 	strb.w	r2, [r4, #2666]	@ 0xa6a
                minus_1_1.invalidate();
 800b006:	f604 2034 	addw	r0, r4, #2612	@ 0xa34
                    minus_10_1.invalidate();
 800b00a:	f011 fbad 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800b00e:	f7ff fd69 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800b012:	f7ff fd67 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    if (playerDamage > 0 || aiDamage > 0) {
 800b016:	2e00      	cmp	r6, #0
 800b018:	dc02      	bgt.n	800b020 <_ZN14GameScreenView14showDamageTextEii+0x22e>
 800b01a:	2f00      	cmp	r7, #0
 800b01c:	f340 8085 	ble.w	800b12a <_ZN14GameScreenView14showDamageTextEii+0x338>
        damageDisplayTimer = 0;
 800b020:	2300      	movs	r3, #0
 800b022:	f8c5 3298 	str.w	r3, [r5, #664]	@ 0x298
        if (playerDamage > 0 && aiDamage > 0) {
 800b026:	2e00      	cmp	r6, #0
        damageDisplayActive = true;
 800b028:	f04f 0301 	mov.w	r3, #1
 800b02c:	f885 329c 	strb.w	r3, [r5, #668]	@ 0x29c
        if (playerDamage > 0 && aiDamage > 0) {
 800b030:	dd7b      	ble.n	800b12a <_ZN14GameScreenView14showDamageTextEii+0x338>
 800b032:	2f00      	cmp	r7, #0
 800b034:	dd79      	ble.n	800b12a <_ZN14GameScreenView14showDamageTextEii+0x338>
            toggleLED();
 800b036:	f7ff fd55 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
            toggleLED();
 800b03a:	f7ff fd53 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
}
 800b03e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            toggleLED();
 800b042:	f7ff bd4f 	b.w	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b046:	f884 3ae9 	strb.w	r3, [r4, #2793]	@ 0xae9
 800b04a:	f884 2afa 	strb.w	r2, [r4, #2810]	@ 0xafa
                minus_3_1.invalidate();
 800b04e:	f604 20c4 	addw	r0, r4, #2756	@ 0xac4
 800b052:	e7da      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b054:	f884 3b79 	strb.w	r3, [r4, #2937]	@ 0xb79
 800b058:	f884 2b8a 	strb.w	r2, [r4, #2954]	@ 0xb8a
                minus_4_1.invalidate();
 800b05c:	f604 3054 	addw	r0, r4, #2900	@ 0xb54
 800b060:	e7d3      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b062:	f884 3c09 	strb.w	r3, [r4, #3081]	@ 0xc09
 800b066:	f884 2c1a 	strb.w	r2, [r4, #3098]	@ 0xc1a
                minus_5_1.invalidate();
 800b06a:	f604 30e4 	addw	r0, r4, #3044	@ 0xbe4
 800b06e:	e7cc      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b070:	f884 3c99 	strb.w	r3, [r4, #3225]	@ 0xc99
 800b074:	f884 2caa 	strb.w	r2, [r4, #3242]	@ 0xcaa
                minus_6_1.invalidate();
 800b078:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 800b07c:	e7c5      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b07e:	f884 3d29 	strb.w	r3, [r4, #3369]	@ 0xd29
 800b082:	f884 2d3a 	strb.w	r2, [r4, #3386]	@ 0xd3a
                minus_7_1.invalidate();
 800b086:	f604 5004 	addw	r0, r4, #3332	@ 0xd04
 800b08a:	e7be      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b08c:	f884 3db9 	strb.w	r3, [r4, #3513]	@ 0xdb9
 800b090:	f884 2dca 	strb.w	r2, [r4, #3530]	@ 0xdca
                minus_8_1.invalidate();
 800b094:	f604 5094 	addw	r0, r4, #3476	@ 0xd94
 800b098:	e7b7      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b09a:	f884 3ed9 	strb.w	r3, [r4, #3801]	@ 0xed9
 800b09e:	f884 2eea 	strb.w	r2, [r4, #3818]	@ 0xeea
                minus_12_1.invalidate();
 800b0a2:	f604 60b4 	addw	r0, r4, #3764	@ 0xeb4
 800b0a6:	e7b0      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b0a8:	f884 3f69 	strb.w	r3, [r4, #3945]	@ 0xf69
 800b0ac:	f884 2f7a 	strb.w	r2, [r4, #3962]	@ 0xf7a
                minus_15_1.invalidate();
 800b0b0:	f604 7044 	addw	r0, r4, #3908	@ 0xf44
 800b0b4:	e7a9      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b0b6:	f884 3ff9 	strb.w	r3, [r4, #4089]	@ 0xff9
                minus_17_1.invalidate();
 800b0ba:	f604 70d4 	addw	r0, r4, #4052	@ 0xfd4
 800b0be:	72aa      	strb	r2, [r5, #10]
 800b0c0:	e7a3      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
 800b0c2:	f885 3119 	strb.w	r3, [r5, #281]	@ 0x119
 800b0c6:	f885 212a 	strb.w	r2, [r5, #298]	@ 0x12a
                    minus_25_1.invalidate();
 800b0ca:	f504 5087 	add.w	r0, r4, #4320	@ 0x10e0
 800b0ce:	e794      	b.n	800affa <_ZN14GameScreenView14showDamageTextEii+0x208>
 800b0d0:	f885 31a9 	strb.w	r3, [r5, #425]	@ 0x1a9
 800b0d4:	f885 21ba 	strb.w	r2, [r5, #442]	@ 0x1ba
                    minus_40_1.invalidate();
 800b0d8:	f504 508c 	add.w	r0, r4, #4480	@ 0x1180
                    minus_20_1.invalidate();
 800b0dc:	3004      	adds	r0, #4
 800b0de:	e794      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
                } else if (aiDamage >= 35) {
 800b0e0:	2f22      	cmp	r7, #34	@ 0x22
 800b0e2:	dd06      	ble.n	800b0f2 <_ZN14GameScreenView14showDamageTextEii+0x300>
 800b0e4:	2301      	movs	r3, #1
 800b0e6:	f885 31a9 	strb.w	r3, [r5, #425]	@ 0x1a9
 800b0ea:	23ff      	movs	r3, #255	@ 0xff
 800b0ec:	f885 31ba 	strb.w	r3, [r5, #442]	@ 0x1ba
 800b0f0:	e7f2      	b.n	800b0d8 <_ZN14GameScreenView14showDamageTextEii+0x2e6>
                } else if (aiDamage >= 22) {
 800b0f2:	2f15      	cmp	r7, #21
 800b0f4:	f04f 0301 	mov.w	r3, #1
 800b0f8:	dd05      	ble.n	800b106 <_ZN14GameScreenView14showDamageTextEii+0x314>
 800b0fa:	f885 3119 	strb.w	r3, [r5, #281]	@ 0x119
 800b0fe:	23ff      	movs	r3, #255	@ 0xff
 800b100:	f885 312a 	strb.w	r3, [r5, #298]	@ 0x12a
 800b104:	e7e1      	b.n	800b0ca <_ZN14GameScreenView14showDamageTextEii+0x2d8>
                } else if (aiDamage >= 18) {
 800b106:	2f11      	cmp	r7, #17
 800b108:	f04f 02ff 	mov.w	r2, #255	@ 0xff
 800b10c:	dd06      	ble.n	800b11c <_ZN14GameScreenView14showDamageTextEii+0x32a>
 800b10e:	f885 3089 	strb.w	r3, [r5, #137]	@ 0x89
 800b112:	f885 209a 	strb.w	r2, [r5, #154]	@ 0x9a
                    minus_20_1.invalidate();
 800b116:	f504 5083 	add.w	r0, r4, #4192	@ 0x1060
 800b11a:	e7df      	b.n	800b0dc <_ZN14GameScreenView14showDamageTextEii+0x2ea>
 800b11c:	f884 3e49 	strb.w	r3, [r4, #3657]	@ 0xe49
 800b120:	f884 2e5a 	strb.w	r2, [r4, #3674]	@ 0xe5a
                    minus_10_1.invalidate();
 800b124:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800b128:	e76f      	b.n	800b00a <_ZN14GameScreenView14showDamageTextEii+0x218>
}
 800b12a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b12c <_ZN14GameScreenView19updateDamageDisplayEv>:
{
 800b12c:	b570      	push	{r4, r5, r6, lr}
    if (!damageDisplayActive) return;
 800b12e:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
{
 800b132:	4604      	mov	r4, r0
    if (!damageDisplayActive) return;
 800b134:	f896 329c 	ldrb.w	r3, [r6, #668]	@ 0x29c
 800b138:	2b00      	cmp	r3, #0
 800b13a:	f000 8124 	beq.w	800b386 <_ZN14GameScreenView19updateDamageDisplayEv+0x25a>
    damageDisplayTimer += 16; // TouchGFX tick ~16ms
 800b13e:	f8d6 3298 	ldr.w	r3, [r6, #664]	@ 0x298
    float progress = (float)damageDisplayTimer / DAMAGE_DISPLAY_TIME_MS;
 800b142:	eddf 6a91 	vldr	s13, [pc, #580]	@ 800b388 <_ZN14GameScreenView19updateDamageDisplayEv+0x25c>
    damageDisplayTimer += 16; // TouchGFX tick ~16ms
 800b146:	3310      	adds	r3, #16
    float progress = (float)damageDisplayTimer / DAMAGE_DISPLAY_TIME_MS;
 800b148:	ee07 3a90 	vmov	s15, r3
 800b14c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    damageDisplayTimer += 16; // TouchGFX tick ~16ms
 800b150:	f8c6 3298 	str.w	r3, [r6, #664]	@ 0x298
    float progress = (float)damageDisplayTimer / DAMAGE_DISPLAY_TIME_MS;
 800b154:	eec7 7a26 	vdiv.f32	s15, s14, s13
    if (progress > 1.0f) progress = 1.0f;
 800b158:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b15c:	eef4 7a47 	vcmp.f32	s15, s14
 800b160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b164:	bfc8      	it	gt
 800b166:	eef0 7a47 	vmovgt.f32	s15, s14
    int alpha = 255 - (int)(progress * 255);
 800b16a:	ed9f 7a88 	vldr	s14, [pc, #544]	@ 800b38c <_ZN14GameScreenView19updateDamageDisplayEv+0x260>
 800b16e:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b172:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b176:	ee17 3a90 	vmov	r3, s15
 800b17a:	f1c3 05ff 	rsb	r5, r3, #255	@ 0xff
    if (playerDamageActive && currentPlayerDamage > 0) {
 800b17e:	f896 32b0 	ldrb.w	r3, [r6, #688]	@ 0x2b0
    if (alpha < 0) alpha = 0;
 800b182:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
    if (playerDamageActive && currentPlayerDamage > 0) {
 800b186:	b37b      	cbz	r3, 800b1e8 <_ZN14GameScreenView19updateDamageDisplayEv+0xbc>
 800b188:	f8d6 22a8 	ldr.w	r2, [r6, #680]	@ 0x2a8
 800b18c:	2a00      	cmp	r2, #0
 800b18e:	dd2b      	ble.n	800b1e8 <_ZN14GameScreenView19updateDamageDisplayEv+0xbc>
        switch(currentPlayerDamage) {
 800b190:	2a28      	cmp	r2, #40	@ 0x28
            case 2: minus_1.setAlpha(alpha); minus_1.invalidate(); break;
 800b192:	b2eb      	uxtb	r3, r5
        switch(currentPlayerDamage) {
 800b194:	dc18      	bgt.n	800b1c8 <_ZN14GameScreenView19updateDamageDisplayEv+0x9c>
 800b196:	1e51      	subs	r1, r2, #1
 800b198:	2927      	cmp	r1, #39	@ 0x27
 800b19a:	d877      	bhi.n	800b28c <_ZN14GameScreenView19updateDamageDisplayEv+0x160>
 800b19c:	e8df f001 	tbb	[pc, r1]
 800b1a0:	4e491e1e 	.word	0x4e491e1e
 800b1a4:	625d5853 	.word	0x625d5853
 800b1a8:	67768c76 	.word	0x67768c76
 800b1ac:	766c7676 	.word	0x766c7676
 800b1b0:	87767671 	.word	0x87767671
 800b1b4:	76767676 	.word	0x76767676
 800b1b8:	76767680 	.word	0x76767680
 800b1bc:	76767676 	.word	0x76767676
 800b1c0:	76767676 	.word	0x76767676
 800b1c4:	78767676 	.word	0x78767676
 800b1c8:	2a64      	cmp	r2, #100	@ 0x64
 800b1ca:	d001      	beq.n	800b1d0 <_ZN14GameScreenView19updateDamageDisplayEv+0xa4>
                if (currentPlayerDamage >= 90) {
 800b1cc:	2a59      	cmp	r2, #89	@ 0x59
 800b1ce:	dd5f      	ble.n	800b290 <_ZN14GameScreenView19updateDamageDisplayEv+0x164>
 800b1d0:	f886 3202 	strb.w	r3, [r6, #514]	@ 0x202
                    minus_100.setAlpha(alpha); minus_100.invalidate();
 800b1d4:	f504 508e 	add.w	r0, r4, #4544	@ 0x11c0
                    minus_25.setAlpha(alpha); minus_25.invalidate();
 800b1d8:	300c      	adds	r0, #12
 800b1da:	e003      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b1dc:	f884 3a22 	strb.w	r3, [r4, #2594]	@ 0xa22
            case 2: minus_1.setAlpha(alpha); minus_1.invalidate(); break;
 800b1e0:	f604 10ec 	addw	r0, r4, #2540	@ 0x9ec
                    minus_10.setAlpha(alpha); minus_10.invalidate();
 800b1e4:	f011 fac0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiDamageActive && currentAIDamage > 0) {
 800b1e8:	f896 32b1 	ldrb.w	r3, [r6, #689]	@ 0x2b1
 800b1ec:	2b00      	cmp	r3, #0
 800b1ee:	d078      	beq.n	800b2e2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b6>
 800b1f0:	f8d6 22ac 	ldr.w	r2, [r6, #684]	@ 0x2ac
 800b1f4:	2a00      	cmp	r2, #0
 800b1f6:	dd74      	ble.n	800b2e2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1b6>
        switch(currentAIDamage) {
 800b1f8:	2a28      	cmp	r2, #40	@ 0x28
            case 2: minus_1.setAlpha(alpha); minus_1.invalidate(); break;
 800b1fa:	b2eb      	uxtb	r3, r5
        switch(currentAIDamage) {
 800b1fc:	dc61      	bgt.n	800b2c2 <_ZN14GameScreenView19updateDamageDisplayEv+0x196>
 800b1fe:	1e51      	subs	r1, r2, #1
 800b200:	2927      	cmp	r1, #39	@ 0x27
 800b202:	f200 80a5 	bhi.w	800b350 <_ZN14GameScreenView19updateDamageDisplayEv+0x224>
 800b206:	e8df f001 	tbb	[pc, r1]
 800b20a:	6666      	.short	0x6666
 800b20c:	86817c77 	.word	0x86817c77
 800b210:	b9a3908b 	.word	0xb9a3908b
 800b214:	a3a395a3 	.word	0xa3a395a3
 800b218:	a39fa39a 	.word	0xa39fa39a
 800b21c:	a3a3b4a3 	.word	0xa3a3b4a3
 800b220:	a3ada3a3 	.word	0xa3ada3a3
 800b224:	a3a3a3a3 	.word	0xa3a3a3a3
 800b228:	a3a3a3a3 	.word	0xa3a3a3a3
 800b22c:	a3a3a3a3 	.word	0xa3a3a3a3
 800b230:	a5a3      	.short	0xa5a3
 800b232:	f884 3ab2 	strb.w	r3, [r4, #2738]	@ 0xab2
            case 3: minus_3.setAlpha(alpha); minus_3.invalidate(); break;
 800b236:	f604 207c 	addw	r0, r4, #2684	@ 0xa7c
 800b23a:	e7d3      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b23c:	f884 3b42 	strb.w	r3, [r4, #2882]	@ 0xb42
            case 4: minus_4.setAlpha(alpha); minus_4.invalidate(); break;
 800b240:	f604 300c 	addw	r0, r4, #2828	@ 0xb0c
 800b244:	e7ce      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b246:	f884 3bd2 	strb.w	r3, [r4, #3026]	@ 0xbd2
            case 5: minus_5.setAlpha(alpha); minus_5.invalidate(); break;
 800b24a:	f604 309c 	addw	r0, r4, #2972	@ 0xb9c
 800b24e:	e7c9      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b250:	f884 3c62 	strb.w	r3, [r4, #3170]	@ 0xc62
            case 6: minus_6.setAlpha(alpha); minus_6.invalidate(); break;
 800b254:	f604 402c 	addw	r0, r4, #3116	@ 0xc2c
 800b258:	e7c4      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b25a:	f884 3cf2 	strb.w	r3, [r4, #3314]	@ 0xcf2
            case 7: minus_7.setAlpha(alpha); minus_7.invalidate(); break;
 800b25e:	f604 40bc 	addw	r0, r4, #3260	@ 0xcbc
 800b262:	e7bf      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b264:	f884 3d82 	strb.w	r3, [r4, #3458]	@ 0xd82
            case 8: minus_8.setAlpha(alpha); minus_8.invalidate(); break;
 800b268:	f604 504c 	addw	r0, r4, #3404	@ 0xd4c
 800b26c:	e7ba      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b26e:	f884 3ea2 	strb.w	r3, [r4, #3746]	@ 0xea2
            case 12: minus_12.setAlpha(alpha); minus_12.invalidate(); break;
 800b272:	f604 606c 	addw	r0, r4, #3692	@ 0xe6c
 800b276:	e7b5      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b278:	f884 3f32 	strb.w	r3, [r4, #3890]	@ 0xf32
            case 15: minus_15.setAlpha(alpha); minus_15.invalidate(); break;
 800b27c:	f604 60fc 	addw	r0, r4, #3836	@ 0xefc
 800b280:	e7b0      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
 800b282:	f884 3fc2 	strb.w	r3, [r4, #4034]	@ 0xfc2
            case 17: minus_17.setAlpha(alpha); minus_17.invalidate(); break;
 800b286:	f604 708c 	addw	r0, r4, #3980	@ 0xf8c
 800b28a:	e7ab      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
                } else if (currentPlayerDamage >= 35) {
 800b28c:	2a22      	cmp	r2, #34	@ 0x22
 800b28e:	dd05      	ble.n	800b29c <_ZN14GameScreenView19updateDamageDisplayEv+0x170>
 800b290:	f886 3172 	strb.w	r3, [r6, #370]	@ 0x172
                    minus_40.setAlpha(alpha); minus_40.invalidate();
 800b294:	f504 5089 	add.w	r0, r4, #4384	@ 0x1120
                    minus_20.setAlpha(alpha); minus_20.invalidate();
 800b298:	301c      	adds	r0, #28
 800b29a:	e7a3      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
                } else if (currentPlayerDamage >= 22) {
 800b29c:	2a15      	cmp	r2, #21
 800b29e:	dd04      	ble.n	800b2aa <_ZN14GameScreenView19updateDamageDisplayEv+0x17e>
 800b2a0:	f886 30e2 	strb.w	r3, [r6, #226]	@ 0xe2
                    minus_25.setAlpha(alpha); minus_25.invalidate();
 800b2a4:	f504 5085 	add.w	r0, r4, #4256	@ 0x10a0
 800b2a8:	e796      	b.n	800b1d8 <_ZN14GameScreenView19updateDamageDisplayEv+0xac>
                } else if (currentPlayerDamage >= 18) {
 800b2aa:	2a11      	cmp	r2, #17
 800b2ac:	dd04      	ble.n	800b2b8 <_ZN14GameScreenView19updateDamageDisplayEv+0x18c>
 800b2ae:	f886 3052 	strb.w	r3, [r6, #82]	@ 0x52
                    minus_20.setAlpha(alpha); minus_20.invalidate();
 800b2b2:	f504 5080 	add.w	r0, r4, #4096	@ 0x1000
 800b2b6:	e7ef      	b.n	800b298 <_ZN14GameScreenView19updateDamageDisplayEv+0x16c>
 800b2b8:	f884 3e12 	strb.w	r3, [r4, #3602]	@ 0xe12
                    minus_10.setAlpha(alpha); minus_10.invalidate();
 800b2bc:	f604 50dc 	addw	r0, r4, #3548	@ 0xddc
 800b2c0:	e790      	b.n	800b1e4 <_ZN14GameScreenView19updateDamageDisplayEv+0xb8>
        switch(currentAIDamage) {
 800b2c2:	2a64      	cmp	r2, #100	@ 0x64
 800b2c4:	d001      	beq.n	800b2ca <_ZN14GameScreenView19updateDamageDisplayEv+0x19e>
                if (currentAIDamage >= 90) {
 800b2c6:	2a59      	cmp	r2, #89	@ 0x59
 800b2c8:	dd44      	ble.n	800b354 <_ZN14GameScreenView19updateDamageDisplayEv+0x228>
 800b2ca:	f886 324a 	strb.w	r3, [r6, #586]	@ 0x24a
                    minus_100_1.setAlpha(alpha); minus_100_1.invalidate();
 800b2ce:	f504 5090 	add.w	r0, r4, #4608	@ 0x1200
                    minus_25_1.setAlpha(alpha); minus_25_1.invalidate();
 800b2d2:	3014      	adds	r0, #20
 800b2d4:	e003      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b2d6:	f884 3a6a 	strb.w	r3, [r4, #2666]	@ 0xa6a
            case 2: minus_1_1.setAlpha(alpha); minus_1_1.invalidate(); break;
 800b2da:	f604 2034 	addw	r0, r4, #2612	@ 0xa34
                    minus_10_1.setAlpha(alpha); minus_10_1.invalidate();
 800b2de:	f011 fa43 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (damageDisplayTimer >= DAMAGE_DISPLAY_TIME_MS) {
 800b2e2:	f8d6 2298 	ldr.w	r2, [r6, #664]	@ 0x298
 800b2e6:	f240 53db 	movw	r3, #1499	@ 0x5db
 800b2ea:	429a      	cmp	r2, r3
 800b2ec:	dd4b      	ble.n	800b386 <_ZN14GameScreenView19updateDamageDisplayEv+0x25a>
        hideDamageText();
 800b2ee:	4620      	mov	r0, r4
}
 800b2f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        hideDamageText();
 800b2f4:	f7ff bca8 	b.w	800ac48 <_ZN14GameScreenView14hideDamageTextEv>
 800b2f8:	f884 3afa 	strb.w	r3, [r4, #2810]	@ 0xafa
            case 3: minus_3_1.setAlpha(alpha); minus_3_1.invalidate(); break;
 800b2fc:	f604 20c4 	addw	r0, r4, #2756	@ 0xac4
 800b300:	e7ed      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b302:	f884 3b8a 	strb.w	r3, [r4, #2954]	@ 0xb8a
            case 4: minus_4_1.setAlpha(alpha); minus_4_1.invalidate(); break;
 800b306:	f604 3054 	addw	r0, r4, #2900	@ 0xb54
 800b30a:	e7e8      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b30c:	f884 3c1a 	strb.w	r3, [r4, #3098]	@ 0xc1a
            case 5: minus_5_1.setAlpha(alpha); minus_5_1.invalidate(); break;
 800b310:	f604 30e4 	addw	r0, r4, #3044	@ 0xbe4
 800b314:	e7e3      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b316:	f884 3caa 	strb.w	r3, [r4, #3242]	@ 0xcaa
            case 6: minus_6_1.setAlpha(alpha); minus_6_1.invalidate(); break;
 800b31a:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 800b31e:	e7de      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b320:	f884 3d3a 	strb.w	r3, [r4, #3386]	@ 0xd3a
            case 7: minus_7_1.setAlpha(alpha); minus_7_1.invalidate(); break;
 800b324:	f604 5004 	addw	r0, r4, #3332	@ 0xd04
 800b328:	e7d9      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b32a:	f884 3dca 	strb.w	r3, [r4, #3530]	@ 0xdca
            case 8: minus_8_1.setAlpha(alpha); minus_8_1.invalidate(); break;
 800b32e:	f604 5094 	addw	r0, r4, #3476	@ 0xd94
 800b332:	e7d4      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b334:	f884 3eea 	strb.w	r3, [r4, #3818]	@ 0xeea
            case 12: minus_12_1.setAlpha(alpha); minus_12_1.invalidate(); break;
 800b338:	f604 60b4 	addw	r0, r4, #3764	@ 0xeb4
 800b33c:	e7cf      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b33e:	f884 3f7a 	strb.w	r3, [r4, #3962]	@ 0xf7a
            case 15: minus_15_1.setAlpha(alpha); minus_15_1.invalidate(); break;
 800b342:	f604 7044 	addw	r0, r4, #3908	@ 0xf44
 800b346:	e7ca      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
 800b348:	72b3      	strb	r3, [r6, #10]
            case 17: minus_17_1.setAlpha(alpha); minus_17_1.invalidate(); break;
 800b34a:	f604 70d4 	addw	r0, r4, #4052	@ 0xfd4
 800b34e:	e7c6      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
                } else if (currentAIDamage >= 35) {
 800b350:	2a22      	cmp	r2, #34	@ 0x22
 800b352:	dd05      	ble.n	800b360 <_ZN14GameScreenView19updateDamageDisplayEv+0x234>
 800b354:	f886 31ba 	strb.w	r3, [r6, #442]	@ 0x1ba
                    minus_40_1.setAlpha(alpha); minus_40_1.invalidate();
 800b358:	f504 508c 	add.w	r0, r4, #4480	@ 0x1180
                    minus_20_1.setAlpha(alpha); minus_20_1.invalidate();
 800b35c:	3004      	adds	r0, #4
 800b35e:	e7be      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
                } else if (currentAIDamage >= 22) {
 800b360:	2a15      	cmp	r2, #21
 800b362:	dd04      	ble.n	800b36e <_ZN14GameScreenView19updateDamageDisplayEv+0x242>
 800b364:	f886 312a 	strb.w	r3, [r6, #298]	@ 0x12a
                    minus_25_1.setAlpha(alpha); minus_25_1.invalidate();
 800b368:	f504 5087 	add.w	r0, r4, #4320	@ 0x10e0
 800b36c:	e7b1      	b.n	800b2d2 <_ZN14GameScreenView19updateDamageDisplayEv+0x1a6>
                } else if (currentAIDamage >= 18) {
 800b36e:	2a11      	cmp	r2, #17
 800b370:	dd04      	ble.n	800b37c <_ZN14GameScreenView19updateDamageDisplayEv+0x250>
 800b372:	f886 309a 	strb.w	r3, [r6, #154]	@ 0x9a
                    minus_20_1.setAlpha(alpha); minus_20_1.invalidate();
 800b376:	f504 5083 	add.w	r0, r4, #4192	@ 0x1060
 800b37a:	e7ef      	b.n	800b35c <_ZN14GameScreenView19updateDamageDisplayEv+0x230>
 800b37c:	f884 3e5a 	strb.w	r3, [r4, #3674]	@ 0xe5a
                    minus_10_1.setAlpha(alpha); minus_10_1.invalidate();
 800b380:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800b384:	e7ab      	b.n	800b2de <_ZN14GameScreenView19updateDamageDisplayEv+0x1b2>
}
 800b386:	bd70      	pop	{r4, r5, r6, pc}
 800b388:	44bb8000 	.word	0x44bb8000
 800b38c:	437f0000 	.word	0x437f0000

0800b390 <_ZN14GameScreenView17hideActionButtonsEv>:
{
 800b390:	b538      	push	{r3, r4, r5, lr}
 800b392:	2301      	movs	r3, #1
 800b394:	2500      	movs	r5, #0
 800b396:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800b39a:	4604      	mov	r4, r0
 800b39c:	f880 5695 	strb.w	r5, [r0, #1685]	@ 0x695
 800b3a0:	f880 56c1 	strb.w	r5, [r0, #1729]	@ 0x6c1
 800b3a4:	f880 56ed 	strb.w	r5, [r0, #1773]	@ 0x6ed
 800b3a8:	f880 5719 	strb.w	r5, [r0, #1817]	@ 0x719
    btn_attack.invalidate();
 800b3ac:	f500 60ce 	add.w	r0, r0, #1648	@ 0x670
 800b3b0:	f011 f9da 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800b3b4:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800b3b8:	f011 f9d6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800b3bc:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800b3c0:	f011 f9d2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800b3c4:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800b3c8:	f011 f9ce 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800b3cc:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    menuOpen = false;
 800b3d0:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
    btn_arrow2.invalidate();
 800b3d4:	f011 f9c8 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = false;
 800b3d8:	f884 5264 	strb.w	r5, [r4, #612]	@ 0x264
}
 800b3dc:	bd38      	pop	{r3, r4, r5, pc}

0800b3de <_ZN14GameScreenView17showActionButtonsEv>:
{
 800b3de:	b538      	push	{r3, r4, r5, lr}
 800b3e0:	2300      	movs	r3, #0
 800b3e2:	2501      	movs	r5, #1
 800b3e4:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800b3e8:	4604      	mov	r4, r0
 800b3ea:	f880 5695 	strb.w	r5, [r0, #1685]	@ 0x695
 800b3ee:	f880 56c1 	strb.w	r5, [r0, #1729]	@ 0x6c1
 800b3f2:	f880 56ed 	strb.w	r5, [r0, #1773]	@ 0x6ed
 800b3f6:	f880 5719 	strb.w	r5, [r0, #1817]	@ 0x719
    btn_attack.invalidate();
 800b3fa:	f500 60ce 	add.w	r0, r0, #1648	@ 0x670
 800b3fe:	f011 f9b3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800b402:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800b406:	f011 f9af 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800b40a:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800b40e:	f011 f9ab 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800b412:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800b416:	f011 f9a7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800b41a:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    menuOpen = true;
 800b41e:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
    btn_arrow2.invalidate();
 800b422:	f011 f9a1 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = true;
 800b426:	f884 5264 	strb.w	r5, [r4, #612]	@ 0x264
}
 800b42a:	bd38      	pop	{r3, r4, r5, pc}

0800b42c <_ZN14GameScreenView16toggleActionMenuEv>:
{
 800b42c:	b508      	push	{r3, lr}
    if (menuOpen) {
 800b42e:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800b432:	f893 3264 	ldrb.w	r3, [r3, #612]	@ 0x264
 800b436:	b12b      	cbz	r3, 800b444 <_ZN14GameScreenView16toggleActionMenuEv+0x18>
        hideActionButtons();
 800b438:	f7ff ffaa 	bl	800b390 <_ZN14GameScreenView17hideActionButtonsEv>
}
 800b43c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    toggleLED();
 800b440:	f7ff bb50 	b.w	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        showActionButtons();
 800b444:	f7ff ffcb 	bl	800b3de <_ZN14GameScreenView17showActionButtonsEv>
 800b448:	e7f8      	b.n	800b43c <_ZN14GameScreenView16toggleActionMenuEv+0x10>

0800b44a <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>:
{
 800b44a:	b510      	push	{r4, lr}
 800b44c:	2300      	movs	r3, #0
 800b44e:	4604      	mov	r4, r0
 800b450:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800b454:	f880 3879 	strb.w	r3, [r0, #2169]	@ 0x879
 800b458:	f880 38a5 	strb.w	r3, [r0, #2213]	@ 0x8a5
 800b45c:	f880 38d1 	strb.w	r3, [r0, #2257]	@ 0x8d1
    x2dame_1.invalidate();
 800b460:	f600 0028 	addw	r0, r0, #2088	@ 0x828
 800b464:	f011 f980 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_1.invalidate();
 800b468:	f604 0054 	addw	r0, r4, #2132	@ 0x854
 800b46c:	f011 f97c 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_1.invalidate();
 800b470:	f504 6008 	add.w	r0, r4, #2176	@ 0x880
 800b474:	f011 f978 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_1.invalidate();
 800b478:	f604 00ac 	addw	r0, r4, #2220	@ 0x8ac
}
 800b47c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_1.invalidate();
 800b480:	f011 b972 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b484 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>:
{
 800b484:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b486:	4604      	mov	r4, r0
    hideAllPlayerPowerUps();
 800b488:	f7ff ffdf 	bl	800b44a <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>
    if (!playerPowerUpActive) return;
 800b48c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800b490:	f893 2294 	ldrb.w	r2, [r3, #660]	@ 0x294
 800b494:	2a00      	cmp	r2, #0
 800b496:	d053      	beq.n	800b540 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0xbc>
    switch (playerPowerUpType) {
 800b498:	f8d3 328c 	ldr.w	r3, [r3, #652]	@ 0x28c
 800b49c:	3b01      	subs	r3, #1
 800b49e:	2b03      	cmp	r3, #3
 800b4a0:	d80a      	bhi.n	800b4b8 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x34>
 800b4a2:	e8df f003 	tbb	[pc, r3]
 800b4a6:	0f02      	.short	0x0f02
 800b4a8:	3c26      	.short	0x3c26
 800b4aa:	2301      	movs	r3, #1
 800b4ac:	f884 384d 	strb.w	r3, [r4, #2125]	@ 0x84d
            x2dame_1.invalidate();
 800b4b0:	f604 0028 	addw	r0, r4, #2088	@ 0x828
            sheild_1.invalidate();
 800b4b4:	f011 f958 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b4b8:	1d20      	adds	r0, r4, #4
}
 800b4ba:	b002      	add	sp, #8
 800b4bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b4c0:	f011 b952 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800b4c4:	23ff      	movs	r3, #255	@ 0xff
 800b4c6:	f884 387c 	strb.w	r3, [r4, #2172]	@ 0x87c
 800b4ca:	2601      	movs	r6, #1
            healthplus_1.setPosition(9, 61, 32, 37);
 800b4cc:	f604 0554 	addw	r5, r4, #2132	@ 0x854
 800b4d0:	2325      	movs	r3, #37	@ 0x25
 800b4d2:	f884 6879 	strb.w	r6, [r4, #2169]	@ 0x879
 800b4d6:	223d      	movs	r2, #61	@ 0x3d
 800b4d8:	9300      	str	r3, [sp, #0]
 800b4da:	2109      	movs	r1, #9
 800b4dc:	2320      	movs	r3, #32
 800b4de:	4628      	mov	r0, r5
 800b4e0:	f7f7 fc68 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
            healthplus_1.invalidate();
 800b4e4:	4628      	mov	r0, r5
 800b4e6:	f011 f93f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b4ea:	f884 6879 	strb.w	r6, [r4, #2169]	@ 0x879
            sheild_1.invalidate();
 800b4ee:	4628      	mov	r0, r5
 800b4f0:	e7e0      	b.n	800b4b4 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x30>
 800b4f2:	23ff      	movs	r3, #255	@ 0xff
 800b4f4:	f884 38a8 	strb.w	r3, [r4, #2216]	@ 0x8a8
 800b4f8:	2601      	movs	r6, #1
            chakragain_1.setPosition(9, 61, 32, 37);
 800b4fa:	f504 6508 	add.w	r5, r4, #2176	@ 0x880
 800b4fe:	2325      	movs	r3, #37	@ 0x25
 800b500:	f884 68a5 	strb.w	r6, [r4, #2213]	@ 0x8a5
 800b504:	223d      	movs	r2, #61	@ 0x3d
 800b506:	9300      	str	r3, [sp, #0]
 800b508:	2109      	movs	r1, #9
 800b50a:	2320      	movs	r3, #32
 800b50c:	4628      	mov	r0, r5
 800b50e:	f7f7 fc51 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
            chakragain_1.invalidate();
 800b512:	4628      	mov	r0, r5
 800b514:	f011 f928 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b518:	f884 68a5 	strb.w	r6, [r4, #2213]	@ 0x8a5
            chakragain_1.invalidate();
 800b51c:	e7e7      	b.n	800b4ee <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x6a>
 800b51e:	2301      	movs	r3, #1
 800b520:	f884 38d1 	strb.w	r3, [r4, #2257]	@ 0x8d1
 800b524:	23ff      	movs	r3, #255	@ 0xff
 800b526:	f884 38d4 	strb.w	r3, [r4, #2260]	@ 0x8d4
            sheild_1.setPosition(8, 59, 32, 37);
 800b52a:	f604 05ac 	addw	r5, r4, #2220	@ 0x8ac
 800b52e:	2325      	movs	r3, #37	@ 0x25
 800b530:	9300      	str	r3, [sp, #0]
 800b532:	223b      	movs	r2, #59	@ 0x3b
 800b534:	2320      	movs	r3, #32
 800b536:	2108      	movs	r1, #8
 800b538:	4628      	mov	r0, r5
 800b53a:	f7f7 fc3b 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b53e:	e7d6      	b.n	800b4ee <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv+0x6a>
}
 800b540:	b002      	add	sp, #8
 800b542:	bd70      	pop	{r4, r5, r6, pc}

0800b544 <_ZN14GameScreenView17hideAllAIPowerUpsEv>:
{
 800b544:	b510      	push	{r4, lr}
 800b546:	2300      	movs	r3, #0
 800b548:	4604      	mov	r4, r0
 800b54a:	f880 3821 	strb.w	r3, [r0, #2081]	@ 0x821
 800b54e:	f880 3955 	strb.w	r3, [r0, #2389]	@ 0x955
 800b552:	f880 3929 	strb.w	r3, [r0, #2345]	@ 0x929
 800b556:	f880 38fd 	strb.w	r3, [r0, #2301]	@ 0x8fd
    x2dame_2.invalidate();
 800b55a:	f200 70fc 	addw	r0, r0, #2044	@ 0x7fc
 800b55e:	f011 f903 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_2.invalidate();
 800b562:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
 800b566:	f011 f8ff 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_2.invalidate();
 800b56a:	f604 1004 	addw	r0, r4, #2308	@ 0x904
 800b56e:	f011 f8fb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_2.invalidate();
 800b572:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
}
 800b576:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_2.invalidate();
 800b57a:	f011 b8f5 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b57e <_ZN14GameScreenView22updateAIPowerUpDisplayEv>:
{
 800b57e:	b510      	push	{r4, lr}
 800b580:	4604      	mov	r4, r0
    hideAllAIPowerUps();
 800b582:	f7ff ffdf 	bl	800b544 <_ZN14GameScreenView17hideAllAIPowerUpsEv>
    if (!aiPowerUpActive) {
 800b586:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800b58a:	f893 2295 	ldrb.w	r2, [r3, #661]	@ 0x295
 800b58e:	b33a      	cbz	r2, 800b5e0 <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x62>
    switch (aiPowerUpType) {
 800b590:	f8d3 3290 	ldr.w	r3, [r3, #656]	@ 0x290
 800b594:	3b01      	subs	r3, #1
 800b596:	2b03      	cmp	r3, #3
 800b598:	d822      	bhi.n	800b5e0 <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x62>
 800b59a:	e8df f003 	tbb	[pc, r3]
 800b59e:	0c02      	.short	0x0c02
 800b5a0:	1a13      	.short	0x1a13
        touchable = touch;
 800b5a2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b5a6:	f8a4 3820 	strh.w	r3, [r4, #2080]	@ 0x820
            x2dame_2.invalidate();
 800b5aa:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
}
 800b5ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            sheild_2.invalidate();
 800b5b2:	f011 b8d9 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b5b6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b5ba:	f8a4 3954 	strh.w	r3, [r4, #2388]	@ 0x954
            healthplus_2.invalidate();
 800b5be:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
 800b5c2:	e7f4      	b.n	800b5ae <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x30>
 800b5c4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b5c8:	f8a4 3928 	strh.w	r3, [r4, #2344]	@ 0x928
            chakragain_2.invalidate();
 800b5cc:	f604 1004 	addw	r0, r4, #2308	@ 0x904
 800b5d0:	e7ed      	b.n	800b5ae <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x30>
 800b5d2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b5d6:	f8a4 38fc 	strh.w	r3, [r4, #2300]	@ 0x8fc
            sheild_2.invalidate();
 800b5da:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800b5de:	e7e6      	b.n	800b5ae <_ZN14GameScreenView22updateAIPowerUpDisplayEv+0x30>
}
 800b5e0:	bd10      	pop	{r4, pc}

0800b5e2 <_ZN14GameScreenView16resetNarutoStateEv>:
        visible = vis;
 800b5e2:	2300      	movs	r3, #0
}

// ==================== CHARACTER STATE FUNCTIONS ====================

void GameScreenView::resetNarutoState()
{
 800b5e4:	b510      	push	{r4, lr}
 800b5e6:	f880 3669 	strb.w	r3, [r0, #1641]	@ 0x669
 800b5ea:	f880 363d 	strb.w	r3, [r0, #1597]	@ 0x63d
 800b5ee:	f880 3611 	strb.w	r3, [r0, #1553]	@ 0x611
 800b5f2:	f880 35e5 	strb.w	r3, [r0, #1509]	@ 0x5e5
 800b5f6:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
    naruto_spe.setVisible(false);
    naruto_lose.setVisible(false);
    naruto_win.setVisible(false);

    // Hiển thị lại naruto bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (playerHP > 0 && !gameEnded) {
 800b5fa:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
{
 800b5fe:	4604      	mov	r4, r0
    if (playerHP > 0 && !gameEnded) {
 800b600:	f8d3 225c 	ldr.w	r2, [r3, #604]	@ 0x25c
 800b604:	2a00      	cmp	r2, #0
 800b606:	dd05      	ble.n	800b614 <_ZN14GameScreenView16resetNarutoStateEv+0x32>
 800b608:	f893 3265 	ldrb.w	r3, [r3, #613]	@ 0x265
 800b60c:	b913      	cbnz	r3, 800b614 <_ZN14GameScreenView16resetNarutoStateEv+0x32>
 800b60e:	2301      	movs	r3, #1
 800b610:	f880 358d 	strb.w	r3, [r0, #1421]	@ 0x58d
        naruto.setVisible(true);
    }

    // Invalidate tất cả
    naruto_atk.invalidate();
 800b614:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800b618:	f011 f8a6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800b61c:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800b620:	f011 f8a2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800b624:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800b628:	f011 f89e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800b62c:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800b630:	f011 f89a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800b634:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800b638:	f011 f896 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800b63c:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
}
 800b640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800b644:	f011 b890 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b648 <_ZN14GameScreenView16resetBleachStateEv>:
 800b648:	2300      	movs	r3, #0

void GameScreenView::resetBleachState()
{
 800b64a:	b510      	push	{r4, lr}
 800b64c:	f880 3561 	strb.w	r3, [r0, #1377]	@ 0x561
 800b650:	f880 3535 	strb.w	r3, [r0, #1333]	@ 0x535
 800b654:	f880 3509 	strb.w	r3, [r0, #1289]	@ 0x509
 800b658:	f880 34dd 	strb.w	r3, [r0, #1245]	@ 0x4dd
 800b65c:	f880 34b1 	strb.w	r3, [r0, #1201]	@ 0x4b1
    bleach_spe.setVisible(false);
    bleach_lose.setVisible(false);
    bleach_win.setVisible(false);

    // Hiển thị lại bleach bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (aiHP > 0 && !gameEnded) {
 800b660:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
{
 800b664:	4604      	mov	r4, r0
    if (aiHP > 0 && !gameEnded) {
 800b666:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 800b66a:	2a00      	cmp	r2, #0
 800b66c:	dd05      	ble.n	800b67a <_ZN14GameScreenView16resetBleachStateEv+0x32>
 800b66e:	f893 3265 	ldrb.w	r3, [r3, #613]	@ 0x265
 800b672:	b913      	cbnz	r3, 800b67a <_ZN14GameScreenView16resetBleachStateEv+0x32>
 800b674:	2301      	movs	r3, #1
 800b676:	f880 3485 	strb.w	r3, [r0, #1157]	@ 0x485
        bleach.setVisible(true);
    }

    // Invalidate tất cả
    bleach_atk.invalidate();
 800b67a:	f204 503c 	addw	r0, r4, #1340	@ 0x53c
 800b67e:	f011 f873 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800b682:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800b686:	f011 f86f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();
 800b68a:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
 800b68e:	f011 f86b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800b692:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800b696:	f011 f867 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800b69a:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800b69e:	f011 f863 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800b6a2:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
}
 800b6a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach.invalidate();
 800b6aa:	f011 b85d 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b6ae <_ZN14GameScreenView22hideAllPlayerHPWidgetsEv>:
 800b6ae:	2300      	movs	r3, #0
            break;
    }
}

void GameScreenView::hideAllPlayerHPWidgets()
{
 800b6b0:	b510      	push	{r4, lr}
 800b6b2:	4604      	mov	r4, r0
 800b6b4:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800b6b8:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800b6bc:	f880 3249 	strb.w	r3, [r0, #585]	@ 0x249
 800b6c0:	f880 321d 	strb.w	r3, [r0, #541]	@ 0x21d
 800b6c4:	f880 31f1 	strb.w	r3, [r0, #497]	@ 0x1f1
 800b6c8:	f880 31c5 	strb.w	r3, [r0, #453]	@ 0x1c5
 800b6cc:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800b6d0:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800b6d4:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800b6d8:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800b6dc:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
    BITMAP_HP_20_ID.setVisible(false);
    BITMAP_HP_10_ID.setVisible(false);
    BITMAP_HP_0_ID.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID.invalidate();
 800b6e0:	3098      	adds	r0, #152	@ 0x98
 800b6e2:	f011 f841 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID.invalidate();
 800b6e6:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800b6ea:	f011 f83d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID.invalidate();
 800b6ee:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800b6f2:	f011 f839 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID.invalidate();
 800b6f6:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800b6fa:	f011 f835 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID.invalidate();
 800b6fe:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800b702:	f011 f831 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID.invalidate();
 800b706:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800b70a:	f011 f82d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID.invalidate();
 800b70e:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800b712:	f011 f829 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID.invalidate();
 800b716:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800b71a:	f011 f825 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID.invalidate();
 800b71e:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800b722:	f011 f821 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID.invalidate();
 800b726:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800b72a:	f011 f81d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID.invalidate();
 800b72e:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
}
 800b732:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID.invalidate();
 800b736:	f011 b817 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b73a <_ZN14GameScreenView18hideAllAIHPWidgetsEv>:
 800b73a:	2300      	movs	r3, #0

void GameScreenView::hideAllAIHPWidgets()
{
 800b73c:	b510      	push	{r4, lr}
 800b73e:	4604      	mov	r4, r0
 800b740:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800b744:	f880 32cd 	strb.w	r3, [r0, #717]	@ 0x2cd
 800b748:	f880 32f9 	strb.w	r3, [r0, #761]	@ 0x2f9
 800b74c:	f880 3325 	strb.w	r3, [r0, #805]	@ 0x325
 800b750:	f880 3351 	strb.w	r3, [r0, #849]	@ 0x351
 800b754:	f880 337d 	strb.w	r3, [r0, #893]	@ 0x37d
 800b758:	f880 33a9 	strb.w	r3, [r0, #937]	@ 0x3a9
 800b75c:	f880 33d5 	strb.w	r3, [r0, #981]	@ 0x3d5
 800b760:	f880 3401 	strb.w	r3, [r0, #1025]	@ 0x401
 800b764:	f880 342d 	strb.w	r3, [r0, #1069]	@ 0x42d
 800b768:	f880 3459 	strb.w	r3, [r0, #1113]	@ 0x459
    BITMAP_HP_20_ID_1.setVisible(false);
    BITMAP_HP_10_ID_1.setVisible(false);
    BITMAP_HP_0_ID_1.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID_1.invalidate();
 800b76c:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800b770:	f010 fffa 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID_1.invalidate();
 800b774:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800b778:	f010 fff6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID_1.invalidate();
 800b77c:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800b780:	f010 fff2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID_1.invalidate();
 800b784:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800b788:	f010 ffee 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID_1.invalidate();
 800b78c:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800b790:	f010 ffea 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID_1.invalidate();
 800b794:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800b798:	f010 ffe6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID_1.invalidate();
 800b79c:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800b7a0:	f010 ffe2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID_1.invalidate();
 800b7a4:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800b7a8:	f010 ffde 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID_1.invalidate();
 800b7ac:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800b7b0:	f010 ffda 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID_1.invalidate();
 800b7b4:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800b7b8:	f010 ffd6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID_1.invalidate();
 800b7bc:	f204 4034 	addw	r0, r4, #1076	@ 0x434
}
 800b7c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID_1.invalidate();
 800b7c4:	f010 bfd0 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800b7c8 <_ZN14GameScreenView25updatePlayerChakraDisplayEv>:
// ==================== CHAKRA SYSTEM ====================

void GameScreenView::updatePlayerChakraDisplay()
{
    // Đảm bảo chakra level không bị âm
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800b7c8:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800b7cc:	b513      	push	{r0, r1, r4, lr}
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800b7ce:	f8d2 1268 	ldr.w	r1, [r2, #616]	@ 0x268
 800b7d2:	2900      	cmp	r1, #0
{
 800b7d4:	4603      	mov	r3, r0
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800b7d6:	da0f      	bge.n	800b7f8 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x30>
 800b7d8:	2100      	movs	r1, #0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800b7da:	f8c2 1268 	str.w	r1, [r2, #616]	@ 0x268

    // Xử lý đặc biệt khi chakra = 0
    if (playerChakraLevel == 0) {
 800b7de:	f8d2 2268 	ldr.w	r2, [r2, #616]	@ 0x268
 800b7e2:	f203 744c 	addw	r4, r3, #1868	@ 0x74c
 800b7e6:	b95a      	cbnz	r2, 800b800 <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x38>
 800b7e8:	f883 2771 	strb.w	r2, [r3, #1905]	@ 0x771
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của player
    chakra_box1.setPosition(14, 43, currentWidth, 5);
    chakra_box1.invalidate();
 800b7ec:	4620      	mov	r0, r4
}
 800b7ee:	b002      	add	sp, #8
 800b7f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box1.invalidate();
 800b7f4:	f010 bfb8 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800b7f8:	2964      	cmp	r1, #100	@ 0x64
 800b7fa:	ddf0      	ble.n	800b7de <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x16>
 800b7fc:	2164      	movs	r1, #100	@ 0x64
 800b7fe:	e7ec      	b.n	800b7da <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x12>
 800b800:	2101      	movs	r1, #1
 800b802:	f883 1771 	strb.w	r1, [r3, #1905]	@ 0x771
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800b806:	2356      	movs	r3, #86	@ 0x56
 800b808:	435a      	muls	r2, r3
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b80a:	2a63      	cmp	r2, #99	@ 0x63
 800b80c:	dd0f      	ble.n	800b82e <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x66>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800b80e:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800b812:	428a      	cmp	r2, r1
 800b814:	dc02      	bgt.n	800b81c <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x54>
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800b816:	2364      	movs	r3, #100	@ 0x64
 800b818:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box1.setPosition(14, 43, currentWidth, 5);
 800b81c:	2205      	movs	r2, #5
 800b81e:	9200      	str	r2, [sp, #0]
 800b820:	b21b      	sxth	r3, r3
 800b822:	222b      	movs	r2, #43	@ 0x2b
 800b824:	210e      	movs	r1, #14
 800b826:	4620      	mov	r0, r4
 800b828:	f7f7 fac4 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b82c:	e7de      	b.n	800b7ec <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x24>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b82e:	460b      	mov	r3, r1
 800b830:	e7f4      	b.n	800b81c <_ZN14GameScreenView25updatePlayerChakraDisplayEv+0x54>

0800b832 <_ZN14GameScreenView21updateAIChakraDisplayEv>:

void GameScreenView::updateAIChakraDisplay()
{
    // Đảm bảo AI chakra level không bị âm
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800b832:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800b836:	b513      	push	{r0, r1, r4, lr}
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800b838:	f8d2 126c 	ldr.w	r1, [r2, #620]	@ 0x26c
 800b83c:	2900      	cmp	r1, #0
{
 800b83e:	4603      	mov	r3, r0
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800b840:	da0f      	bge.n	800b862 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x30>
 800b842:	2100      	movs	r1, #0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800b844:	f8c2 126c 	str.w	r1, [r2, #620]	@ 0x26c

    // Xử lý đặc biệt khi chakra = 0
    if (aiChakraLevel == 0) {
 800b848:	f8d2 226c 	ldr.w	r2, [r2, #620]	@ 0x26c
 800b84c:	f503 64ef 	add.w	r4, r3, #1912	@ 0x778
 800b850:	b95a      	cbnz	r2, 800b86a <_ZN14GameScreenView21updateAIChakraDisplayEv+0x38>
 800b852:	f883 279d 	strb.w	r2, [r3, #1949]	@ 0x79d
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của AI
    chakra_box2.setPosition(135, 43, currentWidth, 5);
    chakra_box2.invalidate();
 800b856:	4620      	mov	r0, r4
}
 800b858:	b002      	add	sp, #8
 800b85a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box2.invalidate();
 800b85e:	f010 bf83 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800b862:	2964      	cmp	r1, #100	@ 0x64
 800b864:	ddf0      	ble.n	800b848 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x16>
 800b866:	2164      	movs	r1, #100	@ 0x64
 800b868:	e7ec      	b.n	800b844 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x12>
 800b86a:	2101      	movs	r1, #1
 800b86c:	f883 179d 	strb.w	r1, [r3, #1949]	@ 0x79d
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800b870:	2356      	movs	r3, #86	@ 0x56
 800b872:	435a      	muls	r2, r3
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b874:	2a63      	cmp	r2, #99	@ 0x63
 800b876:	dd0f      	ble.n	800b898 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x66>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800b878:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800b87c:	428a      	cmp	r2, r1
 800b87e:	dc02      	bgt.n	800b886 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x54>
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800b880:	2364      	movs	r3, #100	@ 0x64
 800b882:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box2.setPosition(135, 43, currentWidth, 5);
 800b886:	2205      	movs	r2, #5
 800b888:	9200      	str	r2, [sp, #0]
 800b88a:	b21b      	sxth	r3, r3
 800b88c:	222b      	movs	r2, #43	@ 0x2b
 800b88e:	2187      	movs	r1, #135	@ 0x87
 800b890:	4620      	mov	r0, r4
 800b892:	f7f7 fa8f 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b896:	e7de      	b.n	800b856 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x24>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800b898:	460b      	mov	r3, r1
 800b89a:	e7f4      	b.n	800b886 <_ZN14GameScreenView21updateAIChakraDisplayEv+0x54>

0800b89c <_ZN14GameScreenView7endGameEb>:
    // Logic game end giờ được xử lý trong updatePlayerHPDisplay() và updateAIHPDisplay()
    return;
}

void GameScreenView::endGame(bool playerWon)
{
 800b89c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    gameEnded = true;
 800b8a0:	f500 5880 	add.w	r8, r0, #4096	@ 0x1000
{
 800b8a4:	4604      	mov	r4, r0
    gameEnded = true;
 800b8a6:	2601      	movs	r6, #1
 800b8a8:	2500      	movs	r5, #0

    // ===== LƯU KẾT QUẢ GAME CHO ROUTING =====
    playerWonGame = playerWon;
 800b8aa:	f888 1266 	strb.w	r1, [r8, #614]	@ 0x266
    gameEnded = true;
 800b8ae:	f888 6265 	strb.w	r6, [r8, #613]	@ 0x265
{
 800b8b2:	460f      	mov	r7, r1

    // Hide menu actions immediately
    hideActionButtons();
 800b8b4:	f7ff fd6c 	bl	800b390 <_ZN14GameScreenView17hideActionButtonsEv>
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800b8b8:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800b8bc:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800b8c0:	f010 ff52 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons when game ends
    hideAllPlayerPowerUps();
 800b8c4:	4620      	mov	r0, r4
 800b8c6:	f7ff fdc0 	bl	800b44a <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps();
 800b8ca:	4620      	mov	r0, r4
 800b8cc:	f7ff fe3a 	bl	800b544 <_ZN14GameScreenView17hideAllAIPowerUpsEv>
    hideDamageText();
 800b8d0:	4620      	mov	r0, r4
 800b8d2:	f7ff f9b9 	bl	800ac48 <_ZN14GameScreenView14hideDamageTextEv>
 800b8d6:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800b8da:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800b8de:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800b8e2:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800b8e6:	f884 5485 	strb.w	r5, [r4, #1157]	@ 0x485
 800b8ea:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800b8ee:	f884 5535 	strb.w	r5, [r4, #1333]	@ 0x535
 800b8f2:	f884 5509 	strb.w	r5, [r4, #1289]	@ 0x509
 800b8f6:	f884 57c9 	strb.w	r5, [r4, #1993]	@ 0x7c9
 800b8fa:	f884 57f5 	strb.w	r5, [r4, #2037]	@ 0x7f5

    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    if (playerWon) {
 800b8fe:	2f00      	cmp	r7, #0
 800b900:	d047      	beq.n	800b992 <_ZN14GameScreenView7endGameEb+0xf6>
        // ===== PLAYER THẮNG - WILL GO TO BACKUPSCREEN =====

        // LED signal for character unlock
        for (int i = 0; i < 8; i++) {
            toggleLED();
 800b902:	f7ff f8ef 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b906:	f7ff f8ed 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b90a:	f7ff f8eb 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b90e:	f7ff f8e9 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b912:	f7ff f8e7 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b916:	f7ff f8e5 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b91a:	f7ff f8e3 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b91e:	f7ff f8e1 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>

        naruto_win.setVisible(true);
        bleach_lose.setVisible(true);
        win.setVisible(true);

        naruto_win.invalidate();
 800b922:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800b926:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800b92a:	f884 54b1 	strb.w	r5, [r4, #1201]	@ 0x4b1
 800b92e:	f884 65b9 	strb.w	r6, [r4, #1465]	@ 0x5b9
 800b932:	f884 64dd 	strb.w	r6, [r4, #1245]	@ 0x4dd
 800b936:	f884 67f5 	strb.w	r6, [r4, #2037]	@ 0x7f5
 800b93a:	f010 ff15 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_lose.invalidate();
 800b93e:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800b942:	f010 ff11 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        win.invalidate();
 800b946:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800b94a:	f010 ff0d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

        // LED blink rapidly for victory
        for (int i = 0; i < 6; i++) {
            toggleLED();
 800b94e:	f7ff f8c9 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b952:	f7ff f8c7 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b956:	f7ff f8c5 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b95a:	f7ff f8c3 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        // LED stays on for defeat
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);

        // Debug: 5 slow blinks = MainMenuScreen route
        for (int i = 0; i < 5; i++) {
            toggleLED();
 800b95e:	f7ff f8c1 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        }
    }

    // ===== BẮT ĐẦU AUTO RETURN TIMER (6 GIÂY) =====
    autoReturnTimer = 0;
    autoReturnTimerActive = true;
 800b962:	2401      	movs	r4, #1
            toggleLED();
 800b964:	f7ff f8be 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b968:	f7ff f8bc 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b96c:	f7ff f8ba 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800b970:	f7ff f8b8 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    autoReturnTimer = 0;
 800b974:	2300      	movs	r3, #0
 800b976:	f8c8 3280 	str.w	r3, [r8, #640]	@ 0x280
    autoReturnTimerActive = true;
 800b97a:	f888 4284 	strb.w	r4, [r8, #644]	@ 0x284

    // Debug: LED signal that timer has started
    toggleLED();
 800b97e:	f7ff f8b1 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800b982:	f7ff f8af 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800b986:	f7ff f8ad 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>

    // Ensure gameEnded = true is set
    gameEnded = true;
 800b98a:	f888 4265 	strb.w	r4, [r8, #613]	@ 0x265
}
 800b98e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        naruto_lose.invalidate();
 800b992:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800b996:	f884 75b9 	strb.w	r7, [r4, #1465]	@ 0x5b9
 800b99a:	f884 74dd 	strb.w	r7, [r4, #1245]	@ 0x4dd
 800b99e:	f884 65e5 	strb.w	r6, [r4, #1509]	@ 0x5e5
 800b9a2:	f884 64b1 	strb.w	r6, [r4, #1201]	@ 0x4b1
 800b9a6:	f884 67c9 	strb.w	r6, [r4, #1993]	@ 0x7c9
 800b9aa:	f010 fedd 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_win.invalidate();
 800b9ae:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800b9b2:	f010 fed9 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        gameover.invalidate();
 800b9b6:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800b9ba:	f010 fed5 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800b9be:	4803      	ldr	r0, [pc, #12]	@ (800b9cc <_ZN14GameScreenView7endGameEb+0x130>)
 800b9c0:	4632      	mov	r2, r6
 800b9c2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800b9c6:	f005 f8c9 	bl	8010b5c <HAL_GPIO_WritePin>
 800b9ca:	e7c8      	b.n	800b95e <_ZN14GameScreenView7endGameEb+0xc2>
 800b9cc:	40021800 	.word	0x40021800

0800b9d0 <_ZN14GameScreenView21updatePlayerHPDisplayEv>:
{
 800b9d0:	b570      	push	{r4, r5, r6, lr}
 800b9d2:	4604      	mov	r4, r0
    int roundedHP = (playerHP / 10) * 10;
 800b9d4:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
    hideAllPlayerHPWidgets();
 800b9d8:	f7ff fe69 	bl	800b6ae <_ZN14GameScreenView22hideAllPlayerHPWidgetsEv>
    int roundedHP = (playerHP / 10) * 10;
 800b9dc:	f8d5 325c 	ldr.w	r3, [r5, #604]	@ 0x25c
    if (playerHP == 0 || roundedHP == 0) {
 800b9e0:	2b09      	cmp	r3, #9
 800b9e2:	dc15      	bgt.n	800ba10 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x40>
 800b9e4:	2301      	movs	r3, #1
 800b9e6:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        BITMAP_HP_0_ID.invalidate();
 800b9ea:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800b9ee:	f010 febb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b9f2:	260a      	movs	r6, #10
            toggleLED();
 800b9f4:	f7ff f876 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800b9f8:	3e01      	subs	r6, #1
 800b9fa:	d1fb      	bne.n	800b9f4 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x24>
        if (!gameEnded) {
 800b9fc:	f895 3265 	ldrb.w	r3, [r5, #613]	@ 0x265
 800ba00:	2b00      	cmp	r3, #0
 800ba02:	d172      	bne.n	800baea <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x11a>
            endGame(false); // Player thua
 800ba04:	4620      	mov	r0, r4
 800ba06:	2100      	movs	r1, #0
}
 800ba08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            endGame(false); // Player thua
 800ba0c:	f7ff bf46 	b.w	800b89c <_ZN14GameScreenView7endGameEb>
    int roundedHP = (playerHP / 10) * 10;
 800ba10:	220a      	movs	r2, #10
 800ba12:	fb93 f1f2 	sdiv	r1, r3, r2
 800ba16:	4351      	muls	r1, r2
    switch (roundedHP) {
 800ba18:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800ba1c:	2a09      	cmp	r2, #9
 800ba1e:	d94a      	bls.n	800bab6 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xe6>
 800ba20:	293c      	cmp	r1, #60	@ 0x3c
 800ba22:	f04f 0201 	mov.w	r2, #1
 800ba26:	dc20      	bgt.n	800ba6a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x9a>
 800ba28:	f1a3 001e 	sub.w	r0, r3, #30
 800ba2c:	2809      	cmp	r0, #9
 800ba2e:	d94d      	bls.n	800bacc <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xfc>
 800ba30:	291e      	cmp	r1, #30
 800ba32:	dc0e      	bgt.n	800ba52 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x82>
 800ba34:	f1a3 010a 	sub.w	r1, r3, #10
 800ba38:	2909      	cmp	r1, #9
 800ba3a:	d951      	bls.n	800bae0 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x110>
 800ba3c:	3b14      	subs	r3, #20
 800ba3e:	2b09      	cmp	r3, #9
 800ba40:	d949      	bls.n	800bad6 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x106>
 800ba42:	2301      	movs	r3, #1
 800ba44:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
            BITMAP_HP_0_ID.invalidate();
 800ba48:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800ba4c:	f010 fe8c 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800ba50:	e7d4      	b.n	800b9fc <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x2c>
    switch (roundedHP) {
 800ba52:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800ba56:	2909      	cmp	r1, #9
 800ba58:	d933      	bls.n	800bac2 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xf2>
 800ba5a:	3b32      	subs	r3, #50	@ 0x32
 800ba5c:	2b09      	cmp	r3, #9
 800ba5e:	d8f0      	bhi.n	800ba42 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x72>
 800ba60:	f884 21c5 	strb.w	r2, [r4, #453]	@ 0x1c5
            BITMAP_HP_50_ID.invalidate();
 800ba64:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800ba68:	e017      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
    switch (roundedHP) {
 800ba6a:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800ba6e:	2809      	cmp	r0, #9
 800ba70:	d917      	bls.n	800baa2 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xd2>
 800ba72:	295a      	cmp	r1, #90	@ 0x5a
 800ba74:	dc0b      	bgt.n	800ba8e <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xbe>
 800ba76:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800ba7a:	2909      	cmp	r1, #9
 800ba7c:	d916      	bls.n	800baac <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xdc>
 800ba7e:	3b50      	subs	r3, #80	@ 0x50
 800ba80:	2b09      	cmp	r3, #9
 800ba82:	d8de      	bhi.n	800ba42 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x72>
 800ba84:	f884 2249 	strb.w	r2, [r4, #585]	@ 0x249
            BITMAP_HP_80_ID.invalidate();
 800ba88:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800ba8c:	e005      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
    switch (roundedHP) {
 800ba8e:	2963      	cmp	r1, #99	@ 0x63
 800ba90:	ddd7      	ble.n	800ba42 <_ZN14GameScreenView21updatePlayerHPDisplayEv+0x72>
 800ba92:	f884 20bd 	strb.w	r2, [r4, #189]	@ 0xbd
            BITMAP_HP_100_ID.invalidate();
 800ba96:	f104 0098 	add.w	r0, r4, #152	@ 0x98
}
 800ba9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            BITMAP_HP_10_ID.invalidate();
 800ba9e:	f010 be63 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800baa2:	f884 2275 	strb.w	r2, [r4, #629]	@ 0x275
            BITMAP_HP_90_ID.invalidate();
 800baa6:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800baaa:	e7f6      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800baac:	f884 221d 	strb.w	r2, [r4, #541]	@ 0x21d
            BITMAP_HP_70_ID.invalidate();
 800bab0:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800bab4:	e7f1      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800bab6:	2301      	movs	r3, #1
 800bab8:	f884 31f1 	strb.w	r3, [r4, #497]	@ 0x1f1
            BITMAP_HP_60_ID.invalidate();
 800babc:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800bac0:	e7eb      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800bac2:	f884 2199 	strb.w	r2, [r4, #409]	@ 0x199
            BITMAP_HP_40_ID.invalidate();
 800bac6:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800baca:	e7e6      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800bacc:	f884 216d 	strb.w	r2, [r4, #365]	@ 0x16d
            BITMAP_HP_30_ID.invalidate();
 800bad0:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800bad4:	e7e1      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800bad6:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
            BITMAP_HP_20_ID.invalidate();
 800bada:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800bade:	e7dc      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
 800bae0:	f884 20e9 	strb.w	r2, [r4, #233]	@ 0xe9
            BITMAP_HP_10_ID.invalidate();
 800bae4:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800bae8:	e7d7      	b.n	800ba9a <_ZN14GameScreenView21updatePlayerHPDisplayEv+0xca>
}
 800baea:	bd70      	pop	{r4, r5, r6, pc}

0800baec <_ZN14GameScreenView12playerDefendEv>:
{
 800baec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800baee:	4605      	mov	r5, r0
 800baf0:	2600      	movs	r6, #0
 800baf2:	2701      	movs	r7, #1
    resetNarutoState();
 800baf4:	f7ff fd75 	bl	800b5e2 <_ZN14GameScreenView16resetNarutoStateEv>
    playerDefending = true;
 800baf8:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
    naruto_def.invalidate();
 800bafc:	f505 60c3 	add.w	r0, r5, #1560	@ 0x618
 800bb00:	f885 658d 	strb.w	r6, [r5, #1421]	@ 0x58d
 800bb04:	f885 763d 	strb.w	r7, [r5, #1597]	@ 0x63d
 800bb08:	f010 fe2e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800bb0c:	f505 60ad 	add.w	r0, r5, #1384	@ 0x568
 800bb10:	f010 fe2a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(2, 5);
 800bb14:	2205      	movs	r2, #5
 800bb16:	2102      	movs	r1, #2
    playerDefending = true;
 800bb18:	f884 7270 	strb.w	r7, [r4, #624]	@ 0x270
    int healAmount = generateRandomNumber(2, 5);
 800bb1c:	4628      	mov	r0, r5
 800bb1e:	f7ff f86b 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    playerHP += healAmount;
 800bb22:	f8d4 325c 	ldr.w	r3, [r4, #604]	@ 0x25c
 800bb26:	4403      	add	r3, r0
    if (playerHP > 100) playerHP = 100;
 800bb28:	2b64      	cmp	r3, #100	@ 0x64
 800bb2a:	bfa8      	it	ge
 800bb2c:	2364      	movge	r3, #100	@ 0x64
 800bb2e:	f8c4 325c 	str.w	r3, [r4, #604]	@ 0x25c
    playerChakraLevel += generateRandomNumber(8, 15);
 800bb32:	220f      	movs	r2, #15
 800bb34:	2108      	movs	r1, #8
 800bb36:	4628      	mov	r0, r5
 800bb38:	f7ff f85e 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800bb3c:	f8d4 3268 	ldr.w	r3, [r4, #616]	@ 0x268
 800bb40:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800bb42:	2b64      	cmp	r3, #100	@ 0x64
 800bb44:	bfa8      	it	ge
 800bb46:	2364      	movge	r3, #100	@ 0x64
 800bb48:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
    showDamageText(0, 0);
 800bb4c:	4632      	mov	r2, r6
 800bb4e:	4631      	mov	r1, r6
 800bb50:	4628      	mov	r0, r5
 800bb52:	f7ff f94e 	bl	800adf2 <_ZN14GameScreenView14showDamageTextEii>
    if (playerPowerUpActive && playerPowerUpType == 1) {
 800bb56:	f894 3294 	ldrb.w	r3, [r4, #660]	@ 0x294
 800bb5a:	b153      	cbz	r3, 800bb72 <_ZN14GameScreenView12playerDefendEv+0x86>
 800bb5c:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800bb60:	42bb      	cmp	r3, r7
 800bb62:	d106      	bne.n	800bb72 <_ZN14GameScreenView12playerDefendEv+0x86>
        playerPowerUpActive = false;
 800bb64:	f884 6294 	strb.w	r6, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800bb68:	f8c4 628c 	str.w	r6, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800bb6c:	4628      	mov	r0, r5
 800bb6e:	f7ff fc89 	bl	800b484 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800bb72:	4628      	mov	r0, r5
 800bb74:	f7ff ff2c 	bl	800b9d0 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800bb78:	4628      	mov	r0, r5
 800bb7a:	f7ff fe25 	bl	800b7c8 <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800bb7e:	f7fe ffb1 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800bb82:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800bb84:	2200      	movs	r2, #0
    playerActionDone = true;
 800bb86:	f884 3296 	strb.w	r3, [r4, #662]	@ 0x296
    playerSpecialUsed = false;
 800bb8a:	f884 2272 	strb.w	r2, [r4, #626]	@ 0x272
    resetTimer = 0;
 800bb8e:	f8c4 2278 	str.w	r2, [r4, #632]	@ 0x278
    resetTimerActive = true;
 800bb92:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
}
 800bb96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bb98 <_ZN14GameScreenView8aiAttackEv>:
{
 800bb98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    if (gameEnded) return;
 800bb9c:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800bba0:	4605      	mov	r5, r0
    if (gameEnded) return;
 800bba2:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800bba6:	2e00      	cmp	r6, #0
 800bba8:	d166      	bne.n	800bc78 <_ZN14GameScreenView8aiAttackEv+0xe0>
    resetBleachState();
 800bbaa:	f7ff fd4d 	bl	800b648 <_ZN14GameScreenView16resetBleachStateEv>
 800bbae:	2301      	movs	r3, #1
 800bbb0:	f885 3561 	strb.w	r3, [r5, #1377]	@ 0x561
    bleach_atk.invalidate();
 800bbb4:	f205 503c 	addw	r0, r5, #1340	@ 0x53c
 800bbb8:	f885 6485 	strb.w	r6, [r5, #1157]	@ 0x485
 800bbbc:	f010 fdd4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800bbc0:	f505 608c 	add.w	r0, r5, #1120	@ 0x460
 800bbc4:	f010 fdd0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800bbc8:	2208      	movs	r2, #8
 800bbca:	2103      	movs	r1, #3
 800bbcc:	4628      	mov	r0, r5
 800bbce:	f7ff f813 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    bool hasDoubleAttack = (aiPowerUpActive && aiPowerUpType == 1);
 800bbd2:	f894 7295 	ldrb.w	r7, [r4, #661]	@ 0x295
 800bbd6:	b127      	cbz	r7, 800bbe2 <_ZN14GameScreenView8aiAttackEv+0x4a>
 800bbd8:	f8d4 7290 	ldr.w	r7, [r4, #656]	@ 0x290
 800bbdc:	1e7b      	subs	r3, r7, #1
 800bbde:	425f      	negs	r7, r3
 800bbe0:	415f      	adcs	r7, r3
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800bbe2:	f894 8294 	ldrb.w	r8, [r4, #660]	@ 0x294
 800bbe6:	f1b8 0f00 	cmp.w	r8, #0
 800bbea:	d003      	beq.n	800bbf4 <_ZN14GameScreenView8aiAttackEv+0x5c>
 800bbec:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800bbf0:	2b04      	cmp	r3, #4
 800bbf2:	d043      	beq.n	800bc7c <_ZN14GameScreenView8aiAttackEv+0xe4>
    if (hasShield) {
 800bbf4:	f894 1270 	ldrb.w	r1, [r4, #624]	@ 0x270
 800bbf8:	463a      	mov	r2, r7
 800bbfa:	f7fe ff57 	bl	800aaac <_ZN14GameScreenView15calculateDamageEibbb.part.0>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800bbfe:	f04f 0800 	mov.w	r8, #0
 800bc02:	4606      	mov	r6, r0
    playerHP -= actualDamage;
 800bc04:	f8d4 325c 	ldr.w	r3, [r4, #604]	@ 0x25c
 800bc08:	1b9b      	subs	r3, r3, r6
    if (playerHP < 0) playerHP = 0;
 800bc0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800bc0e:	f8c4 325c 	str.w	r3, [r4, #604]	@ 0x25c
    showDamageText(actualDamage, 0);
 800bc12:	2200      	movs	r2, #0
 800bc14:	4631      	mov	r1, r6
 800bc16:	4628      	mov	r0, r5
 800bc18:	f7ff f8eb 	bl	800adf2 <_ZN14GameScreenView14showDamageTextEii>
    aiChakraLevel += generateRandomNumber(5, 10);
 800bc1c:	220a      	movs	r2, #10
 800bc1e:	2105      	movs	r1, #5
 800bc20:	4628      	mov	r0, r5
 800bc22:	f7fe ffe9 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800bc26:	f8d4 326c 	ldr.w	r3, [r4, #620]	@ 0x26c
 800bc2a:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800bc2c:	2b64      	cmp	r3, #100	@ 0x64
 800bc2e:	bfa8      	it	ge
 800bc30:	2364      	movge	r3, #100	@ 0x64
 800bc32:	f8c4 326c 	str.w	r3, [r4, #620]	@ 0x26c
    if (hasDoubleAttack) {
 800bc36:	b15f      	cbz	r7, 800bc50 <_ZN14GameScreenView8aiAttackEv+0xb8>
        aiPowerUpActive = false;
 800bc38:	2300      	movs	r3, #0
 800bc3a:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800bc3e:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800bc42:	4628      	mov	r0, r5
 800bc44:	f7ff fc9b 	bl	800b57e <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
        toggleLED();
 800bc48:	f7fe ff4c 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800bc4c:	f7fe ff4a 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    if (playerHasShield && actualDamage == 0) {
 800bc50:	f1b8 0f00 	cmp.w	r8, #0
 800bc54:	d007      	beq.n	800bc66 <_ZN14GameScreenView8aiAttackEv+0xce>
 800bc56:	b936      	cbnz	r6, 800bc66 <_ZN14GameScreenView8aiAttackEv+0xce>
        playerPowerUpActive = false;
 800bc58:	f884 6294 	strb.w	r6, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800bc5c:	f8c4 628c 	str.w	r6, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800bc60:	4628      	mov	r0, r5
 800bc62:	f7ff fc0f 	bl	800b484 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800bc66:	4628      	mov	r0, r5
 800bc68:	f7ff feb2 	bl	800b9d0 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    updateAIChakraDisplay();
 800bc6c:	4628      	mov	r0, r5
 800bc6e:	f7ff fde0 	bl	800b832 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    aiActionDone = true;
 800bc72:	2301      	movs	r3, #1
 800bc74:	f884 3297 	strb.w	r3, [r4, #663]	@ 0x297
}
 800bc78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return 0; // Shield chặn hoàn toàn
 800bc7c:	2600      	movs	r6, #0
 800bc7e:	e7c1      	b.n	800bc04 <_ZN14GameScreenView8aiAttackEv+0x6c>

0800bc80 <_ZN14GameScreenView9aiSpecialEv>:
{
 800bc80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (aiChakraLevel < 100 || gameEnded) {
 800bc82:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800bc86:	4605      	mov	r5, r0
    if (aiChakraLevel < 100 || gameEnded) {
 800bc88:	f8d4 326c 	ldr.w	r3, [r4, #620]	@ 0x26c
 800bc8c:	2b63      	cmp	r3, #99	@ 0x63
 800bc8e:	dd3f      	ble.n	800bd10 <_ZN14GameScreenView9aiSpecialEv+0x90>
 800bc90:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800bc94:	bbe6      	cbnz	r6, 800bd10 <_ZN14GameScreenView9aiSpecialEv+0x90>
    resetBleachState();
 800bc96:	f7ff fcd7 	bl	800b648 <_ZN14GameScreenView16resetBleachStateEv>
 800bc9a:	2301      	movs	r3, #1
 800bc9c:	f885 3509 	strb.w	r3, [r5, #1289]	@ 0x509
    bleach_spe.invalidate();
 800bca0:	f205 40e4 	addw	r0, r5, #1252	@ 0x4e4
 800bca4:	f885 6485 	strb.w	r6, [r5, #1157]	@ 0x485
 800bca8:	f010 fd5e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800bcac:	f505 608c 	add.w	r0, r5, #1120	@ 0x460
 800bcb0:	f010 fd5a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800bcb4:	f894 7294 	ldrb.w	r7, [r4, #660]	@ 0x294
 800bcb8:	b11f      	cbz	r7, 800bcc2 <_ZN14GameScreenView9aiSpecialEv+0x42>
 800bcba:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800bcbe:	2b04      	cmp	r3, #4
 800bcc0:	d003      	beq.n	800bcca <_ZN14GameScreenView9aiSpecialEv+0x4a>
    int actualDamage = calculateSpecialDamage(baseDamage, playerDefending, playerHasShield);
 800bcc2:	f894 7270 	ldrb.w	r7, [r4, #624]	@ 0x270
    if (isDefending) {
 800bcc6:	bb27      	cbnz	r7, 800bd12 <_ZN14GameScreenView9aiSpecialEv+0x92>
    int finalDamage = baseDamage; // SPECIAL KHÔNG ĐƯỢC DOUBLE DAMAGE
 800bcc8:	2628      	movs	r6, #40	@ 0x28
    playerHP -= actualDamage;
 800bcca:	f8d4 325c 	ldr.w	r3, [r4, #604]	@ 0x25c
 800bcce:	1b9b      	subs	r3, r3, r6
    if (playerHP < 0) playerHP = 0;
 800bcd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800bcd4:	f8c4 325c 	str.w	r3, [r4, #604]	@ 0x25c
    showDamageText(actualDamage, 0);
 800bcd8:	2200      	movs	r2, #0
 800bcda:	4631      	mov	r1, r6
 800bcdc:	4628      	mov	r0, r5
 800bcde:	f7ff f888 	bl	800adf2 <_ZN14GameScreenView14showDamageTextEii>
    aiChakraLevel = 0;
 800bce2:	2300      	movs	r3, #0
 800bce4:	f8c4 326c 	str.w	r3, [r4, #620]	@ 0x26c
    if (playerHasShield && actualDamage == 0) {
 800bce8:	b13f      	cbz	r7, 800bcfa <_ZN14GameScreenView9aiSpecialEv+0x7a>
 800bcea:	b936      	cbnz	r6, 800bcfa <_ZN14GameScreenView9aiSpecialEv+0x7a>
        playerPowerUpActive = false;
 800bcec:	f884 6294 	strb.w	r6, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800bcf0:	f8c4 628c 	str.w	r6, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800bcf4:	4628      	mov	r0, r5
 800bcf6:	f7ff fbc5 	bl	800b484 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    updateAIChakraDisplay();
 800bcfa:	4628      	mov	r0, r5
 800bcfc:	f7ff fd99 	bl	800b832 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    updatePlayerHPDisplay();
 800bd00:	4628      	mov	r0, r5
 800bd02:	f7ff fe65 	bl	800b9d0 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    aiActionDone = true;
 800bd06:	2301      	movs	r3, #1
 800bd08:	f884 3297 	strb.w	r3, [r4, #663]	@ 0x297
    aiSpecialUsed = true; // KHÔNG có power-up sau special
 800bd0c:	f884 3273 	strb.w	r3, [r4, #627]	@ 0x273
}
 800bd10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800bd12:	2700      	movs	r7, #0
        finalDamage = 25;
 800bd14:	2619      	movs	r6, #25
 800bd16:	e7d8      	b.n	800bcca <_ZN14GameScreenView9aiSpecialEv+0x4a>

0800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>:
{
 800bd18:	b538      	push	{r3, r4, r5, lr}
 800bd1a:	4604      	mov	r4, r0
    int roundedHP = (aiHP / 10) * 10;
 800bd1c:	f504 5580 	add.w	r5, r4, #4096	@ 0x1000
    hideAllAIHPWidgets();
 800bd20:	f7ff fd0b 	bl	800b73a <_ZN14GameScreenView18hideAllAIHPWidgetsEv>
    int roundedHP = (aiHP / 10) * 10;
 800bd24:	f8d5 3260 	ldr.w	r3, [r5, #608]	@ 0x260
    if (aiHP == 0 || roundedHP == 0) {
 800bd28:	2b09      	cmp	r3, #9
 800bd2a:	dc10      	bgt.n	800bd4e <_ZN14GameScreenView17updateAIHPDisplayEv+0x36>
 800bd2c:	2301      	movs	r3, #1
 800bd2e:	f884 3459 	strb.w	r3, [r4, #1113]	@ 0x459
        BITMAP_HP_0_ID_1.invalidate();
 800bd32:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800bd36:	f010 fd17 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        if (!gameEnded) {
 800bd3a:	f895 3265 	ldrb.w	r3, [r5, #613]	@ 0x265
 800bd3e:	2b00      	cmp	r3, #0
 800bd40:	d16a      	bne.n	800be18 <_ZN14GameScreenView17updateAIHPDisplayEv+0x100>
            endGame(true); // Player thắng
 800bd42:	4620      	mov	r0, r4
 800bd44:	2101      	movs	r1, #1
}
 800bd46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(true); // Player thắng
 800bd4a:	f7ff bda7 	b.w	800b89c <_ZN14GameScreenView7endGameEb>
    int roundedHP = (aiHP / 10) * 10;
 800bd4e:	220a      	movs	r2, #10
 800bd50:	fb93 f1f2 	sdiv	r1, r3, r2
 800bd54:	4351      	muls	r1, r2
    switch (roundedHP) {
 800bd56:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800bd5a:	2a09      	cmp	r2, #9
 800bd5c:	d947      	bls.n	800bdee <_ZN14GameScreenView17updateAIHPDisplayEv+0xd6>
 800bd5e:	293c      	cmp	r1, #60	@ 0x3c
 800bd60:	f04f 0201 	mov.w	r2, #1
 800bd64:	dc1d      	bgt.n	800bda2 <_ZN14GameScreenView17updateAIHPDisplayEv+0x8a>
 800bd66:	f1a3 001e 	sub.w	r0, r3, #30
 800bd6a:	2809      	cmp	r0, #9
 800bd6c:	d94a      	bls.n	800be04 <_ZN14GameScreenView17updateAIHPDisplayEv+0xec>
 800bd6e:	291e      	cmp	r1, #30
 800bd70:	dc0b      	bgt.n	800bd8a <_ZN14GameScreenView17updateAIHPDisplayEv+0x72>
 800bd72:	f1a3 010a 	sub.w	r1, r3, #10
 800bd76:	2909      	cmp	r1, #9
 800bd78:	d949      	bls.n	800be0e <_ZN14GameScreenView17updateAIHPDisplayEv+0xf6>
 800bd7a:	3b14      	subs	r3, #20
 800bd7c:	2b09      	cmp	r3, #9
 800bd7e:	d8d5      	bhi.n	800bd2c <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800bd80:	f884 2401 	strb.w	r2, [r4, #1025]	@ 0x401
            BITMAP_HP_20_ID_1.invalidate();
 800bd84:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800bd88:	e023      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
    switch (roundedHP) {
 800bd8a:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800bd8e:	2909      	cmp	r1, #9
 800bd90:	d933      	bls.n	800bdfa <_ZN14GameScreenView17updateAIHPDisplayEv+0xe2>
 800bd92:	3b32      	subs	r3, #50	@ 0x32
 800bd94:	2b09      	cmp	r3, #9
 800bd96:	d8c9      	bhi.n	800bd2c <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800bd98:	f884 237d 	strb.w	r2, [r4, #893]	@ 0x37d
            BITMAP_HP_50_ID_1.invalidate();
 800bd9c:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800bda0:	e017      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
    switch (roundedHP) {
 800bda2:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800bda6:	2809      	cmp	r0, #9
 800bda8:	d917      	bls.n	800bdda <_ZN14GameScreenView17updateAIHPDisplayEv+0xc2>
 800bdaa:	295a      	cmp	r1, #90	@ 0x5a
 800bdac:	dc0b      	bgt.n	800bdc6 <_ZN14GameScreenView17updateAIHPDisplayEv+0xae>
 800bdae:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800bdb2:	2909      	cmp	r1, #9
 800bdb4:	d916      	bls.n	800bde4 <_ZN14GameScreenView17updateAIHPDisplayEv+0xcc>
 800bdb6:	3b50      	subs	r3, #80	@ 0x50
 800bdb8:	2b09      	cmp	r3, #9
 800bdba:	d8b7      	bhi.n	800bd2c <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800bdbc:	f884 22f9 	strb.w	r2, [r4, #761]	@ 0x2f9
            BITMAP_HP_80_ID_1.invalidate();
 800bdc0:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800bdc4:	e005      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
    switch (roundedHP) {
 800bdc6:	2963      	cmp	r1, #99	@ 0x63
 800bdc8:	ddb0      	ble.n	800bd2c <_ZN14GameScreenView17updateAIHPDisplayEv+0x14>
 800bdca:	f884 22a1 	strb.w	r2, [r4, #673]	@ 0x2a1
            BITMAP_HP_100_ID_1.invalidate();
 800bdce:	f504 701f 	add.w	r0, r4, #636	@ 0x27c
}
 800bdd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID_1.invalidate();
 800bdd6:	f010 bcc7 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800bdda:	f884 22cd 	strb.w	r2, [r4, #717]	@ 0x2cd
            BITMAP_HP_90_ID_1.invalidate();
 800bdde:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800bde2:	e7f6      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800bde4:	f884 2325 	strb.w	r2, [r4, #805]	@ 0x325
            BITMAP_HP_70_ID_1.invalidate();
 800bde8:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800bdec:	e7f1      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800bdee:	2301      	movs	r3, #1
 800bdf0:	f884 3351 	strb.w	r3, [r4, #849]	@ 0x351
            BITMAP_HP_60_ID_1.invalidate();
 800bdf4:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800bdf8:	e7eb      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800bdfa:	f884 23a9 	strb.w	r2, [r4, #937]	@ 0x3a9
            BITMAP_HP_40_ID_1.invalidate();
 800bdfe:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800be02:	e7e6      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800be04:	f884 23d5 	strb.w	r2, [r4, #981]	@ 0x3d5
            BITMAP_HP_30_ID_1.invalidate();
 800be08:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800be0c:	e7e1      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
 800be0e:	f884 242d 	strb.w	r2, [r4, #1069]	@ 0x42d
            BITMAP_HP_10_ID_1.invalidate();
 800be12:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800be16:	e7dc      	b.n	800bdd2 <_ZN14GameScreenView17updateAIHPDisplayEv+0xba>
}
 800be18:	bd38      	pop	{r3, r4, r5, pc}
	...

0800be1c <_ZN14GameScreenView11setupScreenEv>:
{
 800be1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be1e:	4606      	mov	r6, r0
    GameScreenViewBase::setupScreen();
 800be20:	f7f9 fa63 	bl	80052ea <_ZN18GameScreenViewBase11setupScreenEv>
    initGPIO();
 800be24:	4630      	mov	r0, r6
 800be26:	f7fe fe9f 	bl	800ab68 <_ZN14GameScreenView8initGPIOEv>
    randomSeed = HAL_GetTick();
 800be2a:	f004 fc37 	bl	801069c <HAL_GetTick>
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800be2e:	492e      	ldr	r1, [pc, #184]	@ (800bee8 <_ZN14GameScreenView11setupScreenEv+0xcc>)
 800be30:	4b2e      	ldr	r3, [pc, #184]	@ (800beec <_ZN14GameScreenView11setupScreenEv+0xd0>)
    if (randomSeed == 0) randomSeed = 12345;
 800be32:	f243 0239 	movw	r2, #12345	@ 0x3039
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800be36:	f506 5480 	add.w	r4, r6, #4096	@ 0x1000
    if (randomSeed == 0) randomSeed = 12345;
 800be3a:	2800      	cmp	r0, #0
 800be3c:	bf18      	it	ne
 800be3e:	4602      	movne	r2, r0
    menuOpen = false;
 800be40:	2500      	movs	r5, #0
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800be42:	fb01 3302 	mla	r3, r1, r2, r3
    playerHP = 100;
 800be46:	2764      	movs	r7, #100	@ 0x64
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800be48:	f8c4 32bc 	str.w	r3, [r4, #700]	@ 0x2bc
    hideDamageText();
 800be4c:	4630      	mov	r0, r6
    aiHP = 100;
 800be4e:	e9c4 7797 	strd	r7, r7, [r4, #604]	@ 0x25c
    aiChakraLevel = 0;
 800be52:	e9c4 559a 	strd	r5, r5, [r4, #616]	@ 0x268
    playerPowerUpType = 0;
 800be56:	e9c4 55a2 	strd	r5, r5, [r4, #648]	@ 0x288
    playerPowerUpActive = false;
 800be5a:	e9c4 55a4 	strd	r5, r5, [r4, #656]	@ 0x290
    menuOpen = false;
 800be5e:	f8a4 5264 	strh.w	r5, [r4, #612]	@ 0x264
    playerWonGame = false;
 800be62:	f884 5266 	strb.w	r5, [r4, #614]	@ 0x266
    playerDefending = false;
 800be66:	f8c4 5270 	str.w	r5, [r4, #624]	@ 0x270
    hideDamageText();
 800be6a:	f7fe feed 	bl	800ac48 <_ZN14GameScreenView14hideDamageTextEv>
    damageTextAIStartY = 141;
 800be6e:	2263      	movs	r2, #99	@ 0x63
 800be70:	238d      	movs	r3, #141	@ 0x8d
 800be72:	e9c4 23ad 	strd	r2, r3, [r4, #692]	@ 0x2b4
    damageDisplayTimer = 0;
 800be76:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
    damageDisplayActive = false;
 800be7a:	f884 529c 	strb.w	r5, [r4, #668]	@ 0x29c
    currentDamageAmount = 0;
 800be7e:	f8c4 52a0 	str.w	r5, [r4, #672]	@ 0x2a0
    isPlayerDamage = false;
 800be82:	f884 52a4 	strb.w	r5, [r4, #676]	@ 0x2a4
    int personalityRoll = generateRandomNumber(1, 100);
 800be86:	463a      	mov	r2, r7
 800be88:	2101      	movs	r1, #1
 800be8a:	4630      	mov	r0, r6
 800be8c:	f7fe feb4 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    if (personalityRoll <= 70) {
 800be90:	2846      	cmp	r0, #70	@ 0x46
 800be92:	dd03      	ble.n	800be9c <_ZN14GameScreenView11setupScreenEv+0x80>
    } else if (personalityRoll <= 90) {
 800be94:	285b      	cmp	r0, #91	@ 0x5b
 800be96:	bfb4      	ite	lt
 800be98:	460d      	movlt	r5, r1
 800be9a:	2502      	movge	r5, #2
    resetTimer = 0;
 800be9c:	2300      	movs	r3, #0
 800be9e:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
    resetTimerActive = false;
 800bea2:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
    autoReturnTimer = 0;
 800bea6:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
    autoReturnTimerActive = false;
 800beaa:	f884 3284 	strb.w	r3, [r4, #644]	@ 0x284
    hideAllPlayerPowerUps();
 800beae:	4630      	mov	r0, r6
        aiPersonality = 0; // Aggressive
 800beb0:	f8c4 5274 	str.w	r5, [r4, #628]	@ 0x274
    hideAllPlayerPowerUps();
 800beb4:	f7ff fac9 	bl	800b44a <_ZN14GameScreenView21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps();
 800beb8:	4630      	mov	r0, r6
 800beba:	f7ff fb43 	bl	800b544 <_ZN14GameScreenView17hideAllAIPowerUpsEv>
    updatePlayerHPDisplay();
 800bebe:	4630      	mov	r0, r6
 800bec0:	f7ff fd86 	bl	800b9d0 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
    updateAIHPDisplay();
 800bec4:	4630      	mov	r0, r6
 800bec6:	f7ff ff27 	bl	800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>
    updatePlayerChakraDisplay();
 800beca:	4630      	mov	r0, r6
 800becc:	f7ff fc7c 	bl	800b7c8 <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    updateAIChakraDisplay();
 800bed0:	4630      	mov	r0, r6
 800bed2:	f7ff fcae 	bl	800b832 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    resetNarutoState();
 800bed6:	4630      	mov	r0, r6
 800bed8:	f7ff fb83 	bl	800b5e2 <_ZN14GameScreenView16resetNarutoStateEv>
    resetBleachState();
 800bedc:	4630      	mov	r0, r6
}
 800bede:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    resetBleachState();
 800bee2:	f7ff bbb1 	b.w	800b648 <_ZN14GameScreenView16resetBleachStateEv>
 800bee6:	bf00      	nop
 800bee8:	0019660d 	.word	0x0019660d
 800beec:	3c6ef35f 	.word	0x3c6ef35f

0800bef0 <_ZN14GameScreenView19applyInstantPowerUpEbi>:
    switch (type) {
 800bef0:	2a02      	cmp	r2, #2
 800bef2:	d002      	beq.n	800befa <_ZN14GameScreenView19applyInstantPowerUpEbi+0xa>
 800bef4:	2a03      	cmp	r2, #3
 800bef6:	d017      	beq.n	800bf28 <_ZN14GameScreenView19applyInstantPowerUpEbi+0x38>
 800bef8:	4770      	bx	lr
            if (isPlayer) {
 800befa:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800befe:	b149      	cbz	r1, 800bf14 <_ZN14GameScreenView19applyInstantPowerUpEbi+0x24>
                playerHP += 5; // GIẢM TỪ 10 XUỐNG 5
 800bf00:	f8d3 225c 	ldr.w	r2, [r3, #604]	@ 0x25c
 800bf04:	3205      	adds	r2, #5
                if (playerHP > 100) playerHP = 100;
 800bf06:	2a64      	cmp	r2, #100	@ 0x64
 800bf08:	bfa8      	it	ge
 800bf0a:	2264      	movge	r2, #100	@ 0x64
 800bf0c:	f8c3 225c 	str.w	r2, [r3, #604]	@ 0x25c
                updatePlayerHPDisplay();
 800bf10:	f7ff bd5e 	b.w	800b9d0 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
                aiHP += 5; // GIẢM TỪ 10 XUỐNG 5
 800bf14:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 800bf18:	3205      	adds	r2, #5
                if (aiHP > 100) aiHP = 100;
 800bf1a:	2a64      	cmp	r2, #100	@ 0x64
 800bf1c:	bfa8      	it	ge
 800bf1e:	2264      	movge	r2, #100	@ 0x64
 800bf20:	f8c3 2260 	str.w	r2, [r3, #608]	@ 0x260
                updateAIHPDisplay();
 800bf24:	f7ff bef8 	b.w	800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>
            if (isPlayer) {
 800bf28:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800bf2c:	b149      	cbz	r1, 800bf42 <_ZN14GameScreenView19applyInstantPowerUpEbi+0x52>
                playerChakraLevel += 15; // GIẢM TỪ 20 XUỐNG 15
 800bf2e:	f8d3 2268 	ldr.w	r2, [r3, #616]	@ 0x268
 800bf32:	320f      	adds	r2, #15
                if (playerChakraLevel > 100) playerChakraLevel = 100;
 800bf34:	2a64      	cmp	r2, #100	@ 0x64
 800bf36:	bfa8      	it	ge
 800bf38:	2264      	movge	r2, #100	@ 0x64
 800bf3a:	f8c3 2268 	str.w	r2, [r3, #616]	@ 0x268
                updatePlayerChakraDisplay();
 800bf3e:	f7ff bc43 	b.w	800b7c8 <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
                aiChakraLevel += 15; // GIẢM TỪ 20 XUỐNG 15
 800bf42:	f8d3 226c 	ldr.w	r2, [r3, #620]	@ 0x26c
 800bf46:	320f      	adds	r2, #15
                if (aiChakraLevel > 100) aiChakraLevel = 100;
 800bf48:	2a64      	cmp	r2, #100	@ 0x64
 800bf4a:	bfa8      	it	ge
 800bf4c:	2264      	movge	r2, #100	@ 0x64
 800bf4e:	f8c3 226c 	str.w	r2, [r3, #620]	@ 0x26c
                updateAIChakraDisplay();
 800bf52:	f7ff bc6e 	b.w	800b832 <_ZN14GameScreenView21updateAIChakraDisplayEv>

0800bf56 <_ZN14GameScreenView18giveRandomPowerUpsEv>:
{
 800bf56:	b570      	push	{r4, r5, r6, lr}
 800bf58:	4604      	mov	r4, r0
        toggleLED();
 800bf5a:	f7fe fdc3 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800bf5e:	f7fe fdc1 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
 800bf62:	f7fe fdbf 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    int playerRoll = generateRandomNumber(1, 100);
 800bf66:	2264      	movs	r2, #100	@ 0x64
 800bf68:	2101      	movs	r1, #1
 800bf6a:	4620      	mov	r0, r4
 800bf6c:	f7fe fe44 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    if (playerRoll >= 1 && playerRoll <= 35) {
 800bf70:	1e43      	subs	r3, r0, #1
 800bf72:	2b22      	cmp	r3, #34	@ 0x22
 800bf74:	d935      	bls.n	800bfe2 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x8c>
    } else if (playerRoll >= 36 && playerRoll <= 65) {
 800bf76:	f1a0 0324 	sub.w	r3, r0, #36	@ 0x24
 800bf7a:	2b1d      	cmp	r3, #29
 800bf7c:	d933      	bls.n	800bfe6 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x90>
    } else if (playerRoll >= 66 && playerRoll <= 85) {
 800bf7e:	3842      	subs	r0, #66	@ 0x42
        newPlayerPowerUp = 2; // 20% - Heal
 800bf80:	2813      	cmp	r0, #19
 800bf82:	bf8c      	ite	hi
 800bf84:	2203      	movhi	r2, #3
 800bf86:	2202      	movls	r2, #2
    playerPowerUpType = newPlayerPowerUp;
 800bf88:	f504 5680 	add.w	r6, r4, #4096	@ 0x1000
    playerPowerUpActive = true;
 800bf8c:	2501      	movs	r5, #1
    playerPowerUpType = newPlayerPowerUp;
 800bf8e:	f8c6 228c 	str.w	r2, [r6, #652]	@ 0x28c
    applyInstantPowerUp(true, playerPowerUpType);
 800bf92:	4629      	mov	r1, r5
 800bf94:	4620      	mov	r0, r4
    playerPowerUpActive = true;
 800bf96:	f886 5294 	strb.w	r5, [r6, #660]	@ 0x294
    applyInstantPowerUp(true, playerPowerUpType);
 800bf9a:	f7ff ffa9 	bl	800bef0 <_ZN14GameScreenView19applyInstantPowerUpEbi>
    updatePlayerPowerUpDisplay();
 800bf9e:	4620      	mov	r0, r4
 800bfa0:	f7ff fa70 	bl	800b484 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    int aiRoll = generateRandomNumber(1, 100);
 800bfa4:	2264      	movs	r2, #100	@ 0x64
 800bfa6:	4629      	mov	r1, r5
 800bfa8:	4620      	mov	r0, r4
 800bfaa:	f7fe fe25 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    if (aiRoll >= 1 && aiRoll <= 35) {
 800bfae:	1e43      	subs	r3, r0, #1
 800bfb0:	2b22      	cmp	r3, #34	@ 0x22
 800bfb2:	d91a      	bls.n	800bfea <_ZN14GameScreenView18giveRandomPowerUpsEv+0x94>
    } else if (aiRoll >= 36 && aiRoll <= 65) {
 800bfb4:	f1a0 0324 	sub.w	r3, r0, #36	@ 0x24
 800bfb8:	2b1d      	cmp	r3, #29
 800bfba:	d918      	bls.n	800bfee <_ZN14GameScreenView18giveRandomPowerUpsEv+0x98>
    } else if (aiRoll >= 66 && aiRoll <= 85) {
 800bfbc:	3842      	subs	r0, #66	@ 0x42
        newAIPowerUp = 2; // 20% - Heal
 800bfbe:	2813      	cmp	r0, #19
 800bfc0:	bf8c      	ite	hi
 800bfc2:	2203      	movhi	r2, #3
 800bfc4:	2202      	movls	r2, #2
    aiPowerUpActive = true;
 800bfc6:	2301      	movs	r3, #1
    applyInstantPowerUp(false, aiPowerUpType);
 800bfc8:	4620      	mov	r0, r4
    aiPowerUpType = newAIPowerUp;
 800bfca:	f8c6 2290 	str.w	r2, [r6, #656]	@ 0x290
    aiPowerUpActive = true;
 800bfce:	f886 3295 	strb.w	r3, [r6, #661]	@ 0x295
    applyInstantPowerUp(false, aiPowerUpType);
 800bfd2:	2100      	movs	r1, #0
 800bfd4:	f7ff ff8c 	bl	800bef0 <_ZN14GameScreenView19applyInstantPowerUpEbi>
    updateAIPowerUpDisplay();
 800bfd8:	4620      	mov	r0, r4
}
 800bfda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    updateAIPowerUpDisplay();
 800bfde:	f7ff bace 	b.w	800b57e <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
        newPlayerPowerUp = 4; // 35% - Shield (HIGHEST)
 800bfe2:	2204      	movs	r2, #4
 800bfe4:	e7d0      	b.n	800bf88 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x32>
        newPlayerPowerUp = 1; // 30% - Double Damage
 800bfe6:	460a      	mov	r2, r1
 800bfe8:	e7ce      	b.n	800bf88 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x32>
        newAIPowerUp = 4; // 35% - Shield
 800bfea:	2204      	movs	r2, #4
 800bfec:	e7eb      	b.n	800bfc6 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x70>
        newAIPowerUp = 1; // 30% - Double Damage
 800bfee:	462a      	mov	r2, r5
 800bff0:	e7e9      	b.n	800bfc6 <_ZN14GameScreenView18giveRandomPowerUpsEv+0x70>

0800bff2 <_ZN14GameScreenView17checkTurnCompleteEv.part.0>:
void GameScreenView::checkTurnComplete()
 800bff2:	b538      	push	{r3, r4, r5, lr}
        turnCounter++;
 800bff4:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
void GameScreenView::checkTurnComplete()
 800bff8:	4605      	mov	r5, r0
        turnCounter++;
 800bffa:	f8d4 3288 	ldr.w	r3, [r4, #648]	@ 0x288
 800bffe:	3301      	adds	r3, #1
 800c000:	f8c4 3288 	str.w	r3, [r4, #648]	@ 0x288
        toggleLED();
 800c004:	f7fe fd6e 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        if (!playerSpecialUsed && !aiSpecialUsed) {
 800c008:	f894 3272 	ldrb.w	r3, [r4, #626]	@ 0x272
 800c00c:	b963      	cbnz	r3, 800c028 <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x36>
 800c00e:	f894 3273 	ldrb.w	r3, [r4, #627]	@ 0x273
 800c012:	b94b      	cbnz	r3, 800c028 <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x36>
            int powerUpChance = generateRandomNumber(1, 100);
 800c014:	2264      	movs	r2, #100	@ 0x64
 800c016:	2101      	movs	r1, #1
 800c018:	4628      	mov	r0, r5
 800c01a:	f7fe fded 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
            if (powerUpChance <= 20) {
 800c01e:	2814      	cmp	r0, #20
 800c020:	dc02      	bgt.n	800c028 <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x36>
                giveRandomPowerUps();
 800c022:	4628      	mov	r0, r5
 800c024:	f7ff ff97 	bl	800bf56 <_ZN14GameScreenView18giveRandomPowerUpsEv>
        if (playerPowerUpActive && (playerPowerUpType == 2 || playerPowerUpType == 3 || playerPowerUpType == 4)) {
 800c028:	f894 3294 	ldrb.w	r3, [r4, #660]	@ 0x294
 800c02c:	b163      	cbz	r3, 800c048 <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x56>
 800c02e:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
 800c032:	3b02      	subs	r3, #2
 800c034:	2b02      	cmp	r3, #2
 800c036:	d807      	bhi.n	800c048 <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x56>
        playerPowerUpActive = false;
 800c038:	2300      	movs	r3, #0
 800c03a:	f884 3294 	strb.w	r3, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800c03e:	f8c4 328c 	str.w	r3, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800c042:	4628      	mov	r0, r5
 800c044:	f7ff fa1e 	bl	800b484 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
        if (aiPowerUpActive && (aiPowerUpType == 2 || aiPowerUpType == 3 || aiPowerUpType == 4)) {
 800c048:	f894 3295 	ldrb.w	r3, [r4, #661]	@ 0x295
 800c04c:	b163      	cbz	r3, 800c068 <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x76>
 800c04e:	f8d4 3290 	ldr.w	r3, [r4, #656]	@ 0x290
 800c052:	3b02      	subs	r3, #2
 800c054:	2b02      	cmp	r3, #2
 800c056:	d807      	bhi.n	800c068 <_ZN14GameScreenView17checkTurnCompleteEv.part.0+0x76>
        aiPowerUpActive = false;
 800c058:	2300      	movs	r3, #0
 800c05a:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800c05e:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800c062:	4628      	mov	r0, r5
 800c064:	f7ff fa8b 	bl	800b57e <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
        playerActionDone = false;
 800c068:	2300      	movs	r3, #0
 800c06a:	f8a4 3296 	strh.w	r3, [r4, #662]	@ 0x296
        playerSpecialUsed = false;
 800c06e:	f8a4 3272 	strh.w	r3, [r4, #626]	@ 0x272
}
 800c072:	bd38      	pop	{r3, r4, r5, pc}

0800c074 <_ZN14GameScreenView17checkTurnCompleteEv>:
    if (playerActionDone && aiActionDone) {
 800c074:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
 800c078:	f893 2296 	ldrb.w	r2, [r3, #662]	@ 0x296
 800c07c:	b122      	cbz	r2, 800c088 <_ZN14GameScreenView17checkTurnCompleteEv+0x14>
 800c07e:	f893 3297 	ldrb.w	r3, [r3, #663]	@ 0x297
 800c082:	b10b      	cbz	r3, 800c088 <_ZN14GameScreenView17checkTurnCompleteEv+0x14>
 800c084:	f7ff bfb5 	b.w	800bff2 <_ZN14GameScreenView17checkTurnCompleteEv.part.0>
}
 800c088:	4770      	bx	lr
	...

0800c08c <_ZN14GameScreenView15handleTickEventEv>:
{
 800c08c:	b570      	push	{r4, r5, r6, lr}
    if (!gameEnded) {
 800c08e:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800c092:	4605      	mov	r5, r0
    if (!gameEnded) {
 800c094:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800c098:	b9ee      	cbnz	r6, 800c0d6 <_ZN14GameScreenView15handleTickEventEv+0x4a>
        if (resetTimerActive)
 800c09a:	f894 327c 	ldrb.w	r3, [r4, #636]	@ 0x27c
 800c09e:	b1ab      	cbz	r3, 800c0cc <_ZN14GameScreenView15handleTickEventEv+0x40>
            resetTimer += 16;
 800c0a0:	f8d4 3278 	ldr.w	r3, [r4, #632]	@ 0x278
 800c0a4:	3310      	adds	r3, #16
            if (resetTimer >= RESET_TIME_MS)
 800c0a6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
            resetTimer += 16;
 800c0aa:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
            if (resetTimer >= RESET_TIME_MS)
 800c0ae:	db0d      	blt.n	800c0cc <_ZN14GameScreenView15handleTickEventEv+0x40>
                resetNarutoState();
 800c0b0:	f7ff fa97 	bl	800b5e2 <_ZN14GameScreenView16resetNarutoStateEv>
                resetBleachState();
 800c0b4:	4628      	mov	r0, r5
 800c0b6:	f7ff fac7 	bl	800b648 <_ZN14GameScreenView16resetBleachStateEv>
                resetTimerActive = false;
 800c0ba:	f884 627c 	strb.w	r6, [r4, #636]	@ 0x27c
                resetTimer = 0;
 800c0be:	f8c4 6278 	str.w	r6, [r4, #632]	@ 0x278
                playerDefending = false;
 800c0c2:	f8a4 6270 	strh.w	r6, [r4, #624]	@ 0x270
                checkTurnComplete();
 800c0c6:	4628      	mov	r0, r5
 800c0c8:	f7ff ffd4 	bl	800c074 <_ZN14GameScreenView17checkTurnCompleteEv>
        updateDamageDisplay();
 800c0cc:	4628      	mov	r0, r5
}
 800c0ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        updateDamageDisplay();
 800c0d2:	f7ff b82b 	b.w	800b12c <_ZN14GameScreenView19updateDamageDisplayEv>
        if (autoReturnTimerActive) {
 800c0d6:	f894 3284 	ldrb.w	r3, [r4, #644]	@ 0x284
 800c0da:	b1eb      	cbz	r3, 800c118 <_ZN14GameScreenView15handleTickEventEv+0x8c>
            autoReturnTimer += 16; // TouchGFX tick ~16ms
 800c0dc:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800c0e0:	f241 726f 	movw	r2, #5999	@ 0x176f
            autoReturnTimer += 16; // TouchGFX tick ~16ms
 800c0e4:	3310      	adds	r3, #16
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800c0e6:	4293      	cmp	r3, r2
            autoReturnTimer += 16; // TouchGFX tick ~16ms
 800c0e8:	f8c4 3280 	str.w	r3, [r4, #640]	@ 0x280
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800c0ec:	dd14      	ble.n	800c118 <_ZN14GameScreenView15handleTickEventEv+0x8c>
                HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800c0ee:	480b      	ldr	r0, [pc, #44]	@ (800c11c <_ZN14GameScreenView15handleTickEventEv+0x90>)
 800c0f0:	2200      	movs	r2, #0
 800c0f2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800c0f6:	f004 fd31 	bl	8010b5c <HAL_GPIO_WritePin>
                if (playerWonGame) {
 800c0fa:	f894 3266 	ldrb.w	r3, [r4, #614]	@ 0x266
 800c0fe:	b12b      	cbz	r3, 800c10c <_ZN14GameScreenView15handleTickEventEv+0x80>
    virtual ~GameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800c100:	f00f f980 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800c104:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    application().gotoBackUpScreenScreenNoTransition();
 800c108:	f7f7 bf32 	b.w	8003f70 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
 800c10c:	f00f f97a 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800c110:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    application().gotoMainMenuScreenScreenNoTransition();
 800c114:	f7f7 bf0c 	b.w	8003f30 <_ZN23FrontendApplicationBase36gotoMainMenuScreenScreenNoTransitionEv>
}
 800c118:	bd70      	pop	{r4, r5, r6, pc}
 800c11a:	bf00      	nop
 800c11c:	40021800 	.word	0x40021800

0800c120 <_ZN14GameScreenView12playerAttackEv>:
{
 800c120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c124:	4605      	mov	r5, r0
    resetNarutoState();
 800c126:	f7ff fa5c 	bl	800b5e2 <_ZN14GameScreenView16resetNarutoStateEv>
 800c12a:	2300      	movs	r3, #0
 800c12c:	f885 358d 	strb.w	r3, [r5, #1421]	@ 0x58d
 800c130:	2301      	movs	r3, #1
 800c132:	f885 3669 	strb.w	r3, [r5, #1641]	@ 0x669
    naruto_atk.invalidate();
 800c136:	f205 6044 	addw	r0, r5, #1604	@ 0x644
 800c13a:	f010 fb15 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800c13e:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
    naruto.invalidate();
 800c142:	f505 60ad 	add.w	r0, r5, #1384	@ 0x568
 800c146:	f010 fb0f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800c14a:	2208      	movs	r2, #8
 800c14c:	2103      	movs	r1, #3
 800c14e:	4628      	mov	r0, r5
 800c150:	f7fe fd52 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800c154:	f894 7294 	ldrb.w	r7, [r4, #660]	@ 0x294
 800c158:	b127      	cbz	r7, 800c164 <_ZN14GameScreenView12playerAttackEv+0x44>
 800c15a:	f8d4 728c 	ldr.w	r7, [r4, #652]	@ 0x28c
 800c15e:	1e7b      	subs	r3, r7, #1
 800c160:	425f      	negs	r7, r3
 800c162:	415f      	adcs	r7, r3
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800c164:	f894 8295 	ldrb.w	r8, [r4, #661]	@ 0x295
 800c168:	f1b8 0f00 	cmp.w	r8, #0
 800c16c:	d003      	beq.n	800c176 <_ZN14GameScreenView12playerAttackEv+0x56>
 800c16e:	f8d4 3290 	ldr.w	r3, [r4, #656]	@ 0x290
 800c172:	2b04      	cmp	r3, #4
 800c174:	d048      	beq.n	800c208 <_ZN14GameScreenView12playerAttackEv+0xe8>
    if (hasShield) {
 800c176:	f894 1271 	ldrb.w	r1, [r4, #625]	@ 0x271
 800c17a:	463a      	mov	r2, r7
 800c17c:	f7fe fc96 	bl	800aaac <_ZN14GameScreenView15calculateDamageEibbb.part.0>
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800c180:	f04f 0800 	mov.w	r8, #0
 800c184:	4606      	mov	r6, r0
    aiHP -= actualDamage;
 800c186:	f8d4 3260 	ldr.w	r3, [r4, #608]	@ 0x260
 800c18a:	1b9b      	subs	r3, r3, r6
    if (aiHP < 0) aiHP = 0;
 800c18c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c190:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
    showDamageText(0, actualDamage);
 800c194:	4632      	mov	r2, r6
 800c196:	2100      	movs	r1, #0
 800c198:	4628      	mov	r0, r5
 800c19a:	f7fe fe2a 	bl	800adf2 <_ZN14GameScreenView14showDamageTextEii>
    playerChakraLevel += generateRandomNumber(5, 10);
 800c19e:	220a      	movs	r2, #10
 800c1a0:	2105      	movs	r1, #5
 800c1a2:	4628      	mov	r0, r5
 800c1a4:	f7fe fd28 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800c1a8:	f8d4 3268 	ldr.w	r3, [r4, #616]	@ 0x268
 800c1ac:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800c1ae:	2b64      	cmp	r3, #100	@ 0x64
 800c1b0:	bfa8      	it	ge
 800c1b2:	2364      	movge	r3, #100	@ 0x64
 800c1b4:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
    if (hasDoubleAttack) {
 800c1b8:	b13f      	cbz	r7, 800c1ca <_ZN14GameScreenView12playerAttackEv+0xaa>
        playerPowerUpActive = false;
 800c1ba:	2300      	movs	r3, #0
 800c1bc:	f884 3294 	strb.w	r3, [r4, #660]	@ 0x294
        playerPowerUpType = 0;
 800c1c0:	f8c4 328c 	str.w	r3, [r4, #652]	@ 0x28c
        updatePlayerPowerUpDisplay();
 800c1c4:	4628      	mov	r0, r5
 800c1c6:	f7ff f95d 	bl	800b484 <_ZN14GameScreenView26updatePlayerPowerUpDisplayEv>
    if (aiHasShield && actualDamage == 0) {
 800c1ca:	f1b8 0f00 	cmp.w	r8, #0
 800c1ce:	d007      	beq.n	800c1e0 <_ZN14GameScreenView12playerAttackEv+0xc0>
 800c1d0:	b936      	cbnz	r6, 800c1e0 <_ZN14GameScreenView12playerAttackEv+0xc0>
        aiPowerUpActive = false;
 800c1d2:	f884 6295 	strb.w	r6, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800c1d6:	f8c4 6290 	str.w	r6, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800c1da:	4628      	mov	r0, r5
 800c1dc:	f7ff f9cf 	bl	800b57e <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
    updateAIHPDisplay();
 800c1e0:	4628      	mov	r0, r5
 800c1e2:	f7ff fd99 	bl	800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>
    updatePlayerChakraDisplay();
 800c1e6:	4628      	mov	r0, r5
 800c1e8:	f7ff faee 	bl	800b7c8 <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800c1ec:	f7fe fc7a 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800c1f0:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800c1f2:	2200      	movs	r2, #0
    playerActionDone = true;
 800c1f4:	f884 3296 	strb.w	r3, [r4, #662]	@ 0x296
    playerSpecialUsed = false;
 800c1f8:	f884 2272 	strb.w	r2, [r4, #626]	@ 0x272
    resetTimer = 0;
 800c1fc:	f8c4 2278 	str.w	r2, [r4, #632]	@ 0x278
    resetTimerActive = true;
 800c200:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
}
 800c204:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return 0; // Shield chặn hoàn toàn
 800c208:	2600      	movs	r6, #0
 800c20a:	e7bc      	b.n	800c186 <_ZN14GameScreenView12playerAttackEv+0x66>

0800c20c <_ZN14GameScreenView13playerSpecialEv>:
{
 800c20c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (gameEnded || playerChakraLevel < 100) return;
 800c20e:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 800c212:	4605      	mov	r5, r0
    if (gameEnded || playerChakraLevel < 100) return;
 800c214:	f894 6265 	ldrb.w	r6, [r4, #613]	@ 0x265
 800c218:	2e00      	cmp	r6, #0
 800c21a:	d155      	bne.n	800c2c8 <_ZN14GameScreenView13playerSpecialEv+0xbc>
 800c21c:	f8d4 3268 	ldr.w	r3, [r4, #616]	@ 0x268
 800c220:	2b63      	cmp	r3, #99	@ 0x63
 800c222:	dd51      	ble.n	800c2c8 <_ZN14GameScreenView13playerSpecialEv+0xbc>
    resetNarutoState();
 800c224:	f7ff f9dd 	bl	800b5e2 <_ZN14GameScreenView16resetNarutoStateEv>
 800c228:	2301      	movs	r3, #1
 800c22a:	f885 3611 	strb.w	r3, [r5, #1553]	@ 0x611
    naruto_spe.invalidate();
 800c22e:	f205 50ec 	addw	r0, r5, #1516	@ 0x5ec
 800c232:	f885 658d 	strb.w	r6, [r5, #1421]	@ 0x58d
 800c236:	f010 fa97 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800c23a:	f505 60ad 	add.w	r0, r5, #1384	@ 0x568
 800c23e:	f010 fa93 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800c242:	f894 7295 	ldrb.w	r7, [r4, #661]	@ 0x295
 800c246:	b11f      	cbz	r7, 800c250 <_ZN14GameScreenView13playerSpecialEv+0x44>
 800c248:	f8d4 3290 	ldr.w	r3, [r4, #656]	@ 0x290
 800c24c:	2b04      	cmp	r3, #4
 800c24e:	d003      	beq.n	800c258 <_ZN14GameScreenView13playerSpecialEv+0x4c>
    int actualDamage = calculateSpecialDamage(baseDamage, aiDefending, aiHasShield);
 800c250:	f894 7271 	ldrb.w	r7, [r4, #625]	@ 0x271
    if (isDefending) {
 800c254:	bbcf      	cbnz	r7, 800c2ca <_ZN14GameScreenView13playerSpecialEv+0xbe>
    int finalDamage = baseDamage; // SPECIAL KHÔNG ĐƯỢC DOUBLE DAMAGE
 800c256:	2628      	movs	r6, #40	@ 0x28
    aiHP -= actualDamage;
 800c258:	f8d4 3260 	ldr.w	r3, [r4, #608]	@ 0x260
 800c25c:	1b9b      	subs	r3, r3, r6
    if (aiHP < 0) aiHP = 0;
 800c25e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c262:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
    showDamageText(0, actualDamage);
 800c266:	4632      	mov	r2, r6
 800c268:	2100      	movs	r1, #0
 800c26a:	4628      	mov	r0, r5
 800c26c:	f7fe fdc1 	bl	800adf2 <_ZN14GameScreenView14showDamageTextEii>
    playerChakraLevel = 0;
 800c270:	2300      	movs	r3, #0
 800c272:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
    if (aiHasShield && actualDamage == 0) {
 800c276:	b13f      	cbz	r7, 800c288 <_ZN14GameScreenView13playerSpecialEv+0x7c>
 800c278:	b936      	cbnz	r6, 800c288 <_ZN14GameScreenView13playerSpecialEv+0x7c>
        aiPowerUpActive = false;
 800c27a:	f884 6295 	strb.w	r6, [r4, #661]	@ 0x295
        aiPowerUpType = 0;
 800c27e:	f8c4 6290 	str.w	r6, [r4, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800c282:	4628      	mov	r0, r5
 800c284:	f7ff f97b 	bl	800b57e <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
    updatePlayerChakraDisplay();
 800c288:	4628      	mov	r0, r5
 800c28a:	f7ff fa9d 	bl	800b7c8 <_ZN14GameScreenView25updatePlayerChakraDisplayEv>
    updateAIHPDisplay();
 800c28e:	4628      	mov	r0, r5
 800c290:	f7ff fd42 	bl	800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>
    if (aiHP <= 0) {
 800c294:	f8d4 3260 	ldr.w	r3, [r4, #608]	@ 0x260
    playerActionDone = true;
 800c298:	2601      	movs	r6, #1
    if (aiHP <= 0) {
 800c29a:	2b00      	cmp	r3, #0
    playerActionDone = true;
 800c29c:	f884 6296 	strb.w	r6, [r4, #662]	@ 0x296
    playerSpecialUsed = true; // KHÔNG có power-up sau special
 800c2a0:	f884 6272 	strb.w	r6, [r4, #626]	@ 0x272
    if (aiHP <= 0) {
 800c2a4:	dc08      	bgt.n	800c2b8 <_ZN14GameScreenView13playerSpecialEv+0xac>
        toggleLED();
 800c2a6:	f7fe fc1d 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
        if (!gameEnded) {
 800c2aa:	f894 3265 	ldrb.w	r3, [r4, #613]	@ 0x265
 800c2ae:	b91b      	cbnz	r3, 800c2b8 <_ZN14GameScreenView13playerSpecialEv+0xac>
            endGame(true);
 800c2b0:	4631      	mov	r1, r6
 800c2b2:	4628      	mov	r0, r5
 800c2b4:	f7ff faf2 	bl	800b89c <_ZN14GameScreenView7endGameEb>
    toggleLED();
 800c2b8:	f7fe fc14 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
    resetTimer = 0;
 800c2bc:	2300      	movs	r3, #0
 800c2be:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
    resetTimerActive = true;
 800c2c2:	2301      	movs	r3, #1
 800c2c4:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
}
 800c2c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    bool aiHasShield = (aiPowerUpActive && aiPowerUpType == 4);
 800c2ca:	2700      	movs	r7, #0
        finalDamage = 25;
 800c2cc:	2619      	movs	r6, #25
 800c2ce:	e7c3      	b.n	800c258 <_ZN14GameScreenView13playerSpecialEv+0x4c>

0800c2d0 <_ZN14GameScreenView8aiDefendEv>:
{
 800c2d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (gameEnded) return;
 800c2d2:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 800c2d6:	4604      	mov	r4, r0
    if (gameEnded) return;
 800c2d8:	f895 6265 	ldrb.w	r6, [r5, #613]	@ 0x265
 800c2dc:	2e00      	cmp	r6, #0
 800c2de:	d146      	bne.n	800c36e <_ZN14GameScreenView8aiDefendEv+0x9e>
 800c2e0:	2701      	movs	r7, #1
    resetBleachState();
 800c2e2:	f7ff f9b1 	bl	800b648 <_ZN14GameScreenView16resetBleachStateEv>
    bleach_def.invalidate();
 800c2e6:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800c2ea:	f884 6485 	strb.w	r6, [r4, #1157]	@ 0x485
 800c2ee:	f884 7535 	strb.w	r7, [r4, #1333]	@ 0x535
 800c2f2:	f010 fa39 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800c2f6:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800c2fa:	f010 fa35 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(2, 5);
 800c2fe:	2205      	movs	r2, #5
 800c300:	2102      	movs	r1, #2
    aiDefending = true;
 800c302:	f885 7271 	strb.w	r7, [r5, #625]	@ 0x271
    int healAmount = generateRandomNumber(2, 5);
 800c306:	4620      	mov	r0, r4
 800c308:	f7fe fc76 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    aiHP += healAmount;
 800c30c:	f8d5 3260 	ldr.w	r3, [r5, #608]	@ 0x260
 800c310:	4403      	add	r3, r0
    if (aiHP > 100) aiHP = 100;
 800c312:	2b64      	cmp	r3, #100	@ 0x64
 800c314:	bfa8      	it	ge
 800c316:	2364      	movge	r3, #100	@ 0x64
 800c318:	f8c5 3260 	str.w	r3, [r5, #608]	@ 0x260
    aiChakraLevel += generateRandomNumber(8, 15);
 800c31c:	220f      	movs	r2, #15
 800c31e:	2108      	movs	r1, #8
 800c320:	4620      	mov	r0, r4
 800c322:	f7fe fc69 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800c326:	f8d5 326c 	ldr.w	r3, [r5, #620]	@ 0x26c
 800c32a:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800c32c:	2b64      	cmp	r3, #100	@ 0x64
 800c32e:	bfa8      	it	ge
 800c330:	2364      	movge	r3, #100	@ 0x64
 800c332:	f8c5 326c 	str.w	r3, [r5, #620]	@ 0x26c
    showDamageText(0, 0);
 800c336:	4632      	mov	r2, r6
 800c338:	4631      	mov	r1, r6
 800c33a:	4620      	mov	r0, r4
 800c33c:	f7fe fd59 	bl	800adf2 <_ZN14GameScreenView14showDamageTextEii>
    if (aiPowerUpActive && aiPowerUpType == 1) {
 800c340:	f895 3295 	ldrb.w	r3, [r5, #661]	@ 0x295
 800c344:	b153      	cbz	r3, 800c35c <_ZN14GameScreenView8aiDefendEv+0x8c>
 800c346:	f8d5 3290 	ldr.w	r3, [r5, #656]	@ 0x290
 800c34a:	42bb      	cmp	r3, r7
 800c34c:	d106      	bne.n	800c35c <_ZN14GameScreenView8aiDefendEv+0x8c>
        aiPowerUpActive = false;
 800c34e:	f885 6295 	strb.w	r6, [r5, #661]	@ 0x295
        aiPowerUpType = 0;
 800c352:	f8c5 6290 	str.w	r6, [r5, #656]	@ 0x290
        updateAIPowerUpDisplay();
 800c356:	4620      	mov	r0, r4
 800c358:	f7ff f911 	bl	800b57e <_ZN14GameScreenView22updateAIPowerUpDisplayEv>
    updateAIHPDisplay();
 800c35c:	4620      	mov	r0, r4
 800c35e:	f7ff fcdb 	bl	800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>
    updateAIChakraDisplay();
 800c362:	4620      	mov	r0, r4
 800c364:	f7ff fa65 	bl	800b832 <_ZN14GameScreenView21updateAIChakraDisplayEv>
    aiActionDone = true;
 800c368:	2301      	movs	r3, #1
 800c36a:	f885 3297 	strb.w	r3, [r5, #663]	@ 0x297
}
 800c36e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c370 <_ZN14GameScreenView15performAIActionEv>:
{
 800c370:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded || aiHP <= 0) {
 800c372:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
{
 800c376:	4605      	mov	r5, r0
    if (gameEnded || aiHP <= 0) {
 800c378:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c37c:	2b00      	cmp	r3, #0
 800c37e:	f040 80d9 	bne.w	800c534 <_ZN14GameScreenView15performAIActionEv+0x1c4>
 800c382:	f8d6 3260 	ldr.w	r3, [r6, #608]	@ 0x260
 800c386:	2b00      	cmp	r3, #0
 800c388:	f340 80d4 	ble.w	800c534 <_ZN14GameScreenView15performAIActionEv+0x1c4>
    if (playerHP <= 0) {
 800c38c:	f8d6 225c 	ldr.w	r2, [r6, #604]	@ 0x25c
 800c390:	2a00      	cmp	r2, #0
 800c392:	f340 80cf 	ble.w	800c534 <_ZN14GameScreenView15performAIActionEv+0x1c4>
    if (aiPowerUpActive) {
 800c396:	f896 1295 	ldrb.w	r1, [r6, #661]	@ 0x295
 800c39a:	b129      	cbz	r1, 800c3a8 <_ZN14GameScreenView15performAIActionEv+0x38>
        switch(aiPowerUpType) {
 800c39c:	f8d6 1290 	ldr.w	r1, [r6, #656]	@ 0x290
 800c3a0:	2901      	cmp	r1, #1
 800c3a2:	d024      	beq.n	800c3ee <_ZN14GameScreenView15performAIActionEv+0x7e>
 800c3a4:	2904      	cmp	r1, #4
 800c3a6:	d03c      	beq.n	800c422 <_ZN14GameScreenView15performAIActionEv+0xb2>
        bool playerCanSpecial = (playerChakraLevel >= 100);
 800c3a8:	f8d6 0268 	ldr.w	r0, [r6, #616]	@ 0x268
        switch(aiPersonality)
 800c3ac:	f8d6 1274 	ldr.w	r1, [r6, #628]	@ 0x274
        int baseDefendBonus = 0;
 800c3b0:	2863      	cmp	r0, #99	@ 0x63
 800c3b2:	bfcc      	ite	gt
 800c3b4:	2419      	movgt	r4, #25
 800c3b6:	2400      	movle	r4, #0
        switch(aiPersonality)
 800c3b8:	2901      	cmp	r1, #1
 800c3ba:	d061      	beq.n	800c480 <_ZN14GameScreenView15performAIActionEv+0x110>
 800c3bc:	2902      	cmp	r1, #2
 800c3be:	f000 8094 	beq.w	800c4ea <_ZN14GameScreenView15performAIActionEv+0x17a>
 800c3c2:	bb49      	cbnz	r1, 800c418 <_ZN14GameScreenView15performAIActionEv+0xa8>
                if (aiChakraLevel >= 100) {
 800c3c4:	f8d6 126c 	ldr.w	r1, [r6, #620]	@ 0x26c
 800c3c8:	2963      	cmp	r1, #99	@ 0x63
 800c3ca:	dd46      	ble.n	800c45a <_ZN14GameScreenView15performAIActionEv+0xea>
                    if (aiHPPercent >= 80) {
 800c3cc:	2b4f      	cmp	r3, #79	@ 0x4f
 800c3ce:	dd3b      	ble.n	800c448 <_ZN14GameScreenView15performAIActionEv+0xd8>
                        defendChance = 50 + baseDefendBonus;
 800c3d0:	3432      	adds	r4, #50	@ 0x32
                    if (playerHPPercent <= 25) {
 800c3d2:	2a19      	cmp	r2, #25
                        defendChance -= 10;
 800c3d4:	bfd8      	it	le
 800c3d6:	3c0a      	suble	r4, #10
                    int roll = generateRandomNumber(1, 100);
 800c3d8:	2264      	movs	r2, #100	@ 0x64
 800c3da:	2101      	movs	r1, #1
 800c3dc:	4628      	mov	r0, r5
 800c3de:	f7fe fc0b 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                    if (defendChance > 70) defendChance = 70;
 800c3e2:	2c46      	cmp	r4, #70	@ 0x46
 800c3e4:	bfa8      	it	ge
 800c3e6:	2446      	movge	r4, #70	@ 0x46
                    if (roll <= defendChance) {
 800c3e8:	4284      	cmp	r4, r0
 800c3ea:	da0c      	bge.n	800c406 <_ZN14GameScreenView15performAIActionEv+0x96>
 800c3ec:	e023      	b.n	800c436 <_ZN14GameScreenView15performAIActionEv+0xc6>
                if (aiChakraLevel >= 100) {
 800c3ee:	f8d6 326c 	ldr.w	r3, [r6, #620]	@ 0x26c
 800c3f2:	2b63      	cmp	r3, #99	@ 0x63
                    int roll = generateRandomNumber(1, 100);
 800c3f4:	f04f 0264 	mov.w	r2, #100	@ 0x64
                if (aiChakraLevel >= 100) {
 800c3f8:	dd0a      	ble.n	800c410 <_ZN14GameScreenView15performAIActionEv+0xa0>
                    int roll = generateRandomNumber(1, 100);
 800c3fa:	f7fe fbfd 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                    if (roll <= 80) {
 800c3fe:	2850      	cmp	r0, #80	@ 0x50
 800c400:	dd0a      	ble.n	800c418 <_ZN14GameScreenView15performAIActionEv+0xa8>
                    } else if (roll <= 90) {
 800c402:	285a      	cmp	r0, #90	@ 0x5a
 800c404:	dd17      	ble.n	800c436 <_ZN14GameScreenView15performAIActionEv+0xc6>
            if (!gameEnded && aiHP > 0) aiDefend();
 800c406:	4628      	mov	r0, r5
}
 800c408:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && aiHP > 0) aiDefend();
 800c40c:	f7ff bf60 	b.w	800c2d0 <_ZN14GameScreenView8aiDefendEv>
                    if (generateRandomNumber(1, 100) <= 90) {
 800c410:	f7fe fbf2 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800c414:	285a      	cmp	r0, #90	@ 0x5a
 800c416:	dcf6      	bgt.n	800c406 <_ZN14GameScreenView15performAIActionEv+0x96>
            if (!gameEnded && aiHP > 0) aiAttack();
 800c418:	4628      	mov	r0, r5
}
 800c41a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && aiHP > 0) aiAttack();
 800c41e:	f7ff bbbb 	b.w	800bb98 <_ZN14GameScreenView8aiAttackEv>
                if (aiChakraLevel >= 100) {
 800c422:	f8d6 326c 	ldr.w	r3, [r6, #620]	@ 0x26c
 800c426:	2b63      	cmp	r3, #99	@ 0x63
 800c428:	ddf6      	ble.n	800c418 <_ZN14GameScreenView15performAIActionEv+0xa8>
                    if (generateRandomNumber(1, 100) <= 50) {
 800c42a:	2264      	movs	r2, #100	@ 0x64
 800c42c:	2101      	movs	r1, #1
 800c42e:	f7fe fbe3 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800c432:	2832      	cmp	r0, #50	@ 0x32
 800c434:	dcf0      	bgt.n	800c418 <_ZN14GameScreenView15performAIActionEv+0xa8>
            if (!gameEnded && aiHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800c436:	f8d6 326c 	ldr.w	r3, [r6, #620]	@ 0x26c
 800c43a:	2b63      	cmp	r3, #99	@ 0x63
 800c43c:	dd7a      	ble.n	800c534 <_ZN14GameScreenView15performAIActionEv+0x1c4>
 800c43e:	4628      	mov	r0, r5
}
 800c440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && aiHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800c444:	f7ff bc1c 	b.w	800bc80 <_ZN14GameScreenView9aiSpecialEv>
                    } else if (aiHPPercent >= 60) {
 800c448:	2b3b      	cmp	r3, #59	@ 0x3b
 800c44a:	dd01      	ble.n	800c450 <_ZN14GameScreenView15performAIActionEv+0xe0>
                        defendChance = 40 + baseDefendBonus;
 800c44c:	3428      	adds	r4, #40	@ 0x28
                        specialChance = 60 - (baseDefendBonus / 2);
 800c44e:	e7c0      	b.n	800c3d2 <_ZN14GameScreenView15performAIActionEv+0x62>
                    } else if (aiHPPercent >= 30) {
 800c450:	2b1d      	cmp	r3, #29
                        defendChance = 30 + baseDefendBonus;
 800c452:	bfcc      	ite	gt
 800c454:	341e      	addgt	r4, #30
                        defendChance = 20 + baseDefendBonus;
 800c456:	3414      	addle	r4, #20
                        specialChance = 80 - (baseDefendBonus / 2);
 800c458:	e7bb      	b.n	800c3d2 <_ZN14GameScreenView15performAIActionEv+0x62>
                    if (aiHPPercent >= 70) {
 800c45a:	2b45      	cmp	r3, #69	@ 0x45
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c45c:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800c460:	f04f 0101 	mov.w	r1, #1
 800c464:	4628      	mov	r0, r5
                    if (aiHPPercent >= 70) {
 800c466:	dd03      	ble.n	800c470 <_ZN14GameScreenView15performAIActionEv+0x100>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c468:	f7fe fbc6 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 30 + baseDefendBonus;
 800c46c:	341e      	adds	r4, #30
 800c46e:	e004      	b.n	800c47a <_ZN14GameScreenView15performAIActionEv+0x10a>
                    } else if (aiHPPercent >= 40) {
 800c470:	2b27      	cmp	r3, #39	@ 0x27
 800c472:	ddf9      	ble.n	800c468 <_ZN14GameScreenView15performAIActionEv+0xf8>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c474:	f7fe fbc0 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 50 + baseDefendBonus;
 800c478:	3432      	adds	r4, #50	@ 0x32
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c47a:	42a0      	cmp	r0, r4
 800c47c:	ddc3      	ble.n	800c406 <_ZN14GameScreenView15performAIActionEv+0x96>
 800c47e:	e7cb      	b.n	800c418 <_ZN14GameScreenView15performAIActionEv+0xa8>
                if (aiChakraLevel >= 100) {
 800c480:	f8d6 026c 	ldr.w	r0, [r6, #620]	@ 0x26c
 800c484:	2863      	cmp	r0, #99	@ 0x63
 800c486:	dd17      	ble.n	800c4b8 <_ZN14GameScreenView15performAIActionEv+0x148>
                    if (aiHPPercent >= 80) {
 800c488:	2b4f      	cmp	r3, #79	@ 0x4f
 800c48a:	dd0c      	ble.n	800c4a6 <_ZN14GameScreenView15performAIActionEv+0x136>
                        defendChance = 70 + baseDefendBonus;
 800c48c:	3446      	adds	r4, #70	@ 0x46
                    if (playerHPPercent <= 20) {
 800c48e:	2a14      	cmp	r2, #20
                        defendChance -= 5;
 800c490:	bfd8      	it	le
 800c492:	3c05      	suble	r4, #5
                    int roll = generateRandomNumber(1, 100);
 800c494:	2264      	movs	r2, #100	@ 0x64
 800c496:	2101      	movs	r1, #1
 800c498:	4628      	mov	r0, r5
 800c49a:	f7fe fbad 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                    if (defendChance > 85) defendChance = 85;
 800c49e:	2c55      	cmp	r4, #85	@ 0x55
 800c4a0:	bfa8      	it	ge
 800c4a2:	2455      	movge	r4, #85	@ 0x55
 800c4a4:	e7a0      	b.n	800c3e8 <_ZN14GameScreenView15performAIActionEv+0x78>
                    } else if (aiHPPercent >= 50) {
 800c4a6:	2b31      	cmp	r3, #49	@ 0x31
 800c4a8:	dd01      	ble.n	800c4ae <_ZN14GameScreenView15performAIActionEv+0x13e>
                        defendChance = 60 + baseDefendBonus;
 800c4aa:	343c      	adds	r4, #60	@ 0x3c
                        specialChance = 40 - (baseDefendBonus / 2);
 800c4ac:	e7ef      	b.n	800c48e <_ZN14GameScreenView15performAIActionEv+0x11e>
                    } else if (aiHPPercent >= 25) {
 800c4ae:	2b18      	cmp	r3, #24
                        defendChance = 45 + baseDefendBonus;
 800c4b0:	bfcc      	ite	gt
 800c4b2:	342d      	addgt	r4, #45	@ 0x2d
                        defendChance = 30 + baseDefendBonus;
 800c4b4:	341e      	addle	r4, #30
                        specialChance = 70 - (baseDefendBonus / 2);
 800c4b6:	e7ea      	b.n	800c48e <_ZN14GameScreenView15performAIActionEv+0x11e>
                    if (aiHPPercent >= 60) {
 800c4b8:	2b3b      	cmp	r3, #59	@ 0x3b
 800c4ba:	dd09      	ble.n	800c4d0 <_ZN14GameScreenView15performAIActionEv+0x160>
                        int defendChance = 80 + baseDefendBonus;
 800c4bc:	2c0f      	cmp	r4, #15
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c4be:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800c4c2:	4628      	mov	r0, r5
                        int defendChance = 80 + baseDefendBonus;
 800c4c4:	bfcc      	ite	gt
 800c4c6:	245f      	movgt	r4, #95	@ 0x5f
 800c4c8:	2450      	movle	r4, #80	@ 0x50
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c4ca:	f7fe fb95 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800c4ce:	e7d4      	b.n	800c47a <_ZN14GameScreenView15performAIActionEv+0x10a>
                    } else if (aiHPPercent >= 30) {
 800c4d0:	2b1d      	cmp	r3, #29
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c4d2:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800c4d6:	4628      	mov	r0, r5
                    } else if (aiHPPercent >= 30) {
 800c4d8:	dd03      	ble.n	800c4e2 <_ZN14GameScreenView15performAIActionEv+0x172>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c4da:	f7fe fb8d 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 65 + baseDefendBonus;
 800c4de:	3441      	adds	r4, #65	@ 0x41
 800c4e0:	e7cb      	b.n	800c47a <_ZN14GameScreenView15performAIActionEv+0x10a>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c4e2:	f7fe fb89 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 40 + baseDefendBonus;
 800c4e6:	3428      	adds	r4, #40	@ 0x28
 800c4e8:	e7c7      	b.n	800c47a <_ZN14GameScreenView15performAIActionEv+0x10a>
                if (aiChakraLevel >= 100) {
 800c4ea:	f8d6 226c 	ldr.w	r2, [r6, #620]	@ 0x26c
 800c4ee:	2a63      	cmp	r2, #99	@ 0x63
 800c4f0:	dd07      	ble.n	800c502 <_ZN14GameScreenView15performAIActionEv+0x192>
                    int roll = generateRandomNumber(1, 100);
 800c4f2:	2101      	movs	r1, #1
 800c4f4:	2264      	movs	r2, #100	@ 0x64
 800c4f6:	4628      	mov	r0, r5
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800c4f8:	410c      	asrs	r4, r1
                    int roll = generateRandomNumber(1, 100);
 800c4fa:	f7fe fb7d 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800c4fe:	342d      	adds	r4, #45	@ 0x2d
 800c500:	e772      	b.n	800c3e8 <_ZN14GameScreenView15performAIActionEv+0x78>
                    if (aiHPPercent >= 70) {
 800c502:	2b45      	cmp	r3, #69	@ 0x45
 800c504:	dd07      	ble.n	800c516 <_ZN14GameScreenView15performAIActionEv+0x1a6>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c506:	2101      	movs	r1, #1
 800c508:	2264      	movs	r2, #100	@ 0x64
 800c50a:	4628      	mov	r0, r5
                        int defendChance = 60 + (baseDefendBonus / 2);
 800c50c:	410c      	asrs	r4, r1
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800c50e:	f7fe fb73 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
                        int defendChance = 60 + (baseDefendBonus / 2);
 800c512:	343c      	adds	r4, #60	@ 0x3c
 800c514:	e7b1      	b.n	800c47a <_ZN14GameScreenView15performAIActionEv+0x10a>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800c516:	2863      	cmp	r0, #99	@ 0x63
 800c518:	dc0d      	bgt.n	800c536 <_ZN14GameScreenView15performAIActionEv+0x1c6>
                            action = generateRandomNumber(1, 2);
 800c51a:	2202      	movs	r2, #2
 800c51c:	2101      	movs	r1, #1
 800c51e:	4628      	mov	r0, r5
 800c520:	f7fe fb6a 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
    switch(action)
 800c524:	2802      	cmp	r0, #2
 800c526:	f43f af6e 	beq.w	800c406 <_ZN14GameScreenView15performAIActionEv+0x96>
 800c52a:	2803      	cmp	r0, #3
 800c52c:	d083      	beq.n	800c436 <_ZN14GameScreenView15performAIActionEv+0xc6>
 800c52e:	2801      	cmp	r0, #1
 800c530:	f43f af72 	beq.w	800c418 <_ZN14GameScreenView15performAIActionEv+0xa8>
}
 800c534:	bd70      	pop	{r4, r5, r6, pc}
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800c536:	2264      	movs	r2, #100	@ 0x64
 800c538:	2101      	movs	r1, #1
 800c53a:	4628      	mov	r0, r5
 800c53c:	f7fe fb5c 	bl	800abf8 <_ZN14GameScreenView20generateRandomNumberEii>
 800c540:	281e      	cmp	r0, #30
 800c542:	f77f af60 	ble.w	800c406 <_ZN14GameScreenView15performAIActionEv+0x96>
 800c546:	e7e8      	b.n	800c51a <_ZN14GameScreenView15performAIActionEv+0x1aa>

0800c548 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800c548:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    if (evt.getType() == ClickEvent::PRESSED)
 800c54c:	790b      	ldrb	r3, [r1, #4]
{
 800c54e:	b08b      	sub	sp, #44	@ 0x2c
 800c550:	4605      	mov	r5, r0
 800c552:	460c      	mov	r4, r1
    if (evt.getType() == ClickEvent::PRESSED)
 800c554:	2b00      	cmp	r3, #0
 800c556:	f040 819d 	bne.w	800c894 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
        if (!gameEnded) {
 800c55a:	f500 5680 	add.w	r6, r0, #4096	@ 0x1000
        return clickX;
 800c55e:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c562:	f896 7265 	ldrb.w	r7, [r6, #613]	@ 0x265
 800c566:	2f00      	cmp	r7, #0
 800c568:	d17f      	bne.n	800c66a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x122>
                                   evt.getY() >= 140 && evt.getY() <= 280);
 800c56a:	3ba0      	subs	r3, #160	@ 0xa0
 800c56c:	b29b      	uxth	r3, r3
 800c56e:	2b50      	cmp	r3, #80	@ 0x50
 800c570:	d806      	bhi.n	800c580 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x38>
            bool clickedOnBleach = (evt.getX() >= 160 && evt.getX() <= 240 &&
 800c572:	890f      	ldrh	r7, [r1, #8]
 800c574:	3f8c      	subs	r7, #140	@ 0x8c
 800c576:	b2bf      	uxth	r7, r7
 800c578:	2f8c      	cmp	r7, #140	@ 0x8c
 800c57a:	bf8c      	ite	hi
 800c57c:	2700      	movhi	r7, #0
 800c57e:	2701      	movls	r7, #1
            if (bleach.isVisible() && bleach.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c580:	f895 3485 	ldrb.w	r3, [r5, #1157]	@ 0x485
 800c584:	b16b      	cbz	r3, 800c5a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x5a>
 800c586:	f505 618c 	add.w	r1, r5, #1120	@ 0x460
 800c58a:	a808      	add	r0, sp, #32
 800c58c:	f010 f988 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c590:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c594:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c598:	a808      	add	r0, sp, #32
 800c59a:	f7fe faab 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c59e:	4680      	mov	r8, r0
 800c5a0:	b908      	cbnz	r0, 800c5a6 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x5e>
            bool clickedOnBleachSprite = false;
 800c5a2:	f04f 0800 	mov.w	r8, #0
            if (bleach_atk.isVisible() && bleach_atk.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c5a6:	f895 3561 	ldrb.w	r3, [r5, #1377]	@ 0x561
 800c5aa:	bb63      	cbnz	r3, 800c606 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
            bool clickedOnBleachSprite = false;
 800c5ac:	46c1      	mov	r9, r8
            if (bleach_def.isVisible() && bleach_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c5ae:	f895 3535 	ldrb.w	r3, [r5, #1333]	@ 0x535
 800c5b2:	2b00      	cmp	r3, #0
 800c5b4:	d137      	bne.n	800c626 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xde>
            bool clickedOnBleachSprite = false;
 800c5b6:	46c8      	mov	r8, r9
            if (bleach_spe.isVisible() && bleach_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c5b8:	f895 3509 	ldrb.w	r3, [r5, #1289]	@ 0x509
 800c5bc:	2b00      	cmp	r3, #0
 800c5be:	d142      	bne.n	800c646 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xfe>
            if (clickedOnBleach || clickedOnBleachSprite) {
 800c5c0:	2f00      	cmp	r7, #0
 800c5c2:	d04f      	beq.n	800c664 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x11c>
            bool clickedOnBleachSprite = false;
 800c5c4:	2414      	movs	r4, #20
                    toggleLED();
 800c5c6:	f7fe fa8d 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
                for (int i = 0; i < 20; i++) {
 800c5ca:	3c01      	subs	r4, #1
 800c5cc:	d1fb      	bne.n	800c5c6 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x7e>
                showDamageText(0, 999); // Show massive damage to AI
 800c5ce:	4621      	mov	r1, r4
 800c5d0:	f240 32e7 	movw	r2, #999	@ 0x3e7
                aiHP = 0;
 800c5d4:	f8c6 4260 	str.w	r4, [r6, #608]	@ 0x260
                showDamageText(0, 999); // Show massive damage to AI
 800c5d8:	4628      	mov	r0, r5
 800c5da:	f7fe fc0a 	bl	800adf2 <_ZN14GameScreenView14showDamageTextEii>
                resetNarutoState();
 800c5de:	4628      	mov	r0, r5
 800c5e0:	f7fe ffff 	bl	800b5e2 <_ZN14GameScreenView16resetNarutoStateEv>
                resetBleachState();
 800c5e4:	4628      	mov	r0, r5
 800c5e6:	f7ff f82f 	bl	800b648 <_ZN14GameScreenView16resetBleachStateEv>
                updateAIHPDisplay();
 800c5ea:	4628      	mov	r0, r5
 800c5ec:	f7ff fb94 	bl	800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>
 800c5f0:	2419      	movs	r4, #25
                    toggleLED();
 800c5f2:	f7fe fa77 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
                for (int i = 0; i < 25; i++) {
 800c5f6:	3c01      	subs	r4, #1
 800c5f8:	d1fb      	bne.n	800c5f2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xaa>
                hideActionButtons();
 800c5fa:	4628      	mov	r0, r5
}
 800c5fc:	b00b      	add	sp, #44	@ 0x2c
 800c5fe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                hideActionButtons();
 800c602:	f7fe bec5 	b.w	800b390 <_ZN14GameScreenView17hideActionButtonsEv>
            if (bleach_atk.isVisible() && bleach_atk.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c606:	f205 513c 	addw	r1, r5, #1340	@ 0x53c
 800c60a:	a808      	add	r0, sp, #32
 800c60c:	f010 f948 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c610:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c614:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c618:	a808      	add	r0, sp, #32
 800c61a:	f7fe fa6b 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c61e:	4681      	mov	r9, r0
 800c620:	2800      	cmp	r0, #0
 800c622:	d0c3      	beq.n	800c5ac <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x64>
 800c624:	e7c3      	b.n	800c5ae <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x66>
            if (bleach_def.isVisible() && bleach_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c626:	f505 61a2 	add.w	r1, r5, #1296	@ 0x510
 800c62a:	a808      	add	r0, sp, #32
 800c62c:	f010 f938 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c630:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c634:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c638:	a808      	add	r0, sp, #32
 800c63a:	f7fe fa5b 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c63e:	4680      	mov	r8, r0
 800c640:	2800      	cmp	r0, #0
 800c642:	d0b8      	beq.n	800c5b6 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x6e>
 800c644:	e7b8      	b.n	800c5b8 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x70>
            if (bleach_spe.isVisible() && bleach_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c646:	f205 41e4 	addw	r1, r5, #1252	@ 0x4e4
 800c64a:	a808      	add	r0, sp, #32
 800c64c:	f010 f928 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c650:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c654:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c658:	a808      	add	r0, sp, #32
 800c65a:	f7fe fa4b 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c65e:	2800      	cmp	r0, #0
 800c660:	d0ae      	beq.n	800c5c0 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x78>
 800c662:	e7af      	b.n	800c5c4 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x7c>
            if (clickedOnBleach || clickedOnBleachSprite) {
 800c664:	f1b8 0f00 	cmp.w	r8, #0
 800c668:	d1ac      	bne.n	800c5c4 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x7c>
 800c66a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
        if (evt.getX() < 50 && evt.getY() < 50) {
 800c66e:	2b31      	cmp	r3, #49	@ 0x31
 800c670:	dc0d      	bgt.n	800c68e <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x146>
        return clickY;
 800c672:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c676:	2b31      	cmp	r3, #49	@ 0x31
 800c678:	f300 8087 	bgt.w	800c78a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x242>
            aiHP = 0;
 800c67c:	2300      	movs	r3, #0
            updateAIHPDisplay();
 800c67e:	4628      	mov	r0, r5
            aiHP = 0;
 800c680:	f8c6 3260 	str.w	r3, [r6, #608]	@ 0x260
}
 800c684:	b00b      	add	sp, #44	@ 0x2c
 800c686:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            updateAIHPDisplay();
 800c68a:	f7ff bb45 	b.w	800bd18 <_ZN14GameScreenView17updateAIHPDisplayEv>
        if (evt.getX() > 190 && evt.getY() < 50) {
 800c68e:	2bbe      	cmp	r3, #190	@ 0xbe
 800c690:	dc6e      	bgt.n	800c770 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x228>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800c692:	3b65      	subs	r3, #101	@ 0x65
 800c694:	b29b      	uxth	r3, r3
 800c696:	2b26      	cmp	r3, #38	@ 0x26
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800c698:	f896 2265 	ldrb.w	r2, [r6, #613]	@ 0x265
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800c69c:	f240 808d 	bls.w	800c7ba <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x272>
        if (gameEnded) {
 800c6a0:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c6a4:	2b00      	cmp	r3, #0
 800c6a6:	d04f      	beq.n	800c748 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x200>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c6a8:	f505 61ce 	add.w	r1, r5, #1648	@ 0x670
 800c6ac:	4668      	mov	r0, sp
 800c6ae:	f010 f8f7 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c6b2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c6b6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c6ba:	4668      	mov	r0, sp
 800c6bc:	f7fe fa1a 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c6c0:	2800      	cmp	r0, #0
 800c6c2:	f040 80ee 	bne.w	800c8a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c6c6:	f205 619c 	addw	r1, r5, #1692	@ 0x69c
 800c6ca:	a802      	add	r0, sp, #8
 800c6cc:	f010 f8e8 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c6d0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c6d4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c6d8:	a802      	add	r0, sp, #8
 800c6da:	f7fe fa0b 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c6de:	2800      	cmp	r0, #0
 800c6e0:	f040 80df 	bne.w	800c8a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c6e4:	f505 61d9 	add.w	r1, r5, #1736	@ 0x6c8
 800c6e8:	a804      	add	r0, sp, #16
 800c6ea:	f010 f8d9 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c6ee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c6f2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c6f6:	a804      	add	r0, sp, #16
 800c6f8:	f7fe f9fc 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c6fc:	2800      	cmp	r0, #0
 800c6fe:	f040 80d0 	bne.w	800c8a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c702:	f505 61e4 	add.w	r1, r5, #1824	@ 0x720
 800c706:	a806      	add	r0, sp, #24
 800c708:	f010 f8ca 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c70c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c710:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c714:	a806      	add	r0, sp, #24
 800c716:	f7fe f9ed 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c71a:	2800      	cmp	r0, #0
 800c71c:	f040 80c1 	bne.w	800c8a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800c720:	f205 61f4 	addw	r1, r5, #1780	@ 0x6f4
 800c724:	a808      	add	r0, sp, #32
 800c726:	f010 f8bb 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c72a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c72e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c732:	a808      	add	r0, sp, #32
 800c734:	f7fe f9de 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800c738:	2800      	cmp	r0, #0
 800c73a:	f040 80b2 	bne.w	800c8a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
        if (!gameEnded) {
 800c73e:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c742:	2b00      	cmp	r3, #0
 800c744:	f040 80a6 	bne.w	800c894 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
            if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c748:	f505 61e4 	add.w	r1, r5, #1824	@ 0x720
 800c74c:	a808      	add	r0, sp, #32
 800c74e:	f010 f8a7 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c752:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c756:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c75a:	a808      	add	r0, sp, #32
 800c75c:	f7fe f9ca 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c760:	2800      	cmp	r0, #0
 800c762:	d046      	beq.n	800c7f2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2aa>
                toggleActionMenu();
 800c764:	4628      	mov	r0, r5
}
 800c766:	b00b      	add	sp, #44	@ 0x2c
 800c768:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                toggleActionMenu();
 800c76c:	f7fe be5e 	b.w	800b42c <_ZN14GameScreenView16toggleActionMenuEv>
 800c770:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
        if (evt.getX() > 190 && evt.getY() < 50) {
 800c774:	2b31      	cmp	r3, #49	@ 0x31
 800c776:	dc11      	bgt.n	800c79c <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x254>
            playerHP = 0;
 800c778:	2300      	movs	r3, #0
            updatePlayerHPDisplay();
 800c77a:	4628      	mov	r0, r5
            playerHP = 0;
 800c77c:	f8c6 325c 	str.w	r3, [r6, #604]	@ 0x25c
}
 800c780:	b00b      	add	sp, #44	@ 0x2c
 800c782:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            updatePlayerHPDisplay();
 800c786:	f7ff b923 	b.w	800b9d0 <_ZN14GameScreenView21updatePlayerHPDisplayEv>
        if (evt.getX() < 50 && evt.getY() > 270) {
 800c78a:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
 800c78e:	dd87      	ble.n	800c6a0 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x158>
            debugGameState();
 800c790:	4628      	mov	r0, r5
}
 800c792:	b00b      	add	sp, #44	@ 0x2c
 800c794:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            debugGameState();
 800c798:	f7fe ba0c 	b.w	800abb4 <_ZN14GameScreenView14debugGameStateEv>
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800c79c:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
 800c7a0:	f77f af7e 	ble.w	800c6a0 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x158>
 800c7a4:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c7a8:	2b00      	cmp	r3, #0
 800c7aa:	f47f af7d 	bne.w	800c6a8 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x160>
            giveRandomPowerUps();
 800c7ae:	4628      	mov	r0, r5
}
 800c7b0:	b00b      	add	sp, #44	@ 0x2c
 800c7b2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            giveRandomPowerUps();
 800c7b6:	f7ff bbce 	b.w	800bf56 <_ZN14GameScreenView18giveRandomPowerUpsEv>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800c7ba:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c7be:	f5b3 7f87 	cmp.w	r3, #270	@ 0x10e
 800c7c2:	f77f af6d 	ble.w	800c6a0 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x158>
 800c7c6:	2a00      	cmp	r2, #0
 800c7c8:	f47f af6e 	bne.w	800c6a8 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x160>
            for (int i = 0; i < turnCounter + 1; i++) {
 800c7cc:	4614      	mov	r4, r2
 800c7ce:	f8d6 3288 	ldr.w	r3, [r6, #648]	@ 0x288
 800c7d2:	42a3      	cmp	r3, r4
 800c7d4:	da09      	bge.n	800c7ea <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2a2>
            playerActionDone = true;
 800c7d6:	f240 1301 	movw	r3, #257	@ 0x101
 800c7da:	4628      	mov	r0, r5
 800c7dc:	f8a6 3296 	strh.w	r3, [r6, #662]	@ 0x296
}
 800c7e0:	b00b      	add	sp, #44	@ 0x2c
 800c7e2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c7e6:	f7ff bc04 	b.w	800bff2 <_ZN14GameScreenView17checkTurnCompleteEv.part.0>
                toggleLED();
 800c7ea:	f7fe f97b 	bl	800aae4 <_ZN14GameScreenView9toggleLEDEv.constprop.0>
            for (int i = 0; i < turnCounter + 1; i++) {
 800c7ee:	3401      	adds	r4, #1
 800c7f0:	e7ed      	b.n	800c7ce <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x286>
            if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c7f2:	f205 61f4 	addw	r1, r5, #1780	@ 0x6f4
 800c7f6:	a808      	add	r0, sp, #32
 800c7f8:	f010 f852 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c7fc:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c800:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c804:	a808      	add	r0, sp, #32
 800c806:	f7fe f975 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c80a:	2800      	cmp	r0, #0
 800c80c:	d1aa      	bne.n	800c764 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x21c>
            if (menuOpen) {
 800c80e:	f896 3264 	ldrb.w	r3, [r6, #612]	@ 0x264
 800c812:	2b00      	cmp	r3, #0
 800c814:	d03e      	beq.n	800c894 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
                if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c816:	f505 61ce 	add.w	r1, r5, #1648	@ 0x670
 800c81a:	a808      	add	r0, sp, #32
 800c81c:	f010 f840 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c820:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c824:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c828:	a808      	add	r0, sp, #32
 800c82a:	f7fe f963 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c82e:	b158      	cbz	r0, 800c848 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x300>
                    playerAttack();
 800c830:	4628      	mov	r0, r5
 800c832:	f7ff fc75 	bl	800c120 <_ZN14GameScreenView12playerAttackEv>
                    if (!gameEnded) performAIAction();
 800c836:	f896 3265 	ldrb.w	r3, [r6, #613]	@ 0x265
 800c83a:	bb93      	cbnz	r3, 800c8a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
 800c83c:	4628      	mov	r0, r5
}
 800c83e:	b00b      	add	sp, #44	@ 0x2c
 800c840:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                    if (!gameEnded) performAIAction();
 800c844:	f7ff bd94 	b.w	800c370 <_ZN14GameScreenView15performAIActionEv>
                else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c848:	f205 619c 	addw	r1, r5, #1692	@ 0x69c
 800c84c:	a808      	add	r0, sp, #32
 800c84e:	f010 f827 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c852:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c856:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c85a:	a808      	add	r0, sp, #32
 800c85c:	f7fe f94a 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c860:	b118      	cbz	r0, 800c86a <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x322>
                    playerDefend();
 800c862:	4628      	mov	r0, r5
 800c864:	f7ff f942 	bl	800baec <_ZN14GameScreenView12playerDefendEv>
                    if (!gameEnded) performAIAction();
 800c868:	e7e5      	b.n	800c836 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2ee>
                else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()))
 800c86a:	f505 61d9 	add.w	r1, r5, #1736	@ 0x6c8
 800c86e:	a808      	add	r0, sp, #32
 800c870:	f010 f816 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c874:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c878:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800c87c:	a808      	add	r0, sp, #32
 800c87e:	f7fe f939 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800c882:	b138      	cbz	r0, 800c894 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x34c>
                    if (playerChakraLevel >= 100) {
 800c884:	f8d6 3268 	ldr.w	r3, [r6, #616]	@ 0x268
 800c888:	2b63      	cmp	r3, #99	@ 0x63
 800c88a:	dd0a      	ble.n	800c8a2 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x35a>
                        playerSpecial();
 800c88c:	4628      	mov	r0, r5
 800c88e:	f7ff fcbd 	bl	800c20c <_ZN14GameScreenView13playerSpecialEv>
                        if (!gameEnded) performAIAction();
 800c892:	e7d0      	b.n	800c836 <_ZN14GameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x2ee>
    GameScreenViewBase::handleClickEvent(evt);
 800c894:	4621      	mov	r1, r4
 800c896:	4628      	mov	r0, r5
}
 800c898:	b00b      	add	sp, #44	@ 0x2c
 800c89a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
    GameScreenViewBase::handleClickEvent(evt);
 800c89e:	f010 bcc1 	b.w	801d224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
}
 800c8a2:	b00b      	add	sp, #44	@ 0x2c
 800c8a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c8a8 <_ZN14GameScreenView15handleDragEventERKN8touchgfx9DragEventE>:
    GameScreenViewBase::handleDragEvent(evt);
 800c8a8:	f010 bd10 	b.w	801d2cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>

0800c8ac <_ZN23MainMenuScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainMenuScreenPresenter() {}
 800c8ac:	4770      	bx	lr

0800c8ae <_ZThn4_N23MainMenuScreenPresenterD1Ev>:
 800c8ae:	3804      	subs	r0, #4
 800c8b0:	4770      	bx	lr

0800c8b2 <_ZN23MainMenuScreenPresenter10deactivateEv>:
}

void MainMenuScreenPresenter::activate()
{

}
 800c8b2:	4770      	bx	lr

0800c8b4 <_ZN23MainMenuScreenPresenterD0Ev>:
 800c8b4:	b510      	push	{r4, lr}
 800c8b6:	2110      	movs	r1, #16
 800c8b8:	4604      	mov	r4, r0
 800c8ba:	f021 f834 	bl	802d926 <_ZdlPvj>
 800c8be:	4620      	mov	r0, r4
 800c8c0:	bd10      	pop	{r4, pc}

0800c8c2 <_ZThn4_N23MainMenuScreenPresenterD0Ev>:
 800c8c2:	f1a0 0004 	sub.w	r0, r0, #4
 800c8c6:	e7f5      	b.n	800c8b4 <_ZN23MainMenuScreenPresenterD0Ev>

0800c8c8 <_ZN23MainMenuScreenPresenterC1ER18MainMenuScreenView>:
 800c8c8:	2200      	movs	r2, #0
 800c8ca:	6082      	str	r2, [r0, #8]
    : view(v)
 800c8cc:	4a02      	ldr	r2, [pc, #8]	@ (800c8d8 <_ZN23MainMenuScreenPresenterC1ER18MainMenuScreenView+0x10>)
 800c8ce:	6002      	str	r2, [r0, #0]
 800c8d0:	3218      	adds	r2, #24
 800c8d2:	6042      	str	r2, [r0, #4]
 800c8d4:	60c1      	str	r1, [r0, #12]
}
 800c8d6:	4770      	bx	lr
 800c8d8:	08032dcc 	.word	0x08032dcc

0800c8dc <_ZN18MainMenuScreenView14tearDownScreenEv>:
}

void MainMenuScreenView::tearDownScreen()
{
    // Stop background music when leaving main menu
    Audio_StopBackgroundMusic();
 800c8dc:	f7f5 baac 	b.w	8001e38 <Audio_StopBackgroundMusic>

0800c8e0 <_ZN18MainMenuScreenViewD1Ev>:

class MainMenuScreenView : public MainMenuScreenViewBase
{
public:
    MainMenuScreenView();
    virtual ~MainMenuScreenView() {}
 800c8e0:	b510      	push	{r4, lr}
 800c8e2:	4b03      	ldr	r3, [pc, #12]	@ (800c8f0 <_ZN18MainMenuScreenViewD1Ev+0x10>)
 800c8e4:	6003      	str	r3, [r0, #0]
 800c8e6:	4604      	mov	r4, r0
 800c8e8:	f7fa f9c9 	bl	8006c7e <_ZN22MainMenuScreenViewBaseD1Ev>
 800c8ec:	4620      	mov	r0, r4
 800c8ee:	bd10      	pop	{r4, pc}
 800c8f0:	08032df4 	.word	0x08032df4

0800c8f4 <_ZN18MainMenuScreenViewD0Ev>:
 800c8f4:	b510      	push	{r4, lr}
 800c8f6:	4604      	mov	r4, r0
 800c8f8:	f7ff fff2 	bl	800c8e0 <_ZN18MainMenuScreenViewD1Ev>
 800c8fc:	4620      	mov	r0, r4
 800c8fe:	f44f 7113 	mov.w	r1, #588	@ 0x24c
 800c902:	f021 f810 	bl	802d926 <_ZdlPvj>
 800c906:	4620      	mov	r0, r4
 800c908:	bd10      	pop	{r4, pc}

0800c90a <_ZN18MainMenuScreenView25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

    MainMenuScreenViewBase::tearDownScreen();
}

void MainMenuScreenView::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800c90a:	b538      	push	{r3, r4, r5, lr}
    if (&src == &SELECT)
 800c90c:	f500 73e0 	add.w	r3, r0, #448	@ 0x1c0
 800c910:	4299      	cmp	r1, r3
{
 800c912:	4604      	mov	r4, r0
 800c914:	460d      	mov	r5, r1
    if (&src == &SELECT)
 800c916:	d105      	bne.n	800c924 <_ZN18MainMenuScreenView25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1a>
    {
        // Stop background music before transitioning
        Audio_StopBackgroundMusic();
 800c918:	f7f5 fa8e 	bl	8001e38 <Audio_StopBackgroundMusic>
 800c91c:	f00e fd72 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>

        //Select
        //When SELECT clicked change screen to Character
        //Go to Character with no screen transition
        application().gotoCharacterScreenNoTransition();
 800c920:	f7f7 fb36 	bl	8003f90 <_ZN23FrontendApplicationBase31gotoCharacterScreenNoTransitionEv>
    }
    if (&src == &PLAY)
 800c924:	f504 74a4 	add.w	r4, r4, #328	@ 0x148
 800c928:	42a5      	cmp	r5, r4
 800c92a:	d107      	bne.n	800c93c <_ZN18MainMenuScreenView25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
    {
        // Stop background music before transitioning
        Audio_StopBackgroundMusic();
 800c92c:	f7f5 fa84 	bl	8001e38 <Audio_StopBackgroundMusic>
 800c930:	f00e fd68 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
        //GameScreen
        //When PLAY clicked change screen to GameScreen
        //Go to GameScreen with no screen transition
        application().gotoGameScreenScreenNoTransition();
    }
}
 800c934:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoGameScreenScreenNoTransition();
 800c938:	f7f7 bb0a 	b.w	8003f50 <_ZN23FrontendApplicationBase32gotoGameScreenScreenNoTransitionEv>
}
 800c93c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800c940 <_ZN18MainMenuScreenViewC1Ev>:
MainMenuScreenView::MainMenuScreenView() : audioInitialized(false)
 800c940:	b510      	push	{r4, lr}
 800c942:	4604      	mov	r4, r0
 800c944:	f7fa f9dc 	bl	8006d00 <_ZN22MainMenuScreenViewBaseC1Ev>
 800c948:	4b03      	ldr	r3, [pc, #12]	@ (800c958 <_ZN18MainMenuScreenViewC1Ev+0x18>)
 800c94a:	6023      	str	r3, [r4, #0]
 800c94c:	2300      	movs	r3, #0
 800c94e:	f884 3248 	strb.w	r3, [r4, #584]	@ 0x248
}
 800c952:	4620      	mov	r0, r4
 800c954:	bd10      	pop	{r4, pc}
 800c956:	bf00      	nop
 800c958:	08032df4 	.word	0x08032df4

0800c95c <_ZN18MainMenuScreenView11setupScreenEv>:
{
 800c95c:	b510      	push	{r4, lr}
 800c95e:	4604      	mov	r4, r0
    MainMenuScreenViewBase::setupScreen();
 800c960:	f7fa f98e 	bl	8006c80 <_ZN22MainMenuScreenViewBase11setupScreenEv>
    if (!audioInitialized) {
 800c964:	f894 3248 	ldrb.w	r3, [r4, #584]	@ 0x248
 800c968:	b923      	cbnz	r3, 800c974 <_ZN18MainMenuScreenView11setupScreenEv+0x18>
        Audio_Init();
 800c96a:	f7f5 f9a1 	bl	8001cb0 <Audio_Init>
        audioInitialized = true;
 800c96e:	2301      	movs	r3, #1
 800c970:	f884 3248 	strb.w	r3, [r4, #584]	@ 0x248
}
 800c974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Audio_PlayBackgroundMusic();
 800c978:	f7f5 ba5c 	b.w	8001e34 <Audio_PlayBackgroundMusic>

0800c97c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800c97c:	2200      	movs	r2, #0
 800c97e:	6002      	str	r2, [r0, #0]
{

}
 800c980:	4770      	bx	lr

0800c982 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800c982:	4770      	bx	lr

0800c984 <_ZN26NarutoGameScreen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~NarutoGameScreen2Presenter() {}
 800c984:	4770      	bx	lr

0800c986 <_ZThn4_N26NarutoGameScreen2PresenterD1Ev>:
 800c986:	3804      	subs	r0, #4
 800c988:	4770      	bx	lr

0800c98a <_ZN26NarutoGameScreen2Presenter10deactivateEv>:
}

void NarutoGameScreen2Presenter::activate()
{

}
 800c98a:	4770      	bx	lr

0800c98c <_ZN26NarutoGameScreen2PresenterD0Ev>:
 800c98c:	b510      	push	{r4, lr}
 800c98e:	2110      	movs	r1, #16
 800c990:	4604      	mov	r4, r0
 800c992:	f020 ffc8 	bl	802d926 <_ZdlPvj>
 800c996:	4620      	mov	r0, r4
 800c998:	bd10      	pop	{r4, pc}

0800c99a <_ZThn4_N26NarutoGameScreen2PresenterD0Ev>:
 800c99a:	f1a0 0004 	sub.w	r0, r0, #4
 800c99e:	e7f5      	b.n	800c98c <_ZN26NarutoGameScreen2PresenterD0Ev>

0800c9a0 <_ZN26NarutoGameScreen2PresenterC1ER21NarutoGameScreen2View>:
 800c9a0:	2200      	movs	r2, #0
 800c9a2:	6082      	str	r2, [r0, #8]
    : view(v)
 800c9a4:	4a02      	ldr	r2, [pc, #8]	@ (800c9b0 <_ZN26NarutoGameScreen2PresenterC1ER21NarutoGameScreen2View+0x10>)
 800c9a6:	6002      	str	r2, [r0, #0]
 800c9a8:	3218      	adds	r2, #24
 800c9aa:	6042      	str	r2, [r0, #4]
 800c9ac:	60c1      	str	r1, [r0, #12]
}
 800c9ae:	4770      	bx	lr
 800c9b0:	08032e2c 	.word	0x08032e2c

0800c9b4 <_ZN21NarutoGameScreen2View12checkGameEndEv>:
}

void NarutoGameScreen2View::tearDownScreen()
{
	NarutoGameScreen2ViewBase::tearDownScreen();
}
 800c9b4:	4770      	bx	lr
	...

0800c9b8 <_ZN21NarutoGameScreen2ViewD1Ev>:

class NarutoGameScreen2View : public NarutoGameScreen2ViewBase
{
public:
    NarutoGameScreen2View();
    virtual ~NarutoGameScreen2View() {}
 800c9b8:	b510      	push	{r4, lr}
 800c9ba:	4b03      	ldr	r3, [pc, #12]	@ (800c9c8 <_ZN21NarutoGameScreen2ViewD1Ev+0x10>)
 800c9bc:	6003      	str	r3, [r0, #0]
 800c9be:	4604      	mov	r4, r0
 800c9c0:	f7fa fae0 	bl	8006f84 <_ZN25NarutoGameScreen2ViewBaseD1Ev>
 800c9c4:	4620      	mov	r0, r4
 800c9c6:	bd10      	pop	{r4, pc}
 800c9c8:	08032e54 	.word	0x08032e54

0800c9cc <_ZN21NarutoGameScreen2ViewD0Ev>:
 800c9cc:	b510      	push	{r4, lr}
 800c9ce:	4604      	mov	r4, r0
 800c9d0:	f7ff fff2 	bl	800c9b8 <_ZN21NarutoGameScreen2ViewD1Ev>
 800c9d4:	4620      	mov	r0, r4
 800c9d6:	f44f 612d 	mov.w	r1, #2768	@ 0xad0
 800c9da:	f020 ffa4 	bl	802d926 <_ZdlPvj>
 800c9de:	4620      	mov	r0, r4
 800c9e0:	bd10      	pop	{r4, pc}
	...

0800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>:
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
}

void NarutoGameScreen2View::toggleLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800c9e4:	4802      	ldr	r0, [pc, #8]	@ (800c9f0 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0+0xc>)
 800c9e6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800c9ea:	f004 b8bc 	b.w	8010b66 <HAL_GPIO_TogglePin>
 800c9ee:	bf00      	nop
 800c9f0:	40021800 	.word	0x40021800

0800c9f4 <_ZN21NarutoGameScreen2ViewC1Ev>:
NarutoGameScreen2View::NarutoGameScreen2View()
 800c9f4:	b510      	push	{r4, lr}
 800c9f6:	4604      	mov	r4, r0
 800c9f8:	f7fa face 	bl	8006f98 <_ZN25NarutoGameScreen2ViewBaseC1Ev>
    randomSeed = 12345;
 800c9fc:	f243 0239 	movw	r2, #12345	@ 0x3039
NarutoGameScreen2View::NarutoGameScreen2View()
 800ca00:	4b12      	ldr	r3, [pc, #72]	@ (800ca4c <_ZN21NarutoGameScreen2ViewC1Ev+0x58>)
    randomSeed = 12345;
 800ca02:	f8c4 2ac4 	str.w	r2, [r4, #2756]	@ 0xac4
    bossPhase = 1;
 800ca06:	2201      	movs	r2, #1
NarutoGameScreen2View::NarutoGameScreen2View()
 800ca08:	6023      	str	r3, [r4, #0]
    bossPhase = 1;
 800ca0a:	f8c4 2a6c 	str.w	r2, [r4, #2668]	@ 0xa6c
    resetTimer = 0;
 800ca0e:	2300      	movs	r3, #0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800ca10:	2282      	movs	r2, #130	@ 0x82
    resetTimer = 0;
 800ca12:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800ca16:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
    fireAnimationTimer = 0;
 800ca1a:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800ca1e:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800ca22:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800ca26:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800ca2a:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800ca2e:	f8c4 2a70 	str.w	r2, [r4, #2672]	@ 0xa70
    bossCurrentHP = 130;
 800ca32:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    rageMode = false;
 800ca36:	f884 3a78 	strb.w	r3, [r4, #2680]	@ 0xa78
    rageModeTimer = 0;
 800ca3a:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
    easterEggActivated = false;
 800ca3e:	f884 3ac8 	strb.w	r3, [r4, #2760]	@ 0xac8
     easterEggTimer = 0;
 800ca42:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
}
 800ca46:	4620      	mov	r0, r4
 800ca48:	bd10      	pop	{r4, pc}
 800ca4a:	bf00      	nop
 800ca4c:	08032e54 	.word	0x08032e54

0800ca50 <_ZN21NarutoGameScreen2View8initGPIOEv>:
{
 800ca50:	b570      	push	{r4, r5, r6, lr}
 800ca52:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800ca54:	2400      	movs	r4, #0
 800ca56:	4b0f      	ldr	r3, [pc, #60]	@ (800ca94 <_ZN21NarutoGameScreen2View8initGPIOEv+0x44>)
 800ca58:	9400      	str	r4, [sp, #0]
 800ca5a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800ca5c:	4d0e      	ldr	r5, [pc, #56]	@ (800ca98 <_ZN21NarutoGameScreen2View8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800ca5e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800ca62:	631a      	str	r2, [r3, #48]	@ 0x30
 800ca64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800ca66:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800ca68:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800ca6c:	9300      	str	r3, [sp, #0]
 800ca6e:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800ca70:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800ca74:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800ca76:	a901      	add	r1, sp, #4
 800ca78:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800ca7a:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800ca7e:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800ca82:	f003 ff81 	bl	8010988 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800ca86:	4622      	mov	r2, r4
 800ca88:	4631      	mov	r1, r6
 800ca8a:	4628      	mov	r0, r5
 800ca8c:	f004 f866 	bl	8010b5c <HAL_GPIO_WritePin>
}
 800ca90:	b006      	add	sp, #24
 800ca92:	bd70      	pop	{r4, r5, r6, pc}
 800ca94:	40023800 	.word	0x40023800
 800ca98:	40021800 	.word	0x40021800

0800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>:
}

// ==================== UTILITY FUNCTIONS ====================

int NarutoGameScreen2View::generateRandomNumber(int min, int max)
{
 800ca9c:	b530      	push	{r4, r5, lr}
    // IMPROVED LINEAR CONGRUENTIAL GENERATOR
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800ca9e:	4b0e      	ldr	r3, [pc, #56]	@ (800cad8 <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x3c>)
 800caa0:	f8d0 4ac4 	ldr.w	r4, [r0, #2756]	@ 0xac4
 800caa4:	4d0d      	ldr	r5, [pc, #52]	@ (800cadc <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x40>)
 800caa6:	fb05 3304 	mla	r3, r5, r4, r3
 800caaa:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800caae:	f8c0 3ac4 	str.w	r3, [r0, #2756]	@ 0xac4

    // Additional mixing to improve distribution
    uint32_t mixed = randomSeed;
    mixed ^= mixed >> 16;
    mixed *= 0x85ebca6b;
 800cab2:	480b      	ldr	r0, [pc, #44]	@ (800cae0 <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x44>)
    mixed ^= mixed >> 16;
 800cab4:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    mixed *= 0x85ebca6b;
 800cab8:	4343      	muls	r3, r0
    mixed ^= mixed >> 13;
    mixed *= 0xc2b2ae35;
 800caba:	480a      	ldr	r0, [pc, #40]	@ (800cae4 <_ZN21NarutoGameScreen2View20generateRandomNumberEii+0x48>)
    mixed ^= mixed >> 13;
 800cabc:	ea83 3353 	eor.w	r3, r3, r3, lsr #13
    mixed *= 0xc2b2ae35;
 800cac0:	4343      	muls	r3, r0
    mixed ^= mixed >> 16;

    return min + (mixed % (max - min + 1));
 800cac2:	1a52      	subs	r2, r2, r1
    mixed ^= mixed >> 16;
 800cac4:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    return min + (mixed % (max - min + 1));
 800cac8:	3201      	adds	r2, #1
 800caca:	fbb3 f0f2 	udiv	r0, r3, r2
 800cace:	fb02 3010 	mls	r0, r2, r0, r3
}
 800cad2:	4408      	add	r0, r1
 800cad4:	bd30      	pop	{r4, r5, pc}
 800cad6:	bf00      	nop
 800cad8:	3c6ef35f 	.word	0x3c6ef35f
 800cadc:	0019660d 	.word	0x0019660d
 800cae0:	85ebca6b 	.word	0x85ebca6b
 800cae4:	c2b2ae35 	.word	0xc2b2ae35

0800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>:
{
 800cae8:	b510      	push	{r4, lr}
 800caea:	2300      	movs	r3, #0
 800caec:	4604      	mov	r4, r0
 800caee:	f880 3509 	strb.w	r3, [r0, #1289]	@ 0x509
 800caf2:	f880 3535 	strb.w	r3, [r0, #1333]	@ 0x535
 800caf6:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
    fire1.invalidate();
 800cafa:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800cafe:	f00f fe33 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    fire2.invalidate();
 800cb02:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800cb06:	f00f fe2f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe_fire.invalidate();
 800cb0a:	f204 5094 	addw	r0, r4, #1428	@ 0x594
}
 800cb0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach_spe_fire.invalidate();
 800cb12:	f00f be29 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cb16 <_ZN21NarutoGameScreen2View24startAttackFireAnimationEv>:
{
 800cb16:	b510      	push	{r4, lr}
 800cb18:	4604      	mov	r4, r0
    hideAllFireEffects();
 800cb1a:	f7ff ffe5 	bl	800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    fireAnimationTimer = 0;
 800cb1e:	2300      	movs	r3, #0
 800cb20:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800cb24:	2301      	movs	r3, #1
 800cb26:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 1; // Bắt đầu với fire1
 800cb2a:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
 800cb2e:	f884 3509 	strb.w	r3, [r4, #1289]	@ 0x509
    fire1.invalidate();
 800cb32:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
 800cb36:	f00f fe17 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800cb3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    toggleLED();
 800cb3e:	f7ff bf51 	b.w	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

0800cb42 <_ZN21NarutoGameScreen2View25startSpecialFireAnimationEv>:
{
 800cb42:	b510      	push	{r4, lr}
 800cb44:	4604      	mov	r4, r0
    hideAllFireEffects();
 800cb46:	f7ff ffcf 	bl	800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    fireAnimationActive = true;
 800cb4a:	2301      	movs	r3, #1
    fireAnimationTimer = 0;
 800cb4c:	2200      	movs	r2, #0
    fireAnimationState = 3; // Special fire blink
 800cb4e:	2103      	movs	r1, #3
    fireAnimationTimer = 0;
 800cb50:	f8c4 2ab0 	str.w	r2, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800cb54:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 3; // Special fire blink
 800cb58:	f8c4 1ab8 	str.w	r1, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800cb5c:	f8c4 2abc 	str.w	r2, [r4, #2748]	@ 0xabc
    specialFireToggle = true; // Bắt đầu với visible
 800cb60:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
 800cb64:	f884 35b9 	strb.w	r3, [r4, #1465]	@ 0x5b9
    bleach_spe_fire.invalidate();
 800cb68:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800cb6c:	f00f fdfc 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800cb70:	f7ff ff38 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cb74:	f7ff ff36 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cb78:	f7ff ff34 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800cb7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        toggleLED();
 800cb80:	f7ff bf30 	b.w	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

0800cb84 <_ZN21NarutoGameScreen2View19updateFireAnimationEv>:
{
 800cb84:	b538      	push	{r3, r4, r5, lr}
    if (!fireAnimationActive) return;
 800cb86:	f890 3ab4 	ldrb.w	r3, [r0, #2740]	@ 0xab4
{
 800cb8a:	4604      	mov	r4, r0
    if (!fireAnimationActive) return;
 800cb8c:	2b00      	cmp	r3, #0
 800cb8e:	f000 8085 	beq.w	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800cb92:	f8d0 3ab0 	ldr.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800cb96:	f8d0 2ab8 	ldr.w	r2, [r0, #2744]	@ 0xab8
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800cb9a:	3310      	adds	r3, #16
    switch (fireAnimationState) {
 800cb9c:	2a02      	cmp	r2, #2
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800cb9e:	f8c0 3ab0 	str.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800cba2:	d01c      	beq.n	800cbde <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x5a>
 800cba4:	2a03      	cmp	r2, #3
 800cba6:	d032      	beq.n	800cc0e <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x8a>
 800cba8:	2a01      	cmp	r2, #1
 800cbaa:	d177      	bne.n	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800cbac:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800cbb0:	db74      	blt.n	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800cbb2:	2500      	movs	r5, #0
 800cbb4:	f880 2535 	strb.w	r2, [r0, #1333]	@ 0x535
 800cbb8:	f880 5509 	strb.w	r5, [r0, #1289]	@ 0x509
                fire1.invalidate();
 800cbbc:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800cbc0:	f00f fdd2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                fire2.invalidate();
 800cbc4:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800cbc8:	f00f fdce 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationState = 2;
 800cbcc:	2302      	movs	r3, #2
 800cbce:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800cbd2:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
}
 800cbd6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                        toggleLED();
 800cbda:	f7ff bf03 	b.w	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800cbde:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800cbe2:	db5b      	blt.n	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
                hideAllFireEffects();
 800cbe4:	f7ff ff80 	bl	800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
                fireAnimationActive = false;
 800cbe8:	2300      	movs	r3, #0
 800cbea:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800cbee:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800cbf2:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                if (!gameEnded && bossCurrentHP > 0) {
 800cbf6:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800cbfa:	2b00      	cmp	r3, #0
 800cbfc:	d14e      	bne.n	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800cbfe:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800cc02:	2b00      	cmp	r3, #0
 800cc04:	dd4a      	ble.n	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800cc06:	2301      	movs	r3, #1
 800cc08:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    toggleLED(); // Debug: animation complete
 800cc0c:	e7e3      	b.n	800cbd6 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x52>
            if (fireAnimationTimer >= FIRE_LOOP_INTERVAL) {
 800cc0e:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 800cc12:	db16      	blt.n	800cc42 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0xbe>
                specialFireToggle = !specialFireToggle;
 800cc14:	f890 3ac0 	ldrb.w	r3, [r0, #2752]	@ 0xac0
 800cc18:	f083 0301 	eor.w	r3, r3, #1
 800cc1c:	f880 3ac0 	strb.w	r3, [r0, #2752]	@ 0xac0
 800cc20:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
                bleach_spe_fire.invalidate();
 800cc24:	f200 5094 	addw	r0, r0, #1428	@ 0x594
 800cc28:	f00f fd9e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationTimer = 0;
 800cc2c:	2300      	movs	r3, #0
 800cc2e:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                fireLoopCounter += FIRE_LOOP_INTERVAL;
 800cc32:	f8d4 3abc 	ldr.w	r3, [r4, #2748]	@ 0xabc
 800cc36:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800cc3a:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
                toggleLED();
 800cc3e:	f7ff fed1 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            if (fireLoopCounter >= 3000) { // 3000ms = 3 giây
 800cc42:	f8d4 2abc 	ldr.w	r2, [r4, #2748]	@ 0xabc
 800cc46:	f640 33b7 	movw	r3, #2999	@ 0xbb7
 800cc4a:	429a      	cmp	r2, r3
 800cc4c:	dd26      	ble.n	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800cc4e:	2500      	movs	r5, #0
                hideAllFireEffects();
 800cc50:	4620      	mov	r0, r4
 800cc52:	f7ff ff49 	bl	800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
 800cc56:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
                bleach_spe.invalidate();
 800cc5a:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800cc5e:	f00f fd83 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                if (!gameEnded && bossCurrentHP > 0) {
 800cc62:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
                fireAnimationActive = false;
 800cc66:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800cc6a:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800cc6e:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
                fireLoopCounter = 0;
 800cc72:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
                if (!gameEnded && bossCurrentHP > 0) {
 800cc76:	b98b      	cbnz	r3, 800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
 800cc78:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800cc7c:	42ab      	cmp	r3, r5
 800cc7e:	dd0d      	ble.n	800cc9c <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800cc80:	2301      	movs	r3, #1
 800cc82:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    aiSpecialUsed = true;
 800cc86:	f884 3a8b 	strb.w	r3, [r4, #2699]	@ 0xa8b
                        toggleLED();
 800cc8a:	f7ff feab 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cc8e:	f7ff fea9 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cc92:	f7ff fea7 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cc96:	f7ff fea5 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800cc9a:	e79c      	b.n	800cbd6 <_ZN21NarutoGameScreen2View19updateFireAnimationEv+0x52>
}
 800cc9c:	bd38      	pop	{r3, r4, r5, pc}

0800cc9e <_ZN21NarutoGameScreen2View17hideActionButtonsEv>:
{
 800cc9e:	b538      	push	{r3, r4, r5, lr}
 800cca0:	2301      	movs	r3, #1
 800cca2:	2500      	movs	r5, #0
 800cca4:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800cca8:	4604      	mov	r4, r0
 800ccaa:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800ccae:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800ccb2:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800ccb6:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800ccba:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800ccbe:	f00f fd53 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800ccc2:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800ccc6:	f00f fd4f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800ccca:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800ccce:	f00f fd4b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800ccd2:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800ccd6:	f00f fd47 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800ccda:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800ccde:	f00f fd43 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = false;
 800cce2:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800cce6:	bd38      	pop	{r3, r4, r5, pc}

0800cce8 <_ZN21NarutoGameScreen2View17showActionButtonsEv>:
{
 800cce8:	b538      	push	{r3, r4, r5, lr}
 800ccea:	2300      	movs	r3, #0
 800ccec:	2501      	movs	r5, #1
 800ccee:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800ccf2:	4604      	mov	r4, r0
 800ccf4:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800ccf8:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800ccfc:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800cd00:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800cd04:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800cd08:	f00f fd2e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800cd0c:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800cd10:	f00f fd2a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800cd14:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800cd18:	f00f fd26 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800cd1c:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800cd20:	f00f fd22 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800cd24:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800cd28:	f00f fd1e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = true;
 800cd2c:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800cd30:	bd38      	pop	{r3, r4, r5, pc}

0800cd32 <_ZN21NarutoGameScreen2View16toggleActionMenuEv>:
{
 800cd32:	b508      	push	{r3, lr}
    if (menuOpen) {
 800cd34:	f890 3a68 	ldrb.w	r3, [r0, #2664]	@ 0xa68
 800cd38:	b12b      	cbz	r3, 800cd46 <_ZN21NarutoGameScreen2View16toggleActionMenuEv+0x14>
        hideActionButtons();
 800cd3a:	f7ff ffb0 	bl	800cc9e <_ZN21NarutoGameScreen2View17hideActionButtonsEv>
}
 800cd3e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    toggleLED();
 800cd42:	f7ff be4f 	b.w	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        showActionButtons();
 800cd46:	f7ff ffcf 	bl	800cce8 <_ZN21NarutoGameScreen2View17showActionButtonsEv>
 800cd4a:	e7f8      	b.n	800cd3e <_ZN21NarutoGameScreen2View16toggleActionMenuEv+0xc>

0800cd4c <_ZN21NarutoGameScreen2View20hideAllBossHPWidgetsEv>:
 800cd4c:	2300      	movs	r3, #0
{
 800cd4e:	b510      	push	{r4, lr}
 800cd50:	4604      	mov	r4, r0
 800cd52:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800cd56:	f880 32cd 	strb.w	r3, [r0, #717]	@ 0x2cd
 800cd5a:	f880 32f9 	strb.w	r3, [r0, #761]	@ 0x2f9
 800cd5e:	f880 3325 	strb.w	r3, [r0, #805]	@ 0x325
 800cd62:	f880 3351 	strb.w	r3, [r0, #849]	@ 0x351
 800cd66:	f880 337d 	strb.w	r3, [r0, #893]	@ 0x37d
 800cd6a:	f880 33a9 	strb.w	r3, [r0, #937]	@ 0x3a9
 800cd6e:	f880 33d5 	strb.w	r3, [r0, #981]	@ 0x3d5
 800cd72:	f880 3401 	strb.w	r3, [r0, #1025]	@ 0x401
 800cd76:	f880 342d 	strb.w	r3, [r0, #1069]	@ 0x42d
 800cd7a:	f880 3459 	strb.w	r3, [r0, #1113]	@ 0x459
 800cd7e:	f880 3485 	strb.w	r3, [r0, #1157]	@ 0x485
 800cd82:	f880 34b1 	strb.w	r3, [r0, #1201]	@ 0x4b1
 800cd86:	f880 34dd 	strb.w	r3, [r0, #1245]	@ 0x4dd
    BITMAP_HP_130_ID_1.invalidate();
 800cd8a:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800cd8e:	f00f fceb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_120_ID_1.invalidate();
 800cd92:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800cd96:	f00f fce7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_110_ID_1.invalidate();
 800cd9a:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800cd9e:	f00f fce3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_100_ID_1.invalidate();
 800cda2:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800cda6:	f00f fcdf 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID_1.invalidate();
 800cdaa:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800cdae:	f00f fcdb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID_1.invalidate();
 800cdb2:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800cdb6:	f00f fcd7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID_1.invalidate();
 800cdba:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800cdbe:	f00f fcd3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID_1.invalidate();
 800cdc2:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800cdc6:	f00f fccf 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID_1.invalidate();
 800cdca:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800cdce:	f00f fccb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID_1.invalidate();
 800cdd2:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800cdd6:	f00f fcc7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID_1.invalidate();
 800cdda:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800cdde:	f00f fcc3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID_1.invalidate();
 800cde2:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800cde6:	f00f fcbf 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID_1.invalidate();
 800cdea:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800cdee:	f00f fcbb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID_1.invalidate();
 800cdf2:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
}
 800cdf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID_1.invalidate();
 800cdfa:	f00f bcb5 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cdfe <_ZN21NarutoGameScreen2View18forceBossHPVisibleEv>:
{
 800cdfe:	b508      	push	{r3, lr}
    if (bossCurrentHP >= 125) { // Boss bắt đầu với 130 HP
 800ce00:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800ce04:	2b7c      	cmp	r3, #124	@ 0x7c
 800ce06:	dd15      	ble.n	800ce34 <_ZN21NarutoGameScreen2View18forceBossHPVisibleEv+0x36>
 800ce08:	2301      	movs	r3, #1
 800ce0a:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800ce0e:	23ff      	movs	r3, #255	@ 0xff
 800ce10:	f880 32a4 	strb.w	r3, [r0, #676]	@ 0x2a4
        BITMAP_HP_130_ID_1.invalidate();
 800ce14:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800ce18:	f00f fca6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800ce1c:	f7ff fde2 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        toggleLED();
 800ce20:	f7ff fde0 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        toggleLED();
 800ce24:	f7ff fdde 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        toggleLED();
 800ce28:	f7ff fddc 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800ce2c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        toggleLED();
 800ce30:	f7ff bdd8 	b.w	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800ce34:	bd08      	pop	{r3, pc}

0800ce36 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>:
{
 800ce36:	b510      	push	{r4, lr}
 800ce38:	2300      	movs	r3, #0
 800ce3a:	4604      	mov	r4, r0
 800ce3c:	f880 3955 	strb.w	r3, [r0, #2389]	@ 0x955
 800ce40:	f880 3981 	strb.w	r3, [r0, #2433]	@ 0x981
 800ce44:	f880 39ad 	strb.w	r3, [r0, #2477]	@ 0x9ad
 800ce48:	f880 39d9 	strb.w	r3, [r0, #2521]	@ 0x9d9
    x2dame_1.invalidate();
 800ce4c:	f500 6013 	add.w	r0, r0, #2352	@ 0x930
 800ce50:	f00f fc8a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_1.invalidate();
 800ce54:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 800ce58:	f00f fc86 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_1.invalidate();
 800ce5c:	f604 1088 	addw	r0, r4, #2440	@ 0x988
 800ce60:	f00f fc82 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_1.invalidate();
 800ce64:	f604 10b4 	addw	r0, r4, #2484	@ 0x9b4
}
 800ce68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_1.invalidate();
 800ce6c:	f00f bc7c 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ce70 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>:
{
 800ce70:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ce72:	4604      	mov	r4, r0
    hideAllPlayerPowerUps();
 800ce74:	f7ff ffdf 	bl	800ce36 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
    if (!playerPowerUpActive) return;
 800ce78:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800ce7c:	2b00      	cmp	r3, #0
 800ce7e:	d053      	beq.n	800cf28 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0xb8>
    switch (playerPowerUpType) {
 800ce80:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800ce84:	3b01      	subs	r3, #1
 800ce86:	2b03      	cmp	r3, #3
 800ce88:	d80a      	bhi.n	800cea0 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x30>
 800ce8a:	e8df f003 	tbb	[pc, r3]
 800ce8e:	0f02      	.short	0x0f02
 800ce90:	3c26      	.short	0x3c26
 800ce92:	2301      	movs	r3, #1
 800ce94:	f884 3955 	strb.w	r3, [r4, #2389]	@ 0x955
            x2dame_1.invalidate();
 800ce98:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
            sheild_1.invalidate();
 800ce9c:	f00f fc64 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800cea0:	1d20      	adds	r0, r4, #4
}
 800cea2:	b002      	add	sp, #8
 800cea4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cea8:	f00f bc5e 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ceac:	23ff      	movs	r3, #255	@ 0xff
 800ceae:	f884 3984 	strb.w	r3, [r4, #2436]	@ 0x984
 800ceb2:	2601      	movs	r6, #1
            healthplus_1.setPosition(9, 61, 32, 37);
 800ceb4:	f604 155c 	addw	r5, r4, #2396	@ 0x95c
 800ceb8:	2325      	movs	r3, #37	@ 0x25
 800ceba:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
 800cebe:	223d      	movs	r2, #61	@ 0x3d
 800cec0:	9300      	str	r3, [sp, #0]
 800cec2:	2109      	movs	r1, #9
 800cec4:	2320      	movs	r3, #32
 800cec6:	4628      	mov	r0, r5
 800cec8:	f7f5 ff74 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
            healthplus_1.invalidate();
 800cecc:	4628      	mov	r0, r5
 800cece:	f00f fc4b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ced2:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
            sheild_1.invalidate();
 800ced6:	4628      	mov	r0, r5
 800ced8:	e7e0      	b.n	800ce9c <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x2c>
 800ceda:	23ff      	movs	r3, #255	@ 0xff
 800cedc:	f884 39b0 	strb.w	r3, [r4, #2480]	@ 0x9b0
 800cee0:	2601      	movs	r6, #1
            chakragain_1.setPosition(9, 61, 32, 37);
 800cee2:	f604 1588 	addw	r5, r4, #2440	@ 0x988
 800cee6:	2325      	movs	r3, #37	@ 0x25
 800cee8:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
 800ceec:	223d      	movs	r2, #61	@ 0x3d
 800ceee:	9300      	str	r3, [sp, #0]
 800cef0:	2109      	movs	r1, #9
 800cef2:	2320      	movs	r3, #32
 800cef4:	4628      	mov	r0, r5
 800cef6:	f7f5 ff5d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
            chakragain_1.invalidate();
 800cefa:	4628      	mov	r0, r5
 800cefc:	f00f fc34 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800cf00:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
            chakragain_1.invalidate();
 800cf04:	e7e7      	b.n	800ced6 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x66>
 800cf06:	2301      	movs	r3, #1
 800cf08:	f884 39d9 	strb.w	r3, [r4, #2521]	@ 0x9d9
 800cf0c:	23ff      	movs	r3, #255	@ 0xff
 800cf0e:	f884 39dc 	strb.w	r3, [r4, #2524]	@ 0x9dc
            sheild_1.setPosition(8, 59, 32, 37);
 800cf12:	f604 15b4 	addw	r5, r4, #2484	@ 0x9b4
 800cf16:	2325      	movs	r3, #37	@ 0x25
 800cf18:	9300      	str	r3, [sp, #0]
 800cf1a:	223b      	movs	r2, #59	@ 0x3b
 800cf1c:	2320      	movs	r3, #32
 800cf1e:	2108      	movs	r1, #8
 800cf20:	4628      	mov	r0, r5
 800cf22:	f7f5 ff47 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cf26:	e7d6      	b.n	800ced6 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv+0x66>
}
 800cf28:	b002      	add	sp, #8
 800cf2a:	bd70      	pop	{r4, r5, r6, pc}

0800cf2c <_ZN21NarutoGameScreen2View17hideAllAIPowerUpsEv>:
{
 800cf2c:	b510      	push	{r4, lr}
 800cf2e:	2300      	movs	r3, #0
 800cf30:	4604      	mov	r4, r0
 800cf32:	f880 3929 	strb.w	r3, [r0, #2345]	@ 0x929
 800cf36:	f880 3a5d 	strb.w	r3, [r0, #2653]	@ 0xa5d
 800cf3a:	f880 3a31 	strb.w	r3, [r0, #2609]	@ 0xa31
 800cf3e:	f880 3a05 	strb.w	r3, [r0, #2565]	@ 0xa05
    x2dame_2.invalidate();
 800cf42:	f600 1004 	addw	r0, r0, #2308	@ 0x904
 800cf46:	f00f fc0f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_2.invalidate();
 800cf4a:	f604 2038 	addw	r0, r4, #2616	@ 0xa38
 800cf4e:	f00f fc0b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_2.invalidate();
 800cf52:	f604 200c 	addw	r0, r4, #2572	@ 0xa0c
 800cf56:	f00f fc07 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_2.invalidate();
 800cf5a:	f504 601e 	add.w	r0, r4, #2528	@ 0x9e0
}
 800cf5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_2.invalidate();
 800cf62:	f00f bc01 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cf66 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>:
 800cf66:	2300      	movs	r3, #0
}

// ==================== CHARACTER STATE FUNCTIONS ====================

void NarutoGameScreen2View::resetNarutoState()
{
 800cf68:	b510      	push	{r4, lr}
 800cf6a:	f880 3771 	strb.w	r3, [r0, #1905]	@ 0x771
 800cf6e:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800cf72:	f880 3719 	strb.w	r3, [r0, #1817]	@ 0x719
 800cf76:	f880 36ed 	strb.w	r3, [r0, #1773]	@ 0x6ed
 800cf7a:	f880 36c1 	strb.w	r3, [r0, #1729]	@ 0x6c1
    naruto_spe.setVisible(false);
    naruto_lose.setVisible(false);
    naruto_win.setVisible(false);

    // Hiển thị lại naruto bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (playerHP > 0 && !gameEnded) {
 800cf7e:	f8d0 3a64 	ldr.w	r3, [r0, #2660]	@ 0xa64
 800cf82:	2b00      	cmp	r3, #0
{
 800cf84:	4604      	mov	r4, r0
    if (playerHP > 0 && !gameEnded) {
 800cf86:	dd05      	ble.n	800cf94 <_ZN21NarutoGameScreen2View16resetNarutoStateEv+0x2e>
 800cf88:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800cf8c:	b913      	cbnz	r3, 800cf94 <_ZN21NarutoGameScreen2View16resetNarutoStateEv+0x2e>
 800cf8e:	2301      	movs	r3, #1
 800cf90:	f880 3695 	strb.w	r3, [r0, #1685]	@ 0x695
        naruto.setVisible(true);
    }

    // Invalidate tất cả
    naruto_atk.invalidate();
 800cf94:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800cf98:	f00f fbe6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800cf9c:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800cfa0:	f00f fbe2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800cfa4:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800cfa8:	f00f fbde 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800cfac:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800cfb0:	f00f fbda 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800cfb4:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800cfb8:	f00f fbd6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800cfbc:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
}
 800cfc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800cfc4:	f00f bbd0 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800cfc8 <_ZN21NarutoGameScreen2View16resetBleachStateEv>:
 800cfc8:	2300      	movs	r3, #0

void NarutoGameScreen2View::resetBleachState()
{
 800cfca:	b510      	push	{r4, lr}
 800cfcc:	f880 363d 	strb.w	r3, [r0, #1597]	@ 0x63d
 800cfd0:	f880 3611 	strb.w	r3, [r0, #1553]	@ 0x611
 800cfd4:	f880 35e5 	strb.w	r3, [r0, #1509]	@ 0x5e5
 800cfd8:	f880 3561 	strb.w	r3, [r0, #1377]	@ 0x561
 800cfdc:	f880 358d 	strb.w	r3, [r0, #1421]	@ 0x58d
    bleach_spe.setVisible(false);
    bleach_lose.setVisible(false);
    bleach_win.setVisible(false);

    // SỬA: THAY aiHP THÀNH bossCurrentHP
    if (bossCurrentHP > 0 && !gameEnded) {
 800cfe0:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800cfe4:	2b00      	cmp	r3, #0
{
 800cfe6:	4604      	mov	r4, r0
    if (bossCurrentHP > 0 && !gameEnded) {
 800cfe8:	dd05      	ble.n	800cff6 <_ZN21NarutoGameScreen2View16resetBleachStateEv+0x2e>
 800cfea:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800cfee:	b913      	cbnz	r3, 800cff6 <_ZN21NarutoGameScreen2View16resetBleachStateEv+0x2e>
 800cff0:	2301      	movs	r3, #1
 800cff2:	f880 3669 	strb.w	r3, [r0, #1641]	@ 0x669
        bleach.setVisible(true);
    }

    // Invalidate tất cả
    bleach_atk.invalidate();
 800cff6:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800cffa:	f00f fbb5 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800cffe:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800d002:	f00f fbb1 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();
 800d006:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800d00a:	f00f fbad 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800d00e:	f204 503c 	addw	r0, r4, #1340	@ 0x53c
 800d012:	f00f fba9 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800d016:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800d01a:	f00f fba5 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800d01e:	f204 6044 	addw	r0, r4, #1604	@ 0x644
}
 800d022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach.invalidate();
 800d026:	f00f bb9f 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800d02a <_ZN21NarutoGameScreen2View22hideAllPlayerHPWidgetsEv>:
 800d02a:	2300      	movs	r3, #0
            break;
    }
}

void NarutoGameScreen2View::hideAllPlayerHPWidgets()
{
 800d02c:	b510      	push	{r4, lr}
 800d02e:	4604      	mov	r4, r0
 800d030:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800d034:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800d038:	f880 3249 	strb.w	r3, [r0, #585]	@ 0x249
 800d03c:	f880 321d 	strb.w	r3, [r0, #541]	@ 0x21d
 800d040:	f880 31f1 	strb.w	r3, [r0, #497]	@ 0x1f1
 800d044:	f880 31c5 	strb.w	r3, [r0, #453]	@ 0x1c5
 800d048:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800d04c:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800d050:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800d054:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800d058:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
    BITMAP_HP_20_ID.setVisible(false);
    BITMAP_HP_10_ID.setVisible(false);
    BITMAP_HP_0_ID.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID.invalidate();
 800d05c:	3098      	adds	r0, #152	@ 0x98
 800d05e:	f00f fb83 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID.invalidate();
 800d062:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800d066:	f00f fb7f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID.invalidate();
 800d06a:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800d06e:	f00f fb7b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID.invalidate();
 800d072:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800d076:	f00f fb77 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID.invalidate();
 800d07a:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800d07e:	f00f fb73 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID.invalidate();
 800d082:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800d086:	f00f fb6f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID.invalidate();
 800d08a:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800d08e:	f00f fb6b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID.invalidate();
 800d092:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800d096:	f00f fb67 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID.invalidate();
 800d09a:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800d09e:	f00f fb63 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID.invalidate();
 800d0a2:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800d0a6:	f00f fb5f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID.invalidate();
 800d0aa:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
}
 800d0ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID.invalidate();
 800d0b2:	f00f bb59 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800d0b6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>:
// ==================== CHAKRA SYSTEM ====================

void NarutoGameScreen2View::updatePlayerChakraDisplay()
{
    // Đảm bảo chakra level không bị âm
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800d0b6:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800d0ba:	2b00      	cmp	r3, #0
{
 800d0bc:	b513      	push	{r0, r1, r4, lr}
 800d0be:	4602      	mov	r2, r0
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800d0c0:	da0f      	bge.n	800d0e2 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x2c>
 800d0c2:	2300      	movs	r3, #0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800d0c4:	f8c2 3a80 	str.w	r3, [r2, #2688]	@ 0xa80

    // Xử lý đặc biệt khi chakra = 0
    if (playerChakraLevel == 0) {
 800d0c8:	f8d2 1a80 	ldr.w	r1, [r2, #2688]	@ 0xa80
 800d0cc:	f602 0454 	addw	r4, r2, #2132	@ 0x854
 800d0d0:	b959      	cbnz	r1, 800d0ea <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x34>
 800d0d2:	f882 1879 	strb.w	r1, [r2, #2169]	@ 0x879
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của player
    chakra_box1.setPosition(14, 43, currentWidth, 5);
    chakra_box1.invalidate();
 800d0d6:	4620      	mov	r0, r4
}
 800d0d8:	b002      	add	sp, #8
 800d0da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box1.invalidate();
 800d0de:	f00f bb43 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800d0e2:	2b64      	cmp	r3, #100	@ 0x64
 800d0e4:	ddf0      	ble.n	800d0c8 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x12>
 800d0e6:	2364      	movs	r3, #100	@ 0x64
 800d0e8:	e7ec      	b.n	800d0c4 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0xe>
 800d0ea:	2001      	movs	r0, #1
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800d0ec:	2356      	movs	r3, #86	@ 0x56
 800d0ee:	f882 0879 	strb.w	r0, [r2, #2169]	@ 0x879
 800d0f2:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800d0f6:	2a63      	cmp	r2, #99	@ 0x63
 800d0f8:	dd0f      	ble.n	800d11a <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800d0fa:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800d0fe:	428a      	cmp	r2, r1
 800d100:	dc02      	bgt.n	800d108 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x52>
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800d102:	2364      	movs	r3, #100	@ 0x64
 800d104:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box1.setPosition(14, 43, currentWidth, 5);
 800d108:	2205      	movs	r2, #5
 800d10a:	9200      	str	r2, [sp, #0]
 800d10c:	b21b      	sxth	r3, r3
 800d10e:	222b      	movs	r2, #43	@ 0x2b
 800d110:	210e      	movs	r1, #14
 800d112:	4620      	mov	r0, r4
 800d114:	f7f5 fe4e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d118:	e7dd      	b.n	800d0d6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800d11a:	4603      	mov	r3, r0
 800d11c:	e7f4      	b.n	800d108 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv+0x52>

0800d11e <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>:

void NarutoGameScreen2View::updateAIChakraDisplay()
{
    // Đảm bảo AI chakra level không bị âm
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800d11e:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800d122:	2b00      	cmp	r3, #0
{
 800d124:	b513      	push	{r0, r1, r4, lr}
 800d126:	4602      	mov	r2, r0
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800d128:	da0f      	bge.n	800d14a <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x2c>
 800d12a:	2300      	movs	r3, #0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800d12c:	f8c2 3a84 	str.w	r3, [r2, #2692]	@ 0xa84

    // Xử lý đặc biệt khi chakra = 0
    if (aiChakraLevel == 0) {
 800d130:	f8d2 1a84 	ldr.w	r1, [r2, #2692]	@ 0xa84
 800d134:	f502 6408 	add.w	r4, r2, #2176	@ 0x880
 800d138:	b959      	cbnz	r1, 800d152 <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x34>
 800d13a:	f882 18a5 	strb.w	r1, [r2, #2213]	@ 0x8a5
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của AI
    chakra_box2.setPosition(135, 43, currentWidth, 5);
    chakra_box2.invalidate();
 800d13e:	4620      	mov	r0, r4
}
 800d140:	b002      	add	sp, #8
 800d142:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box2.invalidate();
 800d146:	f00f bb0f 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800d14a:	2b64      	cmp	r3, #100	@ 0x64
 800d14c:	ddf0      	ble.n	800d130 <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x12>
 800d14e:	2364      	movs	r3, #100	@ 0x64
 800d150:	e7ec      	b.n	800d12c <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0xe>
 800d152:	2001      	movs	r0, #1
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800d154:	2356      	movs	r3, #86	@ 0x56
 800d156:	f882 08a5 	strb.w	r0, [r2, #2213]	@ 0x8a5
 800d15a:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800d15e:	2a63      	cmp	r2, #99	@ 0x63
 800d160:	dd0f      	ble.n	800d182 <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800d162:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800d166:	428a      	cmp	r2, r1
 800d168:	dc02      	bgt.n	800d170 <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x52>
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800d16a:	2364      	movs	r3, #100	@ 0x64
 800d16c:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box2.setPosition(135, 43, currentWidth, 5);
 800d170:	2205      	movs	r2, #5
 800d172:	9200      	str	r2, [sp, #0]
 800d174:	b21b      	sxth	r3, r3
 800d176:	222b      	movs	r2, #43	@ 0x2b
 800d178:	2187      	movs	r1, #135	@ 0x87
 800d17a:	4620      	mov	r0, r4
 800d17c:	f7f5 fe1a 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d180:	e7dd      	b.n	800d13e <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800d182:	4603      	mov	r3, r0
 800d184:	e7f4      	b.n	800d170 <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv+0x52>
	...

0800d188 <_ZN21NarutoGameScreen2View7endGameEb>:
    // Logic game end giờ được xử lý trong updatePlayerHPDisplay() và updateAIHPDisplay()
    return;
}

void NarutoGameScreen2View::endGame(bool playerWon)
{
 800d188:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d18c:	4604      	mov	r4, r0
    gameEnded = true;
 800d18e:	2601      	movs	r6, #1
 800d190:	2500      	movs	r5, #0
 800d192:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69
{
 800d196:	460f      	mov	r7, r1

    // Hide menu actions immediately
    hideActionButtons();
 800d198:	f7ff fd81 	bl	800cc9e <_ZN21NarutoGameScreen2View17hideActionButtonsEv>
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800d19c:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800d1a0:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
 800d1a4:	f00f fae0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons when game ends
    hideAllPlayerPowerUps();
 800d1a8:	4620      	mov	r0, r4
 800d1aa:	f7ff fe44 	bl	800ce36 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
    fireAnimationTimer = 0;
    resetTimerActive = false;
    resetTimer = 0;

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800d1ae:	4620      	mov	r0, r4
    fireAnimationActive = false;
 800d1b0:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800d1b4:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    resetTimerActive = false;
 800d1b8:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    resetTimer = 0;
 800d1bc:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    hideAllFireEffects();
 800d1c0:	f7ff fc92 	bl	800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL TO FORCE REFRESH =====
    naruto.invalidate();
 800d1c4:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800d1c8:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800d1cc:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800d1d0:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800d1d4:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800d1d8:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800d1dc:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800d1e0:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800d1e4:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800d1e8:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800d1ec:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800d1f0:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800d1f4:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800d1f8:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800d1fc:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 800d200:	f00f fab2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800d204:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800d208:	f00f faae 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800d20c:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800d210:	f00f faaa 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
    naruto_lose.invalidate();
 800d214:	f504 69d9 	add.w	r9, r4, #1736	@ 0x6c8
    naruto_spe.invalidate();
 800d218:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800d21c:	f00f faa4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800d220:	f204 6b9c 	addw	fp, r4, #1692	@ 0x69c
    naruto_lose.invalidate();
 800d224:	4648      	mov	r0, r9
 800d226:	f00f fa9f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800d22a:	4658      	mov	r0, fp
 800d22c:	f00f fa9c 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800d230:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d234:	f00f fa98 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800d238:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800d23c:	f00f fa94 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800d240:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800d244:	f00f fa90 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800d248:	f204 5a3c 	addw	sl, r4, #1340	@ 0x53c
    bleach_spe.invalidate();  // QUAN TRỌNG
 800d24c:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800d250:	f00f fa8a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800d254:	f504 68ad 	add.w	r8, r4, #1384	@ 0x568
    bleach_lose.invalidate();
 800d258:	4650      	mov	r0, sl
 800d25a:	f00f fa85 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800d25e:	4640      	mov	r0, r8
 800d260:	f00f fa82 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    if (playerWon) {
 800d264:	b3cf      	cbz	r7, 800d2da <_ZN21NarutoGameScreen2View7endGameEb+0x152>
        // LED signal for character unlock
        for (int i = 0; i < 8; i++) {
            toggleLED();
 800d266:	f7ff fbbd 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d26a:	f7ff fbbb 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d26e:	f7ff fbb9 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d272:	f7ff fbb7 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d276:	f7ff fbb5 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d27a:	f7ff fbb3 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d27e:	f7ff fbb1 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d282:	f7ff fbaf 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        naruto_win.setVisible(true);
        bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
        win.setVisible(true);

        // FORCE REFRESH ONLY NEEDED SPRITES
        naruto_win.invalidate();
 800d286:	4658      	mov	r0, fp
 800d288:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800d28c:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800d290:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
 800d294:	f00f fa68 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_lose.invalidate();
 800d298:	4650      	mov	r0, sl
 800d29a:	f00f fa65 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        win.invalidate();
 800d29e:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800d2a2:	f00f fa61 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

        // LED blink rapidly for victory
        for (int i = 0; i < 6; i++) {
            toggleLED();
 800d2a6:	f7ff fb9d 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d2aa:	f7ff fb9b 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d2ae:	f7ff fb99 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d2b2:	f7ff fb97 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d2b6:	f7ff fb95 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d2ba:	f7ff fb93 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        application().gotoBackUpScreenScreenNoTransition();
        return;
    }

    // ===== CHỈ KHI PLAYER THẮNG MỚI CÓ AUTO RETURN TIMER =====
    autoReturnTimer = 0;
 800d2be:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = true;
 800d2c2:	f884 6a9c 	strb.w	r6, [r4, #2716]	@ 0xa9c

    // Debug: LED signal that timer has started (chỉ khi player thắng)
    toggleLED();
 800d2c6:	f7ff fb8d 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
 800d2ca:	f7ff fb8b 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
 800d2ce:	f7ff fb89 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

    // Ensure gameEnded = true is set
    gameEnded = true;
 800d2d2:	f884 6a69 	strb.w	r6, [r4, #2665]	@ 0xa69
}
 800d2d6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        naruto_lose.invalidate();
 800d2da:	4648      	mov	r0, r9
 800d2dc:	f884 66ed 	strb.w	r6, [r4, #1773]	@ 0x6ed
 800d2e0:	f884 658d 	strb.w	r6, [r4, #1421]	@ 0x58d
 800d2e4:	f884 68d1 	strb.w	r6, [r4, #2257]	@ 0x8d1
 800d2e8:	f00f fa3e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_win.invalidate();
 800d2ec:	4640      	mov	r0, r8
 800d2ee:	f00f fa3b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        gameover.invalidate();
 800d2f2:	f604 00ac 	addw	r0, r4, #2220	@ 0x8ac
 800d2f6:	f00f fa37 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800d2fa:	4632      	mov	r2, r6
 800d2fc:	4808      	ldr	r0, [pc, #32]	@ (800d320 <_ZN21NarutoGameScreen2View7endGameEb+0x198>)
 800d2fe:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800d302:	f003 fc2b 	bl	8010b5c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800d306:	463a      	mov	r2, r7
 800d308:	4805      	ldr	r0, [pc, #20]	@ (800d320 <_ZN21NarutoGameScreen2View7endGameEb+0x198>)
 800d30a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800d30e:	f003 fc25 	bl	8010b5c <HAL_GPIO_WritePin>
    virtual ~NarutoGameScreen2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800d312:	f00e f877 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800d316:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
        application().gotoBackUpScreenScreenNoTransition();
 800d31a:	f7f6 be29 	b.w	8003f70 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
 800d31e:	bf00      	nop
 800d320:	40021800 	.word	0x40021800

0800d324 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>:
{
 800d324:	b538      	push	{r3, r4, r5, lr}
 800d326:	4604      	mov	r4, r0
    hideAllPlayerHPWidgets();
 800d328:	f7ff fe7f 	bl	800d02a <_ZN21NarutoGameScreen2View22hideAllPlayerHPWidgetsEv>
    int roundedHP = (playerHP / 10) * 10;
 800d32c:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
    if (playerHP == 0 || roundedHP == 0) {
 800d330:	2b09      	cmp	r3, #9
 800d332:	dc15      	bgt.n	800d360 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x3c>
 800d334:	2301      	movs	r3, #1
 800d336:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        BITMAP_HP_0_ID.invalidate();
 800d33a:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800d33e:	f00f fa13 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d342:	250a      	movs	r5, #10
            toggleLED();
 800d344:	f7ff fb4e 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800d348:	3d01      	subs	r5, #1
 800d34a:	d1fb      	bne.n	800d344 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x20>
        if (!gameEnded) {
 800d34c:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800d350:	2b00      	cmp	r3, #0
 800d352:	d172      	bne.n	800d43a <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x116>
            endGame(false); // Player thua
 800d354:	4620      	mov	r0, r4
 800d356:	2100      	movs	r1, #0
}
 800d358:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(false); // Player thua
 800d35c:	f7ff bf14 	b.w	800d188 <_ZN21NarutoGameScreen2View7endGameEb>
    int roundedHP = (playerHP / 10) * 10;
 800d360:	220a      	movs	r2, #10
 800d362:	fb93 f1f2 	sdiv	r1, r3, r2
 800d366:	4351      	muls	r1, r2
    switch (roundedHP) {
 800d368:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800d36c:	2a09      	cmp	r2, #9
 800d36e:	d94a      	bls.n	800d406 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xe2>
 800d370:	293c      	cmp	r1, #60	@ 0x3c
 800d372:	f04f 0201 	mov.w	r2, #1
 800d376:	dc20      	bgt.n	800d3ba <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x96>
 800d378:	f1a3 001e 	sub.w	r0, r3, #30
 800d37c:	2809      	cmp	r0, #9
 800d37e:	d94d      	bls.n	800d41c <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xf8>
 800d380:	291e      	cmp	r1, #30
 800d382:	dc0e      	bgt.n	800d3a2 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x7e>
 800d384:	f1a3 010a 	sub.w	r1, r3, #10
 800d388:	2909      	cmp	r1, #9
 800d38a:	d951      	bls.n	800d430 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x10c>
 800d38c:	3b14      	subs	r3, #20
 800d38e:	2b09      	cmp	r3, #9
 800d390:	d949      	bls.n	800d426 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x102>
 800d392:	2301      	movs	r3, #1
 800d394:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
            BITMAP_HP_0_ID.invalidate();
 800d398:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800d39c:	f00f f9e4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800d3a0:	e7d4      	b.n	800d34c <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x28>
    switch (roundedHP) {
 800d3a2:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800d3a6:	2909      	cmp	r1, #9
 800d3a8:	d933      	bls.n	800d412 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xee>
 800d3aa:	3b32      	subs	r3, #50	@ 0x32
 800d3ac:	2b09      	cmp	r3, #9
 800d3ae:	d8f0      	bhi.n	800d392 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x6e>
 800d3b0:	f884 21c5 	strb.w	r2, [r4, #453]	@ 0x1c5
            BITMAP_HP_50_ID.invalidate();
 800d3b4:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800d3b8:	e017      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800d3ba:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800d3be:	2809      	cmp	r0, #9
 800d3c0:	d917      	bls.n	800d3f2 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xce>
 800d3c2:	295a      	cmp	r1, #90	@ 0x5a
 800d3c4:	dc0b      	bgt.n	800d3de <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xba>
 800d3c6:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800d3ca:	2909      	cmp	r1, #9
 800d3cc:	d916      	bls.n	800d3fc <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xd8>
 800d3ce:	3b50      	subs	r3, #80	@ 0x50
 800d3d0:	2b09      	cmp	r3, #9
 800d3d2:	d8de      	bhi.n	800d392 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x6e>
 800d3d4:	f884 2249 	strb.w	r2, [r4, #585]	@ 0x249
            BITMAP_HP_80_ID.invalidate();
 800d3d8:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800d3dc:	e005      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800d3de:	2963      	cmp	r1, #99	@ 0x63
 800d3e0:	ddd7      	ble.n	800d392 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0x6e>
 800d3e2:	f884 20bd 	strb.w	r2, [r4, #189]	@ 0xbd
            BITMAP_HP_100_ID.invalidate();
 800d3e6:	f104 0098 	add.w	r0, r4, #152	@ 0x98
}
 800d3ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID.invalidate();
 800d3ee:	f00f b9bb 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d3f2:	f884 2275 	strb.w	r2, [r4, #629]	@ 0x275
            BITMAP_HP_90_ID.invalidate();
 800d3f6:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800d3fa:	e7f6      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d3fc:	f884 221d 	strb.w	r2, [r4, #541]	@ 0x21d
            BITMAP_HP_70_ID.invalidate();
 800d400:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800d404:	e7f1      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d406:	2301      	movs	r3, #1
 800d408:	f884 31f1 	strb.w	r3, [r4, #497]	@ 0x1f1
            BITMAP_HP_60_ID.invalidate();
 800d40c:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800d410:	e7eb      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d412:	f884 2199 	strb.w	r2, [r4, #409]	@ 0x199
            BITMAP_HP_40_ID.invalidate();
 800d416:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800d41a:	e7e6      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d41c:	f884 216d 	strb.w	r2, [r4, #365]	@ 0x16d
            BITMAP_HP_30_ID.invalidate();
 800d420:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800d424:	e7e1      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d426:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
            BITMAP_HP_20_ID.invalidate();
 800d42a:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800d42e:	e7dc      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
 800d430:	f884 20e9 	strb.w	r2, [r4, #233]	@ 0xe9
            BITMAP_HP_10_ID.invalidate();
 800d434:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800d438:	e7d7      	b.n	800d3ea <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv+0xc6>
}
 800d43a:	bd38      	pop	{r3, r4, r5, pc}

0800d43c <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi>:
    if (!isPlayer) return; // Boss không có power-up
 800d43c:	b1c1      	cbz	r1, 800d470 <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi+0x34>
    switch (type) {
 800d43e:	2a02      	cmp	r2, #2
 800d440:	d002      	beq.n	800d448 <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi+0xc>
 800d442:	2a03      	cmp	r2, #3
 800d444:	d00a      	beq.n	800d45c <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi+0x20>
 800d446:	4770      	bx	lr
            playerHP += 8; // TĂNG TỪ 5 LÊN 8
 800d448:	f8d0 2a64 	ldr.w	r2, [r0, #2660]	@ 0xa64
 800d44c:	3208      	adds	r2, #8
            if (playerHP > 100) playerHP = 100;
 800d44e:	2a64      	cmp	r2, #100	@ 0x64
 800d450:	bfa8      	it	ge
 800d452:	2264      	movge	r2, #100	@ 0x64
 800d454:	f8c0 2a64 	str.w	r2, [r0, #2660]	@ 0xa64
            updatePlayerHPDisplay();
 800d458:	f7ff bf64 	b.w	800d324 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
            playerChakraLevel += 20; // TĂNG TỪ 15 LÊN 20
 800d45c:	f8d0 2a80 	ldr.w	r2, [r0, #2688]	@ 0xa80
 800d460:	3214      	adds	r2, #20
            if (playerChakraLevel > 100) playerChakraLevel = 100;
 800d462:	2a64      	cmp	r2, #100	@ 0x64
 800d464:	bfa8      	it	ge
 800d466:	2264      	movge	r2, #100	@ 0x64
 800d468:	f8c0 2a80 	str.w	r2, [r0, #2688]	@ 0xa80
            updatePlayerChakraDisplay();
 800d46c:	f7ff be23 	b.w	800d0b6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
}
 800d470:	4770      	bx	lr

0800d472 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv>:
{
 800d472:	b510      	push	{r4, lr}
 800d474:	4604      	mov	r4, r0
        toggleLED();
 800d476:	f7ff fab5 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d47a:	f7ff fab3 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800d47e:	f7ff fab1 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    int playerRoll = generateRandomNumber(1, 100);
 800d482:	2264      	movs	r2, #100	@ 0x64
 800d484:	2101      	movs	r1, #1
 800d486:	4620      	mov	r0, r4
 800d488:	f7ff fb08 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    if (playerRoll >= 1 && playerRoll <= 30) {
 800d48c:	1e43      	subs	r3, r0, #1
 800d48e:	2b1d      	cmp	r3, #29
 800d490:	d915      	bls.n	800d4be <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x4c>
    } else if (playerRoll >= 31 && playerRoll <= 55) {
 800d492:	f1a0 031f 	sub.w	r3, r0, #31
 800d496:	2b18      	cmp	r3, #24
 800d498:	d913      	bls.n	800d4c2 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x50>
    } else if (playerRoll >= 56 && playerRoll <= 80) {
 800d49a:	3838      	subs	r0, #56	@ 0x38
        newPlayerPowerUp = 2; // 25% - Heal (ENHANCED)
 800d49c:	2818      	cmp	r0, #24
 800d49e:	bf8c      	ite	hi
 800d4a0:	2203      	movhi	r2, #3
 800d4a2:	2202      	movls	r2, #2
    playerPowerUpActive = true;
 800d4a4:	2101      	movs	r1, #1
    applyInstantPowerUp(true, playerPowerUpType);
 800d4a6:	4620      	mov	r0, r4
    playerPowerUpType = newPlayerPowerUp;
 800d4a8:	f8c4 2aa4 	str.w	r2, [r4, #2724]	@ 0xaa4
    playerPowerUpActive = true;
 800d4ac:	f884 1aac 	strb.w	r1, [r4, #2732]	@ 0xaac
    applyInstantPowerUp(true, playerPowerUpType);
 800d4b0:	f7ff ffc4 	bl	800d43c <_ZN21NarutoGameScreen2View19applyInstantPowerUpEbi>
    updatePlayerPowerUpDisplay();
 800d4b4:	4620      	mov	r0, r4
}
 800d4b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updatePlayerPowerUpDisplay();
 800d4ba:	f7ff bcd9 	b.w	800ce70 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
        newPlayerPowerUp = 4; // 30% - Shield
 800d4be:	2204      	movs	r2, #4
 800d4c0:	e7f0      	b.n	800d4a4 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x32>
        newPlayerPowerUp = 1; // 25% - Double Damage
 800d4c2:	460a      	mov	r2, r1
 800d4c4:	e7ee      	b.n	800d4a4 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv+0x32>

0800d4c6 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0>:
        turnCounter++;
 800d4c6:	f8d0 3aa0 	ldr.w	r3, [r0, #2720]	@ 0xaa0
void NarutoGameScreen2View::checkTurnComplete()
 800d4ca:	b510      	push	{r4, lr}
        turnCounter++;
 800d4cc:	3301      	adds	r3, #1
void NarutoGameScreen2View::checkTurnComplete()
 800d4ce:	4604      	mov	r4, r0
        turnCounter++;
 800d4d0:	f8c0 3aa0 	str.w	r3, [r0, #2720]	@ 0xaa0
        toggleLED();
 800d4d4:	f7ff fa86 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        if (!playerSpecialUsed && !aiSpecialUsed) {
 800d4d8:	f894 3a8a 	ldrb.w	r3, [r4, #2698]	@ 0xa8a
 800d4dc:	b963      	cbnz	r3, 800d4f8 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x32>
 800d4de:	f894 3a8b 	ldrb.w	r3, [r4, #2699]	@ 0xa8b
 800d4e2:	b94b      	cbnz	r3, 800d4f8 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x32>
            int powerUpChance = generateRandomNumber(1, 100);
 800d4e4:	2264      	movs	r2, #100	@ 0x64
 800d4e6:	2101      	movs	r1, #1
 800d4e8:	4620      	mov	r0, r4
 800d4ea:	f7ff fad7 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
            if (powerUpChance <= 25) {
 800d4ee:	2819      	cmp	r0, #25
 800d4f0:	dc02      	bgt.n	800d4f8 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x32>
                givePlayerPowerUp(); // Chỉ player nhận power-up
 800d4f2:	4620      	mov	r0, r4
 800d4f4:	f7ff ffbd 	bl	800d472 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv>
        if (playerPowerUpActive && (playerPowerUpType == 2 || playerPowerUpType == 3 || playerPowerUpType == 4)) {
 800d4f8:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800d4fc:	b163      	cbz	r3, 800d518 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x52>
 800d4fe:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800d502:	3b02      	subs	r3, #2
 800d504:	2b02      	cmp	r3, #2
 800d506:	d807      	bhi.n	800d518 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0+0x52>
        playerPowerUpActive = false;
 800d508:	2300      	movs	r3, #0
 800d50a:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d50e:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d512:	4620      	mov	r0, r4
 800d514:	f7ff fcac 	bl	800ce70 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
        playerActionDone = false;
 800d518:	2300      	movs	r3, #0
 800d51a:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
        playerSpecialUsed = false;
 800d51e:	f8a4 3a8a 	strh.w	r3, [r4, #2698]	@ 0xa8a
}
 800d522:	bd10      	pop	{r4, pc}

0800d524 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv>:
    if (playerActionDone && aiActionDone) {
 800d524:	f890 2aae 	ldrb.w	r2, [r0, #2734]	@ 0xaae
 800d528:	b122      	cbz	r2, 800d534 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv+0x10>
 800d52a:	f890 3aaf 	ldrb.w	r3, [r0, #2735]	@ 0xaaf
 800d52e:	b10b      	cbz	r3, 800d534 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv+0x10>
 800d530:	f7ff bfc9 	b.w	800d4c6 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0>
}
 800d534:	4770      	bx	lr

0800d536 <_ZN21NarutoGameScreen2View12playerDefendEv>:
{
 800d536:	b570      	push	{r4, r5, r6, lr}
 800d538:	4604      	mov	r4, r0
 800d53a:	2601      	movs	r6, #1
 800d53c:	2500      	movs	r5, #0
    resetNarutoState();
 800d53e:	f7ff fd12 	bl	800cf66 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
    naruto_def.invalidate();
 800d542:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800d546:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800d54a:	f884 6745 	strb.w	r6, [r4, #1861]	@ 0x745
 800d54e:	f00f f90b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800d552:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800d556:	f00f f907 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800d55a:	2207      	movs	r2, #7
 800d55c:	2103      	movs	r1, #3
    playerDefending = true;
 800d55e:	f884 6a88 	strb.w	r6, [r4, #2696]	@ 0xa88
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800d562:	4620      	mov	r0, r4
 800d564:	f7ff fa9a 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    playerHP += healAmount;
 800d568:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800d56c:	4403      	add	r3, r0
    if (playerHP > 100) playerHP = 100;
 800d56e:	2b64      	cmp	r3, #100	@ 0x64
 800d570:	bfa8      	it	ge
 800d572:	2364      	movge	r3, #100	@ 0x64
 800d574:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    playerChakraLevel += generateRandomNumber(10, 18); // TĂNG TỪ 8-15 LÊN 10-18
 800d578:	2212      	movs	r2, #18
 800d57a:	210a      	movs	r1, #10
 800d57c:	4620      	mov	r0, r4
 800d57e:	f7ff fa8d 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800d582:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800d586:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800d588:	2b64      	cmp	r3, #100	@ 0x64
 800d58a:	bfa8      	it	ge
 800d58c:	2364      	movge	r3, #100	@ 0x64
 800d58e:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (playerPowerUpActive && playerPowerUpType == 1) {
 800d592:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800d596:	b153      	cbz	r3, 800d5ae <_ZN21NarutoGameScreen2View12playerDefendEv+0x78>
 800d598:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800d59c:	42b3      	cmp	r3, r6
 800d59e:	d106      	bne.n	800d5ae <_ZN21NarutoGameScreen2View12playerDefendEv+0x78>
        playerPowerUpActive = false;
 800d5a0:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d5a4:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d5a8:	4620      	mov	r0, r4
 800d5aa:	f7ff fc61 	bl	800ce70 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800d5ae:	4620      	mov	r0, r4
 800d5b0:	f7ff feb8 	bl	800d324 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800d5b4:	4620      	mov	r0, r4
 800d5b6:	f7ff fd7e 	bl	800d0b6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
    toggleLED();
 800d5ba:	f7ff fa13 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800d5be:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800d5c0:	2200      	movs	r2, #0
    playerActionDone = true;
 800d5c2:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800d5c6:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800d5ca:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d5ce:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d5d2:	bd70      	pop	{r4, r5, r6, pc}

0800d5d4 <_ZN21NarutoGameScreen2View8aiAttackEv>:
{
 800d5d4:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded) return;
 800d5d6:	f890 6a69 	ldrb.w	r6, [r0, #2665]	@ 0xa69
{
 800d5da:	4604      	mov	r4, r0
    if (gameEnded) return;
 800d5dc:	2e00      	cmp	r6, #0
 800d5de:	d157      	bne.n	800d690 <_ZN21NarutoGameScreen2View8aiAttackEv+0xbc>
    resetBleachState();
 800d5e0:	f7ff fcf2 	bl	800cfc8 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
 800d5e4:	2301      	movs	r3, #1
 800d5e6:	f884 363d 	strb.w	r3, [r4, #1597]	@ 0x63d
    bleach_atk.invalidate();
 800d5ea:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800d5ee:	f884 6669 	strb.w	r6, [r4, #1641]	@ 0x669
 800d5f2:	f00f f8b9 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800d5f6:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d5fa:	f00f f8b5 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800d5fe:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
 800d602:	2b03      	cmp	r3, #3
 800d604:	d045      	beq.n	800d692 <_ZN21NarutoGameScreen2View8aiAttackEv+0xbe>
 800d606:	2b04      	cmp	r3, #4
 800d608:	d046      	beq.n	800d698 <_ZN21NarutoGameScreen2View8aiAttackEv+0xc4>
 800d60a:	2b02      	cmp	r3, #2
            baseDamage = generateRandomNumber(4, 10);
 800d60c:	bf19      	ittee	ne
 800d60e:	220a      	movne	r2, #10
 800d610:	2104      	movne	r1, #4
            baseDamage = generateRandomNumber(6, 12);
 800d612:	220c      	moveq	r2, #12
 800d614:	2106      	moveq	r1, #6
            baseDamage = generateRandomNumber(10, 18);
 800d616:	4620      	mov	r0, r4
 800d618:	f7ff fa40 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d61c:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
            baseDamage = generateRandomNumber(10, 18);
 800d620:	4605      	mov	r5, r0
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d622:	b11b      	cbz	r3, 800d62c <_ZN21NarutoGameScreen2View8aiAttackEv+0x58>
 800d624:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800d628:	2a04      	cmp	r2, #4
 800d62a:	d038      	beq.n	800d69e <_ZN21NarutoGameScreen2View8aiAttackEv+0xca>
    int actualDamage = calculateDamage(baseDamage, playerDefending, false, playerHasShield);
 800d62c:	f894 3a88 	ldrb.w	r3, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800d630:	b3c3      	cbz	r3, 800d6a4 <_ZN21NarutoGameScreen2View8aiAttackEv+0xd0>
        if (finalDamage < 1) finalDamage = 1;
 800d632:	2d01      	cmp	r5, #1
 800d634:	dd38      	ble.n	800d6a8 <_ZN21NarutoGameScreen2View8aiAttackEv+0xd4>
        finalDamage = finalDamage / 2;
 800d636:	106d      	asrs	r5, r5, #1
    playerHP -= actualDamage;
 800d638:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800d63c:	1b5b      	subs	r3, r3, r5
    if (playerHP < 0) playerHP = 0;
 800d63e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d642:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    int chakraGain = generateRandomNumber(4, 8); // GIẢM TỪ 8-15 XUỐNG 4-8
 800d646:	2208      	movs	r2, #8
 800d648:	2104      	movs	r1, #4
 800d64a:	4620      	mov	r0, r4
 800d64c:	f7ff fa26 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    aiChakraLevel += chakraGain;
 800d650:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800d654:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800d656:	2b64      	cmp	r3, #100	@ 0x64
 800d658:	bfa8      	it	ge
 800d65a:	2364      	movge	r3, #100	@ 0x64
 800d65c:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800d660:	b13e      	cbz	r6, 800d672 <_ZN21NarutoGameScreen2View8aiAttackEv+0x9e>
 800d662:	b935      	cbnz	r5, 800d672 <_ZN21NarutoGameScreen2View8aiAttackEv+0x9e>
        playerPowerUpActive = false;
 800d664:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d668:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d66c:	4620      	mov	r0, r4
 800d66e:	f7ff fbff 	bl	800ce70 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800d672:	4620      	mov	r0, r4
 800d674:	f7ff fe56 	bl	800d324 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    updateAIChakraDisplay();
 800d678:	4620      	mov	r0, r4
 800d67a:	f7ff fd50 	bl	800d11e <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    startAttackFireAnimation();
 800d67e:	4620      	mov	r0, r4
 800d680:	f7ff fa49 	bl	800cb16 <_ZN21NarutoGameScreen2View24startAttackFireAnimationEv>
    resetTimer = 0;
 800d684:	2300      	movs	r3, #0
 800d686:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d68a:	2301      	movs	r3, #1
 800d68c:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d690:	bd70      	pop	{r4, r5, r6, pc}
            baseDamage = generateRandomNumber(8, 15);
 800d692:	220f      	movs	r2, #15
 800d694:	2108      	movs	r1, #8
 800d696:	e7be      	b.n	800d616 <_ZN21NarutoGameScreen2View8aiAttackEv+0x42>
            baseDamage = generateRandomNumber(10, 18);
 800d698:	2212      	movs	r2, #18
 800d69a:	210a      	movs	r1, #10
 800d69c:	e7bb      	b.n	800d616 <_ZN21NarutoGameScreen2View8aiAttackEv+0x42>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d69e:	461e      	mov	r6, r3
        return 0; // Shield chặn hoàn toàn
 800d6a0:	2500      	movs	r5, #0
 800d6a2:	e7c9      	b.n	800d638 <_ZN21NarutoGameScreen2View8aiAttackEv+0x64>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d6a4:	461e      	mov	r6, r3
 800d6a6:	e7c7      	b.n	800d638 <_ZN21NarutoGameScreen2View8aiAttackEv+0x64>
        if (finalDamage < 1) finalDamage = 1;
 800d6a8:	2501      	movs	r5, #1
 800d6aa:	e7c5      	b.n	800d638 <_ZN21NarutoGameScreen2View8aiAttackEv+0x64>

0800d6ac <_ZN21NarutoGameScreen2View9aiSpecialEv>:
{
 800d6ac:	b538      	push	{r3, r4, r5, lr}
    if (rageMode && bossPhase >= 3) {
 800d6ae:	f890 3a78 	ldrb.w	r3, [r0, #2680]	@ 0xa78
{
 800d6b2:	4604      	mov	r4, r0
    if (rageMode && bossPhase >= 3) {
 800d6b4:	2b00      	cmp	r3, #0
 800d6b6:	d04a      	beq.n	800d74e <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa2>
 800d6b8:	f8d0 3a6c 	ldr.w	r3, [r0, #2668]	@ 0xa6c
    int requiredChakra = 100;
 800d6bc:	2b02      	cmp	r3, #2
 800d6be:	bfcc      	ite	gt
 800d6c0:	2350      	movgt	r3, #80	@ 0x50
 800d6c2:	2364      	movle	r3, #100	@ 0x64
    if (aiChakraLevel < requiredChakra || gameEnded) {
 800d6c4:	f8d4 2a84 	ldr.w	r2, [r4, #2692]	@ 0xa84
 800d6c8:	429a      	cmp	r2, r3
 800d6ca:	db3f      	blt.n	800d74c <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa0>
 800d6cc:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800d6d0:	bbe5      	cbnz	r5, 800d74c <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa0>
    resetBleachState();
 800d6d2:	4620      	mov	r0, r4
 800d6d4:	f7ff fc78 	bl	800cfc8 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
 800d6d8:	2301      	movs	r3, #1
 800d6da:	f884 35e5 	strb.w	r3, [r4, #1509]	@ 0x5e5
    bleach_spe.invalidate();
 800d6de:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800d6e2:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800d6e6:	f00f f83f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800d6ea:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d6ee:	f00f f83b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d6f2:	f894 2aac 	ldrb.w	r2, [r4, #2732]	@ 0xaac
 800d6f6:	b11a      	cbz	r2, 800d700 <_ZN21NarutoGameScreen2View9aiSpecialEv+0x54>
 800d6f8:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800d6fc:	2b04      	cmp	r3, #4
 800d6fe:	d003      	beq.n	800d708 <_ZN21NarutoGameScreen2View9aiSpecialEv+0x5c>
    int actualDamage = calculateSpecialDamage(specialDamage, playerDefending, playerHasShield);
 800d700:	f894 2a88 	ldrb.w	r2, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800d704:	bb2a      	cbnz	r2, 800d752 <_ZN21NarutoGameScreen2View9aiSpecialEv+0xa6>
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800d706:	2546      	movs	r5, #70	@ 0x46
    playerHP -= actualDamage;
 800d708:	f8d4 1a64 	ldr.w	r1, [r4, #2660]	@ 0xa64
 800d70c:	1b49      	subs	r1, r1, r5
    if (playerHP < 0) playerHP = 0;
 800d70e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 800d712:	f8c4 1a64 	str.w	r1, [r4, #2660]	@ 0xa64
    aiChakraLevel = 0;
 800d716:	2100      	movs	r1, #0
 800d718:	f8c4 1a84 	str.w	r1, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800d71c:	b13a      	cbz	r2, 800d72e <_ZN21NarutoGameScreen2View9aiSpecialEv+0x82>
 800d71e:	b935      	cbnz	r5, 800d72e <_ZN21NarutoGameScreen2View9aiSpecialEv+0x82>
        playerPowerUpActive = false;
 800d720:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800d724:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800d728:	4620      	mov	r0, r4
 800d72a:	f7ff fba1 	bl	800ce70 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updateAIChakraDisplay();
 800d72e:	4620      	mov	r0, r4
 800d730:	f7ff fcf5 	bl	800d11e <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    updatePlayerHPDisplay();
 800d734:	4620      	mov	r0, r4
 800d736:	f7ff fdf5 	bl	800d324 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    startSpecialFireAnimation();
 800d73a:	4620      	mov	r0, r4
 800d73c:	f7ff fa01 	bl	800cb42 <_ZN21NarutoGameScreen2View25startSpecialFireAnimationEv>
    resetTimer = 0;
 800d740:	2300      	movs	r3, #0
 800d742:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800d746:	2301      	movs	r3, #1
 800d748:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800d74c:	bd38      	pop	{r3, r4, r5, pc}
    int requiredChakra = 100;
 800d74e:	2364      	movs	r3, #100	@ 0x64
 800d750:	e7b8      	b.n	800d6c4 <_ZN21NarutoGameScreen2View9aiSpecialEv+0x18>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800d752:	2200      	movs	r2, #0
        finalDamage = finalDamage / 2; // 70 / 2 = 35
 800d754:	2523      	movs	r5, #35	@ 0x23
 800d756:	e7d7      	b.n	800d708 <_ZN21NarutoGameScreen2View9aiSpecialEv+0x5c>

0800d758 <_ZN21NarutoGameScreen2View17activateEasterEggEv>:

void NarutoGameScreen2View::activateEasterEgg()
{
 800d758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Set flag
    easterEggActivated = true;
    easterEggTimer = 0;
 800d75a:	2500      	movs	r5, #0
    easterEggActivated = true;
 800d75c:	2601      	movs	r6, #1
{
 800d75e:	4604      	mov	r4, r0
    easterEggTimer = 0;
 800d760:	f8c0 5acc 	str.w	r5, [r0, #2764]	@ 0xacc
    gameEnded = true; // Kết thúc game ngay lập tức

    // FORCE STOP ALL ANIMATIONS
    fireAnimationActive = false;
 800d764:	f880 5ab4 	strb.w	r5, [r0, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800d768:	f8c0 5ab0 	str.w	r5, [r0, #2736]	@ 0xab0
    resetTimerActive = false;
 800d76c:	f880 5a94 	strb.w	r5, [r0, #2708]	@ 0xa94
    resetTimer = 0;
 800d770:	f8c0 5a90 	str.w	r5, [r0, #2704]	@ 0xa90
    easterEggActivated = true;
 800d774:	f880 6ac8 	strb.w	r6, [r0, #2760]	@ 0xac8
    gameEnded = true; // Kết thúc game ngay lập tức
 800d778:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800d77c:	f7ff f9b4 	bl	800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>

    // Hide menu actions immediately
    hideActionButtons();
 800d780:	4620      	mov	r0, r4
 800d782:	f7ff fa8c 	bl	800cc9e <_ZN21NarutoGameScreen2View17hideActionButtonsEv>
 800d786:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800d78a:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800d78e:	f00e ffeb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons
    hideAllPlayerPowerUps();
 800d792:	4620      	mov	r0, r4
 800d794:	f7ff fb4f 	bl	800ce36 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
 800d798:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800d79c:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800d7a0:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800d7a4:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800d7a8:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800d7ac:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800d7b0:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800d7b4:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800d7b8:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800d7bc:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800d7c0:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800d7c4:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800d7c8:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800d7cc:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL =====
    naruto.invalidate();
 800d7d0:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800d7d4:	f00e ffc8 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800d7d8:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800d7dc:	f00e ffc4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800d7e0:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800d7e4:	f00e ffc0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800d7e8:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    naruto_lose.invalidate();
    naruto_win.invalidate();
 800d7ec:	f204 679c 	addw	r7, r4, #1692	@ 0x69c
    naruto_spe.invalidate();
 800d7f0:	f00e ffba 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800d7f4:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800d7f8:	f00e ffb6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800d7fc:	4638      	mov	r0, r7
 800d7fe:	f00e ffb3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800d802:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800d806:	f00e ffaf 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800d80a:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800d80e:	f00e ffab 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800d812:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800d816:	f204 553c 	addw	r5, r4, #1340	@ 0x53c
    bleach_def.invalidate();
 800d81a:	f00e ffa5 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
 800d81e:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800d822:	f00e ffa1 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800d826:	4628      	mov	r0, r5
 800d828:	f00e ff9e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800d82c:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800d830:	f00e ff9a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d834:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800d838:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800d83c:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
    // ===== CHỈ HIỂN THỊ SPRITE CẦN THIẾT =====
    naruto_win.setVisible(true);
    bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
    win.setVisible(true);

    naruto_win.invalidate();
 800d840:	4638      	mov	r0, r7
 800d842:	f00e ff91 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800d846:	4628      	mov	r0, r5
 800d848:	f00e ff8e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    win.invalidate();
 800d84c:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800d850:	f00e ff8a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d854:	240f      	movs	r4, #15

    // ===== EASTER EGG LED PATTERN =====
    for (int i = 0; i < 15; i++) {
        toggleLED(); // 15 LED blinks để báo hiệu Easter Egg
 800d856:	f7ff f8c5 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    for (int i = 0; i < 15; i++) {
 800d85a:	3c01      	subs	r4, #1
 800d85c:	d1fb      	bne.n	800d856 <_ZN21NarutoGameScreen2View17activateEasterEggEv+0xfe>
    }

    // Debug: LED signal that Easter Egg activated
    toggleLED();
 800d85e:	f7ff f8c1 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
 800d862:	f7ff f8bf 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    toggleLED();
}
 800d866:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    toggleLED();
 800d86a:	f7ff b8bb 	b.w	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>

0800d86e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>:

void NarutoGameScreen2View::updateBossHPDisplay()
{
 800d86e:	b538      	push	{r3, r4, r5, lr}
 800d870:	4604      	mov	r4, r0
    // Hide all boss HP widgets first
    hideAllBossHPWidgets();
 800d872:	f7ff fa6b 	bl	800cd4c <_ZN21NarutoGameScreen2View20hideAllBossHPWidgetsEv>

    // ===== HỆ THỐNG HP ĐỐN GIẢN - GIỐNG GAMESCREEN NHƯNG BẮT ĐẦU TỪ 130 =====
    // Làm tròn xuống bội số 10 (giống GameScreenView)
    int roundedHP = (bossCurrentHP / 10) * 10;
 800d876:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    if (roundedHP < 0) roundedHP = 0;
    if (roundedHP > 130) roundedHP = 130;

    // DEBUG: Force test khi Boss HP = 0
    if (bossCurrentHP == 0 || roundedHP == 0) {
 800d87a:	2b09      	cmp	r3, #9
 800d87c:	dc16      	bgt.n	800d8ac <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x3e>
 800d87e:	2301      	movs	r3, #1
 800d880:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
        // FORCE HIỂN THỊ HP_0_ID_1
        BITMAP_HP_0_ID_1.setVisible(true);
        BITMAP_HP_0_ID_1.invalidate();
 800d884:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800d888:	f00e ff6e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d88c:	250a      	movs	r5, #10

        // DEBUG: LED blink nhiều lần
        for (int i = 0; i < 10; i++) {
            toggleLED();
 800d88e:	f7ff f8a9 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800d892:	3d01      	subs	r5, #1
 800d894:	d1fb      	bne.n	800d88e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x20>
        }

        // FORCE END GAME
        if (!gameEnded) {
 800d896:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800d89a:	2b00      	cmp	r3, #0
 800d89c:	f040 808d 	bne.w	800d9ba <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x14c>
            endGame(true); // Player thắng
 800d8a0:	4620      	mov	r0, r4
 800d8a2:	2101      	movs	r1, #1
            if (!gameEnded) {
                endGame(true); // Player thắng
            }
            break;
    }
}
 800d8a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(true); // Player thắng
 800d8a8:	f7ff bc6e 	b.w	800d188 <_ZN21NarutoGameScreen2View7endGameEb>
    int roundedHP = (bossCurrentHP / 10) * 10;
 800d8ac:	220a      	movs	r2, #10
 800d8ae:	fb93 f1f2 	sdiv	r1, r3, r2
 800d8b2:	4351      	muls	r1, r2
    switch (roundedHP) {
 800d8b4:	f1a3 0246 	sub.w	r2, r3, #70	@ 0x46
 800d8b8:	2a09      	cmp	r2, #9
 800d8ba:	d95f      	bls.n	800d97c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x10e>
 800d8bc:	2946      	cmp	r1, #70	@ 0x46
 800d8be:	f04f 0201 	mov.w	r2, #1
 800d8c2:	dc24      	bgt.n	800d90e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xa0>
 800d8c4:	f1a3 0028 	sub.w	r0, r3, #40	@ 0x28
 800d8c8:	2809      	cmp	r0, #9
 800d8ca:	d962      	bls.n	800d992 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x124>
 800d8cc:	2928      	cmp	r1, #40	@ 0x28
 800d8ce:	dc12      	bgt.n	800d8f6 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x88>
 800d8d0:	f1a3 0114 	sub.w	r1, r3, #20
 800d8d4:	2909      	cmp	r1, #9
 800d8d6:	d966      	bls.n	800d9a6 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x138>
 800d8d8:	f1a3 011e 	sub.w	r1, r3, #30
 800d8dc:	2909      	cmp	r1, #9
 800d8de:	d95d      	bls.n	800d99c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x12e>
 800d8e0:	3b0a      	subs	r3, #10
 800d8e2:	2b09      	cmp	r3, #9
 800d8e4:	d964      	bls.n	800d9b0 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x142>
 800d8e6:	2301      	movs	r3, #1
 800d8e8:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
            BITMAP_HP_0_ID_1.invalidate();
 800d8ec:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800d8f0:	f00e ff3a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800d8f4:	e7cf      	b.n	800d896 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x28>
    switch (roundedHP) {
 800d8f6:	f1a3 0132 	sub.w	r1, r3, #50	@ 0x32
 800d8fa:	2909      	cmp	r1, #9
 800d8fc:	d944      	bls.n	800d988 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x11a>
 800d8fe:	3b3c      	subs	r3, #60	@ 0x3c
 800d900:	2b09      	cmp	r3, #9
 800d902:	d8f0      	bhi.n	800d8e6 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x78>
 800d904:	f884 23d5 	strb.w	r2, [r4, #981]	@ 0x3d5
            BITMAP_HP_60_ID_1.invalidate();
 800d908:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800d90c:	e01e      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800d90e:	f1a3 006e 	sub.w	r0, r3, #110	@ 0x6e
 800d912:	2809      	cmp	r0, #9
 800d914:	d923      	bls.n	800d95e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xf0>
 800d916:	296e      	cmp	r1, #110	@ 0x6e
 800d918:	dc0f      	bgt.n	800d93a <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xcc>
 800d91a:	f1a3 015a 	sub.w	r1, r3, #90	@ 0x5a
 800d91e:	2909      	cmp	r1, #9
 800d920:	d927      	bls.n	800d972 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x104>
 800d922:	f1a3 0164 	sub.w	r1, r3, #100	@ 0x64
 800d926:	2909      	cmp	r1, #9
 800d928:	d91e      	bls.n	800d968 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xfa>
 800d92a:	3b50      	subs	r3, #80	@ 0x50
 800d92c:	2b09      	cmp	r3, #9
 800d92e:	d8da      	bhi.n	800d8e6 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x78>
 800d930:	f884 237d 	strb.w	r2, [r4, #893]	@ 0x37d
            BITMAP_HP_80_ID_1.invalidate();
 800d934:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800d938:	e008      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800d93a:	3b78      	subs	r3, #120	@ 0x78
 800d93c:	2b09      	cmp	r3, #9
 800d93e:	d909      	bls.n	800d954 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xe6>
 800d940:	2981      	cmp	r1, #129	@ 0x81
 800d942:	ddd0      	ble.n	800d8e6 <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0x78>
 800d944:	f884 22a1 	strb.w	r2, [r4, #673]	@ 0x2a1
            BITMAP_HP_130_ID_1.invalidate();
 800d948:	f504 701f 	add.w	r0, r4, #636	@ 0x27c
}
 800d94c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID_1.invalidate();
 800d950:	f00e bf0a 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d954:	f884 22cd 	strb.w	r2, [r4, #717]	@ 0x2cd
            BITMAP_HP_120_ID_1.invalidate();
 800d958:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800d95c:	e7f6      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d95e:	f884 22f9 	strb.w	r2, [r4, #761]	@ 0x2f9
            BITMAP_HP_110_ID_1.invalidate();
 800d962:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800d966:	e7f1      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d968:	f884 2325 	strb.w	r2, [r4, #805]	@ 0x325
            BITMAP_HP_100_ID_1.invalidate();
 800d96c:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800d970:	e7ec      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d972:	f884 2351 	strb.w	r2, [r4, #849]	@ 0x351
            BITMAP_HP_90_ID_1.invalidate();
 800d976:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800d97a:	e7e7      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d97c:	2301      	movs	r3, #1
 800d97e:	f884 33a9 	strb.w	r3, [r4, #937]	@ 0x3a9
            BITMAP_HP_70_ID_1.invalidate();
 800d982:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800d986:	e7e1      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d988:	f884 2401 	strb.w	r2, [r4, #1025]	@ 0x401
            BITMAP_HP_50_ID_1.invalidate();
 800d98c:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800d990:	e7dc      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d992:	f884 242d 	strb.w	r2, [r4, #1069]	@ 0x42d
            BITMAP_HP_40_ID_1.invalidate();
 800d996:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800d99a:	e7d7      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d99c:	f884 2459 	strb.w	r2, [r4, #1113]	@ 0x459
            BITMAP_HP_30_ID_1.invalidate();
 800d9a0:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800d9a4:	e7d2      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d9a6:	f884 2485 	strb.w	r2, [r4, #1157]	@ 0x485
            BITMAP_HP_20_ID_1.invalidate();
 800d9aa:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800d9ae:	e7cd      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
 800d9b0:	f884 24b1 	strb.w	r2, [r4, #1201]	@ 0x4b1
            BITMAP_HP_10_ID_1.invalidate();
 800d9b4:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800d9b8:	e7c8      	b.n	800d94c <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv+0xde>
}
 800d9ba:	bd38      	pop	{r3, r4, r5, pc}

0800d9bc <_ZN21NarutoGameScreen2View11setupScreenEv>:
{
 800d9bc:	b538      	push	{r3, r4, r5, lr}
 800d9be:	4604      	mov	r4, r0
	NarutoGameScreen2ViewBase::setupScreen();
 800d9c0:	f7f9 fae1 	bl	8006f86 <_ZN25NarutoGameScreen2ViewBase11setupScreenEv>
    initGPIO();
 800d9c4:	4620      	mov	r0, r4
 800d9c6:	f7ff f843 	bl	800ca50 <_ZN21NarutoGameScreen2View8initGPIOEv>
    randomSeed = HAL_GetTick();
 800d9ca:	f002 fe67 	bl	801069c <HAL_GetTick>
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800d9ce:	4930      	ldr	r1, [pc, #192]	@ (800da90 <_ZN21NarutoGameScreen2View11setupScreenEv+0xd4>)
 800d9d0:	4b30      	ldr	r3, [pc, #192]	@ (800da94 <_ZN21NarutoGameScreen2View11setupScreenEv+0xd8>)
    if (randomSeed == 0) randomSeed = 12345;
 800d9d2:	f243 0239 	movw	r2, #12345	@ 0x3039
 800d9d6:	2800      	cmp	r0, #0
 800d9d8:	bf18      	it	ne
 800d9da:	4602      	movne	r2, r0
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800d9dc:	fb01 3302 	mla	r3, r1, r2, r3
 800d9e0:	f8c4 3ac4 	str.w	r3, [r4, #2756]	@ 0xac4
    bossCurrentHP = bossMaxHP; // Boss bắt đầu với 130 HP
 800d9e4:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800d9e8:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
    playerHP = 100;
 800d9ec:	2364      	movs	r3, #100	@ 0x64
    menuOpen = false;
 800d9ee:	2500      	movs	r5, #0
    playerHP = 100;
 800d9f0:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    bossPhase = 1;
 800d9f4:	2301      	movs	r3, #1
 800d9f6:	f8c4 3a6c 	str.w	r3, [r4, #2668]	@ 0xa6c
    hideAllPlayerPowerUps();
 800d9fa:	4620      	mov	r0, r4
    menuOpen = false;
 800d9fc:	f8a4 5a68 	strh.w	r5, [r4, #2664]	@ 0xa68
    rageMode = false;
 800da00:	f884 5a78 	strb.w	r5, [r4, #2680]	@ 0xa78
    turnCounter = 0;
 800da04:	f8c4 5aa0 	str.w	r5, [r4, #2720]	@ 0xaa0
    playerPowerUpType = 0;
 800da08:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
    aiPowerUpType = 0; // Boss không có power-up
 800da0c:	f8c4 5aa8 	str.w	r5, [r4, #2728]	@ 0xaa8
    playerPowerUpActive = false;
 800da10:	f8c4 5aac 	str.w	r5, [r4, #2732]	@ 0xaac
    rageModeTimer = 0;
 800da14:	f8c4 5a7c 	str.w	r5, [r4, #2684]	@ 0xa7c
    playerChakraLevel = 0;
 800da18:	f8c4 5a80 	str.w	r5, [r4, #2688]	@ 0xa80
    aiChakraLevel = 0;
 800da1c:	f8c4 5a84 	str.w	r5, [r4, #2692]	@ 0xa84
    playerDefending = false;
 800da20:	f8c4 5a88 	str.w	r5, [r4, #2696]	@ 0xa88
    aiPersonality = 0; // 3 = Adaptive Boss Mode
 800da24:	f8c4 5a8c 	str.w	r5, [r4, #2700]	@ 0xa8c
    resetTimer = 0;
 800da28:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800da2c:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    autoReturnTimer = 0;
 800da30:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = false;
 800da34:	f884 5a9c 	strb.w	r5, [r4, #2716]	@ 0xa9c
    hideAllPlayerPowerUps();
 800da38:	f7ff f9fd 	bl	800ce36 <_ZN21NarutoGameScreen2View21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps(); // Boss không có power-up nhưng vẫn hide để đảm bảo
 800da3c:	4620      	mov	r0, r4
 800da3e:	f7ff fa75 	bl	800cf2c <_ZN21NarutoGameScreen2View17hideAllAIPowerUpsEv>
    updatePlayerHPDisplay();
 800da42:	4620      	mov	r0, r4
 800da44:	f7ff fc6e 	bl	800d324 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm mới cho boss
 800da48:	4620      	mov	r0, r4
 800da4a:	f7ff ff10 	bl	800d86e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800da4e:	4620      	mov	r0, r4
 800da50:	f7ff fb31 	bl	800d0b6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
    updateAIChakraDisplay();
 800da54:	4620      	mov	r0, r4
 800da56:	f7ff fb62 	bl	800d11e <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    resetNarutoState();
 800da5a:	4620      	mov	r0, r4
 800da5c:	f7ff fa83 	bl	800cf66 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
    resetBleachState();
 800da60:	4620      	mov	r0, r4
 800da62:	f7ff fab1 	bl	800cfc8 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
    hideAllFireEffects();
 800da66:	4620      	mov	r0, r4
    fireAnimationTimer = 0;
 800da68:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800da6c:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800da70:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800da74:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800da78:	f884 5ac0 	strb.w	r5, [r4, #2752]	@ 0xac0
    hideAllFireEffects();
 800da7c:	f7ff f834 	bl	800cae8 <_ZN21NarutoGameScreen2View18hideAllFireEffectsEv>
    forceBossHPVisible();
 800da80:	4620      	mov	r0, r4
 800da82:	f7ff f9bc 	bl	800cdfe <_ZN21NarutoGameScreen2View18forceBossHPVisibleEv>
    easterEggActivated = false;
 800da86:	f884 5ac8 	strb.w	r5, [r4, #2760]	@ 0xac8
        easterEggTimer = 0;
 800da8a:	f8c4 5acc 	str.w	r5, [r4, #2764]	@ 0xacc
}
 800da8e:	bd38      	pop	{r3, r4, r5, pc}
 800da90:	0019660d 	.word	0x0019660d
 800da94:	3c6ef35f 	.word	0x3c6ef35f

0800da98 <_ZN21NarutoGameScreen2View15handleTickEventEv>:
{
 800da98:	b538      	push	{r3, r4, r5, lr}
    if (frameCounter < 10 && !gameEnded) {
 800da9a:	4d39      	ldr	r5, [pc, #228]	@ (800db80 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe8>)
 800da9c:	682b      	ldr	r3, [r5, #0]
 800da9e:	2b09      	cmp	r3, #9
{
 800daa0:	4604      	mov	r4, r0
    if (frameCounter < 10 && !gameEnded) {
 800daa2:	dc0f      	bgt.n	800dac4 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x2c>
 800daa4:	f890 2a69 	ldrb.w	r2, [r0, #2665]	@ 0xa69
 800daa8:	b962      	cbnz	r2, 800dac4 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x2c>
        frameCounter++;
 800daaa:	3301      	adds	r3, #1
 800daac:	602b      	str	r3, [r5, #0]
        updateBossHPDisplay();
 800daae:	f7ff fede 	bl	800d86e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
        if (frameCounter == 5) {
 800dab2:	682b      	ldr	r3, [r5, #0]
 800dab4:	2b05      	cmp	r3, #5
 800dab6:	d105      	bne.n	800dac4 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x2c>
            toggleLED();
 800dab8:	f7fe ff94 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            toggleLED();
 800dabc:	f7fe ff92 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            toggleLED();
 800dac0:	f7fe ff90 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    if (easterEggActivated) {
 800dac4:	f894 2ac8 	ldrb.w	r2, [r4, #2760]	@ 0xac8
 800dac8:	b1a2      	cbz	r2, 800daf4 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x5c>
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800daca:	f8d4 3acc 	ldr.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800dace:	f640 32b7 	movw	r2, #2999	@ 0xbb7
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800dad2:	3310      	adds	r3, #16
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800dad4:	4293      	cmp	r3, r2
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800dad6:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800dada:	dd4f      	ble.n	800db7c <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe4>
            HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800dadc:	4829      	ldr	r0, [pc, #164]	@ (800db84 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xec>)
 800dade:	2200      	movs	r2, #0
 800dae0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800dae4:	f003 f83a 	bl	8010b5c <HAL_GPIO_WritePin>
 800dae8:	f00d fc8c 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800daec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            application().gotoCharacter1ScreenNoTransition();
 800daf0:	f7f6 baae 	b.w	8004050 <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv>
    if (!gameEnded) {
 800daf4:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800daf8:	bb4d      	cbnz	r5, 800db4e <_ZN21NarutoGameScreen2View15handleTickEventEv+0xb6>
        if (resetTimerActive) {
 800dafa:	f894 3a94 	ldrb.w	r3, [r4, #2708]	@ 0xa94
 800dafe:	b1cb      	cbz	r3, 800db34 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x9c>
            resetTimer += 16;
 800db00:	f8d4 3a90 	ldr.w	r3, [r4, #2704]	@ 0xa90
 800db04:	3310      	adds	r3, #16
            if (resetTimer >= RESET_TIME_MS) {
 800db06:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
            resetTimer += 16;
 800db0a:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
            if (resetTimer >= RESET_TIME_MS) {
 800db0e:	db11      	blt.n	800db34 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x9c>
                resetNarutoState();
 800db10:	4620      	mov	r0, r4
 800db12:	f7ff fa28 	bl	800cf66 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
                resetBleachState();
 800db16:	4620      	mov	r0, r4
 800db18:	f7ff fa56 	bl	800cfc8 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
                if (!fireAnimationActive) {
 800db1c:	f894 3ab4 	ldrb.w	r3, [r4, #2740]	@ 0xab4
                resetTimerActive = false;
 800db20:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
                resetTimer = 0;
 800db24:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
                playerDefending = false;
 800db28:	f8a4 5a88 	strh.w	r5, [r4, #2696]	@ 0xa88
                if (!fireAnimationActive) {
 800db2c:	b913      	cbnz	r3, 800db34 <_ZN21NarutoGameScreen2View15handleTickEventEv+0x9c>
                    checkTurnComplete();
 800db2e:	4620      	mov	r0, r4
 800db30:	f7ff fcf8 	bl	800d524 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv>
        if (rageMode) {
 800db34:	f894 3a78 	ldrb.w	r3, [r4, #2680]	@ 0xa78
 800db38:	b123      	cbz	r3, 800db44 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xac>
            rageModeTimer += 16;
 800db3a:	f8d4 3a7c 	ldr.w	r3, [r4, #2684]	@ 0xa7c
 800db3e:	3310      	adds	r3, #16
 800db40:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
        updateFireAnimation();
 800db44:	4620      	mov	r0, r4
}
 800db46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        updateFireAnimation();
 800db4a:	f7ff b81b 	b.w	800cb84 <_ZN21NarutoGameScreen2View19updateFireAnimationEv>
        if (autoReturnTimerActive) {
 800db4e:	f894 3a9c 	ldrb.w	r3, [r4, #2716]	@ 0xa9c
 800db52:	b19b      	cbz	r3, 800db7c <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe4>
            autoReturnTimer += 16;
 800db54:	f8d4 3a98 	ldr.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800db58:	f241 716f 	movw	r1, #5999	@ 0x176f
            autoReturnTimer += 16;
 800db5c:	3310      	adds	r3, #16
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800db5e:	428b      	cmp	r3, r1
            autoReturnTimer += 16;
 800db60:	f8c4 3a98 	str.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800db64:	dd0a      	ble.n	800db7c <_ZN21NarutoGameScreen2View15handleTickEventEv+0xe4>
                HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800db66:	4807      	ldr	r0, [pc, #28]	@ (800db84 <_ZN21NarutoGameScreen2View15handleTickEventEv+0xec>)
 800db68:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800db6c:	f002 fff6 	bl	8010b5c <HAL_GPIO_WritePin>
 800db70:	f00d fc48 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800db74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                application().gotoBackUpScreenScreenNoTransition();
 800db78:	f7f6 b9fa 	b.w	8003f70 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
}
 800db7c:	bd38      	pop	{r3, r4, r5, pc}
 800db7e:	bf00      	nop
 800db80:	20002b74 	.word	0x20002b74
 800db84:	40021800 	.word	0x40021800

0800db88 <_ZN21NarutoGameScreen2View12playerAttackEv>:
{
 800db88:	b570      	push	{r4, r5, r6, lr}
 800db8a:	4604      	mov	r4, r0
    resetNarutoState();
 800db8c:	f7ff f9eb 	bl	800cf66 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
 800db90:	2300      	movs	r3, #0
 800db92:	f884 3695 	strb.w	r3, [r4, #1685]	@ 0x695
 800db96:	2301      	movs	r3, #1
 800db98:	f884 3771 	strb.w	r3, [r4, #1905]	@ 0x771
    naruto_atk.invalidate();
 800db9c:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800dba0:	f00e fde2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800dba4:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800dba8:	f00e fdde 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800dbac:	2208      	movs	r2, #8
 800dbae:	2103      	movs	r1, #3
 800dbb0:	4620      	mov	r0, r4
 800dbb2:	f7fe ff73 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800dbb6:	f894 5aac 	ldrb.w	r5, [r4, #2732]	@ 0xaac
 800dbba:	f894 6a89 	ldrb.w	r6, [r4, #2697]	@ 0xa89
    int baseDamage = generateRandomNumber(3, 8);
 800dbbe:	4603      	mov	r3, r0
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800dbc0:	2d00      	cmp	r5, #0
 800dbc2:	d041      	beq.n	800dc48 <_ZN21NarutoGameScreen2View12playerAttackEv+0xc0>
 800dbc4:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800dbc8:	2a01      	cmp	r2, #1
 800dbca:	d13d      	bne.n	800dc48 <_ZN21NarutoGameScreen2View12playerAttackEv+0xc0>
        finalDamage = (int)(baseDamage * 2.5); // x2.5 như yêu cầu
 800dbcc:	f7f2 fddc 	bl	8000788 <__aeabi_i2d>
 800dbd0:	4b1e      	ldr	r3, [pc, #120]	@ (800dc4c <_ZN21NarutoGameScreen2View12playerAttackEv+0xc4>)
 800dbd2:	2200      	movs	r2, #0
 800dbd4:	f7f2 fb5c 	bl	8000290 <__aeabi_dmul>
 800dbd8:	f7f2 fe40 	bl	800085c <__aeabi_d2iz>
 800dbdc:	4603      	mov	r3, r0
    if (isDefending) {
 800dbde:	b11e      	cbz	r6, 800dbe8 <_ZN21NarutoGameScreen2View12playerAttackEv+0x60>
        if (finalDamage < 1) finalDamage = 1;
 800dbe0:	2b01      	cmp	r3, #1
        finalDamage = finalDamage / 2;
 800dbe2:	bfcc      	ite	gt
 800dbe4:	105b      	asrgt	r3, r3, #1
        if (finalDamage < 1) finalDamage = 1;
 800dbe6:	2301      	movle	r3, #1
    bossCurrentHP -= actualDamage;
 800dbe8:	f8d4 2a74 	ldr.w	r2, [r4, #2676]	@ 0xa74
 800dbec:	1ad2      	subs	r2, r2, r3
    if (bossCurrentHP < 0) bossCurrentHP = 0;
 800dbee:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800dbf2:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    playerChakraLevel += generateRandomNumber(5, 10);
 800dbf6:	2105      	movs	r1, #5
 800dbf8:	220a      	movs	r2, #10
 800dbfa:	4620      	mov	r0, r4
 800dbfc:	f7fe ff4e 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dc00:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800dc04:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800dc06:	2b64      	cmp	r3, #100	@ 0x64
 800dc08:	bfa8      	it	ge
 800dc0a:	2364      	movge	r3, #100	@ 0x64
 800dc0c:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (hasDoubleAttack) {
 800dc10:	b13d      	cbz	r5, 800dc22 <_ZN21NarutoGameScreen2View12playerAttackEv+0x9a>
        playerPowerUpActive = false;
 800dc12:	2300      	movs	r3, #0
 800dc14:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800dc18:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800dc1c:	4620      	mov	r0, r4
 800dc1e:	f7ff f927 	bl	800ce70 <_ZN21NarutoGameScreen2View26updatePlayerPowerUpDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm boss mới
 800dc22:	4620      	mov	r0, r4
 800dc24:	f7ff fe23 	bl	800d86e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800dc28:	4620      	mov	r0, r4
 800dc2a:	f7ff fa44 	bl	800d0b6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
    toggleLED();
 800dc2e:	f7fe fed9 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800dc32:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800dc34:	2200      	movs	r2, #0
    playerActionDone = true;
 800dc36:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800dc3a:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800dc3e:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800dc42:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800dc46:	bd70      	pop	{r4, r5, r6, pc}
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800dc48:	2500      	movs	r5, #0
 800dc4a:	e7c8      	b.n	800dbde <_ZN21NarutoGameScreen2View12playerAttackEv+0x56>
 800dc4c:	40040000 	.word	0x40040000

0800dc50 <_ZN21NarutoGameScreen2View13playerSpecialEv>:
{
 800dc50:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded || playerChakraLevel < 100) return;
 800dc52:	f890 6a69 	ldrb.w	r6, [r0, #2665]	@ 0xa69
{
 800dc56:	4604      	mov	r4, r0
    if (gameEnded || playerChakraLevel < 100) return;
 800dc58:	2e00      	cmp	r6, #0
 800dc5a:	d14a      	bne.n	800dcf2 <_ZN21NarutoGameScreen2View13playerSpecialEv+0xa2>
 800dc5c:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800dc60:	2b63      	cmp	r3, #99	@ 0x63
 800dc62:	dd46      	ble.n	800dcf2 <_ZN21NarutoGameScreen2View13playerSpecialEv+0xa2>
 800dc64:	2501      	movs	r5, #1
    resetNarutoState();
 800dc66:	f7ff f97e 	bl	800cf66 <_ZN21NarutoGameScreen2View16resetNarutoStateEv>
    naruto_spe.invalidate();
 800dc6a:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800dc6e:	f884 6695 	strb.w	r6, [r4, #1685]	@ 0x695
 800dc72:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800dc76:	f00e fd77 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800dc7a:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800dc7e:	f00e fd73 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (isDefending) {
 800dc82:	f894 3a89 	ldrb.w	r3, [r4, #2697]	@ 0xa89
    playerChakraLevel = 0;
 800dc86:	f8c4 6a80 	str.w	r6, [r4, #2688]	@ 0xa80
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800dc8a:	2b00      	cmp	r3, #0
    bossCurrentHP -= actualDamage;
 800dc8c:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800dc90:	bf14      	ite	ne
 800dc92:	2214      	movne	r2, #20
 800dc94:	2228      	moveq	r2, #40	@ 0x28
    bossCurrentHP -= actualDamage;
 800dc96:	1a9b      	subs	r3, r3, r2
    if (bossCurrentHP < 0) bossCurrentHP = 0;
 800dc98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800dc9c:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
    updateBossHPDisplay();
 800dca0:	4620      	mov	r0, r4
 800dca2:	f7ff fde4 	bl	800d86e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800dca6:	4620      	mov	r0, r4
 800dca8:	f7ff fa05 	bl	800d0b6 <_ZN21NarutoGameScreen2View25updatePlayerChakraDisplayEv>
        toggleLED(); // 6 LED blinks để báo hiệu special damage
 800dcac:	f7fe fe9a 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800dcb0:	f7fe fe98 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800dcb4:	f7fe fe96 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800dcb8:	f7fe fe94 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800dcbc:	f7fe fe92 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800dcc0:	f7fe fe90 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    if (bossCurrentHP <= 0) {
 800dcc4:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    playerActionDone = true;
 800dcc8:	f884 5aae 	strb.w	r5, [r4, #2734]	@ 0xaae
    if (bossCurrentHP <= 0) {
 800dccc:	2b00      	cmp	r3, #0
    playerSpecialUsed = true; // Đánh dấu đã dùng special (không có power-up generation)
 800dcce:	f884 5a8a 	strb.w	r5, [r4, #2698]	@ 0xa8a
    if (bossCurrentHP <= 0) {
 800dcd2:	dc06      	bgt.n	800dce2 <_ZN21NarutoGameScreen2View13playerSpecialEv+0x92>
        if (!gameEnded) {
 800dcd4:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800dcd8:	b91b      	cbnz	r3, 800dce2 <_ZN21NarutoGameScreen2View13playerSpecialEv+0x92>
            endGame(true); // Player thắng
 800dcda:	4629      	mov	r1, r5
 800dcdc:	4620      	mov	r0, r4
 800dcde:	f7ff fa53 	bl	800d188 <_ZN21NarutoGameScreen2View7endGameEb>
    toggleLED();
 800dce2:	f7fe fe7f 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
    resetTimer = 0;
 800dce6:	2300      	movs	r3, #0
 800dce8:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800dcec:	2301      	movs	r3, #1
 800dcee:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800dcf2:	bd70      	pop	{r4, r5, r6, pc}

0800dcf4 <_ZN21NarutoGameScreen2View8aiDefendEv>:
{
 800dcf4:	b538      	push	{r3, r4, r5, lr}
    if (gameEnded) return;
 800dcf6:	f890 5a69 	ldrb.w	r5, [r0, #2665]	@ 0xa69
{
 800dcfa:	4604      	mov	r4, r0
    if (gameEnded) return;
 800dcfc:	2d00      	cmp	r5, #0
 800dcfe:	d140      	bne.n	800dd82 <_ZN21NarutoGameScreen2View8aiDefendEv+0x8e>
    resetBleachState();
 800dd00:	f7ff f962 	bl	800cfc8 <_ZN21NarutoGameScreen2View16resetBleachStateEv>
 800dd04:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800dd08:	2501      	movs	r5, #1
    bleach_def.invalidate();
 800dd0a:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800dd0e:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800dd12:	f00e fd29 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800dd16:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800dd1a:	f00e fd25 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800dd1e:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
    aiDefending = true;
 800dd22:	f884 5a89 	strb.w	r5, [r4, #2697]	@ 0xa89
    switch(bossPhase) {
 800dd26:	2b03      	cmp	r3, #3
 800dd28:	d02c      	beq.n	800dd84 <_ZN21NarutoGameScreen2View8aiDefendEv+0x90>
 800dd2a:	2b04      	cmp	r3, #4
 800dd2c:	d02d      	beq.n	800dd8a <_ZN21NarutoGameScreen2View8aiDefendEv+0x96>
 800dd2e:	2b02      	cmp	r3, #2
            healAmount = generateRandomNumber(2, 5);
 800dd30:	bf19      	ittee	ne
 800dd32:	2205      	movne	r2, #5
 800dd34:	2102      	movne	r1, #2
            healAmount = generateRandomNumber(3, 6);
 800dd36:	2206      	moveq	r2, #6
 800dd38:	2103      	moveq	r1, #3
            healAmount = generateRandomNumber(5, 8);
 800dd3a:	4620      	mov	r0, r4
 800dd3c:	f7fe feae 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    bossCurrentHP += healAmount;
 800dd40:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800dd44:	4418      	add	r0, r3
    if (bossCurrentHP > bossMaxHP) bossCurrentHP = bossMaxHP;
 800dd46:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800dd4a:	4298      	cmp	r0, r3
 800dd4c:	bfd4      	ite	le
 800dd4e:	f8c4 0a74 	strle.w	r0, [r4, #2676]	@ 0xa74
 800dd52:	f8c4 3a74 	strgt.w	r3, [r4, #2676]	@ 0xa74
    aiChakraLevel += generateRandomNumber(8, 12); // GIẢM TỪ 12-20 XUỐNG 8-12
 800dd56:	220c      	movs	r2, #12
 800dd58:	2108      	movs	r1, #8
 800dd5a:	4620      	mov	r0, r4
 800dd5c:	f7fe fe9e 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dd60:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800dd64:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800dd66:	2b64      	cmp	r3, #100	@ 0x64
 800dd68:	bfa8      	it	ge
 800dd6a:	2364      	movge	r3, #100	@ 0x64
 800dd6c:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    updateBossHPDisplay();
 800dd70:	4620      	mov	r0, r4
 800dd72:	f7ff fd7c 	bl	800d86e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
    updateAIChakraDisplay();
 800dd76:	4620      	mov	r0, r4
 800dd78:	f7ff f9d1 	bl	800d11e <_ZN21NarutoGameScreen2View21updateAIChakraDisplayEv>
    aiActionDone = true;
 800dd7c:	2301      	movs	r3, #1
 800dd7e:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
}
 800dd82:	bd38      	pop	{r3, r4, r5, pc}
            healAmount = generateRandomNumber(4, 7);
 800dd84:	2207      	movs	r2, #7
 800dd86:	2104      	movs	r1, #4
 800dd88:	e7d7      	b.n	800dd3a <_ZN21NarutoGameScreen2View8aiDefendEv+0x46>
            healAmount = generateRandomNumber(5, 8);
 800dd8a:	2208      	movs	r2, #8
 800dd8c:	2105      	movs	r1, #5
 800dd8e:	e7d4      	b.n	800dd3a <_ZN21NarutoGameScreen2View8aiDefendEv+0x46>

0800dd90 <_ZN21NarutoGameScreen2View15performAIActionEv>:
	if (gameEnded || bossCurrentHP <= 0) {
 800dd90:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
{
 800dd94:	b570      	push	{r4, r5, r6, lr}
 800dd96:	4605      	mov	r5, r0
	if (gameEnded || bossCurrentHP <= 0) {
 800dd98:	2b00      	cmp	r3, #0
 800dd9a:	f040 811f 	bne.w	800dfdc <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
 800dd9e:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800dda2:	2b00      	cmp	r3, #0
 800dda4:	f340 811a 	ble.w	800dfdc <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
    if (playerHP <= 0) {
 800dda8:	f8d0 6a64 	ldr.w	r6, [r0, #2660]	@ 0xa64
 800ddac:	2e00      	cmp	r6, #0
 800ddae:	f340 8115 	ble.w	800dfdc <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
    if (aiPowerUpActive) {
 800ddb2:	f890 2aad 	ldrb.w	r2, [r0, #2733]	@ 0xaad
 800ddb6:	b99a      	cbnz	r2, 800dde0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x50>
    	int aiHPPercent = (bossCurrentHP * 100) / bossMaxHP;
 800ddb8:	2264      	movs	r2, #100	@ 0x64
 800ddba:	4353      	muls	r3, r2
 800ddbc:	f8d5 2a70 	ldr.w	r2, [r5, #2672]	@ 0xa70
 800ddc0:	fb93 f3f2 	sdiv	r3, r3, r2
        bool playerCanSpecial = (playerChakraLevel >= 100);
 800ddc4:	f8d5 2a80 	ldr.w	r2, [r5, #2688]	@ 0xa80
        switch(aiPersonality)
 800ddc8:	f8d5 1a8c 	ldr.w	r1, [r5, #2700]	@ 0xa8c
        int baseDefendBonus = 0;
 800ddcc:	2a63      	cmp	r2, #99	@ 0x63
 800ddce:	bfcc      	ite	gt
 800ddd0:	2419      	movgt	r4, #25
 800ddd2:	2400      	movle	r4, #0
        switch(aiPersonality)
 800ddd4:	2903      	cmp	r1, #3
 800ddd6:	d813      	bhi.n	800de00 <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
 800ddd8:	e8df f001 	tbb	[pc, r1]
 800dddc:	c89c6329 	.word	0xc89c6329
        switch(aiPowerUpType) {
 800dde0:	f8d0 1aa8 	ldr.w	r1, [r0, #2728]	@ 0xaa8
 800dde4:	2901      	cmp	r1, #1
 800dde6:	d010      	beq.n	800de0a <_ZN21NarutoGameScreen2View15performAIActionEv+0x7a>
 800dde8:	2904      	cmp	r1, #4
 800ddea:	d1e5      	bne.n	800ddb8 <_ZN21NarutoGameScreen2View15performAIActionEv+0x28>
                if (aiChakraLevel >= 100) {
 800ddec:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800ddf0:	2b63      	cmp	r3, #99	@ 0x63
 800ddf2:	dd05      	ble.n	800de00 <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
                    if (generateRandomNumber(1, 100) <= 50) {
 800ddf4:	2264      	movs	r2, #100	@ 0x64
 800ddf6:	2101      	movs	r1, #1
                           if (generateRandomNumber(1, 100) <= 50) {
 800ddf8:	f7fe fe50 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800ddfc:	2832      	cmp	r0, #50	@ 0x32
 800ddfe:	dd2a      	ble.n	800de56 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800de00:	4628      	mov	r0, r5
}
 800de02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800de06:	f7ff bbe5 	b.w	800d5d4 <_ZN21NarutoGameScreen2View8aiAttackEv>
                if (aiChakraLevel >= 100) {
 800de0a:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800de0e:	2b63      	cmp	r3, #99	@ 0x63
                    int roll = generateRandomNumber(1, 100);
 800de10:	f04f 0264 	mov.w	r2, #100	@ 0x64
                if (aiChakraLevel >= 100) {
 800de14:	dd06      	ble.n	800de24 <_ZN21NarutoGameScreen2View15performAIActionEv+0x94>
                    int roll = generateRandomNumber(1, 100);
 800de16:	f7fe fe41 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    if (roll <= 80) {
 800de1a:	2850      	cmp	r0, #80	@ 0x50
 800de1c:	ddf0      	ble.n	800de00 <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
                    } else if (roll <= 90) {
 800de1e:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 70) {
 800de20:	dd19      	ble.n	800de56 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
 800de22:	e096      	b.n	800df52 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
                    if (generateRandomNumber(1, 100) <= 90) {
 800de24:	f7fe fe3a 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800de28:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 60) {
 800de2a:	dde9      	ble.n	800de00 <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
 800de2c:	e091      	b.n	800df52 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
                if (aiChakraLevel >= 100) {
 800de2e:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800de32:	2a63      	cmp	r2, #99	@ 0x63
 800de34:	dd22      	ble.n	800de7c <_ZN21NarutoGameScreen2View15performAIActionEv+0xec>
                    if (aiHPPercent >= 80) {
 800de36:	2b4f      	cmp	r3, #79	@ 0x4f
 800de38:	dd17      	ble.n	800de6a <_ZN21NarutoGameScreen2View15performAIActionEv+0xda>
                        defendChance = 50 + baseDefendBonus;
 800de3a:	3432      	adds	r4, #50	@ 0x32
                    if (playerHPPercent <= 25) {
 800de3c:	2e19      	cmp	r6, #25
                        defendChance -= 10;
 800de3e:	bfd8      	it	le
 800de40:	3c0a      	suble	r4, #10
                    int roll = generateRandomNumber(1, 100);
 800de42:	2264      	movs	r2, #100	@ 0x64
 800de44:	2101      	movs	r1, #1
 800de46:	4628      	mov	r0, r5
 800de48:	f7fe fe28 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    if (defendChance > 70) defendChance = 70;
 800de4c:	2c46      	cmp	r4, #70	@ 0x46
 800de4e:	bfa8      	it	ge
 800de50:	2446      	movge	r4, #70	@ 0x46
                    if (roll <= defendChance) {
 800de52:	4284      	cmp	r4, r0
 800de54:	da7d      	bge.n	800df52 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800de56:	f8d5 3a84 	ldr.w	r3, [r5, #2692]	@ 0xa84
 800de5a:	2b63      	cmp	r3, #99	@ 0x63
 800de5c:	f340 80be 	ble.w	800dfdc <_ZN21NarutoGameScreen2View15performAIActionEv+0x24c>
 800de60:	4628      	mov	r0, r5
}
 800de62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800de66:	f7ff bc21 	b.w	800d6ac <_ZN21NarutoGameScreen2View9aiSpecialEv>
                    } else if (aiHPPercent >= 60) {
 800de6a:	2b3b      	cmp	r3, #59	@ 0x3b
 800de6c:	dd01      	ble.n	800de72 <_ZN21NarutoGameScreen2View15performAIActionEv+0xe2>
                        defendChance = 40 + baseDefendBonus;
 800de6e:	3428      	adds	r4, #40	@ 0x28
                        specialChance = 60 - (baseDefendBonus / 2);
 800de70:	e7e4      	b.n	800de3c <_ZN21NarutoGameScreen2View15performAIActionEv+0xac>
                    } else if (aiHPPercent >= 30) {
 800de72:	2b1d      	cmp	r3, #29
                        defendChance = 30 + baseDefendBonus;
 800de74:	bfcc      	ite	gt
 800de76:	341e      	addgt	r4, #30
                        defendChance = 20 + baseDefendBonus;
 800de78:	3414      	addle	r4, #20
                        specialChance = 80 - (baseDefendBonus / 2);
 800de7a:	e7df      	b.n	800de3c <_ZN21NarutoGameScreen2View15performAIActionEv+0xac>
                    if (aiHPPercent >= 70) {
 800de7c:	2b45      	cmp	r3, #69	@ 0x45
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800de7e:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800de82:	f04f 0101 	mov.w	r1, #1
 800de86:	4628      	mov	r0, r5
                    if (aiHPPercent >= 70) {
 800de88:	dd03      	ble.n	800de92 <_ZN21NarutoGameScreen2View15performAIActionEv+0x102>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800de8a:	f7fe fe07 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 30 + baseDefendBonus;
 800de8e:	341e      	adds	r4, #30
 800de90:	e004      	b.n	800de9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 40) {
 800de92:	2b27      	cmp	r3, #39	@ 0x27
 800de94:	ddf9      	ble.n	800de8a <_ZN21NarutoGameScreen2View15performAIActionEv+0xfa>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800de96:	f7fe fe01 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 50 + baseDefendBonus;
 800de9a:	3432      	adds	r4, #50	@ 0x32
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800de9c:	42a0      	cmp	r0, r4
                           if (generateRandomNumber(1, 100) <= 60) {
 800de9e:	dd58      	ble.n	800df52 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
 800dea0:	e7ae      	b.n	800de00 <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
                if (aiChakraLevel >= 100) {
 800dea2:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800dea6:	2a63      	cmp	r2, #99	@ 0x63
 800dea8:	dd17      	ble.n	800deda <_ZN21NarutoGameScreen2View15performAIActionEv+0x14a>
                    if (aiHPPercent >= 80) {
 800deaa:	2b4f      	cmp	r3, #79	@ 0x4f
 800deac:	dd0c      	ble.n	800dec8 <_ZN21NarutoGameScreen2View15performAIActionEv+0x138>
                        defendChance = 70 + baseDefendBonus;
 800deae:	3446      	adds	r4, #70	@ 0x46
                    if (playerHPPercent <= 20) {
 800deb0:	2e14      	cmp	r6, #20
                        defendChance -= 5;
 800deb2:	bfd8      	it	le
 800deb4:	3c05      	suble	r4, #5
                    int roll = generateRandomNumber(1, 100);
 800deb6:	2264      	movs	r2, #100	@ 0x64
 800deb8:	2101      	movs	r1, #1
 800deba:	4628      	mov	r0, r5
 800debc:	f7fe fdee 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    if (defendChance > 85) defendChance = 85;
 800dec0:	2c55      	cmp	r4, #85	@ 0x55
 800dec2:	bfa8      	it	ge
 800dec4:	2455      	movge	r4, #85	@ 0x55
 800dec6:	e7c4      	b.n	800de52 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc2>
                    } else if (aiHPPercent >= 50) {
 800dec8:	2b31      	cmp	r3, #49	@ 0x31
 800deca:	dd01      	ble.n	800ded0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x140>
                        defendChance = 60 + baseDefendBonus;
 800decc:	343c      	adds	r4, #60	@ 0x3c
                        specialChance = 40 - (baseDefendBonus / 2);
 800dece:	e7ef      	b.n	800deb0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x120>
                    } else if (aiHPPercent >= 25) {
 800ded0:	2b18      	cmp	r3, #24
                        defendChance = 45 + baseDefendBonus;
 800ded2:	bfcc      	ite	gt
 800ded4:	342d      	addgt	r4, #45	@ 0x2d
                        defendChance = 30 + baseDefendBonus;
 800ded6:	341e      	addle	r4, #30
                        specialChance = 70 - (baseDefendBonus / 2);
 800ded8:	e7ea      	b.n	800deb0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x120>
                    if (aiHPPercent >= 60) {
 800deda:	2b3b      	cmp	r3, #59	@ 0x3b
 800dedc:	dd0b      	ble.n	800def6 <_ZN21NarutoGameScreen2View15performAIActionEv+0x166>
                        int defendChance = 80 + baseDefendBonus;
 800dede:	2c0f      	cmp	r4, #15
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800dee0:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800dee4:	f04f 0101 	mov.w	r1, #1
 800dee8:	4628      	mov	r0, r5
                        int defendChance = 80 + baseDefendBonus;
 800deea:	bfcc      	ite	gt
 800deec:	245f      	movgt	r4, #95	@ 0x5f
 800deee:	2450      	movle	r4, #80	@ 0x50
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800def0:	f7fe fdd4 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800def4:	e7d2      	b.n	800de9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 30) {
 800def6:	2b1d      	cmp	r3, #29
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800def8:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800defc:	f04f 0101 	mov.w	r1, #1
 800df00:	4628      	mov	r0, r5
                    } else if (aiHPPercent >= 30) {
 800df02:	dd03      	ble.n	800df0c <_ZN21NarutoGameScreen2View15performAIActionEv+0x17c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800df04:	f7fe fdca 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 65 + baseDefendBonus;
 800df08:	3441      	adds	r4, #65	@ 0x41
 800df0a:	e7c7      	b.n	800de9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800df0c:	f7fe fdc6 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 40 + baseDefendBonus;
 800df10:	3428      	adds	r4, #40	@ 0x28
 800df12:	e7c3      	b.n	800de9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                if (aiChakraLevel >= 100) {
 800df14:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800df18:	2963      	cmp	r1, #99	@ 0x63
 800df1a:	dd07      	ble.n	800df2c <_ZN21NarutoGameScreen2View15performAIActionEv+0x19c>
                    int roll = generateRandomNumber(1, 100);
 800df1c:	2101      	movs	r1, #1
 800df1e:	2264      	movs	r2, #100	@ 0x64
 800df20:	4628      	mov	r0, r5
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800df22:	410c      	asrs	r4, r1
                    int roll = generateRandomNumber(1, 100);
 800df24:	f7fe fdba 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800df28:	342d      	adds	r4, #45	@ 0x2d
 800df2a:	e792      	b.n	800de52 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc2>
                    if (aiHPPercent >= 70) {
 800df2c:	2b45      	cmp	r3, #69	@ 0x45
 800df2e:	dd07      	ble.n	800df40 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1b0>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800df30:	2101      	movs	r1, #1
 800df32:	2264      	movs	r2, #100	@ 0x64
 800df34:	4628      	mov	r0, r5
                        int defendChance = 60 + (baseDefendBonus / 2);
 800df36:	410c      	asrs	r4, r1
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800df38:	f7fe fdb0 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
                        int defendChance = 60 + (baseDefendBonus / 2);
 800df3c:	343c      	adds	r4, #60	@ 0x3c
 800df3e:	e7ad      	b.n	800de9c <_ZN21NarutoGameScreen2View15performAIActionEv+0x10c>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800df40:	2a63      	cmp	r2, #99	@ 0x63
 800df42:	dc0b      	bgt.n	800df5c <_ZN21NarutoGameScreen2View15performAIActionEv+0x1cc>
                            action = generateRandomNumber(1, 2);
 800df44:	2202      	movs	r2, #2
 800df46:	2101      	movs	r1, #1
 800df48:	4628      	mov	r0, r5
 800df4a:	f7fe fda7 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
    switch(action)
 800df4e:	2802      	cmp	r0, #2
 800df50:	d13e      	bne.n	800dfd0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x240>
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800df52:	4628      	mov	r0, r5
}
 800df54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800df58:	f7ff becc 	b.w	800dcf4 <_ZN21NarutoGameScreen2View8aiDefendEv>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800df5c:	2264      	movs	r2, #100	@ 0x64
 800df5e:	2101      	movs	r1, #1
 800df60:	4628      	mov	r0, r5
 800df62:	f7fe fd9b 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800df66:	281e      	cmp	r0, #30
 800df68:	ddf3      	ble.n	800df52 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
 800df6a:	e7eb      	b.n	800df44 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1b4>
                   if (aiChakraLevel >= 100) {
 800df6c:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800df70:	2963      	cmp	r1, #99	@ 0x63
 800df72:	dd15      	ble.n	800dfa0 <_ZN21NarutoGameScreen2View15performAIActionEv+0x210>
                       if (bossHPPercent <= 30) {
 800df74:	2b1e      	cmp	r3, #30
 800df76:	dc06      	bgt.n	800df86 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1f6>
                           if (generateRandomNumber(1, 100) <= 70) {
 800df78:	2264      	movs	r2, #100	@ 0x64
 800df7a:	2101      	movs	r1, #1
 800df7c:	4628      	mov	r0, r5
 800df7e:	f7fe fd8d 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800df82:	2846      	cmp	r0, #70	@ 0x46
 800df84:	e74c      	b.n	800de20 <_ZN21NarutoGameScreen2View15performAIActionEv+0x90>
                       } else if (playerCanSpecial) {
 800df86:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 40) {
 800df88:	f04f 0101 	mov.w	r1, #1
 800df8c:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800df90:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800df92:	f77f af31 	ble.w	800ddf8 <_ZN21NarutoGameScreen2View15performAIActionEv+0x68>
                           if (generateRandomNumber(1, 100) <= 40) {
 800df96:	f7fe fd81 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800df9a:	2828      	cmp	r0, #40	@ 0x28
 800df9c:	ddd9      	ble.n	800df52 <_ZN21NarutoGameScreen2View15performAIActionEv+0x1c2>
 800df9e:	e75a      	b.n	800de56 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
                       if (bossHPPercent <= 50) {
 800dfa0:	2b32      	cmp	r3, #50	@ 0x32
 800dfa2:	dc06      	bgt.n	800dfb2 <_ZN21NarutoGameScreen2View15performAIActionEv+0x222>
                           if (generateRandomNumber(1, 100) <= 70) {
 800dfa4:	2264      	movs	r2, #100	@ 0x64
 800dfa6:	2101      	movs	r1, #1
 800dfa8:	4628      	mov	r0, r5
 800dfaa:	f7fe fd77 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dfae:	2846      	cmp	r0, #70	@ 0x46
 800dfb0:	e775      	b.n	800de9e <_ZN21NarutoGameScreen2View15performAIActionEv+0x10e>
                       } else if (playerCanSpecial) {
 800dfb2:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 60) {
 800dfb4:	f04f 0101 	mov.w	r1, #1
 800dfb8:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800dfbc:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800dfbe:	dd03      	ble.n	800dfc8 <_ZN21NarutoGameScreen2View15performAIActionEv+0x238>
                           if (generateRandomNumber(1, 100) <= 60) {
 800dfc0:	f7fe fd6c 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dfc4:	283c      	cmp	r0, #60	@ 0x3c
 800dfc6:	e76a      	b.n	800de9e <_ZN21NarutoGameScreen2View15performAIActionEv+0x10e>
                           if (generateRandomNumber(1, 100) <= 60) {
 800dfc8:	f7fe fd68 	bl	800ca9c <_ZN21NarutoGameScreen2View20generateRandomNumberEii>
 800dfcc:	283c      	cmp	r0, #60	@ 0x3c
 800dfce:	e72c      	b.n	800de2a <_ZN21NarutoGameScreen2View15performAIActionEv+0x9a>
    switch(action)
 800dfd0:	2803      	cmp	r0, #3
 800dfd2:	f43f af40 	beq.w	800de56 <_ZN21NarutoGameScreen2View15performAIActionEv+0xc6>
 800dfd6:	2801      	cmp	r0, #1
 800dfd8:	f43f af12 	beq.w	800de00 <_ZN21NarutoGameScreen2View15performAIActionEv+0x70>
}
 800dfdc:	bd70      	pop	{r4, r5, r6, pc}

0800dfde <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800dfde:	b530      	push	{r4, r5, lr}
    if (evt.getType() == ClickEvent::PRESSED) {
 800dfe0:	790b      	ldrb	r3, [r1, #4]
{
 800dfe2:	b08b      	sub	sp, #44	@ 0x2c
 800dfe4:	4604      	mov	r4, r0
 800dfe6:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED) {
 800dfe8:	2b00      	cmp	r3, #0
 800dfea:	f040 812b 	bne.w	800e244 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
    	if (!gameEnded && !easterEggActivated) {
 800dfee:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
        return clickX;
 800dff2:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800dff6:	b98b      	cbnz	r3, 800e01c <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
 800dff8:	f890 1ac8 	ldrb.w	r1, [r0, #2760]	@ 0xac8
 800dffc:	b971      	cbnz	r1, 800e01c <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	                evt.getY() >= 62 && evt.getY() <= 234) {
 800dffe:	f1a2 015e 	sub.w	r1, r2, #94	@ 0x5e
 800e002:	b289      	uxth	r1, r1
 800e004:	2992      	cmp	r1, #146	@ 0x92
 800e006:	d809      	bhi.n	800e01c <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	            if (evt.getX() >= 94 && evt.getX() <= 240 &&
 800e008:	8929      	ldrh	r1, [r5, #8]
 800e00a:	393e      	subs	r1, #62	@ 0x3e
 800e00c:	b289      	uxth	r1, r1
 800e00e:	29ac      	cmp	r1, #172	@ 0xac
 800e010:	d818      	bhi.n	800e044 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x66>
}
 800e012:	b00b      	add	sp, #44	@ 0x2c
 800e014:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	                activateEasterEgg();
 800e018:	f7ff bb9e 	b.w	800d758 <_ZN21NarutoGameScreen2View17activateEasterEggEv>
        if (evt.getX() < 50 && evt.getY() < 50) {
 800e01c:	2a31      	cmp	r2, #49	@ 0x31
 800e01e:	dc11      	bgt.n	800e044 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x66>
        return clickY;
 800e020:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e024:	2a31      	cmp	r2, #49	@ 0x31
 800e026:	f300 8087 	bgt.w	800e138 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x15a>
            bossCurrentHP -= 30;
 800e02a:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800e02e:	3b1e      	subs	r3, #30
            if (bossCurrentHP < 0) bossCurrentHP = 0;
 800e030:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
            updateBossHPDisplay();
 800e034:	4620      	mov	r0, r4
 800e036:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
}
 800e03a:	b00b      	add	sp, #44	@ 0x2c
 800e03c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updateBossHPDisplay();
 800e040:	f7ff bc15 	b.w	800d86e <_ZN21NarutoGameScreen2View19updateBossHPDisplayEv>
        if (evt.getX() > 190 && evt.getY() < 50) {
 800e044:	2abe      	cmp	r2, #190	@ 0xbe
 800e046:	dc6a      	bgt.n	800e11e <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x140>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800e048:	3a65      	subs	r2, #101	@ 0x65
 800e04a:	b292      	uxth	r2, r2
 800e04c:	2a26      	cmp	r2, #38	@ 0x26
 800e04e:	f240 808c 	bls.w	800e16a <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x18c>
        if (gameEnded) {
 800e052:	2b00      	cmp	r3, #0
 800e054:	d04f      	beq.n	800e0f6 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x118>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e056:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800e05a:	4668      	mov	r0, sp
 800e05c:	f00e fc20 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e060:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e064:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e068:	4668      	mov	r0, sp
 800e06a:	f7fc fd43 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e06e:	2800      	cmp	r0, #0
 800e070:	f040 80ef 	bne.w	800e252 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e074:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800e078:	a802      	add	r0, sp, #8
 800e07a:	f00e fc11 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e07e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e082:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e086:	a802      	add	r0, sp, #8
 800e088:	f7fc fd34 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e08c:	2800      	cmp	r0, #0
 800e08e:	f040 80e0 	bne.w	800e252 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e092:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800e096:	a804      	add	r0, sp, #16
 800e098:	f00e fc02 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e09c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e0a0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e0a4:	a804      	add	r0, sp, #16
 800e0a6:	f7fc fd25 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e0aa:	2800      	cmp	r0, #0
 800e0ac:	f040 80d1 	bne.w	800e252 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e0b0:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800e0b4:	a806      	add	r0, sp, #24
 800e0b6:	f00e fbf3 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e0ba:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e0be:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e0c2:	a806      	add	r0, sp, #24
 800e0c4:	f7fc fd16 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e0c8:	2800      	cmp	r0, #0
 800e0ca:	f040 80c2 	bne.w	800e252 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800e0ce:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800e0d2:	a808      	add	r0, sp, #32
 800e0d4:	f00e fbe4 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e0d8:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e0dc:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e0e0:	a808      	add	r0, sp, #32
 800e0e2:	f7fc fd07 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800e0e6:	2800      	cmp	r0, #0
 800e0e8:	f040 80b3 	bne.w	800e252 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
        if (!gameEnded) {
 800e0ec:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800e0f0:	2b00      	cmp	r3, #0
 800e0f2:	f040 80a7 	bne.w	800e244 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
            if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800e0f6:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800e0fa:	a808      	add	r0, sp, #32
 800e0fc:	f00e fbd0 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e100:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e104:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e108:	a808      	add	r0, sp, #32
 800e10a:	f7fc fcf3 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800e10e:	2800      	cmp	r0, #0
 800e110:	d047      	beq.n	800e1a2 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x1c4>
                toggleActionMenu();
 800e112:	4620      	mov	r0, r4
}
 800e114:	b00b      	add	sp, #44	@ 0x2c
 800e116:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleActionMenu();
 800e11a:	f7fe be0a 	b.w	800cd32 <_ZN21NarutoGameScreen2View16toggleActionMenuEv>
 800e11e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
        if (evt.getX() > 190 && evt.getY() < 50) {
 800e122:	2a31      	cmp	r2, #49	@ 0x31
 800e124:	dc14      	bgt.n	800e150 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x172>
            playerHP = 0;
 800e126:	2300      	movs	r3, #0
            updatePlayerHPDisplay();
 800e128:	4620      	mov	r0, r4
            playerHP = 0;
 800e12a:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
}
 800e12e:	b00b      	add	sp, #44	@ 0x2c
 800e130:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updatePlayerHPDisplay();
 800e134:	f7ff b8f6 	b.w	800d324 <_ZN21NarutoGameScreen2View21updatePlayerHPDisplayEv>
        if (evt.getX() < 50 && evt.getY() > 270) {
 800e138:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800e13c:	dd89      	ble.n	800e052 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x74>
                toggleLED();
 800e13e:	f7fe fc51 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
 800e142:	f7fe fc4f 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
}
 800e146:	b00b      	add	sp, #44	@ 0x2c
 800e148:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleLED();
 800e14c:	f7fe bc4a 	b.w	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800e150:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800e154:	f77f af7d 	ble.w	800e052 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800e158:	2b00      	cmp	r3, #0
 800e15a:	f47f af7c 	bne.w	800e056 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800e15e:	4620      	mov	r0, r4
}
 800e160:	b00b      	add	sp, #44	@ 0x2c
 800e162:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800e166:	f7ff b984 	b.w	800d472 <_ZN21NarutoGameScreen2View17givePlayerPowerUpEv>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800e16a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e16e:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800e172:	f77f af6e 	ble.w	800e052 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800e176:	2b00      	cmp	r3, #0
 800e178:	f47f af6d 	bne.w	800e056 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            for (int i = 0; i < turnCounter + 1; i++) {
 800e17c:	461d      	mov	r5, r3
 800e17e:	f8d4 3aa0 	ldr.w	r3, [r4, #2720]	@ 0xaa0
 800e182:	42ab      	cmp	r3, r5
 800e184:	da09      	bge.n	800e19a <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x1bc>
            playerActionDone = true;
 800e186:	f240 1301 	movw	r3, #257	@ 0x101
 800e18a:	4620      	mov	r0, r4
 800e18c:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
}
 800e190:	b00b      	add	sp, #44	@ 0x2c
 800e192:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e196:	f7ff b996 	b.w	800d4c6 <_ZN21NarutoGameScreen2View17checkTurnCompleteEv.part.0>
                toggleLED();
 800e19a:	f7fe fc23 	bl	800c9e4 <_ZN21NarutoGameScreen2View9toggleLEDEv.constprop.0>
            for (int i = 0; i < turnCounter + 1; i++) {
 800e19e:	3501      	adds	r5, #1
 800e1a0:	e7ed      	b.n	800e17e <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x1a0>
            if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800e1a2:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800e1a6:	a808      	add	r0, sp, #32
 800e1a8:	f00e fb7a 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1ac:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e1b0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e1b4:	a808      	add	r0, sp, #32
 800e1b6:	f7fc fc9d 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800e1ba:	2800      	cmp	r0, #0
 800e1bc:	d1a9      	bne.n	800e112 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x134>
            if (menuOpen) {
 800e1be:	f894 3a68 	ldrb.w	r3, [r4, #2664]	@ 0xa68
 800e1c2:	2b00      	cmp	r3, #0
 800e1c4:	d03e      	beq.n	800e244 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800e1c6:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800e1ca:	a808      	add	r0, sp, #32
 800e1cc:	f00e fb68 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1d0:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e1d4:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e1d8:	a808      	add	r0, sp, #32
 800e1da:	f7fc fc8b 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800e1de:	b158      	cbz	r0, 800e1f8 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x21a>
                    playerAttack();
 800e1e0:	4620      	mov	r0, r4
 800e1e2:	f7ff fcd1 	bl	800db88 <_ZN21NarutoGameScreen2View12playerAttackEv>
                    if (!gameEnded) performAIAction();
 800e1e6:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800e1ea:	bb93      	cbnz	r3, 800e252 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
 800e1ec:	4620      	mov	r0, r4
}
 800e1ee:	b00b      	add	sp, #44	@ 0x2c
 800e1f0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                    if (!gameEnded) performAIAction();
 800e1f4:	f7ff bdcc 	b.w	800dd90 <_ZN21NarutoGameScreen2View15performAIActionEv>
                else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800e1f8:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800e1fc:	a808      	add	r0, sp, #32
 800e1fe:	f00e fb4f 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e202:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e206:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e20a:	a808      	add	r0, sp, #32
 800e20c:	f7fc fc72 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800e210:	b118      	cbz	r0, 800e21a <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x23c>
                    playerDefend();
 800e212:	4620      	mov	r0, r4
 800e214:	f7ff f98f 	bl	800d536 <_ZN21NarutoGameScreen2View12playerDefendEv>
                    if (!gameEnded) performAIAction();
 800e218:	e7e5      	b.n	800e1e6 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x208>
                else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800e21a:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800e21e:	a808      	add	r0, sp, #32
 800e220:	f00e fb3e 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e224:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e228:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e22c:	a808      	add	r0, sp, #32
 800e22e:	f7fc fc61 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800e232:	b138      	cbz	r0, 800e244 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                    if (playerChakraLevel >= 100) {
 800e234:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800e238:	2b63      	cmp	r3, #99	@ 0x63
 800e23a:	dd0a      	ble.n	800e252 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                        playerSpecial();
 800e23c:	4620      	mov	r0, r4
 800e23e:	f7ff fd07 	bl	800dc50 <_ZN21NarutoGameScreen2View13playerSpecialEv>
                        if (!gameEnded) performAIAction();
 800e242:	e7d0      	b.n	800e1e6 <_ZN21NarutoGameScreen2View16handleClickEventERKN8touchgfx10ClickEventE+0x208>
    NarutoGameScreen2ViewBase::handleClickEvent(evt);
 800e244:	4629      	mov	r1, r5
 800e246:	4620      	mov	r0, r4
}
 800e248:	b00b      	add	sp, #44	@ 0x2c
 800e24a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    NarutoGameScreen2ViewBase::handleClickEvent(evt);
 800e24e:	f00e bfe9 	b.w	801d224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
}
 800e252:	b00b      	add	sp, #44	@ 0x2c
 800e254:	bd30      	pop	{r4, r5, pc}

0800e256 <_ZN21NarutoGameScreen2View15handleDragEventERKN8touchgfx9DragEventE>:
	NarutoGameScreen2ViewBase::handleDragEvent(evt);
 800e256:	f00f b839 	b.w	801d2cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>

0800e25a <_ZN26RewardFinalScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~RewardFinalScreenPresenter() {}
 800e25a:	4770      	bx	lr

0800e25c <_ZThn4_N26RewardFinalScreenPresenterD1Ev>:
 800e25c:	3804      	subs	r0, #4
 800e25e:	4770      	bx	lr

0800e260 <_ZN26RewardFinalScreenPresenter10deactivateEv>:
}

void RewardFinalScreenPresenter::activate()
{

}
 800e260:	4770      	bx	lr

0800e262 <_ZN26RewardFinalScreenPresenterD0Ev>:
 800e262:	b510      	push	{r4, lr}
 800e264:	2110      	movs	r1, #16
 800e266:	4604      	mov	r4, r0
 800e268:	f01f fb5d 	bl	802d926 <_ZdlPvj>
 800e26c:	4620      	mov	r0, r4
 800e26e:	bd10      	pop	{r4, pc}

0800e270 <_ZThn4_N26RewardFinalScreenPresenterD0Ev>:
 800e270:	f1a0 0004 	sub.w	r0, r0, #4
 800e274:	e7f5      	b.n	800e262 <_ZN26RewardFinalScreenPresenterD0Ev>
	...

0800e278 <_ZN26RewardFinalScreenPresenterC1ER21RewardFinalScreenView>:
 800e278:	2200      	movs	r2, #0
 800e27a:	6082      	str	r2, [r0, #8]
    : view(v)
 800e27c:	4a02      	ldr	r2, [pc, #8]	@ (800e288 <_ZN26RewardFinalScreenPresenterC1ER21RewardFinalScreenView+0x10>)
 800e27e:	6002      	str	r2, [r0, #0]
 800e280:	3218      	adds	r2, #24
 800e282:	6042      	str	r2, [r0, #4]
 800e284:	60c1      	str	r1, [r0, #12]
}
 800e286:	4770      	bx	lr
 800e288:	08032e88 	.word	0x08032e88

0800e28c <_ZN21RewardFinalScreenView14tearDownScreenEv>:
}

void RewardFinalScreenView::tearDownScreen()
{
    RewardFinalScreenViewBase::tearDownScreen();
}
 800e28c:	4770      	bx	lr
	...

0800e290 <_ZN21RewardFinalScreenViewD1Ev>:

class RewardFinalScreenView : public RewardFinalScreenViewBase
{
public:
    RewardFinalScreenView();
    virtual ~RewardFinalScreenView() {}
 800e290:	b510      	push	{r4, lr}
 800e292:	4b03      	ldr	r3, [pc, #12]	@ (800e2a0 <_ZN21RewardFinalScreenViewD1Ev+0x10>)
 800e294:	6003      	str	r3, [r0, #0]
 800e296:	4604      	mov	r4, r0
 800e298:	f7f9 fe51 	bl	8007f3e <_ZN25RewardFinalScreenViewBaseD1Ev>
 800e29c:	4620      	mov	r0, r4
 800e29e:	bd10      	pop	{r4, pc}
 800e2a0:	08032eb0 	.word	0x08032eb0

0800e2a4 <_ZN21RewardFinalScreenViewD0Ev>:
 800e2a4:	b510      	push	{r4, lr}
 800e2a6:	4604      	mov	r4, r0
 800e2a8:	f7ff fff2 	bl	800e290 <_ZN21RewardFinalScreenViewD1Ev>
 800e2ac:	4620      	mov	r0, r4
 800e2ae:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
 800e2b2:	f01f fb38 	bl	802d926 <_ZdlPvj>
 800e2b6:	4620      	mov	r0, r4
 800e2b8:	bd10      	pop	{r4, pc}
	...

0800e2bc <_ZN21RewardFinalScreenViewC1Ev>:
RewardFinalScreenView::RewardFinalScreenView()
 800e2bc:	b510      	push	{r4, lr}
 800e2be:	4604      	mov	r4, r0
 800e2c0:	f7f9 fe74 	bl	8007fac <_ZN25RewardFinalScreenViewBaseC1Ev>
 800e2c4:	4b01      	ldr	r3, [pc, #4]	@ (800e2cc <_ZN21RewardFinalScreenViewC1Ev+0x10>)
 800e2c6:	6023      	str	r3, [r4, #0]
}
 800e2c8:	4620      	mov	r0, r4
 800e2ca:	bd10      	pop	{r4, pc}
 800e2cc:	08032eb0 	.word	0x08032eb0

0800e2d0 <_ZN21RewardFinalScreenView11setupScreenEv>:
    RewardFinalScreenViewBase::setupScreen();
 800e2d0:	f7f9 be36 	b.w	8007f40 <_ZN25RewardFinalScreenViewBase11setupScreenEv>

0800e2d4 <_ZN21RewardScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~RewardScreenPresenter() {}
 800e2d4:	4770      	bx	lr

0800e2d6 <_ZThn4_N21RewardScreenPresenterD1Ev>:
 800e2d6:	3804      	subs	r0, #4
 800e2d8:	4770      	bx	lr

0800e2da <_ZN21RewardScreenPresenter10deactivateEv>:
}

void RewardScreenPresenter::activate()
{

}
 800e2da:	4770      	bx	lr

0800e2dc <_ZN21RewardScreenPresenterD0Ev>:
 800e2dc:	b510      	push	{r4, lr}
 800e2de:	2110      	movs	r1, #16
 800e2e0:	4604      	mov	r4, r0
 800e2e2:	f01f fb20 	bl	802d926 <_ZdlPvj>
 800e2e6:	4620      	mov	r0, r4
 800e2e8:	bd10      	pop	{r4, pc}

0800e2ea <_ZThn4_N21RewardScreenPresenterD0Ev>:
 800e2ea:	f1a0 0004 	sub.w	r0, r0, #4
 800e2ee:	e7f5      	b.n	800e2dc <_ZN21RewardScreenPresenterD0Ev>

0800e2f0 <_ZN21RewardScreenPresenterC1ER16RewardScreenView>:
 800e2f0:	2200      	movs	r2, #0
 800e2f2:	6082      	str	r2, [r0, #8]
    : view(v)
 800e2f4:	4a02      	ldr	r2, [pc, #8]	@ (800e300 <_ZN21RewardScreenPresenterC1ER16RewardScreenView+0x10>)
 800e2f6:	6002      	str	r2, [r0, #0]
 800e2f8:	3218      	adds	r2, #24
 800e2fa:	6042      	str	r2, [r0, #4]
 800e2fc:	60c1      	str	r1, [r0, #12]
}
 800e2fe:	4770      	bx	lr
 800e300:	08032ee4 	.word	0x08032ee4

0800e304 <_ZN16RewardScreenView14tearDownScreenEv>:
}

void RewardScreenView::tearDownScreen()
{
    RewardScreenViewBase::tearDownScreen();
}
 800e304:	4770      	bx	lr
	...

0800e308 <_ZN16RewardScreenViewD1Ev>:

class RewardScreenView : public RewardScreenViewBase
{
public:
    RewardScreenView();
    virtual ~RewardScreenView() {}
 800e308:	b510      	push	{r4, lr}
 800e30a:	4b03      	ldr	r3, [pc, #12]	@ (800e318 <_ZN16RewardScreenViewD1Ev+0x10>)
 800e30c:	6003      	str	r3, [r0, #0]
 800e30e:	4604      	mov	r4, r0
 800e310:	f7f9 ff97 	bl	8008242 <_ZN20RewardScreenViewBaseD1Ev>
 800e314:	4620      	mov	r0, r4
 800e316:	bd10      	pop	{r4, pc}
 800e318:	08032f0c 	.word	0x08032f0c

0800e31c <_ZN16RewardScreenViewD0Ev>:
 800e31c:	b510      	push	{r4, lr}
 800e31e:	4604      	mov	r4, r0
 800e320:	f7ff fff2 	bl	800e308 <_ZN16RewardScreenViewD1Ev>
 800e324:	4620      	mov	r0, r4
 800e326:	f44f 71bc 	mov.w	r1, #376	@ 0x178
 800e32a:	f01f fafc 	bl	802d926 <_ZdlPvj>
 800e32e:	4620      	mov	r0, r4
 800e330:	bd10      	pop	{r4, pc}
	...

0800e334 <_ZN16RewardScreenViewC1Ev>:
RewardScreenView::RewardScreenView()
 800e334:	b510      	push	{r4, lr}
 800e336:	4604      	mov	r4, r0
 800e338:	f7f9 ffba 	bl	80082b0 <_ZN20RewardScreenViewBaseC1Ev>
 800e33c:	4b01      	ldr	r3, [pc, #4]	@ (800e344 <_ZN16RewardScreenViewC1Ev+0x10>)
 800e33e:	6023      	str	r3, [r4, #0]
}
 800e340:	4620      	mov	r0, r4
 800e342:	bd10      	pop	{r4, pc}
 800e344:	08032f0c 	.word	0x08032f0c

0800e348 <_ZN16RewardScreenView11setupScreenEv>:
    RewardScreenViewBase::setupScreen();
 800e348:	f7f9 bf7c 	b.w	8008244 <_ZN20RewardScreenViewBase11setupScreenEv>

0800e34c <_ZN26SakuraFinalScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SakuraFinalScreenPresenter() {}
 800e34c:	4770      	bx	lr

0800e34e <_ZThn4_N26SakuraFinalScreenPresenterD1Ev>:
 800e34e:	3804      	subs	r0, #4
 800e350:	4770      	bx	lr

0800e352 <_ZN26SakuraFinalScreenPresenter10deactivateEv>:
}

void SakuraFinalScreenPresenter::activate()
{

}
 800e352:	4770      	bx	lr

0800e354 <_ZN26SakuraFinalScreenPresenterD0Ev>:
 800e354:	b510      	push	{r4, lr}
 800e356:	2110      	movs	r1, #16
 800e358:	4604      	mov	r4, r0
 800e35a:	f01f fae4 	bl	802d926 <_ZdlPvj>
 800e35e:	4620      	mov	r0, r4
 800e360:	bd10      	pop	{r4, pc}

0800e362 <_ZThn4_N26SakuraFinalScreenPresenterD0Ev>:
 800e362:	f1a0 0004 	sub.w	r0, r0, #4
 800e366:	e7f5      	b.n	800e354 <_ZN26SakuraFinalScreenPresenterD0Ev>

0800e368 <_ZN26SakuraFinalScreenPresenterC1ER21SakuraFinalScreenView>:
 800e368:	2200      	movs	r2, #0
 800e36a:	6082      	str	r2, [r0, #8]
    : view(v)
 800e36c:	4a02      	ldr	r2, [pc, #8]	@ (800e378 <_ZN26SakuraFinalScreenPresenterC1ER21SakuraFinalScreenView+0x10>)
 800e36e:	6002      	str	r2, [r0, #0]
 800e370:	3218      	adds	r2, #24
 800e372:	6042      	str	r2, [r0, #4]
 800e374:	60c1      	str	r1, [r0, #12]
}
 800e376:	4770      	bx	lr
 800e378:	08032f40 	.word	0x08032f40

0800e37c <_ZN21SakuraFinalScreenView14tearDownScreenEv>:
}

void SakuraFinalScreenView::tearDownScreen()
{
    SakuraFinalScreenViewBase::tearDownScreen();
}
 800e37c:	4770      	bx	lr
	...

0800e380 <_ZN21SakuraFinalScreenViewD1Ev>:

class SakuraFinalScreenView : public SakuraFinalScreenViewBase
{
public:
    SakuraFinalScreenView();
    virtual ~SakuraFinalScreenView() {}
 800e380:	b510      	push	{r4, lr}
 800e382:	4b03      	ldr	r3, [pc, #12]	@ (800e390 <_ZN21SakuraFinalScreenViewD1Ev+0x10>)
 800e384:	6003      	str	r3, [r0, #0]
 800e386:	4604      	mov	r4, r0
 800e388:	f7fa f89b 	bl	80084c2 <_ZN25SakuraFinalScreenViewBaseD1Ev>
 800e38c:	4620      	mov	r0, r4
 800e38e:	bd10      	pop	{r4, pc}
 800e390:	08032f68 	.word	0x08032f68

0800e394 <_ZN21SakuraFinalScreenViewD0Ev>:
 800e394:	b510      	push	{r4, lr}
 800e396:	4604      	mov	r4, r0
 800e398:	f7ff fff2 	bl	800e380 <_ZN21SakuraFinalScreenViewD1Ev>
 800e39c:	4620      	mov	r0, r4
 800e39e:	f44f 7112 	mov.w	r1, #584	@ 0x248
 800e3a2:	f01f fac0 	bl	802d926 <_ZdlPvj>
 800e3a6:	4620      	mov	r0, r4
 800e3a8:	bd10      	pop	{r4, pc}
	...

0800e3ac <_ZN21SakuraFinalScreenViewC1Ev>:
SakuraFinalScreenView::SakuraFinalScreenView()
 800e3ac:	b510      	push	{r4, lr}
 800e3ae:	4604      	mov	r4, r0
 800e3b0:	f7fa f8c8 	bl	8008544 <_ZN25SakuraFinalScreenViewBaseC1Ev>
 800e3b4:	4b01      	ldr	r3, [pc, #4]	@ (800e3bc <_ZN21SakuraFinalScreenViewC1Ev+0x10>)
 800e3b6:	6023      	str	r3, [r4, #0]
}
 800e3b8:	4620      	mov	r0, r4
 800e3ba:	bd10      	pop	{r4, pc}
 800e3bc:	08032f68 	.word	0x08032f68

0800e3c0 <_ZN21SakuraFinalScreenView11setupScreenEv>:
    SakuraFinalScreenViewBase::setupScreen();
 800e3c0:	f7fa b880 	b.w	80084c4 <_ZN25SakuraFinalScreenViewBase11setupScreenEv>

0800e3c4 <_ZN25SakuraGameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SakuraGameScreenPresenter() {}
 800e3c4:	4770      	bx	lr

0800e3c6 <_ZThn4_N25SakuraGameScreenPresenterD1Ev>:
 800e3c6:	3804      	subs	r0, #4
 800e3c8:	4770      	bx	lr

0800e3ca <_ZN25SakuraGameScreenPresenter10deactivateEv>:
}

void SakuraGameScreenPresenter::activate()
{

}
 800e3ca:	4770      	bx	lr

0800e3cc <_ZN25SakuraGameScreenPresenterD0Ev>:
 800e3cc:	b510      	push	{r4, lr}
 800e3ce:	2110      	movs	r1, #16
 800e3d0:	4604      	mov	r4, r0
 800e3d2:	f01f faa8 	bl	802d926 <_ZdlPvj>
 800e3d6:	4620      	mov	r0, r4
 800e3d8:	bd10      	pop	{r4, pc}

0800e3da <_ZThn4_N25SakuraGameScreenPresenterD0Ev>:
 800e3da:	f1a0 0004 	sub.w	r0, r0, #4
 800e3de:	e7f5      	b.n	800e3cc <_ZN25SakuraGameScreenPresenterD0Ev>

0800e3e0 <_ZN25SakuraGameScreenPresenterC1ER20SakuraGameScreenView>:
 800e3e0:	2200      	movs	r2, #0
 800e3e2:	6082      	str	r2, [r0, #8]
    : view(v)
 800e3e4:	4a02      	ldr	r2, [pc, #8]	@ (800e3f0 <_ZN25SakuraGameScreenPresenterC1ER20SakuraGameScreenView+0x10>)
 800e3e6:	6002      	str	r2, [r0, #0]
 800e3e8:	3218      	adds	r2, #24
 800e3ea:	6042      	str	r2, [r0, #4]
 800e3ec:	60c1      	str	r1, [r0, #12]
}
 800e3ee:	4770      	bx	lr
 800e3f0:	08032f9c 	.word	0x08032f9c

0800e3f4 <_ZN20SakuraGameScreenView12checkGameEndEv>:
}

void SakuraGameScreenView::tearDownScreen()
{
    SakuraGameScreenViewBase::tearDownScreen();
}
 800e3f4:	4770      	bx	lr
	...

0800e3f8 <_ZN20SakuraGameScreenViewD1Ev>:

class SakuraGameScreenView : public SakuraGameScreenViewBase
{
public:
    SakuraGameScreenView();
    virtual ~SakuraGameScreenView() {}
 800e3f8:	b510      	push	{r4, lr}
 800e3fa:	4b03      	ldr	r3, [pc, #12]	@ (800e408 <_ZN20SakuraGameScreenViewD1Ev+0x10>)
 800e3fc:	6003      	str	r3, [r0, #0]
 800e3fe:	4604      	mov	r4, r0
 800e400:	f7fa f9e8 	bl	80087d4 <_ZN24SakuraGameScreenViewBaseD1Ev>
 800e404:	4620      	mov	r0, r4
 800e406:	bd10      	pop	{r4, pc}
 800e408:	08032fc4 	.word	0x08032fc4

0800e40c <_ZN20SakuraGameScreenViewD0Ev>:
 800e40c:	b510      	push	{r4, lr}
 800e40e:	4604      	mov	r4, r0
 800e410:	f7ff fff2 	bl	800e3f8 <_ZN20SakuraGameScreenViewD1Ev>
 800e414:	4620      	mov	r0, r4
 800e416:	f44f 612d 	mov.w	r1, #2768	@ 0xad0
 800e41a:	f01f fa84 	bl	802d926 <_ZdlPvj>
 800e41e:	4620      	mov	r0, r4
 800e420:	bd10      	pop	{r4, pc}
	...

0800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>:
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
}

void SakuraGameScreenView::toggleLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800e424:	4802      	ldr	r0, [pc, #8]	@ (800e430 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0+0xc>)
 800e426:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800e42a:	f002 bb9c 	b.w	8010b66 <HAL_GPIO_TogglePin>
 800e42e:	bf00      	nop
 800e430:	40021800 	.word	0x40021800

0800e434 <_ZN20SakuraGameScreenViewC1Ev>:
SakuraGameScreenView::SakuraGameScreenView()
 800e434:	b510      	push	{r4, lr}
 800e436:	4604      	mov	r4, r0
 800e438:	f7fa f9d6 	bl	80087e8 <_ZN24SakuraGameScreenViewBaseC1Ev>
    randomSeed = 12345;
 800e43c:	f243 0239 	movw	r2, #12345	@ 0x3039
SakuraGameScreenView::SakuraGameScreenView()
 800e440:	4b12      	ldr	r3, [pc, #72]	@ (800e48c <_ZN20SakuraGameScreenViewC1Ev+0x58>)
    randomSeed = 12345;
 800e442:	f8c4 2ac4 	str.w	r2, [r4, #2756]	@ 0xac4
    bossPhase = 1;
 800e446:	2201      	movs	r2, #1
SakuraGameScreenView::SakuraGameScreenView()
 800e448:	6023      	str	r3, [r4, #0]
    bossPhase = 1;
 800e44a:	f8c4 2a6c 	str.w	r2, [r4, #2668]	@ 0xa6c
    resetTimer = 0;
 800e44e:	2300      	movs	r3, #0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800e450:	2282      	movs	r2, #130	@ 0x82
    resetTimer = 0;
 800e452:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800e456:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
    fireAnimationTimer = 0;
 800e45a:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800e45e:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800e462:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800e466:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800e46a:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
    bossMaxHP = 130; // Boss có 130 HP: 30 HP từ 3 mauboss + 100 HP bình thường
 800e46e:	f8c4 2a70 	str.w	r2, [r4, #2672]	@ 0xa70
    bossCurrentHP = 130;
 800e472:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    rageMode = false;
 800e476:	f884 3a78 	strb.w	r3, [r4, #2680]	@ 0xa78
    rageModeTimer = 0;
 800e47a:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
    easterEggActivated = false;
 800e47e:	f884 3ac8 	strb.w	r3, [r4, #2760]	@ 0xac8
     easterEggTimer = 0;
 800e482:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
}
 800e486:	4620      	mov	r0, r4
 800e488:	bd10      	pop	{r4, pc}
 800e48a:	bf00      	nop
 800e48c:	08032fc4 	.word	0x08032fc4

0800e490 <_ZN20SakuraGameScreenView8initGPIOEv>:
{
 800e490:	b570      	push	{r4, r5, r6, lr}
 800e492:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800e494:	2400      	movs	r4, #0
 800e496:	4b0f      	ldr	r3, [pc, #60]	@ (800e4d4 <_ZN20SakuraGameScreenView8initGPIOEv+0x44>)
 800e498:	9400      	str	r4, [sp, #0]
 800e49a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800e49c:	4d0e      	ldr	r5, [pc, #56]	@ (800e4d8 <_ZN20SakuraGameScreenView8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800e49e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800e4a2:	631a      	str	r2, [r3, #48]	@ 0x30
 800e4a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800e4a6:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800e4a8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e4ac:	9300      	str	r3, [sp, #0]
 800e4ae:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800e4b0:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800e4b4:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800e4b6:	a901      	add	r1, sp, #4
 800e4b8:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800e4ba:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800e4be:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800e4c2:	f002 fa61 	bl	8010988 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800e4c6:	4622      	mov	r2, r4
 800e4c8:	4631      	mov	r1, r6
 800e4ca:	4628      	mov	r0, r5
 800e4cc:	f002 fb46 	bl	8010b5c <HAL_GPIO_WritePin>
}
 800e4d0:	b006      	add	sp, #24
 800e4d2:	bd70      	pop	{r4, r5, r6, pc}
 800e4d4:	40023800 	.word	0x40023800
 800e4d8:	40021800 	.word	0x40021800

0800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>:
}

// ==================== UTILITY FUNCTIONS ====================

int SakuraGameScreenView::generateRandomNumber(int min, int max)
{
 800e4dc:	b530      	push	{r4, r5, lr}
    // IMPROVED LINEAR CONGRUENTIAL GENERATOR
    randomSeed = (randomSeed * 1664525 + 1013904223) & 0x7fffffff;
 800e4de:	4b0e      	ldr	r3, [pc, #56]	@ (800e518 <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x3c>)
 800e4e0:	f8d0 4ac4 	ldr.w	r4, [r0, #2756]	@ 0xac4
 800e4e4:	4d0d      	ldr	r5, [pc, #52]	@ (800e51c <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x40>)
 800e4e6:	fb05 3304 	mla	r3, r5, r4, r3
 800e4ea:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800e4ee:	f8c0 3ac4 	str.w	r3, [r0, #2756]	@ 0xac4

    // Additional mixing to improve distribution
    uint32_t mixed = randomSeed;
    mixed ^= mixed >> 16;
    mixed *= 0x85ebca6b;
 800e4f2:	480b      	ldr	r0, [pc, #44]	@ (800e520 <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x44>)
    mixed ^= mixed >> 16;
 800e4f4:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    mixed *= 0x85ebca6b;
 800e4f8:	4343      	muls	r3, r0
    mixed ^= mixed >> 13;
    mixed *= 0xc2b2ae35;
 800e4fa:	480a      	ldr	r0, [pc, #40]	@ (800e524 <_ZN20SakuraGameScreenView20generateRandomNumberEii+0x48>)
    mixed ^= mixed >> 13;
 800e4fc:	ea83 3353 	eor.w	r3, r3, r3, lsr #13
    mixed *= 0xc2b2ae35;
 800e500:	4343      	muls	r3, r0
    mixed ^= mixed >> 16;

    return min + (mixed % (max - min + 1));
 800e502:	1a52      	subs	r2, r2, r1
    mixed ^= mixed >> 16;
 800e504:	ea83 4313 	eor.w	r3, r3, r3, lsr #16
    return min + (mixed % (max - min + 1));
 800e508:	3201      	adds	r2, #1
 800e50a:	fbb3 f0f2 	udiv	r0, r3, r2
 800e50e:	fb02 3010 	mls	r0, r2, r0, r3
}
 800e512:	4408      	add	r0, r1
 800e514:	bd30      	pop	{r4, r5, pc}
 800e516:	bf00      	nop
 800e518:	3c6ef35f 	.word	0x3c6ef35f
 800e51c:	0019660d 	.word	0x0019660d
 800e520:	85ebca6b 	.word	0x85ebca6b
 800e524:	c2b2ae35 	.word	0xc2b2ae35

0800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>:
{
 800e528:	b510      	push	{r4, lr}
 800e52a:	2300      	movs	r3, #0
 800e52c:	4604      	mov	r4, r0
 800e52e:	f880 3509 	strb.w	r3, [r0, #1289]	@ 0x509
 800e532:	f880 3535 	strb.w	r3, [r0, #1333]	@ 0x535
 800e536:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
    fire1.invalidate();
 800e53a:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800e53e:	f00e f913 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    fire2.invalidate();
 800e542:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800e546:	f00e f90f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe_fire.invalidate();
 800e54a:	f204 5094 	addw	r0, r4, #1428	@ 0x594
}
 800e54e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach_spe_fire.invalidate();
 800e552:	f00e b909 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e556 <_ZN20SakuraGameScreenView24startAttackFireAnimationEv>:
{
 800e556:	b510      	push	{r4, lr}
 800e558:	4604      	mov	r4, r0
    hideAllFireEffects();
 800e55a:	f7ff ffe5 	bl	800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    fireAnimationTimer = 0;
 800e55e:	2300      	movs	r3, #0
 800e560:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800e564:	2301      	movs	r3, #1
 800e566:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 1; // Bắt đầu với fire1
 800e56a:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
 800e56e:	f884 3509 	strb.w	r3, [r4, #1289]	@ 0x509
    fire1.invalidate();
 800e572:	f204 40e4 	addw	r0, r4, #1252	@ 0x4e4
 800e576:	f00e f8f7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800e57a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    toggleLED();
 800e57e:	f7ff bf51 	b.w	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

0800e582 <_ZN20SakuraGameScreenView25startSpecialFireAnimationEv>:
{
 800e582:	b510      	push	{r4, lr}
 800e584:	4604      	mov	r4, r0
    hideAllFireEffects();
 800e586:	f7ff ffcf 	bl	800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    fireAnimationActive = true;
 800e58a:	2301      	movs	r3, #1
    fireAnimationTimer = 0;
 800e58c:	2200      	movs	r2, #0
    fireAnimationState = 3; // Special fire blink
 800e58e:	2103      	movs	r1, #3
    fireAnimationTimer = 0;
 800e590:	f8c4 2ab0 	str.w	r2, [r4, #2736]	@ 0xab0
    fireAnimationActive = true;
 800e594:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
    fireAnimationState = 3; // Special fire blink
 800e598:	f8c4 1ab8 	str.w	r1, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800e59c:	f8c4 2abc 	str.w	r2, [r4, #2748]	@ 0xabc
    specialFireToggle = true; // Bắt đầu với visible
 800e5a0:	f884 3ac0 	strb.w	r3, [r4, #2752]	@ 0xac0
 800e5a4:	f884 35b9 	strb.w	r3, [r4, #1465]	@ 0x5b9
    bleach_spe_fire.invalidate();
 800e5a8:	f204 5094 	addw	r0, r4, #1428	@ 0x594
 800e5ac:	f00e f8dc 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800e5b0:	f7ff ff38 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e5b4:	f7ff ff36 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e5b8:	f7ff ff34 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800e5bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        toggleLED();
 800e5c0:	f7ff bf30 	b.w	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

0800e5c4 <_ZN20SakuraGameScreenView19updateFireAnimationEv>:
{
 800e5c4:	b538      	push	{r3, r4, r5, lr}
    if (!fireAnimationActive) return;
 800e5c6:	f890 3ab4 	ldrb.w	r3, [r0, #2740]	@ 0xab4
{
 800e5ca:	4604      	mov	r4, r0
    if (!fireAnimationActive) return;
 800e5cc:	2b00      	cmp	r3, #0
 800e5ce:	f000 8085 	beq.w	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800e5d2:	f8d0 3ab0 	ldr.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800e5d6:	f8d0 2ab8 	ldr.w	r2, [r0, #2744]	@ 0xab8
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800e5da:	3310      	adds	r3, #16
    switch (fireAnimationState) {
 800e5dc:	2a02      	cmp	r2, #2
    fireAnimationTimer += 16; // TouchGFX tick ~16ms
 800e5de:	f8c0 3ab0 	str.w	r3, [r0, #2736]	@ 0xab0
    switch (fireAnimationState) {
 800e5e2:	d01c      	beq.n	800e61e <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x5a>
 800e5e4:	2a03      	cmp	r2, #3
 800e5e6:	d032      	beq.n	800e64e <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x8a>
 800e5e8:	2a01      	cmp	r2, #1
 800e5ea:	d177      	bne.n	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800e5ec:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800e5f0:	db74      	blt.n	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e5f2:	2500      	movs	r5, #0
 800e5f4:	f880 2535 	strb.w	r2, [r0, #1333]	@ 0x535
 800e5f8:	f880 5509 	strb.w	r5, [r0, #1289]	@ 0x509
                fire1.invalidate();
 800e5fc:	f200 40e4 	addw	r0, r0, #1252	@ 0x4e4
 800e600:	f00e f8b2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                fire2.invalidate();
 800e604:	f504 60a2 	add.w	r0, r4, #1296	@ 0x510
 800e608:	f00e f8ae 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationState = 2;
 800e60c:	2302      	movs	r3, #2
 800e60e:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800e612:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
}
 800e616:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                        toggleLED();
 800e61a:	f7ff bf03 	b.w	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            if (fireAnimationTimer >= FIRE_ANIMATION_DURATION) {
 800e61e:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800e622:	db5b      	blt.n	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
                hideAllFireEffects();
 800e624:	f7ff ff80 	bl	800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
                fireAnimationActive = false;
 800e628:	2300      	movs	r3, #0
 800e62a:	f884 3ab4 	strb.w	r3, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800e62e:	f8c4 3ab8 	str.w	r3, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800e632:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                if (!gameEnded && bossCurrentHP > 0) {
 800e636:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800e63a:	2b00      	cmp	r3, #0
 800e63c:	d14e      	bne.n	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e63e:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800e642:	2b00      	cmp	r3, #0
 800e644:	dd4a      	ble.n	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800e646:	2301      	movs	r3, #1
 800e648:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    toggleLED(); // Debug: animation complete
 800e64c:	e7e3      	b.n	800e616 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x52>
            if (fireAnimationTimer >= FIRE_LOOP_INTERVAL) {
 800e64e:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 800e652:	db16      	blt.n	800e682 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0xbe>
                specialFireToggle = !specialFireToggle;
 800e654:	f890 3ac0 	ldrb.w	r3, [r0, #2752]	@ 0xac0
 800e658:	f083 0301 	eor.w	r3, r3, #1
 800e65c:	f880 3ac0 	strb.w	r3, [r0, #2752]	@ 0xac0
 800e660:	f880 35b9 	strb.w	r3, [r0, #1465]	@ 0x5b9
                bleach_spe_fire.invalidate();
 800e664:	f200 5094 	addw	r0, r0, #1428	@ 0x594
 800e668:	f00e f87e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                fireAnimationTimer = 0;
 800e66c:	2300      	movs	r3, #0
 800e66e:	f8c4 3ab0 	str.w	r3, [r4, #2736]	@ 0xab0
                fireLoopCounter += FIRE_LOOP_INTERVAL;
 800e672:	f8d4 3abc 	ldr.w	r3, [r4, #2748]	@ 0xabc
 800e676:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800e67a:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
                toggleLED();
 800e67e:	f7ff fed1 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            if (fireLoopCounter >= 3000) { // 3000ms = 3 giây
 800e682:	f8d4 2abc 	ldr.w	r2, [r4, #2748]	@ 0xabc
 800e686:	f640 33b7 	movw	r3, #2999	@ 0xbb7
 800e68a:	429a      	cmp	r2, r3
 800e68c:	dd26      	ble.n	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e68e:	2500      	movs	r5, #0
                hideAllFireEffects();
 800e690:	4620      	mov	r0, r4
 800e692:	f7ff ff49 	bl	800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
 800e696:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
                bleach_spe.invalidate();
 800e69a:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800e69e:	f00e f863 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
                if (!gameEnded && bossCurrentHP > 0) {
 800e6a2:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
                fireAnimationActive = false;
 800e6a6:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
                fireAnimationState = 0;
 800e6aa:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
                fireAnimationTimer = 0;
 800e6ae:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
                fireLoopCounter = 0;
 800e6b2:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
                if (!gameEnded && bossCurrentHP > 0) {
 800e6b6:	b98b      	cbnz	r3, 800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
 800e6b8:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800e6bc:	42ab      	cmp	r3, r5
 800e6be:	dd0d      	ble.n	800e6dc <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x118>
                    aiActionDone = true;
 800e6c0:	2301      	movs	r3, #1
 800e6c2:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
                    aiSpecialUsed = true;
 800e6c6:	f884 3a8b 	strb.w	r3, [r4, #2699]	@ 0xa8b
                        toggleLED();
 800e6ca:	f7ff feab 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e6ce:	f7ff fea9 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e6d2:	f7ff fea7 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e6d6:	f7ff fea5 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800e6da:	e79c      	b.n	800e616 <_ZN20SakuraGameScreenView19updateFireAnimationEv+0x52>
}
 800e6dc:	bd38      	pop	{r3, r4, r5, pc}

0800e6de <_ZN20SakuraGameScreenView17hideActionButtonsEv>:
{
 800e6de:	b538      	push	{r3, r4, r5, lr}
 800e6e0:	2301      	movs	r3, #1
 800e6e2:	2500      	movs	r5, #0
 800e6e4:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800e6e8:	4604      	mov	r4, r0
 800e6ea:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800e6ee:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800e6f2:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800e6f6:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800e6fa:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800e6fe:	f00e f833 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800e702:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800e706:	f00e f82f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800e70a:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800e70e:	f00e f82b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800e712:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800e716:	f00e f827 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800e71a:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800e71e:	f00e f823 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = false;
 800e722:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800e726:	bd38      	pop	{r3, r4, r5, pc}

0800e728 <_ZN20SakuraGameScreenView17showActionButtonsEv>:
{
 800e728:	b538      	push	{r3, r4, r5, lr}
 800e72a:	2300      	movs	r3, #0
 800e72c:	2501      	movs	r5, #1
 800e72e:	f880 384d 	strb.w	r3, [r0, #2125]	@ 0x84d
 800e732:	4604      	mov	r4, r0
 800e734:	f880 579d 	strb.w	r5, [r0, #1949]	@ 0x79d
 800e738:	f880 57c9 	strb.w	r5, [r0, #1993]	@ 0x7c9
 800e73c:	f880 57f5 	strb.w	r5, [r0, #2037]	@ 0x7f5
 800e740:	f880 5821 	strb.w	r5, [r0, #2081]	@ 0x821
    btn_attack.invalidate();
 800e744:	f500 60ef 	add.w	r0, r0, #1912	@ 0x778
 800e748:	f00e f80e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800e74c:	f204 70a4 	addw	r0, r4, #1956	@ 0x7a4
 800e750:	f00e f80a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800e754:	f504 60fa 	add.w	r0, r4, #2000	@ 0x7d0
 800e758:	f00e f806 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800e75c:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800e760:	f00e f802 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800e764:	f204 70fc 	addw	r0, r4, #2044	@ 0x7fc
 800e768:	f00d fffe 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    menuOpen = true;
 800e76c:	f884 5a68 	strb.w	r5, [r4, #2664]	@ 0xa68
}
 800e770:	bd38      	pop	{r3, r4, r5, pc}

0800e772 <_ZN20SakuraGameScreenView16toggleActionMenuEv>:
{
 800e772:	b508      	push	{r3, lr}
    if (menuOpen) {
 800e774:	f890 3a68 	ldrb.w	r3, [r0, #2664]	@ 0xa68
 800e778:	b12b      	cbz	r3, 800e786 <_ZN20SakuraGameScreenView16toggleActionMenuEv+0x14>
        hideActionButtons();
 800e77a:	f7ff ffb0 	bl	800e6de <_ZN20SakuraGameScreenView17hideActionButtonsEv>
}
 800e77e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    toggleLED();
 800e782:	f7ff be4f 	b.w	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        showActionButtons();
 800e786:	f7ff ffcf 	bl	800e728 <_ZN20SakuraGameScreenView17showActionButtonsEv>
 800e78a:	e7f8      	b.n	800e77e <_ZN20SakuraGameScreenView16toggleActionMenuEv+0xc>

0800e78c <_ZN20SakuraGameScreenView20hideAllBossHPWidgetsEv>:
 800e78c:	2300      	movs	r3, #0
{
 800e78e:	b510      	push	{r4, lr}
 800e790:	4604      	mov	r4, r0
 800e792:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800e796:	f880 32cd 	strb.w	r3, [r0, #717]	@ 0x2cd
 800e79a:	f880 32f9 	strb.w	r3, [r0, #761]	@ 0x2f9
 800e79e:	f880 3325 	strb.w	r3, [r0, #805]	@ 0x325
 800e7a2:	f880 3351 	strb.w	r3, [r0, #849]	@ 0x351
 800e7a6:	f880 337d 	strb.w	r3, [r0, #893]	@ 0x37d
 800e7aa:	f880 33a9 	strb.w	r3, [r0, #937]	@ 0x3a9
 800e7ae:	f880 33d5 	strb.w	r3, [r0, #981]	@ 0x3d5
 800e7b2:	f880 3401 	strb.w	r3, [r0, #1025]	@ 0x401
 800e7b6:	f880 342d 	strb.w	r3, [r0, #1069]	@ 0x42d
 800e7ba:	f880 3459 	strb.w	r3, [r0, #1113]	@ 0x459
 800e7be:	f880 3485 	strb.w	r3, [r0, #1157]	@ 0x485
 800e7c2:	f880 34b1 	strb.w	r3, [r0, #1201]	@ 0x4b1
 800e7c6:	f880 34dd 	strb.w	r3, [r0, #1245]	@ 0x4dd
    BITMAP_HP_130_ID_1.invalidate();
 800e7ca:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800e7ce:	f00d ffcb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_120_ID_1.invalidate();
 800e7d2:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800e7d6:	f00d ffc7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_110_ID_1.invalidate();
 800e7da:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800e7de:	f00d ffc3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_100_ID_1.invalidate();
 800e7e2:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800e7e6:	f00d ffbf 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID_1.invalidate();
 800e7ea:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800e7ee:	f00d ffbb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID_1.invalidate();
 800e7f2:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800e7f6:	f00d ffb7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID_1.invalidate();
 800e7fa:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800e7fe:	f00d ffb3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID_1.invalidate();
 800e802:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800e806:	f00d ffaf 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID_1.invalidate();
 800e80a:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800e80e:	f00d ffab 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID_1.invalidate();
 800e812:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800e816:	f00d ffa7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID_1.invalidate();
 800e81a:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800e81e:	f00d ffa3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID_1.invalidate();
 800e822:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800e826:	f00d ff9f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID_1.invalidate();
 800e82a:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800e82e:	f00d ff9b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID_1.invalidate();
 800e832:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
}
 800e836:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID_1.invalidate();
 800e83a:	f00d bf95 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e83e <_ZN20SakuraGameScreenView18forceBossHPVisibleEv>:
{
 800e83e:	b508      	push	{r3, lr}
    if (bossCurrentHP >= 125) { // Boss bắt đầu với 130 HP
 800e840:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800e844:	2b7c      	cmp	r3, #124	@ 0x7c
 800e846:	dd15      	ble.n	800e874 <_ZN20SakuraGameScreenView18forceBossHPVisibleEv+0x36>
 800e848:	2301      	movs	r3, #1
 800e84a:	f880 32a1 	strb.w	r3, [r0, #673]	@ 0x2a1
 800e84e:	23ff      	movs	r3, #255	@ 0xff
 800e850:	f880 32a4 	strb.w	r3, [r0, #676]	@ 0x2a4
        BITMAP_HP_130_ID_1.invalidate();
 800e854:	f500 701f 	add.w	r0, r0, #636	@ 0x27c
 800e858:	f00d ff86 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 800e85c:	f7ff fde2 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800e860:	f7ff fde0 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800e864:	f7ff fdde 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        toggleLED();
 800e868:	f7ff fddc 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800e86c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        toggleLED();
 800e870:	f7ff bdd8 	b.w	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800e874:	bd08      	pop	{r3, pc}

0800e876 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>:
{
 800e876:	b510      	push	{r4, lr}
 800e878:	2300      	movs	r3, #0
 800e87a:	4604      	mov	r4, r0
 800e87c:	f880 3955 	strb.w	r3, [r0, #2389]	@ 0x955
 800e880:	f880 3981 	strb.w	r3, [r0, #2433]	@ 0x981
 800e884:	f880 39ad 	strb.w	r3, [r0, #2477]	@ 0x9ad
 800e888:	f880 39d9 	strb.w	r3, [r0, #2521]	@ 0x9d9
    x2dame_1.invalidate();
 800e88c:	f500 6013 	add.w	r0, r0, #2352	@ 0x930
 800e890:	f00d ff6a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_1.invalidate();
 800e894:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 800e898:	f00d ff66 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_1.invalidate();
 800e89c:	f604 1088 	addw	r0, r4, #2440	@ 0x988
 800e8a0:	f00d ff62 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_1.invalidate();
 800e8a4:	f604 10b4 	addw	r0, r4, #2484	@ 0x9b4
}
 800e8a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_1.invalidate();
 800e8ac:	f00d bf5c 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>:
{
 800e8b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e8b2:	4604      	mov	r4, r0
    hideAllPlayerPowerUps();
 800e8b4:	f7ff ffdf 	bl	800e876 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
    if (!playerPowerUpActive) return;
 800e8b8:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800e8bc:	2b00      	cmp	r3, #0
 800e8be:	d053      	beq.n	800e968 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0xb8>
    switch (playerPowerUpType) {
 800e8c0:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800e8c4:	3b01      	subs	r3, #1
 800e8c6:	2b03      	cmp	r3, #3
 800e8c8:	d80a      	bhi.n	800e8e0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x30>
 800e8ca:	e8df f003 	tbb	[pc, r3]
 800e8ce:	0f02      	.short	0x0f02
 800e8d0:	3c26      	.short	0x3c26
 800e8d2:	2301      	movs	r3, #1
 800e8d4:	f884 3955 	strb.w	r3, [r4, #2389]	@ 0x955
            x2dame_1.invalidate();
 800e8d8:	f504 6013 	add.w	r0, r4, #2352	@ 0x930
            sheild_1.invalidate();
 800e8dc:	f00d ff44 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e8e0:	1d20      	adds	r0, r4, #4
}
 800e8e2:	b002      	add	sp, #8
 800e8e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e8e8:	f00d bf3e 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e8ec:	23ff      	movs	r3, #255	@ 0xff
 800e8ee:	f884 3984 	strb.w	r3, [r4, #2436]	@ 0x984
 800e8f2:	2601      	movs	r6, #1
            healthplus_1.setPosition(9, 61, 32, 37);
 800e8f4:	f604 155c 	addw	r5, r4, #2396	@ 0x95c
 800e8f8:	2325      	movs	r3, #37	@ 0x25
 800e8fa:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
 800e8fe:	223d      	movs	r2, #61	@ 0x3d
 800e900:	9300      	str	r3, [sp, #0]
 800e902:	2109      	movs	r1, #9
 800e904:	2320      	movs	r3, #32
 800e906:	4628      	mov	r0, r5
 800e908:	f7f4 fa54 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
            healthplus_1.invalidate();
 800e90c:	4628      	mov	r0, r5
 800e90e:	f00d ff2b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e912:	f884 6981 	strb.w	r6, [r4, #2433]	@ 0x981
            sheild_1.invalidate();
 800e916:	4628      	mov	r0, r5
 800e918:	e7e0      	b.n	800e8dc <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x2c>
 800e91a:	23ff      	movs	r3, #255	@ 0xff
 800e91c:	f884 39b0 	strb.w	r3, [r4, #2480]	@ 0x9b0
 800e920:	2601      	movs	r6, #1
            chakragain_1.setPosition(9, 61, 32, 37);
 800e922:	f604 1588 	addw	r5, r4, #2440	@ 0x988
 800e926:	2325      	movs	r3, #37	@ 0x25
 800e928:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
 800e92c:	223d      	movs	r2, #61	@ 0x3d
 800e92e:	9300      	str	r3, [sp, #0]
 800e930:	2109      	movs	r1, #9
 800e932:	2320      	movs	r3, #32
 800e934:	4628      	mov	r0, r5
 800e936:	f7f4 fa3d 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
            chakragain_1.invalidate();
 800e93a:	4628      	mov	r0, r5
 800e93c:	f00d ff14 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800e940:	f884 69ad 	strb.w	r6, [r4, #2477]	@ 0x9ad
            chakragain_1.invalidate();
 800e944:	e7e7      	b.n	800e916 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x66>
 800e946:	2301      	movs	r3, #1
 800e948:	f884 39d9 	strb.w	r3, [r4, #2521]	@ 0x9d9
 800e94c:	23ff      	movs	r3, #255	@ 0xff
 800e94e:	f884 39dc 	strb.w	r3, [r4, #2524]	@ 0x9dc
            sheild_1.setPosition(8, 59, 32, 37);
 800e952:	f604 15b4 	addw	r5, r4, #2484	@ 0x9b4
 800e956:	2325      	movs	r3, #37	@ 0x25
 800e958:	9300      	str	r3, [sp, #0]
 800e95a:	223b      	movs	r2, #59	@ 0x3b
 800e95c:	2320      	movs	r3, #32
 800e95e:	2108      	movs	r1, #8
 800e960:	4628      	mov	r0, r5
 800e962:	f7f4 fa27 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800e966:	e7d6      	b.n	800e916 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv+0x66>
}
 800e968:	b002      	add	sp, #8
 800e96a:	bd70      	pop	{r4, r5, r6, pc}

0800e96c <_ZN20SakuraGameScreenView17hideAllAIPowerUpsEv>:
{
 800e96c:	b510      	push	{r4, lr}
 800e96e:	2300      	movs	r3, #0
 800e970:	4604      	mov	r4, r0
 800e972:	f880 3929 	strb.w	r3, [r0, #2345]	@ 0x929
 800e976:	f880 3a5d 	strb.w	r3, [r0, #2653]	@ 0xa5d
 800e97a:	f880 3a31 	strb.w	r3, [r0, #2609]	@ 0xa31
 800e97e:	f880 3a05 	strb.w	r3, [r0, #2565]	@ 0xa05
    x2dame_2.invalidate();
 800e982:	f600 1004 	addw	r0, r0, #2308	@ 0x904
 800e986:	f00d feef 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    healthplus_2.invalidate();
 800e98a:	f604 2038 	addw	r0, r4, #2616	@ 0xa38
 800e98e:	f00d feeb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    chakragain_2.invalidate();
 800e992:	f604 200c 	addw	r0, r4, #2572	@ 0xa0c
 800e996:	f00d fee7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    sheild_2.invalidate();
 800e99a:	f504 601e 	add.w	r0, r4, #2528	@ 0x9e0
}
 800e99e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sheild_2.invalidate();
 800e9a2:	f00d bee1 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800e9a6 <_ZN20SakuraGameScreenView16resetNarutoStateEv>:
 800e9a6:	2300      	movs	r3, #0
}

// ==================== CHARACTER STATE FUNCTIONS ====================

void SakuraGameScreenView::resetNarutoState()
{
 800e9a8:	b510      	push	{r4, lr}
 800e9aa:	f880 3771 	strb.w	r3, [r0, #1905]	@ 0x771
 800e9ae:	f880 3745 	strb.w	r3, [r0, #1861]	@ 0x745
 800e9b2:	f880 3719 	strb.w	r3, [r0, #1817]	@ 0x719
 800e9b6:	f880 36ed 	strb.w	r3, [r0, #1773]	@ 0x6ed
 800e9ba:	f880 36c1 	strb.w	r3, [r0, #1729]	@ 0x6c1
    naruto_spe.setVisible(false);
    naruto_lose.setVisible(false);
    naruto_win.setVisible(false);

    // Hiển thị lại naruto bình thường (chỉ khi chưa thua và game chưa kết thúc)
    if (playerHP > 0 && !gameEnded) {
 800e9be:	f8d0 3a64 	ldr.w	r3, [r0, #2660]	@ 0xa64
 800e9c2:	2b00      	cmp	r3, #0
{
 800e9c4:	4604      	mov	r4, r0
    if (playerHP > 0 && !gameEnded) {
 800e9c6:	dd05      	ble.n	800e9d4 <_ZN20SakuraGameScreenView16resetNarutoStateEv+0x2e>
 800e9c8:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800e9cc:	b913      	cbnz	r3, 800e9d4 <_ZN20SakuraGameScreenView16resetNarutoStateEv+0x2e>
 800e9ce:	2301      	movs	r3, #1
 800e9d0:	f880 3695 	strb.w	r3, [r0, #1685]	@ 0x695
        naruto.setVisible(true);
    }

    // Invalidate tất cả
    naruto_atk.invalidate();
 800e9d4:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800e9d8:	f00d fec6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800e9dc:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800e9e0:	f00d fec2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800e9e4:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800e9e8:	f00d febe 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800e9ec:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800e9f0:	f00d feba 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800e9f4:	f204 609c 	addw	r0, r4, #1692	@ 0x69c
 800e9f8:	f00d feb6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800e9fc:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
}
 800ea00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800ea04:	f00d beb0 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ea08 <_ZN20SakuraGameScreenView16resetBleachStateEv>:
 800ea08:	2300      	movs	r3, #0

void SakuraGameScreenView::resetBleachState()
{
 800ea0a:	b510      	push	{r4, lr}
 800ea0c:	f880 363d 	strb.w	r3, [r0, #1597]	@ 0x63d
 800ea10:	f880 3611 	strb.w	r3, [r0, #1553]	@ 0x611
 800ea14:	f880 35e5 	strb.w	r3, [r0, #1509]	@ 0x5e5
 800ea18:	f880 3561 	strb.w	r3, [r0, #1377]	@ 0x561
 800ea1c:	f880 358d 	strb.w	r3, [r0, #1421]	@ 0x58d
    bleach_spe.setVisible(false);
    bleach_lose.setVisible(false);
    bleach_win.setVisible(false);

    // SỬA: THAY aiHP THÀNH bossCurrentHP
    if (bossCurrentHP > 0 && !gameEnded) {
 800ea20:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800ea24:	2b00      	cmp	r3, #0
{
 800ea26:	4604      	mov	r4, r0
    if (bossCurrentHP > 0 && !gameEnded) {
 800ea28:	dd05      	ble.n	800ea36 <_ZN20SakuraGameScreenView16resetBleachStateEv+0x2e>
 800ea2a:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
 800ea2e:	b913      	cbnz	r3, 800ea36 <_ZN20SakuraGameScreenView16resetBleachStateEv+0x2e>
 800ea30:	2301      	movs	r3, #1
 800ea32:	f880 3669 	strb.w	r3, [r0, #1641]	@ 0x669
        bleach.setVisible(true);
    }

    // Invalidate tất cả
    bleach_atk.invalidate();
 800ea36:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800ea3a:	f00d fe95 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800ea3e:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800ea42:	f00d fe91 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();
 800ea46:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800ea4a:	f00d fe8d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800ea4e:	f204 503c 	addw	r0, r4, #1340	@ 0x53c
 800ea52:	f00d fe89 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800ea56:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800ea5a:	f00d fe85 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800ea5e:	f204 6044 	addw	r0, r4, #1604	@ 0x644
}
 800ea62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bleach.invalidate();
 800ea66:	f00d be7f 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ea6a <_ZN20SakuraGameScreenView22hideAllPlayerHPWidgetsEv>:
 800ea6a:	2300      	movs	r3, #0
            break;
    }
}

void SakuraGameScreenView::hideAllPlayerHPWidgets()
{
 800ea6c:	b510      	push	{r4, lr}
 800ea6e:	4604      	mov	r4, r0
 800ea70:	f880 30bd 	strb.w	r3, [r0, #189]	@ 0xbd
 800ea74:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800ea78:	f880 3249 	strb.w	r3, [r0, #585]	@ 0x249
 800ea7c:	f880 321d 	strb.w	r3, [r0, #541]	@ 0x21d
 800ea80:	f880 31f1 	strb.w	r3, [r0, #497]	@ 0x1f1
 800ea84:	f880 31c5 	strb.w	r3, [r0, #453]	@ 0x1c5
 800ea88:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800ea8c:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800ea90:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800ea94:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9
 800ea98:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
    BITMAP_HP_20_ID.setVisible(false);
    BITMAP_HP_10_ID.setVisible(false);
    BITMAP_HP_0_ID.setVisible(false);

    // Invalidate tất cả
    BITMAP_HP_100_ID.invalidate();
 800ea9c:	3098      	adds	r0, #152	@ 0x98
 800ea9e:	f00d fe63 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_90_ID.invalidate();
 800eaa2:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800eaa6:	f00d fe5f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_80_ID.invalidate();
 800eaaa:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800eaae:	f00d fe5b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_70_ID.invalidate();
 800eab2:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800eab6:	f00d fe57 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_60_ID.invalidate();
 800eaba:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800eabe:	f00d fe53 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_50_ID.invalidate();
 800eac2:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800eac6:	f00d fe4f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_40_ID.invalidate();
 800eaca:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800eace:	f00d fe4b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_30_ID.invalidate();
 800ead2:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800ead6:	f00d fe47 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_20_ID.invalidate();
 800eada:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800eade:	f00d fe43 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_10_ID.invalidate();
 800eae2:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800eae6:	f00d fe3f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    BITMAP_HP_0_ID.invalidate();
 800eaea:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
}
 800eaee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    BITMAP_HP_0_ID.invalidate();
 800eaf2:	f00d be39 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800eaf6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>:
// ==================== CHAKRA SYSTEM ====================

void SakuraGameScreenView::updatePlayerChakraDisplay()
{
    // Đảm bảo chakra level không bị âm
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800eaf6:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800eafa:	2b00      	cmp	r3, #0
{
 800eafc:	b513      	push	{r0, r1, r4, lr}
 800eafe:	4602      	mov	r2, r0
    if (playerChakraLevel < 0) playerChakraLevel = 0;
 800eb00:	da0f      	bge.n	800eb22 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x2c>
 800eb02:	2300      	movs	r3, #0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800eb04:	f8c2 3a80 	str.w	r3, [r2, #2688]	@ 0xa80

    // Xử lý đặc biệt khi chakra = 0
    if (playerChakraLevel == 0) {
 800eb08:	f8d2 1a80 	ldr.w	r1, [r2, #2688]	@ 0xa80
 800eb0c:	f602 0454 	addw	r4, r2, #2132	@ 0x854
 800eb10:	b959      	cbnz	r1, 800eb2a <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x34>
 800eb12:	f882 1879 	strb.w	r1, [r2, #2169]	@ 0x879
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của player
    chakra_box1.setPosition(14, 43, currentWidth, 5);
    chakra_box1.invalidate();
 800eb16:	4620      	mov	r0, r4
}
 800eb18:	b002      	add	sp, #8
 800eb1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box1.invalidate();
 800eb1e:	f00d be23 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800eb22:	2b64      	cmp	r3, #100	@ 0x64
 800eb24:	ddf0      	ble.n	800eb08 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x12>
 800eb26:	2364      	movs	r3, #100	@ 0x64
 800eb28:	e7ec      	b.n	800eb04 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0xe>
 800eb2a:	2001      	movs	r0, #1
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800eb2c:	2356      	movs	r3, #86	@ 0x56
 800eb2e:	f882 0879 	strb.w	r0, [r2, #2169]	@ 0x879
 800eb32:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800eb36:	2a63      	cmp	r2, #99	@ 0x63
 800eb38:	dd0f      	ble.n	800eb5a <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800eb3a:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800eb3e:	428a      	cmp	r2, r1
 800eb40:	dc02      	bgt.n	800eb48 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x52>
    int currentWidth = (playerChakraLevel * maxWidth) / 100;
 800eb42:	2364      	movs	r3, #100	@ 0x64
 800eb44:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box1.setPosition(14, 43, currentWidth, 5);
 800eb48:	2205      	movs	r2, #5
 800eb4a:	9200      	str	r2, [sp, #0]
 800eb4c:	b21b      	sxth	r3, r3
 800eb4e:	222b      	movs	r2, #43	@ 0x2b
 800eb50:	210e      	movs	r1, #14
 800eb52:	4620      	mov	r0, r4
 800eb54:	f7f4 f92e 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800eb58:	e7dd      	b.n	800eb16 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800eb5a:	4603      	mov	r3, r0
 800eb5c:	e7f4      	b.n	800eb48 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv+0x52>

0800eb5e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>:

void SakuraGameScreenView::updateAIChakraDisplay()
{
    // Đảm bảo AI chakra level không bị âm
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800eb5e:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800eb62:	2b00      	cmp	r3, #0
{
 800eb64:	b513      	push	{r0, r1, r4, lr}
 800eb66:	4602      	mov	r2, r0
    if (aiChakraLevel < 0) aiChakraLevel = 0;
 800eb68:	da0f      	bge.n	800eb8a <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x2c>
 800eb6a:	2300      	movs	r3, #0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800eb6c:	f8c2 3a84 	str.w	r3, [r2, #2692]	@ 0xa84

    // Xử lý đặc biệt khi chakra = 0
    if (aiChakraLevel == 0) {
 800eb70:	f8d2 1a84 	ldr.w	r1, [r2, #2692]	@ 0xa84
 800eb74:	f502 6408 	add.w	r4, r2, #2176	@ 0x880
 800eb78:	b959      	cbnz	r1, 800eb92 <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x34>
 800eb7a:	f882 18a5 	strb.w	r1, [r2, #2213]	@ 0x8a5
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
    if (currentWidth > maxWidth) currentWidth = maxWidth;

    // Cập nhật kích thước Box chakra của AI
    chakra_box2.setPosition(135, 43, currentWidth, 5);
    chakra_box2.invalidate();
 800eb7e:	4620      	mov	r0, r4
}
 800eb80:	b002      	add	sp, #8
 800eb82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    chakra_box2.invalidate();
 800eb86:	f00d bdef 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800eb8a:	2b64      	cmp	r3, #100	@ 0x64
 800eb8c:	ddf0      	ble.n	800eb70 <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x12>
 800eb8e:	2364      	movs	r3, #100	@ 0x64
 800eb90:	e7ec      	b.n	800eb6c <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0xe>
 800eb92:	2001      	movs	r0, #1
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800eb94:	2356      	movs	r3, #86	@ 0x56
 800eb96:	f882 08a5 	strb.w	r0, [r2, #2213]	@ 0x8a5
 800eb9a:	fb03 f201 	mul.w	r2, r3, r1
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800eb9e:	2a63      	cmp	r2, #99	@ 0x63
 800eba0:	dd0f      	ble.n	800ebc2 <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x64>
    if (currentWidth > maxWidth) currentWidth = maxWidth;
 800eba2:	f242 11fb 	movw	r1, #8699	@ 0x21fb
 800eba6:	428a      	cmp	r2, r1
 800eba8:	dc02      	bgt.n	800ebb0 <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x52>
    int currentWidth = (aiChakraLevel * maxWidth) / 100;
 800ebaa:	2364      	movs	r3, #100	@ 0x64
 800ebac:	fb92 f3f3 	sdiv	r3, r2, r3
    chakra_box2.setPosition(135, 43, currentWidth, 5);
 800ebb0:	2205      	movs	r2, #5
 800ebb2:	9200      	str	r2, [sp, #0]
 800ebb4:	b21b      	sxth	r3, r3
 800ebb6:	222b      	movs	r2, #43	@ 0x2b
 800ebb8:	2187      	movs	r1, #135	@ 0x87
 800ebba:	4620      	mov	r0, r4
 800ebbc:	f7f4 f8fa 	bl	8002db4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800ebc0:	e7dd      	b.n	800eb7e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x20>
    if (currentWidth < 1) currentWidth = 1; // Tối thiểu 1 pixel nếu có chakra
 800ebc2:	4603      	mov	r3, r0
 800ebc4:	e7f4      	b.n	800ebb0 <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv+0x52>
	...

0800ebc8 <_ZN20SakuraGameScreenView7endGameEb>:
    // Logic game end giờ được xử lý trong updatePlayerHPDisplay() và updateAIHPDisplay()
    return;
}

void SakuraGameScreenView::endGame(bool playerWon)
{
 800ebc8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebcc:	4604      	mov	r4, r0
    gameEnded = true;
 800ebce:	2601      	movs	r6, #1
 800ebd0:	2500      	movs	r5, #0
 800ebd2:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69
{
 800ebd6:	460f      	mov	r7, r1

    // Hide menu actions immediately
    hideActionButtons();
 800ebd8:	f7ff fd81 	bl	800e6de <_ZN20SakuraGameScreenView17hideActionButtonsEv>
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800ebdc:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800ebe0:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
 800ebe4:	f00d fdc0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons when game ends
    hideAllPlayerPowerUps();
 800ebe8:	4620      	mov	r0, r4
 800ebea:	f7ff fe44 	bl	800e876 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
    fireAnimationTimer = 0;
    resetTimerActive = false;
    resetTimer = 0;

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800ebee:	4620      	mov	r0, r4
    fireAnimationActive = false;
 800ebf0:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800ebf4:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    resetTimerActive = false;
 800ebf8:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    resetTimer = 0;
 800ebfc:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    hideAllFireEffects();
 800ec00:	f7ff fc92 	bl	800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL TO FORCE REFRESH =====
    naruto.invalidate();
 800ec04:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800ec08:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800ec0c:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800ec10:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800ec14:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800ec18:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800ec1c:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800ec20:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800ec24:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800ec28:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800ec2c:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800ec30:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800ec34:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800ec38:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800ec3c:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
 800ec40:	f00d fd92 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800ec44:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800ec48:	f00d fd8e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800ec4c:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800ec50:	f00d fd8a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
    naruto_lose.invalidate();
 800ec54:	f504 69d9 	add.w	r9, r4, #1736	@ 0x6c8
    naruto_spe.invalidate();
 800ec58:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800ec5c:	f00d fd84 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800ec60:	f204 6b9c 	addw	fp, r4, #1692	@ 0x69c
    naruto_lose.invalidate();
 800ec64:	4648      	mov	r0, r9
 800ec66:	f00d fd7f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800ec6a:	4658      	mov	r0, fp
 800ec6c:	f00d fd7c 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800ec70:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800ec74:	f00d fd78 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800ec78:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800ec7c:	f00d fd74 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800ec80:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800ec84:	f00d fd70 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800ec88:	f204 5a3c 	addw	sl, r4, #1340	@ 0x53c
    bleach_spe.invalidate();  // QUAN TRỌNG
 800ec8c:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800ec90:	f00d fd6a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800ec94:	f504 68ad 	add.w	r8, r4, #1384	@ 0x568
    bleach_lose.invalidate();
 800ec98:	4650      	mov	r0, sl
 800ec9a:	f00d fd65 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800ec9e:	4640      	mov	r0, r8
 800eca0:	f00d fd62 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    if (playerWon) {
 800eca4:	b3cf      	cbz	r7, 800ed1a <_ZN20SakuraGameScreenView7endGameEb+0x152>
        // LED signal for character unlock
        for (int i = 0; i < 8; i++) {
            toggleLED();
 800eca6:	f7ff fbbd 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecaa:	f7ff fbbb 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecae:	f7ff fbb9 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecb2:	f7ff fbb7 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecb6:	f7ff fbb5 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecba:	f7ff fbb3 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecbe:	f7ff fbb1 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecc2:	f7ff fbaf 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        naruto_win.setVisible(true);
        bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
        win.setVisible(true);

        // FORCE REFRESH ONLY NEEDED SPRITES
        naruto_win.invalidate();
 800ecc6:	4658      	mov	r0, fp
 800ecc8:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800eccc:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800ecd0:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
 800ecd4:	f00d fd48 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_lose.invalidate();
 800ecd8:	4650      	mov	r0, sl
 800ecda:	f00d fd45 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        win.invalidate();
 800ecde:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800ece2:	f00d fd41 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

        // LED blink rapidly for victory
        for (int i = 0; i < 6; i++) {
            toggleLED();
 800ece6:	f7ff fb9d 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecea:	f7ff fb9b 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecee:	f7ff fb99 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecf2:	f7ff fb97 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecf6:	f7ff fb95 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800ecfa:	f7ff fb93 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        application().gotoBackUpScreenScreenNoTransition();
        return;
    }

    // ===== CHỈ KHI PLAYER THẮNG MỚI CÓ AUTO RETURN TIMER =====
    autoReturnTimer = 0;
 800ecfe:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = true;
 800ed02:	f884 6a9c 	strb.w	r6, [r4, #2716]	@ 0xa9c

    // Debug: LED signal that timer has started (chỉ khi player thắng)
    toggleLED();
 800ed06:	f7ff fb8d 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800ed0a:	f7ff fb8b 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800ed0e:	f7ff fb89 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

    // Ensure gameEnded = true is set
    gameEnded = true;
 800ed12:	f884 6a69 	strb.w	r6, [r4, #2665]	@ 0xa69
}
 800ed16:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        naruto_lose.invalidate();
 800ed1a:	4648      	mov	r0, r9
 800ed1c:	f884 66ed 	strb.w	r6, [r4, #1773]	@ 0x6ed
 800ed20:	f884 658d 	strb.w	r6, [r4, #1421]	@ 0x58d
 800ed24:	f884 68d1 	strb.w	r6, [r4, #2257]	@ 0x8d1
 800ed28:	f00d fd1e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        bleach_win.invalidate();
 800ed2c:	4640      	mov	r0, r8
 800ed2e:	f00d fd1b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        gameover.invalidate();
 800ed32:	f604 00ac 	addw	r0, r4, #2220	@ 0x8ac
 800ed36:	f00d fd17 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 800ed3a:	4632      	mov	r2, r6
 800ed3c:	4808      	ldr	r0, [pc, #32]	@ (800ed60 <_ZN20SakuraGameScreenView7endGameEb+0x198>)
 800ed3e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800ed42:	f001 ff0b 	bl	8010b5c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800ed46:	463a      	mov	r2, r7
 800ed48:	4805      	ldr	r0, [pc, #20]	@ (800ed60 <_ZN20SakuraGameScreenView7endGameEb+0x198>)
 800ed4a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800ed4e:	f001 ff05 	bl	8010b5c <HAL_GPIO_WritePin>
    virtual ~SakuraGameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ed52:	f00c fb57 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800ed56:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
        application().gotoBackUpScreenScreenNoTransition();
 800ed5a:	f7f5 b909 	b.w	8003f70 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
 800ed5e:	bf00      	nop
 800ed60:	40021800 	.word	0x40021800

0800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>:
{
 800ed64:	b538      	push	{r3, r4, r5, lr}
 800ed66:	4604      	mov	r4, r0
    hideAllPlayerHPWidgets();
 800ed68:	f7ff fe7f 	bl	800ea6a <_ZN20SakuraGameScreenView22hideAllPlayerHPWidgetsEv>
    int roundedHP = (playerHP / 10) * 10;
 800ed6c:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
    if (playerHP == 0 || roundedHP == 0) {
 800ed70:	2b09      	cmp	r3, #9
 800ed72:	dc15      	bgt.n	800eda0 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x3c>
 800ed74:	2301      	movs	r3, #1
 800ed76:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
        BITMAP_HP_0_ID.invalidate();
 800ed7a:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800ed7e:	f00d fcf3 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ed82:	250a      	movs	r5, #10
            toggleLED();
 800ed84:	f7ff fb4e 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800ed88:	3d01      	subs	r5, #1
 800ed8a:	d1fb      	bne.n	800ed84 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x20>
        if (!gameEnded) {
 800ed8c:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800ed90:	2b00      	cmp	r3, #0
 800ed92:	d172      	bne.n	800ee7a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x116>
            endGame(false); // Player thua
 800ed94:	4620      	mov	r0, r4
 800ed96:	2100      	movs	r1, #0
}
 800ed98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(false); // Player thua
 800ed9c:	f7ff bf14 	b.w	800ebc8 <_ZN20SakuraGameScreenView7endGameEb>
    int roundedHP = (playerHP / 10) * 10;
 800eda0:	220a      	movs	r2, #10
 800eda2:	fb93 f1f2 	sdiv	r1, r3, r2
 800eda6:	4351      	muls	r1, r2
    switch (roundedHP) {
 800eda8:	f1a3 023c 	sub.w	r2, r3, #60	@ 0x3c
 800edac:	2a09      	cmp	r2, #9
 800edae:	d94a      	bls.n	800ee46 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xe2>
 800edb0:	293c      	cmp	r1, #60	@ 0x3c
 800edb2:	f04f 0201 	mov.w	r2, #1
 800edb6:	dc20      	bgt.n	800edfa <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x96>
 800edb8:	f1a3 001e 	sub.w	r0, r3, #30
 800edbc:	2809      	cmp	r0, #9
 800edbe:	d94d      	bls.n	800ee5c <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xf8>
 800edc0:	291e      	cmp	r1, #30
 800edc2:	dc0e      	bgt.n	800ede2 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x7e>
 800edc4:	f1a3 010a 	sub.w	r1, r3, #10
 800edc8:	2909      	cmp	r1, #9
 800edca:	d951      	bls.n	800ee70 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x10c>
 800edcc:	3b14      	subs	r3, #20
 800edce:	2b09      	cmp	r3, #9
 800edd0:	d949      	bls.n	800ee66 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x102>
 800edd2:	2301      	movs	r3, #1
 800edd4:	f884 3115 	strb.w	r3, [r4, #277]	@ 0x115
            BITMAP_HP_0_ID.invalidate();
 800edd8:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800eddc:	f00d fcc4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800ede0:	e7d4      	b.n	800ed8c <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x28>
    switch (roundedHP) {
 800ede2:	f1a3 0128 	sub.w	r1, r3, #40	@ 0x28
 800ede6:	2909      	cmp	r1, #9
 800ede8:	d933      	bls.n	800ee52 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xee>
 800edea:	3b32      	subs	r3, #50	@ 0x32
 800edec:	2b09      	cmp	r3, #9
 800edee:	d8f0      	bhi.n	800edd2 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x6e>
 800edf0:	f884 21c5 	strb.w	r2, [r4, #453]	@ 0x1c5
            BITMAP_HP_50_ID.invalidate();
 800edf4:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 800edf8:	e017      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800edfa:	f1a3 005a 	sub.w	r0, r3, #90	@ 0x5a
 800edfe:	2809      	cmp	r0, #9
 800ee00:	d917      	bls.n	800ee32 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xce>
 800ee02:	295a      	cmp	r1, #90	@ 0x5a
 800ee04:	dc0b      	bgt.n	800ee1e <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xba>
 800ee06:	f1a3 0146 	sub.w	r1, r3, #70	@ 0x46
 800ee0a:	2909      	cmp	r1, #9
 800ee0c:	d916      	bls.n	800ee3c <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xd8>
 800ee0e:	3b50      	subs	r3, #80	@ 0x50
 800ee10:	2b09      	cmp	r3, #9
 800ee12:	d8de      	bhi.n	800edd2 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x6e>
 800ee14:	f884 2249 	strb.w	r2, [r4, #585]	@ 0x249
            BITMAP_HP_80_ID.invalidate();
 800ee18:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800ee1c:	e005      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
    switch (roundedHP) {
 800ee1e:	2963      	cmp	r1, #99	@ 0x63
 800ee20:	ddd7      	ble.n	800edd2 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0x6e>
 800ee22:	f884 20bd 	strb.w	r2, [r4, #189]	@ 0xbd
            BITMAP_HP_100_ID.invalidate();
 800ee26:	f104 0098 	add.w	r0, r4, #152	@ 0x98
}
 800ee2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID.invalidate();
 800ee2e:	f00d bc9b 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ee32:	f884 2275 	strb.w	r2, [r4, #629]	@ 0x275
            BITMAP_HP_90_ID.invalidate();
 800ee36:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800ee3a:	e7f6      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800ee3c:	f884 221d 	strb.w	r2, [r4, #541]	@ 0x21d
            BITMAP_HP_70_ID.invalidate();
 800ee40:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800ee44:	e7f1      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800ee46:	2301      	movs	r3, #1
 800ee48:	f884 31f1 	strb.w	r3, [r4, #497]	@ 0x1f1
            BITMAP_HP_60_ID.invalidate();
 800ee4c:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800ee50:	e7eb      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800ee52:	f884 2199 	strb.w	r2, [r4, #409]	@ 0x199
            BITMAP_HP_40_ID.invalidate();
 800ee56:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800ee5a:	e7e6      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800ee5c:	f884 216d 	strb.w	r2, [r4, #365]	@ 0x16d
            BITMAP_HP_30_ID.invalidate();
 800ee60:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800ee64:	e7e1      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800ee66:	f884 2141 	strb.w	r2, [r4, #321]	@ 0x141
            BITMAP_HP_20_ID.invalidate();
 800ee6a:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800ee6e:	e7dc      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
 800ee70:	f884 20e9 	strb.w	r2, [r4, #233]	@ 0xe9
            BITMAP_HP_10_ID.invalidate();
 800ee74:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800ee78:	e7d7      	b.n	800ee2a <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv+0xc6>
}
 800ee7a:	bd38      	pop	{r3, r4, r5, pc}

0800ee7c <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi>:
    if (!isPlayer) return; // Boss không có power-up
 800ee7c:	b1c1      	cbz	r1, 800eeb0 <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi+0x34>
    switch (type) {
 800ee7e:	2a02      	cmp	r2, #2
 800ee80:	d002      	beq.n	800ee88 <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi+0xc>
 800ee82:	2a03      	cmp	r2, #3
 800ee84:	d00a      	beq.n	800ee9c <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi+0x20>
 800ee86:	4770      	bx	lr
            playerHP += 8; // TĂNG TỪ 5 LÊN 8
 800ee88:	f8d0 2a64 	ldr.w	r2, [r0, #2660]	@ 0xa64
 800ee8c:	3208      	adds	r2, #8
            if (playerHP > 100) playerHP = 100;
 800ee8e:	2a64      	cmp	r2, #100	@ 0x64
 800ee90:	bfa8      	it	ge
 800ee92:	2264      	movge	r2, #100	@ 0x64
 800ee94:	f8c0 2a64 	str.w	r2, [r0, #2660]	@ 0xa64
            updatePlayerHPDisplay();
 800ee98:	f7ff bf64 	b.w	800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
            playerChakraLevel += 20; // TĂNG TỪ 15 LÊN 20
 800ee9c:	f8d0 2a80 	ldr.w	r2, [r0, #2688]	@ 0xa80
 800eea0:	3214      	adds	r2, #20
            if (playerChakraLevel > 100) playerChakraLevel = 100;
 800eea2:	2a64      	cmp	r2, #100	@ 0x64
 800eea4:	bfa8      	it	ge
 800eea6:	2264      	movge	r2, #100	@ 0x64
 800eea8:	f8c0 2a80 	str.w	r2, [r0, #2688]	@ 0xa80
            updatePlayerChakraDisplay();
 800eeac:	f7ff be23 	b.w	800eaf6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
}
 800eeb0:	4770      	bx	lr

0800eeb2 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv>:
{
 800eeb2:	b510      	push	{r4, lr}
 800eeb4:	4604      	mov	r4, r0
        toggleLED();
 800eeb6:	f7ff fab5 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800eeba:	f7ff fab3 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800eebe:	f7ff fab1 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    int playerRoll = generateRandomNumber(1, 100);
 800eec2:	2264      	movs	r2, #100	@ 0x64
 800eec4:	2101      	movs	r1, #1
 800eec6:	4620      	mov	r0, r4
 800eec8:	f7ff fb08 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    if (playerRoll >= 1 && playerRoll <= 30) {
 800eecc:	1e43      	subs	r3, r0, #1
 800eece:	2b1d      	cmp	r3, #29
 800eed0:	d915      	bls.n	800eefe <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x4c>
    } else if (playerRoll >= 31 && playerRoll <= 55) {
 800eed2:	f1a0 031f 	sub.w	r3, r0, #31
 800eed6:	2b18      	cmp	r3, #24
 800eed8:	d913      	bls.n	800ef02 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x50>
    } else if (playerRoll >= 56 && playerRoll <= 80) {
 800eeda:	3838      	subs	r0, #56	@ 0x38
        newPlayerPowerUp = 2; // 25% - Heal (ENHANCED)
 800eedc:	2818      	cmp	r0, #24
 800eede:	bf8c      	ite	hi
 800eee0:	2203      	movhi	r2, #3
 800eee2:	2202      	movls	r2, #2
    playerPowerUpActive = true;
 800eee4:	2101      	movs	r1, #1
    applyInstantPowerUp(true, playerPowerUpType);
 800eee6:	4620      	mov	r0, r4
    playerPowerUpType = newPlayerPowerUp;
 800eee8:	f8c4 2aa4 	str.w	r2, [r4, #2724]	@ 0xaa4
    playerPowerUpActive = true;
 800eeec:	f884 1aac 	strb.w	r1, [r4, #2732]	@ 0xaac
    applyInstantPowerUp(true, playerPowerUpType);
 800eef0:	f7ff ffc4 	bl	800ee7c <_ZN20SakuraGameScreenView19applyInstantPowerUpEbi>
    updatePlayerPowerUpDisplay();
 800eef4:	4620      	mov	r0, r4
}
 800eef6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updatePlayerPowerUpDisplay();
 800eefa:	f7ff bcd9 	b.w	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
        newPlayerPowerUp = 4; // 30% - Shield
 800eefe:	2204      	movs	r2, #4
 800ef00:	e7f0      	b.n	800eee4 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x32>
        newPlayerPowerUp = 1; // 25% - Double Damage
 800ef02:	460a      	mov	r2, r1
 800ef04:	e7ee      	b.n	800eee4 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv+0x32>

0800ef06 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0>:
        turnCounter++;
 800ef06:	f8d0 3aa0 	ldr.w	r3, [r0, #2720]	@ 0xaa0
void SakuraGameScreenView::checkTurnComplete()
 800ef0a:	b510      	push	{r4, lr}
        turnCounter++;
 800ef0c:	3301      	adds	r3, #1
void SakuraGameScreenView::checkTurnComplete()
 800ef0e:	4604      	mov	r4, r0
        turnCounter++;
 800ef10:	f8c0 3aa0 	str.w	r3, [r0, #2720]	@ 0xaa0
        toggleLED();
 800ef14:	f7ff fa86 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        if (!playerSpecialUsed && !aiSpecialUsed) {
 800ef18:	f894 3a8a 	ldrb.w	r3, [r4, #2698]	@ 0xa8a
 800ef1c:	b963      	cbnz	r3, 800ef38 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x32>
 800ef1e:	f894 3a8b 	ldrb.w	r3, [r4, #2699]	@ 0xa8b
 800ef22:	b94b      	cbnz	r3, 800ef38 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x32>
            int powerUpChance = generateRandomNumber(1, 100);
 800ef24:	2264      	movs	r2, #100	@ 0x64
 800ef26:	2101      	movs	r1, #1
 800ef28:	4620      	mov	r0, r4
 800ef2a:	f7ff fad7 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
            if (powerUpChance <= 25) {
 800ef2e:	2819      	cmp	r0, #25
 800ef30:	dc02      	bgt.n	800ef38 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x32>
                givePlayerPowerUp(); // Chỉ player nhận power-up
 800ef32:	4620      	mov	r0, r4
 800ef34:	f7ff ffbd 	bl	800eeb2 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv>
        if (playerPowerUpActive && (playerPowerUpType == 2 || playerPowerUpType == 3 || playerPowerUpType == 4)) {
 800ef38:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800ef3c:	b163      	cbz	r3, 800ef58 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x52>
 800ef3e:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800ef42:	3b02      	subs	r3, #2
 800ef44:	2b02      	cmp	r3, #2
 800ef46:	d807      	bhi.n	800ef58 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0+0x52>
        playerPowerUpActive = false;
 800ef48:	2300      	movs	r3, #0
 800ef4a:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800ef4e:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800ef52:	4620      	mov	r0, r4
 800ef54:	f7ff fcac 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
        playerActionDone = false;
 800ef58:	2300      	movs	r3, #0
 800ef5a:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
        playerSpecialUsed = false;
 800ef5e:	f8a4 3a8a 	strh.w	r3, [r4, #2698]	@ 0xa8a
}
 800ef62:	bd10      	pop	{r4, pc}

0800ef64 <_ZN20SakuraGameScreenView17checkTurnCompleteEv>:
    if (playerActionDone && aiActionDone) {
 800ef64:	f890 2aae 	ldrb.w	r2, [r0, #2734]	@ 0xaae
 800ef68:	b122      	cbz	r2, 800ef74 <_ZN20SakuraGameScreenView17checkTurnCompleteEv+0x10>
 800ef6a:	f890 3aaf 	ldrb.w	r3, [r0, #2735]	@ 0xaaf
 800ef6e:	b10b      	cbz	r3, 800ef74 <_ZN20SakuraGameScreenView17checkTurnCompleteEv+0x10>
 800ef70:	f7ff bfc9 	b.w	800ef06 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0>
}
 800ef74:	4770      	bx	lr

0800ef76 <_ZN20SakuraGameScreenView12playerDefendEv>:
{
 800ef76:	b570      	push	{r4, r5, r6, lr}
 800ef78:	4604      	mov	r4, r0
 800ef7a:	2601      	movs	r6, #1
 800ef7c:	2500      	movs	r5, #0
    resetNarutoState();
 800ef7e:	f7ff fd12 	bl	800e9a6 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
    naruto_def.invalidate();
 800ef82:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800ef86:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800ef8a:	f884 6745 	strb.w	r6, [r4, #1861]	@ 0x745
 800ef8e:	f00d fbeb 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800ef92:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800ef96:	f00d fbe7 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800ef9a:	2207      	movs	r2, #7
 800ef9c:	2103      	movs	r1, #3
    playerDefending = true;
 800ef9e:	f884 6a88 	strb.w	r6, [r4, #2696]	@ 0xa88
    int healAmount = generateRandomNumber(3, 7); // TĂNG TỪ 2-5 LÊN 3-7
 800efa2:	4620      	mov	r0, r4
 800efa4:	f7ff fa9a 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    playerHP += healAmount;
 800efa8:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800efac:	4403      	add	r3, r0
    if (playerHP > 100) playerHP = 100;
 800efae:	2b64      	cmp	r3, #100	@ 0x64
 800efb0:	bfa8      	it	ge
 800efb2:	2364      	movge	r3, #100	@ 0x64
 800efb4:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    playerChakraLevel += generateRandomNumber(10, 18); // TĂNG TỪ 8-15 LÊN 10-18
 800efb8:	2212      	movs	r2, #18
 800efba:	210a      	movs	r1, #10
 800efbc:	4620      	mov	r0, r4
 800efbe:	f7ff fa8d 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800efc2:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800efc6:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800efc8:	2b64      	cmp	r3, #100	@ 0x64
 800efca:	bfa8      	it	ge
 800efcc:	2364      	movge	r3, #100	@ 0x64
 800efce:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (playerPowerUpActive && playerPowerUpType == 1) {
 800efd2:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800efd6:	b153      	cbz	r3, 800efee <_ZN20SakuraGameScreenView12playerDefendEv+0x78>
 800efd8:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800efdc:	42b3      	cmp	r3, r6
 800efde:	d106      	bne.n	800efee <_ZN20SakuraGameScreenView12playerDefendEv+0x78>
        playerPowerUpActive = false;
 800efe0:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800efe4:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800efe8:	4620      	mov	r0, r4
 800efea:	f7ff fc61 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800efee:	4620      	mov	r0, r4
 800eff0:	f7ff feb8 	bl	800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800eff4:	4620      	mov	r0, r4
 800eff6:	f7ff fd7e 	bl	800eaf6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800effa:	f7ff fa13 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800effe:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800f000:	2200      	movs	r2, #0
    playerActionDone = true;
 800f002:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800f006:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800f00a:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800f00e:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800f012:	bd70      	pop	{r4, r5, r6, pc}

0800f014 <_ZN20SakuraGameScreenView13playerSpecialEv>:
{
 800f014:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded || playerChakraLevel < 100) return;
 800f016:	f890 5a69 	ldrb.w	r5, [r0, #2665]	@ 0xa69
{
 800f01a:	4604      	mov	r4, r0
    if (gameEnded || playerChakraLevel < 100) return;
 800f01c:	2d00      	cmp	r5, #0
 800f01e:	d156      	bne.n	800f0ce <_ZN20SakuraGameScreenView13playerSpecialEv+0xba>
 800f020:	f8d0 3a80 	ldr.w	r3, [r0, #2688]	@ 0xa80
 800f024:	2b63      	cmp	r3, #99	@ 0x63
 800f026:	dd52      	ble.n	800f0ce <_ZN20SakuraGameScreenView13playerSpecialEv+0xba>
 800f028:	2601      	movs	r6, #1
    resetNarutoState();
 800f02a:	f7ff fcbc 	bl	800e9a6 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
    naruto_spe.invalidate();
 800f02e:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
 800f032:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800f036:	f884 6719 	strb.w	r6, [r4, #1817]	@ 0x719
 800f03a:	f00d fb95 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800f03e:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800f042:	f00d fb91 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    playerHP = 100; // Full heal
 800f046:	2364      	movs	r3, #100	@ 0x64
 800f048:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    if (!playerPowerUpActive) {
 800f04c:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800f050:	bbf3      	cbnz	r3, 800f0d0 <_ZN20SakuraGameScreenView13playerSpecialEv+0xbc>
        playerPowerUpType = 4; // Set shield
 800f052:	2304      	movs	r3, #4
 800f054:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        playerPowerUpActive = true;
 800f058:	f884 6aac 	strb.w	r6, [r4, #2732]	@ 0xaac
        updatePlayerPowerUpDisplay();
 800f05c:	4620      	mov	r0, r4
 800f05e:	f7ff fc27 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    playerChakraLevel = 0;
 800f062:	2300      	movs	r3, #0
 800f064:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    updatePlayerHPDisplay();
 800f068:	4620      	mov	r0, r4
 800f06a:	f7ff fe7b 	bl	800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updatePlayerChakraDisplay();
 800f06e:	4620      	mov	r0, r4
 800f070:	f7ff fd41 	bl	800eaf6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    updatePlayerPowerUpDisplay(); // Đảm bảo shield được hiển thị
 800f074:	4620      	mov	r0, r4
 800f076:	f7ff fc1b 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
        toggleLED(); // 8 LED blinks để báo hiệu healing + shield
 800f07a:	f7ff f9d3 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f07e:	f7ff f9d1 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f082:	f7ff f9cf 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f086:	f7ff f9cd 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f08a:	f7ff f9cb 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f08e:	f7ff f9c9 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f092:	f7ff f9c7 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f096:	f7ff f9c5 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800f09a:	2301      	movs	r3, #1
 800f09c:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = true; // Đánh dấu đã dùng special (không có power-up generation)
 800f0a0:	f884 3a8a 	strb.w	r3, [r4, #2698]	@ 0xa8a
    if (playerPowerUpActive && playerPowerUpType == 4) {
 800f0a4:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
 800f0a8:	b14b      	cbz	r3, 800f0be <_ZN20SakuraGameScreenView13playerSpecialEv+0xaa>
 800f0aa:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800f0ae:	2b04      	cmp	r3, #4
 800f0b0:	d105      	bne.n	800f0be <_ZN20SakuraGameScreenView13playerSpecialEv+0xaa>
            toggleLED(); // 3 LED blinks thêm để confirm shield
 800f0b2:	f7ff f9b7 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f0b6:	f7ff f9b5 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800f0ba:	f7ff f9b3 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800f0be:	f7ff f9b1 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    resetTimer = 0;
 800f0c2:	2300      	movs	r3, #0
 800f0c4:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800f0c8:	2301      	movs	r3, #1
 800f0ca:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800f0ce:	bd70      	pop	{r4, r5, r6, pc}
    } else if (playerPowerUpActive && playerPowerUpType != 4) {
 800f0d0:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800f0d4:	2b04      	cmp	r3, #4
 800f0d6:	d0c4      	beq.n	800f062 <_ZN20SakuraGameScreenView13playerSpecialEv+0x4e>
        playerPowerUpActive = false;
 800f0d8:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800f0dc:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800f0e0:	4620      	mov	r0, r4
 800f0e2:	f7ff fbe5 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
 800f0e6:	e7b4      	b.n	800f052 <_ZN20SakuraGameScreenView13playerSpecialEv+0x3e>

0800f0e8 <_ZN20SakuraGameScreenView8aiAttackEv>:
{
 800f0e8:	b570      	push	{r4, r5, r6, lr}
    if (gameEnded) return;
 800f0ea:	f890 6a69 	ldrb.w	r6, [r0, #2665]	@ 0xa69
{
 800f0ee:	4604      	mov	r4, r0
    if (gameEnded) return;
 800f0f0:	2e00      	cmp	r6, #0
 800f0f2:	d157      	bne.n	800f1a4 <_ZN20SakuraGameScreenView8aiAttackEv+0xbc>
    resetBleachState();
 800f0f4:	f7ff fc88 	bl	800ea08 <_ZN20SakuraGameScreenView16resetBleachStateEv>
 800f0f8:	2301      	movs	r3, #1
 800f0fa:	f884 363d 	strb.w	r3, [r4, #1597]	@ 0x63d
    bleach_atk.invalidate();
 800f0fe:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800f102:	f884 6669 	strb.w	r6, [r4, #1641]	@ 0x669
 800f106:	f00d fb2f 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800f10a:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800f10e:	f00d fb2b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800f112:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
 800f116:	2b03      	cmp	r3, #3
 800f118:	d045      	beq.n	800f1a6 <_ZN20SakuraGameScreenView8aiAttackEv+0xbe>
 800f11a:	2b04      	cmp	r3, #4
 800f11c:	d046      	beq.n	800f1ac <_ZN20SakuraGameScreenView8aiAttackEv+0xc4>
 800f11e:	2b02      	cmp	r3, #2
            baseDamage = generateRandomNumber(4, 10);
 800f120:	bf19      	ittee	ne
 800f122:	220a      	movne	r2, #10
 800f124:	2104      	movne	r1, #4
            baseDamage = generateRandomNumber(6, 12);
 800f126:	220c      	moveq	r2, #12
 800f128:	2106      	moveq	r1, #6
            baseDamage = generateRandomNumber(10, 18);
 800f12a:	4620      	mov	r0, r4
 800f12c:	f7ff f9d6 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800f130:	f894 3aac 	ldrb.w	r3, [r4, #2732]	@ 0xaac
            baseDamage = generateRandomNumber(10, 18);
 800f134:	4605      	mov	r5, r0
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800f136:	b11b      	cbz	r3, 800f140 <_ZN20SakuraGameScreenView8aiAttackEv+0x58>
 800f138:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800f13c:	2a04      	cmp	r2, #4
 800f13e:	d038      	beq.n	800f1b2 <_ZN20SakuraGameScreenView8aiAttackEv+0xca>
    int actualDamage = calculateDamage(baseDamage, playerDefending, false, playerHasShield);
 800f140:	f894 3a88 	ldrb.w	r3, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800f144:	b3c3      	cbz	r3, 800f1b8 <_ZN20SakuraGameScreenView8aiAttackEv+0xd0>
        if (finalDamage < 1) finalDamage = 1;
 800f146:	2d01      	cmp	r5, #1
 800f148:	dd38      	ble.n	800f1bc <_ZN20SakuraGameScreenView8aiAttackEv+0xd4>
        finalDamage = finalDamage / 2;
 800f14a:	106d      	asrs	r5, r5, #1
    playerHP -= actualDamage;
 800f14c:	f8d4 3a64 	ldr.w	r3, [r4, #2660]	@ 0xa64
 800f150:	1b5b      	subs	r3, r3, r5
    if (playerHP < 0) playerHP = 0;
 800f152:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f156:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    int chakraGain = generateRandomNumber(4, 8); // GIẢM TỪ 8-15 XUỐNG 4-8
 800f15a:	2208      	movs	r2, #8
 800f15c:	2104      	movs	r1, #4
 800f15e:	4620      	mov	r0, r4
 800f160:	f7ff f9bc 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    aiChakraLevel += chakraGain;
 800f164:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800f168:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800f16a:	2b64      	cmp	r3, #100	@ 0x64
 800f16c:	bfa8      	it	ge
 800f16e:	2364      	movge	r3, #100	@ 0x64
 800f170:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800f174:	b13e      	cbz	r6, 800f186 <_ZN20SakuraGameScreenView8aiAttackEv+0x9e>
 800f176:	b935      	cbnz	r5, 800f186 <_ZN20SakuraGameScreenView8aiAttackEv+0x9e>
        playerPowerUpActive = false;
 800f178:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800f17c:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800f180:	4620      	mov	r0, r4
 800f182:	f7ff fb95 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updatePlayerHPDisplay();
 800f186:	4620      	mov	r0, r4
 800f188:	f7ff fdec 	bl	800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updateAIChakraDisplay();
 800f18c:	4620      	mov	r0, r4
 800f18e:	f7ff fce6 	bl	800eb5e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    startAttackFireAnimation();
 800f192:	4620      	mov	r0, r4
 800f194:	f7ff f9df 	bl	800e556 <_ZN20SakuraGameScreenView24startAttackFireAnimationEv>
    resetTimer = 0;
 800f198:	2300      	movs	r3, #0
 800f19a:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800f19e:	2301      	movs	r3, #1
 800f1a0:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800f1a4:	bd70      	pop	{r4, r5, r6, pc}
            baseDamage = generateRandomNumber(8, 15);
 800f1a6:	220f      	movs	r2, #15
 800f1a8:	2108      	movs	r1, #8
 800f1aa:	e7be      	b.n	800f12a <_ZN20SakuraGameScreenView8aiAttackEv+0x42>
            baseDamage = generateRandomNumber(10, 18);
 800f1ac:	2212      	movs	r2, #18
 800f1ae:	210a      	movs	r1, #10
 800f1b0:	e7bb      	b.n	800f12a <_ZN20SakuraGameScreenView8aiAttackEv+0x42>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800f1b2:	461e      	mov	r6, r3
        return 0; // Shield chặn hoàn toàn
 800f1b4:	2500      	movs	r5, #0
 800f1b6:	e7c9      	b.n	800f14c <_ZN20SakuraGameScreenView8aiAttackEv+0x64>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800f1b8:	461e      	mov	r6, r3
 800f1ba:	e7c7      	b.n	800f14c <_ZN20SakuraGameScreenView8aiAttackEv+0x64>
        if (finalDamage < 1) finalDamage = 1;
 800f1bc:	2501      	movs	r5, #1
 800f1be:	e7c5      	b.n	800f14c <_ZN20SakuraGameScreenView8aiAttackEv+0x64>

0800f1c0 <_ZN20SakuraGameScreenView9aiSpecialEv>:
{
 800f1c0:	b538      	push	{r3, r4, r5, lr}
    if (rageMode && bossPhase >= 3) {
 800f1c2:	f890 3a78 	ldrb.w	r3, [r0, #2680]	@ 0xa78
{
 800f1c6:	4604      	mov	r4, r0
    if (rageMode && bossPhase >= 3) {
 800f1c8:	2b00      	cmp	r3, #0
 800f1ca:	d04a      	beq.n	800f262 <_ZN20SakuraGameScreenView9aiSpecialEv+0xa2>
 800f1cc:	f8d0 3a6c 	ldr.w	r3, [r0, #2668]	@ 0xa6c
    int requiredChakra = 100;
 800f1d0:	2b02      	cmp	r3, #2
 800f1d2:	bfcc      	ite	gt
 800f1d4:	2350      	movgt	r3, #80	@ 0x50
 800f1d6:	2364      	movle	r3, #100	@ 0x64
    if (aiChakraLevel < requiredChakra || gameEnded) {
 800f1d8:	f8d4 2a84 	ldr.w	r2, [r4, #2692]	@ 0xa84
 800f1dc:	429a      	cmp	r2, r3
 800f1de:	db3f      	blt.n	800f260 <_ZN20SakuraGameScreenView9aiSpecialEv+0xa0>
 800f1e0:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800f1e4:	bbe5      	cbnz	r5, 800f260 <_ZN20SakuraGameScreenView9aiSpecialEv+0xa0>
    resetBleachState();
 800f1e6:	4620      	mov	r0, r4
 800f1e8:	f7ff fc0e 	bl	800ea08 <_ZN20SakuraGameScreenView16resetBleachStateEv>
 800f1ec:	2301      	movs	r3, #1
 800f1ee:	f884 35e5 	strb.w	r3, [r4, #1509]	@ 0x5e5
    bleach_spe.invalidate();
 800f1f2:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800f1f6:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800f1fa:	f00d fab5 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800f1fe:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800f202:	f00d fab1 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800f206:	f894 2aac 	ldrb.w	r2, [r4, #2732]	@ 0xaac
 800f20a:	b11a      	cbz	r2, 800f214 <_ZN20SakuraGameScreenView9aiSpecialEv+0x54>
 800f20c:	f8d4 3aa4 	ldr.w	r3, [r4, #2724]	@ 0xaa4
 800f210:	2b04      	cmp	r3, #4
 800f212:	d003      	beq.n	800f21c <_ZN20SakuraGameScreenView9aiSpecialEv+0x5c>
    int actualDamage = calculateSpecialDamage(specialDamage, playerDefending, playerHasShield);
 800f214:	f894 2a88 	ldrb.w	r2, [r4, #2696]	@ 0xa88
    if (isDefending) {
 800f218:	bb2a      	cbnz	r2, 800f266 <_ZN20SakuraGameScreenView9aiSpecialEv+0xa6>
    int finalDamage = baseDamage; // baseDamage = 70 cố định
 800f21a:	2546      	movs	r5, #70	@ 0x46
    playerHP -= actualDamage;
 800f21c:	f8d4 1a64 	ldr.w	r1, [r4, #2660]	@ 0xa64
 800f220:	1b49      	subs	r1, r1, r5
    if (playerHP < 0) playerHP = 0;
 800f222:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 800f226:	f8c4 1a64 	str.w	r1, [r4, #2660]	@ 0xa64
    aiChakraLevel = 0;
 800f22a:	2100      	movs	r1, #0
 800f22c:	f8c4 1a84 	str.w	r1, [r4, #2692]	@ 0xa84
    if (playerHasShield && actualDamage == 0) {
 800f230:	b13a      	cbz	r2, 800f242 <_ZN20SakuraGameScreenView9aiSpecialEv+0x82>
 800f232:	b935      	cbnz	r5, 800f242 <_ZN20SakuraGameScreenView9aiSpecialEv+0x82>
        playerPowerUpActive = false;
 800f234:	f884 5aac 	strb.w	r5, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800f238:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800f23c:	4620      	mov	r0, r4
 800f23e:	f7ff fb37 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updateAIChakraDisplay();
 800f242:	4620      	mov	r0, r4
 800f244:	f7ff fc8b 	bl	800eb5e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    updatePlayerHPDisplay();
 800f248:	4620      	mov	r0, r4
 800f24a:	f7ff fd8b 	bl	800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    startSpecialFireAnimation();
 800f24e:	4620      	mov	r0, r4
 800f250:	f7ff f997 	bl	800e582 <_ZN20SakuraGameScreenView25startSpecialFireAnimationEv>
    resetTimer = 0;
 800f254:	2300      	movs	r3, #0
 800f256:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800f25a:	2301      	movs	r3, #1
 800f25c:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800f260:	bd38      	pop	{r3, r4, r5, pc}
    int requiredChakra = 100;
 800f262:	2364      	movs	r3, #100	@ 0x64
 800f264:	e7b8      	b.n	800f1d8 <_ZN20SakuraGameScreenView9aiSpecialEv+0x18>
    bool playerHasShield = (playerPowerUpActive && playerPowerUpType == 4);
 800f266:	2200      	movs	r2, #0
        finalDamage = finalDamage / 2; // 70 / 2 = 35
 800f268:	2523      	movs	r5, #35	@ 0x23
 800f26a:	e7d7      	b.n	800f21c <_ZN20SakuraGameScreenView9aiSpecialEv+0x5c>

0800f26c <_ZN20SakuraGameScreenView17activateEasterEggEv>:

void SakuraGameScreenView::activateEasterEgg()
{
 800f26c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Set flag
    easterEggActivated = true;
    easterEggTimer = 0;
 800f26e:	2500      	movs	r5, #0
    easterEggActivated = true;
 800f270:	2601      	movs	r6, #1
{
 800f272:	4604      	mov	r4, r0
    easterEggTimer = 0;
 800f274:	f8c0 5acc 	str.w	r5, [r0, #2764]	@ 0xacc
    gameEnded = true; // Kết thúc game ngay lập tức

    // FORCE STOP ALL ANIMATIONS
    fireAnimationActive = false;
 800f278:	f880 5ab4 	strb.w	r5, [r0, #2740]	@ 0xab4
    fireAnimationTimer = 0;
 800f27c:	f8c0 5ab0 	str.w	r5, [r0, #2736]	@ 0xab0
    resetTimerActive = false;
 800f280:	f880 5a94 	strb.w	r5, [r0, #2708]	@ 0xa94
    resetTimer = 0;
 800f284:	f8c0 5a90 	str.w	r5, [r0, #2704]	@ 0xa90
    easterEggActivated = true;
 800f288:	f880 6ac8 	strb.w	r6, [r0, #2760]	@ 0xac8
    gameEnded = true; // Kết thúc game ngay lập tức
 800f28c:	f880 6a69 	strb.w	r6, [r0, #2665]	@ 0xa69

    // ===== FORCE HIDE ALL FIRE EFFECTS =====
    hideAllFireEffects();
 800f290:	f7ff f94a 	bl	800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>

    // Hide menu actions immediately
    hideActionButtons();
 800f294:	4620      	mov	r0, r4
 800f296:	f7ff fa22 	bl	800e6de <_ZN20SakuraGameScreenView17hideActionButtonsEv>
 800f29a:	f884 584d 	strb.w	r5, [r4, #2125]	@ 0x84d
    btn_arrow1.setVisible(false);
    btn_arrow1.invalidate();
 800f29e:	f604 0028 	addw	r0, r4, #2088	@ 0x828
 800f2a2:	f00d fa61 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    // Hide all power-up icons
    hideAllPlayerPowerUps();
 800f2a6:	4620      	mov	r0, r4
 800f2a8:	f7ff fae5 	bl	800e876 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
 800f2ac:	f884 5695 	strb.w	r5, [r4, #1685]	@ 0x695
 800f2b0:	f884 5771 	strb.w	r5, [r4, #1905]	@ 0x771
 800f2b4:	f884 5745 	strb.w	r5, [r4, #1861]	@ 0x745
 800f2b8:	f884 5719 	strb.w	r5, [r4, #1817]	@ 0x719
 800f2bc:	f884 56ed 	strb.w	r5, [r4, #1773]	@ 0x6ed
 800f2c0:	f884 56c1 	strb.w	r5, [r4, #1729]	@ 0x6c1
 800f2c4:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800f2c8:	f884 563d 	strb.w	r5, [r4, #1597]	@ 0x63d
 800f2cc:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800f2d0:	f884 55e5 	strb.w	r5, [r4, #1509]	@ 0x5e5
 800f2d4:	f884 5561 	strb.w	r5, [r4, #1377]	@ 0x561
 800f2d8:	f884 558d 	strb.w	r5, [r4, #1421]	@ 0x58d
 800f2dc:	f884 58d1 	strb.w	r5, [r4, #2257]	@ 0x8d1
 800f2e0:	f884 58fd 	strb.w	r5, [r4, #2301]	@ 0x8fd
    // Hide game over screens first
    gameover.setVisible(false);
    win.setVisible(false);

    // ===== INVALIDATE ALL =====
    naruto.invalidate();
 800f2e4:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800f2e8:	f00d fa3e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_atk.invalidate();
 800f2ec:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800f2f0:	f00d fa3a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800f2f4:	f504 60e4 	add.w	r0, r4, #1824	@ 0x720
 800f2f8:	f00d fa36 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800f2fc:	f204 60f4 	addw	r0, r4, #1780	@ 0x6f4
    naruto_lose.invalidate();
    naruto_win.invalidate();
 800f300:	f204 679c 	addw	r7, r4, #1692	@ 0x69c
    naruto_spe.invalidate();
 800f304:	f00d fa30 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_lose.invalidate();
 800f308:	f504 60d9 	add.w	r0, r4, #1736	@ 0x6c8
 800f30c:	f00d fa2c 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_win.invalidate();
 800f310:	4638      	mov	r0, r7
 800f312:	f00d fa29 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    bleach.invalidate();
 800f316:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800f31a:	f00d fa25 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_atk.invalidate();
 800f31e:	f504 60c3 	add.w	r0, r4, #1560	@ 0x618
 800f322:	f00d fa21 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_def.invalidate();
 800f326:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
    bleach_spe.invalidate();  // QUAN TRỌNG
    bleach_lose.invalidate();
 800f32a:	f204 553c 	addw	r5, r4, #1340	@ 0x53c
    bleach_def.invalidate();
 800f32e:	f00d fa1b 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_spe.invalidate();  // QUAN TRỌNG
 800f332:	f504 60b8 	add.w	r0, r4, #1472	@ 0x5c0
 800f336:	f00d fa17 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800f33a:	4628      	mov	r0, r5
 800f33c:	f00d fa14 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_win.invalidate();
 800f340:	f504 60ad 	add.w	r0, r4, #1384	@ 0x568
 800f344:	f00d fa10 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f348:	f884 66c1 	strb.w	r6, [r4, #1729]	@ 0x6c1
 800f34c:	f884 6561 	strb.w	r6, [r4, #1377]	@ 0x561
 800f350:	f884 68fd 	strb.w	r6, [r4, #2301]	@ 0x8fd
    // ===== CHỈ HIỂN THỊ SPRITE CẦN THIẾT =====
    naruto_win.setVisible(true);
    bleach_lose.setVisible(true);  // CHỈ CON RỒNG NẰM
    win.setVisible(true);

    naruto_win.invalidate();
 800f354:	4638      	mov	r0, r7
 800f356:	f00d fa07 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach_lose.invalidate();
 800f35a:	4628      	mov	r0, r5
 800f35c:	f00d fa04 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    win.invalidate();
 800f360:	f604 00d8 	addw	r0, r4, #2264	@ 0x8d8
 800f364:	f00d fa00 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f368:	240f      	movs	r4, #15

    // ===== EASTER EGG LED PATTERN =====
    for (int i = 0; i < 15; i++) {
        toggleLED(); // 15 LED blinks để báo hiệu Easter Egg
 800f36a:	f7ff f85b 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    for (int i = 0; i < 15; i++) {
 800f36e:	3c01      	subs	r4, #1
 800f370:	d1fb      	bne.n	800f36a <_ZN20SakuraGameScreenView17activateEasterEggEv+0xfe>
    }

    // Debug: LED signal that Easter Egg activated
    toggleLED();
 800f372:	f7ff f857 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
 800f376:	f7ff f855 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    toggleLED();
}
 800f37a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    toggleLED();
 800f37e:	f7ff b851 	b.w	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>

0800f382 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>:

void SakuraGameScreenView::updateBossHPDisplay()
{
 800f382:	b538      	push	{r3, r4, r5, lr}
 800f384:	4604      	mov	r4, r0
    // Hide all boss HP widgets first
    hideAllBossHPWidgets();
 800f386:	f7ff fa01 	bl	800e78c <_ZN20SakuraGameScreenView20hideAllBossHPWidgetsEv>

    // ===== HỆ THỐNG HP ĐỐN GIẢN - GIỐNG GAMESCREEN NHƯNG BẮT ĐẦU TỪ 130 =====
    // Làm tròn xuống bội số 10 (giống GameScreenView)
    int roundedHP = (bossCurrentHP / 10) * 10;
 800f38a:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
    if (roundedHP < 0) roundedHP = 0;
    if (roundedHP > 130) roundedHP = 130;

    // DEBUG: Force test khi Boss HP = 0
    if (bossCurrentHP == 0 || roundedHP == 0) {
 800f38e:	2b09      	cmp	r3, #9
 800f390:	dc16      	bgt.n	800f3c0 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x3e>
 800f392:	2301      	movs	r3, #1
 800f394:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
        // FORCE HIỂN THỊ HP_0_ID_1
        BITMAP_HP_0_ID_1.setVisible(true);
        BITMAP_HP_0_ID_1.invalidate();
 800f398:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800f39c:	f00d f9e4 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f3a0:	250a      	movs	r5, #10

        // DEBUG: LED blink nhiều lần
        for (int i = 0; i < 10; i++) {
            toggleLED();
 800f3a2:	f7ff f83f 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        for (int i = 0; i < 10; i++) {
 800f3a6:	3d01      	subs	r5, #1
 800f3a8:	d1fb      	bne.n	800f3a2 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x20>
        }

        // FORCE END GAME
        if (!gameEnded) {
 800f3aa:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800f3ae:	2b00      	cmp	r3, #0
 800f3b0:	f040 808d 	bne.w	800f4ce <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x14c>
            endGame(true); // Player thắng
 800f3b4:	4620      	mov	r0, r4
 800f3b6:	2101      	movs	r1, #1
            if (!gameEnded) {
                endGame(true); // Player thắng
            }
            break;
    }
}
 800f3b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            endGame(true); // Player thắng
 800f3bc:	f7ff bc04 	b.w	800ebc8 <_ZN20SakuraGameScreenView7endGameEb>
    int roundedHP = (bossCurrentHP / 10) * 10;
 800f3c0:	220a      	movs	r2, #10
 800f3c2:	fb93 f1f2 	sdiv	r1, r3, r2
 800f3c6:	4351      	muls	r1, r2
    switch (roundedHP) {
 800f3c8:	f1a3 0246 	sub.w	r2, r3, #70	@ 0x46
 800f3cc:	2a09      	cmp	r2, #9
 800f3ce:	d95f      	bls.n	800f490 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x10e>
 800f3d0:	2946      	cmp	r1, #70	@ 0x46
 800f3d2:	f04f 0201 	mov.w	r2, #1
 800f3d6:	dc24      	bgt.n	800f422 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xa0>
 800f3d8:	f1a3 0028 	sub.w	r0, r3, #40	@ 0x28
 800f3dc:	2809      	cmp	r0, #9
 800f3de:	d962      	bls.n	800f4a6 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x124>
 800f3e0:	2928      	cmp	r1, #40	@ 0x28
 800f3e2:	dc12      	bgt.n	800f40a <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x88>
 800f3e4:	f1a3 0114 	sub.w	r1, r3, #20
 800f3e8:	2909      	cmp	r1, #9
 800f3ea:	d966      	bls.n	800f4ba <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x138>
 800f3ec:	f1a3 011e 	sub.w	r1, r3, #30
 800f3f0:	2909      	cmp	r1, #9
 800f3f2:	d95d      	bls.n	800f4b0 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x12e>
 800f3f4:	3b0a      	subs	r3, #10
 800f3f6:	2b09      	cmp	r3, #9
 800f3f8:	d964      	bls.n	800f4c4 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x142>
 800f3fa:	2301      	movs	r3, #1
 800f3fc:	f884 34dd 	strb.w	r3, [r4, #1245]	@ 0x4dd
            BITMAP_HP_0_ID_1.invalidate();
 800f400:	f504 6097 	add.w	r0, r4, #1208	@ 0x4b8
 800f404:	f00d f9b0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
            if (!gameEnded) {
 800f408:	e7cf      	b.n	800f3aa <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x28>
    switch (roundedHP) {
 800f40a:	f1a3 0132 	sub.w	r1, r3, #50	@ 0x32
 800f40e:	2909      	cmp	r1, #9
 800f410:	d944      	bls.n	800f49c <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x11a>
 800f412:	3b3c      	subs	r3, #60	@ 0x3c
 800f414:	2b09      	cmp	r3, #9
 800f416:	d8f0      	bhi.n	800f3fa <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x78>
 800f418:	f884 23d5 	strb.w	r2, [r4, #981]	@ 0x3d5
            BITMAP_HP_60_ID_1.invalidate();
 800f41c:	f504 706c 	add.w	r0, r4, #944	@ 0x3b0
 800f420:	e01e      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800f422:	f1a3 006e 	sub.w	r0, r3, #110	@ 0x6e
 800f426:	2809      	cmp	r0, #9
 800f428:	d923      	bls.n	800f472 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xf0>
 800f42a:	296e      	cmp	r1, #110	@ 0x6e
 800f42c:	dc0f      	bgt.n	800f44e <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xcc>
 800f42e:	f1a3 015a 	sub.w	r1, r3, #90	@ 0x5a
 800f432:	2909      	cmp	r1, #9
 800f434:	d927      	bls.n	800f486 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x104>
 800f436:	f1a3 0164 	sub.w	r1, r3, #100	@ 0x64
 800f43a:	2909      	cmp	r1, #9
 800f43c:	d91e      	bls.n	800f47c <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xfa>
 800f43e:	3b50      	subs	r3, #80	@ 0x50
 800f440:	2b09      	cmp	r3, #9
 800f442:	d8da      	bhi.n	800f3fa <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x78>
 800f444:	f884 237d 	strb.w	r2, [r4, #893]	@ 0x37d
            BITMAP_HP_80_ID_1.invalidate();
 800f448:	f504 7056 	add.w	r0, r4, #856	@ 0x358
 800f44c:	e008      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
    switch (roundedHP) {
 800f44e:	3b78      	subs	r3, #120	@ 0x78
 800f450:	2b09      	cmp	r3, #9
 800f452:	d909      	bls.n	800f468 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xe6>
 800f454:	2981      	cmp	r1, #129	@ 0x81
 800f456:	ddd0      	ble.n	800f3fa <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0x78>
 800f458:	f884 22a1 	strb.w	r2, [r4, #673]	@ 0x2a1
            BITMAP_HP_130_ID_1.invalidate();
 800f45c:	f504 701f 	add.w	r0, r4, #636	@ 0x27c
}
 800f460:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            BITMAP_HP_10_ID_1.invalidate();
 800f464:	f00d b980 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f468:	f884 22cd 	strb.w	r2, [r4, #717]	@ 0x2cd
            BITMAP_HP_120_ID_1.invalidate();
 800f46c:	f504 702a 	add.w	r0, r4, #680	@ 0x2a8
 800f470:	e7f6      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f472:	f884 22f9 	strb.w	r2, [r4, #761]	@ 0x2f9
            BITMAP_HP_110_ID_1.invalidate();
 800f476:	f504 7035 	add.w	r0, r4, #724	@ 0x2d4
 800f47a:	e7f1      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f47c:	f884 2325 	strb.w	r2, [r4, #805]	@ 0x325
            BITMAP_HP_100_ID_1.invalidate();
 800f480:	f504 7040 	add.w	r0, r4, #768	@ 0x300
 800f484:	e7ec      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f486:	f884 2351 	strb.w	r2, [r4, #849]	@ 0x351
            BITMAP_HP_90_ID_1.invalidate();
 800f48a:	f504 704b 	add.w	r0, r4, #812	@ 0x32c
 800f48e:	e7e7      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f490:	2301      	movs	r3, #1
 800f492:	f884 33a9 	strb.w	r3, [r4, #937]	@ 0x3a9
            BITMAP_HP_70_ID_1.invalidate();
 800f496:	f504 7061 	add.w	r0, r4, #900	@ 0x384
 800f49a:	e7e1      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f49c:	f884 2401 	strb.w	r2, [r4, #1025]	@ 0x401
            BITMAP_HP_50_ID_1.invalidate();
 800f4a0:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 800f4a4:	e7dc      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f4a6:	f884 242d 	strb.w	r2, [r4, #1069]	@ 0x42d
            BITMAP_HP_40_ID_1.invalidate();
 800f4aa:	f504 6081 	add.w	r0, r4, #1032	@ 0x408
 800f4ae:	e7d7      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f4b0:	f884 2459 	strb.w	r2, [r4, #1113]	@ 0x459
            BITMAP_HP_30_ID_1.invalidate();
 800f4b4:	f204 4034 	addw	r0, r4, #1076	@ 0x434
 800f4b8:	e7d2      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f4ba:	f884 2485 	strb.w	r2, [r4, #1157]	@ 0x485
            BITMAP_HP_20_ID_1.invalidate();
 800f4be:	f504 608c 	add.w	r0, r4, #1120	@ 0x460
 800f4c2:	e7cd      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
 800f4c4:	f884 24b1 	strb.w	r2, [r4, #1201]	@ 0x4b1
            BITMAP_HP_10_ID_1.invalidate();
 800f4c8:	f204 408c 	addw	r0, r4, #1164	@ 0x48c
 800f4cc:	e7c8      	b.n	800f460 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv+0xde>
}
 800f4ce:	bd38      	pop	{r3, r4, r5, pc}

0800f4d0 <_ZN20SakuraGameScreenView11setupScreenEv>:
{
 800f4d0:	b538      	push	{r3, r4, r5, lr}
 800f4d2:	4604      	mov	r4, r0
    SakuraGameScreenViewBase::setupScreen();
 800f4d4:	f7f9 f97f 	bl	80087d6 <_ZN24SakuraGameScreenViewBase11setupScreenEv>
    initGPIO();
 800f4d8:	4620      	mov	r0, r4
 800f4da:	f7fe ffd9 	bl	800e490 <_ZN20SakuraGameScreenView8initGPIOEv>
    randomSeed = HAL_GetTick();
 800f4de:	f001 f8dd 	bl	801069c <HAL_GetTick>
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800f4e2:	4930      	ldr	r1, [pc, #192]	@ (800f5a4 <_ZN20SakuraGameScreenView11setupScreenEv+0xd4>)
 800f4e4:	4b30      	ldr	r3, [pc, #192]	@ (800f5a8 <_ZN20SakuraGameScreenView11setupScreenEv+0xd8>)
    if (randomSeed == 0) randomSeed = 12345;
 800f4e6:	f243 0239 	movw	r2, #12345	@ 0x3039
 800f4ea:	2800      	cmp	r0, #0
 800f4ec:	bf18      	it	ne
 800f4ee:	4602      	movne	r2, r0
    randomSeed = (randomSeed * 1664525 + 1013904223);
 800f4f0:	fb01 3302 	mla	r3, r1, r2, r3
 800f4f4:	f8c4 3ac4 	str.w	r3, [r4, #2756]	@ 0xac4
    bossCurrentHP = bossMaxHP; // Boss bắt đầu với 130 HP
 800f4f8:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800f4fc:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
    playerHP = 100;
 800f500:	2364      	movs	r3, #100	@ 0x64
    menuOpen = false;
 800f502:	2500      	movs	r5, #0
    playerHP = 100;
 800f504:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
    bossPhase = 1;
 800f508:	2301      	movs	r3, #1
 800f50a:	f8c4 3a6c 	str.w	r3, [r4, #2668]	@ 0xa6c
    hideAllPlayerPowerUps();
 800f50e:	4620      	mov	r0, r4
    menuOpen = false;
 800f510:	f8a4 5a68 	strh.w	r5, [r4, #2664]	@ 0xa68
    rageMode = false;
 800f514:	f884 5a78 	strb.w	r5, [r4, #2680]	@ 0xa78
    turnCounter = 0;
 800f518:	f8c4 5aa0 	str.w	r5, [r4, #2720]	@ 0xaa0
    playerPowerUpType = 0;
 800f51c:	f8c4 5aa4 	str.w	r5, [r4, #2724]	@ 0xaa4
    aiPowerUpType = 0; // Boss không có power-up
 800f520:	f8c4 5aa8 	str.w	r5, [r4, #2728]	@ 0xaa8
    playerPowerUpActive = false;
 800f524:	f8c4 5aac 	str.w	r5, [r4, #2732]	@ 0xaac
    rageModeTimer = 0;
 800f528:	f8c4 5a7c 	str.w	r5, [r4, #2684]	@ 0xa7c
    playerChakraLevel = 0;
 800f52c:	f8c4 5a80 	str.w	r5, [r4, #2688]	@ 0xa80
    aiChakraLevel = 0;
 800f530:	f8c4 5a84 	str.w	r5, [r4, #2692]	@ 0xa84
    playerDefending = false;
 800f534:	f8c4 5a88 	str.w	r5, [r4, #2696]	@ 0xa88
    aiPersonality = 0; // 3 = Adaptive Boss Mode
 800f538:	f8c4 5a8c 	str.w	r5, [r4, #2700]	@ 0xa8c
    resetTimer = 0;
 800f53c:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
    resetTimerActive = false;
 800f540:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
    autoReturnTimer = 0;
 800f544:	f8c4 5a98 	str.w	r5, [r4, #2712]	@ 0xa98
    autoReturnTimerActive = false;
 800f548:	f884 5a9c 	strb.w	r5, [r4, #2716]	@ 0xa9c
    hideAllPlayerPowerUps();
 800f54c:	f7ff f993 	bl	800e876 <_ZN20SakuraGameScreenView21hideAllPlayerPowerUpsEv>
    hideAllAIPowerUps(); // Boss không có power-up nhưng vẫn hide để đảm bảo
 800f550:	4620      	mov	r0, r4
 800f552:	f7ff fa0b 	bl	800e96c <_ZN20SakuraGameScreenView17hideAllAIPowerUpsEv>
    updatePlayerHPDisplay();
 800f556:	4620      	mov	r0, r4
 800f558:	f7ff fc04 	bl	800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm mới cho boss
 800f55c:	4620      	mov	r0, r4
 800f55e:	f7ff ff10 	bl	800f382 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800f562:	4620      	mov	r0, r4
 800f564:	f7ff fac7 	bl	800eaf6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    updateAIChakraDisplay();
 800f568:	4620      	mov	r0, r4
 800f56a:	f7ff faf8 	bl	800eb5e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    resetNarutoState();
 800f56e:	4620      	mov	r0, r4
 800f570:	f7ff fa19 	bl	800e9a6 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
    resetBleachState();
 800f574:	4620      	mov	r0, r4
 800f576:	f7ff fa47 	bl	800ea08 <_ZN20SakuraGameScreenView16resetBleachStateEv>
    hideAllFireEffects();
 800f57a:	4620      	mov	r0, r4
    fireAnimationTimer = 0;
 800f57c:	f8c4 5ab0 	str.w	r5, [r4, #2736]	@ 0xab0
    fireAnimationActive = false;
 800f580:	f884 5ab4 	strb.w	r5, [r4, #2740]	@ 0xab4
    fireAnimationState = 0;
 800f584:	f8c4 5ab8 	str.w	r5, [r4, #2744]	@ 0xab8
    fireLoopCounter = 0;
 800f588:	f8c4 5abc 	str.w	r5, [r4, #2748]	@ 0xabc
    specialFireToggle = false;
 800f58c:	f884 5ac0 	strb.w	r5, [r4, #2752]	@ 0xac0
    hideAllFireEffects();
 800f590:	f7fe ffca 	bl	800e528 <_ZN20SakuraGameScreenView18hideAllFireEffectsEv>
    forceBossHPVisible();
 800f594:	4620      	mov	r0, r4
 800f596:	f7ff f952 	bl	800e83e <_ZN20SakuraGameScreenView18forceBossHPVisibleEv>
    easterEggActivated = false;
 800f59a:	f884 5ac8 	strb.w	r5, [r4, #2760]	@ 0xac8
        easterEggTimer = 0;
 800f59e:	f8c4 5acc 	str.w	r5, [r4, #2764]	@ 0xacc
}
 800f5a2:	bd38      	pop	{r3, r4, r5, pc}
 800f5a4:	0019660d 	.word	0x0019660d
 800f5a8:	3c6ef35f 	.word	0x3c6ef35f

0800f5ac <_ZN20SakuraGameScreenView15handleTickEventEv>:
{
 800f5ac:	b538      	push	{r3, r4, r5, lr}
    if (frameCounter < 10 && !gameEnded) {
 800f5ae:	4d39      	ldr	r5, [pc, #228]	@ (800f694 <_ZN20SakuraGameScreenView15handleTickEventEv+0xe8>)
 800f5b0:	682b      	ldr	r3, [r5, #0]
 800f5b2:	2b09      	cmp	r3, #9
{
 800f5b4:	4604      	mov	r4, r0
    if (frameCounter < 10 && !gameEnded) {
 800f5b6:	dc0f      	bgt.n	800f5d8 <_ZN20SakuraGameScreenView15handleTickEventEv+0x2c>
 800f5b8:	f890 2a69 	ldrb.w	r2, [r0, #2665]	@ 0xa69
 800f5bc:	b962      	cbnz	r2, 800f5d8 <_ZN20SakuraGameScreenView15handleTickEventEv+0x2c>
        frameCounter++;
 800f5be:	3301      	adds	r3, #1
 800f5c0:	602b      	str	r3, [r5, #0]
        updateBossHPDisplay();
 800f5c2:	f7ff fede 	bl	800f382 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
        if (frameCounter == 5) {
 800f5c6:	682b      	ldr	r3, [r5, #0]
 800f5c8:	2b05      	cmp	r3, #5
 800f5ca:	d105      	bne.n	800f5d8 <_ZN20SakuraGameScreenView15handleTickEventEv+0x2c>
            toggleLED();
 800f5cc:	f7fe ff2a 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            toggleLED();
 800f5d0:	f7fe ff28 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            toggleLED();
 800f5d4:	f7fe ff26 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    if (easterEggActivated) {
 800f5d8:	f894 2ac8 	ldrb.w	r2, [r4, #2760]	@ 0xac8
 800f5dc:	b1a2      	cbz	r2, 800f608 <_ZN20SakuraGameScreenView15handleTickEventEv+0x5c>
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800f5de:	f8d4 3acc 	ldr.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800f5e2:	f640 32b7 	movw	r2, #2999	@ 0xbb7
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800f5e6:	3310      	adds	r3, #16
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800f5e8:	4293      	cmp	r3, r2
        easterEggTimer += 16; // TouchGFX tick ~16ms
 800f5ea:	f8c4 3acc 	str.w	r3, [r4, #2764]	@ 0xacc
        if (easterEggTimer >= EASTER_EGG_WIN_TIME) {
 800f5ee:	dd4f      	ble.n	800f690 <_ZN20SakuraGameScreenView15handleTickEventEv+0xe4>
            HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800f5f0:	4829      	ldr	r0, [pc, #164]	@ (800f698 <_ZN20SakuraGameScreenView15handleTickEventEv+0xec>)
 800f5f2:	2200      	movs	r2, #0
 800f5f4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800f5f8:	f001 fab0 	bl	8010b5c <HAL_GPIO_WritePin>
 800f5fc:	f00b ff02 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800f600:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            application().gotoCharacter1ScreenNoTransition();
 800f604:	f7f4 bd24 	b.w	8004050 <_ZN23FrontendApplicationBase32gotoCharacter1ScreenNoTransitionEv>
    if (!gameEnded) {
 800f608:	f894 5a69 	ldrb.w	r5, [r4, #2665]	@ 0xa69
 800f60c:	bb4d      	cbnz	r5, 800f662 <_ZN20SakuraGameScreenView15handleTickEventEv+0xb6>
        if (resetTimerActive) {
 800f60e:	f894 3a94 	ldrb.w	r3, [r4, #2708]	@ 0xa94
 800f612:	b1cb      	cbz	r3, 800f648 <_ZN20SakuraGameScreenView15handleTickEventEv+0x9c>
            resetTimer += 16;
 800f614:	f8d4 3a90 	ldr.w	r3, [r4, #2704]	@ 0xa90
 800f618:	3310      	adds	r3, #16
            if (resetTimer >= RESET_TIME_MS) {
 800f61a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
            resetTimer += 16;
 800f61e:	f8c4 3a90 	str.w	r3, [r4, #2704]	@ 0xa90
            if (resetTimer >= RESET_TIME_MS) {
 800f622:	db11      	blt.n	800f648 <_ZN20SakuraGameScreenView15handleTickEventEv+0x9c>
                resetNarutoState();
 800f624:	4620      	mov	r0, r4
 800f626:	f7ff f9be 	bl	800e9a6 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
                resetBleachState();
 800f62a:	4620      	mov	r0, r4
 800f62c:	f7ff f9ec 	bl	800ea08 <_ZN20SakuraGameScreenView16resetBleachStateEv>
                if (!fireAnimationActive) {
 800f630:	f894 3ab4 	ldrb.w	r3, [r4, #2740]	@ 0xab4
                resetTimerActive = false;
 800f634:	f884 5a94 	strb.w	r5, [r4, #2708]	@ 0xa94
                resetTimer = 0;
 800f638:	f8c4 5a90 	str.w	r5, [r4, #2704]	@ 0xa90
                playerDefending = false;
 800f63c:	f8a4 5a88 	strh.w	r5, [r4, #2696]	@ 0xa88
                if (!fireAnimationActive) {
 800f640:	b913      	cbnz	r3, 800f648 <_ZN20SakuraGameScreenView15handleTickEventEv+0x9c>
                    checkTurnComplete();
 800f642:	4620      	mov	r0, r4
 800f644:	f7ff fc8e 	bl	800ef64 <_ZN20SakuraGameScreenView17checkTurnCompleteEv>
        if (rageMode) {
 800f648:	f894 3a78 	ldrb.w	r3, [r4, #2680]	@ 0xa78
 800f64c:	b123      	cbz	r3, 800f658 <_ZN20SakuraGameScreenView15handleTickEventEv+0xac>
            rageModeTimer += 16;
 800f64e:	f8d4 3a7c 	ldr.w	r3, [r4, #2684]	@ 0xa7c
 800f652:	3310      	adds	r3, #16
 800f654:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
        updateFireAnimation();
 800f658:	4620      	mov	r0, r4
}
 800f65a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        updateFireAnimation();
 800f65e:	f7fe bfb1 	b.w	800e5c4 <_ZN20SakuraGameScreenView19updateFireAnimationEv>
        if (autoReturnTimerActive) {
 800f662:	f894 3a9c 	ldrb.w	r3, [r4, #2716]	@ 0xa9c
 800f666:	b19b      	cbz	r3, 800f690 <_ZN20SakuraGameScreenView15handleTickEventEv+0xe4>
            autoReturnTimer += 16;
 800f668:	f8d4 3a98 	ldr.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800f66c:	f241 716f 	movw	r1, #5999	@ 0x176f
            autoReturnTimer += 16;
 800f670:	3310      	adds	r3, #16
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800f672:	428b      	cmp	r3, r1
            autoReturnTimer += 16;
 800f674:	f8c4 3a98 	str.w	r3, [r4, #2712]	@ 0xa98
            if (autoReturnTimer >= AUTO_RETURN_TIME_MS) {
 800f678:	dd0a      	ble.n	800f690 <_ZN20SakuraGameScreenView15handleTickEventEv+0xe4>
                HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800f67a:	4807      	ldr	r0, [pc, #28]	@ (800f698 <_ZN20SakuraGameScreenView15handleTickEventEv+0xec>)
 800f67c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800f680:	f001 fa6c 	bl	8010b5c <HAL_GPIO_WritePin>
 800f684:	f00b febe 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
}
 800f688:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
                application().gotoBackUpScreenScreenNoTransition();
 800f68c:	f7f4 bc70 	b.w	8003f70 <_ZN23FrontendApplicationBase34gotoBackUpScreenScreenNoTransitionEv>
}
 800f690:	bd38      	pop	{r3, r4, r5, pc}
 800f692:	bf00      	nop
 800f694:	20002b78 	.word	0x20002b78
 800f698:	40021800 	.word	0x40021800

0800f69c <_ZN20SakuraGameScreenView12playerAttackEv>:
{
 800f69c:	b570      	push	{r4, r5, r6, lr}
 800f69e:	4604      	mov	r4, r0
    resetNarutoState();
 800f6a0:	f7ff f981 	bl	800e9a6 <_ZN20SakuraGameScreenView16resetNarutoStateEv>
 800f6a4:	2300      	movs	r3, #0
 800f6a6:	f884 3695 	strb.w	r3, [r4, #1685]	@ 0x695
 800f6aa:	2301      	movs	r3, #1
 800f6ac:	f884 3771 	strb.w	r3, [r4, #1905]	@ 0x771
    naruto_atk.invalidate();
 800f6b0:	f204 704c 	addw	r0, r4, #1868	@ 0x74c
 800f6b4:	f00d f858 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800f6b8:	f504 60ce 	add.w	r0, r4, #1648	@ 0x670
 800f6bc:	f00d f854 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    int baseDamage = generateRandomNumber(3, 8);
 800f6c0:	2208      	movs	r2, #8
 800f6c2:	2103      	movs	r1, #3
 800f6c4:	4620      	mov	r0, r4
 800f6c6:	f7fe ff09 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800f6ca:	f894 5aac 	ldrb.w	r5, [r4, #2732]	@ 0xaac
 800f6ce:	f894 6a89 	ldrb.w	r6, [r4, #2697]	@ 0xa89
    int baseDamage = generateRandomNumber(3, 8);
 800f6d2:	4603      	mov	r3, r0
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800f6d4:	2d00      	cmp	r5, #0
 800f6d6:	d041      	beq.n	800f75c <_ZN20SakuraGameScreenView12playerAttackEv+0xc0>
 800f6d8:	f8d4 2aa4 	ldr.w	r2, [r4, #2724]	@ 0xaa4
 800f6dc:	2a01      	cmp	r2, #1
 800f6de:	d13d      	bne.n	800f75c <_ZN20SakuraGameScreenView12playerAttackEv+0xc0>
        finalDamage = (int)(baseDamage * 2.5); // x2.5 như yêu cầu
 800f6e0:	f7f1 f852 	bl	8000788 <__aeabi_i2d>
 800f6e4:	4b1e      	ldr	r3, [pc, #120]	@ (800f760 <_ZN20SakuraGameScreenView12playerAttackEv+0xc4>)
 800f6e6:	2200      	movs	r2, #0
 800f6e8:	f7f0 fdd2 	bl	8000290 <__aeabi_dmul>
 800f6ec:	f7f1 f8b6 	bl	800085c <__aeabi_d2iz>
 800f6f0:	4603      	mov	r3, r0
    if (isDefending) {
 800f6f2:	b11e      	cbz	r6, 800f6fc <_ZN20SakuraGameScreenView12playerAttackEv+0x60>
        if (finalDamage < 1) finalDamage = 1;
 800f6f4:	2b01      	cmp	r3, #1
        finalDamage = finalDamage / 2;
 800f6f6:	bfcc      	ite	gt
 800f6f8:	105b      	asrgt	r3, r3, #1
        if (finalDamage < 1) finalDamage = 1;
 800f6fa:	2301      	movle	r3, #1
    bossCurrentHP -= actualDamage;
 800f6fc:	f8d4 2a74 	ldr.w	r2, [r4, #2676]	@ 0xa74
 800f700:	1ad2      	subs	r2, r2, r3
    if (bossCurrentHP < 0) bossCurrentHP = 0;
 800f702:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800f706:	f8c4 2a74 	str.w	r2, [r4, #2676]	@ 0xa74
    playerChakraLevel += generateRandomNumber(5, 10);
 800f70a:	2105      	movs	r1, #5
 800f70c:	220a      	movs	r2, #10
 800f70e:	4620      	mov	r0, r4
 800f710:	f7fe fee4 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f714:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800f718:	4403      	add	r3, r0
    if (playerChakraLevel > 100) playerChakraLevel = 100;
 800f71a:	2b64      	cmp	r3, #100	@ 0x64
 800f71c:	bfa8      	it	ge
 800f71e:	2364      	movge	r3, #100	@ 0x64
 800f720:	f8c4 3a80 	str.w	r3, [r4, #2688]	@ 0xa80
    if (hasDoubleAttack) {
 800f724:	b13d      	cbz	r5, 800f736 <_ZN20SakuraGameScreenView12playerAttackEv+0x9a>
        playerPowerUpActive = false;
 800f726:	2300      	movs	r3, #0
 800f728:	f884 3aac 	strb.w	r3, [r4, #2732]	@ 0xaac
        playerPowerUpType = 0;
 800f72c:	f8c4 3aa4 	str.w	r3, [r4, #2724]	@ 0xaa4
        updatePlayerPowerUpDisplay();
 800f730:	4620      	mov	r0, r4
 800f732:	f7ff f8bd 	bl	800e8b0 <_ZN20SakuraGameScreenView26updatePlayerPowerUpDisplayEv>
    updateBossHPDisplay(); // Sử dụng hàm boss mới
 800f736:	4620      	mov	r0, r4
 800f738:	f7ff fe23 	bl	800f382 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
    updatePlayerChakraDisplay();
 800f73c:	4620      	mov	r0, r4
 800f73e:	f7ff f9da 	bl	800eaf6 <_ZN20SakuraGameScreenView25updatePlayerChakraDisplayEv>
    toggleLED();
 800f742:	f7fe fe6f 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
    playerActionDone = true;
 800f746:	2301      	movs	r3, #1
    playerSpecialUsed = false;
 800f748:	2200      	movs	r2, #0
    playerActionDone = true;
 800f74a:	f884 3aae 	strb.w	r3, [r4, #2734]	@ 0xaae
    playerSpecialUsed = false;
 800f74e:	f884 2a8a 	strb.w	r2, [r4, #2698]	@ 0xa8a
    resetTimer = 0;
 800f752:	f8c4 2a90 	str.w	r2, [r4, #2704]	@ 0xa90
    resetTimerActive = true;
 800f756:	f884 3a94 	strb.w	r3, [r4, #2708]	@ 0xa94
}
 800f75a:	bd70      	pop	{r4, r5, r6, pc}
    bool hasDoubleAttack = (playerPowerUpActive && playerPowerUpType == 1);
 800f75c:	2500      	movs	r5, #0
 800f75e:	e7c8      	b.n	800f6f2 <_ZN20SakuraGameScreenView12playerAttackEv+0x56>
 800f760:	40040000 	.word	0x40040000

0800f764 <_ZN20SakuraGameScreenView8aiDefendEv>:
{
 800f764:	b538      	push	{r3, r4, r5, lr}
    if (gameEnded) return;
 800f766:	f890 5a69 	ldrb.w	r5, [r0, #2665]	@ 0xa69
{
 800f76a:	4604      	mov	r4, r0
    if (gameEnded) return;
 800f76c:	2d00      	cmp	r5, #0
 800f76e:	d140      	bne.n	800f7f2 <_ZN20SakuraGameScreenView8aiDefendEv+0x8e>
    resetBleachState();
 800f770:	f7ff f94a 	bl	800ea08 <_ZN20SakuraGameScreenView16resetBleachStateEv>
 800f774:	f884 5669 	strb.w	r5, [r4, #1641]	@ 0x669
 800f778:	2501      	movs	r5, #1
    bleach_def.invalidate();
 800f77a:	f204 50ec 	addw	r0, r4, #1516	@ 0x5ec
 800f77e:	f884 5611 	strb.w	r5, [r4, #1553]	@ 0x611
 800f782:	f00c fff1 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    bleach.invalidate();
 800f786:	f204 6044 	addw	r0, r4, #1604	@ 0x644
 800f78a:	f00c ffed 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    switch(bossPhase) {
 800f78e:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	@ 0xa6c
    aiDefending = true;
 800f792:	f884 5a89 	strb.w	r5, [r4, #2697]	@ 0xa89
    switch(bossPhase) {
 800f796:	2b03      	cmp	r3, #3
 800f798:	d02c      	beq.n	800f7f4 <_ZN20SakuraGameScreenView8aiDefendEv+0x90>
 800f79a:	2b04      	cmp	r3, #4
 800f79c:	d02d      	beq.n	800f7fa <_ZN20SakuraGameScreenView8aiDefendEv+0x96>
 800f79e:	2b02      	cmp	r3, #2
            healAmount = generateRandomNumber(2, 5);
 800f7a0:	bf19      	ittee	ne
 800f7a2:	2205      	movne	r2, #5
 800f7a4:	2102      	movne	r1, #2
            healAmount = generateRandomNumber(3, 6);
 800f7a6:	2206      	moveq	r2, #6
 800f7a8:	2103      	moveq	r1, #3
            healAmount = generateRandomNumber(5, 8);
 800f7aa:	4620      	mov	r0, r4
 800f7ac:	f7fe fe96 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    bossCurrentHP += healAmount;
 800f7b0:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800f7b4:	4418      	add	r0, r3
    if (bossCurrentHP > bossMaxHP) bossCurrentHP = bossMaxHP;
 800f7b6:	f8d4 3a70 	ldr.w	r3, [r4, #2672]	@ 0xa70
 800f7ba:	4298      	cmp	r0, r3
 800f7bc:	bfd4      	ite	le
 800f7be:	f8c4 0a74 	strle.w	r0, [r4, #2676]	@ 0xa74
 800f7c2:	f8c4 3a74 	strgt.w	r3, [r4, #2676]	@ 0xa74
    aiChakraLevel += generateRandomNumber(8, 12); // GIẢM TỪ 12-20 XUỐNG 8-12
 800f7c6:	220c      	movs	r2, #12
 800f7c8:	2108      	movs	r1, #8
 800f7ca:	4620      	mov	r0, r4
 800f7cc:	f7fe fe86 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f7d0:	f8d4 3a84 	ldr.w	r3, [r4, #2692]	@ 0xa84
 800f7d4:	4403      	add	r3, r0
    if (aiChakraLevel > 100) aiChakraLevel = 100;
 800f7d6:	2b64      	cmp	r3, #100	@ 0x64
 800f7d8:	bfa8      	it	ge
 800f7da:	2364      	movge	r3, #100	@ 0x64
 800f7dc:	f8c4 3a84 	str.w	r3, [r4, #2692]	@ 0xa84
    updateBossHPDisplay();
 800f7e0:	4620      	mov	r0, r4
 800f7e2:	f7ff fdce 	bl	800f382 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
    updateAIChakraDisplay();
 800f7e6:	4620      	mov	r0, r4
 800f7e8:	f7ff f9b9 	bl	800eb5e <_ZN20SakuraGameScreenView21updateAIChakraDisplayEv>
    aiActionDone = true;
 800f7ec:	2301      	movs	r3, #1
 800f7ee:	f884 3aaf 	strb.w	r3, [r4, #2735]	@ 0xaaf
}
 800f7f2:	bd38      	pop	{r3, r4, r5, pc}
            healAmount = generateRandomNumber(4, 7);
 800f7f4:	2207      	movs	r2, #7
 800f7f6:	2104      	movs	r1, #4
 800f7f8:	e7d7      	b.n	800f7aa <_ZN20SakuraGameScreenView8aiDefendEv+0x46>
            healAmount = generateRandomNumber(5, 8);
 800f7fa:	2208      	movs	r2, #8
 800f7fc:	2105      	movs	r1, #5
 800f7fe:	e7d4      	b.n	800f7aa <_ZN20SakuraGameScreenView8aiDefendEv+0x46>

0800f800 <_ZN20SakuraGameScreenView15performAIActionEv>:
	if (gameEnded || bossCurrentHP <= 0) {
 800f800:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
{
 800f804:	b570      	push	{r4, r5, r6, lr}
 800f806:	4605      	mov	r5, r0
	if (gameEnded || bossCurrentHP <= 0) {
 800f808:	2b00      	cmp	r3, #0
 800f80a:	f040 811f 	bne.w	800fa4c <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
 800f80e:	f8d0 3a74 	ldr.w	r3, [r0, #2676]	@ 0xa74
 800f812:	2b00      	cmp	r3, #0
 800f814:	f340 811a 	ble.w	800fa4c <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
    if (playerHP <= 0) {
 800f818:	f8d0 6a64 	ldr.w	r6, [r0, #2660]	@ 0xa64
 800f81c:	2e00      	cmp	r6, #0
 800f81e:	f340 8115 	ble.w	800fa4c <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
    if (aiPowerUpActive) {
 800f822:	f890 2aad 	ldrb.w	r2, [r0, #2733]	@ 0xaad
 800f826:	b99a      	cbnz	r2, 800f850 <_ZN20SakuraGameScreenView15performAIActionEv+0x50>
    	int aiHPPercent = (bossCurrentHP * 100) / bossMaxHP;
 800f828:	2264      	movs	r2, #100	@ 0x64
 800f82a:	4353      	muls	r3, r2
 800f82c:	f8d5 2a70 	ldr.w	r2, [r5, #2672]	@ 0xa70
 800f830:	fb93 f3f2 	sdiv	r3, r3, r2
        bool playerCanSpecial = (playerChakraLevel >= 100);
 800f834:	f8d5 2a80 	ldr.w	r2, [r5, #2688]	@ 0xa80
        switch(aiPersonality)
 800f838:	f8d5 1a8c 	ldr.w	r1, [r5, #2700]	@ 0xa8c
        int baseDefendBonus = 0;
 800f83c:	2a63      	cmp	r2, #99	@ 0x63
 800f83e:	bfcc      	ite	gt
 800f840:	2419      	movgt	r4, #25
 800f842:	2400      	movle	r4, #0
        switch(aiPersonality)
 800f844:	2903      	cmp	r1, #3
 800f846:	d813      	bhi.n	800f870 <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
 800f848:	e8df f001 	tbb	[pc, r1]
 800f84c:	c89c6329 	.word	0xc89c6329
        switch(aiPowerUpType) {
 800f850:	f8d0 1aa8 	ldr.w	r1, [r0, #2728]	@ 0xaa8
 800f854:	2901      	cmp	r1, #1
 800f856:	d010      	beq.n	800f87a <_ZN20SakuraGameScreenView15performAIActionEv+0x7a>
 800f858:	2904      	cmp	r1, #4
 800f85a:	d1e5      	bne.n	800f828 <_ZN20SakuraGameScreenView15performAIActionEv+0x28>
                if (aiChakraLevel >= 100) {
 800f85c:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800f860:	2b63      	cmp	r3, #99	@ 0x63
 800f862:	dd05      	ble.n	800f870 <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
                    if (generateRandomNumber(1, 100) <= 50) {
 800f864:	2264      	movs	r2, #100	@ 0x64
 800f866:	2101      	movs	r1, #1
                           if (generateRandomNumber(1, 100) <= 50) {
 800f868:	f7fe fe38 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f86c:	2832      	cmp	r0, #50	@ 0x32
 800f86e:	dd2a      	ble.n	800f8c6 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800f870:	4628      	mov	r0, r5
}
 800f872:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiAttack();
 800f876:	f7ff bc37 	b.w	800f0e8 <_ZN20SakuraGameScreenView8aiAttackEv>
                if (aiChakraLevel >= 100) {
 800f87a:	f8d0 3a84 	ldr.w	r3, [r0, #2692]	@ 0xa84
 800f87e:	2b63      	cmp	r3, #99	@ 0x63
                    int roll = generateRandomNumber(1, 100);
 800f880:	f04f 0264 	mov.w	r2, #100	@ 0x64
                if (aiChakraLevel >= 100) {
 800f884:	dd06      	ble.n	800f894 <_ZN20SakuraGameScreenView15performAIActionEv+0x94>
                    int roll = generateRandomNumber(1, 100);
 800f886:	f7fe fe29 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    if (roll <= 80) {
 800f88a:	2850      	cmp	r0, #80	@ 0x50
 800f88c:	ddf0      	ble.n	800f870 <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
                    } else if (roll <= 90) {
 800f88e:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 70) {
 800f890:	dd19      	ble.n	800f8c6 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
 800f892:	e096      	b.n	800f9c2 <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
                    if (generateRandomNumber(1, 100) <= 90) {
 800f894:	f7fe fe22 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f898:	285a      	cmp	r0, #90	@ 0x5a
                           if (generateRandomNumber(1, 100) <= 60) {
 800f89a:	dde9      	ble.n	800f870 <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
 800f89c:	e091      	b.n	800f9c2 <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
                if (aiChakraLevel >= 100) {
 800f89e:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800f8a2:	2a63      	cmp	r2, #99	@ 0x63
 800f8a4:	dd22      	ble.n	800f8ec <_ZN20SakuraGameScreenView15performAIActionEv+0xec>
                    if (aiHPPercent >= 80) {
 800f8a6:	2b4f      	cmp	r3, #79	@ 0x4f
 800f8a8:	dd17      	ble.n	800f8da <_ZN20SakuraGameScreenView15performAIActionEv+0xda>
                        defendChance = 50 + baseDefendBonus;
 800f8aa:	3432      	adds	r4, #50	@ 0x32
                    if (playerHPPercent <= 25) {
 800f8ac:	2e19      	cmp	r6, #25
                        defendChance -= 10;
 800f8ae:	bfd8      	it	le
 800f8b0:	3c0a      	suble	r4, #10
                    int roll = generateRandomNumber(1, 100);
 800f8b2:	2264      	movs	r2, #100	@ 0x64
 800f8b4:	2101      	movs	r1, #1
 800f8b6:	4628      	mov	r0, r5
 800f8b8:	f7fe fe10 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    if (defendChance > 70) defendChance = 70;
 800f8bc:	2c46      	cmp	r4, #70	@ 0x46
 800f8be:	bfa8      	it	ge
 800f8c0:	2446      	movge	r4, #70	@ 0x46
                    if (roll <= defendChance) {
 800f8c2:	4284      	cmp	r4, r0
 800f8c4:	da7d      	bge.n	800f9c2 <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800f8c6:	f8d5 3a84 	ldr.w	r3, [r5, #2692]	@ 0xa84
 800f8ca:	2b63      	cmp	r3, #99	@ 0x63
 800f8cc:	f340 80be 	ble.w	800fa4c <_ZN20SakuraGameScreenView15performAIActionEv+0x24c>
 800f8d0:	4628      	mov	r0, r5
}
 800f8d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0 && aiChakraLevel >= 100) aiSpecial();
 800f8d6:	f7ff bc73 	b.w	800f1c0 <_ZN20SakuraGameScreenView9aiSpecialEv>
                    } else if (aiHPPercent >= 60) {
 800f8da:	2b3b      	cmp	r3, #59	@ 0x3b
 800f8dc:	dd01      	ble.n	800f8e2 <_ZN20SakuraGameScreenView15performAIActionEv+0xe2>
                        defendChance = 40 + baseDefendBonus;
 800f8de:	3428      	adds	r4, #40	@ 0x28
                        specialChance = 60 - (baseDefendBonus / 2);
 800f8e0:	e7e4      	b.n	800f8ac <_ZN20SakuraGameScreenView15performAIActionEv+0xac>
                    } else if (aiHPPercent >= 30) {
 800f8e2:	2b1d      	cmp	r3, #29
                        defendChance = 30 + baseDefendBonus;
 800f8e4:	bfcc      	ite	gt
 800f8e6:	341e      	addgt	r4, #30
                        defendChance = 20 + baseDefendBonus;
 800f8e8:	3414      	addle	r4, #20
                        specialChance = 80 - (baseDefendBonus / 2);
 800f8ea:	e7df      	b.n	800f8ac <_ZN20SakuraGameScreenView15performAIActionEv+0xac>
                    if (aiHPPercent >= 70) {
 800f8ec:	2b45      	cmp	r3, #69	@ 0x45
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f8ee:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f8f2:	f04f 0101 	mov.w	r1, #1
 800f8f6:	4628      	mov	r0, r5
                    if (aiHPPercent >= 70) {
 800f8f8:	dd03      	ble.n	800f902 <_ZN20SakuraGameScreenView15performAIActionEv+0x102>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f8fa:	f7fe fdef 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 30 + baseDefendBonus;
 800f8fe:	341e      	adds	r4, #30
 800f900:	e004      	b.n	800f90c <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 40) {
 800f902:	2b27      	cmp	r3, #39	@ 0x27
 800f904:	ddf9      	ble.n	800f8fa <_ZN20SakuraGameScreenView15performAIActionEv+0xfa>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f906:	f7fe fde9 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 50 + baseDefendBonus;
 800f90a:	3432      	adds	r4, #50	@ 0x32
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f90c:	42a0      	cmp	r0, r4
                           if (generateRandomNumber(1, 100) <= 60) {
 800f90e:	dd58      	ble.n	800f9c2 <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
 800f910:	e7ae      	b.n	800f870 <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
                if (aiChakraLevel >= 100) {
 800f912:	f8d5 2a84 	ldr.w	r2, [r5, #2692]	@ 0xa84
 800f916:	2a63      	cmp	r2, #99	@ 0x63
 800f918:	dd17      	ble.n	800f94a <_ZN20SakuraGameScreenView15performAIActionEv+0x14a>
                    if (aiHPPercent >= 80) {
 800f91a:	2b4f      	cmp	r3, #79	@ 0x4f
 800f91c:	dd0c      	ble.n	800f938 <_ZN20SakuraGameScreenView15performAIActionEv+0x138>
                        defendChance = 70 + baseDefendBonus;
 800f91e:	3446      	adds	r4, #70	@ 0x46
                    if (playerHPPercent <= 20) {
 800f920:	2e14      	cmp	r6, #20
                        defendChance -= 5;
 800f922:	bfd8      	it	le
 800f924:	3c05      	suble	r4, #5
                    int roll = generateRandomNumber(1, 100);
 800f926:	2264      	movs	r2, #100	@ 0x64
 800f928:	2101      	movs	r1, #1
 800f92a:	4628      	mov	r0, r5
 800f92c:	f7fe fdd6 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    if (defendChance > 85) defendChance = 85;
 800f930:	2c55      	cmp	r4, #85	@ 0x55
 800f932:	bfa8      	it	ge
 800f934:	2455      	movge	r4, #85	@ 0x55
 800f936:	e7c4      	b.n	800f8c2 <_ZN20SakuraGameScreenView15performAIActionEv+0xc2>
                    } else if (aiHPPercent >= 50) {
 800f938:	2b31      	cmp	r3, #49	@ 0x31
 800f93a:	dd01      	ble.n	800f940 <_ZN20SakuraGameScreenView15performAIActionEv+0x140>
                        defendChance = 60 + baseDefendBonus;
 800f93c:	343c      	adds	r4, #60	@ 0x3c
                        specialChance = 40 - (baseDefendBonus / 2);
 800f93e:	e7ef      	b.n	800f920 <_ZN20SakuraGameScreenView15performAIActionEv+0x120>
                    } else if (aiHPPercent >= 25) {
 800f940:	2b18      	cmp	r3, #24
                        defendChance = 45 + baseDefendBonus;
 800f942:	bfcc      	ite	gt
 800f944:	342d      	addgt	r4, #45	@ 0x2d
                        defendChance = 30 + baseDefendBonus;
 800f946:	341e      	addle	r4, #30
                        specialChance = 70 - (baseDefendBonus / 2);
 800f948:	e7ea      	b.n	800f920 <_ZN20SakuraGameScreenView15performAIActionEv+0x120>
                    if (aiHPPercent >= 60) {
 800f94a:	2b3b      	cmp	r3, #59	@ 0x3b
 800f94c:	dd0b      	ble.n	800f966 <_ZN20SakuraGameScreenView15performAIActionEv+0x166>
                        int defendChance = 80 + baseDefendBonus;
 800f94e:	2c0f      	cmp	r4, #15
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f950:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f954:	f04f 0101 	mov.w	r1, #1
 800f958:	4628      	mov	r0, r5
                        int defendChance = 80 + baseDefendBonus;
 800f95a:	bfcc      	ite	gt
 800f95c:	245f      	movgt	r4, #95	@ 0x5f
 800f95e:	2450      	movle	r4, #80	@ 0x50
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f960:	f7fe fdbc 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f964:	e7d2      	b.n	800f90c <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                    } else if (aiHPPercent >= 30) {
 800f966:	2b1d      	cmp	r3, #29
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f968:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800f96c:	f04f 0101 	mov.w	r1, #1
 800f970:	4628      	mov	r0, r5
                    } else if (aiHPPercent >= 30) {
 800f972:	dd03      	ble.n	800f97c <_ZN20SakuraGameScreenView15performAIActionEv+0x17c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f974:	f7fe fdb2 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 65 + baseDefendBonus;
 800f978:	3441      	adds	r4, #65	@ 0x41
 800f97a:	e7c7      	b.n	800f90c <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f97c:	f7fe fdae 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 40 + baseDefendBonus;
 800f980:	3428      	adds	r4, #40	@ 0x28
 800f982:	e7c3      	b.n	800f90c <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                if (aiChakraLevel >= 100) {
 800f984:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800f988:	2963      	cmp	r1, #99	@ 0x63
 800f98a:	dd07      	ble.n	800f99c <_ZN20SakuraGameScreenView15performAIActionEv+0x19c>
                    int roll = generateRandomNumber(1, 100);
 800f98c:	2101      	movs	r1, #1
 800f98e:	2264      	movs	r2, #100	@ 0x64
 800f990:	4628      	mov	r0, r5
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800f992:	410c      	asrs	r4, r1
                    int roll = generateRandomNumber(1, 100);
 800f994:	f7fe fda2 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                    int defendChance = 45 + (baseDefendBonus / 2); // Ít sensitive hơn với player special
 800f998:	342d      	adds	r4, #45	@ 0x2d
 800f99a:	e792      	b.n	800f8c2 <_ZN20SakuraGameScreenView15performAIActionEv+0xc2>
                    if (aiHPPercent >= 70) {
 800f99c:	2b45      	cmp	r3, #69	@ 0x45
 800f99e:	dd07      	ble.n	800f9b0 <_ZN20SakuraGameScreenView15performAIActionEv+0x1b0>
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f9a0:	2101      	movs	r1, #1
 800f9a2:	2264      	movs	r2, #100	@ 0x64
 800f9a4:	4628      	mov	r0, r5
                        int defendChance = 60 + (baseDefendBonus / 2);
 800f9a6:	410c      	asrs	r4, r1
                        if (generateRandomNumber(1, 100) <= defendChance) {
 800f9a8:	f7fe fd98 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
                        int defendChance = 60 + (baseDefendBonus / 2);
 800f9ac:	343c      	adds	r4, #60	@ 0x3c
 800f9ae:	e7ad      	b.n	800f90c <_ZN20SakuraGameScreenView15performAIActionEv+0x10c>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800f9b0:	2a63      	cmp	r2, #99	@ 0x63
 800f9b2:	dc0b      	bgt.n	800f9cc <_ZN20SakuraGameScreenView15performAIActionEv+0x1cc>
                            action = generateRandomNumber(1, 2);
 800f9b4:	2202      	movs	r2, #2
 800f9b6:	2101      	movs	r1, #1
 800f9b8:	4628      	mov	r0, r5
 800f9ba:	f7fe fd8f 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
    switch(action)
 800f9be:	2802      	cmp	r0, #2
 800f9c0:	d13e      	bne.n	800fa40 <_ZN20SakuraGameScreenView15performAIActionEv+0x240>
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800f9c2:	4628      	mov	r0, r5
}
 800f9c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            if (!gameEnded && bossCurrentHP > 0) aiDefend();
 800f9c8:	f7ff becc 	b.w	800f764 <_ZN20SakuraGameScreenView8aiDefendEv>
                        if (playerCanSpecial && generateRandomNumber(1, 100) <= 30) {
 800f9cc:	2264      	movs	r2, #100	@ 0x64
 800f9ce:	2101      	movs	r1, #1
 800f9d0:	4628      	mov	r0, r5
 800f9d2:	f7fe fd83 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f9d6:	281e      	cmp	r0, #30
 800f9d8:	ddf3      	ble.n	800f9c2 <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
 800f9da:	e7eb      	b.n	800f9b4 <_ZN20SakuraGameScreenView15performAIActionEv+0x1b4>
                   if (aiChakraLevel >= 100) {
 800f9dc:	f8d5 1a84 	ldr.w	r1, [r5, #2692]	@ 0xa84
 800f9e0:	2963      	cmp	r1, #99	@ 0x63
 800f9e2:	dd15      	ble.n	800fa10 <_ZN20SakuraGameScreenView15performAIActionEv+0x210>
                       if (bossHPPercent <= 30) {
 800f9e4:	2b1e      	cmp	r3, #30
 800f9e6:	dc06      	bgt.n	800f9f6 <_ZN20SakuraGameScreenView15performAIActionEv+0x1f6>
                           if (generateRandomNumber(1, 100) <= 70) {
 800f9e8:	2264      	movs	r2, #100	@ 0x64
 800f9ea:	2101      	movs	r1, #1
 800f9ec:	4628      	mov	r0, r5
 800f9ee:	f7fe fd75 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800f9f2:	2846      	cmp	r0, #70	@ 0x46
 800f9f4:	e74c      	b.n	800f890 <_ZN20SakuraGameScreenView15performAIActionEv+0x90>
                       } else if (playerCanSpecial) {
 800f9f6:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 40) {
 800f9f8:	f04f 0101 	mov.w	r1, #1
 800f9fc:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800fa00:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800fa02:	f77f af31 	ble.w	800f868 <_ZN20SakuraGameScreenView15performAIActionEv+0x68>
                           if (generateRandomNumber(1, 100) <= 40) {
 800fa06:	f7fe fd69 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800fa0a:	2828      	cmp	r0, #40	@ 0x28
 800fa0c:	ddd9      	ble.n	800f9c2 <_ZN20SakuraGameScreenView15performAIActionEv+0x1c2>
 800fa0e:	e75a      	b.n	800f8c6 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
                       if (bossHPPercent <= 50) {
 800fa10:	2b32      	cmp	r3, #50	@ 0x32
 800fa12:	dc06      	bgt.n	800fa22 <_ZN20SakuraGameScreenView15performAIActionEv+0x222>
                           if (generateRandomNumber(1, 100) <= 70) {
 800fa14:	2264      	movs	r2, #100	@ 0x64
 800fa16:	2101      	movs	r1, #1
 800fa18:	4628      	mov	r0, r5
 800fa1a:	f7fe fd5f 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800fa1e:	2846      	cmp	r0, #70	@ 0x46
 800fa20:	e775      	b.n	800f90e <_ZN20SakuraGameScreenView15performAIActionEv+0x10e>
                       } else if (playerCanSpecial) {
 800fa22:	2a63      	cmp	r2, #99	@ 0x63
                           if (generateRandomNumber(1, 100) <= 60) {
 800fa24:	f04f 0101 	mov.w	r1, #1
 800fa28:	f04f 0264 	mov.w	r2, #100	@ 0x64
 800fa2c:	4628      	mov	r0, r5
                       } else if (playerCanSpecial) {
 800fa2e:	dd03      	ble.n	800fa38 <_ZN20SakuraGameScreenView15performAIActionEv+0x238>
                           if (generateRandomNumber(1, 100) <= 60) {
 800fa30:	f7fe fd54 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800fa34:	283c      	cmp	r0, #60	@ 0x3c
 800fa36:	e76a      	b.n	800f90e <_ZN20SakuraGameScreenView15performAIActionEv+0x10e>
                           if (generateRandomNumber(1, 100) <= 60) {
 800fa38:	f7fe fd50 	bl	800e4dc <_ZN20SakuraGameScreenView20generateRandomNumberEii>
 800fa3c:	283c      	cmp	r0, #60	@ 0x3c
 800fa3e:	e72c      	b.n	800f89a <_ZN20SakuraGameScreenView15performAIActionEv+0x9a>
    switch(action)
 800fa40:	2803      	cmp	r0, #3
 800fa42:	f43f af40 	beq.w	800f8c6 <_ZN20SakuraGameScreenView15performAIActionEv+0xc6>
 800fa46:	2801      	cmp	r0, #1
 800fa48:	f43f af12 	beq.w	800f870 <_ZN20SakuraGameScreenView15performAIActionEv+0x70>
}
 800fa4c:	bd70      	pop	{r4, r5, r6, pc}

0800fa4e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800fa4e:	b530      	push	{r4, r5, lr}
    if (evt.getType() == ClickEvent::PRESSED) {
 800fa50:	790b      	ldrb	r3, [r1, #4]
{
 800fa52:	b08b      	sub	sp, #44	@ 0x2c
 800fa54:	4604      	mov	r4, r0
 800fa56:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED) {
 800fa58:	2b00      	cmp	r3, #0
 800fa5a:	f040 812b 	bne.w	800fcb4 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
    	if (!gameEnded && !easterEggActivated) {
 800fa5e:	f890 3a69 	ldrb.w	r3, [r0, #2665]	@ 0xa69
        return clickX;
 800fa62:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800fa66:	b98b      	cbnz	r3, 800fa8c <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
 800fa68:	f890 1ac8 	ldrb.w	r1, [r0, #2760]	@ 0xac8
 800fa6c:	b971      	cbnz	r1, 800fa8c <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	                evt.getY() >= 62 && evt.getY() <= 234) {
 800fa6e:	f1a2 015e 	sub.w	r1, r2, #94	@ 0x5e
 800fa72:	b289      	uxth	r1, r1
 800fa74:	2992      	cmp	r1, #146	@ 0x92
 800fa76:	d809      	bhi.n	800fa8c <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x3e>
    	            if (evt.getX() >= 94 && evt.getX() <= 240 &&
 800fa78:	8929      	ldrh	r1, [r5, #8]
 800fa7a:	393e      	subs	r1, #62	@ 0x3e
 800fa7c:	b289      	uxth	r1, r1
 800fa7e:	29ac      	cmp	r1, #172	@ 0xac
 800fa80:	d818      	bhi.n	800fab4 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x66>
}
 800fa82:	b00b      	add	sp, #44	@ 0x2c
 800fa84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	                activateEasterEgg();
 800fa88:	f7ff bbf0 	b.w	800f26c <_ZN20SakuraGameScreenView17activateEasterEggEv>
        if (evt.getX() < 50 && evt.getY() < 50) {
 800fa8c:	2a31      	cmp	r2, #49	@ 0x31
 800fa8e:	dc11      	bgt.n	800fab4 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x66>
        return clickY;
 800fa90:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fa94:	2a31      	cmp	r2, #49	@ 0x31
 800fa96:	f300 8087 	bgt.w	800fba8 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x15a>
            bossCurrentHP -= 30;
 800fa9a:	f8d4 3a74 	ldr.w	r3, [r4, #2676]	@ 0xa74
 800fa9e:	3b1e      	subs	r3, #30
            if (bossCurrentHP < 0) bossCurrentHP = 0;
 800faa0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
            updateBossHPDisplay();
 800faa4:	4620      	mov	r0, r4
 800faa6:	f8c4 3a74 	str.w	r3, [r4, #2676]	@ 0xa74
}
 800faaa:	b00b      	add	sp, #44	@ 0x2c
 800faac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updateBossHPDisplay();
 800fab0:	f7ff bc67 	b.w	800f382 <_ZN20SakuraGameScreenView19updateBossHPDisplayEv>
        if (evt.getX() > 190 && evt.getY() < 50) {
 800fab4:	2abe      	cmp	r2, #190	@ 0xbe
 800fab6:	dc6a      	bgt.n	800fb8e <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x140>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800fab8:	3a65      	subs	r2, #101	@ 0x65
 800faba:	b292      	uxth	r2, r2
 800fabc:	2a26      	cmp	r2, #38	@ 0x26
 800fabe:	f240 808c 	bls.w	800fbda <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x18c>
        if (gameEnded) {
 800fac2:	2b00      	cmp	r3, #0
 800fac4:	d04f      	beq.n	800fb66 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x118>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fac6:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800faca:	4668      	mov	r0, sp
 800facc:	f00c fee8 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fad0:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fad4:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fad8:	4668      	mov	r0, sp
 800fada:	f7fb f80b 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fade:	2800      	cmp	r0, #0
 800fae0:	f040 80ef 	bne.w	800fcc2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fae4:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800fae8:	a802      	add	r0, sp, #8
 800faea:	f00c fed9 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800faee:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800faf2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800faf6:	a802      	add	r0, sp, #8
 800faf8:	f7fa fffc 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fafc:	2800      	cmp	r0, #0
 800fafe:	f040 80e0 	bne.w	800fcc2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fb02:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800fb06:	a804      	add	r0, sp, #16
 800fb08:	f00c feca 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fb0c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fb10:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fb14:	a804      	add	r0, sp, #16
 800fb16:	f7fa ffed 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fb1a:	2800      	cmp	r0, #0
 800fb1c:	f040 80d1 	bne.w	800fcc2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fb20:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800fb24:	a806      	add	r0, sp, #24
 800fb26:	f00c febb 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fb2a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fb2e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fb32:	a806      	add	r0, sp, #24
 800fb34:	f7fa ffde 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fb38:	2800      	cmp	r0, #0
 800fb3a:	f040 80c2 	bne.w	800fcc2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fb3e:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800fb42:	a808      	add	r0, sp, #32
 800fb44:	f00c feac 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fb48:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fb4c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fb50:	a808      	add	r0, sp, #32
 800fb52:	f7fa ffcf 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
                btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY()) ||
 800fb56:	2800      	cmp	r0, #0
 800fb58:	f040 80b3 	bne.w	800fcc2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
        if (!gameEnded) {
 800fb5c:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800fb60:	2b00      	cmp	r3, #0
 800fb62:	f040 80a7 	bne.w	800fcb4 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
            if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fb66:	f604 0128 	addw	r1, r4, #2088	@ 0x828
 800fb6a:	a808      	add	r0, sp, #32
 800fb6c:	f00c fe98 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fb70:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fb74:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fb78:	a808      	add	r0, sp, #32
 800fb7a:	f7fa ffbb 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800fb7e:	2800      	cmp	r0, #0
 800fb80:	d047      	beq.n	800fc12 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1c4>
                toggleActionMenu();
 800fb82:	4620      	mov	r0, r4
}
 800fb84:	b00b      	add	sp, #44	@ 0x2c
 800fb86:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleActionMenu();
 800fb8a:	f7fe bdf2 	b.w	800e772 <_ZN20SakuraGameScreenView16toggleActionMenuEv>
 800fb8e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
        if (evt.getX() > 190 && evt.getY() < 50) {
 800fb92:	2a31      	cmp	r2, #49	@ 0x31
 800fb94:	dc14      	bgt.n	800fbc0 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x172>
            playerHP = 0;
 800fb96:	2300      	movs	r3, #0
            updatePlayerHPDisplay();
 800fb98:	4620      	mov	r0, r4
            playerHP = 0;
 800fb9a:	f8c4 3a64 	str.w	r3, [r4, #2660]	@ 0xa64
}
 800fb9e:	b00b      	add	sp, #44	@ 0x2c
 800fba0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            updatePlayerHPDisplay();
 800fba4:	f7ff b8de 	b.w	800ed64 <_ZN20SakuraGameScreenView21updatePlayerHPDisplayEv>
        if (evt.getX() < 50 && evt.getY() > 270) {
 800fba8:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800fbac:	dd89      	ble.n	800fac2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x74>
                toggleLED();
 800fbae:	f7fe fc39 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
 800fbb2:	f7fe fc37 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
}
 800fbb6:	b00b      	add	sp, #44	@ 0x2c
 800fbb8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                toggleLED();
 800fbbc:	f7fe bc32 	b.w	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
        if (evt.getX() > 190 && evt.getY() > 270 && !gameEnded) {
 800fbc0:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800fbc4:	f77f af7d 	ble.w	800fac2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800fbc8:	2b00      	cmp	r3, #0
 800fbca:	f47f af7c 	bne.w	800fac6 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800fbce:	4620      	mov	r0, r4
}
 800fbd0:	b00b      	add	sp, #44	@ 0x2c
 800fbd2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            givePlayerPowerUp(); // Chỉ player nhận power-up
 800fbd6:	f7ff b96c 	b.w	800eeb2 <_ZN20SakuraGameScreenView17givePlayerPowerUpEv>
        if (evt.getX() > 100 && evt.getX() < 140 && evt.getY() > 270 && !gameEnded) {
 800fbda:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fbde:	f5b2 7f87 	cmp.w	r2, #270	@ 0x10e
 800fbe2:	f77f af6e 	ble.w	800fac2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x74>
 800fbe6:	2b00      	cmp	r3, #0
 800fbe8:	f47f af6d 	bne.w	800fac6 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x78>
            for (int i = 0; i < turnCounter + 1; i++) {
 800fbec:	461d      	mov	r5, r3
 800fbee:	f8d4 3aa0 	ldr.w	r3, [r4, #2720]	@ 0xaa0
 800fbf2:	42ab      	cmp	r3, r5
 800fbf4:	da09      	bge.n	800fc0a <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1bc>
            playerActionDone = true;
 800fbf6:	f240 1301 	movw	r3, #257	@ 0x101
 800fbfa:	4620      	mov	r0, r4
 800fbfc:	f8a4 3aae 	strh.w	r3, [r4, #2734]	@ 0xaae
}
 800fc00:	b00b      	add	sp, #44	@ 0x2c
 800fc02:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800fc06:	f7ff b97e 	b.w	800ef06 <_ZN20SakuraGameScreenView17checkTurnCompleteEv.part.0>
                toggleLED();
 800fc0a:	f7fe fc0b 	bl	800e424 <_ZN20SakuraGameScreenView9toggleLEDEv.constprop.0>
            for (int i = 0; i < turnCounter + 1; i++) {
 800fc0e:	3501      	adds	r5, #1
 800fc10:	e7ed      	b.n	800fbee <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1a0>
            if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fc12:	f204 71fc 	addw	r1, r4, #2044	@ 0x7fc
 800fc16:	a808      	add	r0, sp, #32
 800fc18:	f00c fe42 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc1c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fc20:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fc24:	a808      	add	r0, sp, #32
 800fc26:	f7fa ff65 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800fc2a:	2800      	cmp	r0, #0
 800fc2c:	d1a9      	bne.n	800fb82 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x134>
            if (menuOpen) {
 800fc2e:	f894 3a68 	ldrb.w	r3, [r4, #2664]	@ 0xa68
 800fc32:	2b00      	cmp	r3, #0
 800fc34:	d03e      	beq.n	800fcb4 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fc36:	f504 61ef 	add.w	r1, r4, #1912	@ 0x778
 800fc3a:	a808      	add	r0, sp, #32
 800fc3c:	f00c fe30 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc40:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fc44:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fc48:	a808      	add	r0, sp, #32
 800fc4a:	f7fa ff53 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800fc4e:	b158      	cbz	r0, 800fc68 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x21a>
                    playerAttack();
 800fc50:	4620      	mov	r0, r4
 800fc52:	f7ff fd23 	bl	800f69c <_ZN20SakuraGameScreenView12playerAttackEv>
                    if (!gameEnded) performAIAction();
 800fc56:	f894 3a69 	ldrb.w	r3, [r4, #2665]	@ 0xa69
 800fc5a:	bb93      	cbnz	r3, 800fcc2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
 800fc5c:	4620      	mov	r0, r4
}
 800fc5e:	b00b      	add	sp, #44	@ 0x2c
 800fc60:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                    if (!gameEnded) performAIAction();
 800fc64:	f7ff bdcc 	b.w	800f800 <_ZN20SakuraGameScreenView15performAIActionEv>
                else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fc68:	f204 71a4 	addw	r1, r4, #1956	@ 0x7a4
 800fc6c:	a808      	add	r0, sp, #32
 800fc6e:	f00c fe17 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc72:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fc76:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fc7a:	a808      	add	r0, sp, #32
 800fc7c:	f7fa ff3a 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800fc80:	b118      	cbz	r0, 800fc8a <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x23c>
                    playerDefend();
 800fc82:	4620      	mov	r0, r4
 800fc84:	f7ff f977 	bl	800ef76 <_ZN20SakuraGameScreenView12playerDefendEv>
                    if (!gameEnded) performAIAction();
 800fc88:	e7e5      	b.n	800fc56 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x208>
                else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 800fc8a:	f504 61fa 	add.w	r1, r4, #2000	@ 0x7d0
 800fc8e:	a808      	add	r0, sp, #32
 800fc90:	f00c fe06 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc94:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800fc98:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fc9c:	a808      	add	r0, sp, #32
 800fc9e:	f7fa ff29 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 800fca2:	b138      	cbz	r0, 800fcb4 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x266>
                    if (playerChakraLevel >= 100) {
 800fca4:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	@ 0xa80
 800fca8:	2b63      	cmp	r3, #99	@ 0x63
 800fcaa:	dd0a      	ble.n	800fcc2 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x274>
                        playerSpecial();
 800fcac:	4620      	mov	r0, r4
 800fcae:	f7ff f9b1 	bl	800f014 <_ZN20SakuraGameScreenView13playerSpecialEv>
                        if (!gameEnded) performAIAction();
 800fcb2:	e7d0      	b.n	800fc56 <_ZN20SakuraGameScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x208>
    SakuraGameScreenViewBase::handleClickEvent(evt);
 800fcb4:	4629      	mov	r1, r5
 800fcb6:	4620      	mov	r0, r4
}
 800fcb8:	b00b      	add	sp, #44	@ 0x2c
 800fcba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    SakuraGameScreenViewBase::handleClickEvent(evt);
 800fcbe:	f00d bab1 	b.w	801d224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
}
 800fcc2:	b00b      	add	sp, #44	@ 0x2c
 800fcc4:	bd30      	pop	{r4, r5, pc}

0800fcc6 <_ZN20SakuraGameScreenView15handleDragEventERKN8touchgfx9DragEventE>:
    SakuraGameScreenViewBase::handleDragEvent(evt);
 800fcc6:	f00d bb01 	b.w	801d2cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>

0800fcca <_ZN25SakuraMainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SakuraMainScreenPresenter() {}
 800fcca:	4770      	bx	lr

0800fccc <_ZThn4_N25SakuraMainScreenPresenterD1Ev>:
 800fccc:	3804      	subs	r0, #4
 800fcce:	4770      	bx	lr

0800fcd0 <_ZN25SakuraMainScreenPresenter10deactivateEv>:
}

void SakuraMainScreenPresenter::activate()
{

}
 800fcd0:	4770      	bx	lr

0800fcd2 <_ZN25SakuraMainScreenPresenterD0Ev>:
 800fcd2:	b510      	push	{r4, lr}
 800fcd4:	2110      	movs	r1, #16
 800fcd6:	4604      	mov	r4, r0
 800fcd8:	f01d fe25 	bl	802d926 <_ZdlPvj>
 800fcdc:	4620      	mov	r0, r4
 800fcde:	bd10      	pop	{r4, pc}

0800fce0 <_ZThn4_N25SakuraMainScreenPresenterD0Ev>:
 800fce0:	f1a0 0004 	sub.w	r0, r0, #4
 800fce4:	e7f5      	b.n	800fcd2 <_ZN25SakuraMainScreenPresenterD0Ev>
	...

0800fce8 <_ZN25SakuraMainScreenPresenterC1ER20SakuraMainScreenView>:
 800fce8:	2200      	movs	r2, #0
 800fcea:	6082      	str	r2, [r0, #8]
    : view(v)
 800fcec:	4a02      	ldr	r2, [pc, #8]	@ (800fcf8 <_ZN25SakuraMainScreenPresenterC1ER20SakuraMainScreenView+0x10>)
 800fcee:	6002      	str	r2, [r0, #0]
 800fcf0:	3218      	adds	r2, #24
 800fcf2:	6042      	str	r2, [r0, #4]
 800fcf4:	60c1      	str	r1, [r0, #12]
}
 800fcf6:	4770      	bx	lr
 800fcf8:	08032ff8 	.word	0x08032ff8

0800fcfc <_ZN20SakuraMainScreenView14tearDownScreenEv>:
}

void SakuraMainScreenView::tearDownScreen()
{
    SakuraMainScreenViewBase::tearDownScreen();
}
 800fcfc:	4770      	bx	lr
	...

0800fd00 <_ZN20SakuraMainScreenViewD1Ev>:

class SakuraMainScreenView : public SakuraMainScreenViewBase
{
public:
    SakuraMainScreenView();
    virtual ~SakuraMainScreenView() {}
 800fd00:	b510      	push	{r4, lr}
 800fd02:	4b03      	ldr	r3, [pc, #12]	@ (800fd10 <_ZN20SakuraMainScreenViewD1Ev+0x10>)
 800fd04:	6003      	str	r3, [r0, #0]
 800fd06:	4604      	mov	r4, r0
 800fd08:	f7f9 fd3f 	bl	800978a <_ZN24SakuraMainScreenViewBaseD1Ev>
 800fd0c:	4620      	mov	r0, r4
 800fd0e:	bd10      	pop	{r4, pc}
 800fd10:	08033020 	.word	0x08033020

0800fd14 <_ZN20SakuraMainScreenViewD0Ev>:
 800fd14:	b510      	push	{r4, lr}
 800fd16:	4604      	mov	r4, r0
 800fd18:	f7ff fff2 	bl	800fd00 <_ZN20SakuraMainScreenViewD1Ev>
 800fd1c:	4620      	mov	r0, r4
 800fd1e:	f44f 7130 	mov.w	r1, #704	@ 0x2c0
 800fd22:	f01d fe00 	bl	802d926 <_ZdlPvj>
 800fd26:	4620      	mov	r0, r4
 800fd28:	bd10      	pop	{r4, pc}
	...

0800fd2c <_ZN20SakuraMainScreenViewC1Ev>:
SakuraMainScreenView::SakuraMainScreenView()
 800fd2c:	b510      	push	{r4, lr}
 800fd2e:	4604      	mov	r4, r0
 800fd30:	f7f9 fd74 	bl	800981c <_ZN24SakuraMainScreenViewBaseC1Ev>
 800fd34:	4b01      	ldr	r3, [pc, #4]	@ (800fd3c <_ZN20SakuraMainScreenViewC1Ev+0x10>)
 800fd36:	6023      	str	r3, [r4, #0]
}
 800fd38:	4620      	mov	r0, r4
 800fd3a:	bd10      	pop	{r4, pc}
 800fd3c:	08033020 	.word	0x08033020

0800fd40 <_ZN20SakuraMainScreenView11setupScreenEv>:
    SakuraMainScreenViewBase::setupScreen();
 800fd40:	f7f9 bd24 	b.w	800978c <_ZN24SakuraMainScreenViewBase11setupScreenEv>

0800fd44 <_ZN15SpongePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SpongePresenter() {}
 800fd44:	4770      	bx	lr

0800fd46 <_ZThn4_N15SpongePresenterD1Ev>:
 800fd46:	3804      	subs	r0, #4
 800fd48:	4770      	bx	lr

0800fd4a <_ZN15SpongePresenter10deactivateEv>:
}

void SpongePresenter::activate()
{

}
 800fd4a:	4770      	bx	lr

0800fd4c <_ZN15SpongePresenterD0Ev>:
 800fd4c:	b510      	push	{r4, lr}
 800fd4e:	2110      	movs	r1, #16
 800fd50:	4604      	mov	r4, r0
 800fd52:	f01d fde8 	bl	802d926 <_ZdlPvj>
 800fd56:	4620      	mov	r0, r4
 800fd58:	bd10      	pop	{r4, pc}

0800fd5a <_ZThn4_N15SpongePresenterD0Ev>:
 800fd5a:	f1a0 0004 	sub.w	r0, r0, #4
 800fd5e:	e7f5      	b.n	800fd4c <_ZN15SpongePresenterD0Ev>

0800fd60 <_ZN15SpongePresenterC1ER10SpongeView>:
 800fd60:	2200      	movs	r2, #0
 800fd62:	6082      	str	r2, [r0, #8]
    : view(v)
 800fd64:	4a02      	ldr	r2, [pc, #8]	@ (800fd70 <_ZN15SpongePresenterC1ER10SpongeView+0x10>)
 800fd66:	6002      	str	r2, [r0, #0]
 800fd68:	3218      	adds	r2, #24
 800fd6a:	6042      	str	r2, [r0, #4]
 800fd6c:	60c1      	str	r1, [r0, #12]
}
 800fd6e:	4770      	bx	lr
 800fd70:	08033054 	.word	0x08033054

0800fd74 <_ZN10SpongeView14tearDownScreenEv>:
}

void SpongeView::tearDownScreen()
{
    SpongeViewBase::tearDownScreen();
}
 800fd74:	4770      	bx	lr
	...

0800fd78 <_ZN10SpongeViewD1Ev>:

class SpongeView : public SpongeViewBase
{
public:
    SpongeView();
    virtual ~SpongeView() {}
 800fd78:	b510      	push	{r4, lr}
 800fd7a:	4b03      	ldr	r3, [pc, #12]	@ (800fd88 <_ZN10SpongeViewD1Ev+0x10>)
 800fd7c:	6003      	str	r3, [r0, #0]
 800fd7e:	4604      	mov	r4, r0
 800fd80:	f7f9 feb7 	bl	8009af2 <_ZN14SpongeViewBaseD1Ev>
 800fd84:	4620      	mov	r0, r4
 800fd86:	bd10      	pop	{r4, pc}
 800fd88:	0803307c 	.word	0x0803307c

0800fd8c <_ZN10SpongeViewD0Ev>:
 800fd8c:	b510      	push	{r4, lr}
 800fd8e:	4604      	mov	r4, r0
 800fd90:	f7ff fff2 	bl	800fd78 <_ZN10SpongeViewD1Ev>
 800fd94:	4620      	mov	r0, r4
 800fd96:	f44f 714e 	mov.w	r1, #824	@ 0x338
 800fd9a:	f01d fdc4 	bl	802d926 <_ZdlPvj>
 800fd9e:	4620      	mov	r0, r4
 800fda0:	bd10      	pop	{r4, pc}
	...

0800fda4 <_ZN10SpongeViewC1Ev>:
SpongeView::SpongeView()
 800fda4:	b510      	push	{r4, lr}
 800fda6:	4604      	mov	r4, r0
 800fda8:	f7f9 feda 	bl	8009b60 <_ZN14SpongeViewBaseC1Ev>
 800fdac:	4b04      	ldr	r3, [pc, #16]	@ (800fdc0 <_ZN10SpongeViewC1Ev+0x1c>)
 800fdae:	6023      	str	r3, [r4, #0]
    resetTimer = 0;
 800fdb0:	2300      	movs	r3, #0
 800fdb2:	f8c4 3330 	str.w	r3, [r4, #816]	@ 0x330
    resetTimerActive = false;
 800fdb6:	f8a4 3334 	strh.w	r3, [r4, #820]	@ 0x334
}
 800fdba:	4620      	mov	r0, r4
 800fdbc:	bd10      	pop	{r4, pc}
 800fdbe:	bf00      	nop
 800fdc0:	0803307c 	.word	0x0803307c

0800fdc4 <_ZN10SpongeView8initGPIOEv>:

void SpongeView::initGPIO()
{
 800fdc4:	b570      	push	{r4, r5, r6, lr}
 800fdc6:	b086      	sub	sp, #24
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800fdc8:	2400      	movs	r4, #0
 800fdca:	4b0f      	ldr	r3, [pc, #60]	@ (800fe08 <_ZN10SpongeView8initGPIOEv+0x44>)
 800fdcc:	9400      	str	r4, [sp, #0]
 800fdce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800fdd0:	4d0e      	ldr	r5, [pc, #56]	@ (800fe0c <_ZN10SpongeView8initGPIOEv+0x48>)
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800fdd2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800fdd6:	631a      	str	r2, [r3, #48]	@ 0x30
 800fdd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800fdda:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800fddc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800fde0:	9300      	str	r3, [sp, #0]
 800fde2:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800fde4:	f44f 5600 	mov.w	r6, #8192	@ 0x2000
 800fde8:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800fdea:	a901      	add	r1, sp, #4
 800fdec:	4628      	mov	r0, r5
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800fdee:	e9cd 6301 	strd	r6, r3, [sp, #4]
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800fdf2:	e9cd 4403 	strd	r4, r4, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800fdf6:	f000 fdc7 	bl	8010988 <HAL_GPIO_Init>

    HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 800fdfa:	4622      	mov	r2, r4
 800fdfc:	4631      	mov	r1, r6
 800fdfe:	4628      	mov	r0, r5
 800fe00:	f000 feac 	bl	8010b5c <HAL_GPIO_WritePin>
}
 800fe04:	b006      	add	sp, #24
 800fe06:	bd70      	pop	{r4, r5, r6, pc}
 800fe08:	40023800 	.word	0x40023800
 800fe0c:	40021800 	.word	0x40021800

0800fe10 <_ZN10SpongeView9toggleLEDEv>:

void SpongeView::toggleLED()
{
    HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800fe10:	4802      	ldr	r0, [pc, #8]	@ (800fe1c <_ZN10SpongeView9toggleLEDEv+0xc>)
 800fe12:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800fe16:	f000 bea6 	b.w	8010b66 <HAL_GPIO_TogglePin>
 800fe1a:	bf00      	nop
 800fe1c:	40021800 	.word	0x40021800

0800fe20 <_ZN10SpongeView17hideActionButtonsEv>:
}

void SpongeView::hideActionButtons()
{
 800fe20:	b538      	push	{r3, r4, r5, lr}
 800fe22:	2301      	movs	r3, #1
 800fe24:	2500      	movs	r5, #0
 800fe26:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800fe2a:	4604      	mov	r4, r0
 800fe2c:	f880 51c5 	strb.w	r5, [r0, #453]	@ 0x1c5
 800fe30:	f880 51f1 	strb.w	r5, [r0, #497]	@ 0x1f1
 800fe34:	f880 521d 	strb.w	r5, [r0, #541]	@ 0x21d
 800fe38:	f880 5249 	strb.w	r5, [r0, #585]	@ 0x249
    btn_def.setVisible(false);
    btn_spe.setVisible(false);
    btn_arrow1.setVisible(true);
    btn_arrow2.setVisible(false);

    btn_attack.invalidate();
 800fe3c:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
 800fe40:	f00c fc92 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800fe44:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800fe48:	f00c fc8e 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800fe4c:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800fe50:	f00c fc8a 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800fe54:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800fe58:	f00c fc86 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800fe5c:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800fe60:	f00c fc82 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    menuOpen = false;
 800fe64:	f884 5335 	strb.w	r5, [r4, #821]	@ 0x335
}
 800fe68:	bd38      	pop	{r3, r4, r5, pc}

0800fe6a <_ZN10SpongeView17showActionButtonsEv>:

void SpongeView::showActionButtons()
{
 800fe6a:	b538      	push	{r3, r4, r5, lr}
 800fe6c:	2300      	movs	r3, #0
 800fe6e:	2501      	movs	r5, #1
 800fe70:	f880 3275 	strb.w	r3, [r0, #629]	@ 0x275
 800fe74:	4604      	mov	r4, r0
 800fe76:	f880 51c5 	strb.w	r5, [r0, #453]	@ 0x1c5
 800fe7a:	f880 51f1 	strb.w	r5, [r0, #497]	@ 0x1f1
 800fe7e:	f880 521d 	strb.w	r5, [r0, #541]	@ 0x21d
 800fe82:	f880 5249 	strb.w	r5, [r0, #585]	@ 0x249
    btn_def.setVisible(true);
    btn_spe.setVisible(true);
    btn_arrow1.setVisible(false);
    btn_arrow2.setVisible(true);

    btn_attack.invalidate();
 800fe86:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
 800fe8a:	f00c fc6d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_def.invalidate();
 800fe8e:	f504 70e6 	add.w	r0, r4, #460	@ 0x1cc
 800fe92:	f00c fc69 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_spe.invalidate();
 800fe96:	f504 70fc 	add.w	r0, r4, #504	@ 0x1f8
 800fe9a:	f00c fc65 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow1.invalidate();
 800fe9e:	f504 7014 	add.w	r0, r4, #592	@ 0x250
 800fea2:	f00c fc61 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    btn_arrow2.invalidate();
 800fea6:	f504 7009 	add.w	r0, r4, #548	@ 0x224
 800feaa:	f00c fc5d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

    menuOpen = true;
 800feae:	f884 5335 	strb.w	r5, [r4, #821]	@ 0x335
}
 800feb2:	bd38      	pop	{r3, r4, r5, pc}

0800feb4 <_ZN10SpongeView16toggleActionMenuEv>:

void SpongeView::toggleActionMenu()
{
    if (menuOpen) {
 800feb4:	f890 3335 	ldrb.w	r3, [r0, #821]	@ 0x335
{
 800feb8:	b510      	push	{r4, lr}
 800feba:	4604      	mov	r4, r0
    if (menuOpen) {
 800febc:	b133      	cbz	r3, 800fecc <_ZN10SpongeView16toggleActionMenuEv+0x18>
        hideActionButtons();
 800febe:	f7ff ffaf 	bl	800fe20 <_ZN10SpongeView17hideActionButtonsEv>
    } else {
        showActionButtons();
    }
    toggleLED();
 800fec2:	4620      	mov	r0, r4
}
 800fec4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    toggleLED();
 800fec8:	f7ff bfa2 	b.w	800fe10 <_ZN10SpongeView9toggleLEDEv>
        showActionButtons();
 800fecc:	f7ff ffcd 	bl	800fe6a <_ZN10SpongeView17showActionButtonsEv>
 800fed0:	e7f7      	b.n	800fec2 <_ZN10SpongeView16toggleActionMenuEv+0xe>

0800fed2 <_ZN10SpongeView16resetSpongeStateEv>:
 800fed2:	2300      	movs	r3, #0
    // Start timer to return to normal state
    startResetTimer();
}

void SpongeView::resetSpongeState()
{
 800fed4:	b510      	push	{r4, lr}
 800fed6:	f880 3199 	strb.w	r3, [r0, #409]	@ 0x199
 800feda:	f880 316d 	strb.w	r3, [r0, #365]	@ 0x16d
 800fede:	f880 3115 	strb.w	r3, [r0, #277]	@ 0x115
 800fee2:	f880 3141 	strb.w	r3, [r0, #321]	@ 0x141
 800fee6:	2301      	movs	r3, #1
 800fee8:	4604      	mov	r4, r0
 800feea:	f880 30e9 	strb.w	r3, [r0, #233]	@ 0xe9

    // Show normal sponge sprite
    naruto.setVisible(true);

    // Invalidate all sprites
    naruto_atk.invalidate();
 800feee:	f500 70ba 	add.w	r0, r0, #372	@ 0x174
 800fef2:	f00c fc39 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_def.invalidate();
 800fef6:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800fefa:	f00c fc35 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe.invalidate();
 800fefe:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800ff02:	f00c fc31 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe_1.invalidate();
 800ff06:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800ff0a:	f00c fc2d 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800ff0e:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
}
 800ff12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naruto.invalidate();
 800ff16:	f00c bc27 	b.w	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ff1a <_ZN10SpongeView11setupScreenEv>:
{
 800ff1a:	b510      	push	{r4, lr}
 800ff1c:	4604      	mov	r4, r0
    SpongeViewBase::setupScreen();
 800ff1e:	f7f9 fde9 	bl	8009af4 <_ZN14SpongeViewBase11setupScreenEv>
    initGPIO();
 800ff22:	4620      	mov	r0, r4
 800ff24:	f7ff ff4e 	bl	800fdc4 <_ZN10SpongeView8initGPIOEv>
    resetTimer = 0;
 800ff28:	2300      	movs	r3, #0
    resetSpongeState();
 800ff2a:	4620      	mov	r0, r4
    resetTimer = 0;
 800ff2c:	f8c4 3330 	str.w	r3, [r4, #816]	@ 0x330
    resetTimerActive = false;
 800ff30:	f8a4 3334 	strh.w	r3, [r4, #820]	@ 0x334
    resetSpongeState();
 800ff34:	f7ff ffcd 	bl	800fed2 <_ZN10SpongeView16resetSpongeStateEv>
    hideActionButtons();
 800ff38:	4620      	mov	r0, r4
}
 800ff3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    hideActionButtons();
 800ff3e:	f7ff bf6f 	b.w	800fe20 <_ZN10SpongeView17hideActionButtonsEv>

0800ff42 <_ZN10SpongeView15handleTickEventEv>:
    if (resetTimerActive) {
 800ff42:	f890 3334 	ldrb.w	r3, [r0, #820]	@ 0x334
{
 800ff46:	b510      	push	{r4, lr}
 800ff48:	4604      	mov	r4, r0
    if (resetTimerActive) {
 800ff4a:	b173      	cbz	r3, 800ff6a <_ZN10SpongeView15handleTickEventEv+0x28>
        resetTimer += 16; // TouchGFX tick ~16ms
 800ff4c:	f8d0 3330 	ldr.w	r3, [r0, #816]	@ 0x330
 800ff50:	3310      	adds	r3, #16
        if (resetTimer >= RESET_TIME_MS) {
 800ff52:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
        resetTimer += 16; // TouchGFX tick ~16ms
 800ff56:	f8c0 3330 	str.w	r3, [r0, #816]	@ 0x330
        if (resetTimer >= RESET_TIME_MS) {
 800ff5a:	db06      	blt.n	800ff6a <_ZN10SpongeView15handleTickEventEv+0x28>
            resetSpongeState();
 800ff5c:	f7ff ffb9 	bl	800fed2 <_ZN10SpongeView16resetSpongeStateEv>
            resetTimerActive = false;
 800ff60:	2300      	movs	r3, #0
 800ff62:	f884 3334 	strb.w	r3, [r4, #820]	@ 0x334
            resetTimer = 0;
 800ff66:	f8c4 3330 	str.w	r3, [r4, #816]	@ 0x330
}
 800ff6a:	bd10      	pop	{r4, pc}

0800ff6c <_ZN10SpongeView13performAttackEv>:
{
 800ff6c:	b570      	push	{r4, r5, r6, lr}
 800ff6e:	4604      	mov	r4, r0
 800ff70:	2600      	movs	r6, #0
 800ff72:	2501      	movs	r5, #1
    resetSpongeState();
 800ff74:	f7ff ffad 	bl	800fed2 <_ZN10SpongeView16resetSpongeStateEv>
    naruto_atk.invalidate();
 800ff78:	f504 70ba 	add.w	r0, r4, #372	@ 0x174
 800ff7c:	f884 60e9 	strb.w	r6, [r4, #233]	@ 0xe9
 800ff80:	f884 5199 	strb.w	r5, [r4, #409]	@ 0x199
 800ff84:	f00c fbf0 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800ff88:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800ff8c:	f00c fbec 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    toggleLED();
 800ff90:	4620      	mov	r0, r4
 800ff92:	f7ff ff3d 	bl	800fe10 <_ZN10SpongeView9toggleLEDEv>

void SpongeView::startResetTimer()
{
    resetTimer = 0;
 800ff96:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    resetTimerActive = true;
 800ff9a:	f884 5334 	strb.w	r5, [r4, #820]	@ 0x334
}
 800ff9e:	bd70      	pop	{r4, r5, r6, pc}

0800ffa0 <_ZN10SpongeView13performDefendEv>:
{
 800ffa0:	b570      	push	{r4, r5, r6, lr}
 800ffa2:	4604      	mov	r4, r0
 800ffa4:	2600      	movs	r6, #0
 800ffa6:	2501      	movs	r5, #1
    resetSpongeState();
 800ffa8:	f7ff ff93 	bl	800fed2 <_ZN10SpongeView16resetSpongeStateEv>
    naruto_def.invalidate();
 800ffac:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800ffb0:	f884 60e9 	strb.w	r6, [r4, #233]	@ 0xe9
 800ffb4:	f884 516d 	strb.w	r5, [r4, #365]	@ 0x16d
 800ffb8:	f00c fbd6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800ffbc:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 800ffc0:	f00c fbd2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    toggleLED();
 800ffc4:	4620      	mov	r0, r4
 800ffc6:	f7ff ff23 	bl	800fe10 <_ZN10SpongeView9toggleLEDEv>
    resetTimer = 0;
 800ffca:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    resetTimerActive = true;
 800ffce:	f884 5334 	strb.w	r5, [r4, #820]	@ 0x334
}
 800ffd2:	bd70      	pop	{r4, r5, r6, pc}

0800ffd4 <_ZN10SpongeView14performSpecialEv>:
{
 800ffd4:	b570      	push	{r4, r5, r6, lr}
 800ffd6:	4604      	mov	r4, r0
 800ffd8:	2501      	movs	r5, #1
 800ffda:	2600      	movs	r6, #0
    resetSpongeState();
 800ffdc:	f7ff ff79 	bl	800fed2 <_ZN10SpongeView16resetSpongeStateEv>
    naruto_spe.invalidate();
 800ffe0:	f104 00f0 	add.w	r0, r4, #240	@ 0xf0
 800ffe4:	f884 60e9 	strb.w	r6, [r4, #233]	@ 0xe9
 800ffe8:	f884 5115 	strb.w	r5, [r4, #277]	@ 0x115
 800ffec:	f884 5141 	strb.w	r5, [r4, #321]	@ 0x141
 800fff0:	f00c fbba 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto_spe_1.invalidate();
 800fff4:	f504 708e 	add.w	r0, r4, #284	@ 0x11c
 800fff8:	f00c fbb6 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
    naruto.invalidate();
 800fffc:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
 8010000:	f00c fbb2 	bl	801c768 <_ZNK8touchgfx8Drawable10invalidateEv>
        toggleLED();
 8010004:	4620      	mov	r0, r4
 8010006:	f7ff ff03 	bl	800fe10 <_ZN10SpongeView9toggleLEDEv>
 801000a:	4620      	mov	r0, r4
 801000c:	f7ff ff00 	bl	800fe10 <_ZN10SpongeView9toggleLEDEv>
 8010010:	4620      	mov	r0, r4
 8010012:	f7ff fefd 	bl	800fe10 <_ZN10SpongeView9toggleLEDEv>
    resetTimer = 0;
 8010016:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    resetTimerActive = true;
 801001a:	f884 5334 	strb.w	r5, [r4, #820]	@ 0x334
}
 801001e:	bd70      	pop	{r4, r5, r6, pc}

08010020 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE>:
    if (evt.getType() == ClickEvent::PRESSED) {
 8010020:	790b      	ldrb	r3, [r1, #4]
{
 8010022:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010024:	4605      	mov	r5, r0
 8010026:	460c      	mov	r4, r1
    if (evt.getType() == ClickEvent::PRESSED) {
 8010028:	2b00      	cmp	r3, #0
 801002a:	d15c      	bne.n	80100e6 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xc6>
        if (btn_arrow1.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 801002c:	f500 7114 	add.w	r1, r0, #592	@ 0x250
 8010030:	4668      	mov	r0, sp
 8010032:	f00c fc35 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010036:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801003a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801003e:	4668      	mov	r0, sp
 8010040:	f7fa fd58 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 8010044:	b128      	cbz	r0, 8010052 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0x32>
            toggleActionMenu();
 8010046:	4628      	mov	r0, r5
}
 8010048:	b003      	add	sp, #12
 801004a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            toggleActionMenu();
 801004e:	f7ff bf31 	b.w	800feb4 <_ZN10SpongeView16toggleActionMenuEv>
        if (btn_arrow2.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 8010052:	f505 7109 	add.w	r1, r5, #548	@ 0x224
 8010056:	4668      	mov	r0, sp
 8010058:	f00c fc22 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801005c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010060:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010064:	4668      	mov	r0, sp
 8010066:	f7fa fd45 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 801006a:	2800      	cmp	r0, #0
 801006c:	d1eb      	bne.n	8010046 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0x26>
        if (menuOpen) {
 801006e:	f895 3335 	ldrb.w	r3, [r5, #821]	@ 0x335
 8010072:	b3c3      	cbz	r3, 80100e6 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xc6>
            if (btn_attack.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 8010074:	f505 71d0 	add.w	r1, r5, #416	@ 0x1a0
 8010078:	4668      	mov	r0, sp
 801007a:	f00c fc11 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801007e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010082:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010086:	4668      	mov	r0, sp
 8010088:	f7fa fd34 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 801008c:	b128      	cbz	r0, 801009a <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0x7a>
                performAttack();
 801008e:	4628      	mov	r0, r5
}
 8010090:	b003      	add	sp, #12
 8010092:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                performAttack();
 8010096:	f7ff bf69 	b.w	800ff6c <_ZN10SpongeView13performAttackEv>
            else if (btn_def.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 801009a:	f505 71e6 	add.w	r1, r5, #460	@ 0x1cc
 801009e:	4668      	mov	r0, sp
 80100a0:	f00c fbfe 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80100a4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80100a8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80100ac:	4668      	mov	r0, sp
 80100ae:	f7fa fd21 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 80100b2:	b128      	cbz	r0, 80100c0 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xa0>
                performDefend();
 80100b4:	4628      	mov	r0, r5
}
 80100b6:	b003      	add	sp, #12
 80100b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                performDefend();
 80100bc:	f7ff bf70 	b.w	800ffa0 <_ZN10SpongeView13performDefendEv>
            else if (btn_spe.getAbsoluteRect().intersect(evt.getX(), evt.getY())) {
 80100c0:	f505 71fc 	add.w	r1, r5, #504	@ 0x1f8
 80100c4:	4668      	mov	r0, sp
 80100c6:	f00c fbeb 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80100ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80100ce:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80100d2:	4668      	mov	r0, sp
 80100d4:	f7fa fd0e 	bl	800aaf4 <_ZNK8touchgfx4Rect9intersectEss>
 80100d8:	b128      	cbz	r0, 80100e6 <_ZN10SpongeView16handleClickEventERKN8touchgfx10ClickEventE+0xc6>
                performSpecial();
 80100da:	4628      	mov	r0, r5
}
 80100dc:	b003      	add	sp, #12
 80100de:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                performSpecial();
 80100e2:	f7ff bf77 	b.w	800ffd4 <_ZN10SpongeView14performSpecialEv>
    SpongeViewBase::handleClickEvent(evt);
 80100e6:	4621      	mov	r1, r4
 80100e8:	4628      	mov	r0, r5
}
 80100ea:	b003      	add	sp, #12
 80100ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    SpongeViewBase::handleClickEvent(evt);
 80100f0:	f00d b898 	b.w	801d224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>

080100f4 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80100f4:	20f0      	movs	r0, #240	@ 0xf0
 80100f6:	4770      	bx	lr

080100f8 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80100f8:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 80100fc:	4770      	bx	lr

080100fe <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80100fe:	2029      	movs	r0, #41	@ 0x29
 8010100:	f7f2 ba2e 	b.w	8002560 <LCD_IO_WriteReg>

08010104 <ili9341_DisplayOff>:
 8010104:	2028      	movs	r0, #40	@ 0x28
 8010106:	f7f2 ba2b 	b.w	8002560 <LCD_IO_WriteReg>

0801010a <ili9341_Init>:
{
 801010a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 801010c:	f7f2 f9fc 	bl	8002508 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8010110:	20ca      	movs	r0, #202	@ 0xca
 8010112:	f7f2 fa25 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010116:	20c3      	movs	r0, #195	@ 0xc3
 8010118:	f7f2 fa06 	bl	8002528 <LCD_IO_WriteData>
 801011c:	2008      	movs	r0, #8
 801011e:	f7f2 fa03 	bl	8002528 <LCD_IO_WriteData>
 8010122:	2050      	movs	r0, #80	@ 0x50
 8010124:	f7f2 fa00 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010128:	20cf      	movs	r0, #207	@ 0xcf
 801012a:	f7f2 fa19 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801012e:	2000      	movs	r0, #0
 8010130:	f7f2 f9fa 	bl	8002528 <LCD_IO_WriteData>
 8010134:	20c1      	movs	r0, #193	@ 0xc1
 8010136:	f7f2 f9f7 	bl	8002528 <LCD_IO_WriteData>
 801013a:	2030      	movs	r0, #48	@ 0x30
 801013c:	f7f2 f9f4 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010140:	20ed      	movs	r0, #237	@ 0xed
 8010142:	f7f2 fa0d 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010146:	2064      	movs	r0, #100	@ 0x64
 8010148:	f7f2 f9ee 	bl	8002528 <LCD_IO_WriteData>
 801014c:	2003      	movs	r0, #3
 801014e:	f7f2 f9eb 	bl	8002528 <LCD_IO_WriteData>
 8010152:	2012      	movs	r0, #18
 8010154:	f7f2 f9e8 	bl	8002528 <LCD_IO_WriteData>
 8010158:	2081      	movs	r0, #129	@ 0x81
 801015a:	f7f2 f9e5 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801015e:	20e8      	movs	r0, #232	@ 0xe8
 8010160:	f7f2 f9fe 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010164:	2085      	movs	r0, #133	@ 0x85
 8010166:	f7f2 f9df 	bl	8002528 <LCD_IO_WriteData>
 801016a:	2000      	movs	r0, #0
 801016c:	f7f2 f9dc 	bl	8002528 <LCD_IO_WriteData>
 8010170:	2078      	movs	r0, #120	@ 0x78
 8010172:	f7f2 f9d9 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010176:	20cb      	movs	r0, #203	@ 0xcb
 8010178:	f7f2 f9f2 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801017c:	2039      	movs	r0, #57	@ 0x39
 801017e:	f7f2 f9d3 	bl	8002528 <LCD_IO_WriteData>
 8010182:	202c      	movs	r0, #44	@ 0x2c
 8010184:	f7f2 f9d0 	bl	8002528 <LCD_IO_WriteData>
 8010188:	2000      	movs	r0, #0
 801018a:	f7f2 f9cd 	bl	8002528 <LCD_IO_WriteData>
 801018e:	2034      	movs	r0, #52	@ 0x34
 8010190:	f7f2 f9ca 	bl	8002528 <LCD_IO_WriteData>
 8010194:	2002      	movs	r0, #2
 8010196:	f7f2 f9c7 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801019a:	20f7      	movs	r0, #247	@ 0xf7
 801019c:	f7f2 f9e0 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80101a0:	2020      	movs	r0, #32
 80101a2:	f7f2 f9c1 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80101a6:	20ea      	movs	r0, #234	@ 0xea
 80101a8:	f7f2 f9da 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80101ac:	2000      	movs	r0, #0
 80101ae:	f7f2 f9bb 	bl	8002528 <LCD_IO_WriteData>
 80101b2:	2000      	movs	r0, #0
 80101b4:	f7f2 f9b8 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80101b8:	20b1      	movs	r0, #177	@ 0xb1
 80101ba:	f7f2 f9d1 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80101be:	2000      	movs	r0, #0
 80101c0:	f7f2 f9b2 	bl	8002528 <LCD_IO_WriteData>
 80101c4:	201b      	movs	r0, #27
 80101c6:	f7f2 f9af 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80101ca:	20b6      	movs	r0, #182	@ 0xb6
 80101cc:	f7f2 f9c8 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80101d0:	200a      	movs	r0, #10
 80101d2:	f7f2 f9a9 	bl	8002528 <LCD_IO_WriteData>
 80101d6:	20a2      	movs	r0, #162	@ 0xa2
 80101d8:	f7f2 f9a6 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80101dc:	20c0      	movs	r0, #192	@ 0xc0
 80101de:	f7f2 f9bf 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80101e2:	2010      	movs	r0, #16
 80101e4:	f7f2 f9a0 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80101e8:	20c1      	movs	r0, #193	@ 0xc1
 80101ea:	f7f2 f9b9 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80101ee:	2010      	movs	r0, #16
 80101f0:	f7f2 f99a 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80101f4:	20c5      	movs	r0, #197	@ 0xc5
 80101f6:	f7f2 f9b3 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80101fa:	2045      	movs	r0, #69	@ 0x45
 80101fc:	f7f2 f994 	bl	8002528 <LCD_IO_WriteData>
 8010200:	2015      	movs	r0, #21
 8010202:	f7f2 f991 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010206:	20c7      	movs	r0, #199	@ 0xc7
 8010208:	f7f2 f9aa 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801020c:	2090      	movs	r0, #144	@ 0x90
 801020e:	f7f2 f98b 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010212:	2036      	movs	r0, #54	@ 0x36
 8010214:	f7f2 f9a4 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010218:	20c8      	movs	r0, #200	@ 0xc8
 801021a:	f7f2 f985 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801021e:	20f2      	movs	r0, #242	@ 0xf2
 8010220:	f7f2 f99e 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010224:	2000      	movs	r0, #0
 8010226:	f7f2 f97f 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801022a:	20b0      	movs	r0, #176	@ 0xb0
 801022c:	f7f2 f998 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010230:	20c2      	movs	r0, #194	@ 0xc2
 8010232:	f7f2 f979 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010236:	20b6      	movs	r0, #182	@ 0xb6
 8010238:	f7f2 f992 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801023c:	200a      	movs	r0, #10
 801023e:	f7f2 f973 	bl	8002528 <LCD_IO_WriteData>
 8010242:	20a7      	movs	r0, #167	@ 0xa7
 8010244:	f7f2 f970 	bl	8002528 <LCD_IO_WriteData>
 8010248:	2027      	movs	r0, #39	@ 0x27
 801024a:	f7f2 f96d 	bl	8002528 <LCD_IO_WriteData>
 801024e:	2004      	movs	r0, #4
 8010250:	f7f2 f96a 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010254:	202a      	movs	r0, #42	@ 0x2a
 8010256:	f7f2 f983 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801025a:	2000      	movs	r0, #0
 801025c:	f7f2 f964 	bl	8002528 <LCD_IO_WriteData>
 8010260:	2000      	movs	r0, #0
 8010262:	f7f2 f961 	bl	8002528 <LCD_IO_WriteData>
 8010266:	2000      	movs	r0, #0
 8010268:	f7f2 f95e 	bl	8002528 <LCD_IO_WriteData>
 801026c:	20ef      	movs	r0, #239	@ 0xef
 801026e:	f7f2 f95b 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010272:	202b      	movs	r0, #43	@ 0x2b
 8010274:	f7f2 f974 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010278:	2000      	movs	r0, #0
 801027a:	f7f2 f955 	bl	8002528 <LCD_IO_WriteData>
 801027e:	2000      	movs	r0, #0
 8010280:	f7f2 f952 	bl	8002528 <LCD_IO_WriteData>
 8010284:	2001      	movs	r0, #1
 8010286:	f7f2 f94f 	bl	8002528 <LCD_IO_WriteData>
 801028a:	203f      	movs	r0, #63	@ 0x3f
 801028c:	f7f2 f94c 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010290:	20f6      	movs	r0, #246	@ 0xf6
 8010292:	f7f2 f965 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010296:	2001      	movs	r0, #1
 8010298:	f7f2 f946 	bl	8002528 <LCD_IO_WriteData>
 801029c:	2000      	movs	r0, #0
 801029e:	f7f2 f943 	bl	8002528 <LCD_IO_WriteData>
 80102a2:	2006      	movs	r0, #6
 80102a4:	f7f2 f940 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80102a8:	202c      	movs	r0, #44	@ 0x2c
 80102aa:	f7f2 f959 	bl	8002560 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80102ae:	20c8      	movs	r0, #200	@ 0xc8
 80102b0:	f7f2 f9a4 	bl	80025fc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80102b4:	2026      	movs	r0, #38	@ 0x26
 80102b6:	f7f2 f953 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80102ba:	2001      	movs	r0, #1
 80102bc:	f7f2 f934 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80102c0:	20e0      	movs	r0, #224	@ 0xe0
 80102c2:	f7f2 f94d 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80102c6:	200f      	movs	r0, #15
 80102c8:	f7f2 f92e 	bl	8002528 <LCD_IO_WriteData>
 80102cc:	2029      	movs	r0, #41	@ 0x29
 80102ce:	f7f2 f92b 	bl	8002528 <LCD_IO_WriteData>
 80102d2:	2024      	movs	r0, #36	@ 0x24
 80102d4:	f7f2 f928 	bl	8002528 <LCD_IO_WriteData>
 80102d8:	200c      	movs	r0, #12
 80102da:	f7f2 f925 	bl	8002528 <LCD_IO_WriteData>
 80102de:	200e      	movs	r0, #14
 80102e0:	f7f2 f922 	bl	8002528 <LCD_IO_WriteData>
 80102e4:	2009      	movs	r0, #9
 80102e6:	f7f2 f91f 	bl	8002528 <LCD_IO_WriteData>
 80102ea:	204e      	movs	r0, #78	@ 0x4e
 80102ec:	f7f2 f91c 	bl	8002528 <LCD_IO_WriteData>
 80102f0:	2078      	movs	r0, #120	@ 0x78
 80102f2:	f7f2 f919 	bl	8002528 <LCD_IO_WriteData>
 80102f6:	203c      	movs	r0, #60	@ 0x3c
 80102f8:	f7f2 f916 	bl	8002528 <LCD_IO_WriteData>
 80102fc:	2009      	movs	r0, #9
 80102fe:	f7f2 f913 	bl	8002528 <LCD_IO_WriteData>
 8010302:	2013      	movs	r0, #19
 8010304:	f7f2 f910 	bl	8002528 <LCD_IO_WriteData>
 8010308:	2005      	movs	r0, #5
 801030a:	f7f2 f90d 	bl	8002528 <LCD_IO_WriteData>
 801030e:	2017      	movs	r0, #23
 8010310:	f7f2 f90a 	bl	8002528 <LCD_IO_WriteData>
 8010314:	2011      	movs	r0, #17
 8010316:	f7f2 f907 	bl	8002528 <LCD_IO_WriteData>
 801031a:	2000      	movs	r0, #0
 801031c:	f7f2 f904 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010320:	20e1      	movs	r0, #225	@ 0xe1
 8010322:	f7f2 f91d 	bl	8002560 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8010326:	2000      	movs	r0, #0
 8010328:	f7f2 f8fe 	bl	8002528 <LCD_IO_WriteData>
 801032c:	2016      	movs	r0, #22
 801032e:	f7f2 f8fb 	bl	8002528 <LCD_IO_WriteData>
 8010332:	201b      	movs	r0, #27
 8010334:	f7f2 f8f8 	bl	8002528 <LCD_IO_WriteData>
 8010338:	2004      	movs	r0, #4
 801033a:	f7f2 f8f5 	bl	8002528 <LCD_IO_WriteData>
 801033e:	2011      	movs	r0, #17
 8010340:	f7f2 f8f2 	bl	8002528 <LCD_IO_WriteData>
 8010344:	2007      	movs	r0, #7
 8010346:	f7f2 f8ef 	bl	8002528 <LCD_IO_WriteData>
 801034a:	2031      	movs	r0, #49	@ 0x31
 801034c:	f7f2 f8ec 	bl	8002528 <LCD_IO_WriteData>
 8010350:	2033      	movs	r0, #51	@ 0x33
 8010352:	f7f2 f8e9 	bl	8002528 <LCD_IO_WriteData>
 8010356:	2042      	movs	r0, #66	@ 0x42
 8010358:	f7f2 f8e6 	bl	8002528 <LCD_IO_WriteData>
 801035c:	2005      	movs	r0, #5
 801035e:	f7f2 f8e3 	bl	8002528 <LCD_IO_WriteData>
 8010362:	200c      	movs	r0, #12
 8010364:	f7f2 f8e0 	bl	8002528 <LCD_IO_WriteData>
 8010368:	200a      	movs	r0, #10
 801036a:	f7f2 f8dd 	bl	8002528 <LCD_IO_WriteData>
 801036e:	2028      	movs	r0, #40	@ 0x28
 8010370:	f7f2 f8da 	bl	8002528 <LCD_IO_WriteData>
 8010374:	202f      	movs	r0, #47	@ 0x2f
 8010376:	f7f2 f8d7 	bl	8002528 <LCD_IO_WriteData>
 801037a:	200f      	movs	r0, #15
 801037c:	f7f2 f8d4 	bl	8002528 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8010380:	2011      	movs	r0, #17
 8010382:	f7f2 f8ed 	bl	8002560 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8010386:	20c8      	movs	r0, #200	@ 0xc8
 8010388:	f7f2 f938 	bl	80025fc <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 801038c:	2029      	movs	r0, #41	@ 0x29
 801038e:	f7f2 f8e7 	bl	8002560 <LCD_IO_WriteReg>
}
 8010392:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8010396:	202c      	movs	r0, #44	@ 0x2c
 8010398:	f7f2 b8e2 	b.w	8002560 <LCD_IO_WriteReg>

0801039c <ili9341_ReadID>:
{
 801039c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 801039e:	f7f2 f8b3 	bl	8002508 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80103a2:	2103      	movs	r1, #3
 80103a4:	20d3      	movs	r0, #211	@ 0xd3
 80103a6:	f7f2 f8f7 	bl	8002598 <LCD_IO_ReadData>
}
 80103aa:	b280      	uxth	r0, r0
 80103ac:	bd08      	pop	{r3, pc}

080103ae <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80103ae:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80103b0:	b2c4      	uxtb	r4, r0
 80103b2:	2202      	movs	r2, #2
 80103b4:	2103      	movs	r1, #3
 80103b6:	4620      	mov	r0, r4
 80103b8:	f7f2 f85c 	bl	8002474 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80103bc:	200a      	movs	r0, #10
 80103be:	f7f2 f8a1 	bl	8002504 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80103c2:	4620      	mov	r0, r4
 80103c4:	2200      	movs	r2, #0
 80103c6:	2103      	movs	r1, #3
 80103c8:	f7f2 f854 	bl	8002474 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80103cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80103d0:	2002      	movs	r0, #2
 80103d2:	f7f2 b897 	b.w	8002504 <IOE_Delay>

080103d6 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80103d6:	b538      	push	{r3, r4, r5, lr}
 80103d8:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80103da:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80103dc:	f7f2 f848 	bl	8002470 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80103e0:	2100      	movs	r1, #0
 80103e2:	4620      	mov	r0, r4
 80103e4:	f7f2 f85e 	bl	80024a4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80103e8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80103ea:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80103ec:	4620      	mov	r0, r4
 80103ee:	f7f2 f859 	bl	80024a4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80103f2:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80103f6:	b280      	uxth	r0, r0
 80103f8:	bd38      	pop	{r3, r4, r5, pc}

080103fa <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80103fa:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80103fc:	b2c4      	uxtb	r4, r0
 80103fe:	2140      	movs	r1, #64	@ 0x40
 8010400:	4620      	mov	r0, r4
 8010402:	f7f2 f84f 	bl	80024a4 <IOE_Read>
  
  if(state > 0)
 8010406:	0603      	lsls	r3, r0, #24
 8010408:	d507      	bpl.n	801041a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 801040a:	214c      	movs	r1, #76	@ 0x4c
 801040c:	4620      	mov	r0, r4
 801040e:	f7f2 f849 	bl	80024a4 <IOE_Read>
 8010412:	3800      	subs	r0, #0
 8010414:	bf18      	it	ne
 8010416:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8010418:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 801041a:	2201      	movs	r2, #1
 801041c:	214b      	movs	r1, #75	@ 0x4b
 801041e:	4620      	mov	r0, r4
 8010420:	f7f2 f828 	bl	8002474 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8010424:	4620      	mov	r0, r4
 8010426:	2200      	movs	r2, #0
 8010428:	214b      	movs	r1, #75	@ 0x4b
 801042a:	f7f2 f823 	bl	8002474 <IOE_Write>
  uint8_t ret = 0;
 801042e:	2000      	movs	r0, #0
 8010430:	e7f2      	b.n	8010418 <stmpe811_TS_DetectTouch+0x1e>

08010432 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8010432:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8010434:	2304      	movs	r3, #4
 8010436:	b2c4      	uxtb	r4, r0
{
 8010438:	460e      	mov	r6, r1
 801043a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 801043c:	21d7      	movs	r1, #215	@ 0xd7
 801043e:	eb0d 0203 	add.w	r2, sp, r3
 8010442:	4620      	mov	r0, r4
 8010444:	f7f2 f848 	bl	80024d8 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8010448:	9b01      	ldr	r3, [sp, #4]
 801044a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 801044c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 801044e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8010452:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8010454:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8010456:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8010458:	2201      	movs	r2, #1
 801045a:	214b      	movs	r1, #75	@ 0x4b
 801045c:	f7f2 f80a 	bl	8002474 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8010460:	2200      	movs	r2, #0
 8010462:	214b      	movs	r1, #75	@ 0x4b
 8010464:	4620      	mov	r0, r4
 8010466:	f7f2 f805 	bl	8002474 <IOE_Write>
}
 801046a:	b002      	add	sp, #8
 801046c:	bd70      	pop	{r4, r5, r6, pc}
	...

08010470 <stmpe811_Init>:
{
 8010470:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8010472:	4a0a      	ldr	r2, [pc, #40]	@ (801049c <stmpe811_Init+0x2c>)
 8010474:	7813      	ldrb	r3, [r2, #0]
 8010476:	4298      	cmp	r0, r3
{
 8010478:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 801047a:	d00d      	beq.n	8010498 <stmpe811_Init+0x28>
 801047c:	7851      	ldrb	r1, [r2, #1]
 801047e:	4288      	cmp	r0, r1
 8010480:	d00a      	beq.n	8010498 <stmpe811_Init+0x28>
 8010482:	b10b      	cbz	r3, 8010488 <stmpe811_Init+0x18>
 8010484:	b941      	cbnz	r1, 8010498 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8010486:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8010488:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 801048a:	f7f1 fff1 	bl	8002470 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 801048e:	4620      	mov	r0, r4
}
 8010490:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8010494:	f7ff bf8b 	b.w	80103ae <stmpe811_Reset>
}
 8010498:	bd10      	pop	{r4, pc}
 801049a:	bf00      	nop
 801049c:	20002b7c 	.word	0x20002b7c

080104a0 <stmpe811_EnableGlobalIT>:
{
 80104a0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80104a2:	b2c4      	uxtb	r4, r0
 80104a4:	2109      	movs	r1, #9
 80104a6:	4620      	mov	r0, r4
 80104a8:	f7f1 fffc 	bl	80024a4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80104ac:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80104b0:	b2d2      	uxtb	r2, r2
 80104b2:	4620      	mov	r0, r4
 80104b4:	2109      	movs	r1, #9
}
 80104b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80104ba:	f7f1 bfdb 	b.w	8002474 <IOE_Write>

080104be <stmpe811_DisableGlobalIT>:
{
 80104be:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80104c0:	b2c4      	uxtb	r4, r0
 80104c2:	2109      	movs	r1, #9
 80104c4:	4620      	mov	r0, r4
 80104c6:	f7f1 ffed 	bl	80024a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80104ca:	2109      	movs	r1, #9
 80104cc:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 80104d0:	4620      	mov	r0, r4
}
 80104d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80104d6:	f7f1 bfcd 	b.w	8002474 <IOE_Write>

080104da <stmpe811_EnableITSource>:
{
 80104da:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80104dc:	b2c4      	uxtb	r4, r0
{
 80104de:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80104e0:	4620      	mov	r0, r4
 80104e2:	210a      	movs	r1, #10
 80104e4:	f7f1 ffde 	bl	80024a4 <IOE_Read>
  tmp |= Source; 
 80104e8:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80104ec:	b2d2      	uxtb	r2, r2
 80104ee:	4620      	mov	r0, r4
 80104f0:	210a      	movs	r1, #10
}
 80104f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80104f6:	f7f1 bfbd 	b.w	8002474 <IOE_Write>

080104fa <stmpe811_TS_EnableIT>:
{
 80104fa:	b510      	push	{r4, lr}
 80104fc:	4604      	mov	r4, r0
  IOE_ITConfig();
 80104fe:	f7f1 ffb8 	bl	8002472 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8010502:	4620      	mov	r0, r4
 8010504:	211f      	movs	r1, #31
 8010506:	f7ff ffe8 	bl	80104da <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 801050a:	4620      	mov	r0, r4
}
 801050c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8010510:	f7ff bfc6 	b.w	80104a0 <stmpe811_EnableGlobalIT>

08010514 <stmpe811_DisableITSource>:
{
 8010514:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8010516:	b2c4      	uxtb	r4, r0
{
 8010518:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 801051a:	4620      	mov	r0, r4
 801051c:	210a      	movs	r1, #10
 801051e:	f7f1 ffc1 	bl	80024a4 <IOE_Read>
  tmp &= ~Source; 
 8010522:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8010526:	b2d2      	uxtb	r2, r2
 8010528:	4620      	mov	r0, r4
 801052a:	210a      	movs	r1, #10
}
 801052c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8010530:	f7f1 bfa0 	b.w	8002474 <IOE_Write>

08010534 <stmpe811_TS_DisableIT>:
{
 8010534:	b510      	push	{r4, lr}
 8010536:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8010538:	f7ff ffc1 	bl	80104be <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 801053c:	4620      	mov	r0, r4
 801053e:	211f      	movs	r1, #31
}
 8010540:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8010544:	f7ff bfe6 	b.w	8010514 <stmpe811_DisableITSource>

08010548 <stmpe811_ReadGITStatus>:
{
 8010548:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 801054a:	b2c0      	uxtb	r0, r0
{
 801054c:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 801054e:	210b      	movs	r1, #11
 8010550:	f7f1 ffa8 	bl	80024a4 <IOE_Read>
}
 8010554:	4020      	ands	r0, r4
 8010556:	bd10      	pop	{r4, pc}

08010558 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8010558:	211f      	movs	r1, #31
 801055a:	f7ff bff5 	b.w	8010548 <stmpe811_ReadGITStatus>

0801055e <stmpe811_ClearGlobalIT>:
{
 801055e:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8010560:	b2c0      	uxtb	r0, r0
 8010562:	210b      	movs	r1, #11
 8010564:	f7f1 bf86 	b.w	8002474 <IOE_Write>

08010568 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8010568:	211f      	movs	r1, #31
 801056a:	f7ff bff8 	b.w	801055e <stmpe811_ClearGlobalIT>

0801056e <stmpe811_IO_EnableAF>:
{
 801056e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8010570:	b2c4      	uxtb	r4, r0
{
 8010572:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8010574:	4620      	mov	r0, r4
 8010576:	2117      	movs	r1, #23
 8010578:	f7f1 ff94 	bl	80024a4 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 801057c:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8010580:	b2d2      	uxtb	r2, r2
 8010582:	4620      	mov	r0, r4
 8010584:	2117      	movs	r1, #23
}
 8010586:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 801058a:	f7f1 bf73 	b.w	8002474 <IOE_Write>

0801058e <stmpe811_TS_Start>:
{
 801058e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8010590:	b2c4      	uxtb	r4, r0
{
 8010592:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8010594:	2104      	movs	r1, #4
 8010596:	4620      	mov	r0, r4
 8010598:	f7f1 ff84 	bl	80024a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 801059c:	2104      	movs	r1, #4
 801059e:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80105a2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80105a4:	4620      	mov	r0, r4
 80105a6:	f7f1 ff65 	bl	8002474 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80105aa:	4630      	mov	r0, r6
 80105ac:	21f0      	movs	r1, #240	@ 0xf0
 80105ae:	f7ff ffde 	bl	801056e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80105b2:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 80105b6:	4620      	mov	r0, r4
 80105b8:	2104      	movs	r1, #4
 80105ba:	f7f1 ff5b 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80105be:	2249      	movs	r2, #73	@ 0x49
 80105c0:	2120      	movs	r1, #32
 80105c2:	4620      	mov	r0, r4
 80105c4:	f7f1 ff56 	bl	8002474 <IOE_Write>
  IOE_Delay(2); 
 80105c8:	2002      	movs	r0, #2
 80105ca:	f7f1 ff9b 	bl	8002504 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80105ce:	4620      	mov	r0, r4
 80105d0:	2201      	movs	r2, #1
 80105d2:	2121      	movs	r1, #33	@ 0x21
 80105d4:	f7f1 ff4e 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80105d8:	4620      	mov	r0, r4
 80105da:	229a      	movs	r2, #154	@ 0x9a
 80105dc:	2141      	movs	r1, #65	@ 0x41
 80105de:	f7f1 ff49 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80105e2:	4620      	mov	r0, r4
 80105e4:	2201      	movs	r2, #1
 80105e6:	214a      	movs	r1, #74	@ 0x4a
 80105e8:	f7f1 ff44 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80105ec:	4620      	mov	r0, r4
 80105ee:	2201      	movs	r2, #1
 80105f0:	214b      	movs	r1, #75	@ 0x4b
 80105f2:	f7f1 ff3f 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80105f6:	4620      	mov	r0, r4
 80105f8:	2200      	movs	r2, #0
 80105fa:	214b      	movs	r1, #75	@ 0x4b
 80105fc:	f7f1 ff3a 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8010600:	4620      	mov	r0, r4
 8010602:	2201      	movs	r2, #1
 8010604:	2156      	movs	r1, #86	@ 0x56
 8010606:	f7f1 ff35 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 801060a:	4620      	mov	r0, r4
 801060c:	2201      	movs	r2, #1
 801060e:	2158      	movs	r1, #88	@ 0x58
 8010610:	f7f1 ff30 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8010614:	4620      	mov	r0, r4
 8010616:	2201      	movs	r2, #1
 8010618:	2140      	movs	r1, #64	@ 0x40
 801061a:	f7f1 ff2b 	bl	8002474 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 801061e:	4620      	mov	r0, r4
 8010620:	22ff      	movs	r2, #255	@ 0xff
 8010622:	210b      	movs	r1, #11
 8010624:	f7f1 ff26 	bl	8002474 <IOE_Write>
}
 8010628:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 801062c:	2002      	movs	r0, #2
 801062e:	f7f1 bf69 	b.w	8002504 <IOE_Delay>
	...

08010634 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8010634:	4b05      	ldr	r3, [pc, #20]	@ (801064c <SystemInit+0x18>)
 8010636:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 801063a:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 801063e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8010642:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8010646:	609a      	str	r2, [r3, #8]
#endif
}
 8010648:	4770      	bx	lr
 801064a:	bf00      	nop
 801064c:	e000ed00 	.word	0xe000ed00

08010650 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8010650:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8010652:	4b0b      	ldr	r3, [pc, #44]	@ (8010680 <HAL_Init+0x30>)
 8010654:	681a      	ldr	r2, [r3, #0]
 8010656:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 801065a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 801065c:	681a      	ldr	r2, [r3, #0]
 801065e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8010662:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8010664:	681a      	ldr	r2, [r3, #0]
 8010666:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 801066a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 801066c:	2003      	movs	r0, #3
 801066e:	f000 f82f 	bl	80106d0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8010672:	2000      	movs	r0, #0
 8010674:	f7f2 fa0a 	bl	8002a8c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8010678:	f7f1 ffd4 	bl	8002624 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 801067c:	2000      	movs	r0, #0
 801067e:	bd08      	pop	{r3, pc}
 8010680:	40023c00 	.word	0x40023c00

08010684 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8010684:	4a03      	ldr	r2, [pc, #12]	@ (8010694 <HAL_IncTick+0x10>)
 8010686:	4b04      	ldr	r3, [pc, #16]	@ (8010698 <HAL_IncTick+0x14>)
 8010688:	6811      	ldr	r1, [r2, #0]
 801068a:	781b      	ldrb	r3, [r3, #0]
 801068c:	440b      	add	r3, r1
 801068e:	6013      	str	r3, [r2, #0]
}
 8010690:	4770      	bx	lr
 8010692:	bf00      	nop
 8010694:	20002b80 	.word	0x20002b80
 8010698:	20000084 	.word	0x20000084

0801069c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 801069c:	4b01      	ldr	r3, [pc, #4]	@ (80106a4 <HAL_GetTick+0x8>)
 801069e:	6818      	ldr	r0, [r3, #0]
}
 80106a0:	4770      	bx	lr
 80106a2:	bf00      	nop
 80106a4:	20002b80 	.word	0x20002b80

080106a8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80106a8:	b538      	push	{r3, r4, r5, lr}
 80106aa:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80106ac:	f7ff fff6 	bl	801069c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80106b0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80106b2:	bf1c      	itt	ne
 80106b4:	4b05      	ldrne	r3, [pc, #20]	@ (80106cc <HAL_Delay+0x24>)
 80106b6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80106b8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80106ba:	bf18      	it	ne
 80106bc:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80106be:	f7ff ffed 	bl	801069c <HAL_GetTick>
 80106c2:	1b43      	subs	r3, r0, r5
 80106c4:	42a3      	cmp	r3, r4
 80106c6:	d3fa      	bcc.n	80106be <HAL_Delay+0x16>
  {
  }
}
 80106c8:	bd38      	pop	{r3, r4, r5, pc}
 80106ca:	bf00      	nop
 80106cc:	20000084 	.word	0x20000084

080106d0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80106d0:	4907      	ldr	r1, [pc, #28]	@ (80106f0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80106d2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80106d4:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80106d8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80106da:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80106dc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80106e0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80106e2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80106e4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80106e8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80106ec:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80106ee:	4770      	bx	lr
 80106f0:	e000ed00 	.word	0xe000ed00

080106f4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80106f4:	4b16      	ldr	r3, [pc, #88]	@ (8010750 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80106f6:	b530      	push	{r4, r5, lr}
 80106f8:	68dc      	ldr	r4, [r3, #12]
 80106fa:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80106fe:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8010702:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8010704:	2b04      	cmp	r3, #4
 8010706:	bf28      	it	cs
 8010708:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801070a:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801070c:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8010710:	bf8c      	ite	hi
 8010712:	3c03      	subhi	r4, #3
 8010714:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8010716:	fa05 f303 	lsl.w	r3, r5, r3
 801071a:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 801071e:	40a5      	lsls	r5, r4
 8010720:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8010724:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8010726:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8010728:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801072c:	bfac      	ite	ge
 801072e:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010732:	4a08      	ldrlt	r2, [pc, #32]	@ (8010754 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010734:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010738:	bfb8      	it	lt
 801073a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801073e:	b2db      	uxtb	r3, r3
 8010740:	bfaa      	itet	ge
 8010742:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010746:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010748:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 801074c:	bd30      	pop	{r4, r5, pc}
 801074e:	bf00      	nop
 8010750:	e000ed00 	.word	0xe000ed00
 8010754:	e000ed14 	.word	0xe000ed14

08010758 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8010758:	2800      	cmp	r0, #0
 801075a:	db07      	blt.n	801076c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 801075c:	4a04      	ldr	r2, [pc, #16]	@ (8010770 <HAL_NVIC_EnableIRQ+0x18>)
 801075e:	0941      	lsrs	r1, r0, #5
 8010760:	2301      	movs	r3, #1
 8010762:	f000 001f 	and.w	r0, r0, #31
 8010766:	4083      	lsls	r3, r0
 8010768:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 801076c:	4770      	bx	lr
 801076e:	bf00      	nop
 8010770:	e000e100 	.word	0xe000e100

08010774 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8010774:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8010776:	4604      	mov	r4, r0
 8010778:	b150      	cbz	r0, 8010790 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 801077a:	7943      	ldrb	r3, [r0, #5]
 801077c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8010780:	b913      	cbnz	r3, 8010788 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8010782:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8010784:	f7f1 ff6e 	bl	8002664 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8010788:	2301      	movs	r3, #1
 801078a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 801078c:	2000      	movs	r0, #0
}
 801078e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8010790:	2001      	movs	r0, #1
 8010792:	e7fc      	b.n	801078e <HAL_CRC_Init+0x1a>

08010794 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8010794:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8010796:	4604      	mov	r4, r0
 8010798:	b320      	cbz	r0, 80107e4 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 801079a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 801079e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80107a2:	b91b      	cbnz	r3, 80107ac <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80107a4:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80107a8:	f7f1 ff74 	bl	8002694 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80107ac:	2302      	movs	r3, #2
 80107ae:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80107b2:	6823      	ldr	r3, [r4, #0]
 80107b4:	6861      	ldr	r1, [r4, #4]
 80107b6:	681a      	ldr	r2, [r3, #0]
 80107b8:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80107bc:	430a      	orrs	r2, r1
 80107be:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80107c0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80107c2:	68a1      	ldr	r1, [r4, #8]
 80107c4:	f022 0207 	bic.w	r2, r2, #7
 80107c8:	430a      	orrs	r2, r1
 80107ca:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80107cc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80107ce:	68e1      	ldr	r1, [r4, #12]
 80107d0:	f36f 020d 	bfc	r2, #0, #14
 80107d4:	430a      	orrs	r2, r1
 80107d6:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80107d8:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80107da:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80107dc:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80107de:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80107e2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80107e4:	2001      	movs	r0, #1
 80107e6:	e7fc      	b.n	80107e2 <HAL_DMA2D_Init+0x4e>

080107e8 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80107e8:	4770      	bx	lr

080107ea <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80107ea:	4770      	bx	lr

080107ec <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80107ec:	6803      	ldr	r3, [r0, #0]
{
 80107ee:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80107f0:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80107f2:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80107f4:	07f2      	lsls	r2, r6, #31
{
 80107f6:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80107f8:	d514      	bpl.n	8010824 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80107fa:	05e9      	lsls	r1, r5, #23
 80107fc:	d512      	bpl.n	8010824 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80107fe:	681a      	ldr	r2, [r3, #0]
 8010800:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8010804:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8010806:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8010808:	f042 0201 	orr.w	r2, r2, #1
 801080c:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 801080e:	2201      	movs	r2, #1
 8010810:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8010812:	2304      	movs	r3, #4
 8010814:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8010818:	2300      	movs	r3, #0
 801081a:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 801081e:	6943      	ldr	r3, [r0, #20]
 8010820:	b103      	cbz	r3, 8010824 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8010822:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8010824:	06b2      	lsls	r2, r6, #26
 8010826:	d516      	bpl.n	8010856 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8010828:	04ab      	lsls	r3, r5, #18
 801082a:	d514      	bpl.n	8010856 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 801082c:	6823      	ldr	r3, [r4, #0]
 801082e:	681a      	ldr	r2, [r3, #0]
 8010830:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8010834:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8010836:	2220      	movs	r2, #32
 8010838:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 801083a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801083c:	f043 0302 	orr.w	r3, r3, #2
 8010840:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8010842:	2304      	movs	r3, #4
 8010844:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8010848:	2300      	movs	r3, #0
 801084a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 801084e:	6963      	ldr	r3, [r4, #20]
 8010850:	b10b      	cbz	r3, 8010856 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8010852:	4620      	mov	r0, r4
 8010854:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8010856:	0730      	lsls	r0, r6, #28
 8010858:	d516      	bpl.n	8010888 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 801085a:	0529      	lsls	r1, r5, #20
 801085c:	d514      	bpl.n	8010888 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 801085e:	6823      	ldr	r3, [r4, #0]
 8010860:	681a      	ldr	r2, [r3, #0]
 8010862:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8010866:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8010868:	2208      	movs	r2, #8
 801086a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 801086c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801086e:	f043 0304 	orr.w	r3, r3, #4
 8010872:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8010874:	2304      	movs	r3, #4
 8010876:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 801087a:	2300      	movs	r3, #0
 801087c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8010880:	6963      	ldr	r3, [r4, #20]
 8010882:	b10b      	cbz	r3, 8010888 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8010884:	4620      	mov	r0, r4
 8010886:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8010888:	0772      	lsls	r2, r6, #29
 801088a:	d50b      	bpl.n	80108a4 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 801088c:	056b      	lsls	r3, r5, #21
 801088e:	d509      	bpl.n	80108a4 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8010890:	6823      	ldr	r3, [r4, #0]
 8010892:	681a      	ldr	r2, [r3, #0]
 8010894:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8010898:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 801089a:	2204      	movs	r2, #4
 801089c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 801089e:	4620      	mov	r0, r4
 80108a0:	f7ff ffa2 	bl	80107e8 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80108a4:	07b0      	lsls	r0, r6, #30
 80108a6:	d514      	bpl.n	80108d2 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80108a8:	05a9      	lsls	r1, r5, #22
 80108aa:	d512      	bpl.n	80108d2 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80108ac:	6823      	ldr	r3, [r4, #0]
 80108ae:	681a      	ldr	r2, [r3, #0]
 80108b0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80108b4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80108b6:	2202      	movs	r2, #2
 80108b8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80108ba:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80108bc:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80108be:	2301      	movs	r3, #1
 80108c0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80108c4:	2300      	movs	r3, #0
 80108c6:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 80108ca:	6923      	ldr	r3, [r4, #16]
 80108cc:	b10b      	cbz	r3, 80108d2 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80108ce:	4620      	mov	r0, r4
 80108d0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80108d2:	06f2      	lsls	r2, r6, #27
 80108d4:	d513      	bpl.n	80108fe <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80108d6:	04eb      	lsls	r3, r5, #19
 80108d8:	d511      	bpl.n	80108fe <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80108da:	6823      	ldr	r3, [r4, #0]
 80108dc:	681a      	ldr	r2, [r3, #0]
 80108de:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80108e2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80108e4:	2210      	movs	r2, #16
 80108e6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80108e8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80108ea:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80108ec:	2301      	movs	r3, #1
 80108ee:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80108f2:	2300      	movs	r3, #0
 80108f4:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80108f8:	4620      	mov	r0, r4
 80108fa:	f7ff ff76 	bl	80107ea <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80108fe:	bd70      	pop	{r4, r5, r6, pc}

08010900 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8010900:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8010902:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8010906:	2a01      	cmp	r2, #1
{
 8010908:	4603      	mov	r3, r0
 801090a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 801090e:	d02b      	beq.n	8010968 <HAL_DMA2D_ConfigLayer+0x68>
 8010910:	2201      	movs	r2, #1
 8010912:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8010916:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 801091a:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 801091e:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8010922:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8010924:	4f17      	ldr	r7, [pc, #92]	@ (8010984 <HAL_DMA2D_ConfigLayer+0x84>)
 8010926:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 801092a:	3c09      	subs	r4, #9
 801092c:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 801092e:	bf9c      	itt	ls
 8010930:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8010934:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8010936:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 801093a:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 801093c:	bf88      	it	hi
 801093e:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8010942:	b991      	cbnz	r1, 801096a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8010944:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8010946:	4039      	ands	r1, r7
 8010948:	4301      	orrs	r1, r0
 801094a:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 801094c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 801094e:	6999      	ldr	r1, [r3, #24]
 8010950:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8010952:	d803      	bhi.n	801095c <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8010954:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8010956:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 801095a:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 801095c:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 801095e:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8010960:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8010964:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8010968:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 801096a:	69d1      	ldr	r1, [r2, #28]
 801096c:	4039      	ands	r1, r7
 801096e:	4301      	orrs	r1, r0
 8010970:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8010972:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8010974:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8010976:	6989      	ldr	r1, [r1, #24]
 8010978:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 801097a:	bf9c      	itt	ls
 801097c:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8010980:	6215      	strls	r5, [r2, #32]
 8010982:	e7eb      	b.n	801095c <HAL_DMA2D_ConfigLayer+0x5c>
 8010984:	00fcfff0 	.word	0x00fcfff0

08010988 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8010988:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 801098c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8010b4c <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8010990:	4a6c      	ldr	r2, [pc, #432]	@ (8010b44 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8010992:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8010994:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8010996:	2401      	movs	r4, #1
 8010998:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 801099a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 801099e:	43ac      	bics	r4, r5
 80109a0:	f040 80b7 	bne.w	8010b12 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80109a4:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80109a6:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80109a8:	f005 0403 	and.w	r4, r5, #3
 80109ac:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80109b0:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80109b4:	1e67      	subs	r7, r4, #1
 80109b6:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80109b8:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80109bc:	d834      	bhi.n	8010a28 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80109be:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80109c0:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80109c4:	68cf      	ldr	r7, [r1, #12]
 80109c6:	fa07 f708 	lsl.w	r7, r7, r8
 80109ca:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80109ce:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80109d0:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80109d2:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80109d6:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80109da:	409f      	lsls	r7, r3
 80109dc:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80109e0:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80109e2:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80109e4:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80109e8:	688f      	ldr	r7, [r1, #8]
 80109ea:	fa07 f708 	lsl.w	r7, r7, r8
 80109ee:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80109f2:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80109f4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80109f6:	d119      	bne.n	8010a2c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80109f8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80109fc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8010a00:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8010a04:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8010a08:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8010a0c:	f04f 0e0f 	mov.w	lr, #15
 8010a10:	fa0e fe0b 	lsl.w	lr, lr, fp
 8010a14:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8010a18:	690f      	ldr	r7, [r1, #16]
 8010a1a:	fa07 f70b 	lsl.w	r7, r7, fp
 8010a1e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8010a22:	f8ca 7020 	str.w	r7, [sl, #32]
 8010a26:	e001      	b.n	8010a2c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8010a28:	2c03      	cmp	r4, #3
 8010a2a:	d1da      	bne.n	80109e2 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8010a2c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8010a2e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8010a32:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8010a36:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8010a38:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8010a3c:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8010a3e:	d068      	beq.n	8010b12 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8010a40:	2400      	movs	r4, #0
 8010a42:	9401      	str	r4, [sp, #4]
 8010a44:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8010a48:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8010a4c:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8010a50:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8010a54:	f023 0703 	bic.w	r7, r3, #3
 8010a58:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8010a5c:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8010a60:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8010a64:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8010a66:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8010a6a:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8010a6c:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8010a70:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8010a74:	240f      	movs	r4, #15
 8010a76:	fa04 f40c 	lsl.w	r4, r4, ip
 8010a7a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8010a7e:	4c32      	ldr	r4, [pc, #200]	@ (8010b48 <HAL_GPIO_Init+0x1c0>)
 8010a80:	42a0      	cmp	r0, r4
 8010a82:	d04d      	beq.n	8010b20 <HAL_GPIO_Init+0x198>
 8010a84:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010a88:	42a0      	cmp	r0, r4
 8010a8a:	d04b      	beq.n	8010b24 <HAL_GPIO_Init+0x19c>
 8010a8c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010a90:	42a0      	cmp	r0, r4
 8010a92:	d049      	beq.n	8010b28 <HAL_GPIO_Init+0x1a0>
 8010a94:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010a98:	42a0      	cmp	r0, r4
 8010a9a:	d047      	beq.n	8010b2c <HAL_GPIO_Init+0x1a4>
 8010a9c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010aa0:	42a0      	cmp	r0, r4
 8010aa2:	d045      	beq.n	8010b30 <HAL_GPIO_Init+0x1a8>
 8010aa4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010aa8:	42a0      	cmp	r0, r4
 8010aaa:	d043      	beq.n	8010b34 <HAL_GPIO_Init+0x1ac>
 8010aac:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010ab0:	42a0      	cmp	r0, r4
 8010ab2:	d041      	beq.n	8010b38 <HAL_GPIO_Init+0x1b0>
 8010ab4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010ab8:	42a0      	cmp	r0, r4
 8010aba:	d03f      	beq.n	8010b3c <HAL_GPIO_Init+0x1b4>
 8010abc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010ac0:	42a0      	cmp	r0, r4
 8010ac2:	d03d      	beq.n	8010b40 <HAL_GPIO_Init+0x1b8>
 8010ac4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8010ac8:	42a0      	cmp	r0, r4
 8010aca:	bf14      	ite	ne
 8010acc:	240a      	movne	r4, #10
 8010ace:	2409      	moveq	r4, #9
 8010ad0:	fa04 f40c 	lsl.w	r4, r4, ip
 8010ad4:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8010ad8:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8010ada:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8010adc:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8010ade:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8010ae2:	bf0c      	ite	eq
 8010ae4:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8010ae6:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8010ae8:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8010aea:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8010aec:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8010af0:	bf0c      	ite	eq
 8010af2:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8010af4:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8010af6:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8010af8:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8010afa:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 8010afe:	bf0c      	ite	eq
 8010b00:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8010b02:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8010b04:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8010b06:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8010b08:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8010b0a:	bf54      	ite	pl
 8010b0c:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8010b0e:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8010b10:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8010b12:	3301      	adds	r3, #1
 8010b14:	2b10      	cmp	r3, #16
 8010b16:	f47f af3d 	bne.w	8010994 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8010b1a:	b003      	add	sp, #12
 8010b1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8010b20:	2400      	movs	r4, #0
 8010b22:	e7d5      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b24:	2401      	movs	r4, #1
 8010b26:	e7d3      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b28:	2402      	movs	r4, #2
 8010b2a:	e7d1      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b2c:	2403      	movs	r4, #3
 8010b2e:	e7cf      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b30:	2404      	movs	r4, #4
 8010b32:	e7cd      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b34:	2405      	movs	r4, #5
 8010b36:	e7cb      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b38:	2406      	movs	r4, #6
 8010b3a:	e7c9      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b3c:	2407      	movs	r4, #7
 8010b3e:	e7c7      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b40:	2408      	movs	r4, #8
 8010b42:	e7c5      	b.n	8010ad0 <HAL_GPIO_Init+0x148>
 8010b44:	40013c00 	.word	0x40013c00
 8010b48:	40020000 	.word	0x40020000
 8010b4c:	40023800 	.word	0x40023800

08010b50 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8010b50:	6903      	ldr	r3, [r0, #16]
 8010b52:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8010b54:	bf14      	ite	ne
 8010b56:	2001      	movne	r0, #1
 8010b58:	2000      	moveq	r0, #0
 8010b5a:	4770      	bx	lr

08010b5c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8010b5c:	b10a      	cbz	r2, 8010b62 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8010b5e:	6181      	str	r1, [r0, #24]
  }
}
 8010b60:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8010b62:	0409      	lsls	r1, r1, #16
 8010b64:	e7fb      	b.n	8010b5e <HAL_GPIO_WritePin+0x2>

08010b66 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8010b66:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8010b68:	ea01 0203 	and.w	r2, r1, r3
 8010b6c:	ea21 0103 	bic.w	r1, r1, r3
 8010b70:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8010b74:	6181      	str	r1, [r0, #24]
}
 8010b76:	4770      	bx	lr

08010b78 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8010b78:	6801      	ldr	r1, [r0, #0]
 8010b7a:	694b      	ldr	r3, [r1, #20]
 8010b7c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8010b80:	f04f 0200 	mov.w	r2, #0
 8010b84:	d010      	beq.n	8010ba8 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8010b86:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8010b8a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8010b8c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8010b8e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8010b90:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010b94:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8010b98:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8010b9a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8010b9e:	f043 0304 	orr.w	r3, r3, #4
 8010ba2:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8010ba4:	2001      	movs	r0, #1
 8010ba6:	4770      	bx	lr
  }
  return HAL_OK;
 8010ba8:	4618      	mov	r0, r3
}
 8010baa:	4770      	bx	lr

08010bac <I2C_WaitOnFlagUntilTimeout>:
{
 8010bac:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8010bb0:	4606      	mov	r6, r0
 8010bb2:	460f      	mov	r7, r1
 8010bb4:	4691      	mov	r9, r2
 8010bb6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8010bb8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8010bbc:	6833      	ldr	r3, [r6, #0]
 8010bbe:	f1ba 0f01 	cmp.w	sl, #1
 8010bc2:	bf0c      	ite	eq
 8010bc4:	695c      	ldreq	r4, [r3, #20]
 8010bc6:	699c      	ldrne	r4, [r3, #24]
 8010bc8:	ea27 0404 	bic.w	r4, r7, r4
 8010bcc:	b2a4      	uxth	r4, r4
 8010bce:	fab4 f484 	clz	r4, r4
 8010bd2:	0964      	lsrs	r4, r4, #5
 8010bd4:	45a1      	cmp	r9, r4
 8010bd6:	d001      	beq.n	8010bdc <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8010bd8:	2000      	movs	r0, #0
 8010bda:	e025      	b.n	8010c28 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8010bdc:	1c6a      	adds	r2, r5, #1
 8010bde:	d0ee      	beq.n	8010bbe <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8010be0:	f7ff fd5c 	bl	801069c <HAL_GetTick>
 8010be4:	9b08      	ldr	r3, [sp, #32]
 8010be6:	1ac0      	subs	r0, r0, r3
 8010be8:	42a8      	cmp	r0, r5
 8010bea:	d801      	bhi.n	8010bf0 <I2C_WaitOnFlagUntilTimeout+0x44>
 8010bec:	2d00      	cmp	r5, #0
 8010bee:	d1e5      	bne.n	8010bbc <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8010bf0:	6833      	ldr	r3, [r6, #0]
 8010bf2:	f1ba 0f01 	cmp.w	sl, #1
 8010bf6:	bf0c      	ite	eq
 8010bf8:	695b      	ldreq	r3, [r3, #20]
 8010bfa:	699b      	ldrne	r3, [r3, #24]
 8010bfc:	ea27 0303 	bic.w	r3, r7, r3
 8010c00:	b29b      	uxth	r3, r3
 8010c02:	fab3 f383 	clz	r3, r3
 8010c06:	095b      	lsrs	r3, r3, #5
 8010c08:	4599      	cmp	r9, r3
 8010c0a:	d1d7      	bne.n	8010bbc <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8010c0c:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8010c0e:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8010c10:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8010c12:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8010c16:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8010c1a:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8010c1c:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8010c20:	f042 0220 	orr.w	r2, r2, #32
 8010c24:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8010c26:	2001      	movs	r0, #1
}
 8010c28:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08010c2c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8010c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c30:	4604      	mov	r4, r0
 8010c32:	460f      	mov	r7, r1
 8010c34:	4616      	mov	r6, r2
 8010c36:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8010c38:	6825      	ldr	r5, [r4, #0]
 8010c3a:	6968      	ldr	r0, [r5, #20]
 8010c3c:	ea27 0000 	bic.w	r0, r7, r0
 8010c40:	b280      	uxth	r0, r0
 8010c42:	b1c0      	cbz	r0, 8010c76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8010c44:	696b      	ldr	r3, [r5, #20]
 8010c46:	055a      	lsls	r2, r3, #21
 8010c48:	d517      	bpl.n	8010c7a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010c4a:	682b      	ldr	r3, [r5, #0]
 8010c4c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8010c50:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8010c52:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8010c56:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8010c58:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8010c5a:	2300      	movs	r3, #0
 8010c5c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8010c5e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010c62:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8010c66:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010c68:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010c6c:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8010c6e:	2300      	movs	r3, #0
 8010c70:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8010c74:	2001      	movs	r0, #1
}
 8010c76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8010c7a:	1c73      	adds	r3, r6, #1
 8010c7c:	d0dd      	beq.n	8010c3a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8010c7e:	f7ff fd0d 	bl	801069c <HAL_GetTick>
 8010c82:	eba0 0008 	sub.w	r0, r0, r8
 8010c86:	42b0      	cmp	r0, r6
 8010c88:	d801      	bhi.n	8010c8e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8010c8a:	2e00      	cmp	r6, #0
 8010c8c:	d1d4      	bne.n	8010c38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8010c8e:	6823      	ldr	r3, [r4, #0]
 8010c90:	695a      	ldr	r2, [r3, #20]
 8010c92:	ea27 0202 	bic.w	r2, r7, r2
 8010c96:	b292      	uxth	r2, r2
 8010c98:	2a00      	cmp	r2, #0
 8010c9a:	d0cd      	beq.n	8010c38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8010c9c:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8010c9e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8010ca0:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8010ca2:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010ca6:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010caa:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010cac:	4313      	orrs	r3, r2
 8010cae:	e7dd      	b.n	8010c6c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08010cb0 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8010cb0:	b570      	push	{r4, r5, r6, lr}
 8010cb2:	4604      	mov	r4, r0
 8010cb4:	460d      	mov	r5, r1
 8010cb6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8010cb8:	6823      	ldr	r3, [r4, #0]
 8010cba:	695b      	ldr	r3, [r3, #20]
 8010cbc:	061b      	lsls	r3, r3, #24
 8010cbe:	d501      	bpl.n	8010cc4 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8010cc0:	2000      	movs	r0, #0
 8010cc2:	e01e      	b.n	8010d02 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8010cc4:	4620      	mov	r0, r4
 8010cc6:	f7ff ff57 	bl	8010b78 <I2C_IsAcknowledgeFailed>
 8010cca:	b9c8      	cbnz	r0, 8010d00 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8010ccc:	1c6a      	adds	r2, r5, #1
 8010cce:	d0f3      	beq.n	8010cb8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8010cd0:	f7ff fce4 	bl	801069c <HAL_GetTick>
 8010cd4:	1b80      	subs	r0, r0, r6
 8010cd6:	42a8      	cmp	r0, r5
 8010cd8:	d801      	bhi.n	8010cde <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8010cda:	2d00      	cmp	r5, #0
 8010cdc:	d1ec      	bne.n	8010cb8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8010cde:	6823      	ldr	r3, [r4, #0]
 8010ce0:	695b      	ldr	r3, [r3, #20]
 8010ce2:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8010ce6:	d1e7      	bne.n	8010cb8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8010ce8:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8010cea:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8010cec:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010cf0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010cf4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8010cf6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010cfa:	f042 0220 	orr.w	r2, r2, #32
 8010cfe:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8010d00:	2001      	movs	r0, #1
}
 8010d02:	bd70      	pop	{r4, r5, r6, pc}

08010d04 <I2C_RequestMemoryWrite>:
{
 8010d04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d08:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010d0a:	6802      	ldr	r2, [r0, #0]
{
 8010d0c:	b085      	sub	sp, #20
 8010d0e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8010d12:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010d14:	6813      	ldr	r3, [r2, #0]
 8010d16:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8010d1a:	6013      	str	r3, [r2, #0]
{
 8010d1c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010d1e:	463b      	mov	r3, r7
 8010d20:	f8cd 8000 	str.w	r8, [sp]
 8010d24:	2200      	movs	r2, #0
 8010d26:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8010d2a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010d2c:	f7ff ff3e 	bl	8010bac <I2C_WaitOnFlagUntilTimeout>
 8010d30:	6823      	ldr	r3, [r4, #0]
 8010d32:	b138      	cbz	r0, 8010d44 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8010d34:	681b      	ldr	r3, [r3, #0]
 8010d36:	05db      	lsls	r3, r3, #23
 8010d38:	d502      	bpl.n	8010d40 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8010d3a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8010d3e:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8010d40:	2603      	movs	r6, #3
 8010d42:	e020      	b.n	8010d86 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8010d44:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8010d48:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8010d4a:	491a      	ldr	r1, [pc, #104]	@ (8010db4 <I2C_RequestMemoryWrite+0xb0>)
 8010d4c:	4643      	mov	r3, r8
 8010d4e:	463a      	mov	r2, r7
 8010d50:	4620      	mov	r0, r4
 8010d52:	f7ff ff6b 	bl	8010c2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010d56:	b9a8      	cbnz	r0, 8010d84 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010d58:	6823      	ldr	r3, [r4, #0]
 8010d5a:	9003      	str	r0, [sp, #12]
 8010d5c:	695a      	ldr	r2, [r3, #20]
 8010d5e:	9203      	str	r2, [sp, #12]
 8010d60:	699b      	ldr	r3, [r3, #24]
 8010d62:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010d64:	4642      	mov	r2, r8
 8010d66:	4639      	mov	r1, r7
 8010d68:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010d6a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010d6c:	f7ff ffa0 	bl	8010cb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8010d70:	4606      	mov	r6, r0
 8010d72:	b160      	cbz	r0, 8010d8e <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8010d74:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010d76:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010d78:	bf01      	itttt	eq
 8010d7a:	6822      	ldreq	r2, [r4, #0]
 8010d7c:	6813      	ldreq	r3, [r2, #0]
 8010d7e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8010d82:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8010d84:	2601      	movs	r6, #1
}
 8010d86:	4630      	mov	r0, r6
 8010d88:	b005      	add	sp, #20
 8010d8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010d8e:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010d92:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010d94:	d102      	bne.n	8010d9c <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010d96:	b2ed      	uxtb	r5, r5
 8010d98:	611d      	str	r5, [r3, #16]
 8010d9a:	e7f4      	b.n	8010d86 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8010d9c:	0a2a      	lsrs	r2, r5, #8
 8010d9e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010da0:	4639      	mov	r1, r7
 8010da2:	4642      	mov	r2, r8
 8010da4:	4620      	mov	r0, r4
 8010da6:	f7ff ff83 	bl	8010cb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8010daa:	2800      	cmp	r0, #0
 8010dac:	d1e2      	bne.n	8010d74 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010dae:	6823      	ldr	r3, [r4, #0]
 8010db0:	e7f1      	b.n	8010d96 <I2C_RequestMemoryWrite+0x92>
 8010db2:	bf00      	nop
 8010db4:	00010002 	.word	0x00010002

08010db8 <I2C_RequestMemoryRead>:
{
 8010db8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010dbc:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8010dbe:	6803      	ldr	r3, [r0, #0]
{
 8010dc0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8010dc2:	681a      	ldr	r2, [r3, #0]
 8010dc4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8010dc8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010dca:	681a      	ldr	r2, [r3, #0]
{
 8010dcc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010dd0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8010dd4:	601a      	str	r2, [r3, #0]
{
 8010dd6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010dd8:	463b      	mov	r3, r7
 8010dda:	f8cd 8000 	str.w	r8, [sp]
 8010dde:	2200      	movs	r2, #0
 8010de0:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8010de4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010de6:	f7ff fee1 	bl	8010bac <I2C_WaitOnFlagUntilTimeout>
 8010dea:	6823      	ldr	r3, [r4, #0]
 8010dec:	b138      	cbz	r0, 8010dfe <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8010dee:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8010df0:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8010df2:	bf44      	itt	mi
 8010df4:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8010df8:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8010dfa:	2003      	movs	r0, #3
 8010dfc:	e021      	b.n	8010e42 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8010dfe:	fa5f f986 	uxtb.w	r9, r6
 8010e02:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8010e06:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8010e08:	492b      	ldr	r1, [pc, #172]	@ (8010eb8 <I2C_RequestMemoryRead+0x100>)
 8010e0a:	4643      	mov	r3, r8
 8010e0c:	463a      	mov	r2, r7
 8010e0e:	4620      	mov	r0, r4
 8010e10:	f7ff ff0c 	bl	8010c2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010e14:	b9a0      	cbnz	r0, 8010e40 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010e16:	6823      	ldr	r3, [r4, #0]
 8010e18:	9003      	str	r0, [sp, #12]
 8010e1a:	695a      	ldr	r2, [r3, #20]
 8010e1c:	9203      	str	r2, [sp, #12]
 8010e1e:	699b      	ldr	r3, [r3, #24]
 8010e20:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010e22:	4642      	mov	r2, r8
 8010e24:	4639      	mov	r1, r7
 8010e26:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8010e28:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010e2a:	f7ff ff41 	bl	8010cb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8010e2e:	b158      	cbz	r0, 8010e48 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8010e30:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010e32:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010e34:	bf01      	itttt	eq
 8010e36:	6822      	ldreq	r2, [r4, #0]
 8010e38:	6813      	ldreq	r3, [r2, #0]
 8010e3a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8010e3e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8010e40:	2001      	movs	r0, #1
}
 8010e42:	b004      	add	sp, #16
 8010e44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010e48:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8010e4c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8010e4e:	d11a      	bne.n	8010e86 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010e50:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010e52:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010e54:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010e56:	4639      	mov	r1, r7
 8010e58:	4620      	mov	r0, r4
 8010e5a:	f7ff ff29 	bl	8010cb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8010e5e:	4602      	mov	r2, r0
 8010e60:	2800      	cmp	r0, #0
 8010e62:	d1e5      	bne.n	8010e30 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8010e64:	6821      	ldr	r1, [r4, #0]
 8010e66:	680b      	ldr	r3, [r1, #0]
 8010e68:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8010e6c:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8010e6e:	4620      	mov	r0, r4
 8010e70:	f8cd 8000 	str.w	r8, [sp]
 8010e74:	463b      	mov	r3, r7
 8010e76:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8010e7a:	f7ff fe97 	bl	8010bac <I2C_WaitOnFlagUntilTimeout>
 8010e7e:	6822      	ldr	r2, [r4, #0]
 8010e80:	b160      	cbz	r0, 8010e9c <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8010e82:	6813      	ldr	r3, [r2, #0]
 8010e84:	e7b4      	b.n	8010df0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8010e86:	0a2a      	lsrs	r2, r5, #8
 8010e88:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8010e8a:	4639      	mov	r1, r7
 8010e8c:	4642      	mov	r2, r8
 8010e8e:	4620      	mov	r0, r4
 8010e90:	f7ff ff0e 	bl	8010cb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8010e94:	2800      	cmp	r0, #0
 8010e96:	d1cb      	bne.n	8010e30 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8010e98:	6823      	ldr	r3, [r4, #0]
 8010e9a:	e7d9      	b.n	8010e50 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8010e9c:	f049 0301 	orr.w	r3, r9, #1
 8010ea0:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8010ea2:	4905      	ldr	r1, [pc, #20]	@ (8010eb8 <I2C_RequestMemoryRead+0x100>)
 8010ea4:	4643      	mov	r3, r8
 8010ea6:	463a      	mov	r2, r7
 8010ea8:	4620      	mov	r0, r4
 8010eaa:	f7ff febf 	bl	8010c2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010eae:	3800      	subs	r0, #0
 8010eb0:	bf18      	it	ne
 8010eb2:	2001      	movne	r0, #1
 8010eb4:	e7c5      	b.n	8010e42 <I2C_RequestMemoryRead+0x8a>
 8010eb6:	bf00      	nop
 8010eb8:	00010002 	.word	0x00010002

08010ebc <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8010ebc:	b570      	push	{r4, r5, r6, lr}
 8010ebe:	4604      	mov	r4, r0
 8010ec0:	460d      	mov	r5, r1
 8010ec2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8010ec4:	6823      	ldr	r3, [r4, #0]
 8010ec6:	695b      	ldr	r3, [r3, #20]
 8010ec8:	075b      	lsls	r3, r3, #29
 8010eca:	d501      	bpl.n	8010ed0 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8010ecc:	2000      	movs	r0, #0
 8010ece:	e01e      	b.n	8010f0e <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8010ed0:	4620      	mov	r0, r4
 8010ed2:	f7ff fe51 	bl	8010b78 <I2C_IsAcknowledgeFailed>
 8010ed6:	b9c8      	cbnz	r0, 8010f0c <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8010ed8:	1c6a      	adds	r2, r5, #1
 8010eda:	d0f3      	beq.n	8010ec4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8010edc:	f7ff fbde 	bl	801069c <HAL_GetTick>
 8010ee0:	1b80      	subs	r0, r0, r6
 8010ee2:	42a8      	cmp	r0, r5
 8010ee4:	d801      	bhi.n	8010eea <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8010ee6:	2d00      	cmp	r5, #0
 8010ee8:	d1ec      	bne.n	8010ec4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8010eea:	6823      	ldr	r3, [r4, #0]
 8010eec:	695b      	ldr	r3, [r3, #20]
 8010eee:	f013 0304 	ands.w	r3, r3, #4
 8010ef2:	d1e7      	bne.n	8010ec4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8010ef4:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8010ef6:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8010ef8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010efc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010f00:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8010f02:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010f06:	f042 0220 	orr.w	r2, r2, #32
 8010f0a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8010f0c:	2001      	movs	r0, #1
}
 8010f0e:	bd70      	pop	{r4, r5, r6, pc}

08010f10 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8010f10:	b570      	push	{r4, r5, r6, lr}
 8010f12:	4604      	mov	r4, r0
 8010f14:	460d      	mov	r5, r1
 8010f16:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8010f18:	6821      	ldr	r1, [r4, #0]
 8010f1a:	694b      	ldr	r3, [r1, #20]
 8010f1c:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8010f20:	d001      	beq.n	8010f26 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8010f22:	2000      	movs	r0, #0
 8010f24:	e011      	b.n	8010f4a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8010f26:	694a      	ldr	r2, [r1, #20]
 8010f28:	06d2      	lsls	r2, r2, #27
 8010f2a:	d50f      	bpl.n	8010f4c <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8010f2c:	f06f 0210 	mvn.w	r2, #16
 8010f30:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8010f32:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8010f34:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8010f36:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010f3a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8010f3e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010f40:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8010f42:	2300      	movs	r3, #0
 8010f44:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8010f48:	2001      	movs	r0, #1
}
 8010f4a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8010f4c:	f7ff fba6 	bl	801069c <HAL_GetTick>
 8010f50:	1b80      	subs	r0, r0, r6
 8010f52:	42a8      	cmp	r0, r5
 8010f54:	d801      	bhi.n	8010f5a <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8010f56:	2d00      	cmp	r5, #0
 8010f58:	d1de      	bne.n	8010f18 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8010f5a:	6823      	ldr	r3, [r4, #0]
 8010f5c:	695b      	ldr	r3, [r3, #20]
 8010f5e:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8010f62:	d1d9      	bne.n	8010f18 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8010f64:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8010f66:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8010f68:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8010f6c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8010f70:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010f72:	4313      	orrs	r3, r2
 8010f74:	e7e4      	b.n	8010f40 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08010f78 <HAL_I2C_Init>:
{
 8010f78:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8010f7a:	4604      	mov	r4, r0
 8010f7c:	b908      	cbnz	r0, 8010f82 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8010f7e:	2001      	movs	r0, #1
}
 8010f80:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8010f82:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8010f86:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8010f8a:	b91b      	cbnz	r3, 8010f94 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8010f8c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8010f90:	f7f1 fba2 	bl	80026d8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8010f94:	2324      	movs	r3, #36	@ 0x24
 8010f96:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8010f9a:	6823      	ldr	r3, [r4, #0]
 8010f9c:	681a      	ldr	r2, [r3, #0]
 8010f9e:	f022 0201 	bic.w	r2, r2, #1
 8010fa2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8010fa4:	681a      	ldr	r2, [r3, #0]
 8010fa6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8010faa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8010fac:	681a      	ldr	r2, [r3, #0]
 8010fae:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8010fb2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8010fb4:	f000 fea8 	bl	8011d08 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8010fb8:	4b3f      	ldr	r3, [pc, #252]	@ (80110b8 <HAL_I2C_Init+0x140>)
 8010fba:	6865      	ldr	r5, [r4, #4]
 8010fbc:	429d      	cmp	r5, r3
 8010fbe:	bf94      	ite	ls
 8010fc0:	4b3e      	ldrls	r3, [pc, #248]	@ (80110bc <HAL_I2C_Init+0x144>)
 8010fc2:	4b3f      	ldrhi	r3, [pc, #252]	@ (80110c0 <HAL_I2C_Init+0x148>)
 8010fc4:	4298      	cmp	r0, r3
 8010fc6:	bf8c      	ite	hi
 8010fc8:	2300      	movhi	r3, #0
 8010fca:	2301      	movls	r3, #1
 8010fcc:	2b00      	cmp	r3, #0
 8010fce:	d1d6      	bne.n	8010f7e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010fd0:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8010fd2:	4e39      	ldr	r6, [pc, #228]	@ (80110b8 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010fd4:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8010fd6:	4b3b      	ldr	r3, [pc, #236]	@ (80110c4 <HAL_I2C_Init+0x14c>)
 8010fd8:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010fdc:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8010fe0:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8010fe2:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8010fe4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8010fe6:	bf88      	it	hi
 8010fe8:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8010fec:	6a11      	ldr	r1, [r2, #32]
 8010fee:	bf88      	it	hi
 8010ff0:	4373      	mulhi	r3, r6
 8010ff2:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8010ff6:	bf84      	itt	hi
 8010ff8:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8010ffc:	fbb3 f3f6 	udivhi	r3, r3, r6
 8011000:	3301      	adds	r3, #1
 8011002:	430b      	orrs	r3, r1
 8011004:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8011006:	69d1      	ldr	r1, [r2, #28]
 8011008:	1e43      	subs	r3, r0, #1
 801100a:	482b      	ldr	r0, [pc, #172]	@ (80110b8 <HAL_I2C_Init+0x140>)
 801100c:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8011010:	4285      	cmp	r5, r0
 8011012:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8011016:	d832      	bhi.n	801107e <HAL_I2C_Init+0x106>
 8011018:	006d      	lsls	r5, r5, #1
 801101a:	f640 70fc 	movw	r0, #4092	@ 0xffc
 801101e:	fbb3 f3f5 	udiv	r3, r3, r5
 8011022:	3301      	adds	r3, #1
 8011024:	4203      	tst	r3, r0
 8011026:	d042      	beq.n	80110ae <HAL_I2C_Init+0x136>
 8011028:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801102c:	4319      	orrs	r1, r3
 801102e:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8011030:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8011034:	6811      	ldr	r1, [r2, #0]
 8011036:	4303      	orrs	r3, r0
 8011038:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 801103c:	430b      	orrs	r3, r1
 801103e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8011040:	6891      	ldr	r1, [r2, #8]
 8011042:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8011046:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 801104a:	4303      	orrs	r3, r0
 801104c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8011050:	430b      	orrs	r3, r1
 8011052:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8011054:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8011058:	68d1      	ldr	r1, [r2, #12]
 801105a:	4303      	orrs	r3, r0
 801105c:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8011060:	430b      	orrs	r3, r1
 8011062:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8011064:	6813      	ldr	r3, [r2, #0]
 8011066:	f043 0301 	orr.w	r3, r3, #1
 801106a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 801106c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 801106e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8011070:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8011072:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8011076:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8011078:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 801107c:	e780      	b.n	8010f80 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 801107e:	68a0      	ldr	r0, [r4, #8]
 8011080:	b950      	cbnz	r0, 8011098 <HAL_I2C_Init+0x120>
 8011082:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8011086:	fbb3 f3f5 	udiv	r3, r3, r5
 801108a:	3301      	adds	r3, #1
 801108c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8011090:	b17b      	cbz	r3, 80110b2 <HAL_I2C_Init+0x13a>
 8011092:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8011096:	e7c9      	b.n	801102c <HAL_I2C_Init+0xb4>
 8011098:	2019      	movs	r0, #25
 801109a:	4368      	muls	r0, r5
 801109c:	fbb3 f3f0 	udiv	r3, r3, r0
 80110a0:	3301      	adds	r3, #1
 80110a2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80110a6:	b123      	cbz	r3, 80110b2 <HAL_I2C_Init+0x13a>
 80110a8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80110ac:	e7be      	b.n	801102c <HAL_I2C_Init+0xb4>
 80110ae:	2304      	movs	r3, #4
 80110b0:	e7bc      	b.n	801102c <HAL_I2C_Init+0xb4>
 80110b2:	2301      	movs	r3, #1
 80110b4:	e7ba      	b.n	801102c <HAL_I2C_Init+0xb4>
 80110b6:	bf00      	nop
 80110b8:	000186a0 	.word	0x000186a0
 80110bc:	001e847f 	.word	0x001e847f
 80110c0:	003d08ff 	.word	0x003d08ff
 80110c4:	000f4240 	.word	0x000f4240

080110c8 <HAL_I2C_Mem_Write>:
{
 80110c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80110cc:	4604      	mov	r4, r0
 80110ce:	4699      	mov	r9, r3
 80110d0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80110d2:	460f      	mov	r7, r1
 80110d4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80110d6:	f7ff fae1 	bl	801069c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80110da:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80110de:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80110e0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80110e2:	d003      	beq.n	80110ec <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 80110e4:	2002      	movs	r0, #2
}
 80110e6:	b003      	add	sp, #12
 80110e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80110ec:	9000      	str	r0, [sp, #0]
 80110ee:	493c      	ldr	r1, [pc, #240]	@ (80111e0 <HAL_I2C_Mem_Write+0x118>)
 80110f0:	2319      	movs	r3, #25
 80110f2:	2201      	movs	r2, #1
 80110f4:	4620      	mov	r0, r4
 80110f6:	f7ff fd59 	bl	8010bac <I2C_WaitOnFlagUntilTimeout>
 80110fa:	2800      	cmp	r0, #0
 80110fc:	d1f2      	bne.n	80110e4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80110fe:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8011102:	2b01      	cmp	r3, #1
 8011104:	d0ee      	beq.n	80110e4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8011106:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8011108:	2301      	movs	r3, #1
 801110a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 801110e:	6803      	ldr	r3, [r0, #0]
 8011110:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8011112:	bf5e      	ittt	pl
 8011114:	6803      	ldrpl	r3, [r0, #0]
 8011116:	f043 0301 	orrpl.w	r3, r3, #1
 801111a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 801111c:	6803      	ldr	r3, [r0, #0]
 801111e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8011122:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8011124:	2321      	movs	r3, #33	@ 0x21
 8011126:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 801112a:	2340      	movs	r3, #64	@ 0x40
 801112c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8011130:	2300      	movs	r3, #0
 8011132:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8011134:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8011136:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8011138:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801113c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 801113e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8011140:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8011142:	4b28      	ldr	r3, [pc, #160]	@ (80111e4 <HAL_I2C_Mem_Write+0x11c>)
 8011144:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8011146:	4642      	mov	r2, r8
 8011148:	e9cd 6500 	strd	r6, r5, [sp]
 801114c:	464b      	mov	r3, r9
 801114e:	4639      	mov	r1, r7
 8011150:	4620      	mov	r0, r4
 8011152:	f7ff fdd7 	bl	8010d04 <I2C_RequestMemoryWrite>
 8011156:	2800      	cmp	r0, #0
 8011158:	d02a      	beq.n	80111b0 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 801115a:	2001      	movs	r0, #1
 801115c:	e7c3      	b.n	80110e6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 801115e:	f7ff fda7 	bl	8010cb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8011162:	b140      	cbz	r0, 8011176 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8011164:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8011166:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8011168:	bf01      	itttt	eq
 801116a:	6822      	ldreq	r2, [r4, #0]
 801116c:	6813      	ldreq	r3, [r2, #0]
 801116e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8011172:	6013      	streq	r3, [r2, #0]
 8011174:	e7f1      	b.n	801115a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8011176:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011178:	6827      	ldr	r7, [r4, #0]
 801117a:	461a      	mov	r2, r3
 801117c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8011180:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8011182:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8011184:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8011186:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8011188:	3a01      	subs	r2, #1
 801118a:	b292      	uxth	r2, r2
 801118c:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 801118e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8011190:	1e48      	subs	r0, r1, #1
 8011192:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8011194:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8011196:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8011198:	d50a      	bpl.n	80111b0 <HAL_I2C_Mem_Write+0xe8>
 801119a:	b148      	cbz	r0, 80111b0 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 801119c:	785a      	ldrb	r2, [r3, #1]
 801119e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80111a0:	3302      	adds	r3, #2
 80111a2:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 80111a4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80111a6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80111a8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80111aa:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80111ac:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 80111ae:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 80111b0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80111b2:	462a      	mov	r2, r5
 80111b4:	4631      	mov	r1, r6
 80111b6:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80111b8:	2b00      	cmp	r3, #0
 80111ba:	d1d0      	bne.n	801115e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80111bc:	f7ff fe7e 	bl	8010ebc <I2C_WaitOnBTFFlagUntilTimeout>
 80111c0:	2800      	cmp	r0, #0
 80111c2:	d1cf      	bne.n	8011164 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80111c4:	6822      	ldr	r2, [r4, #0]
 80111c6:	6813      	ldr	r3, [r2, #0]
 80111c8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80111cc:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80111ce:	2320      	movs	r3, #32
 80111d0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 80111d4:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80111d8:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 80111dc:	e783      	b.n	80110e6 <HAL_I2C_Mem_Write+0x1e>
 80111de:	bf00      	nop
 80111e0:	00100002 	.word	0x00100002
 80111e4:	ffff0000 	.word	0xffff0000

080111e8 <HAL_I2C_Mem_Read>:
{
 80111e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80111ec:	4604      	mov	r4, r0
 80111ee:	b087      	sub	sp, #28
 80111f0:	4699      	mov	r9, r3
 80111f2:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 80111f4:	460d      	mov	r5, r1
 80111f6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80111f8:	f7ff fa50 	bl	801069c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80111fc:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8011200:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8011202:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8011204:	d004      	beq.n	8011210 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8011206:	2502      	movs	r5, #2
}
 8011208:	4628      	mov	r0, r5
 801120a:	b007      	add	sp, #28
 801120c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8011210:	9000      	str	r0, [sp, #0]
 8011212:	497a      	ldr	r1, [pc, #488]	@ (80113fc <HAL_I2C_Mem_Read+0x214>)
 8011214:	2319      	movs	r3, #25
 8011216:	2201      	movs	r2, #1
 8011218:	4620      	mov	r0, r4
 801121a:	f7ff fcc7 	bl	8010bac <I2C_WaitOnFlagUntilTimeout>
 801121e:	2800      	cmp	r0, #0
 8011220:	d1f1      	bne.n	8011206 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8011222:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8011226:	2b01      	cmp	r3, #1
 8011228:	d0ed      	beq.n	8011206 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 801122a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 801122c:	2301      	movs	r3, #1
 801122e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8011232:	6803      	ldr	r3, [r0, #0]
 8011234:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8011236:	bf5e      	ittt	pl
 8011238:	6803      	ldrpl	r3, [r0, #0]
 801123a:	f043 0301 	orrpl.w	r3, r3, #1
 801123e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8011240:	6803      	ldr	r3, [r0, #0]
 8011242:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8011246:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8011248:	2322      	movs	r3, #34	@ 0x22
 801124a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 801124e:	2340      	movs	r3, #64	@ 0x40
 8011250:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8011254:	2300      	movs	r3, #0
 8011256:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8011258:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801125a:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 801125c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8011260:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8011262:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8011264:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8011266:	4b66      	ldr	r3, [pc, #408]	@ (8011400 <HAL_I2C_Mem_Read+0x218>)
 8011268:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 801126a:	4629      	mov	r1, r5
 801126c:	e9cd 7600 	strd	r7, r6, [sp]
 8011270:	464b      	mov	r3, r9
 8011272:	4642      	mov	r2, r8
 8011274:	4620      	mov	r0, r4
 8011276:	f7ff fd9f 	bl	8010db8 <I2C_RequestMemoryRead>
 801127a:	4605      	mov	r5, r0
 801127c:	b108      	cbz	r0, 8011282 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 801127e:	2501      	movs	r5, #1
 8011280:	e7c2      	b.n	8011208 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8011282:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8011284:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8011286:	b9b2      	cbnz	r2, 80112b6 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8011288:	9002      	str	r0, [sp, #8]
 801128a:	695a      	ldr	r2, [r3, #20]
 801128c:	9202      	str	r2, [sp, #8]
 801128e:	699a      	ldr	r2, [r3, #24]
 8011290:	9202      	str	r2, [sp, #8]
 8011292:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8011294:	681a      	ldr	r2, [r3, #0]
 8011296:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 801129a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 801129c:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8011404 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 80112a0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80112a2:	2b00      	cmp	r3, #0
 80112a4:	d12c      	bne.n	8011300 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80112a6:	2220      	movs	r2, #32
 80112a8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 80112ac:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80112b0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 80112b4:	e7a8      	b.n	8011208 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80112b6:	2a01      	cmp	r2, #1
 80112b8:	d10a      	bne.n	80112d0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80112ba:	681a      	ldr	r2, [r3, #0]
 80112bc:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80112c0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80112c2:	9003      	str	r0, [sp, #12]
 80112c4:	695a      	ldr	r2, [r3, #20]
 80112c6:	9203      	str	r2, [sp, #12]
 80112c8:	699a      	ldr	r2, [r3, #24]
 80112ca:	9203      	str	r2, [sp, #12]
 80112cc:	9a03      	ldr	r2, [sp, #12]
 80112ce:	e7e1      	b.n	8011294 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80112d0:	2a02      	cmp	r2, #2
 80112d2:	d10e      	bne.n	80112f2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80112d4:	681a      	ldr	r2, [r3, #0]
 80112d6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80112da:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80112dc:	681a      	ldr	r2, [r3, #0]
 80112de:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80112e2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80112e4:	9004      	str	r0, [sp, #16]
 80112e6:	695a      	ldr	r2, [r3, #20]
 80112e8:	9204      	str	r2, [sp, #16]
 80112ea:	699b      	ldr	r3, [r3, #24]
 80112ec:	9304      	str	r3, [sp, #16]
 80112ee:	9b04      	ldr	r3, [sp, #16]
 80112f0:	e7d4      	b.n	801129c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80112f2:	9005      	str	r0, [sp, #20]
 80112f4:	695a      	ldr	r2, [r3, #20]
 80112f6:	9205      	str	r2, [sp, #20]
 80112f8:	699b      	ldr	r3, [r3, #24]
 80112fa:	9305      	str	r3, [sp, #20]
 80112fc:	9b05      	ldr	r3, [sp, #20]
 80112fe:	e7cd      	b.n	801129c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8011300:	2b03      	cmp	r3, #3
 8011302:	d856      	bhi.n	80113b2 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8011304:	2b01      	cmp	r3, #1
 8011306:	d115      	bne.n	8011334 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8011308:	4632      	mov	r2, r6
 801130a:	4639      	mov	r1, r7
 801130c:	4620      	mov	r0, r4
 801130e:	f7ff fdff 	bl	8010f10 <I2C_WaitOnRXNEFlagUntilTimeout>
 8011312:	2800      	cmp	r0, #0
 8011314:	d1b3      	bne.n	801127e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8011316:	6823      	ldr	r3, [r4, #0]
 8011318:	691a      	ldr	r2, [r3, #16]
 801131a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801131c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 801131e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011320:	3301      	adds	r3, #1
 8011322:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8011324:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8011326:	3b01      	subs	r3, #1
 8011328:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 801132a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 801132c:	3b01      	subs	r3, #1
 801132e:	b29b      	uxth	r3, r3
 8011330:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8011332:	e7b5      	b.n	80112a0 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8011334:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8011336:	9600      	str	r6, [sp, #0]
 8011338:	463b      	mov	r3, r7
 801133a:	f04f 0200 	mov.w	r2, #0
 801133e:	4641      	mov	r1, r8
 8011340:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8011342:	d119      	bne.n	8011378 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8011344:	f7ff fc32 	bl	8010bac <I2C_WaitOnFlagUntilTimeout>
 8011348:	2800      	cmp	r0, #0
 801134a:	d198      	bne.n	801127e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801134c:	6823      	ldr	r3, [r4, #0]
 801134e:	681a      	ldr	r2, [r3, #0]
 8011350:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8011354:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8011356:	691a      	ldr	r2, [r3, #16]
 8011358:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801135a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 801135c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 801135e:	1c53      	adds	r3, r2, #1
 8011360:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8011362:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8011364:	3b01      	subs	r3, #1
 8011366:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8011368:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 801136a:	3b01      	subs	r3, #1
 801136c:	b29b      	uxth	r3, r3
 801136e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8011370:	6823      	ldr	r3, [r4, #0]
 8011372:	691b      	ldr	r3, [r3, #16]
 8011374:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8011376:	e7d2      	b.n	801131e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8011378:	f7ff fc18 	bl	8010bac <I2C_WaitOnFlagUntilTimeout>
 801137c:	4602      	mov	r2, r0
 801137e:	2800      	cmp	r0, #0
 8011380:	f47f af7d 	bne.w	801127e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8011384:	6823      	ldr	r3, [r4, #0]
 8011386:	6819      	ldr	r1, [r3, #0]
 8011388:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 801138c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 801138e:	6919      	ldr	r1, [r3, #16]
 8011390:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011392:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8011394:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011396:	3301      	adds	r3, #1
 8011398:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 801139a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 801139c:	3b01      	subs	r3, #1
 801139e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80113a0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80113a2:	3b01      	subs	r3, #1
 80113a4:	b29b      	uxth	r3, r3
 80113a6:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80113a8:	4641      	mov	r1, r8
 80113aa:	9600      	str	r6, [sp, #0]
 80113ac:	463b      	mov	r3, r7
 80113ae:	4620      	mov	r0, r4
 80113b0:	e7c8      	b.n	8011344 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80113b2:	4632      	mov	r2, r6
 80113b4:	4639      	mov	r1, r7
 80113b6:	4620      	mov	r0, r4
 80113b8:	f7ff fdaa 	bl	8010f10 <I2C_WaitOnRXNEFlagUntilTimeout>
 80113bc:	2800      	cmp	r0, #0
 80113be:	f47f af5e 	bne.w	801127e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80113c2:	6823      	ldr	r3, [r4, #0]
 80113c4:	691a      	ldr	r2, [r3, #16]
 80113c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80113c8:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 80113ca:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 80113cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 80113ce:	3a01      	subs	r2, #1
 80113d0:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 80113d2:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 80113d4:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80113d6:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 80113d8:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 80113da:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80113dc:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 80113de:	3b01      	subs	r3, #1
 80113e0:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80113e2:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 80113e4:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80113e6:	f57f af5b 	bpl.w	80112a0 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 80113ea:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80113ec:	bf02      	ittt	eq
 80113ee:	6813      	ldreq	r3, [r2, #0]
 80113f0:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 80113f4:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80113f6:	6913      	ldr	r3, [r2, #16]
 80113f8:	704b      	strb	r3, [r1, #1]
 80113fa:	e790      	b.n	801131e <HAL_I2C_Mem_Read+0x136>
 80113fc:	00100002 	.word	0x00100002
 8011400:	ffff0000 	.word	0xffff0000
 8011404:	00010004 	.word	0x00010004

08011408 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8011408:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 801140a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 801140e:	2b20      	cmp	r3, #32
 8011410:	b2dc      	uxtb	r4, r3
 8011412:	d116      	bne.n	8011442 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8011414:	2324      	movs	r3, #36	@ 0x24
 8011416:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 801141a:	6803      	ldr	r3, [r0, #0]
 801141c:	681a      	ldr	r2, [r3, #0]
 801141e:	f022 0201 	bic.w	r2, r2, #1
 8011422:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8011424:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8011426:	f022 0210 	bic.w	r2, r2, #16
 801142a:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 801142c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 801142e:	4311      	orrs	r1, r2
 8011430:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8011432:	681a      	ldr	r2, [r3, #0]
 8011434:	f042 0201 	orr.w	r2, r2, #1
 8011438:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 801143a:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 801143e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8011440:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8011442:	2002      	movs	r0, #2
 8011444:	e7fc      	b.n	8011440 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08011446 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8011446:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8011448:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 801144c:	2b20      	cmp	r3, #32
 801144e:	b2dc      	uxtb	r4, r3
 8011450:	d116      	bne.n	8011480 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8011452:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8011454:	2324      	movs	r3, #36	@ 0x24
 8011456:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 801145a:	6813      	ldr	r3, [r2, #0]
 801145c:	f023 0301 	bic.w	r3, r3, #1
 8011460:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8011462:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8011464:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8011468:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 801146a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 801146c:	b29b      	uxth	r3, r3
 801146e:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8011470:	6813      	ldr	r3, [r2, #0]
 8011472:	f043 0301 	orr.w	r3, r3, #1
 8011476:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8011478:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 801147c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 801147e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8011480:	2002      	movs	r0, #2
 8011482:	e7fc      	b.n	801147e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08011484 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8011484:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8011486:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 801148a:	01d2      	lsls	r2, r2, #7
 801148c:	3284      	adds	r2, #132	@ 0x84
 801148e:	1883      	adds	r3, r0, r2
{
 8011490:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8011494:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8011496:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8011498:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 801149a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 801149e:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80114a2:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80114a4:	68c5      	ldr	r5, [r0, #12]
 80114a6:	f10c 0701 	add.w	r7, ip, #1
 80114aa:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80114ae:	f3c6 460b 	ubfx	r6, r6, #16, #12
 80114b2:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80114b4:	443d      	add	r5, r7
 80114b6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80114ba:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80114bc:	68c6      	ldr	r6, [r0, #12]
 80114be:	68cd      	ldr	r5, [r1, #12]
 80114c0:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80114c4:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80114c6:	689d      	ldr	r5, [r3, #8]
 80114c8:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80114cc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80114ce:	68c7      	ldr	r7, [r0, #12]
 80114d0:	688d      	ldr	r5, [r1, #8]
 80114d2:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80114d6:	3501      	adds	r5, #1
 80114d8:	443d      	add	r5, r7
 80114da:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80114de:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80114e0:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80114e2:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80114e4:	f025 0507 	bic.w	r5, r5, #7
 80114e8:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80114ea:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80114ee:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80114f0:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80114f4:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80114f6:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80114fa:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80114fe:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8011502:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8011506:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 801150a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 801150e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8011510:	695d      	ldr	r5, [r3, #20]
 8011512:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8011516:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8011518:	694d      	ldr	r5, [r1, #20]
 801151a:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 801151c:	69dd      	ldr	r5, [r3, #28]
 801151e:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8011522:	f025 0507 	bic.w	r5, r5, #7
 8011526:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8011528:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 801152c:	433d      	orrs	r5, r7
 801152e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8011530:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8011532:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8011534:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8011538:	2e07      	cmp	r6, #7
 801153a:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 801153c:	bf9c      	itt	ls
 801153e:	4d0e      	ldrls	r5, [pc, #56]	@ (8011578 <LTDC_SetConfig+0xf4>)
 8011540:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8011542:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8011544:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8011548:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 801154a:	bf88      	it	hi
 801154c:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 801154e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8011550:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8011552:	eba4 040c 	sub.w	r4, r4, ip
 8011556:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8011558:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 801155a:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 801155c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8011560:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8011562:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8011564:	f36f 040a 	bfc	r4, #0, #11
 8011568:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 801156a:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 801156c:	5883      	ldr	r3, [r0, r2]
 801156e:	f043 0301 	orr.w	r3, r3, #1
 8011572:	5083      	str	r3, [r0, r2]
}
 8011574:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011578:	080330c0 	.word	0x080330c0

0801157c <HAL_LTDC_Init>:
{
 801157c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 801157e:	4604      	mov	r4, r0
 8011580:	2800      	cmp	r0, #0
 8011582:	d063      	beq.n	801164c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8011584:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8011588:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 801158c:	b91b      	cbnz	r3, 8011596 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 801158e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8011592:	f7f1 f8fd 	bl	8002790 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8011596:	2302      	movs	r3, #2
 8011598:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 801159c:	6823      	ldr	r3, [r4, #0]
 801159e:	699a      	ldr	r2, [r3, #24]
 80115a0:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80115a4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80115a6:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80115aa:	4302      	orrs	r2, r0
 80115ac:	68e0      	ldr	r0, [r4, #12]
 80115ae:	6999      	ldr	r1, [r3, #24]
 80115b0:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80115b2:	6920      	ldr	r0, [r4, #16]
 80115b4:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80115b6:	430a      	orrs	r2, r1
 80115b8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80115ba:	689a      	ldr	r2, [r3, #8]
 80115bc:	4924      	ldr	r1, [pc, #144]	@ (8011650 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80115be:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80115c0:	400a      	ands	r2, r1
 80115c2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80115c4:	689a      	ldr	r2, [r3, #8]
 80115c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80115ca:	69a0      	ldr	r0, [r4, #24]
 80115cc:	4302      	orrs	r2, r0
 80115ce:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80115d0:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80115d2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80115d4:	400a      	ands	r2, r1
 80115d6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80115d8:	68da      	ldr	r2, [r3, #12]
 80115da:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80115de:	6a20      	ldr	r0, [r4, #32]
 80115e0:	4302      	orrs	r2, r0
 80115e2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80115e4:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80115e6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80115e8:	400a      	ands	r2, r1
 80115ea:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80115ec:	691a      	ldr	r2, [r3, #16]
 80115ee:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80115f2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80115f4:	4302      	orrs	r2, r0
 80115f6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80115f8:	695a      	ldr	r2, [r3, #20]
 80115fa:	400a      	ands	r2, r1
 80115fc:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80115fe:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8011600:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8011602:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8011606:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011608:	430a      	orrs	r2, r1
 801160a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 801160c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 801160e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8011612:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8011616:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 801161a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 801161c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 801161e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8011622:	432a      	orrs	r2, r5
 8011624:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8011628:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 801162c:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 801162e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8011630:	f042 0206 	orr.w	r2, r2, #6
 8011634:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8011636:	699a      	ldr	r2, [r3, #24]
 8011638:	f042 0201 	orr.w	r2, r2, #1
 801163c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 801163e:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8011640:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8011642:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8011646:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 801164a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 801164c:	2001      	movs	r0, #1
 801164e:	e7fc      	b.n	801164a <HAL_LTDC_Init+0xce>
 8011650:	f000f800 	.word	0xf000f800

08011654 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8011654:	4770      	bx	lr

08011656 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8011656:	4770      	bx	lr

08011658 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8011658:	6803      	ldr	r3, [r0, #0]
{
 801165a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 801165c:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 801165e:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8011660:	0772      	lsls	r2, r6, #29
{
 8011662:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8011664:	d514      	bpl.n	8011690 <HAL_LTDC_IRQHandler+0x38>
 8011666:	0769      	lsls	r1, r5, #29
 8011668:	d512      	bpl.n	8011690 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 801166a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 801166c:	f022 0204 	bic.w	r2, r2, #4
 8011670:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8011672:	2204      	movs	r2, #4
 8011674:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8011676:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 801167a:	f043 0301 	orr.w	r3, r3, #1
 801167e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8011682:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8011684:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8011688:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 801168c:	f7ff ffe2 	bl	8011654 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8011690:	07b2      	lsls	r2, r6, #30
 8011692:	d516      	bpl.n	80116c2 <HAL_LTDC_IRQHandler+0x6a>
 8011694:	07ab      	lsls	r3, r5, #30
 8011696:	d514      	bpl.n	80116c2 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8011698:	6823      	ldr	r3, [r4, #0]
 801169a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 801169c:	f022 0202 	bic.w	r2, r2, #2
 80116a0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80116a2:	2202      	movs	r2, #2
 80116a4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80116a6:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 80116aa:	4313      	orrs	r3, r2
 80116ac:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80116b0:	2304      	movs	r3, #4
 80116b2:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80116b6:	2300      	movs	r3, #0
 80116b8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80116bc:	4620      	mov	r0, r4
 80116be:	f7ff ffc9 	bl	8011654 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80116c2:	07f0      	lsls	r0, r6, #31
 80116c4:	d510      	bpl.n	80116e8 <HAL_LTDC_IRQHandler+0x90>
 80116c6:	07e9      	lsls	r1, r5, #31
 80116c8:	d50e      	bpl.n	80116e8 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80116ca:	6823      	ldr	r3, [r4, #0]
 80116cc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80116ce:	f022 0201 	bic.w	r2, r2, #1
 80116d2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80116d4:	2201      	movs	r2, #1
 80116d6:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80116d8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80116da:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80116de:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80116e2:	4620      	mov	r0, r4
 80116e4:	f7f0 faaa 	bl	8001c3c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80116e8:	0732      	lsls	r2, r6, #28
 80116ea:	d511      	bpl.n	8011710 <HAL_LTDC_IRQHandler+0xb8>
 80116ec:	072b      	lsls	r3, r5, #28
 80116ee:	d50f      	bpl.n	8011710 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80116f0:	6823      	ldr	r3, [r4, #0]
 80116f2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80116f4:	f022 0208 	bic.w	r2, r2, #8
 80116f8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80116fa:	2208      	movs	r2, #8
 80116fc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80116fe:	2301      	movs	r3, #1
 8011700:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8011704:	2300      	movs	r3, #0
 8011706:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 801170a:	4620      	mov	r0, r4
 801170c:	f7ff ffa3 	bl	8011656 <HAL_LTDC_ReloadEventCallback>
}
 8011710:	bd70      	pop	{r4, r5, r6, pc}

08011712 <HAL_LTDC_ConfigLayer>:
{
 8011712:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8011716:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 801171a:	2b01      	cmp	r3, #1
{
 801171c:	4606      	mov	r6, r0
 801171e:	460f      	mov	r7, r1
 8011720:	4694      	mov	ip, r2
 8011722:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8011726:	d01f      	beq.n	8011768 <HAL_LTDC_ConfigLayer+0x56>
 8011728:	f04f 0801 	mov.w	r8, #1
 801172c:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8011730:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8011734:	2434      	movs	r4, #52	@ 0x34
 8011736:	460d      	mov	r5, r1
 8011738:	fb04 6402 	mla	r4, r4, r2, r6
 801173c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801173e:	3438      	adds	r4, #56	@ 0x38
 8011740:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011742:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011744:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011746:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011748:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801174a:	682b      	ldr	r3, [r5, #0]
 801174c:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 801174e:	4630      	mov	r0, r6
 8011750:	4662      	mov	r2, ip
 8011752:	4639      	mov	r1, r7
 8011754:	f7ff fe96 	bl	8011484 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8011758:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 801175a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 801175c:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8011760:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8011764:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8011768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801176c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 801176c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8011770:	2a01      	cmp	r2, #1
{
 8011772:	4603      	mov	r3, r0
 8011774:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8011778:	d012      	beq.n	80117a0 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 801177a:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 801177c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8011780:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8011782:	f020 0001 	bic.w	r0, r0, #1
 8011786:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8011788:	4806      	ldr	r0, [pc, #24]	@ (80117a4 <HAL_LTDC_ProgramLineEvent+0x38>)
 801178a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 801178c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 801178e:	f041 0101 	orr.w	r1, r1, #1
 8011792:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8011794:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8011796:	2201      	movs	r2, #1
 8011798:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 801179c:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 80117a0:	4770      	bx	lr
 80117a2:	bf00      	nop
 80117a4:	40016800 	.word	0x40016800

080117a8 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80117a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80117aa:	2300      	movs	r3, #0
 80117ac:	9301      	str	r3, [sp, #4]
 80117ae:	4b18      	ldr	r3, [pc, #96]	@ (8011810 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80117b0:	4d18      	ldr	r5, [pc, #96]	@ (8011814 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80117b2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80117b4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80117b8:	641a      	str	r2, [r3, #64]	@ 0x40
 80117ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80117bc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80117c0:	9301      	str	r3, [sp, #4]
 80117c2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80117c4:	4b14      	ldr	r3, [pc, #80]	@ (8011818 <HAL_PWREx_EnableOverDrive+0x70>)
 80117c6:	2201      	movs	r2, #1
 80117c8:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 80117ca:	f7fe ff67 	bl	801069c <HAL_GetTick>
 80117ce:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80117d0:	686b      	ldr	r3, [r5, #4]
 80117d2:	03da      	lsls	r2, r3, #15
 80117d4:	d50b      	bpl.n	80117ee <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80117d6:	4b10      	ldr	r3, [pc, #64]	@ (8011818 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80117d8:	4d0e      	ldr	r5, [pc, #56]	@ (8011814 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80117da:	2201      	movs	r2, #1
 80117dc:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 80117de:	f7fe ff5d 	bl	801069c <HAL_GetTick>
 80117e2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80117e4:	686b      	ldr	r3, [r5, #4]
 80117e6:	039b      	lsls	r3, r3, #14
 80117e8:	d50a      	bpl.n	8011800 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80117ea:	2000      	movs	r0, #0
 80117ec:	e006      	b.n	80117fc <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80117ee:	f7fe ff55 	bl	801069c <HAL_GetTick>
 80117f2:	1b00      	subs	r0, r0, r4
 80117f4:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 80117f8:	d9ea      	bls.n	80117d0 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 80117fa:	2003      	movs	r0, #3
}
 80117fc:	b003      	add	sp, #12
 80117fe:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8011800:	f7fe ff4c 	bl	801069c <HAL_GetTick>
 8011804:	1b00      	subs	r0, r0, r4
 8011806:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 801180a:	d9eb      	bls.n	80117e4 <HAL_PWREx_EnableOverDrive+0x3c>
 801180c:	e7f5      	b.n	80117fa <HAL_PWREx_EnableOverDrive+0x52>
 801180e:	bf00      	nop
 8011810:	40023800 	.word	0x40023800
 8011814:	40007000 	.word	0x40007000
 8011818:	420e0000 	.word	0x420e0000

0801181c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 801181c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8011820:	4604      	mov	r4, r0
 8011822:	b340      	cbz	r0, 8011876 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8011824:	6803      	ldr	r3, [r0, #0]
 8011826:	07de      	lsls	r6, r3, #31
 8011828:	d410      	bmi.n	801184c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 801182a:	6823      	ldr	r3, [r4, #0]
 801182c:	079d      	lsls	r5, r3, #30
 801182e:	d45b      	bmi.n	80118e8 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8011830:	6823      	ldr	r3, [r4, #0]
 8011832:	0719      	lsls	r1, r3, #28
 8011834:	f100 809d 	bmi.w	8011972 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8011838:	6823      	ldr	r3, [r4, #0]
 801183a:	075a      	lsls	r2, r3, #29
 801183c:	f100 80bd 	bmi.w	80119ba <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8011840:	69a3      	ldr	r3, [r4, #24]
 8011842:	2b00      	cmp	r3, #0
 8011844:	f040 8124 	bne.w	8011a90 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8011848:	2000      	movs	r0, #0
 801184a:	e02c      	b.n	80118a6 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 801184c:	4b8d      	ldr	r3, [pc, #564]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 801184e:	689a      	ldr	r2, [r3, #8]
 8011850:	f002 020c 	and.w	r2, r2, #12
 8011854:	2a04      	cmp	r2, #4
 8011856:	d007      	beq.n	8011868 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8011858:	689a      	ldr	r2, [r3, #8]
 801185a:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 801185e:	2a08      	cmp	r2, #8
 8011860:	d10b      	bne.n	801187a <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8011862:	685b      	ldr	r3, [r3, #4]
 8011864:	0259      	lsls	r1, r3, #9
 8011866:	d508      	bpl.n	801187a <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8011868:	4b86      	ldr	r3, [pc, #536]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 801186a:	681b      	ldr	r3, [r3, #0]
 801186c:	039a      	lsls	r2, r3, #14
 801186e:	d5dc      	bpl.n	801182a <HAL_RCC_OscConfig+0xe>
 8011870:	6863      	ldr	r3, [r4, #4]
 8011872:	2b00      	cmp	r3, #0
 8011874:	d1d9      	bne.n	801182a <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8011876:	2001      	movs	r0, #1
 8011878:	e015      	b.n	80118a6 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 801187a:	6863      	ldr	r3, [r4, #4]
 801187c:	4d81      	ldr	r5, [pc, #516]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 801187e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8011882:	d113      	bne.n	80118ac <HAL_RCC_OscConfig+0x90>
 8011884:	682b      	ldr	r3, [r5, #0]
 8011886:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 801188a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 801188c:	f7fe ff06 	bl	801069c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8011890:	4e7c      	ldr	r6, [pc, #496]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8011892:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8011894:	6833      	ldr	r3, [r6, #0]
 8011896:	039b      	lsls	r3, r3, #14
 8011898:	d4c7      	bmi.n	801182a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 801189a:	f7fe feff 	bl	801069c <HAL_GetTick>
 801189e:	1b40      	subs	r0, r0, r5
 80118a0:	2864      	cmp	r0, #100	@ 0x64
 80118a2:	d9f7      	bls.n	8011894 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80118a4:	2003      	movs	r0, #3
}
 80118a6:	b002      	add	sp, #8
 80118a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80118ac:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80118b0:	d104      	bne.n	80118bc <HAL_RCC_OscConfig+0xa0>
 80118b2:	682b      	ldr	r3, [r5, #0]
 80118b4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80118b8:	602b      	str	r3, [r5, #0]
 80118ba:	e7e3      	b.n	8011884 <HAL_RCC_OscConfig+0x68>
 80118bc:	682a      	ldr	r2, [r5, #0]
 80118be:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80118c2:	602a      	str	r2, [r5, #0]
 80118c4:	682a      	ldr	r2, [r5, #0]
 80118c6:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80118ca:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80118cc:	2b00      	cmp	r3, #0
 80118ce:	d1dd      	bne.n	801188c <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 80118d0:	f7fe fee4 	bl	801069c <HAL_GetTick>
 80118d4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80118d6:	682b      	ldr	r3, [r5, #0]
 80118d8:	039f      	lsls	r7, r3, #14
 80118da:	d5a6      	bpl.n	801182a <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80118dc:	f7fe fede 	bl	801069c <HAL_GetTick>
 80118e0:	1b80      	subs	r0, r0, r6
 80118e2:	2864      	cmp	r0, #100	@ 0x64
 80118e4:	d9f7      	bls.n	80118d6 <HAL_RCC_OscConfig+0xba>
 80118e6:	e7dd      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 80118e8:	4b66      	ldr	r3, [pc, #408]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 80118ea:	689a      	ldr	r2, [r3, #8]
 80118ec:	f012 0f0c 	tst.w	r2, #12
 80118f0:	d007      	beq.n	8011902 <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80118f2:	689a      	ldr	r2, [r3, #8]
 80118f4:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 80118f8:	2a08      	cmp	r2, #8
 80118fa:	d111      	bne.n	8011920 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80118fc:	685b      	ldr	r3, [r3, #4]
 80118fe:	025d      	lsls	r5, r3, #9
 8011900:	d40e      	bmi.n	8011920 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8011902:	4a60      	ldr	r2, [pc, #384]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 8011904:	6813      	ldr	r3, [r2, #0]
 8011906:	0799      	lsls	r1, r3, #30
 8011908:	d502      	bpl.n	8011910 <HAL_RCC_OscConfig+0xf4>
 801190a:	68e3      	ldr	r3, [r4, #12]
 801190c:	2b01      	cmp	r3, #1
 801190e:	d1b2      	bne.n	8011876 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8011910:	6813      	ldr	r3, [r2, #0]
 8011912:	6921      	ldr	r1, [r4, #16]
 8011914:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8011918:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 801191c:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 801191e:	e787      	b.n	8011830 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8011920:	68e2      	ldr	r2, [r4, #12]
 8011922:	4b59      	ldr	r3, [pc, #356]	@ (8011a88 <HAL_RCC_OscConfig+0x26c>)
 8011924:	b1b2      	cbz	r2, 8011954 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8011926:	2201      	movs	r2, #1
 8011928:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 801192a:	f7fe feb7 	bl	801069c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 801192e:	4d55      	ldr	r5, [pc, #340]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8011930:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8011932:	682b      	ldr	r3, [r5, #0]
 8011934:	079b      	lsls	r3, r3, #30
 8011936:	d507      	bpl.n	8011948 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8011938:	682b      	ldr	r3, [r5, #0]
 801193a:	6922      	ldr	r2, [r4, #16]
 801193c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8011940:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8011944:	602b      	str	r3, [r5, #0]
 8011946:	e773      	b.n	8011830 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8011948:	f7fe fea8 	bl	801069c <HAL_GetTick>
 801194c:	1b80      	subs	r0, r0, r6
 801194e:	2802      	cmp	r0, #2
 8011950:	d9ef      	bls.n	8011932 <HAL_RCC_OscConfig+0x116>
 8011952:	e7a7      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8011954:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8011956:	f7fe fea1 	bl	801069c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 801195a:	4e4a      	ldr	r6, [pc, #296]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 801195c:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 801195e:	6833      	ldr	r3, [r6, #0]
 8011960:	079f      	lsls	r7, r3, #30
 8011962:	f57f af65 	bpl.w	8011830 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8011966:	f7fe fe99 	bl	801069c <HAL_GetTick>
 801196a:	1b40      	subs	r0, r0, r5
 801196c:	2802      	cmp	r0, #2
 801196e:	d9f6      	bls.n	801195e <HAL_RCC_OscConfig+0x142>
 8011970:	e798      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8011972:	6962      	ldr	r2, [r4, #20]
 8011974:	4b44      	ldr	r3, [pc, #272]	@ (8011a88 <HAL_RCC_OscConfig+0x26c>)
 8011976:	b182      	cbz	r2, 801199a <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8011978:	2201      	movs	r2, #1
 801197a:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 801197e:	f7fe fe8d 	bl	801069c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8011982:	4e40      	ldr	r6, [pc, #256]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8011984:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8011986:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8011988:	079b      	lsls	r3, r3, #30
 801198a:	f53f af55 	bmi.w	8011838 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 801198e:	f7fe fe85 	bl	801069c <HAL_GetTick>
 8011992:	1b40      	subs	r0, r0, r5
 8011994:	2802      	cmp	r0, #2
 8011996:	d9f6      	bls.n	8011986 <HAL_RCC_OscConfig+0x16a>
 8011998:	e784      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 801199a:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 801199e:	f7fe fe7d 	bl	801069c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80119a2:	4e38      	ldr	r6, [pc, #224]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80119a4:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80119a6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80119a8:	079f      	lsls	r7, r3, #30
 80119aa:	f57f af45 	bpl.w	8011838 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80119ae:	f7fe fe75 	bl	801069c <HAL_GetTick>
 80119b2:	1b40      	subs	r0, r0, r5
 80119b4:	2802      	cmp	r0, #2
 80119b6:	d9f6      	bls.n	80119a6 <HAL_RCC_OscConfig+0x18a>
 80119b8:	e774      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80119ba:	4b32      	ldr	r3, [pc, #200]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 80119bc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80119be:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 80119c2:	d128      	bne.n	8011a16 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 80119c4:	9201      	str	r2, [sp, #4]
 80119c6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80119c8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80119cc:	641a      	str	r2, [r3, #64]	@ 0x40
 80119ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80119d0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80119d4:	9301      	str	r3, [sp, #4]
 80119d6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80119d8:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80119da:	4d2c      	ldr	r5, [pc, #176]	@ (8011a8c <HAL_RCC_OscConfig+0x270>)
 80119dc:	682b      	ldr	r3, [r5, #0]
 80119de:	05d8      	lsls	r0, r3, #23
 80119e0:	d51b      	bpl.n	8011a1a <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80119e2:	68a3      	ldr	r3, [r4, #8]
 80119e4:	4d27      	ldr	r5, [pc, #156]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 80119e6:	2b01      	cmp	r3, #1
 80119e8:	d127      	bne.n	8011a3a <HAL_RCC_OscConfig+0x21e>
 80119ea:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80119ec:	f043 0301 	orr.w	r3, r3, #1
 80119f0:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 80119f2:	f7fe fe53 	bl	801069c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80119f6:	4e23      	ldr	r6, [pc, #140]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80119f8:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80119fa:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80119fe:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8011a00:	079a      	lsls	r2, r3, #30
 8011a02:	d539      	bpl.n	8011a78 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8011a04:	2f00      	cmp	r7, #0
 8011a06:	f43f af1b 	beq.w	8011840 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8011a0a:	4a1e      	ldr	r2, [pc, #120]	@ (8011a84 <HAL_RCC_OscConfig+0x268>)
 8011a0c:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8011a0e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8011a12:	6413      	str	r3, [r2, #64]	@ 0x40
 8011a14:	e714      	b.n	8011840 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8011a16:	2700      	movs	r7, #0
 8011a18:	e7df      	b.n	80119da <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8011a1a:	682b      	ldr	r3, [r5, #0]
 8011a1c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8011a20:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8011a22:	f7fe fe3b 	bl	801069c <HAL_GetTick>
 8011a26:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8011a28:	682b      	ldr	r3, [r5, #0]
 8011a2a:	05d9      	lsls	r1, r3, #23
 8011a2c:	d4d9      	bmi.n	80119e2 <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8011a2e:	f7fe fe35 	bl	801069c <HAL_GetTick>
 8011a32:	1b80      	subs	r0, r0, r6
 8011a34:	2802      	cmp	r0, #2
 8011a36:	d9f7      	bls.n	8011a28 <HAL_RCC_OscConfig+0x20c>
 8011a38:	e734      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8011a3a:	2b05      	cmp	r3, #5
 8011a3c:	d104      	bne.n	8011a48 <HAL_RCC_OscConfig+0x22c>
 8011a3e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011a40:	f043 0304 	orr.w	r3, r3, #4
 8011a44:	672b      	str	r3, [r5, #112]	@ 0x70
 8011a46:	e7d0      	b.n	80119ea <HAL_RCC_OscConfig+0x1ce>
 8011a48:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8011a4a:	f022 0201 	bic.w	r2, r2, #1
 8011a4e:	672a      	str	r2, [r5, #112]	@ 0x70
 8011a50:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8011a52:	f022 0204 	bic.w	r2, r2, #4
 8011a56:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8011a58:	2b00      	cmp	r3, #0
 8011a5a:	d1ca      	bne.n	80119f2 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8011a5c:	f7fe fe1e 	bl	801069c <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011a60:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8011a64:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8011a66:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011a68:	079b      	lsls	r3, r3, #30
 8011a6a:	d5cb      	bpl.n	8011a04 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011a6c:	f7fe fe16 	bl	801069c <HAL_GetTick>
 8011a70:	1b80      	subs	r0, r0, r6
 8011a72:	4540      	cmp	r0, r8
 8011a74:	d9f7      	bls.n	8011a66 <HAL_RCC_OscConfig+0x24a>
 8011a76:	e715      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011a78:	f7fe fe10 	bl	801069c <HAL_GetTick>
 8011a7c:	1b40      	subs	r0, r0, r5
 8011a7e:	4540      	cmp	r0, r8
 8011a80:	d9bd      	bls.n	80119fe <HAL_RCC_OscConfig+0x1e2>
 8011a82:	e70f      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
 8011a84:	40023800 	.word	0x40023800
 8011a88:	42470000 	.word	0x42470000
 8011a8c:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8011a90:	4d37      	ldr	r5, [pc, #220]	@ (8011b70 <HAL_RCC_OscConfig+0x354>)
 8011a92:	68aa      	ldr	r2, [r5, #8]
 8011a94:	f002 020c 	and.w	r2, r2, #12
 8011a98:	2a08      	cmp	r2, #8
 8011a9a:	d03e      	beq.n	8011b1a <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8011a9c:	2b02      	cmp	r3, #2
 8011a9e:	4b35      	ldr	r3, [pc, #212]	@ (8011b74 <HAL_RCC_OscConfig+0x358>)
 8011aa0:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8011aa4:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8011aa6:	d12b      	bne.n	8011b00 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8011aa8:	f7fe fdf8 	bl	801069c <HAL_GetTick>
 8011aac:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8011aae:	682b      	ldr	r3, [r5, #0]
 8011ab0:	0199      	lsls	r1, r3, #6
 8011ab2:	d41f      	bmi.n	8011af4 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8011ab4:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8011ab8:	4313      	orrs	r3, r2
 8011aba:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8011abc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8011ac0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011ac2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8011ac6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8011ac8:	0852      	lsrs	r2, r2, #1
 8011aca:	3a01      	subs	r2, #1
 8011acc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011ad0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8011ad2:	4b28      	ldr	r3, [pc, #160]	@ (8011b74 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8011ad4:	4d26      	ldr	r5, [pc, #152]	@ (8011b70 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8011ad6:	2201      	movs	r2, #1
 8011ad8:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8011ada:	f7fe fddf 	bl	801069c <HAL_GetTick>
 8011ade:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8011ae0:	682b      	ldr	r3, [r5, #0]
 8011ae2:	019a      	lsls	r2, r3, #6
 8011ae4:	f53f aeb0 	bmi.w	8011848 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011ae8:	f7fe fdd8 	bl	801069c <HAL_GetTick>
 8011aec:	1b00      	subs	r0, r0, r4
 8011aee:	2802      	cmp	r0, #2
 8011af0:	d9f6      	bls.n	8011ae0 <HAL_RCC_OscConfig+0x2c4>
 8011af2:	e6d7      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011af4:	f7fe fdd2 	bl	801069c <HAL_GetTick>
 8011af8:	1b80      	subs	r0, r0, r6
 8011afa:	2802      	cmp	r0, #2
 8011afc:	d9d7      	bls.n	8011aae <HAL_RCC_OscConfig+0x292>
 8011afe:	e6d1      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8011b00:	f7fe fdcc 	bl	801069c <HAL_GetTick>
 8011b04:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8011b06:	682b      	ldr	r3, [r5, #0]
 8011b08:	019b      	lsls	r3, r3, #6
 8011b0a:	f57f ae9d 	bpl.w	8011848 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8011b0e:	f7fe fdc5 	bl	801069c <HAL_GetTick>
 8011b12:	1b00      	subs	r0, r0, r4
 8011b14:	2802      	cmp	r0, #2
 8011b16:	d9f6      	bls.n	8011b06 <HAL_RCC_OscConfig+0x2ea>
 8011b18:	e6c4      	b.n	80118a4 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8011b1a:	2b01      	cmp	r3, #1
 8011b1c:	f43f aeab 	beq.w	8011876 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8011b20:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8011b22:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8011b24:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8011b28:	4291      	cmp	r1, r2
 8011b2a:	f47f aea4 	bne.w	8011876 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8011b2e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8011b30:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8011b34:	428a      	cmp	r2, r1
 8011b36:	f47f ae9e 	bne.w	8011876 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8011b3a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8011b3c:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8011b40:	401a      	ands	r2, r3
 8011b42:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8011b46:	f47f ae96 	bne.w	8011876 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8011b4a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8011b4c:	0852      	lsrs	r2, r2, #1
 8011b4e:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8011b52:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8011b54:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8011b58:	f47f ae8d 	bne.w	8011876 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8011b5c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011b5e:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8011b62:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8011b66:	bf14      	ite	ne
 8011b68:	2001      	movne	r0, #1
 8011b6a:	2000      	moveq	r0, #0
 8011b6c:	e69b      	b.n	80118a6 <HAL_RCC_OscConfig+0x8a>
 8011b6e:	bf00      	nop
 8011b70:	40023800 	.word	0x40023800
 8011b74:	42470000 	.word	0x42470000

08011b78 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8011b78:	4913      	ldr	r1, [pc, #76]	@ (8011bc8 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8011b7a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8011b7c:	688b      	ldr	r3, [r1, #8]
 8011b7e:	f003 030c 	and.w	r3, r3, #12
 8011b82:	2b04      	cmp	r3, #4
 8011b84:	d01c      	beq.n	8011bc0 <HAL_RCC_GetSysClockFreq+0x48>
 8011b86:	2b08      	cmp	r3, #8
 8011b88:	d11c      	bne.n	8011bc4 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8011b8a:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8011b8c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011b8e:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8011b90:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011b94:	bf14      	ite	ne
 8011b96:	480d      	ldrne	r0, [pc, #52]	@ (8011bcc <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011b98:	480d      	ldreq	r0, [pc, #52]	@ (8011bd0 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011b9a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8011b9e:	bf18      	it	ne
 8011ba0:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8011ba2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8011ba6:	fba1 0100 	umull	r0, r1, r1, r0
 8011baa:	f7ee fecf 	bl	800094c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8011bae:	4b06      	ldr	r3, [pc, #24]	@ (8011bc8 <HAL_RCC_GetSysClockFreq+0x50>)
 8011bb0:	685b      	ldr	r3, [r3, #4]
 8011bb2:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8011bb6:	3301      	adds	r3, #1
 8011bb8:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8011bba:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8011bbe:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8011bc0:	4802      	ldr	r0, [pc, #8]	@ (8011bcc <HAL_RCC_GetSysClockFreq+0x54>)
 8011bc2:	e7fc      	b.n	8011bbe <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8011bc4:	4802      	ldr	r0, [pc, #8]	@ (8011bd0 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8011bc6:	e7fa      	b.n	8011bbe <HAL_RCC_GetSysClockFreq+0x46>
 8011bc8:	40023800 	.word	0x40023800
 8011bcc:	007a1200 	.word	0x007a1200
 8011bd0:	00f42400 	.word	0x00f42400

08011bd4 <HAL_RCC_ClockConfig>:
{
 8011bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bd8:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8011bda:	4604      	mov	r4, r0
 8011bdc:	b910      	cbnz	r0, 8011be4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8011bde:	2001      	movs	r0, #1
}
 8011be0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8011be4:	4b43      	ldr	r3, [pc, #268]	@ (8011cf4 <HAL_RCC_ClockConfig+0x120>)
 8011be6:	681a      	ldr	r2, [r3, #0]
 8011be8:	f002 020f 	and.w	r2, r2, #15
 8011bec:	428a      	cmp	r2, r1
 8011bee:	d328      	bcc.n	8011c42 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8011bf0:	6821      	ldr	r1, [r4, #0]
 8011bf2:	078f      	lsls	r7, r1, #30
 8011bf4:	d42d      	bmi.n	8011c52 <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8011bf6:	07c8      	lsls	r0, r1, #31
 8011bf8:	d440      	bmi.n	8011c7c <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8011bfa:	4b3e      	ldr	r3, [pc, #248]	@ (8011cf4 <HAL_RCC_ClockConfig+0x120>)
 8011bfc:	681a      	ldr	r2, [r3, #0]
 8011bfe:	f002 020f 	and.w	r2, r2, #15
 8011c02:	42aa      	cmp	r2, r5
 8011c04:	d865      	bhi.n	8011cd2 <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8011c06:	6822      	ldr	r2, [r4, #0]
 8011c08:	0751      	lsls	r1, r2, #29
 8011c0a:	d46b      	bmi.n	8011ce4 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8011c0c:	0713      	lsls	r3, r2, #28
 8011c0e:	d507      	bpl.n	8011c20 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8011c10:	4a39      	ldr	r2, [pc, #228]	@ (8011cf8 <HAL_RCC_ClockConfig+0x124>)
 8011c12:	6921      	ldr	r1, [r4, #16]
 8011c14:	6893      	ldr	r3, [r2, #8]
 8011c16:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8011c1a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8011c1e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8011c20:	f7ff ffaa 	bl	8011b78 <HAL_RCC_GetSysClockFreq>
 8011c24:	4b34      	ldr	r3, [pc, #208]	@ (8011cf8 <HAL_RCC_ClockConfig+0x124>)
 8011c26:	4a35      	ldr	r2, [pc, #212]	@ (8011cfc <HAL_RCC_ClockConfig+0x128>)
 8011c28:	689b      	ldr	r3, [r3, #8]
 8011c2a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8011c2e:	5cd3      	ldrb	r3, [r2, r3]
 8011c30:	40d8      	lsrs	r0, r3
 8011c32:	4b33      	ldr	r3, [pc, #204]	@ (8011d00 <HAL_RCC_ClockConfig+0x12c>)
 8011c34:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8011c36:	4b33      	ldr	r3, [pc, #204]	@ (8011d04 <HAL_RCC_ClockConfig+0x130>)
 8011c38:	6818      	ldr	r0, [r3, #0]
 8011c3a:	f7f0 ff27 	bl	8002a8c <HAL_InitTick>
  return HAL_OK;
 8011c3e:	2000      	movs	r0, #0
 8011c40:	e7ce      	b.n	8011be0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8011c42:	b2ca      	uxtb	r2, r1
 8011c44:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8011c46:	681b      	ldr	r3, [r3, #0]
 8011c48:	f003 030f 	and.w	r3, r3, #15
 8011c4c:	428b      	cmp	r3, r1
 8011c4e:	d1c6      	bne.n	8011bde <HAL_RCC_ClockConfig+0xa>
 8011c50:	e7ce      	b.n	8011bf0 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8011c52:	4b29      	ldr	r3, [pc, #164]	@ (8011cf8 <HAL_RCC_ClockConfig+0x124>)
 8011c54:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8011c58:	bf1e      	ittt	ne
 8011c5a:	689a      	ldrne	r2, [r3, #8]
 8011c5c:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8011c60:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8011c62:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8011c64:	bf42      	ittt	mi
 8011c66:	689a      	ldrmi	r2, [r3, #8]
 8011c68:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8011c6c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8011c6e:	689a      	ldr	r2, [r3, #8]
 8011c70:	68a0      	ldr	r0, [r4, #8]
 8011c72:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8011c76:	4302      	orrs	r2, r0
 8011c78:	609a      	str	r2, [r3, #8]
 8011c7a:	e7bc      	b.n	8011bf6 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8011c7c:	6862      	ldr	r2, [r4, #4]
 8011c7e:	4b1e      	ldr	r3, [pc, #120]	@ (8011cf8 <HAL_RCC_ClockConfig+0x124>)
 8011c80:	2a01      	cmp	r2, #1
 8011c82:	d11c      	bne.n	8011cbe <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8011c84:	681b      	ldr	r3, [r3, #0]
 8011c86:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8011c8a:	d0a8      	beq.n	8011bde <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8011c8c:	4e1a      	ldr	r6, [pc, #104]	@ (8011cf8 <HAL_RCC_ClockConfig+0x124>)
 8011c8e:	68b3      	ldr	r3, [r6, #8]
 8011c90:	f023 0303 	bic.w	r3, r3, #3
 8011c94:	4313      	orrs	r3, r2
 8011c96:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8011c98:	f7fe fd00 	bl	801069c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8011c9c:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8011ca0:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8011ca2:	68b3      	ldr	r3, [r6, #8]
 8011ca4:	6862      	ldr	r2, [r4, #4]
 8011ca6:	f003 030c 	and.w	r3, r3, #12
 8011caa:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8011cae:	d0a4      	beq.n	8011bfa <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8011cb0:	f7fe fcf4 	bl	801069c <HAL_GetTick>
 8011cb4:	1bc0      	subs	r0, r0, r7
 8011cb6:	4540      	cmp	r0, r8
 8011cb8:	d9f3      	bls.n	8011ca2 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8011cba:	2003      	movs	r0, #3
 8011cbc:	e790      	b.n	8011be0 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8011cbe:	1e91      	subs	r1, r2, #2
 8011cc0:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8011cc2:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8011cc4:	d802      	bhi.n	8011ccc <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8011cc6:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8011cca:	e7de      	b.n	8011c8a <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8011ccc:	f013 0f02 	tst.w	r3, #2
 8011cd0:	e7db      	b.n	8011c8a <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8011cd2:	b2ea      	uxtb	r2, r5
 8011cd4:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8011cd6:	681b      	ldr	r3, [r3, #0]
 8011cd8:	f003 030f 	and.w	r3, r3, #15
 8011cdc:	42ab      	cmp	r3, r5
 8011cde:	f47f af7e 	bne.w	8011bde <HAL_RCC_ClockConfig+0xa>
 8011ce2:	e790      	b.n	8011c06 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8011ce4:	4904      	ldr	r1, [pc, #16]	@ (8011cf8 <HAL_RCC_ClockConfig+0x124>)
 8011ce6:	68e0      	ldr	r0, [r4, #12]
 8011ce8:	688b      	ldr	r3, [r1, #8]
 8011cea:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8011cee:	4303      	orrs	r3, r0
 8011cf0:	608b      	str	r3, [r1, #8]
 8011cf2:	e78b      	b.n	8011c0c <HAL_RCC_ClockConfig+0x38>
 8011cf4:	40023c00 	.word	0x40023c00
 8011cf8:	40023800 	.word	0x40023800
 8011cfc:	080330b0 	.word	0x080330b0
 8011d00:	20000080 	.word	0x20000080
 8011d04:	20000088 	.word	0x20000088

08011d08 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8011d08:	4b04      	ldr	r3, [pc, #16]	@ (8011d1c <HAL_RCC_GetPCLK1Freq+0x14>)
 8011d0a:	4a05      	ldr	r2, [pc, #20]	@ (8011d20 <HAL_RCC_GetPCLK1Freq+0x18>)
 8011d0c:	689b      	ldr	r3, [r3, #8]
 8011d0e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8011d12:	5cd3      	ldrb	r3, [r2, r3]
 8011d14:	4a03      	ldr	r2, [pc, #12]	@ (8011d24 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8011d16:	6810      	ldr	r0, [r2, #0]
}
 8011d18:	40d8      	lsrs	r0, r3
 8011d1a:	4770      	bx	lr
 8011d1c:	40023800 	.word	0x40023800
 8011d20:	080330a8 	.word	0x080330a8
 8011d24:	20000080 	.word	0x20000080

08011d28 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8011d28:	230f      	movs	r3, #15
 8011d2a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8011d2c:	4b0b      	ldr	r3, [pc, #44]	@ (8011d5c <HAL_RCC_GetClockConfig+0x34>)
 8011d2e:	689a      	ldr	r2, [r3, #8]
 8011d30:	f002 0203 	and.w	r2, r2, #3
 8011d34:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8011d36:	689a      	ldr	r2, [r3, #8]
 8011d38:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8011d3c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8011d3e:	689a      	ldr	r2, [r3, #8]
 8011d40:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8011d44:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8011d46:	689b      	ldr	r3, [r3, #8]
 8011d48:	08db      	lsrs	r3, r3, #3
 8011d4a:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8011d4e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8011d50:	4b03      	ldr	r3, [pc, #12]	@ (8011d60 <HAL_RCC_GetClockConfig+0x38>)
 8011d52:	681b      	ldr	r3, [r3, #0]
 8011d54:	f003 030f 	and.w	r3, r3, #15
 8011d58:	600b      	str	r3, [r1, #0]
}
 8011d5a:	4770      	bx	lr
 8011d5c:	40023800 	.word	0x40023800
 8011d60:	40023c00 	.word	0x40023c00

08011d64 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8011d64:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8011d66:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8011d6a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011d6c:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8011d6e:	f040 8088 	bne.w	8011e82 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8011d72:	6823      	ldr	r3, [r4, #0]
 8011d74:	f013 0f0c 	tst.w	r3, #12
 8011d78:	d045      	beq.n	8011e06 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8011d7a:	4b8c      	ldr	r3, [pc, #560]	@ (8011fac <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8011d7c:	4d8c      	ldr	r5, [pc, #560]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8011d7e:	2200      	movs	r2, #0
 8011d80:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8011d82:	f7fe fc8b 	bl	801069c <HAL_GetTick>
 8011d86:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8011d88:	682b      	ldr	r3, [r5, #0]
 8011d8a:	0099      	lsls	r1, r3, #2
 8011d8c:	f100 80cb 	bmi.w	8011f26 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8011d90:	6821      	ldr	r1, [r4, #0]
 8011d92:	074a      	lsls	r2, r1, #29
 8011d94:	d515      	bpl.n	8011dc2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8011d96:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8011d9a:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8011d9e:	061b      	lsls	r3, r3, #24
 8011da0:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8011da4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8011da8:	4313      	orrs	r3, r2
 8011daa:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8011dae:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8011db2:	6a22      	ldr	r2, [r4, #32]
 8011db4:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8011db8:	3a01      	subs	r2, #1
 8011dba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8011dbe:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8011dc2:	070b      	lsls	r3, r1, #28
 8011dc4:	d514      	bpl.n	8011df0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8011dc6:	4a7a      	ldr	r2, [pc, #488]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8011dc8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8011dca:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8011dce:	6920      	ldr	r0, [r4, #16]
 8011dd0:	071b      	lsls	r3, r3, #28
 8011dd2:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8011dd6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8011dda:	430b      	orrs	r3, r1
 8011ddc:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8011de0:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8011de4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8011de6:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8011dea:	430b      	orrs	r3, r1
 8011dec:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8011df0:	4b6e      	ldr	r3, [pc, #440]	@ (8011fac <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8011df2:	4e6f      	ldr	r6, [pc, #444]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8011df4:	2201      	movs	r2, #1
 8011df6:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8011df8:	f7fe fc50 	bl	801069c <HAL_GetTick>
 8011dfc:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8011dfe:	6833      	ldr	r3, [r6, #0]
 8011e00:	009f      	lsls	r7, r3, #2
 8011e02:	f140 8097 	bpl.w	8011f34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8011e06:	6823      	ldr	r3, [r4, #0]
 8011e08:	0698      	lsls	r0, r3, #26
 8011e0a:	d534      	bpl.n	8011e76 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8011e0c:	2300      	movs	r3, #0
 8011e0e:	9301      	str	r3, [sp, #4]
 8011e10:	4b67      	ldr	r3, [pc, #412]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8011e12:	4d68      	ldr	r5, [pc, #416]	@ (8011fb4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8011e14:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8011e16:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8011e1a:	641a      	str	r2, [r3, #64]	@ 0x40
 8011e1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011e1e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8011e22:	9301      	str	r3, [sp, #4]
 8011e24:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8011e26:	682b      	ldr	r3, [r5, #0]
 8011e28:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8011e2c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8011e2e:	f7fe fc35 	bl	801069c <HAL_GetTick>
 8011e32:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8011e34:	682b      	ldr	r3, [r5, #0]
 8011e36:	05d8      	lsls	r0, r3, #23
 8011e38:	f140 8083 	bpl.w	8011f42 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8011e3c:	4d5c      	ldr	r5, [pc, #368]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8011e3e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8011e40:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8011e42:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8011e46:	f040 8083 	bne.w	8011f50 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8011e4a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8011e4c:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8011e50:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8011e54:	4a56      	ldr	r2, [pc, #344]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8011e56:	f040 809e 	bne.w	8011f96 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8011e5a:	6891      	ldr	r1, [r2, #8]
 8011e5c:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8011e60:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8011e64:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8011e68:	4301      	orrs	r1, r0
 8011e6a:	6091      	str	r1, [r2, #8]
 8011e6c:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8011e6e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8011e72:	430b      	orrs	r3, r1
 8011e74:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8011e76:	6823      	ldr	r3, [r4, #0]
 8011e78:	06db      	lsls	r3, r3, #27
 8011e7a:	f100 8090 	bmi.w	8011f9e <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8011e7e:	2000      	movs	r0, #0
 8011e80:	e04f      	b.n	8011f22 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8011e82:	4b4a      	ldr	r3, [pc, #296]	@ (8011fac <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8011e84:	4e4a      	ldr	r6, [pc, #296]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8011e86:	2200      	movs	r2, #0
 8011e88:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8011e8a:	f7fe fc07 	bl	801069c <HAL_GetTick>
 8011e8e:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8011e90:	6833      	ldr	r3, [r6, #0]
 8011e92:	011f      	lsls	r7, r3, #4
 8011e94:	d43f      	bmi.n	8011f16 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8011e96:	6821      	ldr	r1, [r4, #0]
 8011e98:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8011e9a:	bf41      	itttt	mi
 8011e9c:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8011ea0:	071b      	lslmi	r3, r3, #28
 8011ea2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8011ea6:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8011eaa:	078a      	lsls	r2, r1, #30
 8011eac:	d515      	bpl.n	8011eda <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8011eae:	4a40      	ldr	r2, [pc, #256]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8011eb0:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8011eb2:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8011eb6:	6865      	ldr	r5, [r4, #4]
 8011eb8:	061b      	lsls	r3, r3, #24
 8011eba:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8011ebe:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8011ec2:	4303      	orrs	r3, r0
 8011ec4:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8011ec8:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8011ecc:	69e3      	ldr	r3, [r4, #28]
 8011ece:	f020 001f 	bic.w	r0, r0, #31
 8011ed2:	3b01      	subs	r3, #1
 8011ed4:	4303      	orrs	r3, r0
 8011ed6:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8011eda:	064b      	lsls	r3, r1, #25
 8011edc:	d50a      	bpl.n	8011ef4 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8011ede:	68e3      	ldr	r3, [r4, #12]
 8011ee0:	6862      	ldr	r2, [r4, #4]
 8011ee2:	061b      	lsls	r3, r3, #24
 8011ee4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8011ee8:	68a2      	ldr	r2, [r4, #8]
 8011eea:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8011eee:	4a30      	ldr	r2, [pc, #192]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8011ef0:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8011ef4:	4b2d      	ldr	r3, [pc, #180]	@ (8011fac <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8011ef6:	4e2e      	ldr	r6, [pc, #184]	@ (8011fb0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8011ef8:	2201      	movs	r2, #1
 8011efa:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8011efc:	f7fe fbce 	bl	801069c <HAL_GetTick>
 8011f00:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8011f02:	6833      	ldr	r3, [r6, #0]
 8011f04:	011f      	lsls	r7, r3, #4
 8011f06:	f53f af34 	bmi.w	8011d72 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8011f0a:	f7fe fbc7 	bl	801069c <HAL_GetTick>
 8011f0e:	1b40      	subs	r0, r0, r5
 8011f10:	2802      	cmp	r0, #2
 8011f12:	d9f6      	bls.n	8011f02 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8011f14:	e004      	b.n	8011f20 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8011f16:	f7fe fbc1 	bl	801069c <HAL_GetTick>
 8011f1a:	1b40      	subs	r0, r0, r5
 8011f1c:	2802      	cmp	r0, #2
 8011f1e:	d9b7      	bls.n	8011e90 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8011f20:	2003      	movs	r0, #3
}
 8011f22:	b003      	add	sp, #12
 8011f24:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8011f26:	f7fe fbb9 	bl	801069c <HAL_GetTick>
 8011f2a:	1b80      	subs	r0, r0, r6
 8011f2c:	2802      	cmp	r0, #2
 8011f2e:	f67f af2b 	bls.w	8011d88 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8011f32:	e7f5      	b.n	8011f20 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8011f34:	f7fe fbb2 	bl	801069c <HAL_GetTick>
 8011f38:	1b40      	subs	r0, r0, r5
 8011f3a:	2802      	cmp	r0, #2
 8011f3c:	f67f af5f 	bls.w	8011dfe <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8011f40:	e7ee      	b.n	8011f20 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8011f42:	f7fe fbab 	bl	801069c <HAL_GetTick>
 8011f46:	1b80      	subs	r0, r0, r6
 8011f48:	2802      	cmp	r0, #2
 8011f4a:	f67f af73 	bls.w	8011e34 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8011f4e:	e7e7      	b.n	8011f20 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8011f50:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8011f54:	4293      	cmp	r3, r2
 8011f56:	f43f af78 	beq.w	8011e4a <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8011f5a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8011f5c:	4a13      	ldr	r2, [pc, #76]	@ (8011fac <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8011f5e:	2101      	movs	r1, #1
 8011f60:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8011f64:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8011f68:	2100      	movs	r1, #0
 8011f6a:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8011f6e:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8011f70:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011f72:	07d9      	lsls	r1, r3, #31
 8011f74:	f57f af69 	bpl.w	8011e4a <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8011f78:	f7fe fb90 	bl	801069c <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011f7c:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8011f80:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8011f82:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8011f84:	079a      	lsls	r2, r3, #30
 8011f86:	f53f af60 	bmi.w	8011e4a <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8011f8a:	f7fe fb87 	bl	801069c <HAL_GetTick>
 8011f8e:	1b80      	subs	r0, r0, r6
 8011f90:	42b8      	cmp	r0, r7
 8011f92:	d9f6      	bls.n	8011f82 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8011f94:	e7c4      	b.n	8011f20 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8011f96:	6891      	ldr	r1, [r2, #8]
 8011f98:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8011f9c:	e765      	b.n	8011e6a <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8011f9e:	4b06      	ldr	r3, [pc, #24]	@ (8011fb8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8011fa0:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8011fa4:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8011fa8:	e769      	b.n	8011e7e <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8011faa:	bf00      	nop
 8011fac:	42470000 	.word	0x42470000
 8011fb0:	40023800 	.word	0x40023800
 8011fb4:	40007000 	.word	0x40007000
 8011fb8:	42471000 	.word	0x42471000

08011fbc <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8011fbc:	b538      	push	{r3, r4, r5, lr}
 8011fbe:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8011fc0:	4604      	mov	r4, r0
 8011fc2:	b1c8      	cbz	r0, 8011ff8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8011fc4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8011fc8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8011fcc:	b91b      	cbnz	r3, 8011fd6 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8011fce:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8011fd2:	f7f0 fcef 	bl	80029b4 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8011fd6:	2302      	movs	r3, #2
 8011fd8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8011fdc:	1d21      	adds	r1, r4, #4
 8011fde:	6820      	ldr	r0, [r4, #0]
 8011fe0:	f000 fef2 	bl	8012dc8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8011fe4:	6862      	ldr	r2, [r4, #4]
 8011fe6:	6820      	ldr	r0, [r4, #0]
 8011fe8:	4629      	mov	r1, r5
 8011fea:	f000 ff23 	bl	8012e34 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8011fee:	2301      	movs	r3, #1
 8011ff0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8011ff4:	2000      	movs	r0, #0
}
 8011ff6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8011ff8:	2001      	movs	r0, #1
 8011ffa:	e7fc      	b.n	8011ff6 <HAL_SDRAM_Init+0x3a>

08011ffc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8011ffc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8011ffe:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8012002:	2b02      	cmp	r3, #2
{
 8012004:	4605      	mov	r5, r0
 8012006:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8012008:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 801200a:	d012      	beq.n	8012032 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 801200c:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8012010:	2c01      	cmp	r4, #1
 8012012:	d10f      	bne.n	8012034 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8012014:	2302      	movs	r3, #2
 8012016:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 801201a:	6828      	ldr	r0, [r5, #0]
 801201c:	f000 ff40 	bl	8012ea0 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8012020:	6833      	ldr	r3, [r6, #0]
 8012022:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8012024:	bf06      	itte	eq
 8012026:	2305      	moveq	r3, #5
 8012028:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 801202c:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8012030:	2000      	movs	r0, #0
}
 8012032:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8012034:	2001      	movs	r0, #1
 8012036:	e7fc      	b.n	8012032 <HAL_SDRAM_SendCommand+0x36>

08012038 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8012038:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 801203a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801203e:	2b02      	cmp	r3, #2
{
 8012040:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8012042:	b2d8      	uxtb	r0, r3
 8012044:	d00d      	beq.n	8012062 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8012046:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 801204a:	2b01      	cmp	r3, #1
 801204c:	b2dd      	uxtb	r5, r3
 801204e:	d109      	bne.n	8012064 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8012050:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8012052:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8012054:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8012058:	f000 ff46 	bl	8012ee8 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 801205c:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8012060:	2000      	movs	r0, #0
}
 8012062:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8012064:	2001      	movs	r0, #1
 8012066:	e7fc      	b.n	8012062 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08012068 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8012068:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801206c:	461f      	mov	r7, r3
 801206e:	4689      	mov	r9, r1
 8012070:	4690      	mov	r8, r2
 8012072:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8012074:	f7fe fb12 	bl	801069c <HAL_GetTick>
 8012078:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801207a:	443d      	add	r5, r7
 801207c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 801207e:	f7fe fb0d 	bl	801069c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8012082:	4b26      	ldr	r3, [pc, #152]	@ (801211c <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8012084:	681e      	ldr	r6, [r3, #0]
 8012086:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 801208a:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 801208c:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 801208e:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8012090:	6822      	ldr	r2, [r4, #0]
 8012092:	6893      	ldr	r3, [r2, #8]
 8012094:	ea39 0303 	bics.w	r3, r9, r3
 8012098:	bf0c      	ite	eq
 801209a:	2301      	moveq	r3, #1
 801209c:	2300      	movne	r3, #0
 801209e:	4543      	cmp	r3, r8
 80120a0:	d101      	bne.n	80120a6 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 80120a2:	2000      	movs	r0, #0
 80120a4:	e02e      	b.n	8012104 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 80120a6:	1c7b      	adds	r3, r7, #1
 80120a8:	d0f3      	beq.n	8012092 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80120aa:	f7fe faf7 	bl	801069c <HAL_GetTick>
 80120ae:	eba0 000a 	sub.w	r0, r0, sl
 80120b2:	42a8      	cmp	r0, r5
 80120b4:	d329      	bcc.n	801210a <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80120b6:	6823      	ldr	r3, [r4, #0]
 80120b8:	685a      	ldr	r2, [r3, #4]
 80120ba:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80120be:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80120c0:	6862      	ldr	r2, [r4, #4]
 80120c2:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80120c6:	d10a      	bne.n	80120de <SPI_WaitFlagStateUntilTimeout+0x76>
 80120c8:	68a2      	ldr	r2, [r4, #8]
 80120ca:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 80120ce:	d002      	beq.n	80120d6 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80120d0:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80120d4:	d103      	bne.n	80120de <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 80120d6:	681a      	ldr	r2, [r3, #0]
 80120d8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80120dc:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80120de:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80120e0:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 80120e4:	d107      	bne.n	80120f6 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 80120e6:	681a      	ldr	r2, [r3, #0]
 80120e8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80120ec:	601a      	str	r2, [r3, #0]
 80120ee:	681a      	ldr	r2, [r3, #0]
 80120f0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80120f4:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80120f6:	2301      	movs	r3, #1
 80120f8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80120fc:	2300      	movs	r3, #0
 80120fe:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8012102:	2003      	movs	r0, #3
}
 8012104:	b002      	add	sp, #8
 8012106:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 801210a:	9a01      	ldr	r2, [sp, #4]
      count--;
 801210c:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 801210e:	2a00      	cmp	r2, #0
      count--;
 8012110:	f103 33ff 	add.w	r3, r3, #4294967295
 8012114:	9301      	str	r3, [sp, #4]
 8012116:	bf08      	it	eq
 8012118:	4615      	moveq	r5, r2
 801211a:	e7b9      	b.n	8012090 <SPI_WaitFlagStateUntilTimeout+0x28>
 801211c:	20000080 	.word	0x20000080

08012120 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8012120:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012122:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8012124:	460b      	mov	r3, r1
 8012126:	9200      	str	r2, [sp, #0]
{
 8012128:	460e      	mov	r6, r1
 801212a:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 801212c:	2102      	movs	r1, #2
 801212e:	2201      	movs	r2, #1
{
 8012130:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8012132:	f7ff ff99 	bl	8012068 <SPI_WaitFlagStateUntilTimeout>
 8012136:	4605      	mov	r5, r0
 8012138:	b128      	cbz	r0, 8012146 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 801213a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 801213c:	f043 0320 	orr.w	r3, r3, #32
 8012140:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8012142:	2503      	movs	r5, #3
 8012144:	e015      	b.n	8012172 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8012146:	4b12      	ldr	r3, [pc, #72]	@ (8012190 <SPI_EndRxTxTransaction+0x70>)
 8012148:	6818      	ldr	r0, [r3, #0]
 801214a:	4b12      	ldr	r3, [pc, #72]	@ (8012194 <SPI_EndRxTxTransaction+0x74>)
 801214c:	fbb0 f0f3 	udiv	r0, r0, r3
 8012150:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8012154:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8012156:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8012158:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 801215a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 801215e:	d10b      	bne.n	8012178 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8012160:	9700      	str	r7, [sp, #0]
 8012162:	4633      	mov	r3, r6
 8012164:	462a      	mov	r2, r5
 8012166:	2180      	movs	r1, #128	@ 0x80
 8012168:	4620      	mov	r0, r4
 801216a:	f7ff ff7d 	bl	8012068 <SPI_WaitFlagStateUntilTimeout>
 801216e:	2800      	cmp	r0, #0
 8012170:	d1e3      	bne.n	801213a <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8012172:	4628      	mov	r0, r5
 8012174:	b005      	add	sp, #20
 8012176:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8012178:	9b03      	ldr	r3, [sp, #12]
 801217a:	2b00      	cmp	r3, #0
 801217c:	d0f9      	beq.n	8012172 <SPI_EndRxTxTransaction+0x52>
      count--;
 801217e:	9b03      	ldr	r3, [sp, #12]
 8012180:	3b01      	subs	r3, #1
 8012182:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8012184:	6823      	ldr	r3, [r4, #0]
 8012186:	689b      	ldr	r3, [r3, #8]
 8012188:	061b      	lsls	r3, r3, #24
 801218a:	d4f5      	bmi.n	8012178 <SPI_EndRxTxTransaction+0x58>
 801218c:	e7f1      	b.n	8012172 <SPI_EndRxTxTransaction+0x52>
 801218e:	bf00      	nop
 8012190:	20000080 	.word	0x20000080
 8012194:	016e3600 	.word	0x016e3600

08012198 <SPI_EndRxTransaction>:
{
 8012198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801219a:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 801219c:	6841      	ldr	r1, [r0, #4]
 801219e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 80121a2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80121a4:	d008      	beq.n	80121b8 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80121a6:	9200      	str	r2, [sp, #0]
 80121a8:	2101      	movs	r1, #1
 80121aa:	2200      	movs	r2, #0
 80121ac:	f7ff ff5c 	bl	8012068 <SPI_WaitFlagStateUntilTimeout>
 80121b0:	b9d0      	cbnz	r0, 80121e8 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 80121b2:	2000      	movs	r0, #0
}
 80121b4:	b003      	add	sp, #12
 80121b6:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80121b8:	6881      	ldr	r1, [r0, #8]
 80121ba:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 80121be:	d002      	beq.n	80121c6 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80121c0:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80121c4:	d107      	bne.n	80121d6 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 80121c6:	6825      	ldr	r5, [r4, #0]
 80121c8:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80121ca:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 80121ce:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 80121d2:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80121d4:	d004      	beq.n	80121e0 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80121d6:	9200      	str	r2, [sp, #0]
 80121d8:	2180      	movs	r1, #128	@ 0x80
 80121da:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80121dc:	4620      	mov	r0, r4
 80121de:	e7e5      	b.n	80121ac <SPI_EndRxTransaction+0x14>
 80121e0:	9200      	str	r2, [sp, #0]
 80121e2:	2101      	movs	r1, #1
 80121e4:	2200      	movs	r2, #0
 80121e6:	e7f9      	b.n	80121dc <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80121e8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80121ea:	f043 0320 	orr.w	r3, r3, #32
 80121ee:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80121f0:	2003      	movs	r0, #3
 80121f2:	e7df      	b.n	80121b4 <SPI_EndRxTransaction+0x1c>

080121f4 <HAL_SPI_Init>:
{
 80121f4:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80121f6:	4604      	mov	r4, r0
 80121f8:	2800      	cmp	r0, #0
 80121fa:	d055      	beq.n	80122a8 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80121fc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80121fe:	2b00      	cmp	r3, #0
 8012200:	d14e      	bne.n	80122a0 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8012202:	6842      	ldr	r2, [r0, #4]
 8012204:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8012208:	d000      	beq.n	801220c <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 801220a:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 801220c:	2300      	movs	r3, #0
 801220e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8012210:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8012214:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8012218:	b923      	cbnz	r3, 8012224 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 801221a:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 801221e:	4620      	mov	r0, r4
 8012220:	f7f0 fb92 	bl	8002948 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8012224:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8012226:	68a0      	ldr	r0, [r4, #8]
 8012228:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 801222a:	2302      	movs	r3, #2
 801222c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8012230:	680b      	ldr	r3, [r1, #0]
 8012232:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012236:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8012238:	6863      	ldr	r3, [r4, #4]
 801223a:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 801223e:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8012242:	4303      	orrs	r3, r0
 8012244:	68e0      	ldr	r0, [r4, #12]
 8012246:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 801224a:	4303      	orrs	r3, r0
 801224c:	6920      	ldr	r0, [r4, #16]
 801224e:	f000 0002 	and.w	r0, r0, #2
 8012252:	4303      	orrs	r3, r0
 8012254:	6960      	ldr	r0, [r4, #20]
 8012256:	f000 0001 	and.w	r0, r0, #1
 801225a:	4303      	orrs	r3, r0
 801225c:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8012260:	4303      	orrs	r3, r0
 8012262:	69e0      	ldr	r0, [r4, #28]
 8012264:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8012268:	4303      	orrs	r3, r0
 801226a:	6a20      	ldr	r0, [r4, #32]
 801226c:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8012270:	4303      	orrs	r3, r0
 8012272:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8012274:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8012278:	4303      	orrs	r3, r0
 801227a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 801227c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801227e:	0c12      	lsrs	r2, r2, #16
 8012280:	f003 0310 	and.w	r3, r3, #16
 8012284:	f002 0204 	and.w	r2, r2, #4
 8012288:	431a      	orrs	r2, r3
 801228a:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 801228c:	69cb      	ldr	r3, [r1, #28]
 801228e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8012292:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8012294:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8012296:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8012298:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 801229a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 801229e:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80122a0:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80122a2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80122a6:	e7b1      	b.n	801220c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 80122a8:	2001      	movs	r0, #1
 80122aa:	e7f8      	b.n	801229e <HAL_SPI_Init+0xaa>

080122ac <HAL_SPI_Transmit>:
{
 80122ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80122b0:	4604      	mov	r4, r0
 80122b2:	461f      	mov	r7, r3
 80122b4:	460d      	mov	r5, r1
 80122b6:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 80122b8:	f7fe f9f0 	bl	801069c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80122bc:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80122c0:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80122c2:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80122c4:	b2d8      	uxtb	r0, r3
 80122c6:	f040 809f 	bne.w	8012408 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 80122ca:	2d00      	cmp	r5, #0
 80122cc:	d074      	beq.n	80123b8 <HAL_SPI_Transmit+0x10c>
 80122ce:	f1b8 0f00 	cmp.w	r8, #0
 80122d2:	d071      	beq.n	80123b8 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 80122d4:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80122d8:	2b01      	cmp	r3, #1
 80122da:	f000 8095 	beq.w	8012408 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80122de:	2303      	movs	r3, #3
 80122e0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80122e4:	2300      	movs	r3, #0
 80122e6:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80122e8:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80122ec:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80122f0:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80122f2:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80122f4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80122f6:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80122f8:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80122fa:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80122fe:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8012302:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8012304:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8012308:	d107      	bne.n	801231a <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 801230a:	6833      	ldr	r3, [r6, #0]
 801230c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012310:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8012312:	6833      	ldr	r3, [r6, #0]
 8012314:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8012318:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801231a:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 801231c:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801231e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8012320:	bf5e      	ittt	pl
 8012322:	6833      	ldrpl	r3, [r6, #0]
 8012324:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8012328:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 801232a:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 801232e:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8012330:	d145      	bne.n	80123be <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8012332:	b113      	cbz	r3, 801233a <HAL_SPI_Transmit+0x8e>
 8012334:	f1b8 0f01 	cmp.w	r8, #1
 8012338:	d107      	bne.n	801234a <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 801233a:	f835 3b02 	ldrh.w	r3, [r5], #2
 801233e:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8012340:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8012342:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012344:	3b01      	subs	r3, #1
 8012346:	b29b      	uxth	r3, r3
 8012348:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 801234a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801234c:	b29b      	uxth	r3, r3
 801234e:	b9d3      	cbnz	r3, 8012386 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8012350:	464a      	mov	r2, r9
 8012352:	4639      	mov	r1, r7
 8012354:	4620      	mov	r0, r4
 8012356:	f7ff fee3 	bl	8012120 <SPI_EndRxTxTransaction>
 801235a:	2800      	cmp	r0, #0
 801235c:	d151      	bne.n	8012402 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 801235e:	68a3      	ldr	r3, [r4, #8]
 8012360:	b933      	cbnz	r3, 8012370 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8012362:	9301      	str	r3, [sp, #4]
 8012364:	6823      	ldr	r3, [r4, #0]
 8012366:	68da      	ldr	r2, [r3, #12]
 8012368:	9201      	str	r2, [sp, #4]
 801236a:	689b      	ldr	r3, [r3, #8]
 801236c:	9301      	str	r3, [sp, #4]
 801236e:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8012370:	2301      	movs	r3, #1
 8012372:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012376:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8012378:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 801237a:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 801237c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012380:	bf18      	it	ne
 8012382:	2001      	movne	r0, #1
 8012384:	e018      	b.n	80123b8 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8012386:	6822      	ldr	r2, [r4, #0]
 8012388:	6893      	ldr	r3, [r2, #8]
 801238a:	0798      	lsls	r0, r3, #30
 801238c:	d505      	bpl.n	801239a <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 801238e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012390:	f833 1b02 	ldrh.w	r1, [r3], #2
 8012394:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8012396:	6323      	str	r3, [r4, #48]	@ 0x30
 8012398:	e7d3      	b.n	8012342 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 801239a:	f7fe f97f 	bl	801069c <HAL_GetTick>
 801239e:	eba0 0009 	sub.w	r0, r0, r9
 80123a2:	42b8      	cmp	r0, r7
 80123a4:	d3d1      	bcc.n	801234a <HAL_SPI_Transmit+0x9e>
 80123a6:	1c79      	adds	r1, r7, #1
 80123a8:	d0cf      	beq.n	801234a <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 80123aa:	2301      	movs	r3, #1
 80123ac:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80123b0:	2300      	movs	r3, #0
 80123b2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 80123b6:	2003      	movs	r0, #3
}
 80123b8:	b003      	add	sp, #12
 80123ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80123be:	b113      	cbz	r3, 80123c6 <HAL_SPI_Transmit+0x11a>
 80123c0:	f1b8 0f01 	cmp.w	r8, #1
 80123c4:	d108      	bne.n	80123d8 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80123c6:	782b      	ldrb	r3, [r5, #0]
 80123c8:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80123ca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80123cc:	3301      	adds	r3, #1
 80123ce:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80123d0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80123d2:	3b01      	subs	r3, #1
 80123d4:	b29b      	uxth	r3, r3
 80123d6:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80123d8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80123da:	b29b      	uxth	r3, r3
 80123dc:	2b00      	cmp	r3, #0
 80123de:	d0b7      	beq.n	8012350 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80123e0:	6823      	ldr	r3, [r4, #0]
 80123e2:	689a      	ldr	r2, [r3, #8]
 80123e4:	0792      	lsls	r2, r2, #30
 80123e6:	d503      	bpl.n	80123f0 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80123e8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80123ea:	7812      	ldrb	r2, [r2, #0]
 80123ec:	731a      	strb	r2, [r3, #12]
 80123ee:	e7ec      	b.n	80123ca <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80123f0:	f7fe f954 	bl	801069c <HAL_GetTick>
 80123f4:	eba0 0009 	sub.w	r0, r0, r9
 80123f8:	42b8      	cmp	r0, r7
 80123fa:	d3ed      	bcc.n	80123d8 <HAL_SPI_Transmit+0x12c>
 80123fc:	1c7b      	adds	r3, r7, #1
 80123fe:	d0eb      	beq.n	80123d8 <HAL_SPI_Transmit+0x12c>
 8012400:	e7d3      	b.n	80123aa <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8012402:	2320      	movs	r3, #32
 8012404:	6563      	str	r3, [r4, #84]	@ 0x54
 8012406:	e7aa      	b.n	801235e <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 8012408:	2002      	movs	r0, #2
 801240a:	e7d5      	b.n	80123b8 <HAL_SPI_Transmit+0x10c>

0801240c <HAL_SPI_TransmitReceive>:
{
 801240c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012410:	4604      	mov	r4, r0
 8012412:	460d      	mov	r5, r1
 8012414:	4691      	mov	r9, r2
 8012416:	461e      	mov	r6, r3
 8012418:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 801241c:	f7fe f93e 	bl	801069c <HAL_GetTick>
  tmp_state           = hspi->State;
 8012420:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8012424:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8012426:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8012428:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 801242a:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 801242c:	d00a      	beq.n	8012444 <HAL_SPI_TransmitReceive+0x38>
 801242e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8012432:	f040 80e5 	bne.w	8012600 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8012436:	68a3      	ldr	r3, [r4, #8]
 8012438:	2b00      	cmp	r3, #0
 801243a:	f040 80e1 	bne.w	8012600 <HAL_SPI_TransmitReceive+0x1f4>
 801243e:	2904      	cmp	r1, #4
 8012440:	f040 80de 	bne.w	8012600 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8012444:	2d00      	cmp	r5, #0
 8012446:	d04b      	beq.n	80124e0 <HAL_SPI_TransmitReceive+0xd4>
 8012448:	f1b9 0f00 	cmp.w	r9, #0
 801244c:	d048      	beq.n	80124e0 <HAL_SPI_TransmitReceive+0xd4>
 801244e:	2e00      	cmp	r6, #0
 8012450:	d046      	beq.n	80124e0 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 8012452:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8012456:	2b01      	cmp	r3, #1
 8012458:	f000 80d2 	beq.w	8012600 <HAL_SPI_TransmitReceive+0x1f4>
 801245c:	2301      	movs	r3, #1
 801245e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8012462:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8012466:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 801246a:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 801246c:	bf1c      	itt	ne
 801246e:	2305      	movne	r3, #5
 8012470:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8012474:	2300      	movs	r3, #0
 8012476:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8012478:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801247c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 801247e:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8012480:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8012482:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8012484:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8012486:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8012488:	bf58      	it	pl
 801248a:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 801248c:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 801248e:	bf58      	it	pl
 8012490:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8012494:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8012496:	bf58      	it	pl
 8012498:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 801249a:	68e1      	ldr	r1, [r4, #12]
 801249c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 80124a0:	d155      	bne.n	801254e <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80124a2:	b10a      	cbz	r2, 80124a8 <HAL_SPI_TransmitReceive+0x9c>
 80124a4:	2e01      	cmp	r6, #1
 80124a6:	d107      	bne.n	80124b8 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80124a8:	f835 2b02 	ldrh.w	r2, [r5], #2
 80124ac:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80124ae:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80124b0:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80124b2:	3b01      	subs	r3, #1
 80124b4:	b29b      	uxth	r3, r3
 80124b6:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80124b8:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80124ba:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80124bc:	b29b      	uxth	r3, r3
 80124be:	b98b      	cbnz	r3, 80124e4 <HAL_SPI_TransmitReceive+0xd8>
 80124c0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80124c2:	b29b      	uxth	r3, r3
 80124c4:	b973      	cbnz	r3, 80124e4 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80124c6:	463a      	mov	r2, r7
 80124c8:	4641      	mov	r1, r8
 80124ca:	4620      	mov	r0, r4
 80124cc:	f7ff fe28 	bl	8012120 <SPI_EndRxTxTransaction>
 80124d0:	2800      	cmp	r0, #0
 80124d2:	f000 8081 	beq.w	80125d8 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80124d6:	2320      	movs	r3, #32
 80124d8:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80124da:	2300      	movs	r3, #0
 80124dc:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 80124e0:	2001      	movs	r0, #1
 80124e2:	e031      	b.n	8012548 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80124e4:	6821      	ldr	r1, [r4, #0]
 80124e6:	688b      	ldr	r3, [r1, #8]
 80124e8:	079a      	lsls	r2, r3, #30
 80124ea:	d50d      	bpl.n	8012508 <HAL_SPI_TransmitReceive+0xfc>
 80124ec:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80124ee:	b29b      	uxth	r3, r3
 80124f0:	b153      	cbz	r3, 8012508 <HAL_SPI_TransmitReceive+0xfc>
 80124f2:	b145      	cbz	r5, 8012506 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80124f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80124f6:	f833 2b02 	ldrh.w	r2, [r3], #2
 80124fa:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80124fc:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80124fe:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012500:	3b01      	subs	r3, #1
 8012502:	b29b      	uxth	r3, r3
 8012504:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 8012506:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8012508:	688a      	ldr	r2, [r1, #8]
 801250a:	f012 0201 	ands.w	r2, r2, #1
 801250e:	d00c      	beq.n	801252a <HAL_SPI_TransmitReceive+0x11e>
 8012510:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8012512:	b29b      	uxth	r3, r3
 8012514:	b14b      	cbz	r3, 801252a <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8012516:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8012518:	68c9      	ldr	r1, [r1, #12]
 801251a:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 801251e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8012520:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8012522:	3b01      	subs	r3, #1
 8012524:	b29b      	uxth	r3, r3
 8012526:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8012528:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 801252a:	f7fe f8b7 	bl	801069c <HAL_GetTick>
 801252e:	1bc0      	subs	r0, r0, r7
 8012530:	4540      	cmp	r0, r8
 8012532:	d3c2      	bcc.n	80124ba <HAL_SPI_TransmitReceive+0xae>
 8012534:	f1b8 3fff 	cmp.w	r8, #4294967295
 8012538:	d0bf      	beq.n	80124ba <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 801253a:	2301      	movs	r3, #1
 801253c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8012540:	2300      	movs	r3, #0
 8012542:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8012546:	2003      	movs	r0, #3
}
 8012548:	b003      	add	sp, #12
 801254a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 801254e:	b10a      	cbz	r2, 8012554 <HAL_SPI_TransmitReceive+0x148>
 8012550:	2e01      	cmp	r6, #1
 8012552:	d108      	bne.n	8012566 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8012554:	782a      	ldrb	r2, [r5, #0]
 8012556:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8012558:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801255a:	3301      	adds	r3, #1
 801255c:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 801255e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012560:	3b01      	subs	r3, #1
 8012562:	b29b      	uxth	r3, r3
 8012564:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8012566:	2501      	movs	r5, #1
 8012568:	e02d      	b.n	80125c6 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 801256a:	6822      	ldr	r2, [r4, #0]
 801256c:	6893      	ldr	r3, [r2, #8]
 801256e:	079b      	lsls	r3, r3, #30
 8012570:	d50e      	bpl.n	8012590 <HAL_SPI_TransmitReceive+0x184>
 8012572:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012574:	b29b      	uxth	r3, r3
 8012576:	b15b      	cbz	r3, 8012590 <HAL_SPI_TransmitReceive+0x184>
 8012578:	b14d      	cbz	r5, 801258e <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 801257a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801257c:	781b      	ldrb	r3, [r3, #0]
 801257e:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8012580:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8012582:	3301      	adds	r3, #1
 8012584:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8012586:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012588:	3b01      	subs	r3, #1
 801258a:	b29b      	uxth	r3, r3
 801258c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 801258e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8012590:	6822      	ldr	r2, [r4, #0]
 8012592:	6891      	ldr	r1, [r2, #8]
 8012594:	f011 0101 	ands.w	r1, r1, #1
 8012598:	d00d      	beq.n	80125b6 <HAL_SPI_TransmitReceive+0x1aa>
 801259a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 801259c:	b29b      	uxth	r3, r3
 801259e:	b153      	cbz	r3, 80125b6 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80125a0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80125a2:	68d2      	ldr	r2, [r2, #12]
 80125a4:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80125a6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80125a8:	3301      	adds	r3, #1
 80125aa:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80125ac:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80125ae:	3b01      	subs	r3, #1
 80125b0:	b29b      	uxth	r3, r3
 80125b2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 80125b4:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80125b6:	f7fe f871 	bl	801069c <HAL_GetTick>
 80125ba:	1bc0      	subs	r0, r0, r7
 80125bc:	4540      	cmp	r0, r8
 80125be:	d302      	bcc.n	80125c6 <HAL_SPI_TransmitReceive+0x1ba>
 80125c0:	f1b8 3fff 	cmp.w	r8, #4294967295
 80125c4:	d1b9      	bne.n	801253a <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80125c6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80125c8:	b29b      	uxth	r3, r3
 80125ca:	2b00      	cmp	r3, #0
 80125cc:	d1cd      	bne.n	801256a <HAL_SPI_TransmitReceive+0x15e>
 80125ce:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80125d0:	b29b      	uxth	r3, r3
 80125d2:	2b00      	cmp	r3, #0
 80125d4:	d1c9      	bne.n	801256a <HAL_SPI_TransmitReceive+0x15e>
 80125d6:	e776      	b.n	80124c6 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80125d8:	68a3      	ldr	r3, [r4, #8]
 80125da:	b933      	cbnz	r3, 80125ea <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80125dc:	9301      	str	r3, [sp, #4]
 80125de:	6823      	ldr	r3, [r4, #0]
 80125e0:	68da      	ldr	r2, [r3, #12]
 80125e2:	9201      	str	r2, [sp, #4]
 80125e4:	689b      	ldr	r3, [r3, #8]
 80125e6:	9301      	str	r3, [sp, #4]
 80125e8:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80125ea:	2301      	movs	r3, #1
 80125ec:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80125f0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80125f2:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80125f4:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80125f6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80125fa:	bf18      	it	ne
 80125fc:	2001      	movne	r0, #1
 80125fe:	e7a3      	b.n	8012548 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 8012600:	2002      	movs	r0, #2
 8012602:	e7a1      	b.n	8012548 <HAL_SPI_TransmitReceive+0x13c>

08012604 <HAL_SPI_Receive>:
{
 8012604:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012608:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 801260a:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 801260e:	2b01      	cmp	r3, #1
{
 8012610:	4604      	mov	r4, r0
 8012612:	4689      	mov	r9, r1
 8012614:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8012616:	b2dd      	uxtb	r5, r3
 8012618:	d004      	beq.n	8012624 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 801261a:	2502      	movs	r5, #2
}
 801261c:	4628      	mov	r0, r5
 801261e:	b003      	add	sp, #12
 8012620:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8012624:	6843      	ldr	r3, [r0, #4]
 8012626:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 801262a:	d10b      	bne.n	8012644 <HAL_SPI_Receive+0x40>
 801262c:	6883      	ldr	r3, [r0, #8]
 801262e:	b94b      	cbnz	r3, 8012644 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8012630:	2304      	movs	r3, #4
 8012632:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8012636:	4613      	mov	r3, r2
 8012638:	9600      	str	r6, [sp, #0]
 801263a:	460a      	mov	r2, r1
 801263c:	f7ff fee6 	bl	801240c <HAL_SPI_TransmitReceive>
 8012640:	4605      	mov	r5, r0
 8012642:	e7eb      	b.n	801261c <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8012644:	f7fe f82a 	bl	801069c <HAL_GetTick>
 8012648:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 801264a:	f1b9 0f00 	cmp.w	r9, #0
 801264e:	d0e5      	beq.n	801261c <HAL_SPI_Receive+0x18>
 8012650:	2f00      	cmp	r7, #0
 8012652:	d0e3      	beq.n	801261c <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 8012654:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8012658:	2b01      	cmp	r3, #1
 801265a:	d0de      	beq.n	801261a <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 801265c:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 801265e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8012662:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8012664:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8012666:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 801266a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 801266e:	f04f 0304 	mov.w	r3, #4
 8012672:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8012676:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 801267a:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 801267c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 801267e:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8012680:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8012682:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8012684:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8012686:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8012688:	d107      	bne.n	801269a <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 801268a:	681a      	ldr	r2, [r3, #0]
 801268c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8012690:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8012692:	681a      	ldr	r2, [r3, #0]
 8012694:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8012698:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801269a:	681a      	ldr	r2, [r3, #0]
 801269c:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 801269e:	bf5e      	ittt	pl
 80126a0:	681a      	ldrpl	r2, [r3, #0]
 80126a2:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 80126a6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80126a8:	68e3      	ldr	r3, [r4, #12]
 80126aa:	b1f3      	cbz	r3, 80126ea <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 80126ac:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80126ae:	b29b      	uxth	r3, r3
 80126b0:	b1fb      	cbz	r3, 80126f2 <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80126b2:	6823      	ldr	r3, [r4, #0]
 80126b4:	689a      	ldr	r2, [r3, #8]
 80126b6:	07d2      	lsls	r2, r2, #31
 80126b8:	d53c      	bpl.n	8012734 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80126ba:	68da      	ldr	r2, [r3, #12]
 80126bc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80126be:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80126c2:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80126c4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80126c6:	3b01      	subs	r3, #1
 80126c8:	b29b      	uxth	r3, r3
 80126ca:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 80126cc:	e7ee      	b.n	80126ac <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80126ce:	6823      	ldr	r3, [r4, #0]
 80126d0:	689a      	ldr	r2, [r3, #8]
 80126d2:	07d0      	lsls	r0, r2, #31
 80126d4:	d51e      	bpl.n	8012714 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80126d6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80126d8:	7b1b      	ldrb	r3, [r3, #12]
 80126da:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80126dc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80126de:	3301      	adds	r3, #1
 80126e0:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80126e2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80126e4:	3b01      	subs	r3, #1
 80126e6:	b29b      	uxth	r3, r3
 80126e8:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 80126ea:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80126ec:	b29b      	uxth	r3, r3
 80126ee:	2b00      	cmp	r3, #0
 80126f0:	d1ed      	bne.n	80126ce <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80126f2:	4642      	mov	r2, r8
 80126f4:	4631      	mov	r1, r6
 80126f6:	4620      	mov	r0, r4
 80126f8:	f7ff fd4e 	bl	8012198 <SPI_EndRxTransaction>
 80126fc:	bb18      	cbnz	r0, 8012746 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 80126fe:	2301      	movs	r3, #1
 8012700:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012704:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8012706:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8012708:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 801270a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 801270e:	bf18      	it	ne
 8012710:	2501      	movne	r5, #1
 8012712:	e783      	b.n	801261c <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8012714:	f7fd ffc2 	bl	801069c <HAL_GetTick>
 8012718:	eba0 0008 	sub.w	r0, r0, r8
 801271c:	42b0      	cmp	r0, r6
 801271e:	d3e4      	bcc.n	80126ea <HAL_SPI_Receive+0xe6>
 8012720:	1c71      	adds	r1, r6, #1
 8012722:	d0e2      	beq.n	80126ea <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8012724:	2301      	movs	r3, #1
 8012726:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 801272a:	2300      	movs	r3, #0
 801272c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8012730:	2503      	movs	r5, #3
 8012732:	e773      	b.n	801261c <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8012734:	f7fd ffb2 	bl	801069c <HAL_GetTick>
 8012738:	eba0 0008 	sub.w	r0, r0, r8
 801273c:	42b0      	cmp	r0, r6
 801273e:	d3b5      	bcc.n	80126ac <HAL_SPI_Receive+0xa8>
 8012740:	1c73      	adds	r3, r6, #1
 8012742:	d0b3      	beq.n	80126ac <HAL_SPI_Receive+0xa8>
 8012744:	e7ee      	b.n	8012724 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8012746:	2320      	movs	r3, #32
 8012748:	6563      	str	r3, [r4, #84]	@ 0x54
 801274a:	e7d8      	b.n	80126fe <HAL_SPI_Receive+0xfa>

0801274c <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 801274c:	6a03      	ldr	r3, [r0, #32]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 801274e:	6a02      	ldr	r2, [r0, #32]
 8012750:	f022 0201 	bic.w	r2, r2, #1
{
 8012754:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8012756:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8012758:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 801275a:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 801275c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 801275e:	f022 0273 	bic.w	r2, r2, #115	@ 0x73
  tmpccmrx |= OC_Config->OCMode;
 8012762:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8012764:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8012766:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 801276a:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 801276c:	4d0c      	ldr	r5, [pc, #48]	@ (80127a0 <TIM_OC1_SetConfig+0x54>)
 801276e:	42a8      	cmp	r0, r5
 8012770:	d003      	beq.n	801277a <TIM_OC1_SetConfig+0x2e>
 8012772:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8012776:	42a8      	cmp	r0, r5
 8012778:	d10b      	bne.n	8012792 <TIM_OC1_SetConfig+0x46>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 801277a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 801277c:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8012780:	432b      	orrs	r3, r5
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8012782:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8012786:	f424 7440 	bic.w	r4, r4, #768	@ 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 801278a:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC1NE;
 801278c:	f023 0304 	bic.w	r3, r3, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 8012790:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8012792:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8012794:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8012796:	684a      	ldr	r2, [r1, #4]
 8012798:	6342      	str	r2, [r0, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 801279a:	6203      	str	r3, [r0, #32]
}
 801279c:	bd70      	pop	{r4, r5, r6, pc}
 801279e:	bf00      	nop
 80127a0:	40010000 	.word	0x40010000

080127a4 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80127a4:	6a03      	ldr	r3, [r0, #32]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80127a6:	6a02      	ldr	r2, [r0, #32]
 80127a8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
{
 80127ac:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80127ae:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80127b0:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80127b2:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80127b4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80127b6:	f022 0273 	bic.w	r2, r2, #115	@ 0x73
  tmpccmrx |= OC_Config->OCMode;
 80127ba:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80127bc:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 80127be:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80127c2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80127c6:	4d0d      	ldr	r5, [pc, #52]	@ (80127fc <TIM_OC3_SetConfig+0x58>)
 80127c8:	42a8      	cmp	r0, r5
 80127ca:	d003      	beq.n	80127d4 <TIM_OC3_SetConfig+0x30>
 80127cc:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 80127d0:	42a8      	cmp	r0, r5
 80127d2:	d10d      	bne.n	80127f0 <TIM_OC3_SetConfig+0x4c>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80127d4:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 80127d6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80127da:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80127de:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 80127e2:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80127e6:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC3NE;
 80127e8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80127ec:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80127f0:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80127f2:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 80127f4:	684a      	ldr	r2, [r1, #4]
 80127f6:	63c2      	str	r2, [r0, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80127f8:	6203      	str	r3, [r0, #32]
}
 80127fa:	bd70      	pop	{r4, r5, r6, pc}
 80127fc:	40010000 	.word	0x40010000

08012800 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8012800:	6a03      	ldr	r3, [r0, #32]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8012802:	6a02      	ldr	r2, [r0, #32]
 8012804:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
{
 8012808:	b530      	push	{r4, r5, lr}
  TIMx->CCER &= ~TIM_CCER_CC4E;
 801280a:	6202      	str	r2, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 801280c:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 801280e:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8012810:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8012812:	f422 42e6 	bic.w	r2, r2, #29440	@ 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8012816:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 801281a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 801281c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8012820:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8012824:	4d08      	ldr	r5, [pc, #32]	@ (8012848 <TIM_OC4_SetConfig+0x48>)
 8012826:	42a8      	cmp	r0, r5
 8012828:	d003      	beq.n	8012832 <TIM_OC4_SetConfig+0x32>
 801282a:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 801282e:	42a8      	cmp	r0, r5
 8012830:	d104      	bne.n	801283c <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8012832:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8012834:	f424 4480 	bic.w	r4, r4, #16384	@ 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8012838:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 801283c:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 801283e:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8012840:	684a      	ldr	r2, [r1, #4]
 8012842:	6402      	str	r2, [r0, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8012844:	6203      	str	r3, [r0, #32]
}
 8012846:	bd30      	pop	{r4, r5, pc}
 8012848:	40010000 	.word	0x40010000

0801284c <HAL_TIM_Base_MspInit>:
}
 801284c:	4770      	bx	lr
	...

08012850 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 8012850:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8012854:	2b01      	cmp	r3, #1
 8012856:	d130      	bne.n	80128ba <HAL_TIM_Base_Start_IT+0x6a>
  htim->State = HAL_TIM_STATE_BUSY;
 8012858:	2302      	movs	r3, #2
 801285a:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 801285e:	6803      	ldr	r3, [r0, #0]
 8012860:	68da      	ldr	r2, [r3, #12]
 8012862:	f042 0201 	orr.w	r2, r2, #1
 8012866:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8012868:	4a15      	ldr	r2, [pc, #84]	@ (80128c0 <HAL_TIM_Base_Start_IT+0x70>)
 801286a:	4293      	cmp	r3, r2
 801286c:	d01a      	beq.n	80128a4 <HAL_TIM_Base_Start_IT+0x54>
 801286e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8012872:	d017      	beq.n	80128a4 <HAL_TIM_Base_Start_IT+0x54>
 8012874:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8012878:	4293      	cmp	r3, r2
 801287a:	d013      	beq.n	80128a4 <HAL_TIM_Base_Start_IT+0x54>
 801287c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012880:	4293      	cmp	r3, r2
 8012882:	d00f      	beq.n	80128a4 <HAL_TIM_Base_Start_IT+0x54>
 8012884:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012888:	4293      	cmp	r3, r2
 801288a:	d00b      	beq.n	80128a4 <HAL_TIM_Base_Start_IT+0x54>
 801288c:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8012890:	4293      	cmp	r3, r2
 8012892:	d007      	beq.n	80128a4 <HAL_TIM_Base_Start_IT+0x54>
 8012894:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8012898:	4293      	cmp	r3, r2
 801289a:	d003      	beq.n	80128a4 <HAL_TIM_Base_Start_IT+0x54>
 801289c:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 80128a0:	4293      	cmp	r3, r2
 80128a2:	d104      	bne.n	80128ae <HAL_TIM_Base_Start_IT+0x5e>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80128a4:	689a      	ldr	r2, [r3, #8]
 80128a6:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80128aa:	2a06      	cmp	r2, #6
 80128ac:	d003      	beq.n	80128b6 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
 80128ae:	681a      	ldr	r2, [r3, #0]
 80128b0:	f042 0201 	orr.w	r2, r2, #1
 80128b4:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80128b6:	2000      	movs	r0, #0
 80128b8:	4770      	bx	lr
    return HAL_ERROR;
 80128ba:	2001      	movs	r0, #1
}
 80128bc:	4770      	bx	lr
 80128be:	bf00      	nop
 80128c0:	40010000 	.word	0x40010000

080128c4 <HAL_TIM_PWM_MspInit>:
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
 80128c4:	4770      	bx	lr

080128c6 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 80128c6:	4770      	bx	lr

080128c8 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 80128c8:	4770      	bx	lr

080128ca <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 80128ca:	4770      	bx	lr

080128cc <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 80128cc:	4770      	bx	lr

080128ce <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 80128ce:	6803      	ldr	r3, [r0, #0]
{
 80128d0:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 80128d2:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 80128d4:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80128d6:	07b1      	lsls	r1, r6, #30
{
 80128d8:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80128da:	d50d      	bpl.n	80128f8 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80128dc:	07aa      	lsls	r2, r5, #30
 80128de:	d50b      	bpl.n	80128f8 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80128e0:	f06f 0202 	mvn.w	r2, #2
 80128e4:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80128e6:	2201      	movs	r2, #1
 80128e8:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80128ea:	699b      	ldr	r3, [r3, #24]
 80128ec:	079b      	lsls	r3, r3, #30
 80128ee:	d069      	beq.n	80129c4 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 80128f0:	f7ff ffea 	bl	80128c8 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80128f4:	2300      	movs	r3, #0
 80128f6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80128f8:	0771      	lsls	r1, r6, #29
 80128fa:	d510      	bpl.n	801291e <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80128fc:	076a      	lsls	r2, r5, #29
 80128fe:	d50e      	bpl.n	801291e <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8012900:	6823      	ldr	r3, [r4, #0]
 8012902:	f06f 0204 	mvn.w	r2, #4
 8012906:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8012908:	2202      	movs	r2, #2
 801290a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 801290c:	699b      	ldr	r3, [r3, #24]
 801290e:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8012912:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8012914:	d05c      	beq.n	80129d0 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8012916:	f7ff ffd7 	bl	80128c8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 801291a:	2300      	movs	r3, #0
 801291c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 801291e:	0733      	lsls	r3, r6, #28
 8012920:	d50f      	bpl.n	8012942 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8012922:	0728      	lsls	r0, r5, #28
 8012924:	d50d      	bpl.n	8012942 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8012926:	6823      	ldr	r3, [r4, #0]
 8012928:	f06f 0208 	mvn.w	r2, #8
 801292c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 801292e:	2204      	movs	r2, #4
 8012930:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8012932:	69db      	ldr	r3, [r3, #28]
 8012934:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8012936:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8012938:	d050      	beq.n	80129dc <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 801293a:	f7ff ffc5 	bl	80128c8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 801293e:	2300      	movs	r3, #0
 8012940:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8012942:	06f2      	lsls	r2, r6, #27
 8012944:	d510      	bpl.n	8012968 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8012946:	06eb      	lsls	r3, r5, #27
 8012948:	d50e      	bpl.n	8012968 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 801294a:	6823      	ldr	r3, [r4, #0]
 801294c:	f06f 0210 	mvn.w	r2, #16
 8012950:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8012952:	2208      	movs	r2, #8
 8012954:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8012956:	69db      	ldr	r3, [r3, #28]
 8012958:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 801295c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 801295e:	d043      	beq.n	80129e8 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 8012960:	f7ff ffb2 	bl	80128c8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8012964:	2300      	movs	r3, #0
 8012966:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8012968:	07f0      	lsls	r0, r6, #31
 801296a:	d508      	bpl.n	801297e <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 801296c:	07e9      	lsls	r1, r5, #31
 801296e:	d506      	bpl.n	801297e <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8012970:	6823      	ldr	r3, [r4, #0]
 8012972:	f06f 0201 	mvn.w	r2, #1
 8012976:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8012978:	4620      	mov	r0, r4
 801297a:	f7ef fe41 	bl	8002600 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 801297e:	0632      	lsls	r2, r6, #24
 8012980:	d508      	bpl.n	8012994 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8012982:	062b      	lsls	r3, r5, #24
 8012984:	d506      	bpl.n	8012994 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8012986:	6823      	ldr	r3, [r4, #0]
 8012988:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 801298c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 801298e:	4620      	mov	r0, r4
 8012990:	f000 fa19 	bl	8012dc6 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8012994:	0670      	lsls	r0, r6, #25
 8012996:	d508      	bpl.n	80129aa <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8012998:	0669      	lsls	r1, r5, #25
 801299a:	d506      	bpl.n	80129aa <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 801299c:	6823      	ldr	r3, [r4, #0]
 801299e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80129a2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80129a4:	4620      	mov	r0, r4
 80129a6:	f7ff ff91 	bl	80128cc <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 80129aa:	06b2      	lsls	r2, r6, #26
 80129ac:	d522      	bpl.n	80129f4 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80129ae:	06ab      	lsls	r3, r5, #26
 80129b0:	d520      	bpl.n	80129f4 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 80129b2:	6823      	ldr	r3, [r4, #0]
 80129b4:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 80129b8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 80129ba:	611a      	str	r2, [r3, #16]
}
 80129bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 80129c0:	f000 ba00 	b.w	8012dc4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80129c4:	f7ff ff7f 	bl	80128c6 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80129c8:	4620      	mov	r0, r4
 80129ca:	f7ff ff7e 	bl	80128ca <HAL_TIM_PWM_PulseFinishedCallback>
 80129ce:	e791      	b.n	80128f4 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80129d0:	f7ff ff79 	bl	80128c6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80129d4:	4620      	mov	r0, r4
 80129d6:	f7ff ff78 	bl	80128ca <HAL_TIM_PWM_PulseFinishedCallback>
 80129da:	e79e      	b.n	801291a <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80129dc:	f7ff ff73 	bl	80128c6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80129e0:	4620      	mov	r0, r4
 80129e2:	f7ff ff72 	bl	80128ca <HAL_TIM_PWM_PulseFinishedCallback>
 80129e6:	e7aa      	b.n	801293e <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80129e8:	f7ff ff6d 	bl	80128c6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80129ec:	4620      	mov	r0, r4
 80129ee:	f7ff ff6c 	bl	80128ca <HAL_TIM_PWM_PulseFinishedCallback>
 80129f2:	e7b7      	b.n	8012964 <HAL_TIM_IRQHandler+0x96>
}
 80129f4:	bd70      	pop	{r4, r5, r6, pc}
	...

080129f8 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80129f8:	4a29      	ldr	r2, [pc, #164]	@ (8012aa0 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 80129fa:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80129fc:	4290      	cmp	r0, r2
 80129fe:	d012      	beq.n	8012a26 <TIM_Base_SetConfig+0x2e>
 8012a00:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8012a04:	d00f      	beq.n	8012a26 <TIM_Base_SetConfig+0x2e>
 8012a06:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8012a0a:	4290      	cmp	r0, r2
 8012a0c:	d00b      	beq.n	8012a26 <TIM_Base_SetConfig+0x2e>
 8012a0e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012a12:	4290      	cmp	r0, r2
 8012a14:	d007      	beq.n	8012a26 <TIM_Base_SetConfig+0x2e>
 8012a16:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012a1a:	4290      	cmp	r0, r2
 8012a1c:	d003      	beq.n	8012a26 <TIM_Base_SetConfig+0x2e>
 8012a1e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8012a22:	4290      	cmp	r0, r2
 8012a24:	d108      	bne.n	8012a38 <TIM_Base_SetConfig+0x40>
    tmpcr1 |= Structure->CounterMode;
 8012a26:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8012a28:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8012a2c:	4313      	orrs	r3, r2
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8012a2e:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8012a30:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8012a34:	4313      	orrs	r3, r2
 8012a36:	e016      	b.n	8012a66 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8012a38:	4a1a      	ldr	r2, [pc, #104]	@ (8012aa4 <TIM_Base_SetConfig+0xac>)
 8012a3a:	4290      	cmp	r0, r2
 8012a3c:	d0f7      	beq.n	8012a2e <TIM_Base_SetConfig+0x36>
 8012a3e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012a42:	4290      	cmp	r0, r2
 8012a44:	d0f3      	beq.n	8012a2e <TIM_Base_SetConfig+0x36>
 8012a46:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012a4a:	4290      	cmp	r0, r2
 8012a4c:	d0ef      	beq.n	8012a2e <TIM_Base_SetConfig+0x36>
 8012a4e:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8012a52:	4290      	cmp	r0, r2
 8012a54:	d0eb      	beq.n	8012a2e <TIM_Base_SetConfig+0x36>
 8012a56:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012a5a:	4290      	cmp	r0, r2
 8012a5c:	d0e7      	beq.n	8012a2e <TIM_Base_SetConfig+0x36>
 8012a5e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8012a62:	4290      	cmp	r0, r2
 8012a64:	d0e3      	beq.n	8012a2e <TIM_Base_SetConfig+0x36>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8012a66:	694a      	ldr	r2, [r1, #20]
 8012a68:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012a6c:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8012a6e:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8012a70:	688b      	ldr	r3, [r1, #8]
 8012a72:	62c3      	str	r3, [r0, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
 8012a74:	680b      	ldr	r3, [r1, #0]
 8012a76:	6283      	str	r3, [r0, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8012a78:	4b09      	ldr	r3, [pc, #36]	@ (8012aa0 <TIM_Base_SetConfig+0xa8>)
 8012a7a:	4298      	cmp	r0, r3
 8012a7c:	d003      	beq.n	8012a86 <TIM_Base_SetConfig+0x8e>
 8012a7e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012a82:	4298      	cmp	r0, r3
 8012a84:	d101      	bne.n	8012a8a <TIM_Base_SetConfig+0x92>
    TIMx->RCR = Structure->RepetitionCounter;
 8012a86:	690b      	ldr	r3, [r1, #16]
 8012a88:	6303      	str	r3, [r0, #48]	@ 0x30
  TIMx->EGR = TIM_EGR_UG;
 8012a8a:	2301      	movs	r3, #1
 8012a8c:	6143      	str	r3, [r0, #20]
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8012a8e:	6903      	ldr	r3, [r0, #16]
 8012a90:	07db      	lsls	r3, r3, #31
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8012a92:	bf42      	ittt	mi
 8012a94:	6903      	ldrmi	r3, [r0, #16]
 8012a96:	f023 0301 	bicmi.w	r3, r3, #1
 8012a9a:	6103      	strmi	r3, [r0, #16]
}
 8012a9c:	4770      	bx	lr
 8012a9e:	bf00      	nop
 8012aa0:	40010000 	.word	0x40010000
 8012aa4:	40014000 	.word	0x40014000

08012aa8 <HAL_TIM_Base_Init>:
{
 8012aa8:	b510      	push	{r4, lr}
  if (htim == NULL)
 8012aaa:	4604      	mov	r4, r0
 8012aac:	b330      	cbz	r0, 8012afc <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8012aae:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8012ab2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8012ab6:	b91b      	cbnz	r3, 8012ac0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8012ab8:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8012abc:	f7ff fec6 	bl	801284c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8012ac0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8012ac2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8012ac4:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8012ac8:	1d21      	adds	r1, r4, #4
 8012aca:	f7ff ff95 	bl	80129f8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8012ace:	2301      	movs	r3, #1
 8012ad0:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8012ad4:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8012ad6:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8012ada:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8012ade:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8012ae2:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8012ae6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8012aea:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8012aee:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8012af2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8012af6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8012afa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8012afc:	2001      	movs	r0, #1
 8012afe:	e7fc      	b.n	8012afa <HAL_TIM_Base_Init+0x52>

08012b00 <HAL_TIM_PWM_Init>:
{
 8012b00:	b510      	push	{r4, lr}
  if (htim == NULL)
 8012b02:	4604      	mov	r4, r0
 8012b04:	b330      	cbz	r0, 8012b54 <HAL_TIM_PWM_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8012b06:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8012b0a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8012b0e:	b91b      	cbnz	r3, 8012b18 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8012b10:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_PWM_MspInit(htim);
 8012b14:	f7ff fed6 	bl	80128c4 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8012b18:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8012b1a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8012b1c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8012b20:	1d21      	adds	r1, r4, #4
 8012b22:	f7ff ff69 	bl	80129f8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8012b26:	2301      	movs	r3, #1
 8012b28:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8012b2c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8012b2e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8012b32:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8012b36:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8012b3a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8012b3e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8012b42:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8012b46:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8012b4a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8012b4e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8012b52:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8012b54:	2001      	movs	r0, #1
 8012b56:	e7fc      	b.n	8012b52 <HAL_TIM_PWM_Init+0x52>

08012b58 <TIM_OC2_SetConfig>:
  tmpccer = TIMx->CCER;
 8012b58:	6a03      	ldr	r3, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8012b5a:	6a02      	ldr	r2, [r0, #32]
 8012b5c:	f022 0210 	bic.w	r2, r2, #16
{
 8012b60:	b570      	push	{r4, r5, r6, lr}
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8012b62:	6202      	str	r2, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 8012b64:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8012b66:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8012b68:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8012b6a:	f422 42e6 	bic.w	r2, r2, #29440	@ 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8012b6e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8012b72:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8012b74:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8012b78:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8012b7c:	4d0d      	ldr	r5, [pc, #52]	@ (8012bb4 <TIM_OC2_SetConfig+0x5c>)
 8012b7e:	42a8      	cmp	r0, r5
 8012b80:	d003      	beq.n	8012b8a <TIM_OC2_SetConfig+0x32>
 8012b82:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8012b86:	42a8      	cmp	r0, r5
 8012b88:	d10d      	bne.n	8012ba6 <TIM_OC2_SetConfig+0x4e>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8012b8a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 8012b8c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8012b90:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8012b94:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8012b98:	f424 6440 	bic.w	r4, r4, #3072	@ 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8012b9c:	4335      	orrs	r5, r6
    tmpccer &= ~TIM_CCER_CC2NE;
 8012b9e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8012ba2:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8012ba6:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8012ba8:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8012baa:	684a      	ldr	r2, [r1, #4]
 8012bac:	6382      	str	r2, [r0, #56]	@ 0x38
  TIMx->CCER = tmpccer;
 8012bae:	6203      	str	r3, [r0, #32]
}
 8012bb0:	bd70      	pop	{r4, r5, r6, pc}
 8012bb2:	bf00      	nop
 8012bb4:	40010000 	.word	0x40010000

08012bb8 <HAL_TIM_PWM_ConfigChannel>:
{
 8012bb8:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 8012bba:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8012bbe:	2b01      	cmp	r3, #1
{
 8012bc0:	4604      	mov	r4, r0
  __HAL_LOCK(htim);
 8012bc2:	d04f      	beq.n	8012c64 <HAL_TIM_PWM_ConfigChannel+0xac>
 8012bc4:	2001      	movs	r0, #1
  switch (Channel)
 8012bc6:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 8012bc8:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
  switch (Channel)
 8012bcc:	d03a      	beq.n	8012c44 <HAL_TIM_PWM_ConfigChannel+0x8c>
 8012bce:	d806      	bhi.n	8012bde <HAL_TIM_PWM_ConfigChannel+0x26>
 8012bd0:	b1ba      	cbz	r2, 8012c02 <HAL_TIM_PWM_ConfigChannel+0x4a>
 8012bd2:	2a04      	cmp	r2, #4
 8012bd4:	d026      	beq.n	8012c24 <HAL_TIM_PWM_ConfigChannel+0x6c>
  __HAL_UNLOCK(htim);
 8012bd6:	2300      	movs	r3, #0
 8012bd8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 8012bdc:	bd38      	pop	{r3, r4, r5, pc}
  switch (Channel)
 8012bde:	2a0c      	cmp	r2, #12
 8012be0:	d1f9      	bne.n	8012bd6 <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8012be2:	6820      	ldr	r0, [r4, #0]
 8012be4:	f7ff fe0c 	bl	8012800 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8012be8:	69c3      	ldr	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8012bea:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8012bec:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8012bf0:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8012bf2:	69c3      	ldr	r3, [r0, #28]
 8012bf4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8012bf8:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8012bfa:	69c3      	ldr	r3, [r0, #28]
 8012bfc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8012c00:	e02e      	b.n	8012c60 <HAL_TIM_PWM_ConfigChannel+0xa8>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8012c02:	6820      	ldr	r0, [r4, #0]
 8012c04:	f7ff fda2 	bl	801274c <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8012c08:	6983      	ldr	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8012c0a:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8012c0c:	f043 0308 	orr.w	r3, r3, #8
 8012c10:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8012c12:	6983      	ldr	r3, [r0, #24]
 8012c14:	f023 0304 	bic.w	r3, r3, #4
 8012c18:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8012c1a:	6983      	ldr	r3, [r0, #24]
 8012c1c:	4313      	orrs	r3, r2
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8012c1e:	6183      	str	r3, [r0, #24]
  HAL_StatusTypeDef status = HAL_OK;
 8012c20:	2000      	movs	r0, #0
 8012c22:	e7d8      	b.n	8012bd6 <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8012c24:	6820      	ldr	r0, [r4, #0]
 8012c26:	f7ff ff97 	bl	8012b58 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8012c2a:	6983      	ldr	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8012c2c:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8012c2e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8012c32:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8012c34:	6983      	ldr	r3, [r0, #24]
 8012c36:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8012c3a:	6183      	str	r3, [r0, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8012c3c:	6983      	ldr	r3, [r0, #24]
 8012c3e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8012c42:	e7ec      	b.n	8012c1e <HAL_TIM_PWM_ConfigChannel+0x66>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8012c44:	6820      	ldr	r0, [r4, #0]
 8012c46:	f7ff fdad 	bl	80127a4 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8012c4a:	69c3      	ldr	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8012c4c:	690a      	ldr	r2, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8012c4e:	f043 0308 	orr.w	r3, r3, #8
 8012c52:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8012c54:	69c3      	ldr	r3, [r0, #28]
 8012c56:	f023 0304 	bic.w	r3, r3, #4
 8012c5a:	61c3      	str	r3, [r0, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8012c5c:	69c3      	ldr	r3, [r0, #28]
 8012c5e:	4313      	orrs	r3, r2
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8012c60:	61c3      	str	r3, [r0, #28]
      break;
 8012c62:	e7dd      	b.n	8012c20 <HAL_TIM_PWM_ConfigChannel+0x68>
  __HAL_LOCK(htim);
 8012c64:	2002      	movs	r0, #2
 8012c66:	e7b9      	b.n	8012bdc <HAL_TIM_PWM_ConfigChannel+0x24>

08012c68 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8012c68:	6a03      	ldr	r3, [r0, #32]
{
 8012c6a:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8012c6c:	f001 011f 	and.w	r1, r1, #31
 8012c70:	2401      	movs	r4, #1
 8012c72:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 8012c74:	ea23 0304 	bic.w	r3, r3, r4
 8012c78:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8012c7a:	6a03      	ldr	r3, [r0, #32]
 8012c7c:	408a      	lsls	r2, r1
 8012c7e:	431a      	orrs	r2, r3
 8012c80:	6202      	str	r2, [r0, #32]
}
 8012c82:	bd10      	pop	{r4, pc}

08012c84 <HAL_TIM_OC_Start>:
{
 8012c84:	b508      	push	{r3, lr}
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8012c86:	b929      	cbnz	r1, 8012c94 <HAL_TIM_OC_Start+0x10>
 8012c88:	f890 303e 	ldrb.w	r3, [r0, #62]	@ 0x3e
 8012c8c:	2b01      	cmp	r3, #1
 8012c8e:	d01f      	beq.n	8012cd0 <HAL_TIM_OC_Start+0x4c>
    return HAL_ERROR;
 8012c90:	2001      	movs	r0, #1
 8012c92:	e035      	b.n	8012d00 <HAL_TIM_OC_Start+0x7c>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8012c94:	2904      	cmp	r1, #4
 8012c96:	d107      	bne.n	8012ca8 <HAL_TIM_OC_Start+0x24>
 8012c98:	f890 303f 	ldrb.w	r3, [r0, #63]	@ 0x3f
 8012c9c:	2b01      	cmp	r3, #1
 8012c9e:	d1f7      	bne.n	8012c90 <HAL_TIM_OC_Start+0xc>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8012ca0:	2302      	movs	r3, #2
 8012ca2:	f880 303f 	strb.w	r3, [r0, #63]	@ 0x3f
 8012ca6:	e016      	b.n	8012cd6 <HAL_TIM_OC_Start+0x52>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8012ca8:	2908      	cmp	r1, #8
 8012caa:	bf0c      	ite	eq
 8012cac:	f890 3040 	ldrbeq.w	r3, [r0, #64]	@ 0x40
 8012cb0:	f890 3041 	ldrbne.w	r3, [r0, #65]	@ 0x41
 8012cb4:	3b01      	subs	r3, #1
 8012cb6:	bf18      	it	ne
 8012cb8:	2301      	movne	r3, #1
 8012cba:	2b00      	cmp	r3, #0
 8012cbc:	d1e8      	bne.n	8012c90 <HAL_TIM_OC_Start+0xc>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8012cbe:	2908      	cmp	r1, #8
 8012cc0:	f04f 0302 	mov.w	r3, #2
 8012cc4:	bf0c      	ite	eq
 8012cc6:	f880 3040 	strbeq.w	r3, [r0, #64]	@ 0x40
 8012cca:	f880 3041 	strbne.w	r3, [r0, #65]	@ 0x41
 8012cce:	e002      	b.n	8012cd6 <HAL_TIM_OC_Start+0x52>
 8012cd0:	2302      	movs	r3, #2
 8012cd2:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8012cd6:	6800      	ldr	r0, [r0, #0]
 8012cd8:	2201      	movs	r2, #1
 8012cda:	f7ff ffc5 	bl	8012c68 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8012cde:	4b16      	ldr	r3, [pc, #88]	@ (8012d38 <HAL_TIM_OC_Start+0xb4>)
 8012ce0:	4298      	cmp	r0, r3
 8012ce2:	d003      	beq.n	8012cec <HAL_TIM_OC_Start+0x68>
 8012ce4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012ce8:	4298      	cmp	r0, r3
 8012cea:	d10a      	bne.n	8012d02 <HAL_TIM_OC_Start+0x7e>
    __HAL_TIM_MOE_ENABLE(htim);
 8012cec:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8012cee:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8012cf2:	6443      	str	r3, [r0, #68]	@ 0x44
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8012cf4:	6883      	ldr	r3, [r0, #8]
 8012cf6:	f003 0307 	and.w	r3, r3, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8012cfa:	2b06      	cmp	r3, #6
 8012cfc:	d117      	bne.n	8012d2e <HAL_TIM_OC_Start+0xaa>
  return HAL_OK;
 8012cfe:	2000      	movs	r0, #0
}
 8012d00:	bd08      	pop	{r3, pc}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8012d02:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8012d06:	d0f5      	beq.n	8012cf4 <HAL_TIM_OC_Start+0x70>
 8012d08:	4b0c      	ldr	r3, [pc, #48]	@ (8012d3c <HAL_TIM_OC_Start+0xb8>)
 8012d0a:	4298      	cmp	r0, r3
 8012d0c:	d0f2      	beq.n	8012cf4 <HAL_TIM_OC_Start+0x70>
 8012d0e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012d12:	4298      	cmp	r0, r3
 8012d14:	d0ee      	beq.n	8012cf4 <HAL_TIM_OC_Start+0x70>
 8012d16:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012d1a:	4298      	cmp	r0, r3
 8012d1c:	d0ea      	beq.n	8012cf4 <HAL_TIM_OC_Start+0x70>
 8012d1e:	f503 339a 	add.w	r3, r3, #78848	@ 0x13400
 8012d22:	4298      	cmp	r0, r3
 8012d24:	d0e6      	beq.n	8012cf4 <HAL_TIM_OC_Start+0x70>
 8012d26:	f5a3 3394 	sub.w	r3, r3, #75776	@ 0x12800
 8012d2a:	4298      	cmp	r0, r3
 8012d2c:	d0e2      	beq.n	8012cf4 <HAL_TIM_OC_Start+0x70>
      __HAL_TIM_ENABLE(htim);
 8012d2e:	6803      	ldr	r3, [r0, #0]
 8012d30:	f043 0301 	orr.w	r3, r3, #1
 8012d34:	6003      	str	r3, [r0, #0]
 8012d36:	e7e2      	b.n	8012cfe <HAL_TIM_OC_Start+0x7a>
 8012d38:	40010000 	.word	0x40010000
 8012d3c:	40000400 	.word	0x40000400

08012d40 <HAL_TIM_PWM_Start>:
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 8012d40:	f7ff bfa0 	b.w	8012c84 <HAL_TIM_OC_Start>

08012d44 <HAL_TIM_OC_Stop>:
{
 8012d44:	b538      	push	{r3, r4, r5, lr}
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8012d46:	2200      	movs	r2, #0
{
 8012d48:	4604      	mov	r4, r0
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8012d4a:	6800      	ldr	r0, [r0, #0]
{
 8012d4c:	460d      	mov	r5, r1
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8012d4e:	f7ff ff8b 	bl	8012c68 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8012d52:	4b1a      	ldr	r3, [pc, #104]	@ (8012dbc <HAL_TIM_OC_Stop+0x78>)
 8012d54:	4298      	cmp	r0, r3
 8012d56:	d003      	beq.n	8012d60 <HAL_TIM_OC_Stop+0x1c>
 8012d58:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8012d5c:	4298      	cmp	r0, r3
 8012d5e:	d10d      	bne.n	8012d7c <HAL_TIM_OC_Stop+0x38>
    __HAL_TIM_MOE_DISABLE(htim);
 8012d60:	6a02      	ldr	r2, [r0, #32]
 8012d62:	f241 1311 	movw	r3, #4369	@ 0x1111
 8012d66:	421a      	tst	r2, r3
 8012d68:	d108      	bne.n	8012d7c <HAL_TIM_OC_Stop+0x38>
 8012d6a:	6a02      	ldr	r2, [r0, #32]
 8012d6c:	f240 4344 	movw	r3, #1092	@ 0x444
 8012d70:	421a      	tst	r2, r3
 8012d72:	bf02      	ittt	eq
 8012d74:	6c43      	ldreq	r3, [r0, #68]	@ 0x44
 8012d76:	f423 4300 	biceq.w	r3, r3, #32768	@ 0x8000
 8012d7a:	6443      	streq	r3, [r0, #68]	@ 0x44
  __HAL_TIM_DISABLE(htim);
 8012d7c:	6a02      	ldr	r2, [r0, #32]
 8012d7e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8012d82:	421a      	tst	r2, r3
 8012d84:	d108      	bne.n	8012d98 <HAL_TIM_OC_Stop+0x54>
 8012d86:	6a02      	ldr	r2, [r0, #32]
 8012d88:	f240 4344 	movw	r3, #1092	@ 0x444
 8012d8c:	421a      	tst	r2, r3
 8012d8e:	bf02      	ittt	eq
 8012d90:	6803      	ldreq	r3, [r0, #0]
 8012d92:	f023 0301 	biceq.w	r3, r3, #1
 8012d96:	6003      	streq	r3, [r0, #0]
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 8012d98:	2301      	movs	r3, #1
 8012d9a:	b91d      	cbnz	r5, 8012da4 <HAL_TIM_OC_Stop+0x60>
 8012d9c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
}
 8012da0:	2000      	movs	r0, #0
 8012da2:	bd38      	pop	{r3, r4, r5, pc}
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 8012da4:	2d04      	cmp	r5, #4
 8012da6:	d102      	bne.n	8012dae <HAL_TIM_OC_Stop+0x6a>
 8012da8:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8012dac:	e7f8      	b.n	8012da0 <HAL_TIM_OC_Stop+0x5c>
 8012dae:	2d08      	cmp	r5, #8
 8012db0:	bf0c      	ite	eq
 8012db2:	f884 3040 	strbeq.w	r3, [r4, #64]	@ 0x40
 8012db6:	f884 3041 	strbne.w	r3, [r4, #65]	@ 0x41
 8012dba:	e7f1      	b.n	8012da0 <HAL_TIM_OC_Stop+0x5c>
 8012dbc:	40010000 	.word	0x40010000

08012dc0 <HAL_TIM_PWM_Stop>:
HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 8012dc0:	f7ff bfc0 	b.w	8012d44 <HAL_TIM_OC_Stop>

08012dc4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8012dc4:	4770      	bx	lr

08012dc6 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8012dc6:	4770      	bx	lr

08012dc8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8012dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8012dcc:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8012dd0:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8012dd4:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8012dd8:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8012ddc:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8012de0:	6809      	ldr	r1, [r1, #0]
 8012de2:	ea43 0308 	orr.w	r3, r3, r8
 8012de6:	b981      	cbnz	r1, 8012e0a <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8012de8:	ea43 030e 	orr.w	r3, r3, lr
 8012dec:	4313      	orrs	r3, r2
 8012dee:	ea43 030c 	orr.w	r3, r3, ip
 8012df2:	433b      	orrs	r3, r7
 8012df4:	6801      	ldr	r1, [r0, #0]
 8012df6:	4333      	orrs	r3, r6
 8012df8:	432b      	orrs	r3, r5
 8012dfa:	4323      	orrs	r3, r4
 8012dfc:	f36f 010e 	bfc	r1, #0, #15
 8012e00:	430b      	orrs	r3, r1
 8012e02:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8012e04:	2000      	movs	r0, #0
 8012e06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8012e0a:	6801      	ldr	r1, [r0, #0]
 8012e0c:	ea43 030e 	orr.w	r3, r3, lr
 8012e10:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8012e14:	430b      	orrs	r3, r1
 8012e16:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8012e18:	ea42 030c 	orr.w	r3, r2, ip
 8012e1c:	6841      	ldr	r1, [r0, #4]
 8012e1e:	433b      	orrs	r3, r7
 8012e20:	4333      	orrs	r3, r6
 8012e22:	432b      	orrs	r3, r5
 8012e24:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8012e28:	4323      	orrs	r3, r4
 8012e2a:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8012e2e:	4313      	orrs	r3, r2
 8012e30:	6043      	str	r3, [r0, #4]
 8012e32:	e7e7      	b.n	8012e04 <FMC_SDRAM_Init+0x3c>

08012e34 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012e34:	68cb      	ldr	r3, [r1, #12]
 8012e36:	f103 3cff 	add.w	ip, r3, #4294967295
 8012e3a:	694b      	ldr	r3, [r1, #20]
{
 8012e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012e3e:	684c      	ldr	r4, [r1, #4]
 8012e40:	688f      	ldr	r7, [r1, #8]
 8012e42:	690e      	ldr	r6, [r1, #16]
 8012e44:	698d      	ldr	r5, [r1, #24]
 8012e46:	6809      	ldr	r1, [r1, #0]
 8012e48:	3b01      	subs	r3, #1
 8012e4a:	051b      	lsls	r3, r3, #20
 8012e4c:	3c01      	subs	r4, #1
 8012e4e:	3f01      	subs	r7, #1
 8012e50:	3e01      	subs	r6, #1
 8012e52:	3d01      	subs	r5, #1
 8012e54:	0124      	lsls	r4, r4, #4
 8012e56:	023f      	lsls	r7, r7, #8
 8012e58:	0436      	lsls	r6, r6, #16
 8012e5a:	062d      	lsls	r5, r5, #24
 8012e5c:	3901      	subs	r1, #1
 8012e5e:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8012e62:	b95a      	cbnz	r2, 8012e7c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012e64:	430b      	orrs	r3, r1
 8012e66:	4323      	orrs	r3, r4
 8012e68:	6882      	ldr	r2, [r0, #8]
 8012e6a:	433b      	orrs	r3, r7
 8012e6c:	4333      	orrs	r3, r6
 8012e6e:	432b      	orrs	r3, r5
 8012e70:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8012e74:	4313      	orrs	r3, r2
 8012e76:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8012e78:	2000      	movs	r0, #0
 8012e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8012e7c:	6882      	ldr	r2, [r0, #8]
 8012e7e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8012e82:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8012e86:	4313      	orrs	r3, r2
 8012e88:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8012e8a:	ea44 0307 	orr.w	r3, r4, r7
 8012e8e:	68c2      	ldr	r2, [r0, #12]
 8012e90:	430b      	orrs	r3, r1
 8012e92:	4333      	orrs	r3, r6
 8012e94:	432b      	orrs	r3, r5
 8012e96:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8012e9a:	4313      	orrs	r3, r2
 8012e9c:	60c3      	str	r3, [r0, #12]
 8012e9e:	e7eb      	b.n	8012e78 <FMC_SDRAM_Timing_Init+0x44>

08012ea0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8012ea0:	b570      	push	{r4, r5, r6, lr}
 8012ea2:	4604      	mov	r4, r0
 8012ea4:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8012ea6:	6902      	ldr	r2, [r0, #16]
 8012ea8:	e9d1 3000 	ldrd	r3, r0, [r1]
 8012eac:	4303      	orrs	r3, r0
 8012eae:	68c8      	ldr	r0, [r1, #12]
 8012eb0:	f36f 0215 	bfc	r2, #0, #22
 8012eb4:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8012eb8:	4313      	orrs	r3, r2
 8012eba:	688a      	ldr	r2, [r1, #8]
 8012ebc:	3a01      	subs	r2, #1
 8012ebe:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8012ec2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8012ec4:	f7fd fbea 	bl	801069c <HAL_GetTick>
 8012ec8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8012eca:	69a0      	ldr	r0, [r4, #24]
 8012ecc:	f010 0020 	ands.w	r0, r0, #32
 8012ed0:	d003      	beq.n	8012eda <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8012ed2:	1c6b      	adds	r3, r5, #1
 8012ed4:	d0f9      	beq.n	8012eca <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8012ed6:	b90d      	cbnz	r5, 8012edc <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8012ed8:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8012eda:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8012edc:	f7fd fbde 	bl	801069c <HAL_GetTick>
 8012ee0:	1b80      	subs	r0, r0, r6
 8012ee2:	42a8      	cmp	r0, r5
 8012ee4:	d9f1      	bls.n	8012eca <FMC_SDRAM_SendCommand+0x2a>
 8012ee6:	e7f7      	b.n	8012ed8 <FMC_SDRAM_SendCommand+0x38>

08012ee8 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8012ee8:	6943      	ldr	r3, [r0, #20]
 8012eea:	f36f 034d 	bfc	r3, #1, #13
 8012eee:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8012ef2:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8012ef4:	2000      	movs	r0, #0
 8012ef6:	4770      	bx	lr

08012ef8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8012ef8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8012efa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8012efe:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8012f00:	f001 fdf4 	bl	8014aec <xTaskGetSchedulerState>
 8012f04:	2801      	cmp	r0, #1
 8012f06:	d003      	beq.n	8012f10 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8012f08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8012f0c:	f000 bbe2 	b.w	80136d4 <xPortSysTickHandler>
}
 8012f10:	bd08      	pop	{r3, pc}
	...

08012f14 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8012f14:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8012f18:	b92b      	cbnz	r3, 8012f26 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8012f1a:	4b06      	ldr	r3, [pc, #24]	@ (8012f34 <osKernelInitialize+0x20>)
 8012f1c:	6818      	ldr	r0, [r3, #0]
 8012f1e:	b928      	cbnz	r0, 8012f2c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8012f20:	2201      	movs	r2, #1
 8012f22:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8012f24:	4770      	bx	lr
    stat = osErrorISR;
 8012f26:	f06f 0005 	mvn.w	r0, #5
 8012f2a:	4770      	bx	lr
    } else {
      stat = osError;
 8012f2c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8012f30:	4770      	bx	lr
 8012f32:	bf00      	nop
 8012f34:	20003244 	.word	0x20003244

08012f38 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8012f38:	b510      	push	{r4, lr}
 8012f3a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8012f3e:	b95c      	cbnz	r4, 8012f58 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8012f40:	4b08      	ldr	r3, [pc, #32]	@ (8012f64 <osKernelStart+0x2c>)
 8012f42:	681a      	ldr	r2, [r3, #0]
 8012f44:	2a01      	cmp	r2, #1
 8012f46:	d10a      	bne.n	8012f5e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8012f48:	4a07      	ldr	r2, [pc, #28]	@ (8012f68 <osKernelStart+0x30>)
 8012f4a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8012f4c:	2202      	movs	r2, #2
 8012f4e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8012f50:	f001 fb4a 	bl	80145e8 <vTaskStartScheduler>
      stat = osOK;
 8012f54:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8012f56:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8012f58:	f06f 0005 	mvn.w	r0, #5
 8012f5c:	e7fb      	b.n	8012f56 <osKernelStart+0x1e>
      stat = osError;
 8012f5e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8012f62:	e7f8      	b.n	8012f56 <osKernelStart+0x1e>
 8012f64:	20003244 	.word	0x20003244
 8012f68:	e000ed00 	.word	0xe000ed00

08012f6c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8012f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f6e:	b087      	sub	sp, #28
 8012f70:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8012f72:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8012f74:	460b      	mov	r3, r1
  hTask = NULL;
 8012f76:	9205      	str	r2, [sp, #20]
 8012f78:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8012f7c:	b9fa      	cbnz	r2, 8012fbe <osThreadNew+0x52>
 8012f7e:	b1f0      	cbz	r0, 8012fbe <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8012f80:	b354      	cbz	r4, 8012fd8 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8012f82:	69a5      	ldr	r5, [r4, #24]
 8012f84:	b125      	cbz	r5, 8012f90 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8012f86:	1e69      	subs	r1, r5, #1
 8012f88:	2937      	cmp	r1, #55	@ 0x37
 8012f8a:	d902      	bls.n	8012f92 <osThreadNew+0x26>
        return (NULL);
 8012f8c:	2000      	movs	r0, #0
 8012f8e:	e017      	b.n	8012fc0 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8012f90:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8012f92:	6862      	ldr	r2, [r4, #4]
 8012f94:	07d2      	lsls	r2, r2, #31
 8012f96:	d4f9      	bmi.n	8012f8c <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8012f98:	6966      	ldr	r6, [r4, #20]
 8012f9a:	b19e      	cbz	r6, 8012fc4 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8012f9c:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8012f9e:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8012fa2:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8012fa4:	b187      	cbz	r7, 8012fc8 <osThreadNew+0x5c>
 8012fa6:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 8012faa:	d908      	bls.n	8012fbe <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8012fac:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8012fae:	b134      	cbz	r4, 8012fbe <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8012fb0:	b12e      	cbz	r6, 8012fbe <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8012fb2:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8012fb6:	9500      	str	r5, [sp, #0]
 8012fb8:	f001 faaf 	bl	801451a <xTaskCreateStatic>
 8012fbc:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8012fbe:	9805      	ldr	r0, [sp, #20]
}
 8012fc0:	b007      	add	sp, #28
 8012fc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8012fc4:	2280      	movs	r2, #128	@ 0x80
 8012fc6:	e7ea      	b.n	8012f9e <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8012fc8:	f1bc 0f00 	cmp.w	ip, #0
 8012fcc:	d1f7      	bne.n	8012fbe <osThreadNew+0x52>
 8012fce:	6924      	ldr	r4, [r4, #16]
 8012fd0:	2c00      	cmp	r4, #0
 8012fd2:	d1f4      	bne.n	8012fbe <osThreadNew+0x52>
 8012fd4:	460c      	mov	r4, r1
 8012fd6:	e001      	b.n	8012fdc <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8012fd8:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8012fda:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8012fdc:	a905      	add	r1, sp, #20
 8012fde:	e9cd 5100 	strd	r5, r1, [sp]
 8012fe2:	b292      	uxth	r2, r2
 8012fe4:	4621      	mov	r1, r4
 8012fe6:	f001 fad0 	bl	801458a <xTaskCreate>
 8012fea:	2801      	cmp	r0, #1
            hTask = NULL;
 8012fec:	bf1c      	itt	ne
 8012fee:	2300      	movne	r3, #0
 8012ff0:	9305      	strne	r3, [sp, #20]
 8012ff2:	e7e4      	b.n	8012fbe <osThreadNew+0x52>

08012ff4 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8012ff4:	b508      	push	{r3, lr}
 8012ff6:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8012ffa:	b922      	cbnz	r2, 8013006 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8012ffc:	b108      	cbz	r0, 8013002 <osDelay+0xe>
      vTaskDelay(ticks);
 8012ffe:	f001 fc51 	bl	80148a4 <vTaskDelay>
    stat = osOK;
 8013002:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8013004:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8013006:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 801300a:	e7fb      	b.n	8013004 <osDelay+0x10>

0801300c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 801300c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801300e:	4604      	mov	r4, r0
 8013010:	460e      	mov	r6, r1
 8013012:	4615      	mov	r5, r2
 8013014:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8013018:	b942      	cbnz	r2, 801302c <osSemaphoreNew+0x20>
 801301a:	b138      	cbz	r0, 801302c <osSemaphoreNew+0x20>
 801301c:	4288      	cmp	r0, r1
 801301e:	d305      	bcc.n	801302c <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8013020:	b155      	cbz	r5, 8013038 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8013022:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8013026:	b12b      	cbz	r3, 8013034 <osSemaphoreNew+0x28>
 8013028:	2f4f      	cmp	r7, #79	@ 0x4f
 801302a:	d822      	bhi.n	8013072 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 801302c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 801302e:	4620      	mov	r0, r4
 8013030:	b003      	add	sp, #12
 8013032:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8013034:	2f00      	cmp	r7, #0
 8013036:	d1f9      	bne.n	801302c <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8013038:	2c01      	cmp	r4, #1
 801303a:	d00c      	beq.n	8013056 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 801303c:	4620      	mov	r0, r4
 801303e:	4631      	mov	r1, r6
 8013040:	f000 fd80 	bl	8013b44 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8013044:	4604      	mov	r4, r0
 8013046:	2800      	cmp	r0, #0
 8013048:	d0f0      	beq.n	801302c <osSemaphoreNew+0x20>
        if (attr != NULL) {
 801304a:	b985      	cbnz	r5, 801306e <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 801304c:	4629      	mov	r1, r5
 801304e:	4620      	mov	r0, r4
 8013050:	f001 f89e 	bl	8014190 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8013054:	e7eb      	b.n	801302e <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8013056:	2203      	movs	r2, #3
 8013058:	2100      	movs	r1, #0
 801305a:	2001      	movs	r0, #1
 801305c:	f000 fd29 	bl	8013ab2 <xQueueGenericCreate>
 8013060:	e00e      	b.n	8013080 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8013062:	461a      	mov	r2, r3
 8013064:	f000 fd4c 	bl	8013b00 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8013068:	4604      	mov	r4, r0
 801306a:	2800      	cmp	r0, #0
 801306c:	d0de      	beq.n	801302c <osSemaphoreNew+0x20>
          name = attr->name;
 801306e:	682d      	ldr	r5, [r5, #0]
 8013070:	e7ec      	b.n	801304c <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8013072:	2801      	cmp	r0, #1
 8013074:	d1f5      	bne.n	8013062 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8013076:	2103      	movs	r1, #3
 8013078:	9100      	str	r1, [sp, #0]
 801307a:	4611      	mov	r1, r2
 801307c:	f000 fccb 	bl	8013a16 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8013080:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8013082:	2800      	cmp	r0, #0
 8013084:	d0d2      	beq.n	801302c <osSemaphoreNew+0x20>
 8013086:	2e00      	cmp	r6, #0
 8013088:	d0df      	beq.n	801304a <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 801308a:	2300      	movs	r3, #0
 801308c:	461a      	mov	r2, r3
 801308e:	4619      	mov	r1, r3
 8013090:	f000 fd76 	bl	8013b80 <xQueueGenericSend>
 8013094:	2801      	cmp	r0, #1
 8013096:	d0d8      	beq.n	801304a <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8013098:	4620      	mov	r0, r4
 801309a:	f001 f8a3 	bl	80141e4 <vQueueDelete>
      if (hSemaphore != NULL) {
 801309e:	e7c5      	b.n	801302c <osSemaphoreNew+0x20>

080130a0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80130a0:	b513      	push	{r0, r1, r4, lr}
 80130a2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80130a4:	b328      	cbz	r0, 80130f2 <osSemaphoreAcquire+0x52>
 80130a6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80130aa:	b1cb      	cbz	r3, 80130e0 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 80130ac:	bb09      	cbnz	r1, 80130f2 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80130ae:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80130b0:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80130b2:	f001 f820 	bl	80140f6 <xQueueReceiveFromISR>
 80130b6:	2801      	cmp	r0, #1
 80130b8:	d003      	beq.n	80130c2 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 80130ba:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80130be:	b002      	add	sp, #8
 80130c0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80130c2:	9b01      	ldr	r3, [sp, #4]
 80130c4:	b90b      	cbnz	r3, 80130ca <osSemaphoreAcquire+0x2a>
  stat = osOK;
 80130c6:	2000      	movs	r0, #0
 80130c8:	e7f9      	b.n	80130be <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 80130ca:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80130ce:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80130d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80130d6:	f3bf 8f4f 	dsb	sy
 80130da:	f3bf 8f6f 	isb	sy
 80130de:	e7f2      	b.n	80130c6 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80130e0:	f000 ff4c 	bl	8013f7c <xQueueSemaphoreTake>
 80130e4:	2801      	cmp	r0, #1
 80130e6:	d0ee      	beq.n	80130c6 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 80130e8:	2c00      	cmp	r4, #0
 80130ea:	d0e6      	beq.n	80130ba <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 80130ec:	f06f 0001 	mvn.w	r0, #1
 80130f0:	e7e5      	b.n	80130be <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 80130f2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80130f6:	e7e2      	b.n	80130be <osSemaphoreAcquire+0x1e>

080130f8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80130f8:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80130fa:	b318      	cbz	r0, 8013144 <osSemaphoreRelease+0x4c>
 80130fc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8013100:	b1cb      	cbz	r3, 8013136 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8013102:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8013104:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8013106:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8013108:	f000 fe49 	bl	8013d9e <xQueueGiveFromISR>
 801310c:	2801      	cmp	r0, #1
 801310e:	d004      	beq.n	801311a <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8013110:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8013114:	b003      	add	sp, #12
 8013116:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 801311a:	9b01      	ldr	r3, [sp, #4]
 801311c:	b14b      	cbz	r3, 8013132 <osSemaphoreRelease+0x3a>
 801311e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013122:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013126:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801312a:	f3bf 8f4f 	dsb	sy
 801312e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8013132:	2000      	movs	r0, #0
 8013134:	e7ee      	b.n	8013114 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8013136:	461a      	mov	r2, r3
 8013138:	4619      	mov	r1, r3
 801313a:	f000 fd21 	bl	8013b80 <xQueueGenericSend>
 801313e:	2801      	cmp	r0, #1
 8013140:	d0f7      	beq.n	8013132 <osSemaphoreRelease+0x3a>
 8013142:	e7e5      	b.n	8013110 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8013144:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8013148:	e7e4      	b.n	8013114 <osSemaphoreRelease+0x1c>

0801314a <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 801314a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801314c:	4605      	mov	r5, r0
 801314e:	460e      	mov	r6, r1
 8013150:	4614      	mov	r4, r2
 8013152:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8013156:	b11f      	cbz	r7, 8013160 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8013158:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 801315a:	4628      	mov	r0, r5
 801315c:	b003      	add	sp, #12
 801315e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8013160:	2800      	cmp	r0, #0
 8013162:	d0f9      	beq.n	8013158 <osMessageQueueNew+0xe>
 8013164:	2900      	cmp	r1, #0
 8013166:	d0f7      	beq.n	8013158 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8013168:	b1da      	cbz	r2, 80131a2 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 801316a:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 801316e:	b183      	cbz	r3, 8013192 <osMessageQueueNew+0x48>
 8013170:	2a4f      	cmp	r2, #79	@ 0x4f
 8013172:	d9f1      	bls.n	8013158 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8013174:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8013176:	2a00      	cmp	r2, #0
 8013178:	d0ee      	beq.n	8013158 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 801317a:	6966      	ldr	r6, [r4, #20]
 801317c:	434d      	muls	r5, r1
 801317e:	42ae      	cmp	r6, r5
 8013180:	d3ea      	bcc.n	8013158 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8013182:	9700      	str	r7, [sp, #0]
 8013184:	f000 fc47 	bl	8013a16 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8013188:	4605      	mov	r5, r0
 801318a:	2800      	cmp	r0, #0
 801318c:	d0e4      	beq.n	8013158 <osMessageQueueNew+0xe>
        name = attr->name;
 801318e:	6824      	ldr	r4, [r4, #0]
 8013190:	e011      	b.n	80131b6 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8013192:	2a00      	cmp	r2, #0
 8013194:	d1e0      	bne.n	8013158 <osMessageQueueNew+0xe>
 8013196:	6923      	ldr	r3, [r4, #16]
 8013198:	2b00      	cmp	r3, #0
 801319a:	d1dd      	bne.n	8013158 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 801319c:	6963      	ldr	r3, [r4, #20]
 801319e:	2b00      	cmp	r3, #0
 80131a0:	d1da      	bne.n	8013158 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80131a2:	4628      	mov	r0, r5
 80131a4:	2200      	movs	r2, #0
 80131a6:	4631      	mov	r1, r6
 80131a8:	f000 fc83 	bl	8013ab2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80131ac:	4605      	mov	r5, r0
 80131ae:	2800      	cmp	r0, #0
 80131b0:	d0d2      	beq.n	8013158 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80131b2:	2c00      	cmp	r4, #0
 80131b4:	d1eb      	bne.n	801318e <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80131b6:	4621      	mov	r1, r4
 80131b8:	4628      	mov	r0, r5
 80131ba:	f000 ffe9 	bl	8014190 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80131be:	e7cc      	b.n	801315a <osMessageQueueNew+0x10>

080131c0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80131c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80131c2:	461c      	mov	r4, r3
 80131c4:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80131c8:	b1de      	cbz	r6, 8013202 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80131ca:	b338      	cbz	r0, 801321c <osMessageQueuePut+0x5c>
 80131cc:	b331      	cbz	r1, 801321c <osMessageQueuePut+0x5c>
 80131ce:	bb2b      	cbnz	r3, 801321c <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80131d0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80131d2:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80131d4:	f000 fd86 	bl	8013ce4 <xQueueGenericSendFromISR>
 80131d8:	2801      	cmp	r0, #1
 80131da:	d003      	beq.n	80131e4 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 80131dc:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80131e0:	b002      	add	sp, #8
 80131e2:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80131e4:	9b01      	ldr	r3, [sp, #4]
 80131e6:	b90b      	cbnz	r3, 80131ec <osMessageQueuePut+0x2c>
  stat = osOK;
 80131e8:	2000      	movs	r0, #0
 80131ea:	e7f9      	b.n	80131e0 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 80131ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80131f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80131f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80131f8:	f3bf 8f4f 	dsb	sy
 80131fc:	f3bf 8f6f 	isb	sy
 8013200:	e7f2      	b.n	80131e8 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8013202:	b158      	cbz	r0, 801321c <osMessageQueuePut+0x5c>
 8013204:	b151      	cbz	r1, 801321c <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8013206:	4633      	mov	r3, r6
 8013208:	4622      	mov	r2, r4
 801320a:	f000 fcb9 	bl	8013b80 <xQueueGenericSend>
 801320e:	2801      	cmp	r0, #1
 8013210:	d0ea      	beq.n	80131e8 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8013212:	2c00      	cmp	r4, #0
 8013214:	d0e2      	beq.n	80131dc <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8013216:	f06f 0001 	mvn.w	r0, #1
 801321a:	e7e1      	b.n	80131e0 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 801321c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8013220:	e7de      	b.n	80131e0 <osMessageQueuePut+0x20>

08013222 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8013222:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013224:	461c      	mov	r4, r3
 8013226:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 801322a:	b1db      	cbz	r3, 8013264 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 801322c:	b330      	cbz	r0, 801327c <osMessageQueueGet+0x5a>
 801322e:	b329      	cbz	r1, 801327c <osMessageQueueGet+0x5a>
 8013230:	bb24      	cbnz	r4, 801327c <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8013232:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8013234:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8013236:	f000 ff5e 	bl	80140f6 <xQueueReceiveFromISR>
 801323a:	2801      	cmp	r0, #1
 801323c:	d003      	beq.n	8013246 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 801323e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8013242:	b003      	add	sp, #12
 8013244:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8013246:	9b01      	ldr	r3, [sp, #4]
 8013248:	b90b      	cbnz	r3, 801324e <osMessageQueueGet+0x2c>
  stat = osOK;
 801324a:	2000      	movs	r0, #0
 801324c:	e7f9      	b.n	8013242 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 801324e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013252:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013256:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801325a:	f3bf 8f4f 	dsb	sy
 801325e:	f3bf 8f6f 	isb	sy
 8013262:	e7f2      	b.n	801324a <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8013264:	b150      	cbz	r0, 801327c <osMessageQueueGet+0x5a>
 8013266:	b149      	cbz	r1, 801327c <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8013268:	4622      	mov	r2, r4
 801326a:	f000 fde9 	bl	8013e40 <xQueueReceive>
 801326e:	2801      	cmp	r0, #1
 8013270:	d0eb      	beq.n	801324a <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8013272:	2c00      	cmp	r4, #0
 8013274:	d0e3      	beq.n	801323e <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8013276:	f06f 0001 	mvn.w	r0, #1
 801327a:	e7e2      	b.n	8013242 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 801327c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8013280:	e7df      	b.n	8013242 <osMessageQueueGet+0x20>
	...

08013284 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8013284:	4b03      	ldr	r3, [pc, #12]	@ (8013294 <vApplicationGetIdleTaskMemory+0x10>)
 8013286:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8013288:	4b03      	ldr	r3, [pc, #12]	@ (8013298 <vApplicationGetIdleTaskMemory+0x14>)
 801328a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 801328c:	2380      	movs	r3, #128	@ 0x80
 801328e:	6013      	str	r3, [r2, #0]
}
 8013290:	4770      	bx	lr
 8013292:	bf00      	nop
 8013294:	200031e4 	.word	0x200031e4
 8013298:	20002fe4 	.word	0x20002fe4

0801329c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 801329c:	4b03      	ldr	r3, [pc, #12]	@ (80132ac <vApplicationGetTimerTaskMemory+0x10>)
 801329e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80132a0:	4b03      	ldr	r3, [pc, #12]	@ (80132b0 <vApplicationGetTimerTaskMemory+0x14>)
 80132a2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80132a4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80132a8:	6013      	str	r3, [r2, #0]
}
 80132aa:	4770      	bx	lr
 80132ac:	20002f84 	.word	0x20002f84
 80132b0:	20002b84 	.word	0x20002b84

080132b4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80132b4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80132b6:	4b10      	ldr	r3, [pc, #64]	@ (80132f8 <prvInsertBlockIntoFreeList+0x44>)
 80132b8:	461a      	mov	r2, r3
 80132ba:	681b      	ldr	r3, [r3, #0]
 80132bc:	4283      	cmp	r3, r0
 80132be:	d3fb      	bcc.n	80132b8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80132c0:	6854      	ldr	r4, [r2, #4]
 80132c2:	1911      	adds	r1, r2, r4
 80132c4:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80132c6:	bf01      	itttt	eq
 80132c8:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 80132ca:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80132cc:	1909      	addeq	r1, r1, r4
 80132ce:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80132d0:	6844      	ldr	r4, [r0, #4]
 80132d2:	1901      	adds	r1, r0, r4
 80132d4:	428b      	cmp	r3, r1
 80132d6:	d10c      	bne.n	80132f2 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80132d8:	4908      	ldr	r1, [pc, #32]	@ (80132fc <prvInsertBlockIntoFreeList+0x48>)
 80132da:	6809      	ldr	r1, [r1, #0]
 80132dc:	428b      	cmp	r3, r1
 80132de:	d003      	beq.n	80132e8 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80132e0:	6859      	ldr	r1, [r3, #4]
 80132e2:	4421      	add	r1, r4
 80132e4:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80132e6:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 80132e8:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80132ea:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80132ec:	bf18      	it	ne
 80132ee:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80132f0:	bd10      	pop	{r4, pc}
 80132f2:	4619      	mov	r1, r3
 80132f4:	e7f8      	b.n	80132e8 <prvInsertBlockIntoFreeList+0x34>
 80132f6:	bf00      	nop
 80132f8:	20003260 	.word	0x20003260
 80132fc:	2000325c 	.word	0x2000325c

08013300 <pvPortMalloc>:
{
 8013300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013304:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8013306:	f001 f9b5 	bl	8014674 <vTaskSuspendAll>
		if( pxEnd == NULL )
 801330a:	4942      	ldr	r1, [pc, #264]	@ (8013414 <pvPortMalloc+0x114>)
 801330c:	4d42      	ldr	r5, [pc, #264]	@ (8013418 <pvPortMalloc+0x118>)
 801330e:	680b      	ldr	r3, [r1, #0]
 8013310:	bb0b      	cbnz	r3, 8013356 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8013312:	4a42      	ldr	r2, [pc, #264]	@ (801341c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8013314:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8013316:	bf1f      	itttt	ne
 8013318:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 801331a:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 801331e:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 8013322:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8013324:	bf0c      	ite	eq
 8013326:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 801332a:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 801332c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 801332e:	4e3c      	ldr	r6, [pc, #240]	@ (8013420 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8013330:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8013332:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8013336:	2000      	movs	r0, #0
 8013338:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 801333a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 801333c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8013340:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8013342:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8013346:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8013348:	4b36      	ldr	r3, [pc, #216]	@ (8013424 <pvPortMalloc+0x124>)
 801334a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 801334c:	4b36      	ldr	r3, [pc, #216]	@ (8013428 <pvPortMalloc+0x128>)
 801334e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8013350:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8013354:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8013356:	682e      	ldr	r6, [r5, #0]
 8013358:	4226      	tst	r6, r4
 801335a:	d155      	bne.n	8013408 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 801335c:	2c00      	cmp	r4, #0
 801335e:	d046      	beq.n	80133ee <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8013360:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8013364:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8013366:	bf1c      	itt	ne
 8013368:	f023 0307 	bicne.w	r3, r3, #7
 801336c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 801336e:	2b00      	cmp	r3, #0
 8013370:	d04a      	beq.n	8013408 <pvPortMalloc+0x108>
 8013372:	4f2d      	ldr	r7, [pc, #180]	@ (8013428 <pvPortMalloc+0x128>)
 8013374:	683c      	ldr	r4, [r7, #0]
 8013376:	429c      	cmp	r4, r3
 8013378:	d346      	bcc.n	8013408 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 801337a:	4a29      	ldr	r2, [pc, #164]	@ (8013420 <pvPortMalloc+0x120>)
 801337c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 801337e:	6868      	ldr	r0, [r5, #4]
 8013380:	4298      	cmp	r0, r3
 8013382:	d204      	bcs.n	801338e <pvPortMalloc+0x8e>
 8013384:	f8d5 c000 	ldr.w	ip, [r5]
 8013388:	f1bc 0f00 	cmp.w	ip, #0
 801338c:	d115      	bne.n	80133ba <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 801338e:	6809      	ldr	r1, [r1, #0]
 8013390:	42a9      	cmp	r1, r5
 8013392:	d039      	beq.n	8013408 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8013394:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8013396:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 801339a:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 801339c:	1ac2      	subs	r2, r0, r3
 801339e:	2a10      	cmp	r2, #16
 80133a0:	d912      	bls.n	80133c8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80133a2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80133a4:	0741      	lsls	r1, r0, #29
 80133a6:	d00b      	beq.n	80133c0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80133a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80133ac:	f383 8811 	msr	BASEPRI, r3
 80133b0:	f3bf 8f6f 	isb	sy
 80133b4:	f3bf 8f4f 	dsb	sy
 80133b8:	e7fe      	b.n	80133b8 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 80133ba:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 80133bc:	4665      	mov	r5, ip
 80133be:	e7de      	b.n	801337e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80133c0:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80133c2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80133c4:	f7ff ff76 	bl	80132b4 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80133c8:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80133ca:	4916      	ldr	r1, [pc, #88]	@ (8013424 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80133cc:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80133ce:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 80133d0:	4a16      	ldr	r2, [pc, #88]	@ (801342c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80133d2:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80133d4:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 80133d6:	2300      	movs	r3, #0
 80133d8:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80133da:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80133dc:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80133de:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 80133e0:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80133e4:	bf38      	it	cc
 80133e6:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 80133e8:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80133ea:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 80133ee:	f001 f9e5 	bl	80147bc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80133f2:	0763      	lsls	r3, r4, #29
 80133f4:	d00a      	beq.n	801340c <pvPortMalloc+0x10c>
 80133f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80133fa:	f383 8811 	msr	BASEPRI, r3
 80133fe:	f3bf 8f6f 	isb	sy
 8013402:	f3bf 8f4f 	dsb	sy
 8013406:	e7fe      	b.n	8013406 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8013408:	2400      	movs	r4, #0
 801340a:	e7f0      	b.n	80133ee <pvPortMalloc+0xee>
}
 801340c:	4620      	mov	r0, r4
 801340e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013412:	bf00      	nop
 8013414:	2000325c 	.word	0x2000325c
 8013418:	20003248 	.word	0x20003248
 801341c:	20003268 	.word	0x20003268
 8013420:	20003260 	.word	0x20003260
 8013424:	20003254 	.word	0x20003254
 8013428:	20003258 	.word	0x20003258
 801342c:	20003250 	.word	0x20003250

08013430 <vPortFree>:
{
 8013430:	b510      	push	{r4, lr}
	if( pv != NULL )
 8013432:	4604      	mov	r4, r0
 8013434:	b390      	cbz	r0, 801349c <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8013436:	4a1a      	ldr	r2, [pc, #104]	@ (80134a0 <vPortFree+0x70>)
 8013438:	f850 3c04 	ldr.w	r3, [r0, #-4]
 801343c:	6812      	ldr	r2, [r2, #0]
 801343e:	4213      	tst	r3, r2
 8013440:	d108      	bne.n	8013454 <vPortFree+0x24>
 8013442:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013446:	f383 8811 	msr	BASEPRI, r3
 801344a:	f3bf 8f6f 	isb	sy
 801344e:	f3bf 8f4f 	dsb	sy
 8013452:	e7fe      	b.n	8013452 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8013454:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8013458:	b141      	cbz	r1, 801346c <vPortFree+0x3c>
 801345a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801345e:	f383 8811 	msr	BASEPRI, r3
 8013462:	f3bf 8f6f 	isb	sy
 8013466:	f3bf 8f4f 	dsb	sy
 801346a:	e7fe      	b.n	801346a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 801346c:	ea23 0302 	bic.w	r3, r3, r2
 8013470:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8013474:	f001 f8fe 	bl	8014674 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8013478:	4a0a      	ldr	r2, [pc, #40]	@ (80134a4 <vPortFree+0x74>)
 801347a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801347e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8013480:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8013484:	440b      	add	r3, r1
 8013486:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8013488:	f7ff ff14 	bl	80132b4 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 801348c:	4a06      	ldr	r2, [pc, #24]	@ (80134a8 <vPortFree+0x78>)
 801348e:	6813      	ldr	r3, [r2, #0]
}
 8013490:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8013494:	3301      	adds	r3, #1
 8013496:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8013498:	f001 b990 	b.w	80147bc <xTaskResumeAll>
}
 801349c:	bd10      	pop	{r4, pc}
 801349e:	bf00      	nop
 80134a0:	20003248 	.word	0x20003248
 80134a4:	20003258 	.word	0x20003258
 80134a8:	2000324c 	.word	0x2000324c

080134ac <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80134ac:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80134b0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80134b4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80134b8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80134ba:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80134bc:	2300      	movs	r3, #0
 80134be:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80134c0:	4770      	bx	lr

080134c2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80134c2:	2300      	movs	r3, #0
 80134c4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80134c6:	4770      	bx	lr

080134c8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80134c8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80134ca:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80134cc:	689a      	ldr	r2, [r3, #8]
 80134ce:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80134d0:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80134d2:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80134d4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80134d6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80134d8:	3301      	adds	r3, #1
 80134da:	6003      	str	r3, [r0, #0]
}
 80134dc:	4770      	bx	lr

080134de <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80134de:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80134e0:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80134e2:	1c63      	adds	r3, r4, #1
 80134e4:	d10a      	bne.n	80134fc <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80134e6:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80134e8:	685a      	ldr	r2, [r3, #4]
 80134ea:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80134ec:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80134ee:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80134f0:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80134f2:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80134f4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80134f6:	3301      	adds	r3, #1
 80134f8:	6003      	str	r3, [r0, #0]
}
 80134fa:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80134fc:	f100 0208 	add.w	r2, r0, #8
 8013500:	4613      	mov	r3, r2
 8013502:	6852      	ldr	r2, [r2, #4]
 8013504:	6815      	ldr	r5, [r2, #0]
 8013506:	42a5      	cmp	r5, r4
 8013508:	d9fa      	bls.n	8013500 <vListInsert+0x22>
 801350a:	e7ed      	b.n	80134e8 <vListInsert+0xa>

0801350c <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 801350c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8013510:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8013512:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8013514:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8013516:	6859      	ldr	r1, [r3, #4]
 8013518:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 801351a:	bf08      	it	eq
 801351c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 801351e:	2200      	movs	r2, #0
 8013520:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8013522:	681a      	ldr	r2, [r3, #0]
 8013524:	3a01      	subs	r2, #1
 8013526:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8013528:	6818      	ldr	r0, [r3, #0]
}
 801352a:	4770      	bx	lr

0801352c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 801352c:	4808      	ldr	r0, [pc, #32]	@ (8013550 <prvPortStartFirstTask+0x24>)
 801352e:	6800      	ldr	r0, [r0, #0]
 8013530:	6800      	ldr	r0, [r0, #0]
 8013532:	f380 8808 	msr	MSP, r0
 8013536:	f04f 0000 	mov.w	r0, #0
 801353a:	f380 8814 	msr	CONTROL, r0
 801353e:	b662      	cpsie	i
 8013540:	b661      	cpsie	f
 8013542:	f3bf 8f4f 	dsb	sy
 8013546:	f3bf 8f6f 	isb	sy
 801354a:	df00      	svc	0
 801354c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 801354e:	0000      	.short	0x0000
 8013550:	e000ed08 	.word	0xe000ed08

08013554 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8013554:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8013564 <vPortEnableVFP+0x10>
 8013558:	6801      	ldr	r1, [r0, #0]
 801355a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 801355e:	6001      	str	r1, [r0, #0]
 8013560:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8013562:	0000      	.short	0x0000
 8013564:	e000ed88 	.word	0xe000ed88

08013568 <prvTaskExitError>:
{
 8013568:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 801356a:	2300      	movs	r3, #0
 801356c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 801356e:	4b0d      	ldr	r3, [pc, #52]	@ (80135a4 <prvTaskExitError+0x3c>)
 8013570:	681b      	ldr	r3, [r3, #0]
 8013572:	3301      	adds	r3, #1
 8013574:	d008      	beq.n	8013588 <prvTaskExitError+0x20>
 8013576:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801357a:	f383 8811 	msr	BASEPRI, r3
 801357e:	f3bf 8f6f 	isb	sy
 8013582:	f3bf 8f4f 	dsb	sy
 8013586:	e7fe      	b.n	8013586 <prvTaskExitError+0x1e>
 8013588:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801358c:	f383 8811 	msr	BASEPRI, r3
 8013590:	f3bf 8f6f 	isb	sy
 8013594:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8013598:	9b01      	ldr	r3, [sp, #4]
 801359a:	2b00      	cmp	r3, #0
 801359c:	d0fc      	beq.n	8013598 <prvTaskExitError+0x30>
}
 801359e:	b002      	add	sp, #8
 80135a0:	4770      	bx	lr
 80135a2:	bf00      	nop
 80135a4:	2000008c 	.word	0x2000008c

080135a8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80135a8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80135ac:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80135b0:	4b07      	ldr	r3, [pc, #28]	@ (80135d0 <pxPortInitialiseStack+0x28>)
 80135b2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80135b6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80135ba:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80135be:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80135c2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80135c6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80135ca:	3844      	subs	r0, #68	@ 0x44
 80135cc:	4770      	bx	lr
 80135ce:	bf00      	nop
 80135d0:	08013569 	.word	0x08013569
	...

080135e0 <SVC_Handler>:
	__asm volatile (
 80135e0:	4b07      	ldr	r3, [pc, #28]	@ (8013600 <pxCurrentTCBConst2>)
 80135e2:	6819      	ldr	r1, [r3, #0]
 80135e4:	6808      	ldr	r0, [r1, #0]
 80135e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135ea:	f380 8809 	msr	PSP, r0
 80135ee:	f3bf 8f6f 	isb	sy
 80135f2:	f04f 0000 	mov.w	r0, #0
 80135f6:	f380 8811 	msr	BASEPRI, r0
 80135fa:	4770      	bx	lr
 80135fc:	f3af 8000 	nop.w

08013600 <pxCurrentTCBConst2>:
 8013600:	200137a8 	.word	0x200137a8

08013604 <vPortEnterCritical>:
 8013604:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013608:	f383 8811 	msr	BASEPRI, r3
 801360c:	f3bf 8f6f 	isb	sy
 8013610:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8013614:	4a0a      	ldr	r2, [pc, #40]	@ (8013640 <vPortEnterCritical+0x3c>)
 8013616:	6813      	ldr	r3, [r2, #0]
 8013618:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 801361a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 801361c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 801361e:	d10e      	bne.n	801363e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8013620:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013624:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8013628:	b2db      	uxtb	r3, r3
 801362a:	b143      	cbz	r3, 801363e <vPortEnterCritical+0x3a>
 801362c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013630:	f383 8811 	msr	BASEPRI, r3
 8013634:	f3bf 8f6f 	isb	sy
 8013638:	f3bf 8f4f 	dsb	sy
 801363c:	e7fe      	b.n	801363c <vPortEnterCritical+0x38>
}
 801363e:	4770      	bx	lr
 8013640:	2000008c 	.word	0x2000008c

08013644 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8013644:	4a08      	ldr	r2, [pc, #32]	@ (8013668 <vPortExitCritical+0x24>)
 8013646:	6813      	ldr	r3, [r2, #0]
 8013648:	b943      	cbnz	r3, 801365c <vPortExitCritical+0x18>
 801364a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801364e:	f383 8811 	msr	BASEPRI, r3
 8013652:	f3bf 8f6f 	isb	sy
 8013656:	f3bf 8f4f 	dsb	sy
 801365a:	e7fe      	b.n	801365a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 801365c:	3b01      	subs	r3, #1
 801365e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8013660:	b90b      	cbnz	r3, 8013666 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8013662:	f383 8811 	msr	BASEPRI, r3
}
 8013666:	4770      	bx	lr
 8013668:	2000008c 	.word	0x2000008c
 801366c:	00000000 	.word	0x00000000

08013670 <PendSV_Handler>:
	__asm volatile
 8013670:	f3ef 8009 	mrs	r0, PSP
 8013674:	f3bf 8f6f 	isb	sy
 8013678:	4b15      	ldr	r3, [pc, #84]	@ (80136d0 <pxCurrentTCBConst>)
 801367a:	681a      	ldr	r2, [r3, #0]
 801367c:	f01e 0f10 	tst.w	lr, #16
 8013680:	bf08      	it	eq
 8013682:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8013686:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801368a:	6010      	str	r0, [r2, #0]
 801368c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8013690:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8013694:	f380 8811 	msr	BASEPRI, r0
 8013698:	f3bf 8f4f 	dsb	sy
 801369c:	f3bf 8f6f 	isb	sy
 80136a0:	f001 f924 	bl	80148ec <vTaskSwitchContext>
 80136a4:	f04f 0000 	mov.w	r0, #0
 80136a8:	f380 8811 	msr	BASEPRI, r0
 80136ac:	bc09      	pop	{r0, r3}
 80136ae:	6819      	ldr	r1, [r3, #0]
 80136b0:	6808      	ldr	r0, [r1, #0]
 80136b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136b6:	f01e 0f10 	tst.w	lr, #16
 80136ba:	bf08      	it	eq
 80136bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80136c0:	f380 8809 	msr	PSP, r0
 80136c4:	f3bf 8f6f 	isb	sy
 80136c8:	4770      	bx	lr
 80136ca:	bf00      	nop
 80136cc:	f3af 8000 	nop.w

080136d0 <pxCurrentTCBConst>:
 80136d0:	200137a8 	.word	0x200137a8

080136d4 <xPortSysTickHandler>:
{
 80136d4:	b508      	push	{r3, lr}
	__asm volatile
 80136d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80136da:	f383 8811 	msr	BASEPRI, r3
 80136de:	f3bf 8f6f 	isb	sy
 80136e2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80136e6:	f000 ffd3 	bl	8014690 <xTaskIncrementTick>
 80136ea:	b128      	cbz	r0, 80136f8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80136ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80136f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80136f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 80136f8:	2300      	movs	r3, #0
 80136fa:	f383 8811 	msr	BASEPRI, r3
}
 80136fe:	bd08      	pop	{r3, pc}

08013700 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8013700:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8013704:	2300      	movs	r3, #0
 8013706:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8013708:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 801370a:	4b05      	ldr	r3, [pc, #20]	@ (8013720 <vPortSetupTimerInterrupt+0x20>)
 801370c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8013710:	681b      	ldr	r3, [r3, #0]
 8013712:	fbb3 f3f1 	udiv	r3, r3, r1
 8013716:	3b01      	subs	r3, #1
 8013718:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 801371a:	2307      	movs	r3, #7
 801371c:	6113      	str	r3, [r2, #16]
}
 801371e:	4770      	bx	lr
 8013720:	20000080 	.word	0x20000080

08013724 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8013724:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8013728:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801372a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 801372e:	4a38      	ldr	r2, [pc, #224]	@ (8013810 <xPortStartScheduler+0xec>)
 8013730:	4291      	cmp	r1, r2
 8013732:	d108      	bne.n	8013746 <xPortStartScheduler+0x22>
	__asm volatile
 8013734:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013738:	f383 8811 	msr	BASEPRI, r3
 801373c:	f3bf 8f6f 	isb	sy
 8013740:	f3bf 8f4f 	dsb	sy
 8013744:	e7fe      	b.n	8013744 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8013746:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 801374a:	4b32      	ldr	r3, [pc, #200]	@ (8013814 <xPortStartScheduler+0xf0>)
 801374c:	429a      	cmp	r2, r3
 801374e:	d108      	bne.n	8013762 <xPortStartScheduler+0x3e>
 8013750:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013754:	f383 8811 	msr	BASEPRI, r3
 8013758:	f3bf 8f6f 	isb	sy
 801375c:	f3bf 8f4f 	dsb	sy
 8013760:	e7fe      	b.n	8013760 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8013762:	4b2d      	ldr	r3, [pc, #180]	@ (8013818 <xPortStartScheduler+0xf4>)
 8013764:	781a      	ldrb	r2, [r3, #0]
 8013766:	b2d2      	uxtb	r2, r2
 8013768:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801376a:	22ff      	movs	r2, #255	@ 0xff
 801376c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 801376e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8013770:	4a2a      	ldr	r2, [pc, #168]	@ (801381c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8013772:	b2db      	uxtb	r3, r3
 8013774:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8013778:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801377c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8013780:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8013782:	4a27      	ldr	r2, [pc, #156]	@ (8013820 <xPortStartScheduler+0xfc>)
 8013784:	2307      	movs	r3, #7
 8013786:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8013788:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 801378c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801378e:	0609      	lsls	r1, r1, #24
 8013790:	d40a      	bmi.n	80137a8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8013792:	2b03      	cmp	r3, #3
 8013794:	d011      	beq.n	80137ba <xPortStartScheduler+0x96>
 8013796:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801379a:	f383 8811 	msr	BASEPRI, r3
 801379e:	f3bf 8f6f 	isb	sy
 80137a2:	f3bf 8f4f 	dsb	sy
 80137a6:	e7fe      	b.n	80137a6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 80137a8:	3b01      	subs	r3, #1
 80137aa:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80137ac:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80137b0:	005b      	lsls	r3, r3, #1
 80137b2:	b2db      	uxtb	r3, r3
 80137b4:	f88d 3003 	strb.w	r3, [sp, #3]
 80137b8:	e7e6      	b.n	8013788 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80137ba:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80137be:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80137c0:	9b01      	ldr	r3, [sp, #4]
 80137c2:	4a15      	ldr	r2, [pc, #84]	@ (8013818 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80137c4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80137c8:	b2db      	uxtb	r3, r3
 80137ca:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80137cc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80137d0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80137d4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80137d8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80137dc:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80137e0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 80137e4:	f7ff ff8c 	bl	8013700 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80137e8:	4b0e      	ldr	r3, [pc, #56]	@ (8013824 <xPortStartScheduler+0x100>)
 80137ea:	2500      	movs	r5, #0
 80137ec:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80137ee:	f7ff feb1 	bl	8013554 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80137f2:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 80137f6:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 80137fa:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 80137fe:	f7ff fe95 	bl	801352c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8013802:	f001 f873 	bl	80148ec <vTaskSwitchContext>
	prvTaskExitError();
 8013806:	f7ff feaf 	bl	8013568 <prvTaskExitError>
}
 801380a:	4628      	mov	r0, r5
 801380c:	b003      	add	sp, #12
 801380e:	bd30      	pop	{r4, r5, pc}
 8013810:	410fc271 	.word	0x410fc271
 8013814:	410fc270 	.word	0x410fc270
 8013818:	e000e400 	.word	0xe000e400
 801381c:	2001326c 	.word	0x2001326c
 8013820:	20013268 	.word	0x20013268
 8013824:	2000008c 	.word	0x2000008c

08013828 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8013828:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 801382c:	2b0f      	cmp	r3, #15
 801382e:	d90e      	bls.n	801384e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8013830:	4a11      	ldr	r2, [pc, #68]	@ (8013878 <vPortValidateInterruptPriority+0x50>)
 8013832:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8013834:	4a11      	ldr	r2, [pc, #68]	@ (801387c <vPortValidateInterruptPriority+0x54>)
 8013836:	7812      	ldrb	r2, [r2, #0]
 8013838:	429a      	cmp	r2, r3
 801383a:	d908      	bls.n	801384e <vPortValidateInterruptPriority+0x26>
 801383c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013840:	f383 8811 	msr	BASEPRI, r3
 8013844:	f3bf 8f6f 	isb	sy
 8013848:	f3bf 8f4f 	dsb	sy
 801384c:	e7fe      	b.n	801384c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 801384e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013852:	4a0b      	ldr	r2, [pc, #44]	@ (8013880 <vPortValidateInterruptPriority+0x58>)
 8013854:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8013858:	6812      	ldr	r2, [r2, #0]
 801385a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 801385e:	4293      	cmp	r3, r2
 8013860:	d908      	bls.n	8013874 <vPortValidateInterruptPriority+0x4c>
 8013862:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013866:	f383 8811 	msr	BASEPRI, r3
 801386a:	f3bf 8f6f 	isb	sy
 801386e:	f3bf 8f4f 	dsb	sy
 8013872:	e7fe      	b.n	8013872 <vPortValidateInterruptPriority+0x4a>
	}
 8013874:	4770      	bx	lr
 8013876:	bf00      	nop
 8013878:	e000e3f0 	.word	0xe000e3f0
 801387c:	2001326c 	.word	0x2001326c
 8013880:	20013268 	.word	0x20013268

08013884 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8013884:	b510      	push	{r4, lr}
 8013886:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8013888:	f7ff febc 	bl	8013604 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 801388c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 801388e:	f7ff fed9 	bl	8013644 <vPortExitCritical>

	return xReturn;
}
 8013892:	fab4 f084 	clz	r0, r4
 8013896:	0940      	lsrs	r0, r0, #5
 8013898:	bd10      	pop	{r4, pc}

0801389a <prvCopyDataToQueue>:
{
 801389a:	b570      	push	{r4, r5, r6, lr}
 801389c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 801389e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80138a0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 80138a2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80138a4:	b942      	cbnz	r2, 80138b8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80138a6:	6806      	ldr	r6, [r0, #0]
 80138a8:	b99e      	cbnz	r6, 80138d2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80138aa:	6880      	ldr	r0, [r0, #8]
 80138ac:	f001 f96c 	bl	8014b88 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80138b0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80138b2:	3501      	adds	r5, #1
 80138b4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80138b6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80138b8:	b96e      	cbnz	r6, 80138d6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80138ba:	6840      	ldr	r0, [r0, #4]
 80138bc:	f01b fa47 	bl	802ed4e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80138c0:	6863      	ldr	r3, [r4, #4]
 80138c2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80138c4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80138c6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80138c8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80138ca:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80138cc:	bf24      	itt	cs
 80138ce:	6823      	ldrcs	r3, [r4, #0]
 80138d0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80138d2:	2000      	movs	r0, #0
 80138d4:	e7ed      	b.n	80138b2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80138d6:	68c0      	ldr	r0, [r0, #12]
 80138d8:	f01b fa39 	bl	802ed4e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80138dc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80138de:	68e3      	ldr	r3, [r4, #12]
 80138e0:	4251      	negs	r1, r2
 80138e2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80138e4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80138e6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80138e8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80138ea:	bf3e      	ittt	cc
 80138ec:	68a3      	ldrcc	r3, [r4, #8]
 80138ee:	185b      	addcc	r3, r3, r1
 80138f0:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80138f2:	2e02      	cmp	r6, #2
 80138f4:	d1ed      	bne.n	80138d2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80138f6:	b10d      	cbz	r5, 80138fc <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 80138f8:	3d01      	subs	r5, #1
 80138fa:	e7ea      	b.n	80138d2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 80138fc:	4628      	mov	r0, r5
 80138fe:	e7d8      	b.n	80138b2 <prvCopyDataToQueue+0x18>

08013900 <prvCopyDataFromQueue>:
{
 8013900:	4603      	mov	r3, r0
 8013902:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8013904:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8013906:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8013908:	b16a      	cbz	r2, 8013926 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801390a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 801390c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801390e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8013910:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8013912:	bf28      	it	cs
 8013914:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8013916:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8013918:	bf28      	it	cs
 801391a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801391c:	68d9      	ldr	r1, [r3, #12]
}
 801391e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8013922:	f01b ba14 	b.w	802ed4e <memcpy>
}
 8013926:	f85d 4b04 	ldr.w	r4, [sp], #4
 801392a:	4770      	bx	lr

0801392c <prvUnlockQueue>:
{
 801392c:	b570      	push	{r4, r5, r6, lr}
 801392e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8013930:	f7ff fe68 	bl	8013604 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8013934:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013938:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 801393c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801393e:	2d00      	cmp	r5, #0
 8013940:	dd01      	ble.n	8013946 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8013942:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013944:	b9b3      	cbnz	r3, 8013974 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8013946:	23ff      	movs	r3, #255	@ 0xff
 8013948:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 801394c:	f7ff fe7a 	bl	8013644 <vPortExitCritical>
	taskENTER_CRITICAL();
 8013950:	f7ff fe58 	bl	8013604 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8013954:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8013958:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 801395c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801395e:	2d00      	cmp	r5, #0
 8013960:	dd01      	ble.n	8013966 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8013962:	6923      	ldr	r3, [r4, #16]
 8013964:	b97b      	cbnz	r3, 8013986 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8013966:	23ff      	movs	r3, #255	@ 0xff
 8013968:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 801396c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8013970:	f7ff be68 	b.w	8013644 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013974:	4630      	mov	r0, r6
 8013976:	f001 f82b 	bl	80149d0 <xTaskRemoveFromEventList>
 801397a:	b108      	cbz	r0, 8013980 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 801397c:	f001 f8b0 	bl	8014ae0 <vTaskMissedYield>
			--cTxLock;
 8013980:	3d01      	subs	r5, #1
 8013982:	b26d      	sxtb	r5, r5
 8013984:	e7db      	b.n	801393e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8013986:	4630      	mov	r0, r6
 8013988:	f001 f822 	bl	80149d0 <xTaskRemoveFromEventList>
 801398c:	b108      	cbz	r0, 8013992 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 801398e:	f001 f8a7 	bl	8014ae0 <vTaskMissedYield>
				--cRxLock;
 8013992:	3d01      	subs	r5, #1
 8013994:	b26d      	sxtb	r5, r5
 8013996:	e7e2      	b.n	801395e <prvUnlockQueue+0x32>

08013998 <xQueueGenericReset>:
{
 8013998:	b538      	push	{r3, r4, r5, lr}
 801399a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 801399c:	4604      	mov	r4, r0
 801399e:	b940      	cbnz	r0, 80139b2 <xQueueGenericReset+0x1a>
 80139a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80139a4:	f383 8811 	msr	BASEPRI, r3
 80139a8:	f3bf 8f6f 	isb	sy
 80139ac:	f3bf 8f4f 	dsb	sy
 80139b0:	e7fe      	b.n	80139b0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80139b2:	f7ff fe27 	bl	8013604 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80139b6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 80139ba:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80139bc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80139be:	434b      	muls	r3, r1
 80139c0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80139c2:	1a5b      	subs	r3, r3, r1
 80139c4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80139c6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 80139c8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80139ca:	2000      	movs	r0, #0
 80139cc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80139ce:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 80139d0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80139d4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 80139d8:	b9a5      	cbnz	r5, 8013a04 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80139da:	6923      	ldr	r3, [r4, #16]
 80139dc:	b173      	cbz	r3, 80139fc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80139de:	f104 0010 	add.w	r0, r4, #16
 80139e2:	f000 fff5 	bl	80149d0 <xTaskRemoveFromEventList>
 80139e6:	b148      	cbz	r0, 80139fc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80139e8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80139ec:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80139f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80139f4:	f3bf 8f4f 	dsb	sy
 80139f8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80139fc:	f7ff fe22 	bl	8013644 <vPortExitCritical>
}
 8013a00:	2001      	movs	r0, #1
 8013a02:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8013a04:	f104 0010 	add.w	r0, r4, #16
 8013a08:	f7ff fd50 	bl	80134ac <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8013a0c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8013a10:	f7ff fd4c 	bl	80134ac <vListInitialise>
 8013a14:	e7f2      	b.n	80139fc <xQueueGenericReset+0x64>

08013a16 <xQueueGenericCreateStatic>:
	{
 8013a16:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013a18:	460d      	mov	r5, r1
 8013a1a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8013a1c:	b940      	cbnz	r0, 8013a30 <xQueueGenericCreateStatic+0x1a>
 8013a1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013a22:	f383 8811 	msr	BASEPRI, r3
 8013a26:	f3bf 8f6f 	isb	sy
 8013a2a:	f3bf 8f4f 	dsb	sy
 8013a2e:	e7fe      	b.n	8013a2e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8013a30:	b943      	cbnz	r3, 8013a44 <xQueueGenericCreateStatic+0x2e>
 8013a32:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013a36:	f383 8811 	msr	BASEPRI, r3
 8013a3a:	f3bf 8f6f 	isb	sy
 8013a3e:	f3bf 8f4f 	dsb	sy
 8013a42:	e7fe      	b.n	8013a42 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8013a44:	b14a      	cbz	r2, 8013a5a <xQueueGenericCreateStatic+0x44>
 8013a46:	b991      	cbnz	r1, 8013a6e <xQueueGenericCreateStatic+0x58>
 8013a48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013a4c:	f383 8811 	msr	BASEPRI, r3
 8013a50:	f3bf 8f6f 	isb	sy
 8013a54:	f3bf 8f4f 	dsb	sy
 8013a58:	e7fe      	b.n	8013a58 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8013a5a:	b141      	cbz	r1, 8013a6e <xQueueGenericCreateStatic+0x58>
 8013a5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013a60:	f383 8811 	msr	BASEPRI, r3
 8013a64:	f3bf 8f6f 	isb	sy
 8013a68:	f3bf 8f4f 	dsb	sy
 8013a6c:	e7fe      	b.n	8013a6c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8013a6e:	2350      	movs	r3, #80	@ 0x50
 8013a70:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8013a72:	9b01      	ldr	r3, [sp, #4]
 8013a74:	2b50      	cmp	r3, #80	@ 0x50
 8013a76:	d008      	beq.n	8013a8a <xQueueGenericCreateStatic+0x74>
 8013a78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013a7c:	f383 8811 	msr	BASEPRI, r3
 8013a80:	f3bf 8f6f 	isb	sy
 8013a84:	f3bf 8f4f 	dsb	sy
 8013a88:	e7fe      	b.n	8013a88 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8013a8a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8013a8c:	2d00      	cmp	r5, #0
 8013a8e:	bf08      	it	eq
 8013a90:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8013a92:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8013a96:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 8013a9a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8013a9c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8013a9e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8013aa0:	f7ff ff7a 	bl	8013998 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8013aa4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8013aa8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8013aac:	4620      	mov	r0, r4
 8013aae:	b003      	add	sp, #12
 8013ab0:	bd30      	pop	{r4, r5, pc}

08013ab2 <xQueueGenericCreate>:
	{
 8013ab2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013ab4:	460d      	mov	r5, r1
 8013ab6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8013ab8:	4606      	mov	r6, r0
 8013aba:	b940      	cbnz	r0, 8013ace <xQueueGenericCreate+0x1c>
 8013abc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013ac0:	f383 8811 	msr	BASEPRI, r3
 8013ac4:	f3bf 8f6f 	isb	sy
 8013ac8:	f3bf 8f4f 	dsb	sy
 8013acc:	e7fe      	b.n	8013acc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8013ace:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8013ad0:	3050      	adds	r0, #80	@ 0x50
 8013ad2:	f7ff fc15 	bl	8013300 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8013ad6:	4604      	mov	r4, r0
 8013ad8:	b170      	cbz	r0, 8013af8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8013ada:	2300      	movs	r3, #0
 8013adc:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8013ae0:	b165      	cbz	r5, 8013afc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8013ae2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8013ae6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 8013aea:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8013aec:	2101      	movs	r1, #1
 8013aee:	4620      	mov	r0, r4
 8013af0:	f7ff ff52 	bl	8013998 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8013af4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8013af8:	4620      	mov	r0, r4
 8013afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8013afc:	4603      	mov	r3, r0
 8013afe:	e7f2      	b.n	8013ae6 <xQueueGenericCreate+0x34>

08013b00 <xQueueCreateCountingSemaphoreStatic>:
	{
 8013b00:	b513      	push	{r0, r1, r4, lr}
 8013b02:	4613      	mov	r3, r2
 8013b04:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8013b06:	b940      	cbnz	r0, 8013b1a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8013b08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013b0c:	f383 8811 	msr	BASEPRI, r3
 8013b10:	f3bf 8f6f 	isb	sy
 8013b14:	f3bf 8f4f 	dsb	sy
 8013b18:	e7fe      	b.n	8013b18 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8013b1a:	4288      	cmp	r0, r1
 8013b1c:	d208      	bcs.n	8013b30 <xQueueCreateCountingSemaphoreStatic+0x30>
 8013b1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013b22:	f383 8811 	msr	BASEPRI, r3
 8013b26:	f3bf 8f6f 	isb	sy
 8013b2a:	f3bf 8f4f 	dsb	sy
 8013b2e:	e7fe      	b.n	8013b2e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8013b30:	2202      	movs	r2, #2
 8013b32:	9200      	str	r2, [sp, #0]
 8013b34:	2200      	movs	r2, #0
 8013b36:	4611      	mov	r1, r2
 8013b38:	f7ff ff6d 	bl	8013a16 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8013b3c:	b100      	cbz	r0, 8013b40 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8013b3e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8013b40:	b002      	add	sp, #8
 8013b42:	bd10      	pop	{r4, pc}

08013b44 <xQueueCreateCountingSemaphore>:
	{
 8013b44:	b510      	push	{r4, lr}
 8013b46:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8013b48:	b940      	cbnz	r0, 8013b5c <xQueueCreateCountingSemaphore+0x18>
 8013b4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013b4e:	f383 8811 	msr	BASEPRI, r3
 8013b52:	f3bf 8f6f 	isb	sy
 8013b56:	f3bf 8f4f 	dsb	sy
 8013b5a:	e7fe      	b.n	8013b5a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8013b5c:	4288      	cmp	r0, r1
 8013b5e:	d208      	bcs.n	8013b72 <xQueueCreateCountingSemaphore+0x2e>
 8013b60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013b64:	f383 8811 	msr	BASEPRI, r3
 8013b68:	f3bf 8f6f 	isb	sy
 8013b6c:	f3bf 8f4f 	dsb	sy
 8013b70:	e7fe      	b.n	8013b70 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8013b72:	2202      	movs	r2, #2
 8013b74:	2100      	movs	r1, #0
 8013b76:	f7ff ff9c 	bl	8013ab2 <xQueueGenericCreate>
		if( xHandle != NULL )
 8013b7a:	b100      	cbz	r0, 8013b7e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8013b7c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8013b7e:	bd10      	pop	{r4, pc}

08013b80 <xQueueGenericSend>:
{
 8013b80:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013b84:	460f      	mov	r7, r1
 8013b86:	9201      	str	r2, [sp, #4]
 8013b88:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8013b8a:	4604      	mov	r4, r0
 8013b8c:	b940      	cbnz	r0, 8013ba0 <xQueueGenericSend+0x20>
 8013b8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013b92:	f383 8811 	msr	BASEPRI, r3
 8013b96:	f3bf 8f6f 	isb	sy
 8013b9a:	f3bf 8f4f 	dsb	sy
 8013b9e:	e7fe      	b.n	8013b9e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8013ba0:	b951      	cbnz	r1, 8013bb8 <xQueueGenericSend+0x38>
 8013ba2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8013ba4:	b143      	cbz	r3, 8013bb8 <xQueueGenericSend+0x38>
 8013ba6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013baa:	f383 8811 	msr	BASEPRI, r3
 8013bae:	f3bf 8f6f 	isb	sy
 8013bb2:	f3bf 8f4f 	dsb	sy
 8013bb6:	e7fe      	b.n	8013bb6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8013bb8:	2e02      	cmp	r6, #2
 8013bba:	d10b      	bne.n	8013bd4 <xQueueGenericSend+0x54>
 8013bbc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013bbe:	2b01      	cmp	r3, #1
 8013bc0:	d008      	beq.n	8013bd4 <xQueueGenericSend+0x54>
 8013bc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013bc6:	f383 8811 	msr	BASEPRI, r3
 8013bca:	f3bf 8f6f 	isb	sy
 8013bce:	f3bf 8f4f 	dsb	sy
 8013bd2:	e7fe      	b.n	8013bd2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8013bd4:	f000 ff8a 	bl	8014aec <xTaskGetSchedulerState>
 8013bd8:	4605      	mov	r5, r0
 8013bda:	b320      	cbz	r0, 8013c26 <xQueueGenericSend+0xa6>
 8013bdc:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8013bde:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8013be2:	f7ff fd0f 	bl	8013604 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8013be6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8013be8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013bea:	429a      	cmp	r2, r3
 8013bec:	d227      	bcs.n	8013c3e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8013bee:	4632      	mov	r2, r6
 8013bf0:	4639      	mov	r1, r7
 8013bf2:	4620      	mov	r0, r4
 8013bf4:	f7ff fe51 	bl	801389a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8013bf8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013bfa:	b11b      	cbz	r3, 8013c04 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013bfc:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8013c00:	f000 fee6 	bl	80149d0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8013c04:	b148      	cbz	r0, 8013c1a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8013c06:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013c0a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013c0e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013c12:	f3bf 8f4f 	dsb	sy
 8013c16:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8013c1a:	f7ff fd13 	bl	8013644 <vPortExitCritical>
				return pdPASS;
 8013c1e:	2001      	movs	r0, #1
}
 8013c20:	b004      	add	sp, #16
 8013c22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8013c26:	9b01      	ldr	r3, [sp, #4]
 8013c28:	2b00      	cmp	r3, #0
 8013c2a:	d0d8      	beq.n	8013bde <xQueueGenericSend+0x5e>
 8013c2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013c30:	f383 8811 	msr	BASEPRI, r3
 8013c34:	f3bf 8f6f 	isb	sy
 8013c38:	f3bf 8f4f 	dsb	sy
 8013c3c:	e7fe      	b.n	8013c3c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8013c3e:	2e02      	cmp	r6, #2
 8013c40:	d0d5      	beq.n	8013bee <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8013c42:	9b01      	ldr	r3, [sp, #4]
 8013c44:	b91b      	cbnz	r3, 8013c4e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8013c46:	f7ff fcfd 	bl	8013644 <vPortExitCritical>
					return errQUEUE_FULL;
 8013c4a:	2000      	movs	r0, #0
 8013c4c:	e7e8      	b.n	8013c20 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 8013c4e:	b915      	cbnz	r5, 8013c56 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8013c50:	a802      	add	r0, sp, #8
 8013c52:	f000 fefd 	bl	8014a50 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8013c56:	f7ff fcf5 	bl	8013644 <vPortExitCritical>
		vTaskSuspendAll();
 8013c5a:	f000 fd0b 	bl	8014674 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8013c5e:	f7ff fcd1 	bl	8013604 <vPortEnterCritical>
 8013c62:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8013c66:	2bff      	cmp	r3, #255	@ 0xff
 8013c68:	bf08      	it	eq
 8013c6a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8013c6e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8013c72:	2bff      	cmp	r3, #255	@ 0xff
 8013c74:	bf08      	it	eq
 8013c76:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8013c7a:	f7ff fce3 	bl	8013644 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8013c7e:	a901      	add	r1, sp, #4
 8013c80:	a802      	add	r0, sp, #8
 8013c82:	f000 fef1 	bl	8014a68 <xTaskCheckForTimeOut>
 8013c86:	bb38      	cbnz	r0, 8013cd8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8013c88:	f7ff fcbc 	bl	8013604 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8013c8c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8013c8e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013c90:	429a      	cmp	r2, r3
 8013c92:	d10e      	bne.n	8013cb2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8013c94:	f7ff fcd6 	bl	8013644 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8013c98:	9901      	ldr	r1, [sp, #4]
 8013c9a:	f104 0010 	add.w	r0, r4, #16
 8013c9e:	f000 fe5f 	bl	8014960 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8013ca2:	4620      	mov	r0, r4
 8013ca4:	f7ff fe42 	bl	801392c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8013ca8:	f000 fd88 	bl	80147bc <xTaskResumeAll>
 8013cac:	b148      	cbz	r0, 8013cc2 <xQueueGenericSend+0x142>
 8013cae:	2501      	movs	r5, #1
 8013cb0:	e797      	b.n	8013be2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8013cb2:	f7ff fcc7 	bl	8013644 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8013cb6:	4620      	mov	r0, r4
 8013cb8:	f7ff fe38 	bl	801392c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8013cbc:	f000 fd7e 	bl	80147bc <xTaskResumeAll>
 8013cc0:	e7f5      	b.n	8013cae <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8013cc2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013cc6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013cca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013cce:	f3bf 8f4f 	dsb	sy
 8013cd2:	f3bf 8f6f 	isb	sy
 8013cd6:	e7ea      	b.n	8013cae <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8013cd8:	4620      	mov	r0, r4
 8013cda:	f7ff fe27 	bl	801392c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8013cde:	f000 fd6d 	bl	80147bc <xTaskResumeAll>
			return errQUEUE_FULL;
 8013ce2:	e7b2      	b.n	8013c4a <xQueueGenericSend+0xca>

08013ce4 <xQueueGenericSendFromISR>:
{
 8013ce4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013ce8:	4689      	mov	r9, r1
 8013cea:	4617      	mov	r7, r2
 8013cec:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8013cee:	4604      	mov	r4, r0
 8013cf0:	b940      	cbnz	r0, 8013d04 <xQueueGenericSendFromISR+0x20>
 8013cf2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013cf6:	f383 8811 	msr	BASEPRI, r3
 8013cfa:	f3bf 8f6f 	isb	sy
 8013cfe:	f3bf 8f4f 	dsb	sy
 8013d02:	e7fe      	b.n	8013d02 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8013d04:	b951      	cbnz	r1, 8013d1c <xQueueGenericSendFromISR+0x38>
 8013d06:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8013d08:	b143      	cbz	r3, 8013d1c <xQueueGenericSendFromISR+0x38>
 8013d0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013d0e:	f383 8811 	msr	BASEPRI, r3
 8013d12:	f3bf 8f6f 	isb	sy
 8013d16:	f3bf 8f4f 	dsb	sy
 8013d1a:	e7fe      	b.n	8013d1a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8013d1c:	2e02      	cmp	r6, #2
 8013d1e:	d10b      	bne.n	8013d38 <xQueueGenericSendFromISR+0x54>
 8013d20:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013d22:	2b01      	cmp	r3, #1
 8013d24:	d008      	beq.n	8013d38 <xQueueGenericSendFromISR+0x54>
 8013d26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013d2a:	f383 8811 	msr	BASEPRI, r3
 8013d2e:	f3bf 8f6f 	isb	sy
 8013d32:	f3bf 8f4f 	dsb	sy
 8013d36:	e7fe      	b.n	8013d36 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8013d38:	f7ff fd76 	bl	8013828 <vPortValidateInterruptPriority>
	__asm volatile
 8013d3c:	f3ef 8811 	mrs	r8, BASEPRI
 8013d40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013d44:	f383 8811 	msr	BASEPRI, r3
 8013d48:	f3bf 8f6f 	isb	sy
 8013d4c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8013d50:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8013d52:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013d54:	429a      	cmp	r2, r3
 8013d56:	d301      	bcc.n	8013d5c <xQueueGenericSendFromISR+0x78>
 8013d58:	2e02      	cmp	r6, #2
 8013d5a:	d11e      	bne.n	8013d9a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8013d5c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8013d60:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8013d62:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8013d64:	4632      	mov	r2, r6
 8013d66:	4649      	mov	r1, r9
 8013d68:	4620      	mov	r0, r4
 8013d6a:	f7ff fd96 	bl	801389a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8013d6e:	1c6b      	adds	r3, r5, #1
 8013d70:	d10e      	bne.n	8013d90 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8013d72:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013d74:	b13b      	cbz	r3, 8013d86 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013d76:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8013d7a:	f000 fe29 	bl	80149d0 <xTaskRemoveFromEventList>
 8013d7e:	b110      	cbz	r0, 8013d86 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8013d80:	b10f      	cbz	r7, 8013d86 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8013d82:	2301      	movs	r3, #1
 8013d84:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8013d86:	2001      	movs	r0, #1
	__asm volatile
 8013d88:	f388 8811 	msr	BASEPRI, r8
}
 8013d8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8013d90:	3501      	adds	r5, #1
 8013d92:	b26d      	sxtb	r5, r5
 8013d94:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8013d98:	e7f5      	b.n	8013d86 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 8013d9a:	2000      	movs	r0, #0
 8013d9c:	e7f4      	b.n	8013d88 <xQueueGenericSendFromISR+0xa4>

08013d9e <xQueueGiveFromISR>:
{
 8013d9e:	b570      	push	{r4, r5, r6, lr}
 8013da0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8013da2:	4604      	mov	r4, r0
 8013da4:	b940      	cbnz	r0, 8013db8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8013da6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013daa:	f383 8811 	msr	BASEPRI, r3
 8013dae:	f3bf 8f6f 	isb	sy
 8013db2:	f3bf 8f4f 	dsb	sy
 8013db6:	e7fe      	b.n	8013db6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8013db8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8013dba:	b143      	cbz	r3, 8013dce <xQueueGiveFromISR+0x30>
 8013dbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013dc0:	f383 8811 	msr	BASEPRI, r3
 8013dc4:	f3bf 8f6f 	isb	sy
 8013dc8:	f3bf 8f4f 	dsb	sy
 8013dcc:	e7fe      	b.n	8013dcc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8013dce:	6803      	ldr	r3, [r0, #0]
 8013dd0:	b953      	cbnz	r3, 8013de8 <xQueueGiveFromISR+0x4a>
 8013dd2:	6883      	ldr	r3, [r0, #8]
 8013dd4:	b143      	cbz	r3, 8013de8 <xQueueGiveFromISR+0x4a>
 8013dd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013dda:	f383 8811 	msr	BASEPRI, r3
 8013dde:	f3bf 8f6f 	isb	sy
 8013de2:	f3bf 8f4f 	dsb	sy
 8013de6:	e7fe      	b.n	8013de6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8013de8:	f7ff fd1e 	bl	8013828 <vPortValidateInterruptPriority>
	__asm volatile
 8013dec:	f3ef 8611 	mrs	r6, BASEPRI
 8013df0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013df4:	f383 8811 	msr	BASEPRI, r3
 8013df8:	f3bf 8f6f 	isb	sy
 8013dfc:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8013e00:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8013e02:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8013e04:	4293      	cmp	r3, r2
 8013e06:	d919      	bls.n	8013e3c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8013e08:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8013e0c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8013e0e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8013e10:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8013e12:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8013e14:	d10d      	bne.n	8013e32 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8013e16:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8013e18:	b13b      	cbz	r3, 8013e2a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8013e1a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8013e1e:	f000 fdd7 	bl	80149d0 <xTaskRemoveFromEventList>
 8013e22:	b110      	cbz	r0, 8013e2a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8013e24:	b10d      	cbz	r5, 8013e2a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8013e26:	2301      	movs	r3, #1
 8013e28:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8013e2a:	2001      	movs	r0, #1
	__asm volatile
 8013e2c:	f386 8811 	msr	BASEPRI, r6
}
 8013e30:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8013e32:	3301      	adds	r3, #1
 8013e34:	b25b      	sxtb	r3, r3
 8013e36:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8013e3a:	e7f6      	b.n	8013e2a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8013e3c:	2000      	movs	r0, #0
 8013e3e:	e7f5      	b.n	8013e2c <xQueueGiveFromISR+0x8e>

08013e40 <xQueueReceive>:
{
 8013e40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013e44:	460e      	mov	r6, r1
 8013e46:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8013e48:	4604      	mov	r4, r0
 8013e4a:	b940      	cbnz	r0, 8013e5e <xQueueReceive+0x1e>
	__asm volatile
 8013e4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013e50:	f383 8811 	msr	BASEPRI, r3
 8013e54:	f3bf 8f6f 	isb	sy
 8013e58:	f3bf 8f4f 	dsb	sy
 8013e5c:	e7fe      	b.n	8013e5c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8013e5e:	b951      	cbnz	r1, 8013e76 <xQueueReceive+0x36>
 8013e60:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8013e62:	b143      	cbz	r3, 8013e76 <xQueueReceive+0x36>
 8013e64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013e68:	f383 8811 	msr	BASEPRI, r3
 8013e6c:	f3bf 8f6f 	isb	sy
 8013e70:	f3bf 8f4f 	dsb	sy
 8013e74:	e7fe      	b.n	8013e74 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8013e76:	f000 fe39 	bl	8014aec <xTaskGetSchedulerState>
 8013e7a:	4605      	mov	r5, r0
 8013e7c:	b318      	cbz	r0, 8013ec6 <xQueueReceive+0x86>
 8013e7e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8013e80:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8013e84:	f7ff fbbe 	bl	8013604 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8013e88:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8013e8a:	b347      	cbz	r7, 8013ede <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8013e8c:	4631      	mov	r1, r6
 8013e8e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8013e90:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8013e92:	f7ff fd35 	bl	8013900 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8013e96:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8013e98:	6923      	ldr	r3, [r4, #16]
 8013e9a:	b173      	cbz	r3, 8013eba <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8013e9c:	f104 0010 	add.w	r0, r4, #16
 8013ea0:	f000 fd96 	bl	80149d0 <xTaskRemoveFromEventList>
 8013ea4:	b148      	cbz	r0, 8013eba <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8013ea6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013eaa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013eae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013eb2:	f3bf 8f4f 	dsb	sy
 8013eb6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8013eba:	f7ff fbc3 	bl	8013644 <vPortExitCritical>
				return pdPASS;
 8013ebe:	2001      	movs	r0, #1
}
 8013ec0:	b004      	add	sp, #16
 8013ec2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8013ec6:	9b01      	ldr	r3, [sp, #4]
 8013ec8:	2b00      	cmp	r3, #0
 8013eca:	d0d9      	beq.n	8013e80 <xQueueReceive+0x40>
 8013ecc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013ed0:	f383 8811 	msr	BASEPRI, r3
 8013ed4:	f3bf 8f6f 	isb	sy
 8013ed8:	f3bf 8f4f 	dsb	sy
 8013edc:	e7fe      	b.n	8013edc <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8013ede:	9b01      	ldr	r3, [sp, #4]
 8013ee0:	b91b      	cbnz	r3, 8013eea <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8013ee2:	f7ff fbaf 	bl	8013644 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8013ee6:	2000      	movs	r0, #0
 8013ee8:	e7ea      	b.n	8013ec0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 8013eea:	b915      	cbnz	r5, 8013ef2 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8013eec:	a802      	add	r0, sp, #8
 8013eee:	f000 fdaf 	bl	8014a50 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8013ef2:	f7ff fba7 	bl	8013644 <vPortExitCritical>
		vTaskSuspendAll();
 8013ef6:	f000 fbbd 	bl	8014674 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8013efa:	f7ff fb83 	bl	8013604 <vPortEnterCritical>
 8013efe:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8013f02:	2bff      	cmp	r3, #255	@ 0xff
 8013f04:	bf08      	it	eq
 8013f06:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8013f0a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8013f0e:	2bff      	cmp	r3, #255	@ 0xff
 8013f10:	bf08      	it	eq
 8013f12:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8013f16:	f7ff fb95 	bl	8013644 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8013f1a:	a901      	add	r1, sp, #4
 8013f1c:	a802      	add	r0, sp, #8
 8013f1e:	f000 fda3 	bl	8014a68 <xTaskCheckForTimeOut>
 8013f22:	bb00      	cbnz	r0, 8013f66 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8013f24:	4620      	mov	r0, r4
 8013f26:	f7ff fcad 	bl	8013884 <prvIsQueueEmpty>
 8013f2a:	b1b0      	cbz	r0, 8013f5a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8013f2c:	9901      	ldr	r1, [sp, #4]
 8013f2e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8013f32:	f000 fd15 	bl	8014960 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8013f36:	4620      	mov	r0, r4
 8013f38:	f7ff fcf8 	bl	801392c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8013f3c:	f000 fc3e 	bl	80147bc <xTaskResumeAll>
 8013f40:	b948      	cbnz	r0, 8013f56 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8013f42:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013f46:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013f4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013f4e:	f3bf 8f4f 	dsb	sy
 8013f52:	f3bf 8f6f 	isb	sy
 8013f56:	2501      	movs	r5, #1
 8013f58:	e794      	b.n	8013e84 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 8013f5a:	4620      	mov	r0, r4
 8013f5c:	f7ff fce6 	bl	801392c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8013f60:	f000 fc2c 	bl	80147bc <xTaskResumeAll>
 8013f64:	e7f7      	b.n	8013f56 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8013f66:	4620      	mov	r0, r4
 8013f68:	f7ff fce0 	bl	801392c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8013f6c:	f000 fc26 	bl	80147bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8013f70:	4620      	mov	r0, r4
 8013f72:	f7ff fc87 	bl	8013884 <prvIsQueueEmpty>
 8013f76:	2800      	cmp	r0, #0
 8013f78:	d0ed      	beq.n	8013f56 <xQueueReceive+0x116>
 8013f7a:	e7b4      	b.n	8013ee6 <xQueueReceive+0xa6>

08013f7c <xQueueSemaphoreTake>:
{
 8013f7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f7e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8013f80:	4604      	mov	r4, r0
{
 8013f82:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8013f84:	b940      	cbnz	r0, 8013f98 <xQueueSemaphoreTake+0x1c>
 8013f86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013f8a:	f383 8811 	msr	BASEPRI, r3
 8013f8e:	f3bf 8f6f 	isb	sy
 8013f92:	f3bf 8f4f 	dsb	sy
 8013f96:	e7fe      	b.n	8013f96 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8013f98:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8013f9a:	b145      	cbz	r5, 8013fae <xQueueSemaphoreTake+0x32>
 8013f9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8013fa0:	f383 8811 	msr	BASEPRI, r3
 8013fa4:	f3bf 8f6f 	isb	sy
 8013fa8:	f3bf 8f4f 	dsb	sy
 8013fac:	e7fe      	b.n	8013fac <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8013fae:	f000 fd9d 	bl	8014aec <xTaskGetSchedulerState>
 8013fb2:	4606      	mov	r6, r0
 8013fb4:	b320      	cbz	r0, 8014000 <xQueueSemaphoreTake+0x84>
 8013fb6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8013fb8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 8013fba:	f7ff fb23 	bl	8013604 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8013fbe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8013fc0:	b353      	cbz	r3, 8014018 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8013fc2:	3b01      	subs	r3, #1
 8013fc4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8013fc6:	6823      	ldr	r3, [r4, #0]
 8013fc8:	b913      	cbnz	r3, 8013fd0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8013fca:	f000 fe6d 	bl	8014ca8 <pvTaskIncrementMutexHeldCount>
 8013fce:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8013fd0:	6923      	ldr	r3, [r4, #16]
 8013fd2:	b173      	cbz	r3, 8013ff2 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8013fd4:	f104 0010 	add.w	r0, r4, #16
 8013fd8:	f000 fcfa 	bl	80149d0 <xTaskRemoveFromEventList>
 8013fdc:	b148      	cbz	r0, 8013ff2 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 8013fde:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8013fe2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8013fe6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8013fea:	f3bf 8f4f 	dsb	sy
 8013fee:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8013ff2:	f7ff fb27 	bl	8013644 <vPortExitCritical>
				return pdPASS;
 8013ff6:	2001      	movs	r0, #1
}
 8013ff8:	b005      	add	sp, #20
 8013ffa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ffc:	4635      	mov	r5, r6
 8013ffe:	e7db      	b.n	8013fb8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8014000:	9b01      	ldr	r3, [sp, #4]
 8014002:	2b00      	cmp	r3, #0
 8014004:	d0fa      	beq.n	8013ffc <xQueueSemaphoreTake+0x80>
 8014006:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801400a:	f383 8811 	msr	BASEPRI, r3
 801400e:	f3bf 8f6f 	isb	sy
 8014012:	f3bf 8f4f 	dsb	sy
 8014016:	e7fe      	b.n	8014016 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8014018:	9b01      	ldr	r3, [sp, #4]
 801401a:	b953      	cbnz	r3, 8014032 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 801401c:	2d00      	cmp	r5, #0
 801401e:	d066      	beq.n	80140ee <xQueueSemaphoreTake+0x172>
 8014020:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014024:	f383 8811 	msr	BASEPRI, r3
 8014028:	f3bf 8f6f 	isb	sy
 801402c:	f3bf 8f4f 	dsb	sy
 8014030:	e7fe      	b.n	8014030 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8014032:	b916      	cbnz	r6, 801403a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8014034:	a802      	add	r0, sp, #8
 8014036:	f000 fd0b 	bl	8014a50 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 801403a:	f7ff fb03 	bl	8013644 <vPortExitCritical>
		vTaskSuspendAll();
 801403e:	f000 fb19 	bl	8014674 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8014042:	f7ff fadf 	bl	8013604 <vPortEnterCritical>
 8014046:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 801404a:	2bff      	cmp	r3, #255	@ 0xff
 801404c:	bf08      	it	eq
 801404e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8014052:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8014056:	2bff      	cmp	r3, #255	@ 0xff
 8014058:	bf08      	it	eq
 801405a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 801405e:	f7ff faf1 	bl	8013644 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8014062:	a901      	add	r1, sp, #4
 8014064:	a802      	add	r0, sp, #8
 8014066:	f000 fcff 	bl	8014a68 <xTaskCheckForTimeOut>
 801406a:	bb50      	cbnz	r0, 80140c2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 801406c:	4620      	mov	r0, r4
 801406e:	f7ff fc09 	bl	8013884 <prvIsQueueEmpty>
 8014072:	b300      	cbz	r0, 80140b6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8014074:	6823      	ldr	r3, [r4, #0]
 8014076:	b93b      	cbnz	r3, 8014088 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8014078:	f7ff fac4 	bl	8013604 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 801407c:	68a0      	ldr	r0, [r4, #8]
 801407e:	f000 fd45 	bl	8014b0c <xTaskPriorityInherit>
 8014082:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8014084:	f7ff fade 	bl	8013644 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8014088:	9901      	ldr	r1, [sp, #4]
 801408a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 801408e:	f000 fc67 	bl	8014960 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8014092:	4620      	mov	r0, r4
 8014094:	f7ff fc4a 	bl	801392c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8014098:	f000 fb90 	bl	80147bc <xTaskResumeAll>
 801409c:	b948      	cbnz	r0, 80140b2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 801409e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80140a2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80140a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80140aa:	f3bf 8f4f 	dsb	sy
 80140ae:	f3bf 8f6f 	isb	sy
 80140b2:	2601      	movs	r6, #1
 80140b4:	e781      	b.n	8013fba <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 80140b6:	4620      	mov	r0, r4
 80140b8:	f7ff fc38 	bl	801392c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80140bc:	f000 fb7e 	bl	80147bc <xTaskResumeAll>
 80140c0:	e7f7      	b.n	80140b2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 80140c2:	4620      	mov	r0, r4
 80140c4:	f7ff fc32 	bl	801392c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80140c8:	f000 fb78 	bl	80147bc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80140cc:	4620      	mov	r0, r4
 80140ce:	f7ff fbd9 	bl	8013884 <prvIsQueueEmpty>
 80140d2:	2800      	cmp	r0, #0
 80140d4:	d0ed      	beq.n	80140b2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 80140d6:	b165      	cbz	r5, 80140f2 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 80140d8:	f7ff fa94 	bl	8013604 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80140dc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80140de:	b119      	cbz	r1, 80140e8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80140e0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80140e2:	6819      	ldr	r1, [r3, #0]
 80140e4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80140e8:	68a0      	ldr	r0, [r4, #8]
 80140ea:	f000 fd8f 	bl	8014c0c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 80140ee:	f7ff faa9 	bl	8013644 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80140f2:	2000      	movs	r0, #0
 80140f4:	e780      	b.n	8013ff8 <xQueueSemaphoreTake+0x7c>

080140f6 <xQueueReceiveFromISR>:
{
 80140f6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80140fa:	4689      	mov	r9, r1
 80140fc:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80140fe:	4604      	mov	r4, r0
 8014100:	b940      	cbnz	r0, 8014114 <xQueueReceiveFromISR+0x1e>
 8014102:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014106:	f383 8811 	msr	BASEPRI, r3
 801410a:	f3bf 8f6f 	isb	sy
 801410e:	f3bf 8f4f 	dsb	sy
 8014112:	e7fe      	b.n	8014112 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8014114:	b951      	cbnz	r1, 801412c <xQueueReceiveFromISR+0x36>
 8014116:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8014118:	b143      	cbz	r3, 801412c <xQueueReceiveFromISR+0x36>
 801411a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801411e:	f383 8811 	msr	BASEPRI, r3
 8014122:	f3bf 8f6f 	isb	sy
 8014126:	f3bf 8f4f 	dsb	sy
 801412a:	e7fe      	b.n	801412a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 801412c:	f7ff fb7c 	bl	8013828 <vPortValidateInterruptPriority>
	__asm volatile
 8014130:	f3ef 8711 	mrs	r7, BASEPRI
 8014134:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014138:	f383 8811 	msr	BASEPRI, r3
 801413c:	f3bf 8f6f 	isb	sy
 8014140:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8014144:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8014146:	b30d      	cbz	r5, 801418c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8014148:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 801414c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 801414e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8014150:	4620      	mov	r0, r4
 8014152:	f7ff fbd5 	bl	8013900 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8014156:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8014158:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801415a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 801415c:	d111      	bne.n	8014182 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801415e:	6923      	ldr	r3, [r4, #16]
 8014160:	b153      	cbz	r3, 8014178 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8014162:	f104 0010 	add.w	r0, r4, #16
 8014166:	f000 fc33 	bl	80149d0 <xTaskRemoveFromEventList>
 801416a:	b128      	cbz	r0, 8014178 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 801416c:	f1b8 0f00 	cmp.w	r8, #0
 8014170:	d002      	beq.n	8014178 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8014172:	2301      	movs	r3, #1
 8014174:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8014178:	2001      	movs	r0, #1
	__asm volatile
 801417a:	f387 8811 	msr	BASEPRI, r7
}
 801417e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8014182:	3601      	adds	r6, #1
 8014184:	b276      	sxtb	r6, r6
 8014186:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 801418a:	e7f5      	b.n	8014178 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 801418c:	4628      	mov	r0, r5
 801418e:	e7f4      	b.n	801417a <xQueueReceiveFromISR+0x84>

08014190 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8014190:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8014192:	4a07      	ldr	r2, [pc, #28]	@ (80141b0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8014194:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8014196:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 801419a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 801419e:	b91d      	cbnz	r5, 80141a8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80141a0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80141a4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80141a6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80141a8:	3301      	adds	r3, #1
 80141aa:	2b08      	cmp	r3, #8
 80141ac:	d1f3      	bne.n	8014196 <vQueueAddToRegistry+0x6>
 80141ae:	e7fa      	b.n	80141a6 <vQueueAddToRegistry+0x16>
 80141b0:	20013270 	.word	0x20013270

080141b4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80141b4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80141b6:	4a09      	ldr	r2, [pc, #36]	@ (80141dc <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80141b8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80141ba:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80141be:	4281      	cmp	r1, r0
 80141c0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 80141c4:	d106      	bne.n	80141d4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80141c6:	4a06      	ldr	r2, [pc, #24]	@ (80141e0 <vQueueUnregisterQueue+0x2c>)
 80141c8:	2100      	movs	r1, #0
 80141ca:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80141ce:	4422      	add	r2, r4
 80141d0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80141d2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80141d4:	3301      	adds	r3, #1
 80141d6:	2b08      	cmp	r3, #8
 80141d8:	d1ef      	bne.n	80141ba <vQueueUnregisterQueue+0x6>
 80141da:	e7fa      	b.n	80141d2 <vQueueUnregisterQueue+0x1e>
 80141dc:	20013274 	.word	0x20013274
 80141e0:	20013270 	.word	0x20013270

080141e4 <vQueueDelete>:
{
 80141e4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80141e6:	b940      	cbnz	r0, 80141fa <vQueueDelete+0x16>
	__asm volatile
 80141e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80141ec:	f383 8811 	msr	BASEPRI, r3
 80141f0:	f3bf 8f6f 	isb	sy
 80141f4:	f3bf 8f4f 	dsb	sy
 80141f8:	e7fe      	b.n	80141f8 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 80141fa:	f7ff ffdb 	bl	80141b4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80141fe:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8014202:	b91b      	cbnz	r3, 801420c <vQueueDelete+0x28>
}
 8014204:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8014208:	f7ff b912 	b.w	8013430 <vPortFree>
}
 801420c:	bd10      	pop	{r4, pc}

0801420e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 801420e:	b570      	push	{r4, r5, r6, lr}
 8014210:	4604      	mov	r4, r0
 8014212:	460d      	mov	r5, r1
 8014214:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8014216:	f7ff f9f5 	bl	8013604 <vPortEnterCritical>
 801421a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 801421e:	2bff      	cmp	r3, #255	@ 0xff
 8014220:	bf04      	itt	eq
 8014222:	2300      	moveq	r3, #0
 8014224:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8014228:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 801422c:	2bff      	cmp	r3, #255	@ 0xff
 801422e:	bf04      	itt	eq
 8014230:	2300      	moveq	r3, #0
 8014232:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8014236:	f7ff fa05 	bl	8013644 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 801423a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 801423c:	b92b      	cbnz	r3, 801424a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 801423e:	4632      	mov	r2, r6
 8014240:	4629      	mov	r1, r5
 8014242:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8014246:	f000 fba5 	bl	8014994 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 801424a:	4620      	mov	r0, r4
	}
 801424c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8014250:	f7ff bb6c 	b.w	801392c <prvUnlockQueue>

08014254 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8014254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014258:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 801425a:	f7ff f9d3 	bl	8013604 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 801425e:	4b30      	ldr	r3, [pc, #192]	@ (8014320 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8014260:	4e30      	ldr	r6, [pc, #192]	@ (8014324 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8014262:	681a      	ldr	r2, [r3, #0]
 8014264:	4f30      	ldr	r7, [pc, #192]	@ (8014328 <prvAddNewTaskToReadyList+0xd4>)
 8014266:	3201      	adds	r2, #1
 8014268:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 801426a:	6835      	ldr	r5, [r6, #0]
 801426c:	2d00      	cmp	r5, #0
 801426e:	d14b      	bne.n	8014308 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8014270:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8014272:	681b      	ldr	r3, [r3, #0]
 8014274:	2b01      	cmp	r3, #1
 8014276:	d11f      	bne.n	80142b8 <prvAddNewTaskToReadyList+0x64>
 8014278:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 801427a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801427c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 801427e:	f7ff f915 	bl	80134ac <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8014282:	2d38      	cmp	r5, #56	@ 0x38
 8014284:	f108 0814 	add.w	r8, r8, #20
 8014288:	d1f7      	bne.n	801427a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 801428a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8014350 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 801428e:	4d27      	ldr	r5, [pc, #156]	@ (801432c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8014290:	4640      	mov	r0, r8
 8014292:	f7ff f90b 	bl	80134ac <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8014296:	4628      	mov	r0, r5
 8014298:	f7ff f908 	bl	80134ac <vListInitialise>
	vListInitialise( &xPendingReadyList );
 801429c:	4824      	ldr	r0, [pc, #144]	@ (8014330 <prvAddNewTaskToReadyList+0xdc>)
 801429e:	f7ff f905 	bl	80134ac <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80142a2:	4824      	ldr	r0, [pc, #144]	@ (8014334 <prvAddNewTaskToReadyList+0xe0>)
 80142a4:	f7ff f902 	bl	80134ac <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80142a8:	4823      	ldr	r0, [pc, #140]	@ (8014338 <prvAddNewTaskToReadyList+0xe4>)
 80142aa:	f7ff f8ff 	bl	80134ac <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80142ae:	4b23      	ldr	r3, [pc, #140]	@ (801433c <prvAddNewTaskToReadyList+0xe8>)
 80142b0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80142b4:	4b22      	ldr	r3, [pc, #136]	@ (8014340 <prvAddNewTaskToReadyList+0xec>)
 80142b6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80142b8:	4a22      	ldr	r2, [pc, #136]	@ (8014344 <prvAddNewTaskToReadyList+0xf0>)
 80142ba:	6813      	ldr	r3, [r2, #0]
 80142bc:	3301      	adds	r3, #1
 80142be:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80142c0:	4a21      	ldr	r2, [pc, #132]	@ (8014348 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80142c2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80142c4:	6811      	ldr	r1, [r2, #0]
 80142c6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80142c8:	2014      	movs	r0, #20
 80142ca:	428b      	cmp	r3, r1
 80142cc:	fb00 7003 	mla	r0, r0, r3, r7
 80142d0:	f104 0104 	add.w	r1, r4, #4
 80142d4:	bf88      	it	hi
 80142d6:	6013      	strhi	r3, [r2, #0]
 80142d8:	f7ff f8f6 	bl	80134c8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80142dc:	f7ff f9b2 	bl	8013644 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80142e0:	4b1a      	ldr	r3, [pc, #104]	@ (801434c <prvAddNewTaskToReadyList+0xf8>)
 80142e2:	681b      	ldr	r3, [r3, #0]
 80142e4:	b173      	cbz	r3, 8014304 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80142e6:	6833      	ldr	r3, [r6, #0]
 80142e8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80142ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80142ec:	429a      	cmp	r2, r3
 80142ee:	d209      	bcs.n	8014304 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80142f0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80142f4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80142f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80142fc:	f3bf 8f4f 	dsb	sy
 8014300:	f3bf 8f6f 	isb	sy
}
 8014304:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8014308:	4b10      	ldr	r3, [pc, #64]	@ (801434c <prvAddNewTaskToReadyList+0xf8>)
 801430a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801430c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 801430e:	2a00      	cmp	r2, #0
 8014310:	d1d2      	bne.n	80142b8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8014312:	6832      	ldr	r2, [r6, #0]
 8014314:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8014316:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8014318:	bf98      	it	ls
 801431a:	6034      	strls	r4, [r6, #0]
 801431c:	e7cc      	b.n	80142b8 <prvAddNewTaskToReadyList+0x64>
 801431e:	bf00      	nop
 8014320:	200132d4 	.word	0x200132d4
 8014324:	200137a8 	.word	0x200137a8
 8014328:	20013348 	.word	0x20013348
 801432c:	20013320 	.word	0x20013320
 8014330:	20013304 	.word	0x20013304
 8014334:	200132f0 	.word	0x200132f0
 8014338:	200132d8 	.word	0x200132d8
 801433c:	2001331c 	.word	0x2001331c
 8014340:	20013318 	.word	0x20013318
 8014344:	200132b8 	.word	0x200132b8
 8014348:	200132cc 	.word	0x200132cc
 801434c:	200132c8 	.word	0x200132c8
 8014350:	20013334 	.word	0x20013334

08014354 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8014354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8014356:	4b15      	ldr	r3, [pc, #84]	@ (80143ac <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8014358:	4d15      	ldr	r5, [pc, #84]	@ (80143b0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 801435a:	681c      	ldr	r4, [r3, #0]
{
 801435c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801435e:	6828      	ldr	r0, [r5, #0]
 8014360:	3004      	adds	r0, #4
{
 8014362:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8014364:	f7ff f8d2 	bl	801350c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8014368:	1c73      	adds	r3, r6, #1
 801436a:	d107      	bne.n	801437c <prvAddCurrentTaskToDelayedList+0x28>
 801436c:	b137      	cbz	r7, 801437c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801436e:	6829      	ldr	r1, [r5, #0]
 8014370:	4810      	ldr	r0, [pc, #64]	@ (80143b4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8014372:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8014376:	3104      	adds	r1, #4
 8014378:	f7ff b8a6 	b.w	80134c8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 801437c:	682b      	ldr	r3, [r5, #0]
 801437e:	19a4      	adds	r4, r4, r6
 8014380:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8014382:	d307      	bcc.n	8014394 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8014384:	4b0c      	ldr	r3, [pc, #48]	@ (80143b8 <prvAddCurrentTaskToDelayedList+0x64>)
 8014386:	6818      	ldr	r0, [r3, #0]
 8014388:	6829      	ldr	r1, [r5, #0]
}
 801438a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801438e:	3104      	adds	r1, #4
 8014390:	f7ff b8a5 	b.w	80134de <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8014394:	4b09      	ldr	r3, [pc, #36]	@ (80143bc <prvAddCurrentTaskToDelayedList+0x68>)
 8014396:	6818      	ldr	r0, [r3, #0]
 8014398:	6829      	ldr	r1, [r5, #0]
 801439a:	3104      	adds	r1, #4
 801439c:	f7ff f89f 	bl	80134de <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80143a0:	4b07      	ldr	r3, [pc, #28]	@ (80143c0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80143a2:	681a      	ldr	r2, [r3, #0]
 80143a4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80143a6:	bf88      	it	hi
 80143a8:	601c      	strhi	r4, [r3, #0]
}
 80143aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80143ac:	200132d0 	.word	0x200132d0
 80143b0:	200137a8 	.word	0x200137a8
 80143b4:	200132d8 	.word	0x200132d8
 80143b8:	20013318 	.word	0x20013318
 80143bc:	2001331c 	.word	0x2001331c
 80143c0:	200132b4 	.word	0x200132b4

080143c4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80143c4:	4a06      	ldr	r2, [pc, #24]	@ (80143e0 <prvResetNextTaskUnblockTime+0x1c>)
 80143c6:	6813      	ldr	r3, [r2, #0]
 80143c8:	6819      	ldr	r1, [r3, #0]
 80143ca:	4b06      	ldr	r3, [pc, #24]	@ (80143e4 <prvResetNextTaskUnblockTime+0x20>)
 80143cc:	b919      	cbnz	r1, 80143d6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80143ce:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80143d2:	601a      	str	r2, [r3, #0]
}
 80143d4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80143d6:	6812      	ldr	r2, [r2, #0]
 80143d8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80143da:	68d2      	ldr	r2, [r2, #12]
 80143dc:	6852      	ldr	r2, [r2, #4]
 80143de:	e7f8      	b.n	80143d2 <prvResetNextTaskUnblockTime+0xe>
 80143e0:	2001331c 	.word	0x2001331c
 80143e4:	200132b4 	.word	0x200132b4

080143e8 <prvDeleteTCB>:
	{
 80143e8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80143ea:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 80143ee:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80143f0:	b93b      	cbnz	r3, 8014402 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80143f2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80143f4:	f7ff f81c 	bl	8013430 <vPortFree>
				vPortFree( pxTCB );
 80143f8:	4620      	mov	r0, r4
	}
 80143fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80143fe:	f7ff b817 	b.w	8013430 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8014402:	2b01      	cmp	r3, #1
 8014404:	d0f9      	beq.n	80143fa <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8014406:	2b02      	cmp	r3, #2
 8014408:	d008      	beq.n	801441c <prvDeleteTCB+0x34>
 801440a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801440e:	f383 8811 	msr	BASEPRI, r3
 8014412:	f3bf 8f6f 	isb	sy
 8014416:	f3bf 8f4f 	dsb	sy
 801441a:	e7fe      	b.n	801441a <prvDeleteTCB+0x32>
	}
 801441c:	bd10      	pop	{r4, pc}
	...

08014420 <prvIdleTask>:
{
 8014420:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8014422:	4c13      	ldr	r4, [pc, #76]	@ (8014470 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014424:	4f13      	ldr	r7, [pc, #76]	@ (8014474 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8014426:	4d14      	ldr	r5, [pc, #80]	@ (8014478 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8014428:	6823      	ldr	r3, [r4, #0]
 801442a:	b973      	cbnz	r3, 801444a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 801442c:	4b13      	ldr	r3, [pc, #76]	@ (801447c <prvIdleTask+0x5c>)
 801442e:	681b      	ldr	r3, [r3, #0]
 8014430:	2b01      	cmp	r3, #1
 8014432:	d9f8      	bls.n	8014426 <prvIdleTask+0x6>
				taskYIELD();
 8014434:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8014438:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801443c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8014440:	f3bf 8f4f 	dsb	sy
 8014444:	f3bf 8f6f 	isb	sy
 8014448:	e7ed      	b.n	8014426 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 801444a:	f7ff f8db 	bl	8013604 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801444e:	68fb      	ldr	r3, [r7, #12]
 8014450:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8014452:	1d30      	adds	r0, r6, #4
 8014454:	f7ff f85a 	bl	801350c <uxListRemove>
				--uxCurrentNumberOfTasks;
 8014458:	682b      	ldr	r3, [r5, #0]
 801445a:	3b01      	subs	r3, #1
 801445c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 801445e:	6823      	ldr	r3, [r4, #0]
 8014460:	3b01      	subs	r3, #1
 8014462:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8014464:	f7ff f8ee 	bl	8013644 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8014468:	4630      	mov	r0, r6
 801446a:	f7ff ffbd 	bl	80143e8 <prvDeleteTCB>
 801446e:	e7db      	b.n	8014428 <prvIdleTask+0x8>
 8014470:	200132ec 	.word	0x200132ec
 8014474:	200132f0 	.word	0x200132f0
 8014478:	200132d4 	.word	0x200132d4
 801447c:	20013348 	.word	0x20013348

08014480 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8014480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014484:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8014488:	0096      	lsls	r6, r2, #2
 801448a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801448c:	4607      	mov	r7, r0
 801448e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8014490:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8014492:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8014494:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8014496:	f01a fb8a 	bl	802ebae <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 801449a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801449c:	3e04      	subs	r6, #4
 801449e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80144a0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80144a4:	b3b5      	cbz	r5, 8014514 <prvInitialiseNewTask.constprop.0+0x94>
 80144a6:	1e6b      	subs	r3, r5, #1
 80144a8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80144ac:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80144ae:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80144b2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80144b6:	b109      	cbz	r1, 80144bc <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80144b8:	42ab      	cmp	r3, r5
 80144ba:	d1f8      	bne.n	80144ae <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80144bc:	2300      	movs	r3, #0
 80144be:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80144c2:	9d08      	ldr	r5, [sp, #32]
 80144c4:	2d37      	cmp	r5, #55	@ 0x37
 80144c6:	bf28      	it	cs
 80144c8:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80144ca:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80144ce:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80144d0:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80144d2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80144d4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80144d8:	f7fe fff3 	bl	80134c2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80144dc:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80144e0:	f104 0018 	add.w	r0, r4, #24
 80144e4:	f7fe ffed 	bl	80134c2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80144e8:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80144ec:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80144ee:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80144f0:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 80144f2:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80144f6:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80144fa:	4642      	mov	r2, r8
 80144fc:	4639      	mov	r1, r7
 80144fe:	4630      	mov	r0, r6
 8014500:	f7ff f852 	bl	80135a8 <pxPortInitialiseStack>
 8014504:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8014506:	f1b9 0f00 	cmp.w	r9, #0
 801450a:	d001      	beq.n	8014510 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 801450c:	f8c9 4000 	str.w	r4, [r9]
}
 8014510:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8014514:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8014518:	e7d3      	b.n	80144c2 <prvInitialiseNewTask.constprop.0+0x42>

0801451a <xTaskCreateStatic>:
	{
 801451a:	b570      	push	{r4, r5, r6, lr}
 801451c:	b086      	sub	sp, #24
 801451e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8014522:	b945      	cbnz	r5, 8014536 <xTaskCreateStatic+0x1c>
 8014524:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014528:	f383 8811 	msr	BASEPRI, r3
 801452c:	f3bf 8f6f 	isb	sy
 8014530:	f3bf 8f4f 	dsb	sy
 8014534:	e7fe      	b.n	8014534 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8014536:	b944      	cbnz	r4, 801454a <xTaskCreateStatic+0x30>
 8014538:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801453c:	f383 8811 	msr	BASEPRI, r3
 8014540:	f3bf 8f6f 	isb	sy
 8014544:	f3bf 8f4f 	dsb	sy
 8014548:	e7fe      	b.n	8014548 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 801454a:	2660      	movs	r6, #96	@ 0x60
 801454c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 801454e:	9e05      	ldr	r6, [sp, #20]
 8014550:	2e60      	cmp	r6, #96	@ 0x60
 8014552:	d008      	beq.n	8014566 <xTaskCreateStatic+0x4c>
 8014554:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014558:	f383 8811 	msr	BASEPRI, r3
 801455c:	f3bf 8f6f 	isb	sy
 8014560:	f3bf 8f4f 	dsb	sy
 8014564:	e7fe      	b.n	8014564 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8014566:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8014568:	2502      	movs	r5, #2
 801456a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 801456e:	ad04      	add	r5, sp, #16
 8014570:	9501      	str	r5, [sp, #4]
 8014572:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8014574:	9402      	str	r4, [sp, #8]
 8014576:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8014578:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 801457a:	f7ff ff81 	bl	8014480 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 801457e:	4620      	mov	r0, r4
 8014580:	f7ff fe68 	bl	8014254 <prvAddNewTaskToReadyList>
	}
 8014584:	9804      	ldr	r0, [sp, #16]
 8014586:	b006      	add	sp, #24
 8014588:	bd70      	pop	{r4, r5, r6, pc}

0801458a <xTaskCreate>:
	{
 801458a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801458e:	4607      	mov	r7, r0
 8014590:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8014592:	0090      	lsls	r0, r2, #2
	{
 8014594:	4688      	mov	r8, r1
 8014596:	4616      	mov	r6, r2
 8014598:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 801459a:	f7fe feb1 	bl	8013300 <pvPortMalloc>
			if( pxStack != NULL )
 801459e:	4605      	mov	r5, r0
 80145a0:	b920      	cbnz	r0, 80145ac <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80145a2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80145a6:	b005      	add	sp, #20
 80145a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80145ac:	2060      	movs	r0, #96	@ 0x60
 80145ae:	f7fe fea7 	bl	8013300 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80145b2:	4604      	mov	r4, r0
 80145b4:	b198      	cbz	r0, 80145de <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80145b6:	2300      	movs	r3, #0
 80145b8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80145bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 80145be:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80145c0:	9301      	str	r3, [sp, #4]
 80145c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80145c4:	9002      	str	r0, [sp, #8]
 80145c6:	9300      	str	r3, [sp, #0]
 80145c8:	4632      	mov	r2, r6
 80145ca:	464b      	mov	r3, r9
 80145cc:	4641      	mov	r1, r8
 80145ce:	4638      	mov	r0, r7
 80145d0:	f7ff ff56 	bl	8014480 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80145d4:	4620      	mov	r0, r4
 80145d6:	f7ff fe3d 	bl	8014254 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80145da:	2001      	movs	r0, #1
 80145dc:	e7e3      	b.n	80145a6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 80145de:	4628      	mov	r0, r5
 80145e0:	f7fe ff26 	bl	8013430 <vPortFree>
		if( pxNewTCB != NULL )
 80145e4:	e7dd      	b.n	80145a2 <xTaskCreate+0x18>
	...

080145e8 <vTaskStartScheduler>:
{
 80145e8:	b510      	push	{r4, lr}
 80145ea:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80145ec:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80145ee:	aa07      	add	r2, sp, #28
 80145f0:	a906      	add	r1, sp, #24
 80145f2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80145f4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80145f8:	f7fe fe44 	bl	8013284 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80145fc:	9b05      	ldr	r3, [sp, #20]
 80145fe:	9302      	str	r3, [sp, #8]
 8014600:	9b06      	ldr	r3, [sp, #24]
 8014602:	9a07      	ldr	r2, [sp, #28]
 8014604:	4916      	ldr	r1, [pc, #88]	@ (8014660 <vTaskStartScheduler+0x78>)
 8014606:	4817      	ldr	r0, [pc, #92]	@ (8014664 <vTaskStartScheduler+0x7c>)
 8014608:	e9cd 4300 	strd	r4, r3, [sp]
 801460c:	4623      	mov	r3, r4
 801460e:	f7ff ff84 	bl	801451a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8014612:	b318      	cbz	r0, 801465c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8014614:	f000 fba6 	bl	8014d64 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8014618:	2801      	cmp	r0, #1
 801461a:	d114      	bne.n	8014646 <vTaskStartScheduler+0x5e>
 801461c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014620:	f383 8811 	msr	BASEPRI, r3
 8014624:	f3bf 8f6f 	isb	sy
 8014628:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 801462c:	4b0e      	ldr	r3, [pc, #56]	@ (8014668 <vTaskStartScheduler+0x80>)
 801462e:	f04f 32ff 	mov.w	r2, #4294967295
 8014632:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8014634:	4b0d      	ldr	r3, [pc, #52]	@ (801466c <vTaskStartScheduler+0x84>)
 8014636:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8014638:	4b0d      	ldr	r3, [pc, #52]	@ (8014670 <vTaskStartScheduler+0x88>)
 801463a:	601c      	str	r4, [r3, #0]
}
 801463c:	b008      	add	sp, #32
 801463e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8014642:	f7ff b86f 	b.w	8013724 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8014646:	3001      	adds	r0, #1
 8014648:	d108      	bne.n	801465c <vTaskStartScheduler+0x74>
 801464a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801464e:	f383 8811 	msr	BASEPRI, r3
 8014652:	f3bf 8f6f 	isb	sy
 8014656:	f3bf 8f4f 	dsb	sy
 801465a:	e7fe      	b.n	801465a <vTaskStartScheduler+0x72>
}
 801465c:	b008      	add	sp, #32
 801465e:	bd10      	pop	{r4, pc}
 8014660:	08030d66 	.word	0x08030d66
 8014664:	08014421 	.word	0x08014421
 8014668:	200132b4 	.word	0x200132b4
 801466c:	200132c8 	.word	0x200132c8
 8014670:	200132d0 	.word	0x200132d0

08014674 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8014674:	4a02      	ldr	r2, [pc, #8]	@ (8014680 <vTaskSuspendAll+0xc>)
 8014676:	6813      	ldr	r3, [r2, #0]
 8014678:	3301      	adds	r3, #1
 801467a:	6013      	str	r3, [r2, #0]
}
 801467c:	4770      	bx	lr
 801467e:	bf00      	nop
 8014680:	200132b0 	.word	0x200132b0

08014684 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8014684:	4b01      	ldr	r3, [pc, #4]	@ (801468c <xTaskGetTickCount+0x8>)
 8014686:	6818      	ldr	r0, [r3, #0]
}
 8014688:	4770      	bx	lr
 801468a:	bf00      	nop
 801468c:	200132d0 	.word	0x200132d0

08014690 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8014690:	4b3f      	ldr	r3, [pc, #252]	@ (8014790 <xTaskIncrementTick+0x100>)
 8014692:	681b      	ldr	r3, [r3, #0]
{
 8014694:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8014698:	2b00      	cmp	r3, #0
 801469a:	d172      	bne.n	8014782 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 801469c:	4b3d      	ldr	r3, [pc, #244]	@ (8014794 <xTaskIncrementTick+0x104>)
 801469e:	681c      	ldr	r4, [r3, #0]
 80146a0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80146a2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80146a4:	b9bc      	cbnz	r4, 80146d6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80146a6:	4b3c      	ldr	r3, [pc, #240]	@ (8014798 <xTaskIncrementTick+0x108>)
 80146a8:	681a      	ldr	r2, [r3, #0]
 80146aa:	6812      	ldr	r2, [r2, #0]
 80146ac:	b142      	cbz	r2, 80146c0 <xTaskIncrementTick+0x30>
 80146ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80146b2:	f383 8811 	msr	BASEPRI, r3
 80146b6:	f3bf 8f6f 	isb	sy
 80146ba:	f3bf 8f4f 	dsb	sy
 80146be:	e7fe      	b.n	80146be <xTaskIncrementTick+0x2e>
 80146c0:	4a36      	ldr	r2, [pc, #216]	@ (801479c <xTaskIncrementTick+0x10c>)
 80146c2:	6819      	ldr	r1, [r3, #0]
 80146c4:	6810      	ldr	r0, [r2, #0]
 80146c6:	6018      	str	r0, [r3, #0]
 80146c8:	6011      	str	r1, [r2, #0]
 80146ca:	4a35      	ldr	r2, [pc, #212]	@ (80147a0 <xTaskIncrementTick+0x110>)
 80146cc:	6813      	ldr	r3, [r2, #0]
 80146ce:	3301      	adds	r3, #1
 80146d0:	6013      	str	r3, [r2, #0]
 80146d2:	f7ff fe77 	bl	80143c4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80146d6:	4d33      	ldr	r5, [pc, #204]	@ (80147a4 <xTaskIncrementTick+0x114>)
 80146d8:	4e33      	ldr	r6, [pc, #204]	@ (80147a8 <xTaskIncrementTick+0x118>)
 80146da:	682b      	ldr	r3, [r5, #0]
 80146dc:	4f33      	ldr	r7, [pc, #204]	@ (80147ac <xTaskIncrementTick+0x11c>)
 80146de:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 80146e0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80146e4:	d212      	bcs.n	801470c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80146e6:	683a      	ldr	r2, [r7, #0]
 80146e8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80146ea:	2114      	movs	r1, #20
 80146ec:	434a      	muls	r2, r1
 80146ee:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 80146f0:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 80146f2:	4a2f      	ldr	r2, [pc, #188]	@ (80147b0 <xTaskIncrementTick+0x120>)
 80146f4:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 80146f6:	bf28      	it	cs
 80146f8:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 80146fc:	2a00      	cmp	r2, #0
 80146fe:	bf18      	it	ne
 8014700:	f04f 0b01 	movne.w	fp, #1
}
 8014704:	4658      	mov	r0, fp
 8014706:	b003      	add	sp, #12
 8014708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801470c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8014798 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8014710:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 80147b8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8014714:	f8d9 2000 	ldr.w	r2, [r9]
 8014718:	6812      	ldr	r2, [r2, #0]
 801471a:	b91a      	cbnz	r2, 8014724 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801471c:	f04f 32ff 	mov.w	r2, #4294967295
 8014720:	602a      	str	r2, [r5, #0]
					break;
 8014722:	e7e0      	b.n	80146e6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014724:	f8d9 2000 	ldr.w	r2, [r9]
 8014728:	68d2      	ldr	r2, [r2, #12]
 801472a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 801472e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8014732:	428c      	cmp	r4, r1
 8014734:	d201      	bcs.n	801473a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8014736:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8014738:	e7d5      	b.n	80146e6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801473a:	f108 0304 	add.w	r3, r8, #4
 801473e:	4618      	mov	r0, r3
 8014740:	9301      	str	r3, [sp, #4]
 8014742:	f7fe fee3 	bl	801350c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8014746:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 801474a:	b119      	cbz	r1, 8014754 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801474c:	f108 0018 	add.w	r0, r8, #24
 8014750:	f7fe fedc 	bl	801350c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8014754:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8014758:	f8da 1000 	ldr.w	r1, [sl]
 801475c:	2314      	movs	r3, #20
 801475e:	4288      	cmp	r0, r1
 8014760:	bf88      	it	hi
 8014762:	f8ca 0000 	strhi.w	r0, [sl]
 8014766:	9901      	ldr	r1, [sp, #4]
 8014768:	fb03 6000 	mla	r0, r3, r0, r6
 801476c:	f7fe feac 	bl	80134c8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8014770:	6838      	ldr	r0, [r7, #0]
 8014772:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8014776:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8014778:	4291      	cmp	r1, r2
 801477a:	bf28      	it	cs
 801477c:	f04f 0b01 	movcs.w	fp, #1
 8014780:	e7c8      	b.n	8014714 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8014782:	4a0c      	ldr	r2, [pc, #48]	@ (80147b4 <xTaskIncrementTick+0x124>)
 8014784:	6813      	ldr	r3, [r2, #0]
 8014786:	3301      	adds	r3, #1
 8014788:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 801478a:	f04f 0b00 	mov.w	fp, #0
 801478e:	e7b9      	b.n	8014704 <xTaskIncrementTick+0x74>
 8014790:	200132b0 	.word	0x200132b0
 8014794:	200132d0 	.word	0x200132d0
 8014798:	2001331c 	.word	0x2001331c
 801479c:	20013318 	.word	0x20013318
 80147a0:	200132bc 	.word	0x200132bc
 80147a4:	200132b4 	.word	0x200132b4
 80147a8:	20013348 	.word	0x20013348
 80147ac:	200137a8 	.word	0x200137a8
 80147b0:	200132c0 	.word	0x200132c0
 80147b4:	200132c4 	.word	0x200132c4
 80147b8:	200132cc 	.word	0x200132cc

080147bc <xTaskResumeAll>:
{
 80147bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 80147c0:	4c30      	ldr	r4, [pc, #192]	@ (8014884 <xTaskResumeAll+0xc8>)
 80147c2:	6823      	ldr	r3, [r4, #0]
 80147c4:	b943      	cbnz	r3, 80147d8 <xTaskResumeAll+0x1c>
 80147c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80147ca:	f383 8811 	msr	BASEPRI, r3
 80147ce:	f3bf 8f6f 	isb	sy
 80147d2:	f3bf 8f4f 	dsb	sy
 80147d6:	e7fe      	b.n	80147d6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 80147d8:	f7fe ff14 	bl	8013604 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80147dc:	6823      	ldr	r3, [r4, #0]
 80147de:	3b01      	subs	r3, #1
 80147e0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80147e2:	6824      	ldr	r4, [r4, #0]
 80147e4:	b12c      	cbz	r4, 80147f2 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 80147e6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80147e8:	f7fe ff2c 	bl	8013644 <vPortExitCritical>
}
 80147ec:	4620      	mov	r0, r4
 80147ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80147f2:	4b25      	ldr	r3, [pc, #148]	@ (8014888 <xTaskResumeAll+0xcc>)
 80147f4:	681b      	ldr	r3, [r3, #0]
 80147f6:	2b00      	cmp	r3, #0
 80147f8:	d0f5      	beq.n	80147e6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80147fa:	4d24      	ldr	r5, [pc, #144]	@ (801488c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80147fc:	4e24      	ldr	r6, [pc, #144]	@ (8014890 <xTaskResumeAll+0xd4>)
 80147fe:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 80148a0 <xTaskResumeAll+0xe4>
 8014802:	e01d      	b.n	8014840 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014804:	68eb      	ldr	r3, [r5, #12]
 8014806:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8014808:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801480a:	f104 0018 	add.w	r0, r4, #24
 801480e:	f7fe fe7d 	bl	801350c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8014812:	4638      	mov	r0, r7
 8014814:	f7fe fe7a 	bl	801350c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8014818:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801481a:	6832      	ldr	r2, [r6, #0]
 801481c:	2014      	movs	r0, #20
 801481e:	4293      	cmp	r3, r2
 8014820:	fb00 8003 	mla	r0, r0, r3, r8
 8014824:	4639      	mov	r1, r7
 8014826:	bf88      	it	hi
 8014828:	6033      	strhi	r3, [r6, #0]
 801482a:	f7fe fe4d 	bl	80134c8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 801482e:	4b19      	ldr	r3, [pc, #100]	@ (8014894 <xTaskResumeAll+0xd8>)
 8014830:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8014832:	681b      	ldr	r3, [r3, #0]
 8014834:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014836:	429a      	cmp	r2, r3
 8014838:	d302      	bcc.n	8014840 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 801483a:	4b17      	ldr	r3, [pc, #92]	@ (8014898 <xTaskResumeAll+0xdc>)
 801483c:	2201      	movs	r2, #1
 801483e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8014840:	682b      	ldr	r3, [r5, #0]
 8014842:	2b00      	cmp	r3, #0
 8014844:	d1de      	bne.n	8014804 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8014846:	b10c      	cbz	r4, 801484c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8014848:	f7ff fdbc 	bl	80143c4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 801484c:	4d13      	ldr	r5, [pc, #76]	@ (801489c <xTaskResumeAll+0xe0>)
 801484e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8014850:	b144      	cbz	r4, 8014864 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8014852:	4e11      	ldr	r6, [pc, #68]	@ (8014898 <xTaskResumeAll+0xdc>)
 8014854:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8014856:	f7ff ff1b 	bl	8014690 <xTaskIncrementTick>
 801485a:	b100      	cbz	r0, 801485e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 801485c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 801485e:	3c01      	subs	r4, #1
 8014860:	d1f9      	bne.n	8014856 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8014862:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8014864:	4b0c      	ldr	r3, [pc, #48]	@ (8014898 <xTaskResumeAll+0xdc>)
 8014866:	681b      	ldr	r3, [r3, #0]
 8014868:	2b00      	cmp	r3, #0
 801486a:	d0bc      	beq.n	80147e6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 801486c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8014870:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8014874:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8014878:	f3bf 8f4f 	dsb	sy
 801487c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8014880:	2401      	movs	r4, #1
 8014882:	e7b1      	b.n	80147e8 <xTaskResumeAll+0x2c>
 8014884:	200132b0 	.word	0x200132b0
 8014888:	200132d4 	.word	0x200132d4
 801488c:	20013304 	.word	0x20013304
 8014890:	200132cc 	.word	0x200132cc
 8014894:	200137a8 	.word	0x200137a8
 8014898:	200132c0 	.word	0x200132c0
 801489c:	200132c4 	.word	0x200132c4
 80148a0:	20013348 	.word	0x20013348

080148a4 <vTaskDelay>:
	{
 80148a4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80148a6:	b950      	cbnz	r0, 80148be <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80148a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80148ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80148b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80148b4:	f3bf 8f4f 	dsb	sy
 80148b8:	f3bf 8f6f 	isb	sy
	}
 80148bc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80148be:	4b0a      	ldr	r3, [pc, #40]	@ (80148e8 <vTaskDelay+0x44>)
 80148c0:	6819      	ldr	r1, [r3, #0]
 80148c2:	b141      	cbz	r1, 80148d6 <vTaskDelay+0x32>
 80148c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80148c8:	f383 8811 	msr	BASEPRI, r3
 80148cc:	f3bf 8f6f 	isb	sy
 80148d0:	f3bf 8f4f 	dsb	sy
 80148d4:	e7fe      	b.n	80148d4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 80148d6:	f7ff fecd 	bl	8014674 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80148da:	f7ff fd3b 	bl	8014354 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80148de:	f7ff ff6d 	bl	80147bc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80148e2:	2800      	cmp	r0, #0
 80148e4:	d0e0      	beq.n	80148a8 <vTaskDelay+0x4>
 80148e6:	e7e9      	b.n	80148bc <vTaskDelay+0x18>
 80148e8:	200132b0 	.word	0x200132b0

080148ec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80148ec:	4b17      	ldr	r3, [pc, #92]	@ (801494c <vTaskSwitchContext+0x60>)
 80148ee:	681a      	ldr	r2, [r3, #0]
 80148f0:	4b17      	ldr	r3, [pc, #92]	@ (8014950 <vTaskSwitchContext+0x64>)
{
 80148f2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80148f4:	b112      	cbz	r2, 80148fc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80148f6:	2201      	movs	r2, #1
 80148f8:	601a      	str	r2, [r3, #0]
}
 80148fa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80148fc:	4d15      	ldr	r5, [pc, #84]	@ (8014954 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 80148fe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014900:	682a      	ldr	r2, [r5, #0]
 8014902:	4915      	ldr	r1, [pc, #84]	@ (8014958 <vTaskSwitchContext+0x6c>)
 8014904:	2614      	movs	r6, #20
 8014906:	fb06 f302 	mul.w	r3, r6, r2
 801490a:	18c8      	adds	r0, r1, r3
 801490c:	58cc      	ldr	r4, [r1, r3]
 801490e:	b18c      	cbz	r4, 8014934 <vTaskSwitchContext+0x48>
 8014910:	6844      	ldr	r4, [r0, #4]
 8014912:	3308      	adds	r3, #8
 8014914:	6864      	ldr	r4, [r4, #4]
 8014916:	6044      	str	r4, [r0, #4]
 8014918:	440b      	add	r3, r1
 801491a:	429c      	cmp	r4, r3
 801491c:	bf04      	itt	eq
 801491e:	6863      	ldreq	r3, [r4, #4]
 8014920:	6043      	streq	r3, [r0, #4]
 8014922:	2314      	movs	r3, #20
 8014924:	fb03 1102 	mla	r1, r3, r2, r1
 8014928:	684b      	ldr	r3, [r1, #4]
 801492a:	68d9      	ldr	r1, [r3, #12]
 801492c:	4b0b      	ldr	r3, [pc, #44]	@ (801495c <vTaskSwitchContext+0x70>)
 801492e:	6019      	str	r1, [r3, #0]
 8014930:	602a      	str	r2, [r5, #0]
}
 8014932:	e7e2      	b.n	80148fa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014934:	b942      	cbnz	r2, 8014948 <vTaskSwitchContext+0x5c>
 8014936:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801493a:	f383 8811 	msr	BASEPRI, r3
 801493e:	f3bf 8f6f 	isb	sy
 8014942:	f3bf 8f4f 	dsb	sy
 8014946:	e7fe      	b.n	8014946 <vTaskSwitchContext+0x5a>
 8014948:	3a01      	subs	r2, #1
 801494a:	e7dc      	b.n	8014906 <vTaskSwitchContext+0x1a>
 801494c:	200132b0 	.word	0x200132b0
 8014950:	200132c0 	.word	0x200132c0
 8014954:	200132cc 	.word	0x200132cc
 8014958:	20013348 	.word	0x20013348
 801495c:	200137a8 	.word	0x200137a8

08014960 <vTaskPlaceOnEventList>:
{
 8014960:	b510      	push	{r4, lr}
 8014962:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8014964:	b940      	cbnz	r0, 8014978 <vTaskPlaceOnEventList+0x18>
 8014966:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801496a:	f383 8811 	msr	BASEPRI, r3
 801496e:	f3bf 8f6f 	isb	sy
 8014972:	f3bf 8f4f 	dsb	sy
 8014976:	e7fe      	b.n	8014976 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8014978:	4b05      	ldr	r3, [pc, #20]	@ (8014990 <vTaskPlaceOnEventList+0x30>)
 801497a:	6819      	ldr	r1, [r3, #0]
 801497c:	3118      	adds	r1, #24
 801497e:	f7fe fdae 	bl	80134de <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8014982:	4620      	mov	r0, r4
 8014984:	2101      	movs	r1, #1
}
 8014986:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 801498a:	f7ff bce3 	b.w	8014354 <prvAddCurrentTaskToDelayedList>
 801498e:	bf00      	nop
 8014990:	200137a8 	.word	0x200137a8

08014994 <vTaskPlaceOnEventListRestricted>:
	{
 8014994:	b538      	push	{r3, r4, r5, lr}
 8014996:	460d      	mov	r5, r1
 8014998:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 801499a:	b940      	cbnz	r0, 80149ae <vTaskPlaceOnEventListRestricted+0x1a>
 801499c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80149a0:	f383 8811 	msr	BASEPRI, r3
 80149a4:	f3bf 8f6f 	isb	sy
 80149a8:	f3bf 8f4f 	dsb	sy
 80149ac:	e7fe      	b.n	80149ac <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80149ae:	4b07      	ldr	r3, [pc, #28]	@ (80149cc <vTaskPlaceOnEventListRestricted+0x38>)
 80149b0:	6819      	ldr	r1, [r3, #0]
 80149b2:	3118      	adds	r1, #24
 80149b4:	f7fe fd88 	bl	80134c8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80149b8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80149ba:	4621      	mov	r1, r4
 80149bc:	bf0c      	ite	eq
 80149be:	4628      	moveq	r0, r5
 80149c0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80149c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80149c8:	f7ff bcc4 	b.w	8014354 <prvAddCurrentTaskToDelayedList>
 80149cc:	200137a8 	.word	0x200137a8

080149d0 <xTaskRemoveFromEventList>:
{
 80149d0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80149d2:	68c3      	ldr	r3, [r0, #12]
 80149d4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80149d6:	b944      	cbnz	r4, 80149ea <xTaskRemoveFromEventList+0x1a>
 80149d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80149dc:	f383 8811 	msr	BASEPRI, r3
 80149e0:	f3bf 8f6f 	isb	sy
 80149e4:	f3bf 8f4f 	dsb	sy
 80149e8:	e7fe      	b.n	80149e8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80149ea:	f104 0518 	add.w	r5, r4, #24
 80149ee:	4628      	mov	r0, r5
 80149f0:	f7fe fd8c 	bl	801350c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80149f4:	4b10      	ldr	r3, [pc, #64]	@ (8014a38 <xTaskRemoveFromEventList+0x68>)
 80149f6:	681b      	ldr	r3, [r3, #0]
 80149f8:	b9db      	cbnz	r3, 8014a32 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80149fa:	1d25      	adds	r5, r4, #4
 80149fc:	4628      	mov	r0, r5
 80149fe:	f7fe fd85 	bl	801350c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8014a02:	4a0e      	ldr	r2, [pc, #56]	@ (8014a3c <xTaskRemoveFromEventList+0x6c>)
 8014a04:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8014a06:	6811      	ldr	r1, [r2, #0]
 8014a08:	428b      	cmp	r3, r1
 8014a0a:	bf88      	it	hi
 8014a0c:	6013      	strhi	r3, [r2, #0]
 8014a0e:	4a0c      	ldr	r2, [pc, #48]	@ (8014a40 <xTaskRemoveFromEventList+0x70>)
 8014a10:	2014      	movs	r0, #20
 8014a12:	4629      	mov	r1, r5
 8014a14:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8014a18:	f7fe fd56 	bl	80134c8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8014a1c:	4b09      	ldr	r3, [pc, #36]	@ (8014a44 <xTaskRemoveFromEventList+0x74>)
 8014a1e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8014a20:	681b      	ldr	r3, [r3, #0]
 8014a22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014a24:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8014a26:	bf83      	ittte	hi
 8014a28:	4b07      	ldrhi	r3, [pc, #28]	@ (8014a48 <xTaskRemoveFromEventList+0x78>)
 8014a2a:	2001      	movhi	r0, #1
 8014a2c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8014a2e:	2000      	movls	r0, #0
}
 8014a30:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8014a32:	4806      	ldr	r0, [pc, #24]	@ (8014a4c <xTaskRemoveFromEventList+0x7c>)
 8014a34:	4629      	mov	r1, r5
 8014a36:	e7ef      	b.n	8014a18 <xTaskRemoveFromEventList+0x48>
 8014a38:	200132b0 	.word	0x200132b0
 8014a3c:	200132cc 	.word	0x200132cc
 8014a40:	20013348 	.word	0x20013348
 8014a44:	200137a8 	.word	0x200137a8
 8014a48:	200132c0 	.word	0x200132c0
 8014a4c:	20013304 	.word	0x20013304

08014a50 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8014a50:	4b03      	ldr	r3, [pc, #12]	@ (8014a60 <vTaskInternalSetTimeOutState+0x10>)
 8014a52:	681b      	ldr	r3, [r3, #0]
 8014a54:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8014a56:	4b03      	ldr	r3, [pc, #12]	@ (8014a64 <vTaskInternalSetTimeOutState+0x14>)
 8014a58:	681b      	ldr	r3, [r3, #0]
 8014a5a:	6043      	str	r3, [r0, #4]
}
 8014a5c:	4770      	bx	lr
 8014a5e:	bf00      	nop
 8014a60:	200132bc 	.word	0x200132bc
 8014a64:	200132d0 	.word	0x200132d0

08014a68 <xTaskCheckForTimeOut>:
{
 8014a68:	b570      	push	{r4, r5, r6, lr}
 8014a6a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8014a6c:	4605      	mov	r5, r0
 8014a6e:	b940      	cbnz	r0, 8014a82 <xTaskCheckForTimeOut+0x1a>
 8014a70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014a74:	f383 8811 	msr	BASEPRI, r3
 8014a78:	f3bf 8f6f 	isb	sy
 8014a7c:	f3bf 8f4f 	dsb	sy
 8014a80:	e7fe      	b.n	8014a80 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8014a82:	b941      	cbnz	r1, 8014a96 <xTaskCheckForTimeOut+0x2e>
 8014a84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014a88:	f383 8811 	msr	BASEPRI, r3
 8014a8c:	f3bf 8f6f 	isb	sy
 8014a90:	f3bf 8f4f 	dsb	sy
 8014a94:	e7fe      	b.n	8014a94 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8014a96:	f7fe fdb5 	bl	8013604 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8014a9a:	4b0f      	ldr	r3, [pc, #60]	@ (8014ad8 <xTaskCheckForTimeOut+0x70>)
 8014a9c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8014a9e:	6823      	ldr	r3, [r4, #0]
 8014aa0:	1c5a      	adds	r2, r3, #1
 8014aa2:	d010      	beq.n	8014ac6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8014aa4:	480d      	ldr	r0, [pc, #52]	@ (8014adc <xTaskCheckForTimeOut+0x74>)
 8014aa6:	682e      	ldr	r6, [r5, #0]
 8014aa8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8014aaa:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8014aac:	4286      	cmp	r6, r0
 8014aae:	d001      	beq.n	8014ab4 <xTaskCheckForTimeOut+0x4c>
 8014ab0:	428a      	cmp	r2, r1
 8014ab2:	d90f      	bls.n	8014ad4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8014ab4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8014ab6:	4283      	cmp	r3, r0
 8014ab8:	d90a      	bls.n	8014ad0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8014aba:	1a5b      	subs	r3, r3, r1
 8014abc:	4413      	add	r3, r2
 8014abe:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8014ac0:	4628      	mov	r0, r5
 8014ac2:	f7ff ffc5 	bl	8014a50 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8014ac6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8014ac8:	f7fe fdbc 	bl	8013644 <vPortExitCritical>
}
 8014acc:	4620      	mov	r0, r4
 8014ace:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8014ad0:	2300      	movs	r3, #0
 8014ad2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8014ad4:	2401      	movs	r4, #1
 8014ad6:	e7f7      	b.n	8014ac8 <xTaskCheckForTimeOut+0x60>
 8014ad8:	200132d0 	.word	0x200132d0
 8014adc:	200132bc 	.word	0x200132bc

08014ae0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8014ae0:	4b01      	ldr	r3, [pc, #4]	@ (8014ae8 <vTaskMissedYield+0x8>)
 8014ae2:	2201      	movs	r2, #1
 8014ae4:	601a      	str	r2, [r3, #0]
}
 8014ae6:	4770      	bx	lr
 8014ae8:	200132c0 	.word	0x200132c0

08014aec <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8014aec:	4b05      	ldr	r3, [pc, #20]	@ (8014b04 <xTaskGetSchedulerState+0x18>)
 8014aee:	681b      	ldr	r3, [r3, #0]
 8014af0:	b133      	cbz	r3, 8014b00 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8014af2:	4b05      	ldr	r3, [pc, #20]	@ (8014b08 <xTaskGetSchedulerState+0x1c>)
 8014af4:	6818      	ldr	r0, [r3, #0]
 8014af6:	fab0 f080 	clz	r0, r0
 8014afa:	0940      	lsrs	r0, r0, #5
 8014afc:	0040      	lsls	r0, r0, #1
 8014afe:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8014b00:	2001      	movs	r0, #1
	}
 8014b02:	4770      	bx	lr
 8014b04:	200132c8 	.word	0x200132c8
 8014b08:	200132b0 	.word	0x200132b0

08014b0c <xTaskPriorityInherit>:
	{
 8014b0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8014b0e:	4604      	mov	r4, r0
 8014b10:	b338      	cbz	r0, 8014b62 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8014b12:	4d1a      	ldr	r5, [pc, #104]	@ (8014b7c <xTaskPriorityInherit+0x70>)
 8014b14:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014b16:	682a      	ldr	r2, [r5, #0]
 8014b18:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8014b1a:	4293      	cmp	r3, r2
 8014b1c:	d226      	bcs.n	8014b6c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8014b1e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8014b20:	4e17      	ldr	r6, [pc, #92]	@ (8014b80 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8014b22:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8014b24:	bfa1      	itttt	ge
 8014b26:	682a      	ldrge	r2, [r5, #0]
 8014b28:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8014b2a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8014b2e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8014b30:	2214      	movs	r2, #20
 8014b32:	fb02 6303 	mla	r3, r2, r3, r6
 8014b36:	6942      	ldr	r2, [r0, #20]
 8014b38:	429a      	cmp	r2, r3
 8014b3a:	d113      	bne.n	8014b64 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8014b3c:	1d07      	adds	r7, r0, #4
 8014b3e:	4638      	mov	r0, r7
 8014b40:	f7fe fce4 	bl	801350c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8014b44:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8014b46:	4a0f      	ldr	r2, [pc, #60]	@ (8014b84 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8014b48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8014b4a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8014b4c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8014b4e:	2014      	movs	r0, #20
 8014b50:	428b      	cmp	r3, r1
 8014b52:	fb00 6003 	mla	r0, r0, r3, r6
 8014b56:	4639      	mov	r1, r7
 8014b58:	bf88      	it	hi
 8014b5a:	6013      	strhi	r3, [r2, #0]
 8014b5c:	f7fe fcb4 	bl	80134c8 <vListInsertEnd>
				xReturn = pdTRUE;
 8014b60:	2001      	movs	r0, #1
	}
 8014b62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8014b64:	682b      	ldr	r3, [r5, #0]
 8014b66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014b68:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8014b6a:	e7f9      	b.n	8014b60 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8014b6c:	682b      	ldr	r3, [r5, #0]
 8014b6e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8014b70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014b72:	4298      	cmp	r0, r3
 8014b74:	bf2c      	ite	cs
 8014b76:	2000      	movcs	r0, #0
 8014b78:	2001      	movcc	r0, #1
 8014b7a:	e7f2      	b.n	8014b62 <xTaskPriorityInherit+0x56>
 8014b7c:	200137a8 	.word	0x200137a8
 8014b80:	20013348 	.word	0x20013348
 8014b84:	200132cc 	.word	0x200132cc

08014b88 <xTaskPriorityDisinherit>:
	{
 8014b88:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8014b8a:	b908      	cbnz	r0, 8014b90 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8014b8c:	2000      	movs	r0, #0
	}
 8014b8e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8014b90:	4b1b      	ldr	r3, [pc, #108]	@ (8014c00 <xTaskPriorityDisinherit+0x78>)
 8014b92:	681c      	ldr	r4, [r3, #0]
 8014b94:	4284      	cmp	r4, r0
 8014b96:	d008      	beq.n	8014baa <xTaskPriorityDisinherit+0x22>
 8014b98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014b9c:	f383 8811 	msr	BASEPRI, r3
 8014ba0:	f3bf 8f6f 	isb	sy
 8014ba4:	f3bf 8f4f 	dsb	sy
 8014ba8:	e7fe      	b.n	8014ba8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8014baa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8014bac:	b943      	cbnz	r3, 8014bc0 <xTaskPriorityDisinherit+0x38>
 8014bae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014bb2:	f383 8811 	msr	BASEPRI, r3
 8014bb6:	f3bf 8f6f 	isb	sy
 8014bba:	f3bf 8f4f 	dsb	sy
 8014bbe:	e7fe      	b.n	8014bbe <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8014bc0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8014bc2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8014bc4:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8014bc6:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8014bc8:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8014bca:	d0df      	beq.n	8014b8c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8014bcc:	2b00      	cmp	r3, #0
 8014bce:	d1dd      	bne.n	8014b8c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8014bd0:	1d25      	adds	r5, r4, #4
 8014bd2:	4628      	mov	r0, r5
 8014bd4:	f7fe fc9a 	bl	801350c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8014bd8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8014bda:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8014bdc:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8014be0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8014be2:	4a08      	ldr	r2, [pc, #32]	@ (8014c04 <xTaskPriorityDisinherit+0x7c>)
 8014be4:	6811      	ldr	r1, [r2, #0]
 8014be6:	428b      	cmp	r3, r1
 8014be8:	bf88      	it	hi
 8014bea:	6013      	strhi	r3, [r2, #0]
 8014bec:	4a06      	ldr	r2, [pc, #24]	@ (8014c08 <xTaskPriorityDisinherit+0x80>)
 8014bee:	2014      	movs	r0, #20
 8014bf0:	fb00 2003 	mla	r0, r0, r3, r2
 8014bf4:	4629      	mov	r1, r5
 8014bf6:	f7fe fc67 	bl	80134c8 <vListInsertEnd>
					xReturn = pdTRUE;
 8014bfa:	2001      	movs	r0, #1
		return xReturn;
 8014bfc:	e7c7      	b.n	8014b8e <xTaskPriorityDisinherit+0x6>
 8014bfe:	bf00      	nop
 8014c00:	200137a8 	.word	0x200137a8
 8014c04:	200132cc 	.word	0x200132cc
 8014c08:	20013348 	.word	0x20013348

08014c0c <vTaskPriorityDisinheritAfterTimeout>:
	{
 8014c0c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8014c0e:	4604      	mov	r4, r0
 8014c10:	2800      	cmp	r0, #0
 8014c12:	d041      	beq.n	8014c98 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8014c14:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8014c16:	b942      	cbnz	r2, 8014c2a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8014c18:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014c1c:	f383 8811 	msr	BASEPRI, r3
 8014c20:	f3bf 8f6f 	isb	sy
 8014c24:	f3bf 8f4f 	dsb	sy
 8014c28:	e7fe      	b.n	8014c28 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8014c2a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8014c2c:	4299      	cmp	r1, r3
 8014c2e:	bf38      	it	cc
 8014c30:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8014c32:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014c34:	428b      	cmp	r3, r1
 8014c36:	d02f      	beq.n	8014c98 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8014c38:	2a01      	cmp	r2, #1
 8014c3a:	d12d      	bne.n	8014c98 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8014c3c:	4a17      	ldr	r2, [pc, #92]	@ (8014c9c <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8014c3e:	6812      	ldr	r2, [r2, #0]
 8014c40:	4282      	cmp	r2, r0
 8014c42:	d108      	bne.n	8014c56 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8014c44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014c48:	f383 8811 	msr	BASEPRI, r3
 8014c4c:	f3bf 8f6f 	isb	sy
 8014c50:	f3bf 8f4f 	dsb	sy
 8014c54:	e7fe      	b.n	8014c54 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8014c56:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8014c58:	4d11      	ldr	r5, [pc, #68]	@ (8014ca0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8014c5a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8014c5c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8014c5e:	f04f 0214 	mov.w	r2, #20
 8014c62:	fb02 5303 	mla	r3, r2, r3, r5
 8014c66:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8014c68:	bfa4      	itt	ge
 8014c6a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8014c6e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8014c70:	429a      	cmp	r2, r3
 8014c72:	d111      	bne.n	8014c98 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8014c74:	1d06      	adds	r6, r0, #4
 8014c76:	4630      	mov	r0, r6
 8014c78:	f7fe fc48 	bl	801350c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8014c7c:	4a09      	ldr	r2, [pc, #36]	@ (8014ca4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8014c7e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8014c80:	6811      	ldr	r1, [r2, #0]
 8014c82:	2014      	movs	r0, #20
 8014c84:	428b      	cmp	r3, r1
 8014c86:	fb00 5003 	mla	r0, r0, r3, r5
 8014c8a:	4631      	mov	r1, r6
	}
 8014c8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8014c90:	bf88      	it	hi
 8014c92:	6013      	strhi	r3, [r2, #0]
 8014c94:	f7fe bc18 	b.w	80134c8 <vListInsertEnd>
	}
 8014c98:	bd70      	pop	{r4, r5, r6, pc}
 8014c9a:	bf00      	nop
 8014c9c:	200137a8 	.word	0x200137a8
 8014ca0:	20013348 	.word	0x20013348
 8014ca4:	200132cc 	.word	0x200132cc

08014ca8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8014ca8:	4b04      	ldr	r3, [pc, #16]	@ (8014cbc <pvTaskIncrementMutexHeldCount+0x14>)
 8014caa:	681a      	ldr	r2, [r3, #0]
 8014cac:	b11a      	cbz	r2, 8014cb6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8014cae:	6819      	ldr	r1, [r3, #0]
 8014cb0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8014cb2:	3201      	adds	r2, #1
 8014cb4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8014cb6:	6818      	ldr	r0, [r3, #0]
	}
 8014cb8:	4770      	bx	lr
 8014cba:	bf00      	nop
 8014cbc:	200137a8 	.word	0x200137a8

08014cc0 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8014cc0:	4291      	cmp	r1, r2
{
 8014cc2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8014cc4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8014cc6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8014cc8:	d80a      	bhi.n	8014ce0 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8014cca:	1ad2      	subs	r2, r2, r3
 8014ccc:	6983      	ldr	r3, [r0, #24]
 8014cce:	429a      	cmp	r2, r3
 8014cd0:	d20d      	bcs.n	8014cee <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8014cd2:	4b08      	ldr	r3, [pc, #32]	@ (8014cf4 <prvInsertTimerInActiveList+0x34>)
 8014cd4:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8014cd6:	6818      	ldr	r0, [r3, #0]
 8014cd8:	f7fe fc01 	bl	80134de <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8014cdc:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8014cde:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8014ce0:	429a      	cmp	r2, r3
 8014ce2:	d201      	bcs.n	8014ce8 <prvInsertTimerInActiveList+0x28>
 8014ce4:	4299      	cmp	r1, r3
 8014ce6:	d202      	bcs.n	8014cee <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8014ce8:	4b03      	ldr	r3, [pc, #12]	@ (8014cf8 <prvInsertTimerInActiveList+0x38>)
 8014cea:	1d01      	adds	r1, r0, #4
 8014cec:	e7f3      	b.n	8014cd6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8014cee:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8014cf0:	e7f5      	b.n	8014cde <prvInsertTimerInActiveList+0x1e>
 8014cf2:	bf00      	nop
 8014cf4:	200138a8 	.word	0x200138a8
 8014cf8:	200138ac 	.word	0x200138ac

08014cfc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8014cfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8014cfe:	4c11      	ldr	r4, [pc, #68]	@ (8014d44 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8014d00:	f7fe fc80 	bl	8013604 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8014d04:	6825      	ldr	r5, [r4, #0]
 8014d06:	b9bd      	cbnz	r5, 8014d38 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8014d08:	4f0f      	ldr	r7, [pc, #60]	@ (8014d48 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8014d0a:	4e10      	ldr	r6, [pc, #64]	@ (8014d4c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8014d0c:	4638      	mov	r0, r7
 8014d0e:	f7fe fbcd 	bl	80134ac <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8014d12:	4630      	mov	r0, r6
 8014d14:	f7fe fbca 	bl	80134ac <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8014d18:	4b0d      	ldr	r3, [pc, #52]	@ (8014d50 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8014d1a:	4a0e      	ldr	r2, [pc, #56]	@ (8014d54 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8014d1c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8014d1e:	4b0e      	ldr	r3, [pc, #56]	@ (8014d58 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8014d20:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8014d22:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8014d24:	200a      	movs	r0, #10
 8014d26:	4b0d      	ldr	r3, [pc, #52]	@ (8014d5c <prvCheckForValidListAndQueue+0x60>)
 8014d28:	9500      	str	r5, [sp, #0]
 8014d2a:	f7fe fe74 	bl	8013a16 <xQueueGenericCreateStatic>
 8014d2e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8014d30:	b110      	cbz	r0, 8014d38 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8014d32:	490b      	ldr	r1, [pc, #44]	@ (8014d60 <prvCheckForValidListAndQueue+0x64>)
 8014d34:	f7ff fa2c 	bl	8014190 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8014d38:	b003      	add	sp, #12
 8014d3a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8014d3e:	f7fe bc81 	b.w	8013644 <vPortExitCritical>
 8014d42:	bf00      	nop
 8014d44:	200138a4 	.word	0x200138a4
 8014d48:	200138c4 	.word	0x200138c4
 8014d4c:	200138b0 	.word	0x200138b0
 8014d50:	200138ac 	.word	0x200138ac
 8014d54:	200137fc 	.word	0x200137fc
 8014d58:	200138a8 	.word	0x200138a8
 8014d5c:	200137ac 	.word	0x200137ac
 8014d60:	08030d6b 	.word	0x08030d6b

08014d64 <xTimerCreateTimerTask>:
{
 8014d64:	b510      	push	{r4, lr}
 8014d66:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8014d68:	f7ff ffc8 	bl	8014cfc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8014d6c:	4b12      	ldr	r3, [pc, #72]	@ (8014db8 <xTimerCreateTimerTask+0x54>)
 8014d6e:	681b      	ldr	r3, [r3, #0]
 8014d70:	b1b3      	cbz	r3, 8014da0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8014d72:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8014d74:	aa07      	add	r2, sp, #28
 8014d76:	a906      	add	r1, sp, #24
 8014d78:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8014d7a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8014d7e:	f7fe fa8d 	bl	801329c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8014d82:	9b05      	ldr	r3, [sp, #20]
 8014d84:	9302      	str	r3, [sp, #8]
 8014d86:	9b06      	ldr	r3, [sp, #24]
 8014d88:	9301      	str	r3, [sp, #4]
 8014d8a:	2302      	movs	r3, #2
 8014d8c:	9300      	str	r3, [sp, #0]
 8014d8e:	9a07      	ldr	r2, [sp, #28]
 8014d90:	490a      	ldr	r1, [pc, #40]	@ (8014dbc <xTimerCreateTimerTask+0x58>)
 8014d92:	480b      	ldr	r0, [pc, #44]	@ (8014dc0 <xTimerCreateTimerTask+0x5c>)
 8014d94:	4623      	mov	r3, r4
 8014d96:	f7ff fbc0 	bl	801451a <xTaskCreateStatic>
 8014d9a:	4b0a      	ldr	r3, [pc, #40]	@ (8014dc4 <xTimerCreateTimerTask+0x60>)
 8014d9c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8014d9e:	b940      	cbnz	r0, 8014db2 <xTimerCreateTimerTask+0x4e>
 8014da0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014da4:	f383 8811 	msr	BASEPRI, r3
 8014da8:	f3bf 8f6f 	isb	sy
 8014dac:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8014db0:	e7fe      	b.n	8014db0 <xTimerCreateTimerTask+0x4c>
}
 8014db2:	2001      	movs	r0, #1
 8014db4:	b008      	add	sp, #32
 8014db6:	bd10      	pop	{r4, pc}
 8014db8:	200138a4 	.word	0x200138a4
 8014dbc:	08030d70 	.word	0x08030d70
 8014dc0:	08014ec5 	.word	0x08014ec5
 8014dc4:	200138a0 	.word	0x200138a0

08014dc8 <xTimerGenericCommand>:
{
 8014dc8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014dca:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8014dcc:	4604      	mov	r4, r0
{
 8014dce:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8014dd0:	b940      	cbnz	r0, 8014de4 <xTimerGenericCommand+0x1c>
 8014dd2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014dd6:	f383 8811 	msr	BASEPRI, r3
 8014dda:	f3bf 8f6f 	isb	sy
 8014dde:	f3bf 8f4f 	dsb	sy
 8014de2:	e7fe      	b.n	8014de2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8014de4:	4d0d      	ldr	r5, [pc, #52]	@ (8014e1c <xTimerGenericCommand+0x54>)
 8014de6:	6828      	ldr	r0, [r5, #0]
 8014de8:	b180      	cbz	r0, 8014e0c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8014dea:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8014dec:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8014df0:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8014df2:	dc0d      	bgt.n	8014e10 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8014df4:	f7ff fe7a 	bl	8014aec <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8014df8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8014dfa:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8014dfc:	bf08      	it	eq
 8014dfe:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8014e00:	6828      	ldr	r0, [r5, #0]
 8014e02:	bf18      	it	ne
 8014e04:	461a      	movne	r2, r3
 8014e06:	4669      	mov	r1, sp
 8014e08:	f7fe feba 	bl	8013b80 <xQueueGenericSend>
}
 8014e0c:	b004      	add	sp, #16
 8014e0e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8014e10:	2300      	movs	r3, #0
 8014e12:	4669      	mov	r1, sp
 8014e14:	f7fe ff66 	bl	8013ce4 <xQueueGenericSendFromISR>
 8014e18:	e7f8      	b.n	8014e0c <xTimerGenericCommand+0x44>
 8014e1a:	bf00      	nop
 8014e1c:	200138a4 	.word	0x200138a4

08014e20 <prvSampleTimeNow>:
{
 8014e20:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8014e24:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8014ec0 <prvSampleTimeNow+0xa0>
{
 8014e28:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8014e2a:	f7ff fc2b 	bl	8014684 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8014e2e:	f8d8 3000 	ldr.w	r3, [r8]
 8014e32:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8014e34:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8014e36:	d909      	bls.n	8014e4c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8014e38:	4f1f      	ldr	r7, [pc, #124]	@ (8014eb8 <prvSampleTimeNow+0x98>)
 8014e3a:	683b      	ldr	r3, [r7, #0]
 8014e3c:	681a      	ldr	r2, [r3, #0]
 8014e3e:	b96a      	cbnz	r2, 8014e5c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8014e40:	4a1e      	ldr	r2, [pc, #120]	@ (8014ebc <prvSampleTimeNow+0x9c>)
 8014e42:	6811      	ldr	r1, [r2, #0]
 8014e44:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8014e46:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8014e48:	2301      	movs	r3, #1
 8014e4a:	e000      	b.n	8014e4e <prvSampleTimeNow+0x2e>
 8014e4c:	2300      	movs	r3, #0
}
 8014e4e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8014e50:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8014e52:	f8c8 5000 	str.w	r5, [r8]
}
 8014e56:	b002      	add	sp, #8
 8014e58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8014e5c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014e5e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8014e60:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8014e64:	f104 0a04 	add.w	sl, r4, #4
 8014e68:	4650      	mov	r0, sl
 8014e6a:	f7fe fb4f 	bl	801350c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8014e6e:	6a23      	ldr	r3, [r4, #32]
 8014e70:	4620      	mov	r0, r4
 8014e72:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8014e74:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8014e78:	075b      	lsls	r3, r3, #29
 8014e7a:	d5de      	bpl.n	8014e3a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8014e7c:	69a3      	ldr	r3, [r4, #24]
 8014e7e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8014e80:	4599      	cmp	r9, r3
 8014e82:	d206      	bcs.n	8014e92 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8014e84:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8014e86:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8014e88:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8014e8a:	4651      	mov	r1, sl
 8014e8c:	f7fe fb27 	bl	80134de <vListInsert>
 8014e90:	e7d3      	b.n	8014e3a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8014e92:	2300      	movs	r3, #0
 8014e94:	9300      	str	r3, [sp, #0]
 8014e96:	464a      	mov	r2, r9
 8014e98:	4619      	mov	r1, r3
 8014e9a:	4620      	mov	r0, r4
 8014e9c:	f7ff ff94 	bl	8014dc8 <xTimerGenericCommand>
				configASSERT( xResult );
 8014ea0:	2800      	cmp	r0, #0
 8014ea2:	d1ca      	bne.n	8014e3a <prvSampleTimeNow+0x1a>
 8014ea4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014ea8:	f383 8811 	msr	BASEPRI, r3
 8014eac:	f3bf 8f6f 	isb	sy
 8014eb0:	f3bf 8f4f 	dsb	sy
 8014eb4:	e7fe      	b.n	8014eb4 <prvSampleTimeNow+0x94>
 8014eb6:	bf00      	nop
 8014eb8:	200138ac 	.word	0x200138ac
 8014ebc:	200138a8 	.word	0x200138a8
 8014ec0:	2001389c 	.word	0x2001389c

08014ec4 <prvTimerTask>:
{
 8014ec4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8014ec8:	4d6e      	ldr	r5, [pc, #440]	@ (8015084 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8014eca:	4e6f      	ldr	r6, [pc, #444]	@ (8015088 <prvTimerTask+0x1c4>)
{
 8014ecc:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8014ece:	682b      	ldr	r3, [r5, #0]
 8014ed0:	f8d3 8000 	ldr.w	r8, [r3]
 8014ed4:	f1b8 0f00 	cmp.w	r8, #0
 8014ed8:	d035      	beq.n	8014f46 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8014eda:	68db      	ldr	r3, [r3, #12]
 8014edc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8014ee0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8014ee2:	f7ff fbc7 	bl	8014674 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8014ee6:	a804      	add	r0, sp, #16
 8014ee8:	f7ff ff9a 	bl	8014e20 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8014eec:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8014eee:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8014ef0:	2b00      	cmp	r3, #0
 8014ef2:	d169      	bne.n	8014fc8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8014ef4:	2c00      	cmp	r4, #0
 8014ef6:	d14c      	bne.n	8014f92 <prvTimerTask+0xce>
 8014ef8:	4540      	cmp	r0, r8
 8014efa:	d350      	bcc.n	8014f9e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8014efc:	f7ff fc5e 	bl	80147bc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8014f00:	682b      	ldr	r3, [r5, #0]
 8014f02:	68db      	ldr	r3, [r3, #12]
 8014f04:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8014f06:	1d38      	adds	r0, r7, #4
 8014f08:	f7fe fb00 	bl	801350c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8014f0c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8014f10:	0758      	lsls	r0, r3, #29
 8014f12:	d51a      	bpl.n	8014f4a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8014f14:	69b9      	ldr	r1, [r7, #24]
 8014f16:	4643      	mov	r3, r8
 8014f18:	464a      	mov	r2, r9
 8014f1a:	4441      	add	r1, r8
 8014f1c:	4638      	mov	r0, r7
 8014f1e:	f7ff fecf 	bl	8014cc0 <prvInsertTimerInActiveList>
 8014f22:	b1b0      	cbz	r0, 8014f52 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8014f24:	9400      	str	r4, [sp, #0]
 8014f26:	4623      	mov	r3, r4
 8014f28:	4642      	mov	r2, r8
 8014f2a:	4621      	mov	r1, r4
 8014f2c:	4638      	mov	r0, r7
 8014f2e:	f7ff ff4b 	bl	8014dc8 <xTimerGenericCommand>
			configASSERT( xResult );
 8014f32:	b970      	cbnz	r0, 8014f52 <prvTimerTask+0x8e>
 8014f34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8014f38:	f383 8811 	msr	BASEPRI, r3
 8014f3c:	f3bf 8f6f 	isb	sy
 8014f40:	f3bf 8f4f 	dsb	sy
 8014f44:	e7fe      	b.n	8014f44 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8014f46:	2401      	movs	r4, #1
 8014f48:	e7cb      	b.n	8014ee2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8014f4a:	f023 0301 	bic.w	r3, r3, #1
 8014f4e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8014f52:	6a3b      	ldr	r3, [r7, #32]
 8014f54:	4638      	mov	r0, r7
 8014f56:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8014f58:	6830      	ldr	r0, [r6, #0]
 8014f5a:	2200      	movs	r2, #0
 8014f5c:	a904      	add	r1, sp, #16
 8014f5e:	f7fe ff6f 	bl	8013e40 <xQueueReceive>
 8014f62:	2800      	cmp	r0, #0
 8014f64:	d0b3      	beq.n	8014ece <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8014f66:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8014f68:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8014f6a:	2b00      	cmp	r3, #0
 8014f6c:	db2f      	blt.n	8014fce <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8014f6e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8014f70:	6963      	ldr	r3, [r4, #20]
 8014f72:	2b00      	cmp	r3, #0
 8014f74:	d132      	bne.n	8014fdc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8014f76:	a803      	add	r0, sp, #12
 8014f78:	f7ff ff52 	bl	8014e20 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8014f7c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8014f7e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8014f80:	2b09      	cmp	r3, #9
 8014f82:	d8e9      	bhi.n	8014f58 <prvTimerTask+0x94>
 8014f84:	e8df f003 	tbb	[pc, r3]
 8014f88:	572e2e2e 	.word	0x572e2e2e
 8014f8c:	2e2e765e 	.word	0x2e2e765e
 8014f90:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8014f92:	4b3e      	ldr	r3, [pc, #248]	@ (801508c <prvTimerTask+0x1c8>)
 8014f94:	681b      	ldr	r3, [r3, #0]
 8014f96:	681c      	ldr	r4, [r3, #0]
 8014f98:	fab4 f484 	clz	r4, r4
 8014f9c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8014f9e:	6830      	ldr	r0, [r6, #0]
 8014fa0:	4622      	mov	r2, r4
 8014fa2:	eba8 0109 	sub.w	r1, r8, r9
 8014fa6:	f7ff f932 	bl	801420e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8014faa:	f7ff fc07 	bl	80147bc <xTaskResumeAll>
 8014fae:	2800      	cmp	r0, #0
 8014fb0:	d1d2      	bne.n	8014f58 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8014fb2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8014fb6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8014fba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8014fbe:	f3bf 8f4f 	dsb	sy
 8014fc2:	f3bf 8f6f 	isb	sy
 8014fc6:	e7c7      	b.n	8014f58 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8014fc8:	f7ff fbf8 	bl	80147bc <xTaskResumeAll>
}
 8014fcc:	e7c4      	b.n	8014f58 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8014fce:	9b05      	ldr	r3, [sp, #20]
 8014fd0:	9907      	ldr	r1, [sp, #28]
 8014fd2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8014fd4:	9b04      	ldr	r3, [sp, #16]
 8014fd6:	2b00      	cmp	r3, #0
 8014fd8:	dbbe      	blt.n	8014f58 <prvTimerTask+0x94>
 8014fda:	e7c8      	b.n	8014f6e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8014fdc:	1d20      	adds	r0, r4, #4
 8014fde:	f7fe fa95 	bl	801350c <uxListRemove>
 8014fe2:	e7c8      	b.n	8014f76 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8014fe4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8014fe8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8014fea:	f043 0301 	orr.w	r3, r3, #1
 8014fee:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8014ff2:	9b05      	ldr	r3, [sp, #20]
 8014ff4:	4620      	mov	r0, r4
 8014ff6:	4419      	add	r1, r3
 8014ff8:	f7ff fe62 	bl	8014cc0 <prvInsertTimerInActiveList>
 8014ffc:	2800      	cmp	r0, #0
 8014ffe:	d0ab      	beq.n	8014f58 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8015000:	6a23      	ldr	r3, [r4, #32]
 8015002:	4620      	mov	r0, r4
 8015004:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8015006:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 801500a:	0759      	lsls	r1, r3, #29
 801500c:	d5a4      	bpl.n	8014f58 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 801500e:	69a2      	ldr	r2, [r4, #24]
 8015010:	9905      	ldr	r1, [sp, #20]
 8015012:	2300      	movs	r3, #0
 8015014:	440a      	add	r2, r1
 8015016:	9300      	str	r3, [sp, #0]
 8015018:	4619      	mov	r1, r3
 801501a:	4620      	mov	r0, r4
 801501c:	f7ff fed4 	bl	8014dc8 <xTimerGenericCommand>
							configASSERT( xResult );
 8015020:	2800      	cmp	r0, #0
 8015022:	d199      	bne.n	8014f58 <prvTimerTask+0x94>
 8015024:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8015028:	f383 8811 	msr	BASEPRI, r3
 801502c:	f3bf 8f6f 	isb	sy
 8015030:	f3bf 8f4f 	dsb	sy
 8015034:	e7fe      	b.n	8015034 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8015036:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801503a:	f023 0301 	bic.w	r3, r3, #1
 801503e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8015042:	e789      	b.n	8014f58 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8015044:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8015048:	f043 0301 	orr.w	r3, r3, #1
 801504c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8015050:	9905      	ldr	r1, [sp, #20]
 8015052:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8015054:	b941      	cbnz	r1, 8015068 <prvTimerTask+0x1a4>
 8015056:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801505a:	f383 8811 	msr	BASEPRI, r3
 801505e:	f3bf 8f6f 	isb	sy
 8015062:	f3bf 8f4f 	dsb	sy
 8015066:	e7fe      	b.n	8015066 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8015068:	4603      	mov	r3, r0
 801506a:	4401      	add	r1, r0
 801506c:	4620      	mov	r0, r4
 801506e:	f7ff fe27 	bl	8014cc0 <prvInsertTimerInActiveList>
					break;
 8015072:	e771      	b.n	8014f58 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8015074:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8015078:	079a      	lsls	r2, r3, #30
 801507a:	d4de      	bmi.n	801503a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 801507c:	4620      	mov	r0, r4
 801507e:	f7fe f9d7 	bl	8013430 <vPortFree>
 8015082:	e769      	b.n	8014f58 <prvTimerTask+0x94>
 8015084:	200138ac 	.word	0x200138ac
 8015088:	200138a4 	.word	0x200138a4
 801508c:	200138a8 	.word	0x200138a8

08015090 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8015090:	8880      	ldrh	r0, [r0, #4]
 8015092:	4770      	bx	lr

08015094 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8015094:	b570      	push	{r4, r5, r6, lr}
 8015096:	6803      	ldr	r3, [r0, #0]
 8015098:	4605      	mov	r5, r0
 801509a:	460c      	mov	r4, r1
 801509c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801509e:	2100      	movs	r1, #0
 80150a0:	4798      	blx	r3
 80150a2:	682b      	ldr	r3, [r5, #0]
 80150a4:	4606      	mov	r6, r0
 80150a6:	6a1b      	ldr	r3, [r3, #32]
 80150a8:	4628      	mov	r0, r5
 80150aa:	4798      	blx	r3
 80150ac:	1ba4      	subs	r4, r4, r6
 80150ae:	b2a4      	uxth	r4, r4
 80150b0:	fbb4 f0f0 	udiv	r0, r4, r0
 80150b4:	bd70      	pop	{r4, r5, r6, pc}

080150b6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80150b6:	2300      	movs	r3, #0
 80150b8:	8083      	strh	r3, [r0, #4]
 80150ba:	4770      	bx	lr

080150bc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80150bc:	b510      	push	{r4, lr}
 80150be:	6803      	ldr	r3, [r0, #0]
 80150c0:	8881      	ldrh	r1, [r0, #4]
 80150c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80150c4:	4604      	mov	r4, r0
 80150c6:	4798      	blx	r3
 80150c8:	88a3      	ldrh	r3, [r4, #4]
 80150ca:	3301      	adds	r3, #1
 80150cc:	80a3      	strh	r3, [r4, #4]
 80150ce:	bd10      	pop	{r4, pc}

080150d0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80150d0:	6803      	ldr	r3, [r0, #0]
 80150d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80150d4:	4718      	bx	r3

080150d6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80150d6:	4770      	bx	lr

080150d8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80150d8:	4a02      	ldr	r2, [pc, #8]	@ (80150e4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80150da:	6002      	str	r2, [r0, #0]
 80150dc:	2200      	movs	r2, #0
 80150de:	8082      	strh	r2, [r0, #4]
 80150e0:	4770      	bx	lr
 80150e2:	bf00      	nop
 80150e4:	080330d0 	.word	0x080330d0

080150e8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80150e8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80150ea:	2000      	movs	r0, #0
 80150ec:	b12b      	cbz	r3, 80150fa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80150ee:	b920      	cbnz	r0, 80150fa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80150f0:	1a5a      	subs	r2, r3, r1
 80150f2:	4250      	negs	r0, r2
 80150f4:	4150      	adcs	r0, r2
 80150f6:	699b      	ldr	r3, [r3, #24]
 80150f8:	e7f8      	b.n	80150ec <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80150fa:	4770      	bx	lr

080150fc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80150fc:	2300      	movs	r3, #0
 80150fe:	6148      	str	r0, [r1, #20]
 8015100:	618b      	str	r3, [r1, #24]
 8015102:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8015104:	b913      	cbnz	r3, 801510c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8015106:	6281      	str	r1, [r0, #40]	@ 0x28
 8015108:	4770      	bx	lr
 801510a:	4613      	mov	r3, r2
 801510c:	699a      	ldr	r2, [r3, #24]
 801510e:	2a00      	cmp	r2, #0
 8015110:	d1fb      	bne.n	801510a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8015112:	6199      	str	r1, [r3, #24]
 8015114:	4770      	bx	lr

08015116 <_ZN8touchgfx9Container9removeAllEv>:
 8015116:	2200      	movs	r2, #0
 8015118:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801511a:	b123      	cbz	r3, 8015126 <_ZN8touchgfx9Container9removeAllEv+0x10>
 801511c:	6999      	ldr	r1, [r3, #24]
 801511e:	6281      	str	r1, [r0, #40]	@ 0x28
 8015120:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8015124:	e7f8      	b.n	8015118 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8015126:	4770      	bx	lr

08015128 <_ZN8touchgfx9Container6unlinkEv>:
 8015128:	2300      	movs	r3, #0
 801512a:	6283      	str	r3, [r0, #40]	@ 0x28
 801512c:	4770      	bx	lr

0801512e <_ZNK8touchgfx9Container12getSolidRectEv>:
 801512e:	2200      	movs	r2, #0
 8015130:	8002      	strh	r2, [r0, #0]
 8015132:	8042      	strh	r2, [r0, #2]
 8015134:	8082      	strh	r2, [r0, #4]
 8015136:	80c2      	strh	r2, [r0, #6]
 8015138:	4770      	bx	lr

0801513a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801513a:	b570      	push	{r4, r5, r6, lr}
 801513c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801513e:	460d      	mov	r5, r1
 8015140:	4616      	mov	r6, r2
 8015142:	b13c      	cbz	r4, 8015154 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8015144:	6823      	ldr	r3, [r4, #0]
 8015146:	4620      	mov	r0, r4
 8015148:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801514a:	4632      	mov	r2, r6
 801514c:	4629      	mov	r1, r5
 801514e:	4798      	blx	r3
 8015150:	69a4      	ldr	r4, [r4, #24]
 8015152:	e7f6      	b.n	8015142 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8015154:	bd70      	pop	{r4, r5, r6, pc}

08015156 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8015156:	b538      	push	{r3, r4, r5, lr}
 8015158:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801515a:	460d      	mov	r5, r1
 801515c:	b134      	cbz	r4, 801516c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801515e:	682b      	ldr	r3, [r5, #0]
 8015160:	4621      	mov	r1, r4
 8015162:	689b      	ldr	r3, [r3, #8]
 8015164:	4628      	mov	r0, r5
 8015166:	4798      	blx	r3
 8015168:	69a4      	ldr	r4, [r4, #24]
 801516a:	e7f7      	b.n	801515c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 801516c:	bd38      	pop	{r3, r4, r5, pc}

0801516e <_ZN8touchgfx9ContainerD1Ev>:
 801516e:	4770      	bx	lr

08015170 <_ZN8touchgfx9ContainerD0Ev>:
 8015170:	b510      	push	{r4, lr}
 8015172:	212c      	movs	r1, #44	@ 0x2c
 8015174:	4604      	mov	r4, r0
 8015176:	f018 fbd6 	bl	802d926 <_ZdlPvj>
 801517a:	4620      	mov	r0, r4
 801517c:	bd10      	pop	{r4, pc}

0801517e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801517e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8015180:	b19b      	cbz	r3, 80151aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8015182:	428b      	cmp	r3, r1
 8015184:	d109      	bne.n	801519a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8015186:	699a      	ldr	r2, [r3, #24]
 8015188:	2100      	movs	r1, #0
 801518a:	6159      	str	r1, [r3, #20]
 801518c:	6282      	str	r2, [r0, #40]	@ 0x28
 801518e:	b902      	cbnz	r2, 8015192 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8015190:	4770      	bx	lr
 8015192:	6199      	str	r1, [r3, #24]
 8015194:	4770      	bx	lr
 8015196:	4613      	mov	r3, r2
 8015198:	b13a      	cbz	r2, 80151aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801519a:	699a      	ldr	r2, [r3, #24]
 801519c:	428a      	cmp	r2, r1
 801519e:	d1fa      	bne.n	8015196 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80151a0:	698a      	ldr	r2, [r1, #24]
 80151a2:	619a      	str	r2, [r3, #24]
 80151a4:	2300      	movs	r3, #0
 80151a6:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80151aa:	4770      	bx	lr

080151ac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80151ac:	b410      	push	{r4}
 80151ae:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80151b0:	4604      	mov	r4, r0
 80151b2:	b92b      	cbnz	r3, 80151c0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80151b4:	6803      	ldr	r3, [r0, #0]
 80151b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80151ba:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80151bc:	4611      	mov	r1, r2
 80151be:	4718      	bx	r3
 80151c0:	b941      	cbnz	r1, 80151d4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80151c2:	6193      	str	r3, [r2, #24]
 80151c4:	6282      	str	r2, [r0, #40]	@ 0x28
 80151c6:	6154      	str	r4, [r2, #20]
 80151c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80151cc:	4770      	bx	lr
 80151ce:	4603      	mov	r3, r0
 80151d0:	2800      	cmp	r0, #0
 80151d2:	d0f9      	beq.n	80151c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80151d4:	4299      	cmp	r1, r3
 80151d6:	6998      	ldr	r0, [r3, #24]
 80151d8:	d1f9      	bne.n	80151ce <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80151da:	6190      	str	r0, [r2, #24]
 80151dc:	618a      	str	r2, [r1, #24]
 80151de:	e7f2      	b.n	80151c6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080151e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80151e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80151e4:	461f      	mov	r7, r3
 80151e6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80151ea:	460d      	mov	r5, r1
 80151ec:	4616      	mov	r6, r2
 80151ee:	b103      	cbz	r3, 80151f2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80151f0:	6038      	str	r0, [r7, #0]
 80151f2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80151f4:	b314      	cbz	r4, 801523c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80151f6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80151fa:	b1eb      	cbz	r3, 8015238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80151fc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015200:	428d      	cmp	r5, r1
 8015202:	db19      	blt.n	8015238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8015204:	8923      	ldrh	r3, [r4, #8]
 8015206:	b289      	uxth	r1, r1
 8015208:	440b      	add	r3, r1
 801520a:	b21b      	sxth	r3, r3
 801520c:	429d      	cmp	r5, r3
 801520e:	da13      	bge.n	8015238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8015210:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015214:	4296      	cmp	r6, r2
 8015216:	db0f      	blt.n	8015238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8015218:	8963      	ldrh	r3, [r4, #10]
 801521a:	b292      	uxth	r2, r2
 801521c:	4413      	add	r3, r2
 801521e:	b21b      	sxth	r3, r3
 8015220:	429e      	cmp	r6, r3
 8015222:	da09      	bge.n	8015238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8015224:	6823      	ldr	r3, [r4, #0]
 8015226:	1ab2      	subs	r2, r6, r2
 8015228:	1a69      	subs	r1, r5, r1
 801522a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 801522e:	b212      	sxth	r2, r2
 8015230:	463b      	mov	r3, r7
 8015232:	b209      	sxth	r1, r1
 8015234:	4620      	mov	r0, r4
 8015236:	47c0      	blx	r8
 8015238:	69a4      	ldr	r4, [r4, #24]
 801523a:	e7db      	b.n	80151f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 801523c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015240 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8015240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015244:	4c6e      	ldr	r4, [pc, #440]	@ (8015400 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8015246:	b0a1      	sub	sp, #132	@ 0x84
 8015248:	6824      	ldr	r4, [r4, #0]
 801524a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801524c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8015250:	9303      	str	r3, [sp, #12]
 8015252:	2400      	movs	r4, #0
 8015254:	802c      	strh	r4, [r5, #0]
 8015256:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8015258:	802c      	strh	r4, [r5, #0]
 801525a:	601c      	str	r4, [r3, #0]
 801525c:	4606      	mov	r6, r0
 801525e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8015262:	f7ff ffbd 	bl	80151e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8015266:	f1b9 0f03 	cmp.w	r9, #3
 801526a:	f340 80c2 	ble.w	80153f2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 801526e:	4631      	mov	r1, r6
 8015270:	a80c      	add	r0, sp, #48	@ 0x30
 8015272:	f007 fb15 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015276:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801527a:	9306      	str	r3, [sp, #24]
 801527c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015280:	9307      	str	r3, [sp, #28]
 8015282:	9b03      	ldr	r3, [sp, #12]
 8015284:	f8d3 a000 	ldr.w	sl, [r3]
 8015288:	f1ba 0f00 	cmp.w	sl, #0
 801528c:	f000 80b4 	beq.w	80153f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8015290:	4651      	mov	r1, sl
 8015292:	a810      	add	r0, sp, #64	@ 0x40
 8015294:	f007 fb04 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015298:	9b01      	ldr	r3, [sp, #4]
 801529a:	9a06      	ldr	r2, [sp, #24]
 801529c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 80152a0:	189d      	adds	r5, r3, r2
 80152a2:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 80152a6:	9a07      	ldr	r2, [sp, #28]
 80152a8:	2002      	movs	r0, #2
 80152aa:	fb91 f1f0 	sdiv	r1, r1, r0
 80152ae:	4419      	add	r1, r3
 80152b0:	1a6d      	subs	r5, r5, r1
 80152b2:	9b02      	ldr	r3, [sp, #8]
 80152b4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 80152b8:	4413      	add	r3, r2
 80152ba:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 80152be:	fb92 f2f0 	sdiv	r2, r2, r0
 80152c2:	440a      	add	r2, r1
 80152c4:	1a9b      	subs	r3, r3, r2
 80152c6:	435b      	muls	r3, r3
 80152c8:	fb05 3505 	mla	r5, r5, r5, r3
 80152cc:	4f4d      	ldr	r7, [pc, #308]	@ (8015404 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80152ce:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80152d0:	ac10      	add	r4, sp, #64	@ 0x40
 80152d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80152d4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80152d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80152d8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80152da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80152dc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80152e0:	f1b9 0f0c 	cmp.w	r9, #12
 80152e4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80152e8:	f04f 0303 	mov.w	r3, #3
 80152ec:	bfc8      	it	gt
 80152ee:	4698      	movgt	r8, r3
 80152f0:	f8cd 9000 	str.w	r9, [sp]
 80152f4:	f04f 0400 	mov.w	r4, #0
 80152f8:	bfdc      	itt	le
 80152fa:	f109 32ff 	addle.w	r2, r9, #4294967295
 80152fe:	fb92 f8f3 	sdivle	r8, r2, r3
 8015302:	1c63      	adds	r3, r4, #1
 8015304:	aa10      	add	r2, sp, #64	@ 0x40
 8015306:	f004 0401 	and.w	r4, r4, #1
 801530a:	9308      	str	r3, [sp, #32]
 801530c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8015310:	9b00      	ldr	r3, [sp, #0]
 8015312:	fb93 f3f8 	sdiv	r3, r3, r8
 8015316:	b29b      	uxth	r3, r3
 8015318:	3404      	adds	r4, #4
 801531a:	f04f 0b00 	mov.w	fp, #0
 801531e:	9304      	str	r3, [sp, #16]
 8015320:	9a04      	ldr	r2, [sp, #16]
 8015322:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8015326:	fb13 f302 	smulbb	r3, r3, r2
 801532a:	9a01      	ldr	r2, [sp, #4]
 801532c:	b29b      	uxth	r3, r3
 801532e:	1899      	adds	r1, r3, r2
 8015330:	9305      	str	r3, [sp, #20]
 8015332:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8015336:	b209      	sxth	r1, r1
 8015338:	4299      	cmp	r1, r3
 801533a:	db4d      	blt.n	80153d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801533c:	8932      	ldrh	r2, [r6, #8]
 801533e:	4413      	add	r3, r2
 8015340:	b21b      	sxth	r3, r3
 8015342:	4299      	cmp	r1, r3
 8015344:	da48      	bge.n	80153d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8015346:	9b04      	ldr	r3, [sp, #16]
 8015348:	6827      	ldr	r7, [r4, #0]
 801534a:	fb17 f703 	smulbb	r7, r7, r3
 801534e:	9b02      	ldr	r3, [sp, #8]
 8015350:	b2bf      	uxth	r7, r7
 8015352:	18fa      	adds	r2, r7, r3
 8015354:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8015358:	b212      	sxth	r2, r2
 801535a:	429a      	cmp	r2, r3
 801535c:	db3c      	blt.n	80153d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801535e:	8970      	ldrh	r0, [r6, #10]
 8015360:	4403      	add	r3, r0
 8015362:	b21b      	sxth	r3, r3
 8015364:	429a      	cmp	r2, r3
 8015366:	da37      	bge.n	80153d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8015368:	2300      	movs	r3, #0
 801536a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801536c:	4630      	mov	r0, r6
 801536e:	ab0b      	add	r3, sp, #44	@ 0x2c
 8015370:	f7ff ff36 	bl	80151e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8015374:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015376:	b37a      	cbz	r2, 80153d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8015378:	4552      	cmp	r2, sl
 801537a:	d02d      	beq.n	80153d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801537c:	4611      	mov	r1, r2
 801537e:	a80e      	add	r0, sp, #56	@ 0x38
 8015380:	9209      	str	r2, [sp, #36]	@ 0x24
 8015382:	f007 fa8d 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015386:	9a06      	ldr	r2, [sp, #24]
 8015388:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 801538c:	9b01      	ldr	r3, [sp, #4]
 801538e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8015392:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8015396:	4413      	add	r3, r2
 8015398:	f04f 0e02 	mov.w	lr, #2
 801539c:	fb91 f1fe 	sdiv	r1, r1, lr
 80153a0:	4401      	add	r1, r0
 80153a2:	1a58      	subs	r0, r3, r1
 80153a4:	9a07      	ldr	r2, [sp, #28]
 80153a6:	9b02      	ldr	r3, [sp, #8]
 80153a8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 80153ac:	fb9c fcfe 	sdiv	ip, ip, lr
 80153b0:	4413      	add	r3, r2
 80153b2:	448c      	add	ip, r1
 80153b4:	eba3 030c 	sub.w	r3, r3, ip
 80153b8:	435b      	muls	r3, r3
 80153ba:	fb00 3300 	mla	r3, r0, r0, r3
 80153be:	42ab      	cmp	r3, r5
 80153c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80153c2:	d208      	bcs.n	80153d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80153c4:	9803      	ldr	r0, [sp, #12]
 80153c6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80153c8:	6001      	str	r1, [r0, #0]
 80153ca:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80153cc:	9805      	ldr	r0, [sp, #20]
 80153ce:	8008      	strh	r0, [r1, #0]
 80153d0:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80153d2:	461d      	mov	r5, r3
 80153d4:	800f      	strh	r7, [r1, #0]
 80153d6:	4692      	mov	sl, r2
 80153d8:	f10b 0b01 	add.w	fp, fp, #1
 80153dc:	f1bb 0f04 	cmp.w	fp, #4
 80153e0:	f104 0408 	add.w	r4, r4, #8
 80153e4:	d19c      	bne.n	8015320 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80153e6:	9b00      	ldr	r3, [sp, #0]
 80153e8:	9c08      	ldr	r4, [sp, #32]
 80153ea:	444b      	add	r3, r9
 80153ec:	4544      	cmp	r4, r8
 80153ee:	9300      	str	r3, [sp, #0]
 80153f0:	d187      	bne.n	8015302 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80153f2:	b021      	add	sp, #132	@ 0x84
 80153f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153f8:	f04f 35ff 	mov.w	r5, #4294967295
 80153fc:	e766      	b.n	80152cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80153fe:	bf00      	nop
 8015400:	200138e4 	.word	0x200138e4
 8015404:	0802f7f4 	.word	0x0802f7f4

08015408 <_ZN8touchgfx4RectaNERKS0_>:
 8015408:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801540c:	f9b1 7000 	ldrsh.w	r7, [r1]
 8015410:	888c      	ldrh	r4, [r1, #4]
 8015412:	f9b0 9000 	ldrsh.w	r9, [r0]
 8015416:	443c      	add	r4, r7
 8015418:	b2a4      	uxth	r4, r4
 801541a:	fa0f f884 	sxth.w	r8, r4
 801541e:	45c1      	cmp	r9, r8
 8015420:	da2f      	bge.n	8015482 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8015422:	8882      	ldrh	r2, [r0, #4]
 8015424:	444a      	add	r2, r9
 8015426:	b292      	uxth	r2, r2
 8015428:	fa0f fe82 	sxth.w	lr, r2
 801542c:	4577      	cmp	r7, lr
 801542e:	da28      	bge.n	8015482 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8015430:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8015434:	88cb      	ldrh	r3, [r1, #6]
 8015436:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801543a:	442b      	add	r3, r5
 801543c:	b21b      	sxth	r3, r3
 801543e:	429e      	cmp	r6, r3
 8015440:	da1f      	bge.n	8015482 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8015442:	88c3      	ldrh	r3, [r0, #6]
 8015444:	4433      	add	r3, r6
 8015446:	b29b      	uxth	r3, r3
 8015448:	fa0f fc83 	sxth.w	ip, r3
 801544c:	4565      	cmp	r5, ip
 801544e:	da18      	bge.n	8015482 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8015450:	454f      	cmp	r7, r9
 8015452:	bfb8      	it	lt
 8015454:	464f      	movlt	r7, r9
 8015456:	42b5      	cmp	r5, r6
 8015458:	bfb8      	it	lt
 801545a:	4635      	movlt	r5, r6
 801545c:	45f0      	cmp	r8, lr
 801545e:	bfd8      	it	le
 8015460:	4622      	movle	r2, r4
 8015462:	1bd2      	subs	r2, r2, r7
 8015464:	8082      	strh	r2, [r0, #4]
 8015466:	884a      	ldrh	r2, [r1, #2]
 8015468:	88c9      	ldrh	r1, [r1, #6]
 801546a:	8007      	strh	r7, [r0, #0]
 801546c:	440a      	add	r2, r1
 801546e:	b292      	uxth	r2, r2
 8015470:	b211      	sxth	r1, r2
 8015472:	458c      	cmp	ip, r1
 8015474:	bfa8      	it	ge
 8015476:	4613      	movge	r3, r2
 8015478:	1b5b      	subs	r3, r3, r5
 801547a:	80c3      	strh	r3, [r0, #6]
 801547c:	8045      	strh	r5, [r0, #2]
 801547e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015482:	2300      	movs	r3, #0
 8015484:	8003      	strh	r3, [r0, #0]
 8015486:	8043      	strh	r3, [r0, #2]
 8015488:	8083      	strh	r3, [r0, #4]
 801548a:	80c3      	strh	r3, [r0, #6]
 801548c:	e7f7      	b.n	801547e <_ZN8touchgfx4RectaNERKS0_+0x76>

0801548e <_ZNK8touchgfx4Rect7isEmptyEv>:
 801548e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015492:	2b00      	cmp	r3, #0
 8015494:	dd06      	ble.n	80154a4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8015496:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801549a:	2800      	cmp	r0, #0
 801549c:	bfcc      	ite	gt
 801549e:	2000      	movgt	r0, #0
 80154a0:	2001      	movle	r0, #1
 80154a2:	4770      	bx	lr
 80154a4:	2001      	movs	r0, #1
 80154a6:	4770      	bx	lr

080154a8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80154a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80154ac:	2300      	movs	r3, #0
 80154ae:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80154b0:	8003      	strh	r3, [r0, #0]
 80154b2:	4604      	mov	r4, r0
 80154b4:	8043      	strh	r3, [r0, #2]
 80154b6:	8083      	strh	r3, [r0, #4]
 80154b8:	80c3      	strh	r3, [r0, #6]
 80154ba:	2d00      	cmp	r5, #0
 80154bc:	d040      	beq.n	8015540 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80154be:	1d28      	adds	r0, r5, #4
 80154c0:	f7ff ffe5 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 80154c4:	b988      	cbnz	r0, 80154ea <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80154c6:	4620      	mov	r0, r4
 80154c8:	f7ff ffe1 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 80154cc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80154d0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80154d4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80154d8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80154dc:	b138      	cbz	r0, 80154ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80154de:	8022      	strh	r2, [r4, #0]
 80154e0:	8063      	strh	r3, [r4, #2]
 80154e2:	f8a4 e004 	strh.w	lr, [r4, #4]
 80154e6:	f8a4 c006 	strh.w	ip, [r4, #6]
 80154ea:	69ad      	ldr	r5, [r5, #24]
 80154ec:	e7e5      	b.n	80154ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80154ee:	f9b4 0000 	ldrsh.w	r0, [r4]
 80154f2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80154f6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80154fa:	4290      	cmp	r0, r2
 80154fc:	4607      	mov	r7, r0
 80154fe:	bfa8      	it	ge
 8015500:	4617      	movge	r7, r2
 8015502:	4472      	add	r2, lr
 8015504:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8015508:	8027      	strh	r7, [r4, #0]
 801550a:	4299      	cmp	r1, r3
 801550c:	460e      	mov	r6, r1
 801550e:	4440      	add	r0, r8
 8015510:	bfa8      	it	ge
 8015512:	461e      	movge	r6, r3
 8015514:	4471      	add	r1, lr
 8015516:	4463      	add	r3, ip
 8015518:	b200      	sxth	r0, r0
 801551a:	b212      	sxth	r2, r2
 801551c:	b209      	sxth	r1, r1
 801551e:	b21b      	sxth	r3, r3
 8015520:	4290      	cmp	r0, r2
 8015522:	bfac      	ite	ge
 8015524:	ebc7 0200 	rsbge	r2, r7, r0
 8015528:	ebc7 0202 	rsblt	r2, r7, r2
 801552c:	4299      	cmp	r1, r3
 801552e:	bfac      	ite	ge
 8015530:	ebc6 0301 	rsbge	r3, r6, r1
 8015534:	ebc6 0303 	rsblt	r3, r6, r3
 8015538:	8066      	strh	r6, [r4, #2]
 801553a:	80a2      	strh	r2, [r4, #4]
 801553c:	80e3      	strh	r3, [r4, #6]
 801553e:	e7d4      	b.n	80154ea <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8015540:	4620      	mov	r0, r4
 8015542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015546 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8015546:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801554a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 801554e:	b383      	cbz	r3, 80155b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8015550:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8015552:	b374      	cbz	r4, 80155b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8015554:	f9b1 5000 	ldrsh.w	r5, [r1]
 8015558:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 801555c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8015560:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8015564:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8015568:	b303      	cbz	r3, 80155ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801556a:	4668      	mov	r0, sp
 801556c:	1d21      	adds	r1, r4, #4
 801556e:	f8ad 5000 	strh.w	r5, [sp]
 8015572:	f8ad 6002 	strh.w	r6, [sp, #2]
 8015576:	f8ad 7004 	strh.w	r7, [sp, #4]
 801557a:	f8ad 8006 	strh.w	r8, [sp, #6]
 801557e:	f7ff ff43 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8015582:	4668      	mov	r0, sp
 8015584:	f7ff ff83 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 8015588:	b980      	cbnz	r0, 80155ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801558a:	f8bd 3000 	ldrh.w	r3, [sp]
 801558e:	88a2      	ldrh	r2, [r4, #4]
 8015590:	1a9b      	subs	r3, r3, r2
 8015592:	f8ad 3000 	strh.w	r3, [sp]
 8015596:	88e2      	ldrh	r2, [r4, #6]
 8015598:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801559c:	1a9b      	subs	r3, r3, r2
 801559e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80155a2:	6823      	ldr	r3, [r4, #0]
 80155a4:	4669      	mov	r1, sp
 80155a6:	689b      	ldr	r3, [r3, #8]
 80155a8:	4620      	mov	r0, r4
 80155aa:	4798      	blx	r3
 80155ac:	69a4      	ldr	r4, [r4, #24]
 80155ae:	2c00      	cmp	r4, #0
 80155b0:	d1d8      	bne.n	8015564 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80155b2:	b002      	add	sp, #8
 80155b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080155b8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80155b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80155ba:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80155be:	460d      	mov	r5, r1
 80155c0:	4616      	mov	r6, r2
 80155c2:	b323      	cbz	r3, 801560e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80155c4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80155c6:	b314      	cbz	r4, 801560e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80155c8:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80155cc:	b1eb      	cbz	r3, 801560a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80155ce:	6828      	ldr	r0, [r5, #0]
 80155d0:	6869      	ldr	r1, [r5, #4]
 80155d2:	466b      	mov	r3, sp
 80155d4:	c303      	stmia	r3!, {r0, r1}
 80155d6:	4668      	mov	r0, sp
 80155d8:	1d21      	adds	r1, r4, #4
 80155da:	f7ff ff15 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 80155de:	4668      	mov	r0, sp
 80155e0:	f7ff ff55 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 80155e4:	b988      	cbnz	r0, 801560a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80155e6:	f8bd 3000 	ldrh.w	r3, [sp]
 80155ea:	88a2      	ldrh	r2, [r4, #4]
 80155ec:	1a9b      	subs	r3, r3, r2
 80155ee:	f8ad 3000 	strh.w	r3, [sp]
 80155f2:	88e2      	ldrh	r2, [r4, #6]
 80155f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80155f8:	1a9b      	subs	r3, r3, r2
 80155fa:	f8ad 3002 	strh.w	r3, [sp, #2]
 80155fe:	6823      	ldr	r3, [r4, #0]
 8015600:	4632      	mov	r2, r6
 8015602:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8015604:	4669      	mov	r1, sp
 8015606:	4620      	mov	r0, r4
 8015608:	4798      	blx	r3
 801560a:	69a4      	ldr	r4, [r4, #24]
 801560c:	e7db      	b.n	80155c6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 801560e:	b002      	add	sp, #8
 8015610:	bd70      	pop	{r4, r5, r6, pc}

08015612 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8015612:	b513      	push	{r0, r1, r4, lr}
 8015614:	6803      	ldr	r3, [r0, #0]
 8015616:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 801561a:	2300      	movs	r3, #0
 801561c:	e9cd 3300 	strd	r3, r3, [sp]
 8015620:	466b      	mov	r3, sp
 8015622:	47a0      	blx	r4
 8015624:	b002      	add	sp, #8
 8015626:	bd10      	pop	{r4, pc}

08015628 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8015628:	2301      	movs	r3, #1
 801562a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 801562e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8015632:	4770      	bx	lr

08015634 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8015634:	2301      	movs	r3, #1
 8015636:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 801563a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 801563e:	4770      	bx	lr

08015640 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8015640:	6843      	ldr	r3, [r0, #4]
 8015642:	2201      	movs	r2, #1
 8015644:	725a      	strb	r2, [r3, #9]
 8015646:	6840      	ldr	r0, [r0, #4]
 8015648:	6803      	ldr	r3, [r0, #0]
 801564a:	691b      	ldr	r3, [r3, #16]
 801564c:	4718      	bx	r3

0801564e <_ZN8touchgfx3HAL8flushDMAEv>:
 801564e:	6840      	ldr	r0, [r0, #4]
 8015650:	6803      	ldr	r3, [r0, #0]
 8015652:	689b      	ldr	r3, [r3, #8]
 8015654:	4718      	bx	r3

08015656 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8015656:	b530      	push	{r4, r5, lr}
 8015658:	b08b      	sub	sp, #44	@ 0x2c
 801565a:	6804      	ldr	r4, [r0, #0]
 801565c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8015660:	9509      	str	r5, [sp, #36]	@ 0x24
 8015662:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8015666:	9508      	str	r5, [sp, #32]
 8015668:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 801566c:	9507      	str	r5, [sp, #28]
 801566e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8015672:	9506      	str	r5, [sp, #24]
 8015674:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8015678:	9505      	str	r5, [sp, #20]
 801567a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 801567e:	9504      	str	r5, [sp, #16]
 8015680:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8015684:	9503      	str	r5, [sp, #12]
 8015686:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 801568a:	9502      	str	r5, [sp, #8]
 801568c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8015690:	e9cd 3500 	strd	r3, r5, [sp]
 8015694:	4613      	mov	r3, r2
 8015696:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 8015698:	2200      	movs	r2, #0
 801569a:	47a0      	blx	r4
 801569c:	b00b      	add	sp, #44	@ 0x2c
 801569e:	bd30      	pop	{r4, r5, pc}

080156a0 <_ZN8touchgfx3HAL10beginFrameEv>:
 80156a0:	4b04      	ldr	r3, [pc, #16]	@ (80156b4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80156a2:	781b      	ldrb	r3, [r3, #0]
 80156a4:	b123      	cbz	r3, 80156b0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80156a6:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 80156aa:	f080 0001 	eor.w	r0, r0, #1
 80156ae:	4770      	bx	lr
 80156b0:	2001      	movs	r0, #1
 80156b2:	4770      	bx	lr
 80156b4:	200138e2 	.word	0x200138e2

080156b8 <_ZN8touchgfx3HAL8endFrameEv>:
 80156b8:	b510      	push	{r4, lr}
 80156ba:	4604      	mov	r4, r0
 80156bc:	6840      	ldr	r0, [r0, #4]
 80156be:	6803      	ldr	r3, [r0, #0]
 80156c0:	689b      	ldr	r3, [r3, #8]
 80156c2:	4798      	blx	r3
 80156c4:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 80156c8:	b113      	cbz	r3, 80156d0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80156ca:	2301      	movs	r3, #1
 80156cc:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 80156d0:	bd10      	pop	{r4, pc}

080156d2 <_ZN8touchgfx3HAL10initializeEv>:
 80156d2:	b510      	push	{r4, lr}
 80156d4:	4604      	mov	r4, r0
 80156d6:	f7eb fd3d 	bl	8001154 <_ZN8touchgfx10OSWrappers10initializeEv>
 80156da:	f7eb fc45 	bl	8000f68 <_ZN8touchgfx4GPIO4initEv>
 80156de:	6860      	ldr	r0, [r4, #4]
 80156e0:	6803      	ldr	r3, [r0, #0]
 80156e2:	68db      	ldr	r3, [r3, #12]
 80156e4:	4798      	blx	r3
 80156e6:	68e0      	ldr	r0, [r4, #12]
 80156e8:	6803      	ldr	r3, [r0, #0]
 80156ea:	689b      	ldr	r3, [r3, #8]
 80156ec:	4798      	blx	r3
 80156ee:	6823      	ldr	r3, [r4, #0]
 80156f0:	4620      	mov	r0, r4
 80156f2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80156f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80156f8:	4718      	bx	r3
	...

080156fc <_ZN8touchgfx3HAL4tickEv>:
 80156fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80156fe:	6803      	ldr	r3, [r0, #0]
 8015700:	4d62      	ldr	r5, [pc, #392]	@ (801588c <_ZN8touchgfx3HAL4tickEv+0x190>)
 8015702:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8015706:	4604      	mov	r4, r0
 8015708:	4798      	blx	r3
 801570a:	2800      	cmp	r0, #0
 801570c:	f000 809e 	beq.w	801584c <_ZN8touchgfx3HAL4tickEv+0x150>
 8015710:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 8015714:	2b02      	cmp	r3, #2
 8015716:	d002      	beq.n	801571e <_ZN8touchgfx3HAL4tickEv+0x22>
 8015718:	2001      	movs	r0, #1
 801571a:	f7eb fba3 	bl	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801571e:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8015722:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8015726:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 801572a:	2600      	movs	r6, #0
 801572c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8015730:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8015734:	b133      	cbz	r3, 8015744 <_ZN8touchgfx3HAL4tickEv+0x48>
 8015736:	6823      	ldr	r3, [r4, #0]
 8015738:	4620      	mov	r0, r4
 801573a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 801573e:	4798      	blx	r3
 8015740:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8015744:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8015748:	6862      	ldr	r2, [r4, #4]
 801574a:	f083 0301 	eor.w	r3, r3, #1
 801574e:	7253      	strb	r3, [r2, #9]
 8015750:	2601      	movs	r6, #1
 8015752:	702e      	strb	r6, [r5, #0]
 8015754:	f005 fe56 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
 8015758:	6803      	ldr	r3, [r0, #0]
 801575a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801575c:	4798      	blx	r3
 801575e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8015762:	b90b      	cbnz	r3, 8015768 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8015764:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8015768:	f005 fe4c 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
 801576c:	6803      	ldr	r3, [r0, #0]
 801576e:	695b      	ldr	r3, [r3, #20]
 8015770:	4798      	blx	r3
 8015772:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8015774:	6803      	ldr	r3, [r0, #0]
 8015776:	691b      	ldr	r3, [r3, #16]
 8015778:	4798      	blx	r3
 801577a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 801577e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8015782:	3b01      	subs	r3, #1
 8015784:	b2db      	uxtb	r3, r3
 8015786:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 801578a:	b10a      	cbz	r2, 8015790 <_ZN8touchgfx3HAL4tickEv+0x94>
 801578c:	2b00      	cmp	r3, #0
 801578e:	d1eb      	bne.n	8015768 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8015790:	4a3f      	ldr	r2, [pc, #252]	@ (8015890 <_ZN8touchgfx3HAL4tickEv+0x194>)
 8015792:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8015796:	7813      	ldrb	r3, [r2, #0]
 8015798:	3301      	adds	r3, #1
 801579a:	b25b      	sxtb	r3, r3
 801579c:	4299      	cmp	r1, r3
 801579e:	7013      	strb	r3, [r2, #0]
 80157a0:	dc10      	bgt.n	80157c4 <_ZN8touchgfx3HAL4tickEv+0xc8>
 80157a2:	68e0      	ldr	r0, [r4, #12]
 80157a4:	2300      	movs	r3, #0
 80157a6:	7013      	strb	r3, [r2, #0]
 80157a8:	6803      	ldr	r3, [r0, #0]
 80157aa:	aa03      	add	r2, sp, #12
 80157ac:	68db      	ldr	r3, [r3, #12]
 80157ae:	a902      	add	r1, sp, #8
 80157b0:	4798      	blx	r3
 80157b2:	6823      	ldr	r3, [r4, #0]
 80157b4:	2800      	cmp	r0, #0
 80157b6:	d059      	beq.n	801586c <_ZN8touchgfx3HAL4tickEv+0x170>
 80157b8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 80157bc:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80157c0:	4620      	mov	r0, r4
 80157c2:	4798      	blx	r3
 80157c4:	6960      	ldr	r0, [r4, #20]
 80157c6:	2300      	movs	r3, #0
 80157c8:	f88d 3007 	strb.w	r3, [sp, #7]
 80157cc:	b158      	cbz	r0, 80157e6 <_ZN8touchgfx3HAL4tickEv+0xea>
 80157ce:	6803      	ldr	r3, [r0, #0]
 80157d0:	f10d 0107 	add.w	r1, sp, #7
 80157d4:	68db      	ldr	r3, [r3, #12]
 80157d6:	4798      	blx	r3
 80157d8:	b128      	cbz	r0, 80157e6 <_ZN8touchgfx3HAL4tickEv+0xea>
 80157da:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 80157dc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80157e0:	6803      	ldr	r3, [r0, #0]
 80157e2:	68db      	ldr	r3, [r3, #12]
 80157e4:	4798      	blx	r3
 80157e6:	f104 001c 	add.w	r0, r4, #28
 80157ea:	f017 fa9b 	bl	802cd24 <_ZN8touchgfx8Gestures4tickEv>
 80157ee:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 80157f2:	b30b      	cbz	r3, 8015838 <_ZN8touchgfx3HAL4tickEv+0x13c>
 80157f4:	6920      	ldr	r0, [r4, #16]
 80157f6:	6803      	ldr	r3, [r0, #0]
 80157f8:	691b      	ldr	r3, [r3, #16]
 80157fa:	4798      	blx	r3
 80157fc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80157fe:	4606      	mov	r6, r0
 8015800:	b903      	cbnz	r3, 8015804 <_ZN8touchgfx3HAL4tickEv+0x108>
 8015802:	6760      	str	r0, [r4, #116]	@ 0x74
 8015804:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8015806:	4a23      	ldr	r2, [pc, #140]	@ (8015894 <_ZN8touchgfx3HAL4tickEv+0x198>)
 8015808:	1af3      	subs	r3, r6, r3
 801580a:	4293      	cmp	r3, r2
 801580c:	d914      	bls.n	8015838 <_ZN8touchgfx3HAL4tickEv+0x13c>
 801580e:	6920      	ldr	r0, [r4, #16]
 8015810:	6803      	ldr	r3, [r0, #0]
 8015812:	699b      	ldr	r3, [r3, #24]
 8015814:	4798      	blx	r3
 8015816:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8015818:	2264      	movs	r2, #100	@ 0x64
 801581a:	1af3      	subs	r3, r6, r3
 801581c:	fbb3 f3f2 	udiv	r3, r3, r2
 8015820:	fbb0 f0f3 	udiv	r0, r0, r3
 8015824:	2800      	cmp	r0, #0
 8015826:	dc26      	bgt.n	8015876 <_ZN8touchgfx3HAL4tickEv+0x17a>
 8015828:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 801582c:	6920      	ldr	r0, [r4, #16]
 801582e:	6803      	ldr	r3, [r0, #0]
 8015830:	2100      	movs	r1, #0
 8015832:	69db      	ldr	r3, [r3, #28]
 8015834:	4798      	blx	r3
 8015836:	6766      	str	r6, [r4, #116]	@ 0x74
 8015838:	6823      	ldr	r3, [r4, #0]
 801583a:	4620      	mov	r0, r4
 801583c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8015840:	4798      	blx	r3
 8015842:	f005 fddf 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
 8015846:	6803      	ldr	r3, [r0, #0]
 8015848:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801584a:	4798      	blx	r3
 801584c:	6823      	ldr	r3, [r4, #0]
 801584e:	4620      	mov	r0, r4
 8015850:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8015854:	4798      	blx	r3
 8015856:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 801585a:	2b02      	cmp	r3, #2
 801585c:	d002      	beq.n	8015864 <_ZN8touchgfx3HAL4tickEv+0x168>
 801585e:	2001      	movs	r0, #1
 8015860:	f7eb fb2a 	bl	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8015864:	2300      	movs	r3, #0
 8015866:	702b      	strb	r3, [r5, #0]
 8015868:	b004      	add	sp, #16
 801586a:	bd70      	pop	{r4, r5, r6, pc}
 801586c:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 8015870:	4620      	mov	r0, r4
 8015872:	4798      	blx	r3
 8015874:	e7a6      	b.n	80157c4 <_ZN8touchgfx3HAL4tickEv+0xc8>
 8015876:	2863      	cmp	r0, #99	@ 0x63
 8015878:	bfcb      	itete	gt
 801587a:	2300      	movgt	r3, #0
 801587c:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8015880:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8015884:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8015888:	e7d0      	b.n	801582c <_ZN8touchgfx3HAL4tickEv+0x130>
 801588a:	bf00      	nop
 801588c:	200138e8 	.word	0x200138e8
 8015890:	200138e9 	.word	0x200138e9
 8015894:	05f5e100 	.word	0x05f5e100

08015898 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8015898:	b510      	push	{r4, lr}
 801589a:	4604      	mov	r4, r0
 801589c:	f7eb fc8a 	bl	80011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80158a0:	6863      	ldr	r3, [r4, #4]
 80158a2:	2200      	movs	r2, #0
 80158a4:	729a      	strb	r2, [r3, #10]
 80158a6:	bd10      	pop	{r4, pc}

080158a8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80158a8:	65c1      	str	r1, [r0, #92]	@ 0x5c
 80158aa:	301c      	adds	r0, #28
 80158ac:	f017 ba38 	b.w	802cd20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080158b0 <_ZN8touchgfx3HAL5touchEll>:
 80158b0:	b530      	push	{r4, r5, lr}
 80158b2:	b087      	sub	sp, #28
 80158b4:	4604      	mov	r4, r0
 80158b6:	a804      	add	r0, sp, #16
 80158b8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80158bc:	f005 fb6e 	bl	801af9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80158c0:	9b04      	ldr	r3, [sp, #16]
 80158c2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80158c6:	a906      	add	r1, sp, #24
 80158c8:	9b05      	ldr	r3, [sp, #20]
 80158ca:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80158ce:	a803      	add	r0, sp, #12
 80158d0:	f005 fbb6 	bl	801b040 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80158d4:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 80158d8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80158dc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80158e0:	f104 001c 	add.w	r0, r4, #28
 80158e4:	b189      	cbz	r1, 801590a <_ZN8touchgfx3HAL5touchEll+0x5a>
 80158e6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 80158ea:	9300      	str	r3, [sp, #0]
 80158ec:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 80158f0:	4613      	mov	r3, r2
 80158f2:	462a      	mov	r2, r5
 80158f4:	f017 fa24 	bl	802cd40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80158f8:	b128      	cbz	r0, 8015906 <_ZN8touchgfx3HAL5touchEll+0x56>
 80158fa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80158fe:	6623      	str	r3, [r4, #96]	@ 0x60
 8015900:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8015904:	6663      	str	r3, [r4, #100]	@ 0x64
 8015906:	b007      	add	sp, #28
 8015908:	bd30      	pop	{r4, r5, pc}
 801590a:	f017 fa59 	bl	802cdc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801590e:	2301      	movs	r3, #1
 8015910:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8015914:	e7f1      	b.n	80158fa <_ZN8touchgfx3HAL5touchEll+0x4a>

08015916 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8015916:	b510      	push	{r4, lr}
 8015918:	2b00      	cmp	r3, #0
 801591a:	d046      	beq.n	80159aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801591c:	ea81 0002 	eor.w	r0, r1, r2
 8015920:	07c4      	lsls	r4, r0, #31
 8015922:	d508      	bpl.n	8015936 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8015924:	440b      	add	r3, r1
 8015926:	3a01      	subs	r2, #1
 8015928:	428b      	cmp	r3, r1
 801592a:	d93e      	bls.n	80159aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801592c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8015930:	f801 0b01 	strb.w	r0, [r1], #1
 8015934:	e7f8      	b.n	8015928 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8015936:	07d0      	lsls	r0, r2, #31
 8015938:	bf42      	ittt	mi
 801593a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801593e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8015942:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8015946:	2b01      	cmp	r3, #1
 8015948:	d911      	bls.n	801596e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801594a:	ea81 0402 	eor.w	r4, r1, r2
 801594e:	07a4      	lsls	r4, r4, #30
 8015950:	4610      	mov	r0, r2
 8015952:	d022      	beq.n	801599a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8015954:	f023 0401 	bic.w	r4, r3, #1
 8015958:	440c      	add	r4, r1
 801595a:	428c      	cmp	r4, r1
 801595c:	4602      	mov	r2, r0
 801595e:	d904      	bls.n	801596a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8015960:	8812      	ldrh	r2, [r2, #0]
 8015962:	f821 2b02 	strh.w	r2, [r1], #2
 8015966:	3002      	adds	r0, #2
 8015968:	e7f7      	b.n	801595a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801596a:	f003 0301 	and.w	r3, r3, #1
 801596e:	f023 0003 	bic.w	r0, r3, #3
 8015972:	4408      	add	r0, r1
 8015974:	4288      	cmp	r0, r1
 8015976:	4614      	mov	r4, r2
 8015978:	d904      	bls.n	8015984 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801597a:	6824      	ldr	r4, [r4, #0]
 801597c:	f841 4b04 	str.w	r4, [r1], #4
 8015980:	3204      	adds	r2, #4
 8015982:	e7f7      	b.n	8015974 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8015984:	f003 0303 	and.w	r3, r3, #3
 8015988:	440b      	add	r3, r1
 801598a:	3a01      	subs	r2, #1
 801598c:	428b      	cmp	r3, r1
 801598e:	d90c      	bls.n	80159aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8015990:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8015994:	f801 0b01 	strb.w	r0, [r1], #1
 8015998:	e7f8      	b.n	801598c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801599a:	0790      	lsls	r0, r2, #30
 801599c:	d0e7      	beq.n	801596e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801599e:	f832 0b02 	ldrh.w	r0, [r2], #2
 80159a2:	f821 0b02 	strh.w	r0, [r1], #2
 80159a6:	3b02      	subs	r3, #2
 80159a8:	e7e1      	b.n	801596e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80159aa:	2001      	movs	r0, #1
 80159ac:	bd10      	pop	{r4, pc}

080159ae <_ZN8touchgfx3HAL7noTouchEv>:
 80159ae:	b510      	push	{r4, lr}
 80159b0:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 80159b4:	4604      	mov	r4, r0
 80159b6:	b153      	cbz	r3, 80159ce <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80159b8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 80159bc:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 80159c0:	2101      	movs	r1, #1
 80159c2:	301c      	adds	r0, #28
 80159c4:	f017 f9fc 	bl	802cdc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80159c8:	2300      	movs	r3, #0
 80159ca:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 80159ce:	bd10      	pop	{r4, pc}

080159d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80159d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80159d4:	b085      	sub	sp, #20
 80159d6:	ad04      	add	r5, sp, #16
 80159d8:	4604      	mov	r4, r0
 80159da:	2000      	movs	r0, #0
 80159dc:	f845 0d04 	str.w	r0, [r5, #-4]!
 80159e0:	69a0      	ldr	r0, [r4, #24]
 80159e2:	6806      	ldr	r6, [r0, #0]
 80159e4:	9501      	str	r5, [sp, #4]
 80159e6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 80159ea:	9500      	str	r5, [sp, #0]
 80159ec:	6835      	ldr	r5, [r6, #0]
 80159ee:	4699      	mov	r9, r3
 80159f0:	460f      	mov	r7, r1
 80159f2:	4690      	mov	r8, r2
 80159f4:	47a8      	blx	r5
 80159f6:	4d10      	ldr	r5, [pc, #64]	@ (8015a38 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80159f8:	4606      	mov	r6, r0
 80159fa:	f8a5 9000 	strh.w	r9, [r5]
 80159fe:	f7ee fa57 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8015a02:	6803      	ldr	r3, [r0, #0]
 8015a04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a06:	4798      	blx	r3
 8015a08:	b128      	cbz	r0, 8015a16 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8015a0a:	2801      	cmp	r0, #1
 8015a0c:	d00b      	beq.n	8015a26 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8015a0e:	4630      	mov	r0, r6
 8015a10:	b005      	add	sp, #20
 8015a12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015a16:	882b      	ldrh	r3, [r5, #0]
 8015a18:	fb08 7203 	mla	r2, r8, r3, r7
 8015a1c:	9b03      	ldr	r3, [sp, #12]
 8015a1e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8015a22:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8015a24:	e7f3      	b.n	8015a0e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8015a26:	882a      	ldrh	r2, [r5, #0]
 8015a28:	9b03      	ldr	r3, [sp, #12]
 8015a2a:	fb08 7202 	mla	r2, r8, r2, r7
 8015a2e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a32:	1a9a      	subs	r2, r3, r2
 8015a34:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8015a36:	e7ea      	b.n	8015a0e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8015a38:	200138de 	.word	0x200138de

08015a3c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 8015a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015a3e:	4b15      	ldr	r3, [pc, #84]	@ (8015a94 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 8015a40:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 8015a44:	881b      	ldrh	r3, [r3, #0]
 8015a46:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 8015a48:	fb93 f4f4 	sdiv	r4, r3, r4
 8015a4c:	460f      	mov	r7, r1
 8015a4e:	4606      	mov	r6, r0
 8015a50:	f7ee fa2e 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8015a54:	6803      	ldr	r3, [r0, #0]
 8015a56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a58:	4798      	blx	r3
 8015a5a:	2801      	cmp	r0, #1
 8015a5c:	d00b      	beq.n	8015a76 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 8015a5e:	d303      	bcc.n	8015a68 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 8015a60:	2802      	cmp	r0, #2
 8015a62:	d010      	beq.n	8015a86 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 8015a64:	63f5      	str	r5, [r6, #60]	@ 0x3c
 8015a66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015a68:	4b0b      	ldr	r3, [pc, #44]	@ (8015a98 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 8015a6a:	8819      	ldrh	r1, [r3, #0]
 8015a6c:	437c      	muls	r4, r7
 8015a6e:	434c      	muls	r4, r1
 8015a70:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8015a74:	e7f6      	b.n	8015a64 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8015a76:	4b08      	ldr	r3, [pc, #32]	@ (8015a98 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 8015a78:	8819      	ldrh	r1, [r3, #0]
 8015a7a:	437c      	muls	r4, r7
 8015a7c:	434c      	muls	r4, r1
 8015a7e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015a82:	1b2d      	subs	r5, r5, r4
 8015a84:	e7ee      	b.n	8015a64 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8015a86:	4b04      	ldr	r3, [pc, #16]	@ (8015a98 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 8015a88:	8819      	ldrh	r1, [r3, #0]
 8015a8a:	437c      	muls	r4, r7
 8015a8c:	434c      	muls	r4, r1
 8015a8e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 8015a92:	e7e7      	b.n	8015a64 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8015a94:	200138e0 	.word	0x200138e0
 8015a98:	200138de 	.word	0x200138de

08015a9c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8015a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015a9e:	b08b      	sub	sp, #44	@ 0x2c
 8015aa0:	4617      	mov	r7, r2
 8015aa2:	4604      	mov	r4, r0
 8015aa4:	460e      	mov	r6, r1
 8015aa6:	461d      	mov	r5, r3
 8015aa8:	f7ee fa02 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8015aac:	6803      	ldr	r3, [r0, #0]
 8015aae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015ab0:	4798      	blx	r3
 8015ab2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8015ab6:	9007      	str	r0, [sp, #28]
 8015ab8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8015abc:	4b0d      	ldr	r3, [pc, #52]	@ (8015af4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8015abe:	6822      	ldr	r2, [r4, #0]
 8015ac0:	881b      	ldrh	r3, [r3, #0]
 8015ac2:	9306      	str	r3, [sp, #24]
 8015ac4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8015ac8:	9305      	str	r3, [sp, #20]
 8015aca:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8015ace:	9304      	str	r3, [sp, #16]
 8015ad0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8015ad4:	9303      	str	r3, [sp, #12]
 8015ad6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8015ada:	9302      	str	r3, [sp, #8]
 8015adc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8015ae0:	e9cd 5300 	strd	r5, r3, [sp]
 8015ae4:	4631      	mov	r1, r6
 8015ae6:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 8015ae8:	463b      	mov	r3, r7
 8015aea:	2200      	movs	r2, #0
 8015aec:	4620      	mov	r0, r4
 8015aee:	47a8      	blx	r5
 8015af0:	b00b      	add	sp, #44	@ 0x2c
 8015af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015af4:	200138de 	.word	0x200138de

08015af8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8015af8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015afc:	4698      	mov	r8, r3
 8015afe:	6803      	ldr	r3, [r0, #0]
 8015b00:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 8015b02:	4b15      	ldr	r3, [pc, #84]	@ (8015b58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8015b04:	b08b      	sub	sp, #44	@ 0x2c
 8015b06:	4617      	mov	r7, r2
 8015b08:	f8b3 9000 	ldrh.w	r9, [r3]
 8015b0c:	460e      	mov	r6, r1
 8015b0e:	4604      	mov	r4, r0
 8015b10:	f7ee f9ce 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8015b14:	6803      	ldr	r3, [r0, #0]
 8015b16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b18:	4798      	blx	r3
 8015b1a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8015b1e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8015b22:	2302      	movs	r3, #2
 8015b24:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8015b28:	2301      	movs	r3, #1
 8015b2a:	9305      	str	r3, [sp, #20]
 8015b2c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8015b30:	9304      	str	r3, [sp, #16]
 8015b32:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8015b36:	9303      	str	r3, [sp, #12]
 8015b38:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8015b3c:	9302      	str	r3, [sp, #8]
 8015b3e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8015b42:	2200      	movs	r2, #0
 8015b44:	e9cd 8300 	strd	r8, r3, [sp]
 8015b48:	4631      	mov	r1, r6
 8015b4a:	463b      	mov	r3, r7
 8015b4c:	4620      	mov	r0, r4
 8015b4e:	47a8      	blx	r5
 8015b50:	b00b      	add	sp, #44	@ 0x2c
 8015b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015b56:	bf00      	nop
 8015b58:	200138de 	.word	0x200138de

08015b5c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8015b5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015b60:	4698      	mov	r8, r3
 8015b62:	6803      	ldr	r3, [r0, #0]
 8015b64:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 8015b66:	4b11      	ldr	r3, [pc, #68]	@ (8015bac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8015b68:	b087      	sub	sp, #28
 8015b6a:	f8b3 9000 	ldrh.w	r9, [r3]
 8015b6e:	460e      	mov	r6, r1
 8015b70:	4617      	mov	r7, r2
 8015b72:	4604      	mov	r4, r0
 8015b74:	f7ee f99c 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8015b78:	6803      	ldr	r3, [r0, #0]
 8015b7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b7c:	4798      	blx	r3
 8015b7e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8015b82:	f8cd 900c 	str.w	r9, [sp, #12]
 8015b86:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8015b8a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8015b8e:	9302      	str	r3, [sp, #8]
 8015b90:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8015b94:	9301      	str	r3, [sp, #4]
 8015b96:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8015b9a:	9300      	str	r3, [sp, #0]
 8015b9c:	463a      	mov	r2, r7
 8015b9e:	4643      	mov	r3, r8
 8015ba0:	4631      	mov	r1, r6
 8015ba2:	4620      	mov	r0, r4
 8015ba4:	47a8      	blx	r5
 8015ba6:	b007      	add	sp, #28
 8015ba8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015bac:	200138de 	.word	0x200138de

08015bb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8015bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bb4:	4604      	mov	r4, r0
 8015bb6:	b08f      	sub	sp, #60	@ 0x3c
 8015bb8:	4610      	mov	r0, r2
 8015bba:	460d      	mov	r5, r1
 8015bbc:	4691      	mov	r9, r2
 8015bbe:	461e      	mov	r6, r3
 8015bc0:	f008 fd9e 	bl	801e700 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8015bc4:	2800      	cmp	r0, #0
 8015bc6:	f000 809d 	beq.w	8015d04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8015bca:	6823      	ldr	r3, [r4, #0]
 8015bcc:	f8df b198 	ldr.w	fp, [pc, #408]	@ 8015d68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8015bd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015bd2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 8015d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8015bd6:	4f61      	ldr	r7, [pc, #388]	@ (8015d5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8015bd8:	4620      	mov	r0, r4
 8015bda:	4798      	blx	r3
 8015bdc:	6823      	ldr	r3, [r4, #0]
 8015bde:	4620      	mov	r0, r4
 8015be0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015be2:	4798      	blx	r3
 8015be4:	f8bb 3000 	ldrh.w	r3, [fp]
 8015be8:	9301      	str	r3, [sp, #4]
 8015bea:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8015bee:	f8ba 3000 	ldrh.w	r3, [sl]
 8015bf2:	9302      	str	r3, [sp, #8]
 8015bf4:	883b      	ldrh	r3, [r7, #0]
 8015bf6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8015bfa:	9303      	str	r3, [sp, #12]
 8015bfc:	4b58      	ldr	r3, [pc, #352]	@ (8015d60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8015bfe:	9305      	str	r3, [sp, #20]
 8015c00:	881a      	ldrh	r2, [r3, #0]
 8015c02:	9204      	str	r2, [sp, #16]
 8015c04:	4640      	mov	r0, r8
 8015c06:	f008 fe0f 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015c0a:	8038      	strh	r0, [r7, #0]
 8015c0c:	4640      	mov	r0, r8
 8015c0e:	f008 fe3f 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015c12:	9b05      	ldr	r3, [sp, #20]
 8015c14:	b280      	uxth	r0, r0
 8015c16:	8018      	strh	r0, [r3, #0]
 8015c18:	4b52      	ldr	r3, [pc, #328]	@ (8015d64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8015c1a:	781b      	ldrb	r3, [r3, #0]
 8015c1c:	2b00      	cmp	r3, #0
 8015c1e:	d174      	bne.n	8015d0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8015c20:	883b      	ldrh	r3, [r7, #0]
 8015c22:	f8ab 3000 	strh.w	r3, [fp]
 8015c26:	f8aa 0000 	strh.w	r0, [sl]
 8015c2a:	4648      	mov	r0, r9
 8015c2c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8015c30:	f008 fd66 	bl	801e700 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8015c34:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8015c38:	2200      	movs	r2, #0
 8015c3a:	4611      	mov	r1, r2
 8015c3c:	4628      	mov	r0, r5
 8015c3e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8015c42:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8015c46:	f7ed f8a8 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8015c4a:	2301      	movs	r3, #1
 8015c4c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8015c50:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8015c54:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8015c58:	2b00      	cmp	r3, #0
 8015c5a:	dd5c      	ble.n	8015d16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8015c5c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8015c60:	2b00      	cmp	r3, #0
 8015c62:	dd58      	ble.n	8015d16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8015c64:	462a      	mov	r2, r5
 8015c66:	ab0a      	add	r3, sp, #40	@ 0x28
 8015c68:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8015c6c:	6851      	ldr	r1, [r2, #4]
 8015c6e:	c303      	stmia	r3!, {r0, r1}
 8015c70:	4631      	mov	r1, r6
 8015c72:	a80a      	add	r0, sp, #40	@ 0x28
 8015c74:	f7ff fbc8 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8015c78:	4b38      	ldr	r3, [pc, #224]	@ (8015d5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8015c7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015c7e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8015c82:	2100      	movs	r1, #0
 8015c84:	aa0a      	add	r2, sp, #40	@ 0x28
 8015c86:	4b36      	ldr	r3, [pc, #216]	@ (8015d60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8015c88:	910c      	str	r1, [sp, #48]	@ 0x30
 8015c8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015c8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015c92:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8015c96:	ab08      	add	r3, sp, #32
 8015c98:	e883 0003 	stmia.w	r3, {r0, r1}
 8015c9c:	4618      	mov	r0, r3
 8015c9e:	a90c      	add	r1, sp, #48	@ 0x30
 8015ca0:	f7ff fbb2 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8015ca4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8015ca6:	2b00      	cmp	r3, #0
 8015ca8:	d13c      	bne.n	8015d24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8015caa:	2000      	movs	r0, #0
 8015cac:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8015cb0:	2600      	movs	r6, #0
 8015cb2:	682a      	ldr	r2, [r5, #0]
 8015cb4:	696b      	ldr	r3, [r5, #20]
 8015cb6:	616e      	str	r6, [r5, #20]
 8015cb8:	9305      	str	r3, [sp, #20]
 8015cba:	6892      	ldr	r2, [r2, #8]
 8015cbc:	a908      	add	r1, sp, #32
 8015cbe:	4628      	mov	r0, r5
 8015cc0:	4790      	blx	r2
 8015cc2:	9b05      	ldr	r3, [sp, #20]
 8015cc4:	616b      	str	r3, [r5, #20]
 8015cc6:	4652      	mov	r2, sl
 8015cc8:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8015ccc:	4649      	mov	r1, r9
 8015cce:	4628      	mov	r0, r5
 8015cd0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8015cd4:	f7ed f861 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 8015cd8:	4b23      	ldr	r3, [pc, #140]	@ (8015d68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8015cda:	9a01      	ldr	r2, [sp, #4]
 8015cdc:	801a      	strh	r2, [r3, #0]
 8015cde:	4b23      	ldr	r3, [pc, #140]	@ (8015d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8015ce0:	9a02      	ldr	r2, [sp, #8]
 8015ce2:	801a      	strh	r2, [r3, #0]
 8015ce4:	4b1d      	ldr	r3, [pc, #116]	@ (8015d5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8015ce6:	9a03      	ldr	r2, [sp, #12]
 8015ce8:	801a      	strh	r2, [r3, #0]
 8015cea:	4b1d      	ldr	r3, [pc, #116]	@ (8015d60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8015cec:	9a04      	ldr	r2, [sp, #16]
 8015cee:	801a      	strh	r2, [r3, #0]
 8015cf0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8015cf4:	6823      	ldr	r3, [r4, #0]
 8015cf6:	4620      	mov	r0, r4
 8015cf8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015cfa:	4798      	blx	r3
 8015cfc:	6823      	ldr	r3, [r4, #0]
 8015cfe:	4620      	mov	r0, r4
 8015d00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015d02:	4798      	blx	r3
 8015d04:	b00f      	add	sp, #60	@ 0x3c
 8015d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d0a:	883b      	ldrh	r3, [r7, #0]
 8015d0c:	f8ab 0000 	strh.w	r0, [fp]
 8015d10:	f8aa 3000 	strh.w	r3, [sl]
 8015d14:	e789      	b.n	8015c2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8015d16:	462a      	mov	r2, r5
 8015d18:	ab0a      	add	r3, sp, #40	@ 0x28
 8015d1a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8015d1e:	6851      	ldr	r1, [r2, #4]
 8015d20:	c303      	stmia	r3!, {r0, r1}
 8015d22:	e7a9      	b.n	8015c78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8015d24:	a807      	add	r0, sp, #28
 8015d26:	f008 fef5 	bl	801eb14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015d2a:	4606      	mov	r6, r0
 8015d2c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8015d2e:	6803      	ldr	r3, [r0, #0]
 8015d30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015d32:	4798      	blx	r3
 8015d34:	4286      	cmp	r6, r0
 8015d36:	d1b8      	bne.n	8015caa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8015d38:	f7ee f8ba 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8015d3c:	6803      	ldr	r3, [r0, #0]
 8015d3e:	4606      	mov	r6, r0
 8015d40:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015d42:	9305      	str	r3, [sp, #20]
 8015d44:	a807      	add	r0, sp, #28
 8015d46:	f008 fee5 	bl	801eb14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015d4a:	9b05      	ldr	r3, [sp, #20]
 8015d4c:	4601      	mov	r1, r0
 8015d4e:	4630      	mov	r0, r6
 8015d50:	4798      	blx	r3
 8015d52:	f080 0001 	eor.w	r0, r0, #1
 8015d56:	b2c0      	uxtb	r0, r0
 8015d58:	e7a8      	b.n	8015cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8015d5a:	bf00      	nop
 8015d5c:	200138d8 	.word	0x200138d8
 8015d60:	200138da 	.word	0x200138da
 8015d64:	200138dc 	.word	0x200138dc
 8015d68:	200138de 	.word	0x200138de
 8015d6c:	200138e0 	.word	0x200138e0

08015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8015d70:	b510      	push	{r4, lr}
 8015d72:	4b07      	ldr	r3, [pc, #28]	@ (8015d90 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8015d74:	781b      	ldrb	r3, [r3, #0]
 8015d76:	4604      	mov	r4, r0
 8015d78:	b13b      	cbz	r3, 8015d8a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8015d7a:	6803      	ldr	r3, [r0, #0]
 8015d7c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015d7e:	4798      	blx	r3
 8015d80:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8015d82:	4283      	cmp	r3, r0
 8015d84:	d101      	bne.n	8015d8a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8015d86:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8015d88:	bd10      	pop	{r4, pc}
 8015d8a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8015d8c:	e7fc      	b.n	8015d88 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8015d8e:	bf00      	nop
 8015d90:	200138e2 	.word	0x200138e2

08015d94 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8015d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015d98:	b08a      	sub	sp, #40	@ 0x28
 8015d9a:	461d      	mov	r5, r3
 8015d9c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8015da0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8015da4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8015da8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015dac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8015db0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015db4:	2400      	movs	r4, #0
 8015db6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8015dba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8015dbe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015dc2:	4690      	mov	r8, r2
 8015dc4:	4607      	mov	r7, r0
 8015dc6:	9404      	str	r4, [sp, #16]
 8015dc8:	f88d 4020 	strb.w	r4, [sp, #32]
 8015dcc:	f7ff ffd0 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015dd0:	fb06 8505 	mla	r5, r6, r5, r8
 8015dd4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015dd8:	6878      	ldr	r0, [r7, #4]
 8015dda:	9505      	str	r5, [sp, #20]
 8015ddc:	f8ad 601e 	strh.w	r6, [sp, #30]
 8015de0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8015de4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8015de8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8015dec:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8015df0:	6803      	ldr	r3, [r0, #0]
 8015df2:	a901      	add	r1, sp, #4
 8015df4:	685b      	ldr	r3, [r3, #4]
 8015df6:	4798      	blx	r3
 8015df8:	b00a      	add	sp, #40	@ 0x28
 8015dfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015dfe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8015dfe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015e02:	b08b      	sub	sp, #44	@ 0x2c
 8015e04:	2400      	movs	r4, #0
 8015e06:	461d      	mov	r5, r3
 8015e08:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8015e0c:	4688      	mov	r8, r1
 8015e0e:	4691      	mov	r9, r2
 8015e10:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8015e14:	9404      	str	r4, [sp, #16]
 8015e16:	4607      	mov	r7, r0
 8015e18:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8015e1c:	f7ff ffa8 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015e20:	fb06 9505 	mla	r5, r6, r5, r9
 8015e24:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8015e28:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015e2c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015e30:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8015e34:	6878      	ldr	r0, [r7, #4]
 8015e36:	9505      	str	r5, [sp, #20]
 8015e38:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015e3c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8015e40:	f8ad 601e 	strh.w	r6, [sp, #30]
 8015e44:	f8cd 8010 	str.w	r8, [sp, #16]
 8015e48:	f8ad 4020 	strh.w	r4, [sp, #32]
 8015e4c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8015e50:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8015e54:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8015e58:	6803      	ldr	r3, [r0, #0]
 8015e5a:	a901      	add	r1, sp, #4
 8015e5c:	685b      	ldr	r3, [r3, #4]
 8015e5e:	4798      	blx	r3
 8015e60:	b00b      	add	sp, #44	@ 0x2c
 8015e62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08015e68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8015e68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e6c:	b08a      	sub	sp, #40	@ 0x28
 8015e6e:	4698      	mov	r8, r3
 8015e70:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 8015e74:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8015e78:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 8015e7c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8015e80:	2300      	movs	r3, #0
 8015e82:	2d0b      	cmp	r5, #11
 8015e84:	4606      	mov	r6, r0
 8015e86:	9304      	str	r3, [sp, #16]
 8015e88:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8015e8c:	d138      	bne.n	8015f00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8015e8e:	2380      	movs	r3, #128	@ 0x80
 8015e90:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8015e94:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8015e98:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015e9c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8015ea0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015ea4:	f88d 0020 	strb.w	r0, [sp, #32]
 8015ea8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8015eac:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015eb0:	4630      	mov	r0, r6
 8015eb2:	9203      	str	r2, [sp, #12]
 8015eb4:	f7ff ff5c 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015eb8:	2c0b      	cmp	r4, #11
 8015eba:	bf98      	it	ls
 8015ebc:	4b1b      	ldrls	r3, [pc, #108]	@ (8015f2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8015ebe:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8015ec2:	bf98      	it	ls
 8015ec4:	5d19      	ldrbls	r1, [r3, r4]
 8015ec6:	f8ad 701e 	strh.w	r7, [sp, #30]
 8015eca:	bf88      	it	hi
 8015ecc:	2100      	movhi	r1, #0
 8015ece:	fb02 8307 	mla	r3, r2, r7, r8
 8015ed2:	10c9      	asrs	r1, r1, #3
 8015ed4:	fb01 0003 	mla	r0, r1, r3, r0
 8015ed8:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8015edc:	9005      	str	r0, [sp, #20]
 8015ede:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8015ee2:	6870      	ldr	r0, [r6, #4]
 8015ee4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8015ee8:	2300      	movs	r3, #0
 8015eea:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8015eee:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8015ef2:	6803      	ldr	r3, [r0, #0]
 8015ef4:	a901      	add	r1, sp, #4
 8015ef6:	685b      	ldr	r3, [r3, #4]
 8015ef8:	4798      	blx	r3
 8015efa:	b00a      	add	sp, #40	@ 0x28
 8015efc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f00:	2d02      	cmp	r5, #2
 8015f02:	d109      	bne.n	8015f18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8015f04:	28ff      	cmp	r0, #255	@ 0xff
 8015f06:	d105      	bne.n	8015f14 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8015f08:	f1bc 0f00 	cmp.w	ip, #0
 8015f0c:	bf14      	ite	ne
 8015f0e:	2340      	movne	r3, #64	@ 0x40
 8015f10:	2320      	moveq	r3, #32
 8015f12:	e7bd      	b.n	8015e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8015f14:	2340      	movs	r3, #64	@ 0x40
 8015f16:	e7bb      	b.n	8015e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8015f18:	28ff      	cmp	r0, #255	@ 0xff
 8015f1a:	d105      	bne.n	8015f28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8015f1c:	f1bc 0f00 	cmp.w	ip, #0
 8015f20:	bf14      	ite	ne
 8015f22:	2304      	movne	r3, #4
 8015f24:	2301      	moveq	r3, #1
 8015f26:	e7b3      	b.n	8015e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8015f28:	2304      	movs	r3, #4
 8015f2a:	e7b1      	b.n	8015e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8015f2c:	0803318c 	.word	0x0803318c

08015f30 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8015f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f34:	b08b      	sub	sp, #44	@ 0x2c
 8015f36:	461d      	mov	r5, r3
 8015f38:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8015f3c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8015f40:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8015f44:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8015f48:	bf14      	ite	ne
 8015f4a:	2308      	movne	r3, #8
 8015f4c:	2302      	moveq	r3, #2
 8015f4e:	2400      	movs	r4, #0
 8015f50:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8015f54:	4688      	mov	r8, r1
 8015f56:	4693      	mov	fp, r2
 8015f58:	9404      	str	r4, [sp, #16]
 8015f5a:	4607      	mov	r7, r0
 8015f5c:	f7ff ff08 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8015f60:	2e0b      	cmp	r6, #11
 8015f62:	bf98      	it	ls
 8015f64:	4b15      	ldrls	r3, [pc, #84]	@ (8015fbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8015f66:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015f6a:	bf98      	it	ls
 8015f6c:	5d9c      	ldrbls	r4, [r3, r6]
 8015f6e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8015f72:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015f76:	fb05 b50a 	mla	r5, r5, sl, fp
 8015f7a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8015f7e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015f82:	10e4      	asrs	r4, r4, #3
 8015f84:	fb04 0405 	mla	r4, r4, r5, r0
 8015f88:	2300      	movs	r3, #0
 8015f8a:	6878      	ldr	r0, [r7, #4]
 8015f8c:	9405      	str	r4, [sp, #20]
 8015f8e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015f92:	f8ad a01e 	strh.w	sl, [sp, #30]
 8015f96:	f8cd 8010 	str.w	r8, [sp, #16]
 8015f9a:	f88d 9020 	strb.w	r9, [sp, #32]
 8015f9e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8015fa2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8015fa6:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 8015faa:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 8015fae:	6803      	ldr	r3, [r0, #0]
 8015fb0:	a901      	add	r1, sp, #4
 8015fb2:	685b      	ldr	r3, [r3, #4]
 8015fb4:	4798      	blx	r3
 8015fb6:	b00b      	add	sp, #44	@ 0x2c
 8015fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fbc:	0803318c 	.word	0x0803318c

08015fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8015fc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015fc4:	461e      	mov	r6, r3
 8015fc6:	4b0a      	ldr	r3, [pc, #40]	@ (8015ff0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8015fc8:	460f      	mov	r7, r1
 8015fca:	881d      	ldrh	r5, [r3, #0]
 8015fcc:	4690      	mov	r8, r2
 8015fce:	f7ed ff6f 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8015fd2:	6803      	ldr	r3, [r0, #0]
 8015fd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015fd6:	4798      	blx	r3
 8015fd8:	280b      	cmp	r0, #11
 8015fda:	bf9a      	itte	ls
 8015fdc:	4b05      	ldrls	r3, [pc, #20]	@ (8015ff4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8015fde:	5c1c      	ldrbls	r4, [r3, r0]
 8015fe0:	2400      	movhi	r4, #0
 8015fe2:	fb08 7005 	mla	r0, r8, r5, r7
 8015fe6:	10e4      	asrs	r4, r4, #3
 8015fe8:	fb04 6000 	mla	r0, r4, r0, r6
 8015fec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015ff0:	200138de 	.word	0x200138de
 8015ff4:	0803318c 	.word	0x0803318c

08015ff8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8015ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ffa:	b08b      	sub	sp, #44	@ 0x2c
 8015ffc:	461f      	mov	r7, r3
 8015ffe:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016002:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8016006:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801600a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801600e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8016012:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016016:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801601a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801601e:	2500      	movs	r5, #0
 8016020:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8016024:	f88d 3020 	strb.w	r3, [sp, #32]
 8016028:	4604      	mov	r4, r0
 801602a:	4616      	mov	r6, r2
 801602c:	9504      	str	r5, [sp, #16]
 801602e:	f7ff fe9f 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8016032:	463a      	mov	r2, r7
 8016034:	4631      	mov	r1, r6
 8016036:	4603      	mov	r3, r0
 8016038:	4620      	mov	r0, r4
 801603a:	f7ff ffc1 	bl	8015fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801603e:	4b0e      	ldr	r3, [pc, #56]	@ (8016078 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8016040:	9005      	str	r0, [sp, #20]
 8016042:	881b      	ldrh	r3, [r3, #0]
 8016044:	f8ad 301e 	strh.w	r3, [sp, #30]
 8016048:	f7ed ff32 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 801604c:	6803      	ldr	r3, [r0, #0]
 801604e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016050:	4798      	blx	r3
 8016052:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8016054:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 8016058:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 801605c:	9304      	str	r3, [sp, #16]
 801605e:	6860      	ldr	r0, [r4, #4]
 8016060:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8016064:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8016068:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 801606c:	6803      	ldr	r3, [r0, #0]
 801606e:	a901      	add	r1, sp, #4
 8016070:	685b      	ldr	r3, [r3, #4]
 8016072:	4798      	blx	r3
 8016074:	b00b      	add	sp, #44	@ 0x2c
 8016076:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016078:	200138de 	.word	0x200138de

0801607c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801607c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801607e:	b08d      	sub	sp, #52	@ 0x34
 8016080:	466b      	mov	r3, sp
 8016082:	e883 0006 	stmia.w	r3, {r1, r2}
 8016086:	2300      	movs	r3, #0
 8016088:	9306      	str	r3, [sp, #24]
 801608a:	6803      	ldr	r3, [r0, #0]
 801608c:	f8bd 6000 	ldrh.w	r6, [sp]
 8016090:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8016092:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8016096:	2501      	movs	r5, #1
 8016098:	9503      	str	r5, [sp, #12]
 801609a:	4604      	mov	r4, r0
 801609c:	4798      	blx	r3
 801609e:	463a      	mov	r2, r7
 80160a0:	4631      	mov	r1, r6
 80160a2:	4603      	mov	r3, r0
 80160a4:	4620      	mov	r0, r4
 80160a6:	f7ff ff8b 	bl	8015fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80160aa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80160ac:	9307      	str	r3, [sp, #28]
 80160ae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80160b2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80160b6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80160ba:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80160be:	4b0f      	ldr	r3, [pc, #60]	@ (80160fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80160c0:	9004      	str	r0, [sp, #16]
 80160c2:	881b      	ldrh	r3, [r3, #0]
 80160c4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80160c8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80160cc:	f7ed fef0 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 80160d0:	6803      	ldr	r3, [r0, #0]
 80160d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80160d4:	4798      	blx	r3
 80160d6:	23ff      	movs	r3, #255	@ 0xff
 80160d8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80160dc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80160e0:	6860      	ldr	r0, [r4, #4]
 80160e2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80160e6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80160ea:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80160ee:	6803      	ldr	r3, [r0, #0]
 80160f0:	a903      	add	r1, sp, #12
 80160f2:	685b      	ldr	r3, [r3, #4]
 80160f4:	4798      	blx	r3
 80160f6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 80160f8:	b00d      	add	sp, #52	@ 0x34
 80160fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80160fc:	200138de 	.word	0x200138de

08016100 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8016100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016104:	b08c      	sub	sp, #48	@ 0x30
 8016106:	461e      	mov	r6, r3
 8016108:	466d      	mov	r5, sp
 801610a:	2300      	movs	r3, #0
 801610c:	e885 0006 	stmia.w	r5, {r1, r2}
 8016110:	9306      	str	r3, [sp, #24]
 8016112:	6803      	ldr	r3, [r0, #0]
 8016114:	f8bd 7000 	ldrh.w	r7, [sp]
 8016118:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801611a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801611e:	2501      	movs	r5, #1
 8016120:	9503      	str	r5, [sp, #12]
 8016122:	4604      	mov	r4, r0
 8016124:	4798      	blx	r3
 8016126:	4642      	mov	r2, r8
 8016128:	4639      	mov	r1, r7
 801612a:	4603      	mov	r3, r0
 801612c:	4620      	mov	r0, r4
 801612e:	f7ff ff47 	bl	8015fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8016132:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016136:	f8ad 3020 	strh.w	r3, [sp, #32]
 801613a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801613e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8016142:	4b11      	ldr	r3, [pc, #68]	@ (8016188 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8016144:	9004      	str	r0, [sp, #16]
 8016146:	881b      	ldrh	r3, [r3, #0]
 8016148:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 801614c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801614e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8016152:	9607      	str	r6, [sp, #28]
 8016154:	f7ed feac 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8016158:	6803      	ldr	r3, [r0, #0]
 801615a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801615c:	4798      	blx	r3
 801615e:	23ff      	movs	r3, #255	@ 0xff
 8016160:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8016164:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8016168:	6860      	ldr	r0, [r4, #4]
 801616a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 801616e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8016172:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8016176:	6803      	ldr	r3, [r0, #0]
 8016178:	a903      	add	r1, sp, #12
 801617a:	685b      	ldr	r3, [r3, #4]
 801617c:	4798      	blx	r3
 801617e:	4630      	mov	r0, r6
 8016180:	b00c      	add	sp, #48	@ 0x30
 8016182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016186:	bf00      	nop
 8016188:	200138de 	.word	0x200138de

0801618c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801618c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801618e:	b085      	sub	sp, #20
 8016190:	ac02      	add	r4, sp, #8
 8016192:	e884 0006 	stmia.w	r4, {r1, r2}
 8016196:	4605      	mov	r5, r0
 8016198:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801619c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80161a0:	f7ff fde6 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80161a4:	463a      	mov	r2, r7
 80161a6:	4603      	mov	r3, r0
 80161a8:	4631      	mov	r1, r6
 80161aa:	4628      	mov	r0, r5
 80161ac:	f7ff ff08 	bl	8015fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80161b0:	4a05      	ldr	r2, [pc, #20]	@ (80161c8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80161b2:	682b      	ldr	r3, [r5, #0]
 80161b4:	8812      	ldrh	r2, [r2, #0]
 80161b6:	9200      	str	r2, [sp, #0]
 80161b8:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80161ba:	e894 0006 	ldmia.w	r4, {r1, r2}
 80161be:	4603      	mov	r3, r0
 80161c0:	4628      	mov	r0, r5
 80161c2:	47b0      	blx	r6
 80161c4:	b005      	add	sp, #20
 80161c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80161c8:	200138de 	.word	0x200138de

080161cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80161cc:	b570      	push	{r4, r5, r6, lr}
 80161ce:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 80161d2:	4604      	mov	r4, r0
 80161d4:	b19b      	cbz	r3, 80161fe <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80161d6:	2002      	movs	r0, #2
 80161d8:	f7ea fe98 	bl	8000f0c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80161dc:	2300      	movs	r3, #0
 80161de:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 80161e2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 80161e6:	6823      	ldr	r3, [r4, #0]
 80161e8:	4620      	mov	r0, r4
 80161ea:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 80161ee:	f7ff fdbf 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80161f2:	462b      	mov	r3, r5
 80161f4:	4601      	mov	r1, r0
 80161f6:	4620      	mov	r0, r4
 80161f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80161fc:	4718      	bx	r3
 80161fe:	bd70      	pop	{r4, r5, r6, pc}

08016200 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8016200:	b538      	push	{r3, r4, r5, lr}
 8016202:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8016206:	428b      	cmp	r3, r1
 8016208:	4604      	mov	r4, r0
 801620a:	460d      	mov	r5, r1
 801620c:	d006      	beq.n	801621c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801620e:	6803      	ldr	r3, [r0, #0]
 8016210:	b929      	cbnz	r1, 801621e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8016212:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8016216:	4798      	blx	r3
 8016218:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 801621c:	bd38      	pop	{r3, r4, r5, pc}
 801621e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8016222:	e7f8      	b.n	8016216 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08016224 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8016224:	b510      	push	{r4, lr}
 8016226:	4b0c      	ldr	r3, [pc, #48]	@ (8016258 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 8016228:	781b      	ldrb	r3, [r3, #0]
 801622a:	4604      	mov	r4, r0
 801622c:	b953      	cbnz	r3, 8016244 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 801622e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8016232:	b93b      	cbnz	r3, 8016244 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8016234:	6840      	ldr	r0, [r0, #4]
 8016236:	f000 f92b 	bl	8016490 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801623a:	b118      	cbz	r0, 8016244 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 801623c:	6862      	ldr	r2, [r4, #4]
 801623e:	7a53      	ldrb	r3, [r2, #9]
 8016240:	2b00      	cmp	r3, #0
 8016242:	d0fc      	beq.n	801623e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 8016244:	f7ea ffae 	bl	80011a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8016248:	4620      	mov	r0, r4
 801624a:	2100      	movs	r1, #0
 801624c:	f7ff ffd8 	bl	8016200 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8016250:	4620      	mov	r0, r4
 8016252:	f7ff fd8d 	bl	8015d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8016256:	bd10      	pop	{r4, pc}
 8016258:	200138e2 	.word	0x200138e2

0801625c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 801625c:	b570      	push	{r4, r5, r6, lr}
 801625e:	4604      	mov	r4, r0
 8016260:	6803      	ldr	r3, [r0, #0]
 8016262:	b919      	cbnz	r1, 801626c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8016264:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016266:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801626a:	4718      	bx	r3
 801626c:	2200      	movs	r2, #0
 801626e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 8016272:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 8016276:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016278:	4798      	blx	r3
 801627a:	6863      	ldr	r3, [r4, #4]
 801627c:	2101      	movs	r1, #1
 801627e:	4605      	mov	r5, r0
 8016280:	7299      	strb	r1, [r3, #10]
 8016282:	4620      	mov	r0, r4
 8016284:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 8016288:	f7ff ffba 	bl	8016200 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801628c:	4628      	mov	r0, r5
 801628e:	bd70      	pop	{r4, r5, r6, pc}

08016290 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8016290:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8016294:	1a13      	subs	r3, r2, r0
 8016296:	4258      	negs	r0, r3
 8016298:	4158      	adcs	r0, r3
 801629a:	4770      	bx	lr

0801629c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801629c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80162a0:	1a9b      	subs	r3, r3, r2
 80162a2:	2b00      	cmp	r3, #0
 80162a4:	bfdc      	itt	le
 80162a6:	6882      	ldrle	r2, [r0, #8]
 80162a8:	189b      	addle	r3, r3, r2
 80162aa:	2b01      	cmp	r3, #1
 80162ac:	bfcc      	ite	gt
 80162ae:	2000      	movgt	r0, #0
 80162b0:	2001      	movle	r0, #1
 80162b2:	4770      	bx	lr

080162b4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80162b4:	6902      	ldr	r2, [r0, #16]
 80162b6:	6843      	ldr	r3, [r0, #4]
 80162b8:	2024      	movs	r0, #36	@ 0x24
 80162ba:	fb00 3002 	mla	r0, r0, r2, r3
 80162be:	4770      	bx	lr

080162c0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80162c0:	6803      	ldr	r3, [r0, #0]
 80162c2:	691b      	ldr	r3, [r3, #16]
 80162c4:	4718      	bx	r3

080162c6 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80162c6:	b570      	push	{r4, r5, r6, lr}
 80162c8:	2301      	movs	r3, #1
 80162ca:	7203      	strb	r3, [r0, #8]
 80162cc:	4604      	mov	r4, r0
 80162ce:	6840      	ldr	r0, [r0, #4]
 80162d0:	6803      	ldr	r3, [r0, #0]
 80162d2:	699b      	ldr	r3, [r3, #24]
 80162d4:	4798      	blx	r3
 80162d6:	6803      	ldr	r3, [r0, #0]
 80162d8:	2b40      	cmp	r3, #64	@ 0x40
 80162da:	4605      	mov	r5, r0
 80162dc:	d00c      	beq.n	80162f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80162de:	d810      	bhi.n	8016302 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80162e0:	2b04      	cmp	r3, #4
 80162e2:	d01d      	beq.n	8016320 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80162e4:	d804      	bhi.n	80162f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80162e6:	2b01      	cmp	r3, #1
 80162e8:	d006      	beq.n	80162f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80162ea:	2b02      	cmp	r3, #2
 80162ec:	d02c      	beq.n	8016348 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80162ee:	bd70      	pop	{r4, r5, r6, pc}
 80162f0:	2b08      	cmp	r3, #8
 80162f2:	d01d      	beq.n	8016330 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80162f4:	2b20      	cmp	r3, #32
 80162f6:	d1fa      	bne.n	80162ee <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80162f8:	6823      	ldr	r3, [r4, #0]
 80162fa:	4620      	mov	r0, r4
 80162fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80162fe:	4798      	blx	r3
 8016300:	e013      	b.n	801632a <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8016302:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8016306:	d0f7      	beq.n	80162f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8016308:	d804      	bhi.n	8016314 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801630a:	2b80      	cmp	r3, #128	@ 0x80
 801630c:	d0f4      	beq.n	80162f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801630e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8016312:	e7f0      	b.n	80162f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8016314:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016318:	d0ee      	beq.n	80162f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801631a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 801631e:	e7e5      	b.n	80162ec <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8016320:	6823      	ldr	r3, [r4, #0]
 8016322:	7f01      	ldrb	r1, [r0, #28]
 8016324:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016326:	4620      	mov	r0, r4
 8016328:	4798      	blx	r3
 801632a:	6823      	ldr	r3, [r4, #0]
 801632c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801632e:	e006      	b.n	801633e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8016330:	6823      	ldr	r3, [r4, #0]
 8016332:	7f01      	ldrb	r1, [r0, #28]
 8016334:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016336:	4620      	mov	r0, r4
 8016338:	4798      	blx	r3
 801633a:	6823      	ldr	r3, [r4, #0]
 801633c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801633e:	4629      	mov	r1, r5
 8016340:	4620      	mov	r0, r4
 8016342:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016346:	4718      	bx	r3
 8016348:	6823      	ldr	r3, [r4, #0]
 801634a:	4620      	mov	r0, r4
 801634c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801634e:	4798      	blx	r3
 8016350:	e7f3      	b.n	801633a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08016352 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8016352:	4770      	bx	lr

08016354 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8016354:	4770      	bx	lr

08016356 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8016356:	4770      	bx	lr

08016358 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8016358:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 801635c:	1ad2      	subs	r2, r2, r3
 801635e:	2a00      	cmp	r2, #0
 8016360:	b510      	push	{r4, lr}
 8016362:	bfdc      	itt	le
 8016364:	6884      	ldrle	r4, [r0, #8]
 8016366:	1912      	addle	r2, r2, r4
 8016368:	2a01      	cmp	r2, #1
 801636a:	dd16      	ble.n	801639a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 801636c:	6842      	ldr	r2, [r0, #4]
 801636e:	2424      	movs	r4, #36	@ 0x24
 8016370:	fb04 2303 	mla	r3, r4, r3, r2
 8016374:	f101 0220 	add.w	r2, r1, #32
 8016378:	f851 4b04 	ldr.w	r4, [r1], #4
 801637c:	f843 4b04 	str.w	r4, [r3], #4
 8016380:	4291      	cmp	r1, r2
 8016382:	d1f9      	bne.n	8016378 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8016384:	780a      	ldrb	r2, [r1, #0]
 8016386:	701a      	strb	r2, [r3, #0]
 8016388:	68c3      	ldr	r3, [r0, #12]
 801638a:	6882      	ldr	r2, [r0, #8]
 801638c:	f3bf 8f5b 	dmb	ish
 8016390:	3301      	adds	r3, #1
 8016392:	429a      	cmp	r2, r3
 8016394:	bfd8      	it	le
 8016396:	1a9b      	suble	r3, r3, r2
 8016398:	60c3      	str	r3, [r0, #12]
 801639a:	bd10      	pop	{r4, pc}

0801639c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 801639c:	6903      	ldr	r3, [r0, #16]
 801639e:	6882      	ldr	r2, [r0, #8]
 80163a0:	f3bf 8f5b 	dmb	ish
 80163a4:	3301      	adds	r3, #1
 80163a6:	429a      	cmp	r2, r3
 80163a8:	bfd8      	it	le
 80163aa:	1a9b      	suble	r3, r3, r2
 80163ac:	6103      	str	r3, [r0, #16]
 80163ae:	4770      	bx	lr

080163b0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80163b0:	b570      	push	{r4, r5, r6, lr}
 80163b2:	4604      	mov	r4, r0
 80163b4:	460e      	mov	r6, r1
 80163b6:	6860      	ldr	r0, [r4, #4]
 80163b8:	6803      	ldr	r3, [r0, #0]
 80163ba:	685b      	ldr	r3, [r3, #4]
 80163bc:	4798      	blx	r3
 80163be:	2800      	cmp	r0, #0
 80163c0:	d1f9      	bne.n	80163b6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80163c2:	4d0d      	ldr	r5, [pc, #52]	@ (80163f8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80163c4:	6828      	ldr	r0, [r5, #0]
 80163c6:	6803      	ldr	r3, [r0, #0]
 80163c8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80163cc:	4798      	blx	r3
 80163ce:	f7ea fef7 	bl	80011c0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80163d2:	6828      	ldr	r0, [r5, #0]
 80163d4:	2101      	movs	r1, #1
 80163d6:	f7ff ff13 	bl	8016200 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80163da:	6860      	ldr	r0, [r4, #4]
 80163dc:	6803      	ldr	r3, [r0, #0]
 80163de:	4631      	mov	r1, r6
 80163e0:	689b      	ldr	r3, [r3, #8]
 80163e2:	4798      	blx	r3
 80163e4:	6823      	ldr	r3, [r4, #0]
 80163e6:	4620      	mov	r0, r4
 80163e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80163ea:	4798      	blx	r3
 80163ec:	6828      	ldr	r0, [r5, #0]
 80163ee:	6803      	ldr	r3, [r0, #0]
 80163f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80163f4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80163f6:	4718      	bx	r3
 80163f8:	200138e4 	.word	0x200138e4

080163fc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80163fc:	b508      	push	{r3, lr}
 80163fe:	f7ea fed1 	bl	80011a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8016402:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016406:	f7ea bed5 	b.w	80011b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801640a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801640a:	b510      	push	{r4, lr}
 801640c:	2114      	movs	r1, #20
 801640e:	4604      	mov	r4, r0
 8016410:	f017 fa89 	bl	802d926 <_ZdlPvj>
 8016414:	4620      	mov	r0, r4
 8016416:	bd10      	pop	{r4, pc}

08016418 <_ZN8touchgfx13DMA_Interface5startEv>:
 8016418:	b510      	push	{r4, lr}
 801641a:	4604      	mov	r4, r0
 801641c:	6840      	ldr	r0, [r0, #4]
 801641e:	6803      	ldr	r3, [r0, #0]
 8016420:	681b      	ldr	r3, [r3, #0]
 8016422:	4798      	blx	r3
 8016424:	b948      	cbnz	r0, 801643a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8016426:	7a63      	ldrb	r3, [r4, #9]
 8016428:	b13b      	cbz	r3, 801643a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801642a:	7a23      	ldrb	r3, [r4, #8]
 801642c:	b92b      	cbnz	r3, 801643a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801642e:	6823      	ldr	r3, [r4, #0]
 8016430:	4620      	mov	r0, r4
 8016432:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016434:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016438:	4718      	bx	r3
 801643a:	bd10      	pop	{r4, pc}

0801643c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 801643c:	b570      	push	{r4, r5, r6, lr}
 801643e:	4604      	mov	r4, r0
 8016440:	6840      	ldr	r0, [r0, #4]
 8016442:	6803      	ldr	r3, [r0, #0]
 8016444:	681b      	ldr	r3, [r3, #0]
 8016446:	4798      	blx	r3
 8016448:	4605      	mov	r5, r0
 801644a:	b930      	cbnz	r0, 801645a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801644c:	7a23      	ldrb	r3, [r4, #8]
 801644e:	b123      	cbz	r3, 801645a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8016450:	6860      	ldr	r0, [r4, #4]
 8016452:	6803      	ldr	r3, [r0, #0]
 8016454:	695b      	ldr	r3, [r3, #20]
 8016456:	4798      	blx	r3
 8016458:	7225      	strb	r5, [r4, #8]
 801645a:	6860      	ldr	r0, [r4, #4]
 801645c:	6803      	ldr	r3, [r0, #0]
 801645e:	681b      	ldr	r3, [r3, #0]
 8016460:	4798      	blx	r3
 8016462:	b928      	cbnz	r0, 8016470 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8016464:	6823      	ldr	r3, [r4, #0]
 8016466:	4620      	mov	r0, r4
 8016468:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801646a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801646e:	4718      	bx	r3
 8016470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016474:	f7ea beac 	b.w	80011d0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08016478 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8016478:	b510      	push	{r4, lr}
 801647a:	4c04      	ldr	r4, [pc, #16]	@ (801648c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 801647c:	6082      	str	r2, [r0, #8]
 801647e:	2200      	movs	r2, #0
 8016480:	e9c0 4100 	strd	r4, r1, [r0]
 8016484:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8016488:	bd10      	pop	{r4, pc}
 801648a:	bf00      	nop
 801648c:	080331a0 	.word	0x080331a0

08016490 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8016490:	6840      	ldr	r0, [r0, #4]
 8016492:	6803      	ldr	r3, [r0, #0]
 8016494:	681b      	ldr	r3, [r3, #0]
 8016496:	4718      	bx	r3

08016498 <_ZN8touchgfxL10applyNoiseEiihhh>:
 8016498:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 801649c:	4f20      	ldr	r7, [pc, #128]	@ (8016520 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 801649e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80164a2:	fb80 0101 	smull	r0, r1, r0, r1
 80164a6:	fba0 bc07 	umull	fp, ip, r0, r7
 80164aa:	fb07 cc01 	mla	ip, r7, r1, ip
 80164ae:	fb0b f70c 	mul.w	r7, fp, ip
 80164b2:	fbab 010b 	umull	r0, r1, fp, fp
 80164b6:	461c      	mov	r4, r3
 80164b8:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80164bc:	fb00 f30c 	mul.w	r3, r0, ip
 80164c0:	fb0b 3301 	mla	r3, fp, r1, r3
 80164c4:	fba0 010b 	umull	r0, r1, r0, fp
 80164c8:	4616      	mov	r6, r2
 80164ca:	4419      	add	r1, r3
 80164cc:	a312      	add	r3, pc, #72	@ (adr r3, 8016518 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 80164ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80164d2:	f7ea f9eb 	bl	80008ac <__aeabi_ldivmod>
 80164d6:	2ef7      	cmp	r6, #247	@ 0xf7
 80164d8:	b290      	uxth	r0, r2
 80164da:	bf9e      	ittt	ls
 80164dc:	f002 0207 	andls.w	r2, r2, #7
 80164e0:	18b6      	addls	r6, r6, r2
 80164e2:	b2f6      	uxtbls	r6, r6
 80164e4:	2cfb      	cmp	r4, #251	@ 0xfb
 80164e6:	bf9e      	ittt	ls
 80164e8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 80164ec:	18e4      	addls	r4, r4, r3
 80164ee:	b2e4      	uxtbls	r4, r4
 80164f0:	2df7      	cmp	r5, #247	@ 0xf7
 80164f2:	bf9c      	itt	ls
 80164f4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 80164f8:	182d      	addls	r5, r5, r0
 80164fa:	480a      	ldr	r0, [pc, #40]	@ (8016524 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 80164fc:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016500:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 8016504:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8016508:	bf98      	it	ls
 801650a:	b2ed      	uxtbls	r5, r5
 801650c:	4304      	orrs	r4, r0
 801650e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 8016512:	b280      	uxth	r0, r0
 8016514:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8016518:	797a8d77 	.word	0x797a8d77
 801651c:	00000000 	.word	0x00000000
 8016520:	00ec4ba7 	.word	0x00ec4ba7
 8016524:	fffff800 	.word	0xfffff800

08016528 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 8016528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801652c:	ed2d 8b02 	vpush	{d8}
 8016530:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8016534:	b087      	sub	sp, #28
 8016536:	7c41      	ldrb	r1, [r0, #17]
 8016538:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 801653c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8016540:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 8016544:	4605      	mov	r5, r0
 8016546:	2900      	cmp	r1, #0
 8016548:	f000 809a 	beq.w	8016680 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 801654c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8016550:	ed90 7a08 	vldr	s14, [r0, #32]
 8016554:	68c0      	ldr	r0, [r0, #12]
 8016556:	454a      	cmp	r2, r9
 8016558:	db25      	blt.n	80165a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 801655a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801655e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016562:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8016566:	bfc8      	it	gt
 8016568:	2200      	movgt	r2, #0
 801656a:	5882      	ldr	r2, [r0, r2]
 801656c:	2100      	movs	r1, #0
 801656e:	7c2d      	ldrb	r5, [r5, #16]
 8016570:	ea4f 2812 	mov.w	r8, r2, lsr #8
 8016574:	0950      	lsrs	r0, r2, #5
 8016576:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 801657a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801657e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 8016582:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 8016586:	2d00      	cmp	r5, #0
 8016588:	d044      	beq.n	8016614 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 801658a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801658e:	d141      	bne.n	8016614 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8016590:	bb61      	cbnz	r1, 80165ec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 8016592:	ea4e 0000 	orr.w	r0, lr, r0
 8016596:	ea4c 0500 	orr.w	r5, ip, r0
 801659a:	42bc      	cmp	r4, r7
 801659c:	f080 8217 	bcs.w	80169ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80165a0:	f824 5b02 	strh.w	r5, [r4], #2
 80165a4:	e7f9      	b.n	801659a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 80165a6:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 80165aa:	454f      	cmp	r7, r9
 80165ac:	dc08      	bgt.n	80165c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 80165ae:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80165b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165b6:	f640 72fc 	movw	r2, #4092	@ 0xffc
 80165ba:	bfd8      	it	le
 80165bc:	2200      	movle	r2, #0
 80165be:	e7d4      	b.n	801656a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 80165c0:	eba9 0202 	sub.w	r2, r9, r2
 80165c4:	ee07 2a90 	vmov	s15, r2
 80165c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165cc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80165d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80165d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80165dc:	ee17 2a90 	vmov	r2, s15
 80165e0:	bfd8      	it	le
 80165e2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 80165e6:	0092      	lsls	r2, r2, #2
 80165e8:	5882      	ldr	r2, [r0, r2]
 80165ea:	e7c0      	b.n	801656e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 80165ec:	b2d5      	uxtb	r5, r2
 80165ee:	fa5f f888 	uxtb.w	r8, r8
 80165f2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 80165f6:	461e      	mov	r6, r3
 80165f8:	42bc      	cmp	r4, r7
 80165fa:	f080 81e8 	bcs.w	80169ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80165fe:	4630      	mov	r0, r6
 8016600:	9500      	str	r5, [sp, #0]
 8016602:	4643      	mov	r3, r8
 8016604:	4652      	mov	r2, sl
 8016606:	4649      	mov	r1, r9
 8016608:	f7ff ff46 	bl	8016498 <_ZN8touchgfxL10applyNoiseEiihhh>
 801660c:	3601      	adds	r6, #1
 801660e:	f824 0b02 	strh.w	r0, [r4], #2
 8016612:	e7f1      	b.n	80165f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 8016614:	0e12      	lsrs	r2, r2, #24
 8016616:	fb02 f20a 	mul.w	r2, r2, sl
 801661a:	1c53      	adds	r3, r2, #1
 801661c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 8016620:	1212      	asrs	r2, r2, #8
 8016622:	fb02 f50c 	mul.w	r5, r2, ip
 8016626:	fb02 f10e 	mul.w	r1, r2, lr
 801662a:	4350      	muls	r0, r2
 801662c:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 80169e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8016630:	43d2      	mvns	r2, r2
 8016632:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8016636:	26ff      	movs	r6, #255	@ 0xff
 8016638:	42bc      	cmp	r4, r7
 801663a:	f080 81c8 	bcs.w	80169ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801663e:	f8b4 e000 	ldrh.w	lr, [r4]
 8016642:	ea0e 030c 	and.w	r3, lr, ip
 8016646:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 801664a:	fb02 1303 	mla	r3, r2, r3, r1
 801664e:	fb02 0808 	mla	r8, r2, r8, r0
 8016652:	fb93 f3f6 	sdiv	r3, r3, r6
 8016656:	fb98 f8f6 	sdiv	r8, r8, r6
 801665a:	ea03 030c 	and.w	r3, r3, ip
 801665e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8016662:	f00e 0e1f 	and.w	lr, lr, #31
 8016666:	ea43 0308 	orr.w	r3, r3, r8
 801666a:	fb02 5e0e 	mla	lr, r2, lr, r5
 801666e:	fb9e fef6 	sdiv	lr, lr, r6
 8016672:	f00e 0e1f 	and.w	lr, lr, #31
 8016676:	ea43 030e 	orr.w	r3, r3, lr
 801667a:	f824 3b02 	strh.w	r3, [r4], #2
 801667e:	e7db      	b.n	8016638 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 8016680:	7c82      	ldrb	r2, [r0, #18]
 8016682:	2a00      	cmp	r2, #0
 8016684:	d04f      	beq.n	8016726 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 8016686:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801668a:	ee07 2a90 	vmov	s15, r2
 801668e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016692:	ee07 3a10 	vmov	s14, r3
 8016696:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801669a:	461f      	mov	r7, r3
 801669c:	eef4 6ae7 	vcmpe.f32	s13, s15
 80166a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166a4:	f200 8095 	bhi.w	80167d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 80166a8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80166ac:	ee37 7a87 	vadd.f32	s14, s15, s14
 80166b0:	f640 71fc 	movw	r1, #4092	@ 0xffc
 80166b4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80166b8:	ee06 6a90 	vmov	s13, r6
 80166bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80166c0:	68ea      	ldr	r2, [r5, #12]
 80166c2:	f895 c010 	ldrb.w	ip, [r5, #16]
 80166c6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80166ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166ce:	bf4a      	itet	mi
 80166d0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 80166d4:	9602      	strpl	r6, [sp, #8]
 80166d6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 80166da:	ed95 7a08 	vldr	s14, [r5, #32]
 80166de:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80166e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80166e6:	bfc8      	it	gt
 80166e8:	2100      	movgt	r1, #0
 80166ea:	5852      	ldr	r2, [r2, r1]
 80166ec:	9902      	ldr	r1, [sp, #8]
 80166ee:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 80166f2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80166f6:	0950      	lsrs	r0, r2, #5
 80166f8:	9103      	str	r1, [sp, #12]
 80166fa:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 80166fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8016702:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 8016706:	f1bc 0f00 	cmp.w	ip, #0
 801670a:	d024      	beq.n	8016756 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 801670c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016710:	d121      	bne.n	8016756 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8016712:	ea4b 0b00 	orr.w	fp, fp, r0
 8016716:	ea41 010b 	orr.w	r1, r1, fp
 801671a:	9a03      	ldr	r2, [sp, #12]
 801671c:	4294      	cmp	r4, r2
 801671e:	d255      	bcs.n	80167cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8016720:	f824 1b02 	strh.w	r1, [r4], #2
 8016724:	e7f9      	b.n	801671a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 8016726:	ee07 9a10 	vmov	s14, r9
 801672a:	edd0 7a06 	vldr	s15, [r0, #24]
 801672e:	edd0 6a05 	vldr	s13, [r0, #20]
 8016732:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016736:	ee37 7a67 	vsub.f32	s14, s14, s15
 801673a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 801673e:	ed90 7a08 	vldr	s14, [r0, #32]
 8016742:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801674a:	bf44      	itt	mi
 801674c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 8016750:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 8016754:	e79d      	b.n	8016692 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 8016756:	0e12      	lsrs	r2, r2, #24
 8016758:	fb02 f20a 	mul.w	r2, r2, sl
 801675c:	f102 0c01 	add.w	ip, r2, #1
 8016760:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 8016764:	1212      	asrs	r2, r2, #8
 8016766:	4350      	muls	r0, r2
 8016768:	4351      	muls	r1, r2
 801676a:	fb02 fb0b 	mul.w	fp, r2, fp
 801676e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 80169e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8016772:	9004      	str	r0, [sp, #16]
 8016774:	43d2      	mvns	r2, r2
 8016776:	9105      	str	r1, [sp, #20]
 8016778:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801677c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 8016780:	9903      	ldr	r1, [sp, #12]
 8016782:	428c      	cmp	r4, r1
 8016784:	d222      	bcs.n	80167cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8016786:	8820      	ldrh	r0, [r4, #0]
 8016788:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 801678c:	460f      	mov	r7, r1
 801678e:	9904      	ldr	r1, [sp, #16]
 8016790:	ea00 0c08 	and.w	ip, r0, r8
 8016794:	fb02 bc0c 	mla	ip, r2, ip, fp
 8016798:	fb02 1107 	mla	r1, r2, r7, r1
 801679c:	fb9c fcfe 	sdiv	ip, ip, lr
 80167a0:	fb91 f1fe 	sdiv	r1, r1, lr
 80167a4:	ea0c 0c08 	and.w	ip, ip, r8
 80167a8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80167ac:	ea4c 0101 	orr.w	r1, ip, r1
 80167b0:	f000 0c1f 	and.w	ip, r0, #31
 80167b4:	9805      	ldr	r0, [sp, #20]
 80167b6:	fb02 0c0c 	mla	ip, r2, ip, r0
 80167ba:	fb9c fcfe 	sdiv	ip, ip, lr
 80167be:	f00c 0c1f 	and.w	ip, ip, #31
 80167c2:	ea41 010c 	orr.w	r1, r1, ip
 80167c6:	f824 1b02 	strh.w	r1, [r4], #2
 80167ca:	e7d9      	b.n	8016780 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 80167cc:	9a02      	ldr	r2, [sp, #8]
 80167ce:	441a      	add	r2, r3
 80167d0:	4617      	mov	r7, r2
 80167d2:	441e      	add	r6, r3
 80167d4:	b236      	sxth	r6, r6
 80167d6:	42be      	cmp	r6, r7
 80167d8:	f340 80f9 	ble.w	80169ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80167dc:	ed95 7a07 	vldr	s14, [r5, #28]
 80167e0:	ee06 7a90 	vmov	s13, r7
 80167e4:	ee37 7a87 	vadd.f32	s14, s15, s14
 80167e8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80167ec:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80167f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167f4:	f340 80b5 	ble.w	8016962 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 80167f8:	ee06 6a10 	vmov	s12, r6
 80167fc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8016800:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 80169d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 8016804:	7c2b      	ldrb	r3, [r5, #16]
 8016806:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801680a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801680e:	bfd8      	it	le
 8016810:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 8016814:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 80169dc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 8016818:	bfd8      	it	le
 801681a:	ee17 8a10 	vmovle	r8, s14
 801681e:	ed95 7a08 	vldr	s14, [r5, #32]
 8016822:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8016826:	bfc8      	it	gt
 8016828:	46b0      	movgt	r8, r6
 801682a:	ee76 7ae7 	vsub.f32	s15, s13, s15
 801682e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016832:	eba8 0707 	sub.w	r7, r8, r7
 8016836:	bfd8      	it	le
 8016838:	eeb0 8a46 	vmovle.f32	s16, s12
 801683c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8016840:	eea7 8a27 	vfma.f32	s16, s14, s15
 8016844:	b1db      	cbz	r3, 801687e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 8016846:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801684a:	d118      	bne.n	801687e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 801684c:	42bc      	cmp	r4, r7
 801684e:	d262      	bcs.n	8016916 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 8016850:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8016854:	68eb      	ldr	r3, [r5, #12]
 8016856:	ee17 0a90 	vmov	r0, s15
 801685a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 801685e:	b2d3      	uxtb	r3, r2
 8016860:	9300      	str	r3, [sp, #0]
 8016862:	4649      	mov	r1, r9
 8016864:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8016868:	f3c2 4207 	ubfx	r2, r2, #16, #8
 801686c:	f7ff fe14 	bl	8016498 <_ZN8touchgfxL10applyNoiseEiihhh>
 8016870:	f824 0b02 	strh.w	r0, [r4], #2
 8016874:	edd5 7a08 	vldr	s15, [r5, #32]
 8016878:	ee38 8a27 	vadd.f32	s16, s16, s15
 801687c:	e7e6      	b.n	801684c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 801687e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 80169e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8016882:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 8016886:	42bc      	cmp	r4, r7
 8016888:	d245      	bcs.n	8016916 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 801688a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801688e:	68eb      	ldr	r3, [r5, #12]
 8016890:	f8b4 e000 	ldrh.w	lr, [r4]
 8016894:	ee17 2a90 	vmov	r2, s15
 8016898:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801689c:	0e13      	lsrs	r3, r2, #24
 801689e:	fb03 f30a 	mul.w	r3, r3, sl
 80168a2:	1c58      	adds	r0, r3, #1
 80168a4:	eb00 2023 	add.w	r0, r0, r3, asr #8
 80168a8:	1200      	asrs	r0, r0, #8
 80168aa:	ea6f 0c00 	mvn.w	ip, r0
 80168ae:	fa5f fc8c 	uxtb.w	ip, ip
 80168b2:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 80168b6:	ea0e 030b 	and.w	r3, lr, fp
 80168ba:	fb0c f303 	mul.w	r3, ip, r3
 80168be:	b289      	uxth	r1, r1
 80168c0:	fb00 3101 	mla	r1, r0, r1, r3
 80168c4:	fb91 f1f9 	sdiv	r1, r1, r9
 80168c8:	ea01 030b 	and.w	r3, r1, fp
 80168cc:	9302      	str	r3, [sp, #8]
 80168ce:	0953      	lsrs	r3, r2, #5
 80168d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80168d4:	4619      	mov	r1, r3
 80168d6:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 80168da:	fb0c f303 	mul.w	r3, ip, r3
 80168de:	fb00 3301 	mla	r3, r0, r1, r3
 80168e2:	f00e 0e1f 	and.w	lr, lr, #31
 80168e6:	9902      	ldr	r1, [sp, #8]
 80168e8:	fb93 f3f9 	sdiv	r3, r3, r9
 80168ec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80168f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80168f4:	fb0c fc0e 	mul.w	ip, ip, lr
 80168f8:	4319      	orrs	r1, r3
 80168fa:	fb00 c002 	mla	r0, r0, r2, ip
 80168fe:	fb90 f0f9 	sdiv	r0, r0, r9
 8016902:	f000 001f 	and.w	r0, r0, #31
 8016906:	4301      	orrs	r1, r0
 8016908:	f824 1b02 	strh.w	r1, [r4], #2
 801690c:	edd5 7a08 	vldr	s15, [r5, #32]
 8016910:	ee38 8a27 	vadd.f32	s16, s16, s15
 8016914:	e7b7      	b.n	8016886 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 8016916:	4546      	cmp	r6, r8
 8016918:	dd59      	ble.n	80169ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801691a:	edd5 7a08 	vldr	s15, [r5, #32]
 801691e:	68ea      	ldr	r2, [r5, #12]
 8016920:	7c29      	ldrb	r1, [r5, #16]
 8016922:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801692a:	f640 73fc 	movw	r3, #4092	@ 0xffc
 801692e:	bfd8      	it	le
 8016930:	2300      	movle	r3, #0
 8016932:	eba6 0608 	sub.w	r6, r6, r8
 8016936:	58d2      	ldr	r2, [r2, r3]
 8016938:	0a10      	lsrs	r0, r2, #8
 801693a:	0953      	lsrs	r3, r2, #5
 801693c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 8016940:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8016944:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016948:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 801694c:	b159      	cbz	r1, 8016966 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 801694e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016952:	d108      	bne.n	8016966 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 8016954:	4318      	orrs	r0, r3
 8016956:	4338      	orrs	r0, r7
 8016958:	42b4      	cmp	r4, r6
 801695a:	d238      	bcs.n	80169ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801695c:	f824 0b02 	strh.w	r0, [r4], #2
 8016960:	e7fa      	b.n	8016958 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 8016962:	46b8      	mov	r8, r7
 8016964:	e7d9      	b.n	801691a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 8016966:	0e12      	lsrs	r2, r2, #24
 8016968:	fb02 f10a 	mul.w	r1, r2, sl
 801696c:	1c4a      	adds	r2, r1, #1
 801696e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 8016972:	1212      	asrs	r2, r2, #8
 8016974:	fb02 f507 	mul.w	r5, r2, r7
 8016978:	4350      	muls	r0, r2
 801697a:	4353      	muls	r3, r2
 801697c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 80169e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8016980:	43d2      	mvns	r2, r2
 8016982:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8016986:	27ff      	movs	r7, #255	@ 0xff
 8016988:	42b4      	cmp	r4, r6
 801698a:	d220      	bcs.n	80169ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801698c:	f8b4 e000 	ldrh.w	lr, [r4]
 8016990:	ea0e 010c 	and.w	r1, lr, ip
 8016994:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8016998:	fb02 0101 	mla	r1, r2, r1, r0
 801699c:	fb02 3808 	mla	r8, r2, r8, r3
 80169a0:	fb91 f1f7 	sdiv	r1, r1, r7
 80169a4:	fb98 f8f7 	sdiv	r8, r8, r7
 80169a8:	ea01 010c 	and.w	r1, r1, ip
 80169ac:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80169b0:	f00e 0e1f 	and.w	lr, lr, #31
 80169b4:	ea41 0108 	orr.w	r1, r1, r8
 80169b8:	fb02 5e0e 	mla	lr, r2, lr, r5
 80169bc:	fb9e fef7 	sdiv	lr, lr, r7
 80169c0:	f00e 0e1f 	and.w	lr, lr, #31
 80169c4:	ea41 010e 	orr.w	r1, r1, lr
 80169c8:	f824 1b02 	strh.w	r1, [r4], #2
 80169cc:	e7dc      	b.n	8016988 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 80169ce:	b007      	add	sp, #28
 80169d0:	ecbd 8b02 	vpop	{d8}
 80169d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169d8:	00000000 	.word	0x00000000
 80169dc:	447ffffe 	.word	0x447ffffe
 80169e0:	fffff800 	.word	0xfffff800

080169e4 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 80169e4:	4770      	bx	lr

080169e6 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 80169e6:	4770      	bx	lr

080169e8 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 80169e8:	b510      	push	{r4, lr}
 80169ea:	2124      	movs	r1, #36	@ 0x24
 80169ec:	4604      	mov	r4, r0
 80169ee:	f016 ff9a 	bl	802d926 <_ZdlPvj>
 80169f2:	4620      	mov	r0, r4
 80169f4:	bd10      	pop	{r4, pc}
	...

080169f8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80169f8:	4b06      	ldr	r3, [pc, #24]	@ (8016a14 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80169fa:	60c1      	str	r1, [r0, #12]
 80169fc:	094a      	lsrs	r2, r1, #5
 80169fe:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8016a02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016a06:	4313      	orrs	r3, r2
 8016a08:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8016a0c:	4319      	orrs	r1, r3
 8016a0e:	8201      	strh	r1, [r0, #16]
 8016a10:	4770      	bx	lr
 8016a12:	bf00      	nop
 8016a14:	fffff800 	.word	0xfffff800

08016a18 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8016a18:	f1a0 0008 	sub.w	r0, r0, #8
 8016a1c:	e7ec      	b.n	80169f8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8016a1e:	bf00      	nop

08016a20 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8016a20:	b508      	push	{r3, lr}
 8016a22:	4b05      	ldr	r3, [pc, #20]	@ (8016a38 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8016a24:	6818      	ldr	r0, [r3, #0]
 8016a26:	6803      	ldr	r3, [r0, #0]
 8016a28:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8016a2c:	4798      	blx	r3
 8016a2e:	1e43      	subs	r3, r0, #1
 8016a30:	4258      	negs	r0, r3
 8016a32:	4158      	adcs	r0, r3
 8016a34:	bd08      	pop	{r3, pc}
 8016a36:	bf00      	nop
 8016a38:	200138e4 	.word	0x200138e4

08016a3c <_ZN8touchgfx13PainterRGB565D1Ev>:
 8016a3c:	4770      	bx	lr

08016a3e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8016a3e:	3808      	subs	r0, #8
 8016a40:	4770      	bx	lr

08016a42 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8016a42:	b430      	push	{r4, r5}
 8016a44:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8016a48:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8016a4c:	8a02      	ldrh	r2, [r0, #16]
 8016a4e:	9202      	str	r2, [sp, #8]
 8016a50:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016a54:	68c2      	ldr	r2, [r0, #12]
 8016a56:	4629      	mov	r1, r5
 8016a58:	4620      	mov	r0, r4
 8016a5a:	bc30      	pop	{r4, r5}
 8016a5c:	f7ea bd80 	b.w	8001560 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08016a60 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8016a60:	f7ea bd72 	b.w	8001548 <_ZN8touchgfx5paint8tearDownEv>

08016a64 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8016a64:	b510      	push	{r4, lr}
 8016a66:	2114      	movs	r1, #20
 8016a68:	4604      	mov	r4, r0
 8016a6a:	f016 ff5c 	bl	802d926 <_ZdlPvj>
 8016a6e:	4620      	mov	r0, r4
 8016a70:	bd10      	pop	{r4, pc}

08016a72 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8016a72:	f1a0 0008 	sub.w	r0, r0, #8
 8016a76:	e7f5      	b.n	8016a64 <_ZN8touchgfx13PainterRGB565D0Ev>

08016a78 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 8016a78:	2300      	movs	r3, #0
 8016a7a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8016a7c:	8503      	strh	r3, [r0, #40]	@ 0x28
 8016a7e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 8016a80:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8016a82:	6980      	ldr	r0, [r0, #24]
 8016a84:	b110      	cbz	r0, 8016a8c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 8016a86:	6803      	ldr	r3, [r0, #0]
 8016a88:	691b      	ldr	r3, [r3, #16]
 8016a8a:	4718      	bx	r3
 8016a8c:	4770      	bx	lr

08016a8e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 8016a8e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 8016a92:	4770      	bx	lr

08016a94 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 8016a94:	b538      	push	{r3, r4, r5, lr}
 8016a96:	0e0b      	lsrs	r3, r1, #24
 8016a98:	7783      	strb	r3, [r0, #30]
 8016a9a:	6803      	ldr	r3, [r0, #0]
 8016a9c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8016a9e:	4604      	mov	r4, r0
 8016aa0:	460d      	mov	r5, r1
 8016aa2:	4798      	blx	r3
 8016aa4:	6803      	ldr	r3, [r0, #0]
 8016aa6:	4629      	mov	r1, r5
 8016aa8:	689b      	ldr	r3, [r3, #8]
 8016aaa:	4798      	blx	r3
 8016aac:	6823      	ldr	r3, [r4, #0]
 8016aae:	4620      	mov	r0, r4
 8016ab0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8016ab2:	4798      	blx	r3
 8016ab4:	61a0      	str	r0, [r4, #24]
 8016ab6:	bd38      	pop	{r3, r4, r5, pc}

08016ab8 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 8016ab8:	7741      	strb	r1, [r0, #29]
 8016aba:	4770      	bx	lr

08016abc <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 8016abc:	b530      	push	{r4, r5, lr}
 8016abe:	460d      	mov	r5, r1
 8016ac0:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 8016ac4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016ac6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8016ac8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016aca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8016acc:	682b      	ldr	r3, [r5, #0]
 8016ace:	6023      	str	r3, [r4, #0]
 8016ad0:	bd30      	pop	{r4, r5, pc}

08016ad2 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 8016ad2:	b538      	push	{r3, r4, r5, lr}
 8016ad4:	4604      	mov	r4, r0
 8016ad6:	1d03      	adds	r3, r0, #4
 8016ad8:	6808      	ldr	r0, [r1, #0]
 8016ada:	6849      	ldr	r1, [r1, #4]
 8016adc:	c303      	stmia	r3!, {r0, r1}
 8016ade:	6813      	ldr	r3, [r2, #0]
 8016ae0:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 8016ae4:	6853      	ldr	r3, [r2, #4]
 8016ae6:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 8016aea:	2500      	movs	r5, #0
 8016aec:	61a5      	str	r5, [r4, #24]
 8016aee:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8016af2:	f006 f9c7 	bl	801ce84 <_ZN8touchgfx9Matrix3x35resetEv>
 8016af6:	23ff      	movs	r3, #255	@ 0xff
 8016af8:	7763      	strb	r3, [r4, #29]
 8016afa:	77a3      	strb	r3, [r4, #30]
 8016afc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8016b00:	6323      	str	r3, [r4, #48]	@ 0x30
 8016b02:	2301      	movs	r3, #1
 8016b04:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8016b08:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 8016b0c:	bd38      	pop	{r3, r4, r5, pc}
	...

08016b10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8016b10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016b14:	ed2d 8b0a 	vpush	{d8-d12}
 8016b18:	ee70 7a41 	vsub.f32	s15, s0, s2
 8016b1c:	b087      	sub	sp, #28
 8016b1e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b26:	4605      	mov	r5, r0
 8016b28:	eef0 9a40 	vmov.f32	s19, s0
 8016b2c:	eeb0 aa60 	vmov.f32	s20, s1
 8016b30:	eeb0 9a41 	vmov.f32	s18, s2
 8016b34:	eef0 8a61 	vmov.f32	s17, s3
 8016b38:	eeb0 ca42 	vmov.f32	s24, s4
 8016b3c:	eef0 ca62 	vmov.f32	s25, s5
 8016b40:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8016b44:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8016b46:	6802      	ldr	r2, [r0, #0]
 8016b48:	d112      	bne.n	8016b70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8016b4a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 8016b4e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8016b52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b56:	d10b      	bne.n	8016b70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8016b58:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8016b5c:	3901      	subs	r1, #1
 8016b5e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8016b60:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8016b64:	b007      	add	sp, #28
 8016b66:	ecbd 8b0a 	vpop	{d8-d12}
 8016b6a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016b6e:	4710      	bx	r2
 8016b70:	23ff      	movs	r3, #255	@ 0xff
 8016b72:	77ab      	strb	r3, [r5, #30]
 8016b74:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8016b76:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 8016e3c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 8016b7a:	4628      	mov	r0, r5
 8016b7c:	4798      	blx	r3
 8016b7e:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 8016b82:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8016b86:	80c3      	strh	r3, [r0, #6]
 8016b88:	eef0 0a4a 	vmov.f32	s1, s20
 8016b8c:	eeb0 0a69 	vmov.f32	s0, s19
 8016b90:	4604      	mov	r4, r0
 8016b92:	4640      	mov	r0, r8
 8016b94:	f006 fa25 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016b98:	4640      	mov	r0, r8
 8016b9a:	eeb0 ba40 	vmov.f32	s22, s0
 8016b9e:	eef0 ba60 	vmov.f32	s23, s1
 8016ba2:	ed8d 0a00 	vstr	s0, [sp]
 8016ba6:	edcd 0a01 	vstr	s1, [sp, #4]
 8016baa:	eeb0 0a49 	vmov.f32	s0, s18
 8016bae:	eef0 0a68 	vmov.f32	s1, s17
 8016bb2:	f006 fa16 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016bb6:	eeb4 ba40 	vcmp.f32	s22, s0
 8016bba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bbe:	eef4 ba60 	vcmp.f32	s23, s1
 8016bc2:	bf0c      	ite	eq
 8016bc4:	2301      	moveq	r3, #1
 8016bc6:	2300      	movne	r3, #0
 8016bc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bcc:	eeb4 ba40 	vcmp.f32	s22, s0
 8016bd0:	7463      	strb	r3, [r4, #17]
 8016bd2:	bf0c      	ite	eq
 8016bd4:	2301      	moveq	r3, #1
 8016bd6:	2300      	movne	r3, #0
 8016bd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bdc:	eeb0 8a40 	vmov.f32	s16, s0
 8016be0:	eef0 aa60 	vmov.f32	s21, s1
 8016be4:	ed8d 0a02 	vstr	s0, [sp, #8]
 8016be8:	edcd 0a03 	vstr	s1, [sp, #12]
 8016bec:	74a3      	strb	r3, [r4, #18]
 8016bee:	d030      	beq.n	8016c52 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 8016bf0:	eef4 ba60 	vcmp.f32	s23, s1
 8016bf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bf8:	d02b      	beq.n	8016c52 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 8016bfa:	ee39 9a69 	vsub.f32	s18, s18, s19
 8016bfe:	ee78 8aca 	vsub.f32	s17, s17, s20
 8016c02:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 8016c06:	4640      	mov	r0, r8
 8016c08:	eec8 7aac 	vdiv.f32	s15, s17, s25
 8016c0c:	eef0 0a4a 	vmov.f32	s1, s20
 8016c10:	eeb0 0a69 	vmov.f32	s0, s19
 8016c14:	eea7 0acc 	vfms.f32	s0, s15, s24
 8016c18:	eeec 0a87 	vfma.f32	s1, s25, s14
 8016c1c:	f006 f9e1 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016c20:	f899 3000 	ldrb.w	r3, [r9]
 8016c24:	edcd 0a05 	vstr	s1, [sp, #20]
 8016c28:	ee70 0aeb 	vsub.f32	s1, s1, s23
 8016c2c:	2b01      	cmp	r3, #1
 8016c2e:	ed8d 0a04 	vstr	s0, [sp, #16]
 8016c32:	ee30 0a4b 	vsub.f32	s0, s0, s22
 8016c36:	bf02      	ittt	eq
 8016c38:	eef1 7a60 	vnegeq.f32	s15, s1
 8016c3c:	eef0 0a40 	vmoveq.f32	s1, s0
 8016c40:	eeb0 0a67 	vmoveq.f32	s0, s15
 8016c44:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8016c48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c4c:	d134      	bne.n	8016cb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 8016c4e:	2301      	movs	r3, #1
 8016c50:	74a3      	strb	r3, [r4, #18]
 8016c52:	f899 2000 	ldrb.w	r2, [r9]
 8016c56:	7c63      	ldrb	r3, [r4, #17]
 8016c58:	2a01      	cmp	r2, #1
 8016c5a:	f040 80a3 	bne.w	8016da4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 8016c5e:	2b00      	cmp	r3, #0
 8016c60:	d072      	beq.n	8016d48 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 8016c62:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 8016c66:	eddf 6a73 	vldr	s13, [pc, #460]	@ 8016e34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 8016c6a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8016c6e:	eef4 baea 	vcmpe.f32	s23, s21
 8016c72:	edc4 7a08 	vstr	s15, [r4, #32]
 8016c76:	eefd 7aea 	vcvt.s32.f32	s15, s21
 8016c7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c7e:	ee17 3a90 	vmov	r3, s15
 8016c82:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 8016c86:	b21a      	sxth	r2, r3
 8016c88:	ee17 3a90 	vmov	r3, s15
 8016c8c:	b21b      	sxth	r3, r3
 8016c8e:	bf47      	ittee	mi
 8016c90:	8123      	strhmi	r3, [r4, #8]
 8016c92:	8162      	strhmi	r2, [r4, #10]
 8016c94:	8122      	strhpl	r2, [r4, #8]
 8016c96:	8163      	strhpl	r3, [r4, #10]
 8016c98:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8016c9c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8016ca0:	1a9b      	subs	r3, r3, r2
 8016ca2:	ee07 3a90 	vmov	s15, r3
 8016ca6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016caa:	2300      	movs	r3, #0
 8016cac:	7463      	strb	r3, [r4, #17]
 8016cae:	edc4 7a07 	vstr	s15, [r4, #28]
 8016cb2:	2301      	movs	r3, #1
 8016cb4:	74a3      	strb	r3, [r4, #18]
 8016cb6:	e03f      	b.n	8016d38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016cb8:	ee80 7a80 	vdiv.f32	s14, s1, s0
 8016cbc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8016cc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016cc4:	ed84 7a05 	vstr	s14, [r4, #20]
 8016cc8:	d102      	bne.n	8016cd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 8016cca:	2301      	movs	r3, #1
 8016ccc:	7463      	strb	r3, [r4, #17]
 8016cce:	e7c0      	b.n	8016c52 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 8016cd0:	2b01      	cmp	r3, #1
 8016cd2:	bf03      	ittte	eq
 8016cd4:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 8016cd8:	ee07 2a90 	vmoveq	s15, r2
 8016cdc:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 8016ce0:	eef0 7a6b 	vmovne.f32	s15, s23
 8016ce4:	bf0a      	itet	eq
 8016ce6:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 8016cea:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 8016cee:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 8016cf2:	2b01      	cmp	r3, #1
 8016cf4:	ee38 8a4b 	vsub.f32	s16, s16, s22
 8016cf8:	ee7a aaeb 	vsub.f32	s21, s21, s23
 8016cfc:	edc4 7a06 	vstr	s15, [r4, #24]
 8016d00:	bf02      	ittt	eq
 8016d02:	eef1 7a48 	vnegeq.f32	s15, s16
 8016d06:	eeb0 8a6a 	vmoveq.f32	s16, s21
 8016d0a:	eef0 aa67 	vmoveq.f32	s21, s15
 8016d0e:	eeca 7a87 	vdiv.f32	s15, s21, s14
 8016d12:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8016e38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 8016d16:	ee38 8a67 	vsub.f32	s16, s16, s15
 8016d1a:	eec7 7a08 	vdiv.f32	s15, s14, s16
 8016d1e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8016d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d26:	ed84 8a07 	vstr	s16, [r4, #28]
 8016d2a:	edc4 7a08 	vstr	s15, [r4, #32]
 8016d2e:	d503      	bpl.n	8016d38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016d30:	eeb1 8a48 	vneg.f32	s16, s16
 8016d34:	ed84 8a07 	vstr	s16, [r4, #28]
 8016d38:	60e7      	str	r7, [r4, #12]
 8016d3a:	7426      	strb	r6, [r4, #16]
 8016d3c:	61ac      	str	r4, [r5, #24]
 8016d3e:	b007      	add	sp, #28
 8016d40:	ecbd 8b0a 	vpop	{d8-d12}
 8016d44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016d48:	7ca3      	ldrb	r3, [r4, #18]
 8016d4a:	2b00      	cmp	r3, #0
 8016d4c:	d0f4      	beq.n	8016d38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016d4e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016d52:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8016e34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 8016d56:	ee00 3a10 	vmov	s0, r3
 8016d5a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8016d5e:	ee30 8a48 	vsub.f32	s16, s0, s16
 8016d62:	ee30 0a4b 	vsub.f32	s0, s0, s22
 8016d66:	ee38 7a40 	vsub.f32	s14, s16, s0
 8016d6a:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8016d6e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8016d72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016d76:	edc4 7a08 	vstr	s15, [r4, #32]
 8016d7a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8016d7e:	ee17 3a90 	vmov	r3, s15
 8016d82:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8016d86:	b21a      	sxth	r2, r3
 8016d88:	ee17 3a90 	vmov	r3, s15
 8016d8c:	b21b      	sxth	r3, r3
 8016d8e:	bfcc      	ite	gt
 8016d90:	8123      	strhgt	r3, [r4, #8]
 8016d92:	8163      	strhle	r3, [r4, #10]
 8016d94:	f04f 0301 	mov.w	r3, #1
 8016d98:	7463      	strb	r3, [r4, #17]
 8016d9a:	bfcc      	ite	gt
 8016d9c:	8162      	strhgt	r2, [r4, #10]
 8016d9e:	8122      	strhle	r2, [r4, #8]
 8016da0:	2300      	movs	r3, #0
 8016da2:	e787      	b.n	8016cb4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 8016da4:	b1db      	cbz	r3, 8016dde <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 8016da6:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 8016daa:	eddf 6a22 	vldr	s13, [pc, #136]	@ 8016e34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 8016dae:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8016db2:	eef4 baea 	vcmpe.f32	s23, s21
 8016db6:	edc4 7a08 	vstr	s15, [r4, #32]
 8016dba:	eefd 7aea 	vcvt.s32.f32	s15, s21
 8016dbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016dc2:	ee17 3a90 	vmov	r3, s15
 8016dc6:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 8016dca:	b21a      	sxth	r2, r3
 8016dcc:	ee17 3a90 	vmov	r3, s15
 8016dd0:	b21b      	sxth	r3, r3
 8016dd2:	bf47      	ittee	mi
 8016dd4:	8123      	strhmi	r3, [r4, #8]
 8016dd6:	8162      	strhmi	r2, [r4, #10]
 8016dd8:	8122      	strhpl	r2, [r4, #8]
 8016dda:	8163      	strhpl	r3, [r4, #10]
 8016ddc:	e7ac      	b.n	8016d38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016dde:	7ca3      	ldrb	r3, [r4, #18]
 8016de0:	2b00      	cmp	r3, #0
 8016de2:	d0a9      	beq.n	8016d38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016de4:	ee38 7a4b 	vsub.f32	s14, s16, s22
 8016de8:	eddf 6a12 	vldr	s13, [pc, #72]	@ 8016e34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 8016dec:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8016df0:	eeb4 bac8 	vcmpe.f32	s22, s16
 8016df4:	edc4 7a08 	vstr	s15, [r4, #32]
 8016df8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8016dfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e00:	ee17 3a90 	vmov	r3, s15
 8016e04:	eefd 7acb 	vcvt.s32.f32	s15, s22
 8016e08:	b21a      	sxth	r2, r3
 8016e0a:	ee17 3a90 	vmov	r3, s15
 8016e0e:	b21b      	sxth	r3, r3
 8016e10:	bf47      	ittee	mi
 8016e12:	8123      	strhmi	r3, [r4, #8]
 8016e14:	8162      	strhmi	r2, [r4, #10]
 8016e16:	8122      	strhpl	r2, [r4, #8]
 8016e18:	8163      	strhpl	r3, [r4, #10]
 8016e1a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8016e1e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8016e22:	1a9b      	subs	r3, r3, r2
 8016e24:	ee07 3a90 	vmov	s15, r3
 8016e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016e2c:	edc4 7a07 	vstr	s15, [r4, #28]
 8016e30:	e782      	b.n	8016d38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8016e32:	bf00      	nop
 8016e34:	447ffffe 	.word	0x447ffffe
 8016e38:	44800000 	.word	0x44800000
 8016e3c:	200138dc 	.word	0x200138dc

08016e40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 8016e40:	b510      	push	{r4, lr}
 8016e42:	2100      	movs	r1, #0
 8016e44:	ed2d 8b02 	vpush	{d8}
 8016e48:	eef0 8a62 	vmov.f32	s17, s5
 8016e4c:	4604      	mov	r4, r0
 8016e4e:	eeb0 8a42 	vmov.f32	s16, s4
 8016e52:	f016 faf7 	bl	802d444 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8016e56:	eef0 7a68 	vmov.f32	s15, s17
 8016e5a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016e5e:	6823      	ldr	r3, [r4, #0]
 8016e60:	ee17 2a90 	vmov	r2, s15
 8016e64:	eef0 7a48 	vmov.f32	s15, s16
 8016e68:	ecbd 8b02 	vpop	{d8}
 8016e6c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016e70:	4620      	mov	r0, r4
 8016e72:	689b      	ldr	r3, [r3, #8]
 8016e74:	ee17 1a90 	vmov	r1, s15
 8016e78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016e7c:	4718      	bx	r3

08016e7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 8016e7e:	b510      	push	{r4, lr}
 8016e80:	2100      	movs	r1, #0
 8016e82:	ed2d 8b02 	vpush	{d8}
 8016e86:	eef0 8a63 	vmov.f32	s17, s7
 8016e8a:	4604      	mov	r4, r0
 8016e8c:	eeb0 8a43 	vmov.f32	s16, s6
 8016e90:	f016 fb9a 	bl	802d5c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8016e94:	eef0 7a68 	vmov.f32	s15, s17
 8016e98:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016e9c:	6823      	ldr	r3, [r4, #0]
 8016e9e:	ee17 2a90 	vmov	r2, s15
 8016ea2:	eef0 7a48 	vmov.f32	s15, s16
 8016ea6:	ecbd 8b02 	vpop	{d8}
 8016eaa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016eae:	4620      	mov	r0, r4
 8016eb0:	689b      	ldr	r3, [r3, #8]
 8016eb2:	ee17 1a90 	vmov	r1, s15
 8016eb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016eba:	4718      	bx	r3

08016ebc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 8016ebc:	b513      	push	{r0, r1, r4, lr}
 8016ebe:	4604      	mov	r4, r0
 8016ec0:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8016ec2:	f006 f88e 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016ec6:	eef0 7a60 	vmov.f32	s15, s1
 8016eca:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016ece:	4620      	mov	r0, r4
 8016ed0:	ee17 2a90 	vmov	r2, s15
 8016ed4:	eef0 7a40 	vmov.f32	s15, s0
 8016ed8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016edc:	ee17 1a90 	vmov	r1, s15
 8016ee0:	b002      	add	sp, #8
 8016ee2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016ee6:	f016 ba07 	b.w	802d2f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

08016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 8016eea:	b513      	push	{r0, r1, r4, lr}
 8016eec:	4604      	mov	r4, r0
 8016eee:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8016ef0:	f006 f877 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8016ef4:	eef0 7a60 	vmov.f32	s15, s1
 8016ef8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016efc:	4620      	mov	r0, r4
 8016efe:	ee17 2a90 	vmov	r2, s15
 8016f02:	eef0 7a40 	vmov.f32	s15, s0
 8016f06:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8016f0a:	ee17 1a90 	vmov	r1, s15
 8016f0e:	b002      	add	sp, #8
 8016f10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016f14:	f016 ba3d 	b.w	802d392 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

08016f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 8016f18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f1a:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 8016f1e:	2400      	movs	r4, #0
 8016f20:	9f07      	ldr	r7, [sp, #28]
 8016f22:	4463      	add	r3, ip
 8016f24:	4626      	mov	r6, r4
 8016f26:	f04f 0e01 	mov.w	lr, #1
 8016f2a:	4563      	cmp	r3, ip
 8016f2c:	d02d      	beq.n	8016f8a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 8016f2e:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 8016f32:	2d06      	cmp	r5, #6
 8016f34:	d8f9      	bhi.n	8016f2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8016f36:	fa0e f505 	lsl.w	r5, lr, r5
 8016f3a:	f015 0f66 	tst.w	r5, #102	@ 0x66
 8016f3e:	d10d      	bne.n	8016f5c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 8016f40:	f015 0f10 	tst.w	r5, #16
 8016f44:	d117      	bne.n	8016f76 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 8016f46:	072d      	lsls	r5, r5, #28
 8016f48:	d5ef      	bpl.n	8016f2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8016f4a:	3801      	subs	r0, #1
 8016f4c:	b91e      	cbnz	r6, 8016f56 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 8016f4e:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 8016f52:	682d      	ldr	r5, [r5, #0]
 8016f54:	600d      	str	r5, [r1, #0]
 8016f56:	b96c      	cbnz	r4, 8016f74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8016f58:	2601      	movs	r6, #1
 8016f5a:	e7e6      	b.n	8016f2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8016f5c:	b926      	cbnz	r6, 8016f68 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 8016f5e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 8016f62:	f853 3c08 	ldr.w	r3, [r3, #-8]
 8016f66:	600b      	str	r3, [r1, #0]
 8016f68:	b924      	cbnz	r4, 8016f74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8016f6a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 8016f6e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8016f72:	6013      	str	r3, [r2, #0]
 8016f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016f76:	3801      	subs	r0, #1
 8016f78:	b91c      	cbnz	r4, 8016f82 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 8016f7a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 8016f7e:	6824      	ldr	r4, [r4, #0]
 8016f80:	6014      	str	r4, [r2, #0]
 8016f82:	2e00      	cmp	r6, #0
 8016f84:	d1f6      	bne.n	8016f74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8016f86:	2401      	movs	r4, #1
 8016f88:	e7cf      	b.n	8016f2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8016f8a:	b90e      	cbnz	r6, 8016f90 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 8016f8c:	2300      	movs	r3, #0
 8016f8e:	600b      	str	r3, [r1, #0]
 8016f90:	2c00      	cmp	r4, #0
 8016f92:	d1ef      	bne.n	8016f74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8016f94:	2300      	movs	r3, #0
 8016f96:	e7ec      	b.n	8016f72 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

08016f98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 8016f98:	b538      	push	{r3, r4, r5, lr}
 8016f9a:	4604      	mov	r4, r0
 8016f9c:	ed2d 8b0a 	vpush	{d8-d12}
 8016fa0:	460d      	mov	r5, r1
 8016fa2:	eef0 ba40 	vmov.f32	s23, s0
 8016fa6:	eeb0 ca60 	vmov.f32	s24, s1
 8016faa:	eef0 aa41 	vmov.f32	s21, s2
 8016fae:	eeb0 ba61 	vmov.f32	s22, s3
 8016fb2:	eeb0 9a42 	vmov.f32	s18, s4
 8016fb6:	eef0 9a62 	vmov.f32	s19, s5
 8016fba:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 8016fbe:	ee7b 8a29 	vadd.f32	s17, s22, s19
 8016fc2:	ee3a 8a89 	vadd.f32	s16, s21, s18
 8016fc6:	ee68 8a8a 	vmul.f32	s17, s17, s20
 8016fca:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8016fce:	ee3c 0a68 	vsub.f32	s0, s24, s17
 8016fd2:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 8016fd6:	ee20 0a00 	vmul.f32	s0, s0, s0
 8016fda:	eea7 0aa7 	vfma.f32	s0, s15, s15
 8016fde:	f016 fccd 	bl	802d97c <sqrtf>
 8016fe2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8016fe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016fea:	d12e      	bne.n	801704a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 8016fec:	ee79 7a6a 	vsub.f32	s15, s18, s21
 8016ff0:	ee39 7acb 	vsub.f32	s14, s19, s22
 8016ff4:	eeb0 8a6a 	vmov.f32	s16, s21
 8016ff8:	eef0 8a4b 	vmov.f32	s17, s22
 8016ffc:	eea7 8a8a 	vfma.f32	s16, s15, s20
 8017000:	eee7 8a0a 	vfma.f32	s17, s14, s20
 8017004:	eea7 8a0a 	vfma.f32	s16, s14, s20
 8017008:	eee7 8aca 	vfms.f32	s17, s15, s20
 801700c:	2d02      	cmp	r5, #2
 801700e:	dc2f      	bgt.n	8017070 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 8017010:	3501      	adds	r5, #1
 8017012:	eef0 1a4b 	vmov.f32	s3, s22
 8017016:	eeb0 1a6a 	vmov.f32	s2, s21
 801701a:	4629      	mov	r1, r5
 801701c:	eef0 2a68 	vmov.f32	s5, s17
 8017020:	eeb0 2a48 	vmov.f32	s4, s16
 8017024:	eef0 0a4c 	vmov.f32	s1, s24
 8017028:	eeb0 0a6b 	vmov.f32	s0, s23
 801702c:	4620      	mov	r0, r4
 801702e:	f7ff ffb3 	bl	8016f98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 8017032:	eef0 0a68 	vmov.f32	s1, s17
 8017036:	eeb0 0a48 	vmov.f32	s0, s16
 801703a:	4620      	mov	r0, r4
 801703c:	f7ff ff55 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8017040:	eeb0 ba68 	vmov.f32	s22, s17
 8017044:	eef0 aa48 	vmov.f32	s21, s16
 8017048:	e7b9      	b.n	8016fbe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 801704a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 801704e:	ee38 8a6b 	vsub.f32	s16, s16, s23
 8017052:	ee78 8acc 	vsub.f32	s17, s17, s24
 8017056:	ee28 7a27 	vmul.f32	s14, s16, s15
 801705a:	ee68 7aa7 	vmul.f32	s15, s17, s15
 801705e:	ee87 8a00 	vdiv.f32	s16, s14, s0
 8017062:	eec7 8a80 	vdiv.f32	s17, s15, s0
 8017066:	ee3b 8a88 	vadd.f32	s16, s23, s16
 801706a:	ee7c 8a28 	vadd.f32	s17, s24, s17
 801706e:	e7cd      	b.n	801700c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 8017070:	eef0 0a68 	vmov.f32	s1, s17
 8017074:	eeb0 0a48 	vmov.f32	s0, s16
 8017078:	4620      	mov	r0, r4
 801707a:	f7ff ff36 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801707e:	ecbd 8b0a 	vpop	{d8-d12}
 8017082:	bd38      	pop	{r3, r4, r5, pc}

08017084 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 8017084:	b510      	push	{r4, lr}
 8017086:	ed2d 8b0a 	vpush	{d8-d12}
 801708a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 801708e:	2b02      	cmp	r3, #2
 8017090:	4604      	mov	r4, r0
 8017092:	eeb0 ca40 	vmov.f32	s24, s0
 8017096:	eeb0 9a60 	vmov.f32	s18, s1
 801709a:	eef0 9a41 	vmov.f32	s19, s2
 801709e:	eef0 8a61 	vmov.f32	s17, s3
 80170a2:	eeb0 ba42 	vmov.f32	s22, s4
 80170a6:	eef0 ba62 	vmov.f32	s23, s5
 80170aa:	eeb0 aa43 	vmov.f32	s20, s6
 80170ae:	eef0 aa63 	vmov.f32	s21, s7
 80170b2:	eeb0 8a44 	vmov.f32	s16, s8
 80170b6:	eef0 ca64 	vmov.f32	s25, s9
 80170ba:	d12c      	bne.n	8017116 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 80170bc:	eef0 0a62 	vmov.f32	s1, s5
 80170c0:	eeb0 0a42 	vmov.f32	s0, s4
 80170c4:	f7ff ff11 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80170c8:	ee79 9acb 	vsub.f32	s19, s19, s22
 80170cc:	ee7a caec 	vsub.f32	s25, s21, s25
 80170d0:	ee78 8aeb 	vsub.f32	s17, s17, s23
 80170d4:	ee3a 8a48 	vsub.f32	s16, s20, s16
 80170d8:	ee69 9aac 	vmul.f32	s19, s19, s25
 80170dc:	ee28 8a88 	vmul.f32	s16, s17, s16
 80170e0:	eef4 9ac8 	vcmpe.f32	s19, s16
 80170e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170e8:	db0f      	blt.n	801710a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 80170ea:	2101      	movs	r1, #1
 80170ec:	eef0 2a6a 	vmov.f32	s5, s21
 80170f0:	eeb0 2a4a 	vmov.f32	s4, s20
 80170f4:	eef0 1a6b 	vmov.f32	s3, s23
 80170f8:	eeb0 1a4b 	vmov.f32	s2, s22
 80170fc:	eef0 0a49 	vmov.f32	s1, s18
 8017100:	eeb0 0a4c 	vmov.f32	s0, s24
 8017104:	4620      	mov	r0, r4
 8017106:	f7ff ff47 	bl	8016f98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 801710a:	eef0 0a6a 	vmov.f32	s1, s21
 801710e:	eeb0 0a4a 	vmov.f32	s0, s20
 8017112:	4620      	mov	r0, r4
 8017114:	e035      	b.n	8017182 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 8017116:	2b01      	cmp	r3, #1
 8017118:	d138      	bne.n	801718c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 801711a:	ee31 4ae2 	vsub.f32	s8, s3, s5
 801711e:	ee33 6a48 	vsub.f32	s12, s6, s16
 8017122:	ee71 7a42 	vsub.f32	s15, s2, s4
 8017126:	ee73 6ae4 	vsub.f32	s13, s7, s9
 801712a:	ee26 7a44 	vnmul.f32	s14, s12, s8
 801712e:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8017132:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8017136:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801713a:	d027      	beq.n	801718c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 801713c:	ee28 8a63 	vnmul.f32	s16, s16, s7
 8017140:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 8017144:	eea4 8a83 	vfma.f32	s16, s9, s6
 8017148:	eee1 8a22 	vfma.f32	s17, s2, s5
 801714c:	ee68 7a67 	vnmul.f32	s15, s16, s15
 8017150:	ee28 8a44 	vnmul.f32	s16, s16, s8
 8017154:	eee6 7a28 	vfma.f32	s15, s12, s17
 8017158:	eea6 8aa8 	vfma.f32	s16, s13, s17
 801715c:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8017160:	eec8 0a07 	vdiv.f32	s1, s16, s14
 8017164:	ee3c ca40 	vsub.f32	s24, s24, s0
 8017168:	ee39 9a60 	vsub.f32	s18, s18, s1
 801716c:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 8017170:	ee29 9a09 	vmul.f32	s18, s18, s18
 8017174:	eeac 9a0c 	vfma.f32	s18, s24, s24
 8017178:	eef4 7ac9 	vcmpe.f32	s15, s18
 801717c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017180:	db04      	blt.n	801718c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8017182:	f7ff feb2 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8017186:	ecbd 8b0a 	vpop	{d8-d12}
 801718a:	bd10      	pop	{r4, pc}
 801718c:	eef0 0a6b 	vmov.f32	s1, s23
 8017190:	eeb0 0a4b 	vmov.f32	s0, s22
 8017194:	4620      	mov	r0, r4
 8017196:	f7ff fea8 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801719a:	e7b6      	b.n	801710a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0801719c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 801719c:	b510      	push	{r4, lr}
 801719e:	ed2d 8b0c 	vpush	{d8-d13}
 80171a2:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 80171a6:	4604      	mov	r4, r0
 80171a8:	eeb0 9a40 	vmov.f32	s18, s0
 80171ac:	eef0 9a60 	vmov.f32	s19, s1
 80171b0:	eef0 aa41 	vmov.f32	s21, s2
 80171b4:	eeb0 ba61 	vmov.f32	s22, s3
 80171b8:	b933      	cbnz	r3, 80171c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 80171ba:	f7ff fe96 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80171be:	eef0 0a4b 	vmov.f32	s1, s22
 80171c2:	eeb0 0a6a 	vmov.f32	s0, s21
 80171c6:	e015      	b.n	80171f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 80171c8:	ee71 8a40 	vsub.f32	s17, s2, s0
 80171cc:	ee31 8ae0 	vsub.f32	s16, s3, s1
 80171d0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80171d4:	2b02      	cmp	r3, #2
 80171d6:	ee68 8aa7 	vmul.f32	s17, s17, s15
 80171da:	ee28 8a27 	vmul.f32	s16, s16, s15
 80171de:	d10f      	bne.n	8017200 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 80171e0:	ee70 0ae8 	vsub.f32	s1, s1, s17
 80171e4:	ee30 0a08 	vadd.f32	s0, s0, s16
 80171e8:	f7ff fe7f 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80171ec:	ee7b 0a68 	vsub.f32	s1, s22, s17
 80171f0:	ee3a 0a88 	vadd.f32	s0, s21, s16
 80171f4:	4620      	mov	r0, r4
 80171f6:	f7ff fe78 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80171fa:	ecbd 8b0c 	vpop	{d8-d13}
 80171fe:	bd10      	pop	{r4, pc}
 8017200:	f7ff fe73 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8017204:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 801733c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 8017208:	eddf ba4d 	vldr	s23, [pc, #308]	@ 8017340 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 801720c:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 8017344 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 8017210:	eddf ca4d 	vldr	s25, [pc, #308]	@ 8017348 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 8017214:	ed9f da4d 	vldr	s26, [pc, #308]	@ 801734c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 8017218:	eef0 0a69 	vmov.f32	s1, s19
 801721c:	eeb0 0a49 	vmov.f32	s0, s18
 8017220:	eee8 0a27 	vfma.f32	s1, s16, s15
 8017224:	4620      	mov	r0, r4
 8017226:	eea8 0aa7 	vfma.f32	s0, s17, s15
 801722a:	eeb1 aa68 	vneg.f32	s20, s17
 801722e:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8017232:	eea8 0a2b 	vfma.f32	s0, s16, s23
 8017236:	f7ff fe58 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801723a:	eddf 7a45 	vldr	s15, [pc, #276]	@ 8017350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 801723e:	eef0 0a69 	vmov.f32	s1, s19
 8017242:	eeb0 0a49 	vmov.f32	s0, s18
 8017246:	eee8 0a27 	vfma.f32	s1, s16, s15
 801724a:	4620      	mov	r0, r4
 801724c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8017250:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8017254:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8017258:	f7ff fe47 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801725c:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8017354 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 8017260:	eef0 0a69 	vmov.f32	s1, s19
 8017264:	eeb0 0a49 	vmov.f32	s0, s18
 8017268:	eee8 0a27 	vfma.f32	s1, s16, s15
 801726c:	4620      	mov	r0, r4
 801726e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8017272:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8017276:	eea8 0a2c 	vfma.f32	s0, s16, s25
 801727a:	f7ff fe36 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801727e:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8017358 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 8017282:	eef0 0a69 	vmov.f32	s1, s19
 8017286:	eeb0 0a49 	vmov.f32	s0, s18
 801728a:	eee8 0a27 	vfma.f32	s1, s16, s15
 801728e:	4620      	mov	r0, r4
 8017290:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8017294:	eeea 0a0d 	vfma.f32	s1, s20, s26
 8017298:	eea8 0a0d 	vfma.f32	s0, s16, s26
 801729c:	f7ff fe25 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80172a0:	ee79 0a88 	vadd.f32	s1, s19, s16
 80172a4:	ee39 0a28 	vadd.f32	s0, s18, s17
 80172a8:	ee70 0ae8 	vsub.f32	s1, s1, s17
 80172ac:	ee30 0a08 	vadd.f32	s0, s0, s16
 80172b0:	4620      	mov	r0, r4
 80172b2:	f7ff fe1a 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80172b6:	eddf 7a29 	vldr	s15, [pc, #164]	@ 801735c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 80172ba:	eef0 0a69 	vmov.f32	s1, s19
 80172be:	eeb0 0a49 	vmov.f32	s0, s18
 80172c2:	eee8 0a27 	vfma.f32	s1, s16, s15
 80172c6:	4620      	mov	r0, r4
 80172c8:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80172cc:	eeea 0a0d 	vfma.f32	s1, s20, s26
 80172d0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 80172d4:	f7ff fe09 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80172d8:	eddf 7a21 	vldr	s15, [pc, #132]	@ 8017360 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 80172dc:	eef0 0a69 	vmov.f32	s1, s19
 80172e0:	eeb0 0a49 	vmov.f32	s0, s18
 80172e4:	eee8 0a27 	vfma.f32	s1, s16, s15
 80172e8:	4620      	mov	r0, r4
 80172ea:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80172ee:	eeea 0a2c 	vfma.f32	s1, s20, s25
 80172f2:	eea8 0a2c 	vfma.f32	s0, s16, s25
 80172f6:	f7ff fdf8 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80172fa:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8017364 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 80172fe:	eef0 0a69 	vmov.f32	s1, s19
 8017302:	eeb0 0a49 	vmov.f32	s0, s18
 8017306:	eee8 0a27 	vfma.f32	s1, s16, s15
 801730a:	4620      	mov	r0, r4
 801730c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8017310:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8017314:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8017318:	f7ff fde7 	bl	8016eea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801731c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8017368 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 8017320:	eef0 0a69 	vmov.f32	s1, s19
 8017324:	eeb0 0a49 	vmov.f32	s0, s18
 8017328:	eee8 0a27 	vfma.f32	s1, s16, s15
 801732c:	4620      	mov	r0, r4
 801732e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8017332:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8017336:	eea8 0a2b 	vfma.f32	s0, s16, s23
 801733a:	e73e      	b.n	80171ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 801733c:	3d23d70a 	.word	0x3d23d70a
 8017340:	3e8f5c29 	.word	0x3e8f5c29
 8017344:	3f19999a 	.word	0x3f19999a
 8017348:	3f4ccccd 	.word	0x3f4ccccd
 801734c:	3f75c28f 	.word	0x3f75c28f
 8017350:	3e4ccccd 	.word	0x3e4ccccd
 8017354:	3ecccccd 	.word	0x3ecccccd
 8017358:	3f3851ec 	.word	0x3f3851ec
 801735c:	3fa3d70a 	.word	0x3fa3d70a
 8017360:	3fcccccd 	.word	0x3fcccccd
 8017364:	3fe66666 	.word	0x3fe66666
 8017368:	3ffae148 	.word	0x3ffae148

0801736c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 801736c:	b570      	push	{r4, r5, r6, lr}
 801736e:	ed2d 8b06 	vpush	{d8-d10}
 8017372:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 8017376:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 801737a:	ee30 8ac8 	vsub.f32	s16, s1, s16
 801737e:	ee30 9a49 	vsub.f32	s18, s0, s18
 8017382:	eef0 aa40 	vmov.f32	s21, s0
 8017386:	ee28 0a08 	vmul.f32	s0, s16, s16
 801738a:	4604      	mov	r4, r0
 801738c:	eea9 0a09 	vfma.f32	s0, s18, s18
 8017390:	eeb0 aa60 	vmov.f32	s20, s1
 8017394:	f016 faf2 	bl	802d97c <sqrtf>
 8017398:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801739c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173a0:	dd36      	ble.n	8017410 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 80173a2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 80173a6:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 80173aa:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 80173ae:	eec0 6a27 	vdiv.f32	s13, s0, s15
 80173b2:	2600      	movs	r6, #0
 80173b4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 80173b8:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 80173bc:	eec8 8a26 	vdiv.f32	s17, s16, s13
 80173c0:	ee89 8a26 	vdiv.f32	s16, s18, s13
 80173c4:	ee70 9a28 	vadd.f32	s19, s0, s17
 80173c8:	ee30 9ac8 	vsub.f32	s18, s1, s16
 80173cc:	ee78 8aaa 	vadd.f32	s17, s17, s21
 80173d0:	ee3a 8a48 	vsub.f32	s16, s20, s16
 80173d4:	b1fd      	cbz	r5, 8017416 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 80173d6:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 80173da:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 80173de:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 80173e2:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 80173e6:	eef0 0a49 	vmov.f32	s1, s18
 80173ea:	eeb0 0a69 	vmov.f32	s0, s19
 80173ee:	4620      	mov	r0, r4
 80173f0:	f7ff fd64 	bl	8016ebc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 80173f4:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 80173f8:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 80173fc:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 8017400:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 8017404:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 8017408:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 801740c:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 8017410:	ecbd 8b06 	vpop	{d8-d10}
 8017414:	bd70      	pop	{r4, r5, r6, pc}
 8017416:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 801741a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 801741e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8017422:	b16b      	cbz	r3, 8017440 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 8017424:	eef0 1a49 	vmov.f32	s3, s18
 8017428:	eeb0 1a69 	vmov.f32	s2, s19
 801742c:	eef0 0a62 	vmov.f32	s1, s5
 8017430:	eeb0 0a42 	vmov.f32	s0, s4
 8017434:	4620      	mov	r0, r4
 8017436:	f7ff feb1 	bl	801719c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 801743a:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 801743e:	e7db      	b.n	80173f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 8017440:	eef0 4a48 	vmov.f32	s9, s16
 8017444:	eeb0 4a68 	vmov.f32	s8, s17
 8017448:	eef0 3a49 	vmov.f32	s7, s18
 801744c:	eeb0 3a69 	vmov.f32	s6, s19
 8017450:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8017454:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 8017458:	4620      	mov	r0, r4
 801745a:	f7ff fe13 	bl	8017084 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 801745e:	e7cb      	b.n	80173f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

08017460 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 8017460:	ee07 2a90 	vmov	s15, r2
 8017464:	ee07 1a10 	vmov	s14, r1
 8017468:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801746c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8017470:	eddf 7a03 	vldr	s15, [pc, #12]	@ 8017480 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 8017474:	ee60 0aa7 	vmul.f32	s1, s1, s15
 8017478:	ee20 0a27 	vmul.f32	s0, s0, s15
 801747c:	f7ff bf76 	b.w	801736c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8017480:	3d000000 	.word	0x3d000000

08017484 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 8017484:	b538      	push	{r3, r4, r5, lr}
 8017486:	ed2d 8b02 	vpush	{d8}
 801748a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 801748e:	4604      	mov	r4, r0
 8017490:	b31d      	cbz	r5, 80174da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 8017492:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 8017496:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 801749a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 801749e:	ee78 8a67 	vsub.f32	s17, s16, s15
 80174a2:	ee38 8a27 	vadd.f32	s16, s16, s15
 80174a6:	eef0 0a68 	vmov.f32	s1, s17
 80174aa:	f7ff fd07 	bl	8016ebc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 80174ae:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 80174b2:	eef0 1a48 	vmov.f32	s3, s16
 80174b6:	eeb0 0a41 	vmov.f32	s0, s2
 80174ba:	eef0 0a68 	vmov.f32	s1, s17
 80174be:	4620      	mov	r0, r4
 80174c0:	f7ff fe6c 	bl	801719c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 80174c4:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 80174c8:	eef0 1a68 	vmov.f32	s3, s17
 80174cc:	eef0 0a48 	vmov.f32	s1, s16
 80174d0:	eeb0 0a41 	vmov.f32	s0, s2
 80174d4:	4620      	mov	r0, r4
 80174d6:	f7ff fe61 	bl	801719c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 80174da:	ecbd 8b02 	vpop	{d8}
 80174de:	4628      	mov	r0, r5
 80174e0:	bd38      	pop	{r3, r4, r5, pc}

080174e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 80174e2:	b510      	push	{r4, lr}
 80174e4:	ed2d 8b02 	vpush	{d8}
 80174e8:	4604      	mov	r4, r0
 80174ea:	eeb0 8a40 	vmov.f32	s16, s0
 80174ee:	eef0 8a60 	vmov.f32	s17, s1
 80174f2:	f7ff ffc7 	bl	8017484 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80174f6:	b9d0      	cbnz	r0, 801752e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 80174f8:	4620      	mov	r0, r4
 80174fa:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 80174fe:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 8017502:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 8017506:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 801750a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 801750e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8017512:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8017516:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 801751a:	eef0 0a68 	vmov.f32	s1, s17
 801751e:	eeb0 0a48 	vmov.f32	s0, s16
 8017522:	f7ff fdaf 	bl	8017084 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8017526:	2001      	movs	r0, #1
 8017528:	ecbd 8b02 	vpop	{d8}
 801752c:	bd10      	pop	{r4, pc}
 801752e:	2000      	movs	r0, #0
 8017530:	e7fa      	b.n	8017528 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

08017532 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 8017532:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 8017536:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 801753a:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 801753e:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 8017542:	f7ff be2b 	b.w	801719c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

08017548 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 8017548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801754c:	b089      	sub	sp, #36	@ 0x24
 801754e:	461c      	mov	r4, r3
 8017550:	f10d 0820 	add.w	r8, sp, #32
 8017554:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8017558:	9304      	str	r3, [sp, #16]
 801755a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801755c:	9105      	str	r1, [sp, #20]
 801755e:	2300      	movs	r3, #0
 8017560:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 8017564:	9306      	str	r3, [sp, #24]
 8017566:	f848 3d04 	str.w	r3, [r8, #-4]!
 801756a:	9b04      	ldr	r3, [sp, #16]
 801756c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 8017570:	4682      	mov	sl, r0
 8017572:	4615      	mov	r5, r2
 8017574:	9b05      	ldr	r3, [sp, #20]
 8017576:	429d      	cmp	r5, r3
 8017578:	d96d      	bls.n	8017656 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 801757a:	3d01      	subs	r5, #1
 801757c:	f819 3005 	ldrb.w	r3, [r9, r5]
 8017580:	2b06      	cmp	r3, #6
 8017582:	d8f7      	bhi.n	8017574 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8017584:	a201      	add	r2, pc, #4	@ (adr r2, 801758c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 8017586:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801758a:	bf00      	nop
 801758c:	080175ab 	.word	0x080175ab
 8017590:	08017575 	.word	0x08017575
 8017594:	080175a9 	.word	0x080175a9
 8017598:	080175cd 	.word	0x080175cd
 801759c:	080175cd 	.word	0x080175cd
 80175a0:	080175d1 	.word	0x080175d1
 80175a4:	08017611 	.word	0x08017611
 80175a8:	3c02      	subs	r4, #2
 80175aa:	4650      	mov	r0, sl
 80175ac:	e9cd 9701 	strd	r9, r7, [sp, #4]
 80175b0:	9400      	str	r4, [sp, #0]
 80175b2:	462b      	mov	r3, r5
 80175b4:	4642      	mov	r2, r8
 80175b6:	a906      	add	r1, sp, #24
 80175b8:	f7ff fcae 	bl	8016f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 80175bc:	eddd 0a07 	vldr	s1, [sp, #28]
 80175c0:	ed9d 0a06 	vldr	s0, [sp, #24]
 80175c4:	4630      	mov	r0, r6
 80175c6:	f7ff fed1 	bl	801736c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80175ca:	e7d3      	b.n	8017574 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 80175cc:	3c01      	subs	r4, #1
 80175ce:	e7ec      	b.n	80175aa <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 80175d0:	f1a4 0b04 	sub.w	fp, r4, #4
 80175d4:	3c02      	subs	r4, #2
 80175d6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 80175da:	4650      	mov	r0, sl
 80175dc:	e9cd 9701 	strd	r9, r7, [sp, #4]
 80175e0:	f8cd b000 	str.w	fp, [sp]
 80175e4:	462b      	mov	r3, r5
 80175e6:	4642      	mov	r2, r8
 80175e8:	a906      	add	r1, sp, #24
 80175ea:	f7ff fc95 	bl	8016f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 80175ee:	eddd 2a07 	vldr	s5, [sp, #28]
 80175f2:	ed9d 2a06 	vldr	s4, [sp, #24]
 80175f6:	ed54 1a01 	vldr	s3, [r4, #-4]
 80175fa:	ed14 1a02 	vldr	s2, [r4, #-8]
 80175fe:	edd4 0a01 	vldr	s1, [r4, #4]
 8017602:	ed94 0a00 	vldr	s0, [r4]
 8017606:	4630      	mov	r0, r6
 8017608:	f7ff fc1a 	bl	8016e40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 801760c:	465c      	mov	r4, fp
 801760e:	e7b1      	b.n	8017574 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8017610:	f1a4 0b06 	sub.w	fp, r4, #6
 8017614:	3c02      	subs	r4, #2
 8017616:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 801761a:	4650      	mov	r0, sl
 801761c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8017620:	f8cd b000 	str.w	fp, [sp]
 8017624:	462b      	mov	r3, r5
 8017626:	4642      	mov	r2, r8
 8017628:	a906      	add	r1, sp, #24
 801762a:	f7ff fc75 	bl	8016f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 801762e:	eddd 3a07 	vldr	s7, [sp, #28]
 8017632:	ed9d 3a06 	vldr	s6, [sp, #24]
 8017636:	ed54 2a03 	vldr	s5, [r4, #-12]
 801763a:	ed14 2a04 	vldr	s4, [r4, #-16]
 801763e:	ed54 1a01 	vldr	s3, [r4, #-4]
 8017642:	ed14 1a02 	vldr	s2, [r4, #-8]
 8017646:	edd4 0a01 	vldr	s1, [r4, #4]
 801764a:	ed94 0a00 	vldr	s0, [r4]
 801764e:	4630      	mov	r0, r6
 8017650:	f7ff fc15 	bl	8016e7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8017654:	e7da      	b.n	801760c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 8017656:	9b04      	ldr	r3, [sp, #16]
 8017658:	b113      	cbz	r3, 8017660 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 801765a:	4630      	mov	r0, r6
 801765c:	f7ff ff69 	bl	8017532 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 8017660:	b009      	add	sp, #36	@ 0x24
 8017662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017666:	bf00      	nop

08017668 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 8017668:	eef0 7a60 	vmov.f32	s15, s1
 801766c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8017670:	6803      	ldr	r3, [r0, #0]
 8017672:	ee17 2a90 	vmov	r2, s15
 8017676:	eef0 7a40 	vmov.f32	s15, s0
 801767a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801767e:	689b      	ldr	r3, [r3, #8]
 8017680:	ee17 1a90 	vmov	r1, s15
 8017684:	4718      	bx	r3
	...

08017688 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 8017688:	b510      	push	{r4, lr}
 801768a:	4b04      	ldr	r3, [pc, #16]	@ (801769c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 801768c:	4604      	mov	r4, r0
 801768e:	f840 3b14 	str.w	r3, [r0], #20
 8017692:	f001 fb1d 	bl	8018cd0 <_ZN8touchgfx7OutlineD1Ev>
 8017696:	4620      	mov	r0, r4
 8017698:	bd10      	pop	{r4, pc}
 801769a:	bf00      	nop
 801769c:	08033978 	.word	0x08033978

080176a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 80176a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176a4:	ed2d 8b04 	vpush	{d8-d9}
 80176a8:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 80176ac:	b0b5      	sub	sp, #212	@ 0xd4
 80176ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80176b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176b6:	4605      	mov	r5, r0
 80176b8:	468b      	mov	fp, r1
 80176ba:	9206      	str	r2, [sp, #24]
 80176bc:	461e      	mov	r6, r3
 80176be:	f04f 0400 	mov.w	r4, #0
 80176c2:	f240 814e 	bls.w	8017962 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 80176c6:	23ff      	movs	r3, #255	@ 0xff
 80176c8:	9300      	str	r3, [sp, #0]
 80176ca:	1d02      	adds	r2, r0, #4
 80176cc:	6981      	ldr	r1, [r0, #24]
 80176ce:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 80176d0:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 8017968 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 80176d4:	a808      	add	r0, sp, #32
 80176d6:	f015 fcc3 	bl	802d060 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 80176da:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 80176de:	4ba3      	ldr	r3, [pc, #652]	@ (801796c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 80176e0:	edd5 6a08 	vldr	s13, [r5, #32]
 80176e4:	9308      	str	r3, [sp, #32]
 80176e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80176ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176ee:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80176f2:	bf48      	it	mi
 80176f4:	eef1 7a67 	vnegmi.f32	s15, s15
 80176f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80176fc:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 8017700:	2201      	movs	r2, #1
 8017702:	9325      	str	r3, [sp, #148]	@ 0x94
 8017704:	2300      	movs	r3, #0
 8017706:	ee26 7aa7 	vmul.f32	s14, s13, s15
 801770a:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 801770e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 8017712:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 8017716:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 801771a:	7f6a      	ldrb	r2, [r5, #29]
 801771c:	7fab      	ldrb	r3, [r5, #30]
 801771e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8017722:	435a      	muls	r2, r3
 8017724:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017728:	1c53      	adds	r3, r2, #1
 801772a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801772e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017732:	f04f 0800 	mov.w	r8, #0
 8017736:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 801773a:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 801773e:	942a      	str	r4, [sp, #168]	@ 0xa8
 8017740:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017744:	942b      	str	r4, [sp, #172]	@ 0xac
 8017746:	942c      	str	r4, [sp, #176]	@ 0xb0
 8017748:	942d      	str	r4, [sp, #180]	@ 0xb4
 801774a:	942e      	str	r4, [sp, #184]	@ 0xb8
 801774c:	942f      	str	r4, [sp, #188]	@ 0xbc
 801774e:	9430      	str	r4, [sp, #192]	@ 0xc0
 8017750:	9431      	str	r4, [sp, #196]	@ 0xc4
 8017752:	9432      	str	r4, [sp, #200]	@ 0xc8
 8017754:	9433      	str	r4, [sp, #204]	@ 0xcc
 8017756:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 801775a:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 801775e:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 8017762:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 8017766:	eef0 9a49 	vmov.f32	s19, s18
 801776a:	eeb0 8a49 	vmov.f32	s16, s18
 801776e:	eef0 8a49 	vmov.f32	s17, s18
 8017772:	4644      	mov	r4, r8
 8017774:	46c1      	mov	r9, r8
 8017776:	af08      	add	r7, sp, #32
 8017778:	f04f 0a01 	mov.w	sl, #1
 801777c:	9b06      	ldr	r3, [sp, #24]
 801777e:	454b      	cmp	r3, r9
 8017780:	f000 80cc 	beq.w	801791c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 8017784:	f109 0301 	add.w	r3, r9, #1
 8017788:	9305      	str	r3, [sp, #20]
 801778a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 801778e:	2b06      	cmp	r3, #6
 8017790:	d839      	bhi.n	8017806 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8017792:	e8df f003 	tbb	[pc, r3]
 8017796:	3b04      	.short	0x3b04
 8017798:	817c6f60 	.word	0x817c6f60
 801779c:	a0          	.byte	0xa0
 801779d:	00          	.byte	0x00
 801779e:	45c1      	cmp	r9, r8
 80177a0:	d92b      	bls.n	80177fa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 80177a2:	eef0 0a49 	vmov.f32	s1, s18
 80177a6:	eeb0 0a69 	vmov.f32	s0, s19
 80177aa:	4638      	mov	r0, r7
 80177ac:	f7ff fdde 	bl	801736c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80177b0:	4638      	mov	r0, r7
 80177b2:	f7ff fe67 	bl	8017484 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80177b6:	4681      	mov	r9, r0
 80177b8:	b9f8      	cbnz	r0, 80177fa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 80177ba:	eef0 0a49 	vmov.f32	s1, s18
 80177be:	eeb0 0a69 	vmov.f32	s0, s19
 80177c2:	4638      	mov	r0, r7
 80177c4:	f7ff fe8d 	bl	80174e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 80177c8:	4628      	mov	r0, r5
 80177ca:	e9cd 9702 	strd	r9, r7, [sp, #8]
 80177ce:	e9cd b600 	strd	fp, r6, [sp]
 80177d2:	4623      	mov	r3, r4
 80177d4:	9a05      	ldr	r2, [sp, #20]
 80177d6:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 80177da:	4641      	mov	r1, r8
 80177dc:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 80177e0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 80177e4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 80177e8:	f7ff feae 	bl	8017548 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 80177ec:	eef0 0a49 	vmov.f32	s1, s18
 80177f0:	eeb0 0a69 	vmov.f32	s0, s19
 80177f4:	4638      	mov	r0, r7
 80177f6:	f7ff fe74 	bl	80174e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 80177fa:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80177fe:	eeb0 8a49 	vmov.f32	s16, s18
 8017802:	eef0 8a69 	vmov.f32	s17, s19
 8017806:	f8dd 9014 	ldr.w	r9, [sp, #20]
 801780a:	e7b7      	b.n	801777c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 801780c:	45c1      	cmp	r9, r8
 801780e:	d90d      	bls.n	801782c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8017810:	4638      	mov	r0, r7
 8017812:	f7ff fe37 	bl	8017484 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8017816:	b948      	cbnz	r0, 801782c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8017818:	e9cd a702 	strd	sl, r7, [sp, #8]
 801781c:	e9cd b600 	strd	fp, r6, [sp]
 8017820:	4623      	mov	r3, r4
 8017822:	464a      	mov	r2, r9
 8017824:	4641      	mov	r1, r8
 8017826:	4628      	mov	r0, r5
 8017828:	f7ff fe8e 	bl	8017548 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 801782c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8017830:	edd3 8a00 	vldr	s17, [r3]
 8017834:	ed93 8a01 	vldr	s16, [r3, #4]
 8017838:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 801783c:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 8017840:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8017844:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 8017848:	3402      	adds	r4, #2
 801784a:	46c8      	mov	r8, r9
 801784c:	eeb0 9a48 	vmov.f32	s18, s16
 8017850:	eef0 9a68 	vmov.f32	s19, s17
 8017854:	e7d7      	b.n	8017806 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8017856:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 801785a:	edd3 8a00 	vldr	s17, [r3]
 801785e:	ed93 8a01 	vldr	s16, [r3, #4]
 8017862:	eeb0 0a68 	vmov.f32	s0, s17
 8017866:	eef0 0a48 	vmov.f32	s1, s16
 801786a:	4638      	mov	r0, r7
 801786c:	f7ff fd7e 	bl	801736c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8017870:	3402      	adds	r4, #2
 8017872:	e7c8      	b.n	8017806 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8017874:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8017878:	edd3 8a00 	vldr	s17, [r3]
 801787c:	eef0 0a48 	vmov.f32	s1, s16
 8017880:	eeb0 0a68 	vmov.f32	s0, s17
 8017884:	4638      	mov	r0, r7
 8017886:	f7ff fd71 	bl	801736c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 801788a:	3401      	adds	r4, #1
 801788c:	e7bb      	b.n	8017806 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801788e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8017892:	ed93 8a00 	vldr	s16, [r3]
 8017896:	e7f1      	b.n	801787c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 8017898:	00a3      	lsls	r3, r4, #2
 801789a:	f103 0208 	add.w	r2, r3, #8
 801789e:	f103 090c 	add.w	r9, r3, #12
 80178a2:	4432      	add	r2, r6
 80178a4:	4433      	add	r3, r6
 80178a6:	44b1      	add	r9, r6
 80178a8:	ed92 2a00 	vldr	s4, [r2]
 80178ac:	edd9 2a00 	vldr	s5, [r9]
 80178b0:	edd3 1a01 	vldr	s3, [r3, #4]
 80178b4:	ed93 1a00 	vldr	s2, [r3]
 80178b8:	9207      	str	r2, [sp, #28]
 80178ba:	eef0 0a48 	vmov.f32	s1, s16
 80178be:	eeb0 0a68 	vmov.f32	s0, s17
 80178c2:	4638      	mov	r0, r7
 80178c4:	f7ff fabc 	bl	8016e40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 80178c8:	9a07      	ldr	r2, [sp, #28]
 80178ca:	ed99 8a00 	vldr	s16, [r9]
 80178ce:	edd2 8a00 	vldr	s17, [r2]
 80178d2:	3404      	adds	r4, #4
 80178d4:	e797      	b.n	8017806 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80178d6:	00a3      	lsls	r3, r4, #2
 80178d8:	f103 0210 	add.w	r2, r3, #16
 80178dc:	f103 0914 	add.w	r9, r3, #20
 80178e0:	4432      	add	r2, r6
 80178e2:	4433      	add	r3, r6
 80178e4:	44b1      	add	r9, r6
 80178e6:	ed92 3a00 	vldr	s6, [r2]
 80178ea:	edd9 3a00 	vldr	s7, [r9]
 80178ee:	edd3 2a03 	vldr	s5, [r3, #12]
 80178f2:	ed93 2a02 	vldr	s4, [r3, #8]
 80178f6:	edd3 1a01 	vldr	s3, [r3, #4]
 80178fa:	ed93 1a00 	vldr	s2, [r3]
 80178fe:	9207      	str	r2, [sp, #28]
 8017900:	eef0 0a48 	vmov.f32	s1, s16
 8017904:	eeb0 0a68 	vmov.f32	s0, s17
 8017908:	4638      	mov	r0, r7
 801790a:	f7ff fab8 	bl	8016e7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 801790e:	9a07      	ldr	r2, [sp, #28]
 8017910:	ed99 8a00 	vldr	s16, [r9]
 8017914:	edd2 8a00 	vldr	s17, [r2]
 8017918:	3406      	adds	r4, #6
 801791a:	e774      	b.n	8017806 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801791c:	9b06      	ldr	r3, [sp, #24]
 801791e:	4543      	cmp	r3, r8
 8017920:	af08      	add	r7, sp, #32
 8017922:	d90f      	bls.n	8017944 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 8017924:	4638      	mov	r0, r7
 8017926:	f7ff fdad 	bl	8017484 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801792a:	b958      	cbnz	r0, 8017944 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 801792c:	2301      	movs	r3, #1
 801792e:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8017932:	9703      	str	r7, [sp, #12]
 8017934:	f8cd b000 	str.w	fp, [sp]
 8017938:	4623      	mov	r3, r4
 801793a:	9a06      	ldr	r2, [sp, #24]
 801793c:	4641      	mov	r1, r8
 801793e:	4628      	mov	r0, r5
 8017940:	f7ff fe02 	bl	8017548 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8017944:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 8017948:	4638      	mov	r0, r7
 801794a:	f015 fc1d 	bl	802d188 <_ZN8touchgfx6Canvas6renderEh>
 801794e:	4604      	mov	r4, r0
 8017950:	4638      	mov	r0, r7
 8017952:	f7ff fe99 	bl	8017688 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 8017956:	4620      	mov	r0, r4
 8017958:	b035      	add	sp, #212	@ 0xd4
 801795a:	ecbd 8b04 	vpop	{d8-d9}
 801795e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017962:	2401      	movs	r4, #1
 8017964:	e7f7      	b.n	8017956 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 8017966:	bf00      	nop
 8017968:	00000000 	.word	0x00000000
 801796c:	0803321c 	.word	0x0803321c

08017970 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 8017970:	b510      	push	{r4, lr}
 8017972:	4604      	mov	r4, r0
 8017974:	f7ff fe88 	bl	8017688 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 8017978:	4620      	mov	r0, r4
 801797a:	21b0      	movs	r1, #176	@ 0xb0
 801797c:	f015 ffd3 	bl	802d926 <_ZdlPvj>
 8017980:	4620      	mov	r0, r4
 8017982:	bd10      	pop	{r4, pc}

08017984 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 8017984:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017988:	ed2d 8b06 	vpush	{d8-d10}
 801798c:	b0aa      	sub	sp, #168	@ 0xa8
 801798e:	4698      	mov	r8, r3
 8017990:	23ff      	movs	r3, #255	@ 0xff
 8017992:	4607      	mov	r7, r0
 8017994:	9300      	str	r3, [sp, #0]
 8017996:	4689      	mov	r9, r1
 8017998:	4692      	mov	sl, r2
 801799a:	6981      	ldr	r1, [r0, #24]
 801799c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 801799e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 8017ba8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 80179a2:	1d02      	adds	r2, r0, #4
 80179a4:	a80d      	add	r0, sp, #52	@ 0x34
 80179a6:	f015 fb5b 	bl	802d060 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 80179aa:	7f3b      	ldrb	r3, [r7, #28]
 80179ac:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 8017ba8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 80179b0:	1e5a      	subs	r2, r3, #1
 80179b2:	4253      	negs	r3, r2
 80179b4:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 80179b8:	4153      	adcs	r3, r2
 80179ba:	eeb0 0a60 	vmov.f32	s0, s1
 80179be:	4628      	mov	r0, r5
 80179c0:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 80179c4:	f005 fb0d 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80179c8:	44ca      	add	sl, r9
 80179ca:	eeb0 9a40 	vmov.f32	s18, s0
 80179ce:	eef0 9a60 	vmov.f32	s19, s1
 80179d2:	eef0 8a48 	vmov.f32	s17, s16
 80179d6:	2400      	movs	r4, #0
 80179d8:	45ca      	cmp	sl, r9
 80179da:	f000 80cd 	beq.w	8017b78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 80179de:	f819 3b01 	ldrb.w	r3, [r9], #1
 80179e2:	2b06      	cmp	r3, #6
 80179e4:	d8f8      	bhi.n	80179d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80179e6:	e8df f003 	tbb	[pc, r3]
 80179ea:	0804      	.short	0x0804
 80179ec:	58533f2a 	.word	0x58533f2a
 80179f0:	8a          	.byte	0x8a
 80179f1:	00          	.byte	0x00
 80179f2:	a80d      	add	r0, sp, #52	@ 0x34
 80179f4:	f015 fba6 	bl	802d144 <_ZN8touchgfx6Canvas5closeEv>
 80179f8:	e7ee      	b.n	80179d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80179fa:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80179fe:	edd3 8a00 	vldr	s17, [r3]
 8017a02:	ed93 8a01 	vldr	s16, [r3, #4]
 8017a06:	eeb0 0a68 	vmov.f32	s0, s17
 8017a0a:	eef0 0a48 	vmov.f32	s1, s16
 8017a0e:	4628      	mov	r0, r5
 8017a10:	f005 fae7 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017a14:	eef0 7a60 	vmov.f32	s15, s1
 8017a18:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8017a1c:	a80d      	add	r0, sp, #52	@ 0x34
 8017a1e:	ee17 2a90 	vmov	r2, s15
 8017a22:	eef0 7a40 	vmov.f32	s15, s0
 8017a26:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8017a2a:	eeb0 9a40 	vmov.f32	s18, s0
 8017a2e:	ee17 1a90 	vmov	r1, s15
 8017a32:	eef0 9a60 	vmov.f32	s19, s1
 8017a36:	f015 fc5f 	bl	802d2f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8017a3a:	3402      	adds	r4, #2
 8017a3c:	e7cc      	b.n	80179d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8017a3e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8017a42:	edd3 8a00 	vldr	s17, [r3]
 8017a46:	ed93 8a01 	vldr	s16, [r3, #4]
 8017a4a:	eeb0 0a68 	vmov.f32	s0, s17
 8017a4e:	eef0 0a48 	vmov.f32	s1, s16
 8017a52:	4628      	mov	r0, r5
 8017a54:	f005 fac5 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017a58:	a80d      	add	r0, sp, #52	@ 0x34
 8017a5a:	eeb0 9a40 	vmov.f32	s18, s0
 8017a5e:	eef0 9a60 	vmov.f32	s19, s1
 8017a62:	f7ff fe01 	bl	8017668 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8017a66:	e7e8      	b.n	8017a3a <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 8017a68:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8017a6c:	edd3 8a00 	vldr	s17, [r3]
 8017a70:	eef0 0a48 	vmov.f32	s1, s16
 8017a74:	eeb0 0a68 	vmov.f32	s0, s17
 8017a78:	4628      	mov	r0, r5
 8017a7a:	f005 fab2 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017a7e:	a80d      	add	r0, sp, #52	@ 0x34
 8017a80:	eeb0 9a40 	vmov.f32	s18, s0
 8017a84:	eef0 9a60 	vmov.f32	s19, s1
 8017a88:	3401      	adds	r4, #1
 8017a8a:	f7ff fded 	bl	8017668 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8017a8e:	e7a3      	b.n	80179d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8017a90:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8017a94:	ed93 8a00 	vldr	s16, [r3]
 8017a98:	e7ea      	b.n	8017a70 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 8017a9a:	1ca3      	adds	r3, r4, #2
 8017a9c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8017aa0:	ed53 0a01 	vldr	s1, [r3, #-4]
 8017aa4:	ed13 0a02 	vldr	s0, [r3, #-8]
 8017aa8:	edd3 8a00 	vldr	s17, [r3]
 8017aac:	ed93 8a01 	vldr	s16, [r3, #4]
 8017ab0:	4628      	mov	r0, r5
 8017ab2:	f005 fa96 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017ab6:	4628      	mov	r0, r5
 8017ab8:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8017abc:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8017ac0:	eeb0 0a68 	vmov.f32	s0, s17
 8017ac4:	eef0 0a48 	vmov.f32	s1, s16
 8017ac8:	f005 fa8b 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017acc:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 8017ad0:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 8017ad4:	eef0 2a60 	vmov.f32	s5, s1
 8017ad8:	eeb0 2a40 	vmov.f32	s4, s0
 8017adc:	eeb0 aa40 	vmov.f32	s20, s0
 8017ae0:	eef0 aa60 	vmov.f32	s21, s1
 8017ae4:	eeb0 0a49 	vmov.f32	s0, s18
 8017ae8:	eef0 0a69 	vmov.f32	s1, s19
 8017aec:	a80d      	add	r0, sp, #52	@ 0x34
 8017aee:	f7ff f9a7 	bl	8016e40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8017af2:	3404      	adds	r4, #4
 8017af4:	eef0 9a6a 	vmov.f32	s19, s21
 8017af8:	eeb0 9a4a 	vmov.f32	s18, s20
 8017afc:	e76c      	b.n	80179d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8017afe:	1d26      	adds	r6, r4, #4
 8017b00:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8017b04:	ed56 0a03 	vldr	s1, [r6, #-12]
 8017b08:	ed16 0a04 	vldr	s0, [r6, #-16]
 8017b0c:	edd6 8a00 	vldr	s17, [r6]
 8017b10:	ed96 8a01 	vldr	s16, [r6, #4]
 8017b14:	4628      	mov	r0, r5
 8017b16:	f005 fa64 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017b1a:	4628      	mov	r0, r5
 8017b1c:	ed8d 0a07 	vstr	s0, [sp, #28]
 8017b20:	edcd 0a08 	vstr	s1, [sp, #32]
 8017b24:	ed16 0a02 	vldr	s0, [r6, #-8]
 8017b28:	ed56 0a01 	vldr	s1, [r6, #-4]
 8017b2c:	f005 fa59 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017b30:	4628      	mov	r0, r5
 8017b32:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8017b36:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8017b3a:	eeb0 0a68 	vmov.f32	s0, s17
 8017b3e:	eef0 0a48 	vmov.f32	s1, s16
 8017b42:	f005 fa4e 	bl	801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8017b46:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 8017b4a:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 8017b4e:	eddd 1a08 	vldr	s3, [sp, #32]
 8017b52:	ed9d 1a07 	vldr	s2, [sp, #28]
 8017b56:	eef0 3a60 	vmov.f32	s7, s1
 8017b5a:	eeb0 3a40 	vmov.f32	s6, s0
 8017b5e:	eeb0 aa40 	vmov.f32	s20, s0
 8017b62:	eef0 aa60 	vmov.f32	s21, s1
 8017b66:	eeb0 0a49 	vmov.f32	s0, s18
 8017b6a:	eef0 0a69 	vmov.f32	s1, s19
 8017b6e:	a80d      	add	r0, sp, #52	@ 0x34
 8017b70:	f7ff f985 	bl	8016e7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8017b74:	3406      	adds	r4, #6
 8017b76:	e7bd      	b.n	8017af4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 8017b78:	7f7b      	ldrb	r3, [r7, #29]
 8017b7a:	7fb9      	ldrb	r1, [r7, #30]
 8017b7c:	4359      	muls	r1, r3
 8017b7e:	1c4b      	adds	r3, r1, #1
 8017b80:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017b84:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017b88:	a80d      	add	r0, sp, #52	@ 0x34
 8017b8a:	f015 fafd 	bl	802d188 <_ZN8touchgfx6Canvas6renderEh>
 8017b8e:	4b07      	ldr	r3, [pc, #28]	@ (8017bac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 8017b90:	930d      	str	r3, [sp, #52]	@ 0x34
 8017b92:	4604      	mov	r4, r0
 8017b94:	a812      	add	r0, sp, #72	@ 0x48
 8017b96:	f001 f89b 	bl	8018cd0 <_ZN8touchgfx7OutlineD1Ev>
 8017b9a:	4620      	mov	r0, r4
 8017b9c:	b02a      	add	sp, #168	@ 0xa8
 8017b9e:	ecbd 8b06 	vpop	{d8-d10}
 8017ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ba6:	bf00      	nop
 8017ba8:	00000000 	.word	0x00000000
 8017bac:	08033978 	.word	0x08033978

08017bb0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 8017bb0:	b410      	push	{r4}
 8017bb2:	7f04      	ldrb	r4, [r0, #28]
 8017bb4:	b11c      	cbz	r4, 8017bbe <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 8017bb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017bba:	f7ff bee3 	b.w	8017984 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 8017bbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017bc2:	f7ff bd6d 	b.w	80176a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

08017bc8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 8017bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bcc:	4691      	mov	r9, r2
 8017bce:	4602      	mov	r2, r0
 8017bd0:	4605      	mov	r5, r0
 8017bd2:	f852 0f26 	ldr.w	r0, [r2, #38]!
 8017bd6:	b085      	sub	sp, #20
 8017bd8:	4688      	mov	r8, r1
 8017bda:	6851      	ldr	r1, [r2, #4]
 8017bdc:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 8017be0:	469a      	mov	sl, r3
 8017be2:	ab02      	add	r3, sp, #8
 8017be4:	c303      	stmia	r3!, {r0, r1}
 8017be6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017bea:	2b00      	cmp	r3, #0
 8017bec:	af02      	add	r7, sp, #8
 8017bee:	dd08      	ble.n	8017c02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8017bf0:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 8017bf4:	2c00      	cmp	r4, #0
 8017bf6:	dd04      	ble.n	8017c02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8017bf8:	4a2e      	ldr	r2, [pc, #184]	@ (8017cb4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 8017bfa:	7812      	ldrb	r2, [r2, #0]
 8017bfc:	b122      	cbz	r2, 8017c08 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 8017bfe:	2a01      	cmp	r2, #1
 8017c00:	d02d      	beq.n	8017c5e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 8017c02:	b005      	add	sp, #20
 8017c04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c08:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017c0c:	441c      	add	r4, r3
 8017c0e:	b2a4      	uxth	r4, r4
 8017c10:	b226      	sxth	r6, r4
 8017c12:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017c16:	42b3      	cmp	r3, r6
 8017c18:	daf3      	bge.n	8017c02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8017c1a:	e9cd b700 	strd	fp, r7, [sp]
 8017c1e:	4653      	mov	r3, sl
 8017c20:	464a      	mov	r2, r9
 8017c22:	4641      	mov	r1, r8
 8017c24:	4628      	mov	r0, r5
 8017c26:	f7ff ffc3 	bl	8017bb0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8017c2a:	b940      	cbnz	r0, 8017c3e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 8017c2c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017c30:	2b01      	cmp	r3, #1
 8017c32:	d004      	beq.n	8017c3e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 8017c34:	3301      	adds	r3, #1
 8017c36:	105b      	asrs	r3, r3, #1
 8017c38:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017c3c:	e7ed      	b.n	8017c1a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 8017c3e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8017c42:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017c46:	4413      	add	r3, r2
 8017c48:	b29b      	uxth	r3, r3
 8017c4a:	441a      	add	r2, r3
 8017c4c:	b212      	sxth	r2, r2
 8017c4e:	4296      	cmp	r6, r2
 8017c50:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017c54:	dadd      	bge.n	8017c12 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 8017c56:	1ae3      	subs	r3, r4, r3
 8017c58:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017c5c:	e7d9      	b.n	8017c12 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 8017c5e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 8017c62:	441c      	add	r4, r3
 8017c64:	b2a4      	uxth	r4, r4
 8017c66:	b226      	sxth	r6, r4
 8017c68:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8017c6c:	42b3      	cmp	r3, r6
 8017c6e:	dac8      	bge.n	8017c02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8017c70:	e9cd b700 	strd	fp, r7, [sp]
 8017c74:	4653      	mov	r3, sl
 8017c76:	464a      	mov	r2, r9
 8017c78:	4641      	mov	r1, r8
 8017c7a:	4628      	mov	r0, r5
 8017c7c:	f7ff ff98 	bl	8017bb0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8017c80:	b940      	cbnz	r0, 8017c94 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 8017c82:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017c86:	2b01      	cmp	r3, #1
 8017c88:	d004      	beq.n	8017c94 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 8017c8a:	3301      	adds	r3, #1
 8017c8c:	105b      	asrs	r3, r3, #1
 8017c8e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8017c92:	e7ed      	b.n	8017c70 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 8017c94:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8017c98:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017c9c:	4413      	add	r3, r2
 8017c9e:	b29b      	uxth	r3, r3
 8017ca0:	441a      	add	r2, r3
 8017ca2:	b212      	sxth	r2, r2
 8017ca4:	4296      	cmp	r6, r2
 8017ca6:	f8ad 3008 	strh.w	r3, [sp, #8]
 8017caa:	dadd      	bge.n	8017c68 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 8017cac:	1ae3      	subs	r3, r4, r3
 8017cae:	f8ad 300c 	strh.w	r3, [sp, #12]
 8017cb2:	e7d9      	b.n	8017c68 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 8017cb4:	200138dc 	.word	0x200138dc

08017cb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8017cb8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8017cba:	6803      	ldr	r3, [r0, #0]
 8017cbc:	460d      	mov	r5, r1
 8017cbe:	4604      	mov	r4, r0
 8017cc0:	4601      	mov	r1, r0
 8017cc2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8017cc4:	a802      	add	r0, sp, #8
 8017cc6:	4798      	blx	r3
 8017cc8:	6828      	ldr	r0, [r5, #0]
 8017cca:	6869      	ldr	r1, [r5, #4]
 8017ccc:	466b      	mov	r3, sp
 8017cce:	c303      	stmia	r3!, {r0, r1}
 8017cd0:	4668      	mov	r0, sp
 8017cd2:	4619      	mov	r1, r3
 8017cd4:	f7fd fb98 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8017cd8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8017cda:	b188      	cbz	r0, 8017d00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017cdc:	6803      	ldr	r3, [r0, #0]
 8017cde:	1d21      	adds	r1, r4, #4
 8017ce0:	68db      	ldr	r3, [r3, #12]
 8017ce2:	4798      	blx	r3
 8017ce4:	b160      	cbz	r0, 8017d00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017ce6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017cea:	2b00      	cmp	r3, #0
 8017cec:	dd08      	ble.n	8017d00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017cee:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8017cf2:	2d00      	cmp	r5, #0
 8017cf4:	dd04      	ble.n	8017d00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017cf6:	4a2b      	ldr	r2, [pc, #172]	@ (8017da4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8017cf8:	7812      	ldrb	r2, [r2, #0]
 8017cfa:	b11a      	cbz	r2, 8017d04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8017cfc:	2a01      	cmp	r2, #1
 8017cfe:	d029      	beq.n	8017d54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8017d00:	b004      	add	sp, #16
 8017d02:	bd70      	pop	{r4, r5, r6, pc}
 8017d04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017d08:	441d      	add	r5, r3
 8017d0a:	b2ad      	uxth	r5, r5
 8017d0c:	b22e      	sxth	r6, r5
 8017d0e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8017d12:	42b3      	cmp	r3, r6
 8017d14:	daf4      	bge.n	8017d00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017d16:	6823      	ldr	r3, [r4, #0]
 8017d18:	4669      	mov	r1, sp
 8017d1a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8017d1c:	4620      	mov	r0, r4
 8017d1e:	4798      	blx	r3
 8017d20:	b940      	cbnz	r0, 8017d34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8017d22:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8017d26:	2b01      	cmp	r3, #1
 8017d28:	d004      	beq.n	8017d34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8017d2a:	3301      	adds	r3, #1
 8017d2c:	105b      	asrs	r3, r3, #1
 8017d2e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017d32:	e7f0      	b.n	8017d16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8017d34:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8017d38:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017d3c:	4413      	add	r3, r2
 8017d3e:	b29b      	uxth	r3, r3
 8017d40:	441a      	add	r2, r3
 8017d42:	b212      	sxth	r2, r2
 8017d44:	4296      	cmp	r6, r2
 8017d46:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017d4a:	dae0      	bge.n	8017d0e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8017d4c:	1aeb      	subs	r3, r5, r3
 8017d4e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017d52:	e7dc      	b.n	8017d0e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8017d54:	f8bd 5000 	ldrh.w	r5, [sp]
 8017d58:	441d      	add	r5, r3
 8017d5a:	b2ad      	uxth	r5, r5
 8017d5c:	b22e      	sxth	r6, r5
 8017d5e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8017d62:	42b3      	cmp	r3, r6
 8017d64:	dacc      	bge.n	8017d00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017d66:	6823      	ldr	r3, [r4, #0]
 8017d68:	4669      	mov	r1, sp
 8017d6a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8017d6c:	4620      	mov	r0, r4
 8017d6e:	4798      	blx	r3
 8017d70:	b940      	cbnz	r0, 8017d84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8017d72:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017d76:	2b01      	cmp	r3, #1
 8017d78:	d004      	beq.n	8017d84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8017d7a:	3301      	adds	r3, #1
 8017d7c:	105b      	asrs	r3, r3, #1
 8017d7e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8017d82:	e7f0      	b.n	8017d66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8017d84:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8017d88:	f8bd 3000 	ldrh.w	r3, [sp]
 8017d8c:	4413      	add	r3, r2
 8017d8e:	b29b      	uxth	r3, r3
 8017d90:	441a      	add	r2, r3
 8017d92:	b212      	sxth	r2, r2
 8017d94:	4296      	cmp	r6, r2
 8017d96:	f8ad 3000 	strh.w	r3, [sp]
 8017d9a:	dae0      	bge.n	8017d5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8017d9c:	1aeb      	subs	r3, r5, r3
 8017d9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8017da2:	e7dc      	b.n	8017d5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8017da4:	200138dc 	.word	0x200138dc

08017da8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8017da8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8017daa:	6803      	ldr	r3, [r0, #0]
 8017dac:	4604      	mov	r4, r0
 8017dae:	4601      	mov	r1, r0
 8017db0:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8017db2:	4668      	mov	r0, sp
 8017db4:	4798      	blx	r3
 8017db6:	2100      	movs	r1, #0
 8017db8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8017dbc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8017dc0:	9102      	str	r1, [sp, #8]
 8017dc2:	4668      	mov	r0, sp
 8017dc4:	a902      	add	r1, sp, #8
 8017dc6:	f8ad 200c 	strh.w	r2, [sp, #12]
 8017dca:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017dce:	f7fd fb1b 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8017dd2:	6823      	ldr	r3, [r4, #0]
 8017dd4:	4669      	mov	r1, sp
 8017dd6:	691b      	ldr	r3, [r3, #16]
 8017dd8:	4620      	mov	r0, r4
 8017dda:	4798      	blx	r3
 8017ddc:	b004      	add	sp, #16
 8017dde:	bd10      	pop	{r4, pc}

08017de0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8017de0:	2101      	movs	r1, #1
 8017de2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8017de6:	490b      	ldr	r1, [pc, #44]	@ (8017e14 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8017de8:	6001      	str	r1, [r0, #0]
 8017dea:	2200      	movs	r2, #0
 8017dec:	21ff      	movs	r1, #255	@ 0xff
 8017dee:	8082      	strh	r2, [r0, #4]
 8017df0:	80c2      	strh	r2, [r0, #6]
 8017df2:	8102      	strh	r2, [r0, #8]
 8017df4:	8142      	strh	r2, [r0, #10]
 8017df6:	8182      	strh	r2, [r0, #12]
 8017df8:	81c2      	strh	r2, [r0, #14]
 8017dfa:	8202      	strh	r2, [r0, #16]
 8017dfc:	8242      	strh	r2, [r0, #18]
 8017dfe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017e02:	61c2      	str	r2, [r0, #28]
 8017e04:	8402      	strh	r2, [r0, #32]
 8017e06:	8442      	strh	r2, [r0, #34]	@ 0x22
 8017e08:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8017e0c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 8017e10:	6282      	str	r2, [r0, #40]	@ 0x28
 8017e12:	4770      	bx	lr
 8017e14:	0803327c 	.word	0x0803327c

08017e18 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8017e18:	b508      	push	{r3, lr}
 8017e1a:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 8017e1e:	b10b      	cbz	r3, 8017e24 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 8017e20:	f7e9 fe50 	bl	8001ac4 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8017e24:	bd08      	pop	{r3, pc}

08017e26 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 8017e26:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8017e2a:	4770      	bx	lr

08017e2c <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8017e2c:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
 8017e30:	4770      	bx	lr

08017e32 <_ZN8touchgfx13ScalableImageD1Ev>:
 8017e32:	4770      	bx	lr

08017e34 <_ZN8touchgfx13ScalableImageD0Ev>:
 8017e34:	b510      	push	{r4, lr}
 8017e36:	212c      	movs	r1, #44	@ 0x2c
 8017e38:	4604      	mov	r4, r0
 8017e3a:	f015 fd74 	bl	802d926 <_ZdlPvj>
 8017e3e:	4620      	mov	r0, r4
 8017e40:	bd10      	pop	{r4, pc}

08017e42 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8017e42:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e44:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8017e48:	2bff      	cmp	r3, #255	@ 0xff
 8017e4a:	b085      	sub	sp, #20
 8017e4c:	4604      	mov	r4, r0
 8017e4e:	460d      	mov	r5, r1
 8017e50:	d128      	bne.n	8017ea4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8017e52:	f101 0626 	add.w	r6, r1, #38	@ 0x26
 8017e56:	4631      	mov	r1, r6
 8017e58:	4668      	mov	r0, sp
 8017e5a:	f006 fd4d 	bl	801e8f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017e5e:	4630      	mov	r0, r6
 8017e60:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 8017e64:	f006 fce0 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017e68:	4287      	cmp	r7, r0
 8017e6a:	d11b      	bne.n	8017ea4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8017e6c:	4630      	mov	r0, r6
 8017e6e:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8017e72:	f006 fd0d 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017e76:	4287      	cmp	r7, r0
 8017e78:	d114      	bne.n	8017ea4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8017e7a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8017e7e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017e82:	2100      	movs	r1, #0
 8017e84:	466b      	mov	r3, sp
 8017e86:	9102      	str	r1, [sp, #8]
 8017e88:	cb03      	ldmia	r3!, {r0, r1}
 8017e8a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8017e8e:	6020      	str	r0, [r4, #0]
 8017e90:	6061      	str	r1, [r4, #4]
 8017e92:	4620      	mov	r0, r4
 8017e94:	4619      	mov	r1, r3
 8017e96:	f8ad 200c 	strh.w	r2, [sp, #12]
 8017e9a:	f7fd fab5 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8017e9e:	4620      	mov	r0, r4
 8017ea0:	b005      	add	sp, #20
 8017ea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017ea4:	2300      	movs	r3, #0
 8017ea6:	8023      	strh	r3, [r4, #0]
 8017ea8:	8063      	strh	r3, [r4, #2]
 8017eaa:	80a3      	strh	r3, [r4, #4]
 8017eac:	80e3      	strh	r3, [r4, #6]
 8017eae:	e7f6      	b.n	8017e9e <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

08017eb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8017eb0:	b538      	push	{r3, r4, r5, lr}
 8017eb2:	2300      	movs	r3, #0
 8017eb4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8017eb8:	8083      	strh	r3, [r0, #4]
 8017eba:	80c3      	strh	r3, [r0, #6]
 8017ebc:	8103      	strh	r3, [r0, #8]
 8017ebe:	8143      	strh	r3, [r0, #10]
 8017ec0:	8183      	strh	r3, [r0, #12]
 8017ec2:	81c3      	strh	r3, [r0, #14]
 8017ec4:	8203      	strh	r3, [r0, #16]
 8017ec6:	8243      	strh	r3, [r0, #18]
 8017ec8:	61c3      	str	r3, [r0, #28]
 8017eca:	8403      	strh	r3, [r0, #32]
 8017ecc:	8443      	strh	r3, [r0, #34]	@ 0x22
 8017ece:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
 8017ed2:	2501      	movs	r5, #1
 8017ed4:	4b08      	ldr	r3, [pc, #32]	@ (8017ef8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 8017ed6:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
 8017eda:	6003      	str	r3, [r0, #0]
 8017edc:	880b      	ldrh	r3, [r1, #0]
 8017ede:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8017ee0:	23ff      	movs	r3, #255	@ 0xff
 8017ee2:	4604      	mov	r4, r0
 8017ee4:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8017ee8:	f000 fe7e 	bl	8018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8017eec:	4b03      	ldr	r3, [pc, #12]	@ (8017efc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8017eee:	6023      	str	r3, [r4, #0]
 8017ef0:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
 8017ef4:	4620      	mov	r0, r4
 8017ef6:	bd38      	pop	{r3, r4, r5, pc}
 8017ef8:	080334c8 	.word	0x080334c8
 8017efc:	080332f4 	.word	0x080332f4

08017f00 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8017f00:	4603      	mov	r3, r0
 8017f02:	3026      	adds	r0, #38	@ 0x26
 8017f04:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8017f08:	b90b      	cbnz	r3, 8017f0e <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8017f0a:	f005 b917 	b.w	801d13c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8017f0e:	f005 b925 	b.w	801d15c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08017f14 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8017f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f18:	4604      	mov	r4, r0
 8017f1a:	b0b3      	sub	sp, #204	@ 0xcc
 8017f1c:	469b      	mov	fp, r3
 8017f1e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8017f22:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8017f26:	f8ad 304a 	strh.w	r3, [sp, #74]	@ 0x4a
 8017f2a:	ab11      	add	r3, sp, #68	@ 0x44
 8017f2c:	2500      	movs	r5, #0
 8017f2e:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
 8017f32:	4618      	mov	r0, r3
 8017f34:	9206      	str	r2, [sp, #24]
 8017f36:	9511      	str	r5, [sp, #68]	@ 0x44
 8017f38:	9307      	str	r3, [sp, #28]
 8017f3a:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
 8017f3e:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
 8017f42:	f7fd fa61 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8017f46:	9b07      	ldr	r3, [sp, #28]
 8017f48:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017f4c:	ad13      	add	r5, sp, #76	@ 0x4c
 8017f4e:	e885 0003 	stmia.w	r5, {r0, r1}
 8017f52:	6821      	ldr	r1, [r4, #0]
 8017f54:	4620      	mov	r0, r4
 8017f56:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8017f58:	4629      	mov	r1, r5
 8017f5a:	47b0      	blx	r6
 8017f5c:	4621      	mov	r1, r4
 8017f5e:	a815      	add	r0, sp, #84	@ 0x54
 8017f60:	f004 fc9e 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f64:	a815      	add	r0, sp, #84	@ 0x54
 8017f66:	f003 f899 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f6a:	9b07      	ldr	r3, [sp, #28]
 8017f6c:	1d26      	adds	r6, r4, #4
 8017f6e:	4618      	mov	r0, r3
 8017f70:	4631      	mov	r1, r6
 8017f72:	f003 f8d7 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f76:	4628      	mov	r0, r5
 8017f78:	f104 0526 	add.w	r5, r4, #38	@ 0x26
 8017f7c:	f003 f88e 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f80:	4628      	mov	r0, r5
 8017f82:	f006 fd43 	bl	801ea0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8017f86:	9007      	str	r0, [sp, #28]
 8017f88:	2800      	cmp	r0, #0
 8017f8a:	f000 80ce 	beq.w	801812a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 8017f8e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8017f92:	920c      	str	r2, [sp, #48]	@ 0x30
 8017f94:	f8da 2000 	ldr.w	r2, [sl]
 8017f98:	f8db 1000 	ldr.w	r1, [fp]
 8017f9c:	920d      	str	r2, [sp, #52]	@ 0x34
 8017f9e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8017fa2:	9109      	str	r1, [sp, #36]	@ 0x24
 8017fa4:	920e      	str	r2, [sp, #56]	@ 0x38
 8017fa6:	f8db 1004 	ldr.w	r1, [fp, #4]
 8017faa:	f8da 2008 	ldr.w	r2, [sl, #8]
 8017fae:	910a      	str	r1, [sp, #40]	@ 0x28
 8017fb0:	920f      	str	r2, [sp, #60]	@ 0x3c
 8017fb2:	f8db 1008 	ldr.w	r1, [fp, #8]
 8017fb6:	f8da 200c 	ldr.w	r2, [sl, #12]
 8017fba:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017fbc:	9210      	str	r2, [sp, #64]	@ 0x40
 8017fbe:	a90d      	add	r1, sp, #52	@ 0x34
 8017fc0:	4632      	mov	r2, r6
 8017fc2:	a809      	add	r0, sp, #36	@ 0x24
 8017fc4:	f003 f892 	bl	801b0ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8017fc8:	4632      	mov	r2, r6
 8017fca:	a90e      	add	r1, sp, #56	@ 0x38
 8017fcc:	a80a      	add	r0, sp, #40	@ 0x28
 8017fce:	f003 f88d 	bl	801b0ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8017fd2:	4632      	mov	r2, r6
 8017fd4:	a90f      	add	r1, sp, #60	@ 0x3c
 8017fd6:	a80b      	add	r0, sp, #44	@ 0x2c
 8017fd8:	f003 f888 	bl	801b0ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8017fdc:	4632      	mov	r2, r6
 8017fde:	a910      	add	r1, sp, #64	@ 0x40
 8017fe0:	a80c      	add	r0, sp, #48	@ 0x30
 8017fe2:	f003 f883 	bl	801b0ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8017fe6:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
 8017fea:	ed97 3a00 	vldr	s6, [r7]
 8017fee:	edd7 4a01 	vldr	s9, [r7, #4]
 8017ff2:	ed99 2a00 	vldr	s4, [r9]
 8017ff6:	edd8 2a00 	vldr	s5, [r8]
 8017ffa:	edd9 3a01 	vldr	s7, [r9, #4]
 8017ffe:	ed98 4a01 	vldr	s8, [r8, #4]
 8018002:	ed99 5a02 	vldr	s10, [r9, #8]
 8018006:	edd8 5a02 	vldr	s11, [r8, #8]
 801800a:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 801800e:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8018012:	ed8d 2a20 	vstr	s4, [sp, #128]	@ 0x80
 8018016:	eef0 6a67 	vmov.f32	s13, s15
 801801a:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
 801801e:	edcd 2a21 	vstr	s5, [sp, #132]	@ 0x84
 8018022:	eeb0 7a67 	vmov.f32	s14, s15
 8018026:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
 801802a:	ed8d 3a22 	vstr	s6, [sp, #136]	@ 0x88
 801802e:	eeb0 6a67 	vmov.f32	s12, s15
 8018032:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8018036:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
 801803a:	edcd 3a25 	vstr	s7, [sp, #148]	@ 0x94
 801803e:	ee16 6a10 	vmov	r6, s12
 8018042:	eeb0 6a67 	vmov.f32	s12, s15
 8018046:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801804a:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
 801804e:	ed8d 4a26 	vstr	s8, [sp, #152]	@ 0x98
 8018052:	ee16 0a10 	vmov	r0, s12
 8018056:	eeb0 6a67 	vmov.f32	s12, s15
 801805a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801805e:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
 8018062:	edcd 4a27 	vstr	s9, [sp, #156]	@ 0x9c
 8018066:	ee16 1a10 	vmov	r1, s12
 801806a:	eeb0 6a67 	vmov.f32	s12, s15
 801806e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8018072:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8018076:	ee16 2a10 	vmov	r2, s12
 801807a:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
 801807e:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
 8018082:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8018086:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 801808a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801808e:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
 8018092:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
 8018096:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
 801809a:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801809e:	9624      	str	r6, [sp, #144]	@ 0x90
 80180a0:	68ff      	ldr	r7, [r7, #12]
 80180a2:	ed8d 5a2a 	vstr	s10, [sp, #168]	@ 0xa8
 80180a6:	922d      	str	r2, [sp, #180]	@ 0xb4
 80180a8:	4a21      	ldr	r2, [pc, #132]	@ (8018130 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 80180aa:	9b06      	ldr	r3, [sp, #24]
 80180ac:	8812      	ldrh	r2, [r2, #0]
 80180ae:	9317      	str	r3, [sp, #92]	@ 0x5c
 80180b0:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80180b4:	9b07      	ldr	r3, [sp, #28]
 80180b6:	9218      	str	r2, [sp, #96]	@ 0x60
 80180b8:	4628      	mov	r0, r5
 80180ba:	9319      	str	r3, [sp, #100]	@ 0x64
 80180bc:	edcd 5a2b 	vstr	s11, [sp, #172]	@ 0xac
 80180c0:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
 80180c4:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
 80180c8:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
 80180cc:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
 80180d0:	9731      	str	r7, [sp, #196]	@ 0xc4
 80180d2:	f006 fccb 	bl	801ea6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80180d6:	901a      	str	r0, [sp, #104]	@ 0x68
 80180d8:	4628      	mov	r0, r5
 80180da:	f006 fba5 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80180de:	901b      	str	r0, [sp, #108]	@ 0x6c
 80180e0:	4628      	mov	r0, r5
 80180e2:	f006 fbd5 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80180e6:	901c      	str	r0, [sp, #112]	@ 0x70
 80180e8:	4628      	mov	r0, r5
 80180ea:	f006 fb9d 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80180ee:	4b11      	ldr	r3, [pc, #68]	@ (8018134 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 80180f0:	901d      	str	r0, [sp, #116]	@ 0x74
 80180f2:	681b      	ldr	r3, [r3, #0]
 80180f4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80180f8:	b10a      	cbz	r2, 80180fe <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 80180fa:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
 80180fc:	b905      	cbnz	r5, 8018100 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 80180fe:	689d      	ldr	r5, [r3, #8]
 8018100:	682b      	ldr	r3, [r5, #0]
 8018102:	4620      	mov	r0, r4
 8018104:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
 8018106:	f7ff fefb 	bl	8017f00 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 801810a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801810e:	9304      	str	r3, [sp, #16]
 8018110:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8018114:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8018118:	ab13      	add	r3, sp, #76	@ 0x4c
 801811a:	9301      	str	r3, [sp, #4]
 801811c:	ab15      	add	r3, sp, #84	@ 0x54
 801811e:	9300      	str	r3, [sp, #0]
 8018120:	aa1e      	add	r2, sp, #120	@ 0x78
 8018122:	ab19      	add	r3, sp, #100	@ 0x64
 8018124:	a917      	add	r1, sp, #92	@ 0x5c
 8018126:	4628      	mov	r0, r5
 8018128:	47b0      	blx	r6
 801812a:	b033      	add	sp, #204	@ 0xcc
 801812c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018130:	200138de 	.word	0x200138de
 8018134:	200138e4 	.word	0x200138e4

08018138 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8018138:	b570      	push	{r4, r5, r6, lr}
 801813a:	ed2d 8b04 	vpush	{d8-d9}
 801813e:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 8018142:	b098      	sub	sp, #96	@ 0x60
 8018144:	4604      	mov	r4, r0
 8018146:	460e      	mov	r6, r1
 8018148:	2b00      	cmp	r3, #0
 801814a:	d065      	beq.n	8018218 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 801814c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8018150:	ed9f 8a38 	vldr	s16, [pc, #224]	@ 8018234 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 8018154:	ee09 3a10 	vmov	s18, r3
 8018158:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801815c:	f100 0526 	add.w	r5, r0, #38	@ 0x26
 8018160:	ee08 3a90 	vmov	s17, r3
 8018164:	4628      	mov	r0, r5
 8018166:	4b34      	ldr	r3, [pc, #208]	@ (8018238 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8018168:	930c      	str	r3, [sp, #48]	@ 0x30
 801816a:	930d      	str	r3, [sp, #52]	@ 0x34
 801816c:	930e      	str	r3, [sp, #56]	@ 0x38
 801816e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018170:	f006 fb5a 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018174:	ee07 0a90 	vmov	s15, r0
 8018178:	4628      	mov	r0, r5
 801817a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 801817e:	f006 fb87 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018182:	4b2e      	ldr	r3, [pc, #184]	@ (801823c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 8018184:	781b      	ldrb	r3, [r3, #0]
 8018186:	ee07 0a90 	vmov	s15, r0
 801818a:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 801818e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8018192:	2b01      	cmp	r3, #1
 8018194:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018198:	ee39 9a08 	vadd.f32	s18, s18, s16
 801819c:	ee78 8a88 	vadd.f32	s17, s17, s16
 80181a0:	eef0 7a48 	vmov.f32	s15, s16
 80181a4:	d13c      	bne.n	8018220 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 80181a6:	eef0 6a69 	vmov.f32	s13, s19
 80181aa:	eeb0 6a47 	vmov.f32	s12, s14
 80181ae:	eef0 5a47 	vmov.f32	s11, s14
 80181b2:	ee19 3a90 	vmov	r3, s19
 80181b6:	eeb0 7a48 	vmov.f32	s14, s16
 80181ba:	eef0 9a48 	vmov.f32	s19, s16
 80181be:	9314      	str	r3, [sp, #80]	@ 0x50
 80181c0:	ab14      	add	r3, sp, #80	@ 0x50
 80181c2:	9303      	str	r3, [sp, #12]
 80181c4:	ab10      	add	r3, sp, #64	@ 0x40
 80181c6:	9302      	str	r3, [sp, #8]
 80181c8:	ab0c      	add	r3, sp, #48	@ 0x30
 80181ca:	9301      	str	r3, [sp, #4]
 80181cc:	ab08      	add	r3, sp, #32
 80181ce:	9300      	str	r3, [sp, #0]
 80181d0:	2200      	movs	r2, #0
 80181d2:	ab04      	add	r3, sp, #16
 80181d4:	4631      	mov	r1, r6
 80181d6:	4620      	mov	r0, r4
 80181d8:	edcd 7a04 	vstr	s15, [sp, #16]
 80181dc:	ed8d 9a05 	vstr	s18, [sp, #20]
 80181e0:	ed8d 9a06 	vstr	s18, [sp, #24]
 80181e4:	edcd 7a07 	vstr	s15, [sp, #28]
 80181e8:	edcd 7a08 	vstr	s15, [sp, #32]
 80181ec:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
 80181f0:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
 80181f4:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
 80181f8:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
 80181fc:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
 8018200:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
 8018204:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
 8018208:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
 801820c:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
 8018210:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
 8018214:	f7ff fe7e 	bl	8017f14 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8018218:	b018      	add	sp, #96	@ 0x60
 801821a:	ecbd 8b04 	vpop	{d8-d9}
 801821e:	bd70      	pop	{r4, r5, r6, pc}
 8018220:	eef0 6a47 	vmov.f32	s13, s14
 8018224:	eef0 5a69 	vmov.f32	s11, s19
 8018228:	eeb0 6a48 	vmov.f32	s12, s16
 801822c:	ee18 3a10 	vmov	r3, s16
 8018230:	e7c5      	b.n	80181be <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 8018232:	bf00      	nop
 8018234:	00000000 	.word	0x00000000
 8018238:	42c80000 	.word	0x42c80000
 801823c:	200138dc 	.word	0x200138dc

08018240 <_ZN8touchgfx8TextArea8setWidthEs>:
 8018240:	b530      	push	{r4, r5, lr}
 8018242:	b085      	sub	sp, #20
 8018244:	6803      	ldr	r3, [r0, #0]
 8018246:	8101      	strh	r1, [r0, #8]
 8018248:	466d      	mov	r5, sp
 801824a:	4601      	mov	r1, r0
 801824c:	4604      	mov	r4, r0
 801824e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8018252:	4628      	mov	r0, r5
 8018254:	4798      	blx	r3
 8018256:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801825a:	343c      	adds	r4, #60	@ 0x3c
 801825c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8018260:	b005      	add	sp, #20
 8018262:	bd30      	pop	{r4, r5, pc}

08018264 <_ZN8touchgfx8TextArea9setHeightEs>:
 8018264:	b530      	push	{r4, r5, lr}
 8018266:	b085      	sub	sp, #20
 8018268:	6803      	ldr	r3, [r0, #0]
 801826a:	8141      	strh	r1, [r0, #10]
 801826c:	466d      	mov	r5, sp
 801826e:	4601      	mov	r1, r0
 8018270:	4604      	mov	r4, r0
 8018272:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8018276:	4628      	mov	r0, r5
 8018278:	4798      	blx	r3
 801827a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801827e:	343c      	adds	r4, #60	@ 0x3c
 8018280:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8018284:	b005      	add	sp, #20
 8018286:	bd30      	pop	{r4, r5, pc}

08018288 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8018288:	2200      	movs	r2, #0
 801828a:	8002      	strh	r2, [r0, #0]
 801828c:	8042      	strh	r2, [r0, #2]
 801828e:	8082      	strh	r2, [r0, #4]
 8018290:	80c2      	strh	r2, [r0, #6]
 8018292:	4770      	bx	lr

08018294 <_ZN8touchgfx8TextArea8setAlphaEh>:
 8018294:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 8018298:	4770      	bx	lr
	...

0801829c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 801829c:	b570      	push	{r4, r5, r6, lr}
 801829e:	6803      	ldr	r3, [r0, #0]
 80182a0:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80182a2:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
 80182a4:	4b09      	ldr	r3, [pc, #36]	@ (80182cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 80182a6:	681b      	ldr	r3, [r3, #0]
 80182a8:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80182ac:	4b08      	ldr	r3, [pc, #32]	@ (80182d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 80182ae:	681b      	ldr	r3, [r3, #0]
 80182b0:	4604      	mov	r4, r0
 80182b2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80182b6:	6803      	ldr	r3, [r0, #0]
 80182b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80182ba:	460d      	mov	r5, r1
 80182bc:	4798      	blx	r3
 80182be:	1a29      	subs	r1, r5, r0
 80182c0:	4633      	mov	r3, r6
 80182c2:	4620      	mov	r0, r4
 80182c4:	b209      	sxth	r1, r1
 80182c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80182ca:	4718      	bx	r3
 80182cc:	2001393c 	.word	0x2001393c
 80182d0:	20013944 	.word	0x20013944

080182d4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 80182d4:	b570      	push	{r4, r5, r6, lr}
 80182d6:	6803      	ldr	r3, [r0, #0]
 80182d8:	4604      	mov	r4, r0
 80182da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80182dc:	4615      	mov	r5, r2
 80182de:	4798      	blx	r3
 80182e0:	6823      	ldr	r3, [r4, #0]
 80182e2:	4629      	mov	r1, r5
 80182e4:	4620      	mov	r0, r4
 80182e6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80182e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80182ec:	4718      	bx	r3

080182ee <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80182ee:	2000      	movs	r0, #0
 80182f0:	4770      	bx	lr

080182f2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 80182f2:	2000      	movs	r0, #0
 80182f4:	4770      	bx	lr
	...

080182f8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80182f8:	4b07      	ldr	r3, [pc, #28]	@ (8018318 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80182fa:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80182fc:	881b      	ldrh	r3, [r3, #0]
 80182fe:	4293      	cmp	r3, r2
 8018300:	bf81      	itttt	hi
 8018302:	4b06      	ldrhi	r3, [pc, #24]	@ (801831c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8018304:	681b      	ldrhi	r3, [r3, #0]
 8018306:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801830a:	7858      	ldrbhi	r0, [r3, #1]
 801830c:	bf8c      	ite	hi
 801830e:	f000 0003 	andhi.w	r0, r0, #3
 8018312:	2000      	movls	r0, #0
 8018314:	4770      	bx	lr
 8018316:	bf00      	nop
 8018318:	20013940 	.word	0x20013940
 801831c:	2001393c 	.word	0x2001393c

08018320 <_ZN8touchgfx8TextAreaD1Ev>:
 8018320:	4770      	bx	lr
	...

08018324 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8018324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018328:	4b10      	ldr	r3, [pc, #64]	@ (801836c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801832a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 801832c:	881b      	ldrh	r3, [r3, #0]
 801832e:	428b      	cmp	r3, r1
 8018330:	4604      	mov	r4, r0
 8018332:	d918      	bls.n	8018366 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8018334:	6803      	ldr	r3, [r0, #0]
 8018336:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8018338:	4b0d      	ldr	r3, [pc, #52]	@ (8018370 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801833a:	6818      	ldr	r0, [r3, #0]
 801833c:	f7f2 f848 	bl	800a3d0 <_ZNK8touchgfx5Texts7getTextEt>
 8018340:	6823      	ldr	r3, [r4, #0]
 8018342:	4606      	mov	r6, r0
 8018344:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8018346:	4620      	mov	r0, r4
 8018348:	4798      	blx	r3
 801834a:	6823      	ldr	r3, [r4, #0]
 801834c:	4607      	mov	r7, r0
 801834e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8018352:	4620      	mov	r0, r4
 8018354:	4798      	blx	r3
 8018356:	463a      	mov	r2, r7
 8018358:	4603      	mov	r3, r0
 801835a:	4631      	mov	r1, r6
 801835c:	4620      	mov	r0, r4
 801835e:	46ac      	mov	ip, r5
 8018360:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8018364:	4760      	bx	ip
 8018366:	2000      	movs	r0, #0
 8018368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801836c:	20013940 	.word	0x20013940
 8018370:	20013948 	.word	0x20013948

08018374 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8018374:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8018378:	4b17      	ldr	r3, [pc, #92]	@ (80183d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801837a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 801837c:	881b      	ldrh	r3, [r3, #0]
 801837e:	428b      	cmp	r3, r1
 8018380:	4604      	mov	r4, r0
 8018382:	d926      	bls.n	80183d2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8018384:	4b15      	ldr	r3, [pc, #84]	@ (80183dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8018386:	681b      	ldr	r3, [r3, #0]
 8018388:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 801838c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8018390:	4b13      	ldr	r3, [pc, #76]	@ (80183e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8018392:	7855      	ldrb	r5, [r2, #1]
 8018394:	681b      	ldr	r3, [r3, #0]
 8018396:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801839a:	6833      	ldr	r3, [r6, #0]
 801839c:	69df      	ldr	r7, [r3, #28]
 801839e:	4b11      	ldr	r3, [pc, #68]	@ (80183e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80183a0:	6818      	ldr	r0, [r3, #0]
 80183a2:	f7f2 f815 	bl	800a3d0 <_ZNK8touchgfx5Texts7getTextEt>
 80183a6:	6823      	ldr	r3, [r4, #0]
 80183a8:	4680      	mov	r8, r0
 80183aa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80183ac:	4620      	mov	r0, r4
 80183ae:	4798      	blx	r3
 80183b0:	6823      	ldr	r3, [r4, #0]
 80183b2:	4681      	mov	r9, r0
 80183b4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80183b8:	4620      	mov	r0, r4
 80183ba:	4798      	blx	r3
 80183bc:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80183c0:	9000      	str	r0, [sp, #0]
 80183c2:	464b      	mov	r3, r9
 80183c4:	4642      	mov	r2, r8
 80183c6:	4629      	mov	r1, r5
 80183c8:	4630      	mov	r0, r6
 80183ca:	47b8      	blx	r7
 80183cc:	b003      	add	sp, #12
 80183ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80183d2:	2000      	movs	r0, #0
 80183d4:	e7fa      	b.n	80183cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80183d6:	bf00      	nop
 80183d8:	20013940 	.word	0x20013940
 80183dc:	2001393c 	.word	0x2001393c
 80183e0:	20013944 	.word	0x20013944
 80183e4:	20013948 	.word	0x20013948

080183e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80183e8:	b40e      	push	{r1, r2, r3}
 80183ea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80183ee:	4b2f      	ldr	r3, [pc, #188]	@ (80184ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80183f0:	881a      	ldrh	r2, [r3, #0]
 80183f2:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 80183f4:	429a      	cmp	r2, r3
 80183f6:	b09d      	sub	sp, #116	@ 0x74
 80183f8:	4604      	mov	r4, r0
 80183fa:	d954      	bls.n	80184a6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80183fc:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 80184b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8018400:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 80184b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8018404:	aa26      	add	r2, sp, #152	@ 0x98
 8018406:	9202      	str	r2, [sp, #8]
 8018408:	f8d9 2000 	ldr.w	r2, [r9]
 801840c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8018410:	f8d8 3000 	ldr.w	r3, [r8]
 8018414:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8018418:	682b      	ldr	r3, [r5, #0]
 801841a:	4628      	mov	r0, r5
 801841c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801841e:	4798      	blx	r3
 8018420:	b207      	sxth	r7, r0
 8018422:	4606      	mov	r6, r0
 8018424:	a803      	add	r0, sp, #12
 8018426:	f005 f9c5 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801842a:	682b      	ldr	r3, [r5, #0]
 801842c:	4628      	mov	r0, r5
 801842e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8018430:	4798      	blx	r3
 8018432:	682b      	ldr	r3, [r5, #0]
 8018434:	4682      	mov	sl, r0
 8018436:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018438:	4628      	mov	r0, r5
 801843a:	4798      	blx	r3
 801843c:	4653      	mov	r3, sl
 801843e:	9000      	str	r0, [sp, #0]
 8018440:	9a02      	ldr	r2, [sp, #8]
 8018442:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8018444:	a803      	add	r0, sp, #12
 8018446:	f005 fa10 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801844a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 801844c:	f8d9 3000 	ldr.w	r3, [r9]
 8018450:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8018454:	8925      	ldrh	r5, [r4, #8]
 8018456:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801845a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801845e:	eba5 050c 	sub.w	r5, r5, ip
 8018462:	784a      	ldrb	r2, [r1, #1]
 8018464:	f8d8 3000 	ldr.w	r3, [r8]
 8018468:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 801846c:	b22d      	sxth	r5, r5
 801846e:	9500      	str	r5, [sp, #0]
 8018470:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8018474:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8018478:	a803      	add	r0, sp, #12
 801847a:	f002 fb15 	bl	801aaa8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801847e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8018482:	18b9      	adds	r1, r7, r2
 8018484:	2900      	cmp	r1, #0
 8018486:	b203      	sxth	r3, r0
 8018488:	dd0b      	ble.n	80184a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801848a:	3b01      	subs	r3, #1
 801848c:	fb13 f302 	smulbb	r3, r3, r2
 8018490:	fb16 3300 	smlabb	r3, r6, r0, r3
 8018494:	b21f      	sxth	r7, r3
 8018496:	4638      	mov	r0, r7
 8018498:	b01d      	add	sp, #116	@ 0x74
 801849a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801849e:	b003      	add	sp, #12
 80184a0:	4770      	bx	lr
 80184a2:	2b00      	cmp	r3, #0
 80184a4:	dcf7      	bgt.n	8018496 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80184a6:	2700      	movs	r7, #0
 80184a8:	e7f5      	b.n	8018496 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80184aa:	bf00      	nop
 80184ac:	20013940 	.word	0x20013940
 80184b0:	2001393c 	.word	0x2001393c
 80184b4:	20013944 	.word	0x20013944

080184b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80184b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184bc:	4bbc      	ldr	r3, [pc, #752]	@ (80187b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80184be:	460c      	mov	r4, r1
 80184c0:	881b      	ldrh	r3, [r3, #0]
 80184c2:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 80184c4:	428b      	cmp	r3, r1
 80184c6:	b0a9      	sub	sp, #164	@ 0xa4
 80184c8:	4680      	mov	r8, r0
 80184ca:	d809      	bhi.n	80184e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80184cc:	2300      	movs	r3, #0
 80184ce:	f04f 32ff 	mov.w	r2, #4294967295
 80184d2:	e9c0 3200 	strd	r3, r2, [r0]
 80184d6:	6083      	str	r3, [r0, #8]
 80184d8:	4640      	mov	r0, r8
 80184da:	b029      	add	sp, #164	@ 0xa4
 80184dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184e0:	4eb4      	ldr	r6, [pc, #720]	@ (80187b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80184e2:	6833      	ldr	r3, [r6, #0]
 80184e4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80184e8:	4bb3      	ldr	r3, [pc, #716]	@ (80187b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80184ea:	681b      	ldr	r3, [r3, #0]
 80184ec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80184f0:	4bb2      	ldr	r3, [pc, #712]	@ (80187bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80184f2:	6818      	ldr	r0, [r3, #0]
 80184f4:	f7f1 ff6c 	bl	800a3d0 <_ZNK8touchgfx5Texts7getTextEt>
 80184f8:	682b      	ldr	r3, [r5, #0]
 80184fa:	4681      	mov	r9, r0
 80184fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80184fe:	4628      	mov	r0, r5
 8018500:	4798      	blx	r3
 8018502:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8018504:	b203      	sxth	r3, r0
 8018506:	4407      	add	r7, r0
 8018508:	9304      	str	r3, [sp, #16]
 801850a:	b2bb      	uxth	r3, r7
 801850c:	9303      	str	r3, [sp, #12]
 801850e:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8018512:	4682      	mov	sl, r0
 8018514:	a80f      	add	r0, sp, #60	@ 0x3c
 8018516:	2b00      	cmp	r3, #0
 8018518:	f040 80a6 	bne.w	8018668 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 801851c:	f005 f94a 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 8018520:	682b      	ldr	r3, [r5, #0]
 8018522:	4628      	mov	r0, r5
 8018524:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8018526:	4798      	blx	r3
 8018528:	682b      	ldr	r3, [r5, #0]
 801852a:	4606      	mov	r6, r0
 801852c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801852e:	4628      	mov	r0, r5
 8018530:	4798      	blx	r3
 8018532:	6823      	ldr	r3, [r4, #0]
 8018534:	4607      	mov	r7, r0
 8018536:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8018538:	4620      	mov	r0, r4
 801853a:	4798      	blx	r3
 801853c:	6823      	ldr	r3, [r4, #0]
 801853e:	4683      	mov	fp, r0
 8018540:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8018544:	4620      	mov	r0, r4
 8018546:	4798      	blx	r3
 8018548:	463b      	mov	r3, r7
 801854a:	e9cd b000 	strd	fp, r0, [sp]
 801854e:	4649      	mov	r1, r9
 8018550:	4632      	mov	r2, r6
 8018552:	a80f      	add	r0, sp, #60	@ 0x3c
 8018554:	f005 f99e 	bl	801d894 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8018558:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801855c:	f8df b254 	ldr.w	fp, [pc, #596]	@ 80187b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8018560:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8018564:	f04f 0600 	mov.w	r6, #0
 8018568:	bf0c      	ite	eq
 801856a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801856e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8018572:	4637      	mov	r7, r6
 8018574:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8018576:	f8db 3000 	ldr.w	r3, [fp]
 801857a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801857e:	4629      	mov	r1, r5
 8018580:	785b      	ldrb	r3, [r3, #1]
 8018582:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8018586:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801858a:	a80f      	add	r0, sp, #60	@ 0x3c
 801858c:	f001 ff93 	bl	801a4b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8018590:	9b03      	ldr	r3, [sp, #12]
 8018592:	4286      	cmp	r6, r0
 8018594:	bfb8      	it	lt
 8018596:	4606      	movlt	r6, r0
 8018598:	3701      	adds	r7, #1
 801859a:	eba9 0903 	sub.w	r9, r9, r3
 801859e:	a80f      	add	r0, sp, #60	@ 0x3c
 80185a0:	b236      	sxth	r6, r6
 80185a2:	b2bf      	uxth	r7, r7
 80185a4:	fa0f f989 	sxth.w	r9, r9
 80185a8:	f005 f92b 	bl	801d802 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80185ac:	b918      	cbnz	r0, 80185b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80185ae:	7a2b      	ldrb	r3, [r5, #8]
 80185b0:	444b      	add	r3, r9
 80185b2:	2b00      	cmp	r3, #0
 80185b4:	dcde      	bgt.n	8018574 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80185b6:	9b03      	ldr	r3, [sp, #12]
 80185b8:	9a04      	ldr	r2, [sp, #16]
 80185ba:	f895 9009 	ldrb.w	r9, [r5, #9]
 80185be:	fb13 f707 	smulbb	r7, r3, r7
 80185c2:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80185c4:	1aff      	subs	r7, r7, r3
 80185c6:	b2bf      	uxth	r7, r7
 80185c8:	b23b      	sxth	r3, r7
 80185ca:	429a      	cmp	r2, r3
 80185cc:	bfa8      	it	ge
 80185ce:	4657      	movge	r7, sl
 80185d0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80185d4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80185d8:	6823      	ldr	r3, [r4, #0]
 80185da:	bf08      	it	eq
 80185dc:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80185e0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80185e2:	bf18      	it	ne
 80185e4:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80185e8:	4620      	mov	r0, r4
 80185ea:	4798      	blx	r3
 80185ec:	444f      	add	r7, r9
 80185ee:	fa1f f987 	uxth.w	r9, r7
 80185f2:	2801      	cmp	r0, #1
 80185f4:	fa0f f789 	sxth.w	r7, r9
 80185f8:	b2b3      	uxth	r3, r6
 80185fa:	f000 80e1 	beq.w	80187c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80185fe:	2802      	cmp	r0, #2
 8018600:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8018604:	f000 80e2 	beq.w	80187cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8018608:	7aea      	ldrb	r2, [r5, #11]
 801860a:	7b2d      	ldrb	r5, [r5, #12]
 801860c:	b236      	sxth	r6, r6
 801860e:	1ab6      	subs	r6, r6, r2
 8018610:	442a      	add	r2, r5
 8018612:	4413      	add	r3, r2
 8018614:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8018618:	fa1f fa86 	uxth.w	sl, r6
 801861c:	b29b      	uxth	r3, r3
 801861e:	2a02      	cmp	r2, #2
 8018620:	fa0f fb8a 	sxth.w	fp, sl
 8018624:	b21e      	sxth	r6, r3
 8018626:	f000 80d5 	beq.w	80187d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801862a:	2a03      	cmp	r2, #3
 801862c:	f000 80dd 	beq.w	80187ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8018630:	2a01      	cmp	r2, #1
 8018632:	f040 80e5 	bne.w	8018800 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8018636:	8925      	ldrh	r5, [r4, #8]
 8018638:	4633      	mov	r3, r6
 801863a:	eba5 0909 	sub.w	r9, r5, r9
 801863e:	463e      	mov	r6, r7
 8018640:	465d      	mov	r5, fp
 8018642:	461f      	mov	r7, r3
 8018644:	fa0f fb89 	sxth.w	fp, r9
 8018648:	4b5c      	ldr	r3, [pc, #368]	@ (80187bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801864a:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 801864c:	6818      	ldr	r0, [r3, #0]
 801864e:	f7f1 febf 	bl	800a3d0 <_ZNK8touchgfx5Texts7getTextEt>
 8018652:	f8a8 b000 	strh.w	fp, [r8]
 8018656:	f8a8 5002 	strh.w	r5, [r8, #2]
 801865a:	f8a8 6004 	strh.w	r6, [r8, #4]
 801865e:	f8a8 7006 	strh.w	r7, [r8, #6]
 8018662:	f8c8 0008 	str.w	r0, [r8, #8]
 8018666:	e737      	b.n	80184d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8018668:	f005 f8a4 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801866c:	682b      	ldr	r3, [r5, #0]
 801866e:	4628      	mov	r0, r5
 8018670:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8018672:	4798      	blx	r3
 8018674:	682b      	ldr	r3, [r5, #0]
 8018676:	4607      	mov	r7, r0
 8018678:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801867a:	4628      	mov	r0, r5
 801867c:	4798      	blx	r3
 801867e:	6823      	ldr	r3, [r4, #0]
 8018680:	4683      	mov	fp, r0
 8018682:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8018684:	4620      	mov	r0, r4
 8018686:	4798      	blx	r3
 8018688:	6822      	ldr	r2, [r4, #0]
 801868a:	9005      	str	r0, [sp, #20]
 801868c:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8018690:	4620      	mov	r0, r4
 8018692:	4790      	blx	r2
 8018694:	9b05      	ldr	r3, [sp, #20]
 8018696:	9001      	str	r0, [sp, #4]
 8018698:	463a      	mov	r2, r7
 801869a:	4649      	mov	r1, r9
 801869c:	9300      	str	r3, [sp, #0]
 801869e:	a80f      	add	r0, sp, #60	@ 0x3c
 80186a0:	465b      	mov	r3, fp
 80186a2:	f005 f8f7 	bl	801d894 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80186a6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80186aa:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80186ae:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80186b0:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 80186b4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80186b8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80186bc:	bf0a      	itet	eq
 80186be:	464a      	moveq	r2, r9
 80186c0:	461a      	movne	r2, r3
 80186c2:	4699      	moveq	r9, r3
 80186c4:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 80186c8:	1ad2      	subs	r2, r2, r3
 80186ca:	6833      	ldr	r3, [r6, #0]
 80186cc:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 80186d0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80186d4:	af0f      	add	r7, sp, #60	@ 0x3c
 80186d6:	7859      	ldrb	r1, [r3, #1]
 80186d8:	9707      	str	r7, [sp, #28]
 80186da:	2300      	movs	r3, #0
 80186dc:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80186e0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80186e4:	f88d 1020 	strb.w	r1, [sp, #32]
 80186e8:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80186ec:	9509      	str	r5, [sp, #36]	@ 0x24
 80186ee:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80186f2:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 80186f6:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 80186fa:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80186fe:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8018702:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018706:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801870a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801870e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8018712:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 8018716:	b350      	cbz	r0, 801876e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8018718:	682b      	ldr	r3, [r5, #0]
 801871a:	4628      	mov	r0, r5
 801871c:	695b      	ldr	r3, [r3, #20]
 801871e:	4798      	blx	r3
 8018720:	4607      	mov	r7, r0
 8018722:	b320      	cbz	r0, 801876e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8018724:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8018726:	6803      	ldr	r3, [r0, #0]
 8018728:	4639      	mov	r1, r7
 801872a:	68db      	ldr	r3, [r3, #12]
 801872c:	4798      	blx	r3
 801872e:	4606      	mov	r6, r0
 8018730:	b1e8      	cbz	r0, 801876e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8018732:	7b43      	ldrb	r3, [r0, #13]
 8018734:	7a82      	ldrb	r2, [r0, #10]
 8018736:	005b      	lsls	r3, r3, #1
 8018738:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801873c:	4313      	orrs	r3, r2
 801873e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8018742:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 8018746:	2b06      	cmp	r3, #6
 8018748:	d111      	bne.n	801876e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801874a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801874c:	6803      	ldr	r3, [r0, #0]
 801874e:	4632      	mov	r2, r6
 8018750:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8018752:	4639      	mov	r1, r7
 8018754:	4798      	blx	r3
 8018756:	7b73      	ldrb	r3, [r6, #13]
 8018758:	005b      	lsls	r3, r3, #1
 801875a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801875e:	7ab3      	ldrb	r3, [r6, #10]
 8018760:	4313      	orrs	r3, r2
 8018762:	4418      	add	r0, r3
 8018764:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018768:	4418      	add	r0, r3
 801876a:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 801876e:	2600      	movs	r6, #0
 8018770:	4637      	mov	r7, r6
 8018772:	a806      	add	r0, sp, #24
 8018774:	f002 f894 	bl	801a8a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018778:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 801877c:	9b03      	ldr	r3, [sp, #12]
 801877e:	4286      	cmp	r6, r0
 8018780:	eba9 0903 	sub.w	r9, r9, r3
 8018784:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8018788:	bfb8      	it	lt
 801878a:	4606      	movlt	r6, r0
 801878c:	3701      	adds	r7, #1
 801878e:	b236      	sxth	r6, r6
 8018790:	b2bf      	uxth	r7, r7
 8018792:	fa0f f989 	sxth.w	r9, r9
 8018796:	2b00      	cmp	r3, #0
 8018798:	f43f af0d 	beq.w	80185b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801879c:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 80187a0:	2b00      	cmp	r3, #0
 80187a2:	f47f af08 	bne.w	80185b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80187a6:	7a2b      	ldrb	r3, [r5, #8]
 80187a8:	444b      	add	r3, r9
 80187aa:	2b00      	cmp	r3, #0
 80187ac:	dce1      	bgt.n	8018772 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80187ae:	e702      	b.n	80185b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80187b0:	20013940 	.word	0x20013940
 80187b4:	2001393c 	.word	0x2001393c
 80187b8:	20013944 	.word	0x20013944
 80187bc:	20013948 	.word	0x20013948
 80187c0:	ebaa 0606 	sub.w	r6, sl, r6
 80187c4:	2002      	movs	r0, #2
 80187c6:	fb96 f6f0 	sdiv	r6, r6, r0
 80187ca:	e71d      	b.n	8018608 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80187cc:	441e      	add	r6, r3
 80187ce:	ebaa 0606 	sub.w	r6, sl, r6
 80187d2:	e719      	b.n	8018608 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80187d4:	8925      	ldrh	r5, [r4, #8]
 80187d6:	1aed      	subs	r5, r5, r3
 80187d8:	eba5 050a 	sub.w	r5, r5, sl
 80187dc:	fa0f fb85 	sxth.w	fp, r5
 80187e0:	8965      	ldrh	r5, [r4, #10]
 80187e2:	eba5 0509 	sub.w	r5, r5, r9
 80187e6:	b22d      	sxth	r5, r5
 80187e8:	e72e      	b.n	8018648 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80187ea:	8965      	ldrh	r5, [r4, #10]
 80187ec:	1aed      	subs	r5, r5, r3
 80187ee:	eba5 050a 	sub.w	r5, r5, sl
 80187f2:	4633      	mov	r3, r6
 80187f4:	b22d      	sxth	r5, r5
 80187f6:	463e      	mov	r6, r7
 80187f8:	f04f 0b00 	mov.w	fp, #0
 80187fc:	461f      	mov	r7, r3
 80187fe:	e723      	b.n	8018648 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8018800:	2500      	movs	r5, #0
 8018802:	e721      	b.n	8018648 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08018804 <_ZN8touchgfx8TextAreaD0Ev>:
 8018804:	b510      	push	{r4, lr}
 8018806:	2148      	movs	r1, #72	@ 0x48
 8018808:	4604      	mov	r4, r0
 801880a:	f015 f88c 	bl	802d926 <_ZdlPvj>
 801880e:	4620      	mov	r0, r4
 8018810:	bd10      	pop	{r4, pc}
	...

08018814 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8018814:	b513      	push	{r0, r1, r4, lr}
 8018816:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 801881a:	4604      	mov	r4, r0
 801881c:	b1fb      	cbz	r3, 801885e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801881e:	4b16      	ldr	r3, [pc, #88]	@ (8018878 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8018820:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8018822:	881b      	ldrh	r3, [r3, #0]
 8018824:	428b      	cmp	r3, r1
 8018826:	d91a      	bls.n	801885e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8018828:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801882c:	2b00      	cmp	r3, #0
 801882e:	dd16      	ble.n	801885e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8018830:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8018834:	2b00      	cmp	r3, #0
 8018836:	dd12      	ble.n	801885e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8018838:	4b10      	ldr	r3, [pc, #64]	@ (801887c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801883a:	6818      	ldr	r0, [r3, #0]
 801883c:	f7f1 fdc8 	bl	800a3d0 <_ZNK8touchgfx5Texts7getTextEt>
 8018840:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8018844:	6822      	ldr	r2, [r4, #0]
 8018846:	2b00      	cmp	r3, #0
 8018848:	db06      	blt.n	8018858 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801884a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 801884e:	2b00      	cmp	r3, #0
 8018850:	db02      	blt.n	8018858 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8018852:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8018854:	4298      	cmp	r0, r3
 8018856:	d004      	beq.n	8018862 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8018858:	6953      	ldr	r3, [r2, #20]
 801885a:	4620      	mov	r0, r4
 801885c:	4798      	blx	r3
 801885e:	b002      	add	sp, #8
 8018860:	bd10      	pop	{r4, pc}
 8018862:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8018866:	c903      	ldmia	r1, {r0, r1}
 8018868:	466b      	mov	r3, sp
 801886a:	e883 0003 	stmia.w	r3, {r0, r1}
 801886e:	6912      	ldr	r2, [r2, #16]
 8018870:	4619      	mov	r1, r3
 8018872:	4620      	mov	r0, r4
 8018874:	4790      	blx	r2
 8018876:	e7f2      	b.n	801885e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8018878:	20013940 	.word	0x20013940
 801887c:	20013948 	.word	0x20013948

08018880 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8018880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018884:	4b44      	ldr	r3, [pc, #272]	@ (8018998 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8018886:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8018888:	881b      	ldrh	r3, [r3, #0]
 801888a:	4293      	cmp	r3, r2
 801888c:	b08e      	sub	sp, #56	@ 0x38
 801888e:	4604      	mov	r4, r0
 8018890:	d97e      	bls.n	8018990 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8018892:	6808      	ldr	r0, [r1, #0]
 8018894:	4d41      	ldr	r5, [pc, #260]	@ (801899c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8018896:	6849      	ldr	r1, [r1, #4]
 8018898:	ab05      	add	r3, sp, #20
 801889a:	c303      	stmia	r3!, {r0, r1}
 801889c:	4611      	mov	r1, r2
 801889e:	6828      	ldr	r0, [r5, #0]
 80188a0:	f7f1 fd96 	bl	800a3d0 <_ZNK8touchgfx5Texts7getTextEt>
 80188a4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 80188a8:	2b00      	cmp	r3, #0
 80188aa:	db11      	blt.n	80188d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80188ac:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 80188b0:	2b00      	cmp	r3, #0
 80188b2:	db0d      	blt.n	80188d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80188b4:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80188b6:	4298      	cmp	r0, r3
 80188b8:	d10a      	bne.n	80188d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80188ba:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 80188be:	e892 0003 	ldmia.w	r2, {r0, r1}
 80188c2:	ab09      	add	r3, sp, #36	@ 0x24
 80188c4:	e883 0003 	stmia.w	r3, {r0, r1}
 80188c8:	4619      	mov	r1, r3
 80188ca:	a805      	add	r0, sp, #20
 80188cc:	f7fc fd9c 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 80188d0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80188d4:	2b00      	cmp	r3, #0
 80188d6:	dd5b      	ble.n	8018990 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80188d8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80188dc:	2b00      	cmp	r3, #0
 80188de:	dd57      	ble.n	8018990 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80188e0:	4f2f      	ldr	r7, [pc, #188]	@ (80189a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80188e2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80188e4:	683b      	ldr	r3, [r7, #0]
 80188e6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80188ea:	4b2e      	ldr	r3, [pc, #184]	@ (80189a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80188ec:	681b      	ldr	r3, [r3, #0]
 80188ee:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80188f2:	2e00      	cmp	r6, #0
 80188f4:	d04c      	beq.n	8018990 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80188f6:	6823      	ldr	r3, [r4, #0]
 80188f8:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 80188fc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80188fe:	4620      	mov	r0, r4
 8018900:	4798      	blx	r3
 8018902:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8018904:	683b      	ldr	r3, [r7, #0]
 8018906:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 801890a:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 801890e:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8018912:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8018914:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8018918:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 801891c:	785b      	ldrb	r3, [r3, #1]
 801891e:	9609      	str	r6, [sp, #36]	@ 0x24
 8018920:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8018924:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8018928:	4b1f      	ldr	r3, [pc, #124]	@ (80189a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801892a:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 801892e:	681b      	ldr	r3, [r3, #0]
 8018930:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8018934:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018936:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 801893a:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 801893e:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8018942:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 8018946:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801894a:	b10a      	cbz	r2, 8018950 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 801894c:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 801894e:	b906      	cbnz	r6, 8018952 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8018950:	689e      	ldr	r6, [r3, #8]
 8018952:	af07      	add	r7, sp, #28
 8018954:	4621      	mov	r1, r4
 8018956:	4638      	mov	r0, r7
 8018958:	f003 ffa2 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801895c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 801895e:	6828      	ldr	r0, [r5, #0]
 8018960:	f7f1 fd36 	bl	800a3d0 <_ZNK8touchgfx5Texts7getTextEt>
 8018964:	6823      	ldr	r3, [r4, #0]
 8018966:	4605      	mov	r5, r0
 8018968:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801896a:	4620      	mov	r0, r4
 801896c:	4798      	blx	r3
 801896e:	6823      	ldr	r3, [r4, #0]
 8018970:	4680      	mov	r8, r0
 8018972:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8018976:	4620      	mov	r0, r4
 8018978:	4798      	blx	r3
 801897a:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801897e:	ab09      	add	r3, sp, #36	@ 0x24
 8018980:	9300      	str	r3, [sp, #0]
 8018982:	9501      	str	r5, [sp, #4]
 8018984:	ab05      	add	r3, sp, #20
 8018986:	e897 0006 	ldmia.w	r7, {r1, r2}
 801898a:	4630      	mov	r0, r6
 801898c:	f7f1 fcd2 	bl	800a334 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8018990:	b00e      	add	sp, #56	@ 0x38
 8018992:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018996:	bf00      	nop
 8018998:	20013940 	.word	0x20013940
 801899c:	20013948 	.word	0x20013948
 80189a0:	2001393c 	.word	0x2001393c
 80189a4:	20013944 	.word	0x20013944
 80189a8:	200138e4 	.word	0x200138e4

080189ac <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80189ac:	b570      	push	{r4, r5, r6, lr}
 80189ae:	6803      	ldr	r3, [r0, #0]
 80189b0:	4604      	mov	r4, r0
 80189b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80189b4:	4615      	mov	r5, r2
 80189b6:	4798      	blx	r3
 80189b8:	6823      	ldr	r3, [r4, #0]
 80189ba:	4629      	mov	r1, r5
 80189bc:	4620      	mov	r0, r4
 80189be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80189c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80189c4:	4718      	bx	r3
	...

080189c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80189c8:	b538      	push	{r3, r4, r5, lr}
 80189ca:	4b0e      	ldr	r3, [pc, #56]	@ (8018a04 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80189cc:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80189ce:	881b      	ldrh	r3, [r3, #0]
 80189d0:	429a      	cmp	r2, r3
 80189d2:	4604      	mov	r4, r0
 80189d4:	d214      	bcs.n	8018a00 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80189d6:	6803      	ldr	r3, [r0, #0]
 80189d8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80189da:	4798      	blx	r3
 80189dc:	6823      	ldr	r3, [r4, #0]
 80189de:	4605      	mov	r5, r0
 80189e0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80189e2:	4620      	mov	r0, r4
 80189e4:	4798      	blx	r3
 80189e6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80189ea:	b22d      	sxth	r5, r5
 80189ec:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80189f0:	4601      	mov	r1, r0
 80189f2:	bf06      	itte	eq
 80189f4:	4602      	moveq	r2, r0
 80189f6:	4629      	moveq	r1, r5
 80189f8:	462a      	movne	r2, r5
 80189fa:	4620      	mov	r0, r4
 80189fc:	f7ff ffd6 	bl	80189ac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8018a00:	bd38      	pop	{r3, r4, r5, pc}
 8018a02:	bf00      	nop
 8018a04:	20013940 	.word	0x20013940

08018a08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8018a08:	b530      	push	{r4, r5, lr}
 8018a0a:	888b      	ldrh	r3, [r1, #4]
 8018a0c:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8018a0e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8018a12:	b085      	sub	sp, #20
 8018a14:	4604      	mov	r4, r0
 8018a16:	b923      	cbnz	r3, 8018a22 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8018a18:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8018a1c:	b90b      	cbnz	r3, 8018a22 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8018a1e:	f7ff ffd3 	bl	80189c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8018a22:	6823      	ldr	r3, [r4, #0]
 8018a24:	466d      	mov	r5, sp
 8018a26:	4621      	mov	r1, r4
 8018a28:	4628      	mov	r0, r5
 8018a2a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8018a2e:	4798      	blx	r3
 8018a30:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8018a34:	343c      	adds	r4, #60	@ 0x3c
 8018a36:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8018a3a:	b005      	add	sp, #20
 8018a3c:	bd30      	pop	{r4, r5, pc}

08018a3e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8018a3e:	2300      	movs	r3, #0
 8018a40:	8083      	strh	r3, [r0, #4]
 8018a42:	80c3      	strh	r3, [r0, #6]
 8018a44:	8003      	strh	r3, [r0, #0]
 8018a46:	8043      	strh	r3, [r0, #2]
 8018a48:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8018a4c:	2bff      	cmp	r3, #255	@ 0xff
 8018a4e:	bf01      	itttt	eq
 8018a50:	890b      	ldrheq	r3, [r1, #8]
 8018a52:	8083      	strheq	r3, [r0, #4]
 8018a54:	894b      	ldrheq	r3, [r1, #10]
 8018a56:	80c3      	strheq	r3, [r0, #6]
 8018a58:	4770      	bx	lr
	...

08018a5c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8018a5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018a5e:	4604      	mov	r4, r0
 8018a60:	6808      	ldr	r0, [r1, #0]
 8018a62:	6849      	ldr	r1, [r1, #4]
 8018a64:	466b      	mov	r3, sp
 8018a66:	c303      	stmia	r3!, {r0, r1}
 8018a68:	6823      	ldr	r3, [r4, #0]
 8018a6a:	4669      	mov	r1, sp
 8018a6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a6e:	4620      	mov	r0, r4
 8018a70:	4798      	blx	r3
 8018a72:	4b08      	ldr	r3, [pc, #32]	@ (8018a94 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8018a74:	681b      	ldr	r3, [r3, #0]
 8018a76:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8018a7a:	b10a      	cbz	r2, 8018a80 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8018a7c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8018a7e:	b900      	cbnz	r0, 8018a82 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8018a80:	6898      	ldr	r0, [r3, #8]
 8018a82:	6803      	ldr	r3, [r0, #0]
 8018a84:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8018a86:	6a1d      	ldr	r5, [r3, #32]
 8018a88:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8018a8c:	4669      	mov	r1, sp
 8018a8e:	47a8      	blx	r5
 8018a90:	b003      	add	sp, #12
 8018a92:	bd30      	pop	{r4, r5, pc}
 8018a94:	200138e4 	.word	0x200138e4

08018a98 <_ZN8touchgfx3BoxD1Ev>:
 8018a98:	4770      	bx	lr

08018a9a <_ZN8touchgfx3BoxD0Ev>:
 8018a9a:	b510      	push	{r4, lr}
 8018a9c:	212c      	movs	r1, #44	@ 0x2c
 8018a9e:	4604      	mov	r4, r0
 8018aa0:	f014 ff41 	bl	802d926 <_ZdlPvj>
 8018aa4:	4620      	mov	r0, r4
 8018aa6:	bd10      	pop	{r4, pc}

08018aa8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8018aa8:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 8018aac:	b12a      	cbz	r2, 8018aba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8018aae:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8018ab2:	b112      	cbz	r2, 8018aba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8018ab4:	6803      	ldr	r3, [r0, #0]
 8018ab6:	695b      	ldr	r3, [r3, #20]
 8018ab8:	4718      	bx	r3
 8018aba:	4770      	bx	lr

08018abc <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8018abc:	4770      	bx	lr

08018abe <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8018abe:	b510      	push	{r4, lr}
 8018ac0:	2134      	movs	r1, #52	@ 0x34
 8018ac2:	4604      	mov	r4, r0
 8018ac4:	f014 ff2f 	bl	802d926 <_ZdlPvj>
 8018ac8:	4620      	mov	r0, r4
 8018aca:	bd10      	pop	{r4, pc}

08018acc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8018acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018ad0:	4604      	mov	r4, r0
 8018ad2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8018ad4:	8962      	ldrh	r2, [r4, #10]
 8018ad6:	b218      	sxth	r0, r3
 8018ad8:	460e      	mov	r6, r1
 8018ada:	005b      	lsls	r3, r3, #1
 8018adc:	8921      	ldrh	r1, [r4, #8]
 8018ade:	b29b      	uxth	r3, r3
 8018ae0:	1ac9      	subs	r1, r1, r3
 8018ae2:	b08e      	sub	sp, #56	@ 0x38
 8018ae4:	b209      	sxth	r1, r1
 8018ae6:	1ad3      	subs	r3, r2, r3
 8018ae8:	b21b      	sxth	r3, r3
 8018aea:	2900      	cmp	r1, #0
 8018aec:	f8ad 0000 	strh.w	r0, [sp]
 8018af0:	f8ad 0002 	strh.w	r0, [sp, #2]
 8018af4:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018af8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018afc:	dd5e      	ble.n	8018bbc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8018afe:	2b00      	cmp	r3, #0
 8018b00:	dd5c      	ble.n	8018bbc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8018b02:	6830      	ldr	r0, [r6, #0]
 8018b04:	6871      	ldr	r1, [r6, #4]
 8018b06:	ab02      	add	r3, sp, #8
 8018b08:	c303      	stmia	r3!, {r0, r1}
 8018b0a:	4669      	mov	r1, sp
 8018b0c:	a802      	add	r0, sp, #8
 8018b0e:	f7fc fc7b 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8018b12:	4620      	mov	r0, r4
 8018b14:	a902      	add	r1, sp, #8
 8018b16:	f7ff ffa1 	bl	8018a5c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8018b1a:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8018b1c:	2800      	cmp	r0, #0
 8018b1e:	d05f      	beq.n	8018be0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8018b20:	8963      	ldrh	r3, [r4, #10]
 8018b22:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8018b26:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018b2a:	1a1f      	subs	r7, r3, r0
 8018b2c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8018b30:	b202      	sxth	r2, r0
 8018b32:	2500      	movs	r5, #0
 8018b34:	b21b      	sxth	r3, r3
 8018b36:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8018b3a:	1a09      	subs	r1, r1, r0
 8018b3c:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8018b40:	9506      	str	r5, [sp, #24]
 8018b42:	f8ad 201e 	strh.w	r2, [sp, #30]
 8018b46:	f8ad 5020 	strh.w	r5, [sp, #32]
 8018b4a:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8018b4e:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8018b52:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8018b56:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8018b5a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8018b5e:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8018b62:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8018b66:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8018b6a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8018b6e:	af04      	add	r7, sp, #16
 8018b70:	ab06      	add	r3, sp, #24
 8018b72:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8018b76:	e893 0003 	ldmia.w	r3, {r0, r1}
 8018b7a:	e887 0003 	stmia.w	r7, {r0, r1}
 8018b7e:	4631      	mov	r1, r6
 8018b80:	4638      	mov	r0, r7
 8018b82:	f7fc fc41 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8018b86:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018b8a:	2b00      	cmp	r3, #0
 8018b8c:	dd12      	ble.n	8018bb4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8018b8e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018b92:	2b00      	cmp	r3, #0
 8018b94:	dd0e      	ble.n	8018bb4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8018b96:	6823      	ldr	r3, [r4, #0]
 8018b98:	4639      	mov	r1, r7
 8018b9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b9c:	4620      	mov	r0, r4
 8018b9e:	4798      	blx	r3
 8018ba0:	f7eb f986 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8018ba4:	6803      	ldr	r3, [r0, #0]
 8018ba6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8018ba8:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8018bac:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8018bb0:	4639      	mov	r1, r7
 8018bb2:	47c0      	blx	r8
 8018bb4:	3501      	adds	r5, #1
 8018bb6:	2d04      	cmp	r5, #4
 8018bb8:	d1da      	bne.n	8018b70 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8018bba:	e011      	b.n	8018be0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8018bbc:	6830      	ldr	r0, [r6, #0]
 8018bbe:	6871      	ldr	r1, [r6, #4]
 8018bc0:	ab06      	add	r3, sp, #24
 8018bc2:	c303      	stmia	r3!, {r0, r1}
 8018bc4:	6823      	ldr	r3, [r4, #0]
 8018bc6:	a906      	add	r1, sp, #24
 8018bc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018bca:	4620      	mov	r0, r4
 8018bcc:	4798      	blx	r3
 8018bce:	f7eb f96f 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 8018bd2:	6803      	ldr	r3, [r0, #0]
 8018bd4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8018bd6:	6a1d      	ldr	r5, [r3, #32]
 8018bd8:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8018bdc:	a906      	add	r1, sp, #24
 8018bde:	47a8      	blx	r5
 8018be0:	b00e      	add	sp, #56	@ 0x38
 8018be2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018be6 <_ZN8touchgfx5ImageD1Ev>:
 8018be6:	4770      	bx	lr

08018be8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8018be8:	b570      	push	{r4, r5, r6, lr}
 8018bea:	880b      	ldrh	r3, [r1, #0]
 8018bec:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8018bee:	4604      	mov	r4, r0
 8018bf0:	4608      	mov	r0, r1
 8018bf2:	460d      	mov	r5, r1
 8018bf4:	f005 fe18 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018bf8:	4606      	mov	r6, r0
 8018bfa:	4628      	mov	r0, r5
 8018bfc:	f005 fe48 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018c00:	6823      	ldr	r3, [r4, #0]
 8018c02:	4605      	mov	r5, r0
 8018c04:	4631      	mov	r1, r6
 8018c06:	4620      	mov	r0, r4
 8018c08:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018c0a:	4798      	blx	r3
 8018c0c:	6823      	ldr	r3, [r4, #0]
 8018c0e:	4629      	mov	r1, r5
 8018c10:	4620      	mov	r0, r4
 8018c12:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018c14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018c18:	4718      	bx	r3

08018c1a <_ZN8touchgfx5ImageD0Ev>:
 8018c1a:	b510      	push	{r4, lr}
 8018c1c:	212c      	movs	r1, #44	@ 0x2c
 8018c1e:	4604      	mov	r4, r0
 8018c20:	f014 fe81 	bl	802d926 <_ZdlPvj>
 8018c24:	4620      	mov	r0, r4
 8018c26:	bd10      	pop	{r4, pc}

08018c28 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8018c28:	b510      	push	{r4, lr}
 8018c2a:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8018c2e:	2bff      	cmp	r3, #255	@ 0xff
 8018c30:	4604      	mov	r4, r0
 8018c32:	d006      	beq.n	8018c42 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8018c34:	2300      	movs	r3, #0
 8018c36:	8003      	strh	r3, [r0, #0]
 8018c38:	8043      	strh	r3, [r0, #2]
 8018c3a:	8083      	strh	r3, [r0, #4]
 8018c3c:	80c3      	strh	r3, [r0, #6]
 8018c3e:	4620      	mov	r0, r4
 8018c40:	bd10      	pop	{r4, pc}
 8018c42:	3126      	adds	r1, #38	@ 0x26
 8018c44:	f005 fe58 	bl	801e8f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018c48:	e7f9      	b.n	8018c3e <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

08018c4c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8018c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018c50:	4604      	mov	r4, r0
 8018c52:	b088      	sub	sp, #32
 8018c54:	f854 3b26 	ldr.w	r3, [r4], #38
 8018c58:	2500      	movs	r5, #0
 8018c5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018c5c:	460f      	mov	r7, r1
 8018c5e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8018c62:	a904      	add	r1, sp, #16
 8018c64:	4606      	mov	r6, r0
 8018c66:	4798      	blx	r3
 8018c68:	4620      	mov	r0, r4
 8018c6a:	f005 fddd 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018c6e:	4680      	mov	r8, r0
 8018c70:	4620      	mov	r0, r4
 8018c72:	f005 fe0d 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018c76:	9506      	str	r5, [sp, #24]
 8018c78:	ad06      	add	r5, sp, #24
 8018c7a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018c7e:	4639      	mov	r1, r7
 8018c80:	4628      	mov	r0, r5
 8018c82:	f8ad 801c 	strh.w	r8, [sp, #28]
 8018c86:	f7fc fbbf 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8018c8a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8018c8e:	2b00      	cmp	r3, #0
 8018c90:	dd19      	ble.n	8018cc6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8018c92:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8018c96:	2b00      	cmp	r3, #0
 8018c98:	dd15      	ble.n	8018cc6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8018c9a:	4b0c      	ldr	r3, [pc, #48]	@ (8018ccc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8018c9c:	681b      	ldr	r3, [r3, #0]
 8018c9e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8018ca2:	b10a      	cbz	r2, 8018ca8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8018ca4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8018ca6:	b900      	cbnz	r0, 8018caa <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8018ca8:	6898      	ldr	r0, [r3, #8]
 8018caa:	6801      	ldr	r1, [r0, #0]
 8018cac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018cb0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018cb4:	2701      	movs	r7, #1
 8018cb6:	9702      	str	r7, [sp, #8]
 8018cb8:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8018cbc:	e9cd 5600 	strd	r5, r6, [sp]
 8018cc0:	688d      	ldr	r5, [r1, #8]
 8018cc2:	4621      	mov	r1, r4
 8018cc4:	47a8      	blx	r5
 8018cc6:	b008      	add	sp, #32
 8018cc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018ccc:	200138e4 	.word	0x200138e4

08018cd0 <_ZN8touchgfx7OutlineD1Ev>:
 8018cd0:	4770      	bx	lr

08018cd2 <_ZN8touchgfx7OutlineD0Ev>:
 8018cd2:	b510      	push	{r4, lr}
 8018cd4:	2130      	movs	r1, #48	@ 0x30
 8018cd6:	4604      	mov	r4, r0
 8018cd8:	f014 fe25 	bl	802d926 <_ZdlPvj>
 8018cdc:	4620      	mov	r0, r4
 8018cde:	bd10      	pop	{r4, pc}

08018ce0 <_ZN8touchgfx7Outline5resetEv>:
 8018ce0:	b510      	push	{r4, lr}
 8018ce2:	4604      	mov	r4, r0
 8018ce4:	f000 fe82 	bl	80199ec <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8018ce8:	60e0      	str	r0, [r4, #12]
 8018cea:	f000 fe85 	bl	80199f8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8018cee:	68e3      	ldr	r3, [r4, #12]
 8018cf0:	6123      	str	r3, [r4, #16]
 8018cf2:	08c0      	lsrs	r0, r0, #3
 8018cf4:	2200      	movs	r2, #0
 8018cf6:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 8018cfa:	3801      	subs	r0, #1
 8018cfc:	6060      	str	r0, [r4, #4]
 8018cfe:	60a2      	str	r2, [r4, #8]
 8018d00:	8019      	strh	r1, [r3, #0]
 8018d02:	8059      	strh	r1, [r3, #2]
 8018d04:	809a      	strh	r2, [r3, #4]
 8018d06:	80da      	strh	r2, [r3, #6]
 8018d08:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8018d0a:	f023 0301 	bic.w	r3, r3, #1
 8018d0e:	f043 0302 	orr.w	r3, r3, #2
 8018d12:	6263      	str	r3, [r4, #36]	@ 0x24
 8018d14:	bd10      	pop	{r4, pc}
	...

08018d18 <_ZN8touchgfx7OutlineC1Ev>:
 8018d18:	b510      	push	{r4, lr}
 8018d1a:	4b0a      	ldr	r3, [pc, #40]	@ (8018d44 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8018d1c:	6003      	str	r3, [r0, #0]
 8018d1e:	2300      	movs	r3, #0
 8018d20:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8018d24:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8018d28:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8018d2c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8018d30:	6243      	str	r3, [r0, #36]	@ 0x24
 8018d32:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8018d36:	4604      	mov	r4, r0
 8018d38:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 8018d3c:	f7ff ffd0 	bl	8018ce0 <_ZN8touchgfx7Outline5resetEv>
 8018d40:	4620      	mov	r0, r4
 8018d42:	bd10      	pop	{r4, pc}
 8018d44:	08033534 	.word	0x08033534

08018d48 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8018d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d4c:	b093      	sub	sp, #76	@ 0x4c
 8018d4e:	1156      	asrs	r6, r2, #5
 8018d50:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8018d52:	9305      	str	r3, [sp, #20]
 8018d54:	f004 051f 	and.w	r5, r4, #31
 8018d58:	1153      	asrs	r3, r2, #5
 8018d5a:	9504      	str	r5, [sp, #16]
 8018d5c:	1165      	asrs	r5, r4, #5
 8018d5e:	9303      	str	r3, [sp, #12]
 8018d60:	42ae      	cmp	r6, r5
 8018d62:	ea4f 1364 	mov.w	r3, r4, asr #5
 8018d66:	9306      	str	r3, [sp, #24]
 8018d68:	f002 031f 	and.w	r3, r2, #31
 8018d6c:	f040 80f8 	bne.w	8018f60 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8018d70:	9c04      	ldr	r4, [sp, #16]
 8018d72:	9a05      	ldr	r2, [sp, #20]
 8018d74:	42a3      	cmp	r3, r4
 8018d76:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8018d7a:	6902      	ldr	r2, [r0, #16]
 8018d7c:	d125      	bne.n	8018dca <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8018d7e:	f9b2 3000 	ldrsh.w	r3, [r2]
 8018d82:	459e      	cmp	lr, r3
 8018d84:	d103      	bne.n	8018d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8018d86:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8018d8a:	429e      	cmp	r6, r3
 8018d8c:	d035      	beq.n	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018d8e:	88d1      	ldrh	r1, [r2, #6]
 8018d90:	8893      	ldrh	r3, [r2, #4]
 8018d92:	430b      	orrs	r3, r1
 8018d94:	d010      	beq.n	8018db8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8018d96:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8018d9a:	2b00      	cmp	r3, #0
 8018d9c:	db0c      	blt.n	8018db8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8018d9e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8018da0:	428b      	cmp	r3, r1
 8018da2:	da09      	bge.n	8018db8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8018da4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8018da8:	428b      	cmp	r3, r1
 8018daa:	bf38      	it	cc
 8018dac:	3208      	addcc	r2, #8
 8018dae:	f103 0301 	add.w	r3, r3, #1
 8018db2:	bf38      	it	cc
 8018db4:	6102      	strcc	r2, [r0, #16]
 8018db6:	6083      	str	r3, [r0, #8]
 8018db8:	6903      	ldr	r3, [r0, #16]
 8018dba:	9a03      	ldr	r2, [sp, #12]
 8018dbc:	f8a3 e000 	strh.w	lr, [r3]
 8018dc0:	805a      	strh	r2, [r3, #2]
 8018dc2:	2200      	movs	r2, #0
 8018dc4:	809a      	strh	r2, [r3, #4]
 8018dc6:	80da      	strh	r2, [r3, #6]
 8018dc8:	e017      	b.n	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018dca:	9c05      	ldr	r4, [sp, #20]
 8018dcc:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8018dd0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8018dd4:	f004 041f 	and.w	r4, r4, #31
 8018dd8:	114e      	asrs	r6, r1, #5
 8018dda:	9402      	str	r4, [sp, #8]
 8018ddc:	9c04      	ldr	r4, [sp, #16]
 8018dde:	4576      	cmp	r6, lr
 8018de0:	f001 0c1f 	and.w	ip, r1, #31
 8018de4:	eba4 0403 	sub.w	r4, r4, r3
 8018de8:	d10a      	bne.n	8018e00 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8018dea:	9b02      	ldr	r3, [sp, #8]
 8018dec:	449c      	add	ip, r3
 8018dee:	44a0      	add	r8, r4
 8018df0:	fb04 a40c 	mla	r4, r4, ip, sl
 8018df4:	f8a2 8004 	strh.w	r8, [r2, #4]
 8018df8:	80d4      	strh	r4, [r2, #6]
 8018dfa:	b013      	add	sp, #76	@ 0x4c
 8018dfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e00:	9d05      	ldr	r5, [sp, #20]
 8018e02:	1a69      	subs	r1, r5, r1
 8018e04:	bf5b      	ittet	pl
 8018e06:	f1cc 0520 	rsbpl	r5, ip, #32
 8018e0a:	436c      	mulpl	r4, r5
 8018e0c:	2500      	movmi	r5, #0
 8018e0e:	2520      	movpl	r5, #32
 8018e10:	bf44      	itt	mi
 8018e12:	fb04 f40c 	mulmi.w	r4, r4, ip
 8018e16:	4249      	negmi	r1, r1
 8018e18:	9501      	str	r5, [sp, #4]
 8018e1a:	9f01      	ldr	r7, [sp, #4]
 8018e1c:	fb94 f5f1 	sdiv	r5, r4, r1
 8018e20:	fb01 4415 	mls	r4, r1, r5, r4
 8018e24:	bf54      	ite	pl
 8018e26:	f04f 0901 	movpl.w	r9, #1
 8018e2a:	f04f 39ff 	movmi.w	r9, #4294967295
 8018e2e:	2c00      	cmp	r4, #0
 8018e30:	bfb8      	it	lt
 8018e32:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8018e36:	44bc      	add	ip, r7
 8018e38:	44a8      	add	r8, r5
 8018e3a:	fb05 ac0c 	mla	ip, r5, ip, sl
 8018e3e:	f8a2 8004 	strh.w	r8, [r2, #4]
 8018e42:	f8a2 c006 	strh.w	ip, [r2, #6]
 8018e46:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018e4a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8018e4e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8018e52:	bfb8      	it	lt
 8018e54:	1864      	addlt	r4, r4, r1
 8018e56:	ea58 0202 	orrs.w	r2, r8, r2
 8018e5a:	444e      	add	r6, r9
 8018e5c:	d011      	beq.n	8018e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8018e5e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8018e62:	f1b8 0f00 	cmp.w	r8, #0
 8018e66:	db0c      	blt.n	8018e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8018e68:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8018e6a:	4590      	cmp	r8, r2
 8018e6c:	da09      	bge.n	8018e82 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8018e6e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8018e72:	4590      	cmp	r8, r2
 8018e74:	bf3c      	itt	cc
 8018e76:	f10c 0208 	addcc.w	r2, ip, #8
 8018e7a:	6102      	strcc	r2, [r0, #16]
 8018e7c:	f108 0201 	add.w	r2, r8, #1
 8018e80:	6082      	str	r2, [r0, #8]
 8018e82:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018e86:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8018e8a:	f8ac 6000 	strh.w	r6, [ip]
 8018e8e:	2700      	movs	r7, #0
 8018e90:	45b6      	cmp	lr, r6
 8018e92:	f8ac 2002 	strh.w	r2, [ip, #2]
 8018e96:	f8ac 7004 	strh.w	r7, [ip, #4]
 8018e9a:	f8ac 7006 	strh.w	r7, [ip, #6]
 8018e9e:	442b      	add	r3, r5
 8018ea0:	d04d      	beq.n	8018f3e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8018ea2:	9f04      	ldr	r7, [sp, #16]
 8018ea4:	1aff      	subs	r7, r7, r3
 8018ea6:	443d      	add	r5, r7
 8018ea8:	016d      	lsls	r5, r5, #5
 8018eaa:	fb95 f8f1 	sdiv	r8, r5, r1
 8018eae:	fb01 5518 	mls	r5, r1, r8, r5
 8018eb2:	2d00      	cmp	r5, #0
 8018eb4:	bfb8      	it	lt
 8018eb6:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8018eba:	f108 0701 	add.w	r7, r8, #1
 8018ebe:	bfb8      	it	lt
 8018ec0:	186d      	addlt	r5, r5, r1
 8018ec2:	1a64      	subs	r4, r4, r1
 8018ec4:	9703      	str	r7, [sp, #12]
 8018ec6:	f04f 0a00 	mov.w	sl, #0
 8018eca:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018ece:	1964      	adds	r4, r4, r5
 8018ed0:	bf58      	it	pl
 8018ed2:	9f03      	ldrpl	r7, [sp, #12]
 8018ed4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8018ed8:	bf48      	it	mi
 8018eda:	4647      	movmi	r7, r8
 8018edc:	44bb      	add	fp, r7
 8018ede:	f8ac b004 	strh.w	fp, [ip, #4]
 8018ee2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018ee6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8018eea:	f8ac b006 	strh.w	fp, [ip, #6]
 8018eee:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8018ef2:	443b      	add	r3, r7
 8018ef4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8018ef8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8018efc:	bf58      	it	pl
 8018efe:	1a64      	subpl	r4, r4, r1
 8018f00:	ea5b 0707 	orrs.w	r7, fp, r7
 8018f04:	444e      	add	r6, r9
 8018f06:	d011      	beq.n	8018f2c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8018f08:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8018f0c:	f1bb 0f00 	cmp.w	fp, #0
 8018f10:	db0c      	blt.n	8018f2c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8018f12:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8018f14:	45bb      	cmp	fp, r7
 8018f16:	da09      	bge.n	8018f2c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8018f18:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8018f1c:	45bb      	cmp	fp, r7
 8018f1e:	bf3c      	itt	cc
 8018f20:	f10c 0708 	addcc.w	r7, ip, #8
 8018f24:	6107      	strcc	r7, [r0, #16]
 8018f26:	f10b 0701 	add.w	r7, fp, #1
 8018f2a:	6087      	str	r7, [r0, #8]
 8018f2c:	6907      	ldr	r7, [r0, #16]
 8018f2e:	45b6      	cmp	lr, r6
 8018f30:	803e      	strh	r6, [r7, #0]
 8018f32:	807a      	strh	r2, [r7, #2]
 8018f34:	f8a7 a004 	strh.w	sl, [r7, #4]
 8018f38:	f8a7 a006 	strh.w	sl, [r7, #6]
 8018f3c:	d1c5      	bne.n	8018eca <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8018f3e:	9a04      	ldr	r2, [sp, #16]
 8018f40:	1ad3      	subs	r3, r2, r3
 8018f42:	6902      	ldr	r2, [r0, #16]
 8018f44:	8891      	ldrh	r1, [r2, #4]
 8018f46:	88d6      	ldrh	r6, [r2, #6]
 8018f48:	4419      	add	r1, r3
 8018f4a:	8091      	strh	r1, [r2, #4]
 8018f4c:	9902      	ldr	r1, [sp, #8]
 8018f4e:	f101 0c20 	add.w	ip, r1, #32
 8018f52:	9901      	ldr	r1, [sp, #4]
 8018f54:	ebac 0c01 	sub.w	ip, ip, r1
 8018f58:	fb03 630c 	mla	r3, r3, ip, r6
 8018f5c:	80d3      	strh	r3, [r2, #6]
 8018f5e:	e74c      	b.n	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018f60:	9d05      	ldr	r5, [sp, #20]
 8018f62:	1aa2      	subs	r2, r4, r2
 8018f64:	eba5 0501 	sub.w	r5, r5, r1
 8018f68:	9508      	str	r5, [sp, #32]
 8018f6a:	9202      	str	r2, [sp, #8]
 8018f6c:	f140 8128 	bpl.w	80191c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8018f70:	9a03      	ldr	r2, [sp, #12]
 8018f72:	2a00      	cmp	r2, #0
 8018f74:	f6ff af41 	blt.w	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8018f78:	9a02      	ldr	r2, [sp, #8]
 8018f7a:	4252      	negs	r2, r2
 8018f7c:	9202      	str	r2, [sp, #8]
 8018f7e:	9a06      	ldr	r2, [sp, #24]
 8018f80:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8018f84:	f04f 34ff 	mov.w	r4, #4294967295
 8018f88:	9206      	str	r2, [sp, #24]
 8018f8a:	462a      	mov	r2, r5
 8018f8c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018f8e:	435a      	muls	r2, r3
 8018f90:	2400      	movs	r4, #0
 8018f92:	9d02      	ldr	r5, [sp, #8]
 8018f94:	9401      	str	r4, [sp, #4]
 8018f96:	9c02      	ldr	r4, [sp, #8]
 8018f98:	fb92 f4f4 	sdiv	r4, r2, r4
 8018f9c:	fb05 2214 	mls	r2, r5, r4, r2
 8018fa0:	2a00      	cmp	r2, #0
 8018fa2:	9207      	str	r2, [sp, #28]
 8018fa4:	bfbc      	itt	lt
 8018fa6:	1952      	addlt	r2, r2, r5
 8018fa8:	9207      	strlt	r2, [sp, #28]
 8018faa:	9a01      	ldr	r2, [sp, #4]
 8018fac:	6905      	ldr	r5, [r0, #16]
 8018fae:	bfb8      	it	lt
 8018fb0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8018fb4:	eb04 0901 	add.w	r9, r4, r1
 8018fb8:	429a      	cmp	r2, r3
 8018fba:	ea4f 1669 	mov.w	r6, r9, asr #5
 8018fbe:	f040 8112 	bne.w	80191e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8018fc2:	f9b5 3000 	ldrsh.w	r3, [r5]
 8018fc6:	429e      	cmp	r6, r3
 8018fc8:	d104      	bne.n	8018fd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8018fca:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018fce:	9a03      	ldr	r2, [sp, #12]
 8018fd0:	429a      	cmp	r2, r3
 8018fd2:	d01b      	beq.n	801900c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8018fd4:	88ea      	ldrh	r2, [r5, #6]
 8018fd6:	88ab      	ldrh	r3, [r5, #4]
 8018fd8:	4313      	orrs	r3, r2
 8018fda:	d010      	beq.n	8018ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8018fdc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018fe0:	2a00      	cmp	r2, #0
 8018fe2:	db0c      	blt.n	8018ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8018fe4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8018fe6:	429a      	cmp	r2, r3
 8018fe8:	da09      	bge.n	8018ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8018fea:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8018fee:	429a      	cmp	r2, r3
 8018ff0:	bf38      	it	cc
 8018ff2:	3508      	addcc	r5, #8
 8018ff4:	f102 0201 	add.w	r2, r2, #1
 8018ff8:	bf38      	it	cc
 8018ffa:	6105      	strcc	r5, [r0, #16]
 8018ffc:	6082      	str	r2, [r0, #8]
 8018ffe:	6903      	ldr	r3, [r0, #16]
 8019000:	9a03      	ldr	r2, [sp, #12]
 8019002:	805a      	strh	r2, [r3, #2]
 8019004:	2200      	movs	r2, #0
 8019006:	801e      	strh	r6, [r3, #0]
 8019008:	809a      	strh	r2, [r3, #4]
 801900a:	80da      	strh	r2, [r3, #6]
 801900c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801900e:	9a03      	ldr	r2, [sp, #12]
 8019010:	6901      	ldr	r1, [r0, #16]
 8019012:	441a      	add	r2, r3
 8019014:	f9b1 3000 	ldrsh.w	r3, [r1]
 8019018:	42b3      	cmp	r3, r6
 801901a:	d103      	bne.n	8019024 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 801901c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8019020:	429a      	cmp	r2, r3
 8019022:	d01a      	beq.n	801905a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8019024:	88cc      	ldrh	r4, [r1, #6]
 8019026:	888b      	ldrh	r3, [r1, #4]
 8019028:	4323      	orrs	r3, r4
 801902a:	d010      	beq.n	801904e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801902c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8019030:	2c00      	cmp	r4, #0
 8019032:	db0c      	blt.n	801904e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8019034:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8019036:	429c      	cmp	r4, r3
 8019038:	da09      	bge.n	801904e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801903a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801903e:	429c      	cmp	r4, r3
 8019040:	bf38      	it	cc
 8019042:	3108      	addcc	r1, #8
 8019044:	f104 0401 	add.w	r4, r4, #1
 8019048:	bf38      	it	cc
 801904a:	6101      	strcc	r1, [r0, #16]
 801904c:	6084      	str	r4, [r0, #8]
 801904e:	6903      	ldr	r3, [r0, #16]
 8019050:	2100      	movs	r1, #0
 8019052:	801e      	strh	r6, [r3, #0]
 8019054:	805a      	strh	r2, [r3, #2]
 8019056:	8099      	strh	r1, [r3, #4]
 8019058:	80d9      	strh	r1, [r3, #6]
 801905a:	9b06      	ldr	r3, [sp, #24]
 801905c:	4293      	cmp	r3, r2
 801905e:	f000 8082 	beq.w	8019166 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8019062:	9b08      	ldr	r3, [sp, #32]
 8019064:	9c02      	ldr	r4, [sp, #8]
 8019066:	9902      	ldr	r1, [sp, #8]
 8019068:	015b      	lsls	r3, r3, #5
 801906a:	fb93 f1f1 	sdiv	r1, r3, r1
 801906e:	fb04 3311 	mls	r3, r4, r1, r3
 8019072:	2b00      	cmp	r3, #0
 8019074:	9103      	str	r1, [sp, #12]
 8019076:	9308      	str	r3, [sp, #32]
 8019078:	da04      	bge.n	8019084 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801907a:	1e4b      	subs	r3, r1, #1
 801907c:	9303      	str	r3, [sp, #12]
 801907e:	9b08      	ldr	r3, [sp, #32]
 8019080:	4423      	add	r3, r4
 8019082:	9308      	str	r3, [sp, #32]
 8019084:	9b07      	ldr	r3, [sp, #28]
 8019086:	9902      	ldr	r1, [sp, #8]
 8019088:	1a5b      	subs	r3, r3, r1
 801908a:	9307      	str	r3, [sp, #28]
 801908c:	9b01      	ldr	r3, [sp, #4]
 801908e:	f1c3 0320 	rsb	r3, r3, #32
 8019092:	930e      	str	r3, [sp, #56]	@ 0x38
 8019094:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019096:	9b01      	ldr	r3, [sp, #4]
 8019098:	1a5b      	subs	r3, r3, r1
 801909a:	464f      	mov	r7, r9
 801909c:	930a      	str	r3, [sp, #40]	@ 0x28
 801909e:	2600      	movs	r6, #0
 80190a0:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80190a4:	185b      	adds	r3, r3, r1
 80190a6:	bf58      	it	pl
 80190a8:	9902      	ldrpl	r1, [sp, #8]
 80190aa:	9307      	str	r3, [sp, #28]
 80190ac:	bf5d      	ittte	pl
 80190ae:	1a5b      	subpl	r3, r3, r1
 80190b0:	9307      	strpl	r3, [sp, #28]
 80190b2:	9b03      	ldrpl	r3, [sp, #12]
 80190b4:	9903      	ldrmi	r1, [sp, #12]
 80190b6:	bf58      	it	pl
 80190b8:	1c59      	addpl	r1, r3, #1
 80190ba:	4489      	add	r9, r1
 80190bc:	2a00      	cmp	r2, #0
 80190be:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80190c2:	db2e      	blt.n	8019122 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80190c4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80190c6:	4293      	cmp	r3, r2
 80190c8:	dd2b      	ble.n	8019122 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80190ca:	9c01      	ldr	r4, [sp, #4]
 80190cc:	6905      	ldr	r5, [r0, #16]
 80190ce:	46a0      	mov	r8, r4
 80190d0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80190d2:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80190d6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80190da:	45a0      	cmp	r8, r4
 80190dc:	f040 814f 	bne.w	801937e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80190e0:	f9b5 1000 	ldrsh.w	r1, [r5]
 80190e4:	4551      	cmp	r1, sl
 80190e6:	d103      	bne.n	80190f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80190e8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80190ec:	4291      	cmp	r1, r2
 80190ee:	d018      	beq.n	8019122 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80190f0:	ea5c 010e 	orrs.w	r1, ip, lr
 80190f4:	d00f      	beq.n	8019116 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80190f6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80190fa:	2900      	cmp	r1, #0
 80190fc:	db0b      	blt.n	8019116 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80190fe:	428b      	cmp	r3, r1
 8019100:	dd09      	ble.n	8019116 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8019102:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8019106:	4299      	cmp	r1, r3
 8019108:	bf38      	it	cc
 801910a:	3508      	addcc	r5, #8
 801910c:	f101 0101 	add.w	r1, r1, #1
 8019110:	bf38      	it	cc
 8019112:	6105      	strcc	r5, [r0, #16]
 8019114:	6081      	str	r1, [r0, #8]
 8019116:	6903      	ldr	r3, [r0, #16]
 8019118:	f8a3 a000 	strh.w	sl, [r3]
 801911c:	805a      	strh	r2, [r3, #2]
 801911e:	809e      	strh	r6, [r3, #4]
 8019120:	80de      	strh	r6, [r3, #6]
 8019122:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019124:	6901      	ldr	r1, [r0, #16]
 8019126:	441a      	add	r2, r3
 8019128:	88cc      	ldrh	r4, [r1, #6]
 801912a:	888b      	ldrh	r3, [r1, #4]
 801912c:	4323      	orrs	r3, r4
 801912e:	d010      	beq.n	8019152 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8019130:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8019134:	2c00      	cmp	r4, #0
 8019136:	db0c      	blt.n	8019152 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8019138:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801913a:	429c      	cmp	r4, r3
 801913c:	da09      	bge.n	8019152 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801913e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8019142:	429c      	cmp	r4, r3
 8019144:	bf38      	it	cc
 8019146:	3108      	addcc	r1, #8
 8019148:	f104 0401 	add.w	r4, r4, #1
 801914c:	bf38      	it	cc
 801914e:	6101      	strcc	r1, [r0, #16]
 8019150:	6084      	str	r4, [r0, #8]
 8019152:	6903      	ldr	r3, [r0, #16]
 8019154:	f8a3 a000 	strh.w	sl, [r3]
 8019158:	805a      	strh	r2, [r3, #2]
 801915a:	809e      	strh	r6, [r3, #4]
 801915c:	80de      	strh	r6, [r3, #6]
 801915e:	9b06      	ldr	r3, [sp, #24]
 8019160:	4293      	cmp	r3, r2
 8019162:	464f      	mov	r7, r9
 8019164:	d19c      	bne.n	80190a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8019166:	9b01      	ldr	r3, [sp, #4]
 8019168:	6907      	ldr	r7, [r0, #16]
 801916a:	f1c3 0620 	rsb	r6, r3, #32
 801916e:	9b05      	ldr	r3, [sp, #20]
 8019170:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8019174:	9b04      	ldr	r3, [sp, #16]
 8019176:	429e      	cmp	r6, r3
 8019178:	f040 81cc 	bne.w	8019514 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 801917c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8019180:	459e      	cmp	lr, r3
 8019182:	d104      	bne.n	801918e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8019184:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8019188:	429a      	cmp	r2, r3
 801918a:	f43f ae36 	beq.w	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801918e:	88f9      	ldrh	r1, [r7, #6]
 8019190:	88bb      	ldrh	r3, [r7, #4]
 8019192:	430b      	orrs	r3, r1
 8019194:	d010      	beq.n	80191b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8019196:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801919a:	2b00      	cmp	r3, #0
 801919c:	db0c      	blt.n	80191b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801919e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 80191a0:	428b      	cmp	r3, r1
 80191a2:	da09      	bge.n	80191b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80191a4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80191a8:	428b      	cmp	r3, r1
 80191aa:	bf38      	it	cc
 80191ac:	3708      	addcc	r7, #8
 80191ae:	f103 0301 	add.w	r3, r3, #1
 80191b2:	bf38      	it	cc
 80191b4:	6107      	strcc	r7, [r0, #16]
 80191b6:	6083      	str	r3, [r0, #8]
 80191b8:	6903      	ldr	r3, [r0, #16]
 80191ba:	f8a3 e000 	strh.w	lr, [r3]
 80191be:	e5ff      	b.n	8018dc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80191c0:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 80191c2:	9c03      	ldr	r4, [sp, #12]
 80191c4:	42a2      	cmp	r2, r4
 80191c6:	f6ff ae18 	blt.w	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80191ca:	9c06      	ldr	r4, [sp, #24]
 80191cc:	42a2      	cmp	r2, r4
 80191ce:	bfb8      	it	lt
 80191d0:	3201      	addlt	r2, #1
 80191d2:	9c08      	ldr	r4, [sp, #32]
 80191d4:	bfb8      	it	lt
 80191d6:	9206      	strlt	r2, [sp, #24]
 80191d8:	f1c3 0220 	rsb	r2, r3, #32
 80191dc:	4362      	muls	r2, r4
 80191de:	2401      	movs	r4, #1
 80191e0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80191e2:	2420      	movs	r4, #32
 80191e4:	e6d5      	b.n	8018f92 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80191e6:	f009 021f 	and.w	r2, r9, #31
 80191ea:	ea4f 1861 	mov.w	r8, r1, asr #5
 80191ee:	920c      	str	r2, [sp, #48]	@ 0x30
 80191f0:	9a01      	ldr	r2, [sp, #4]
 80191f2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80191f6:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80191fa:	45b0      	cmp	r8, r6
 80191fc:	f001 011f 	and.w	r1, r1, #31
 8019200:	eba2 0203 	sub.w	r2, r2, r3
 8019204:	d108      	bne.n	8019218 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8019206:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019208:	4419      	add	r1, r3
 801920a:	4496      	add	lr, r2
 801920c:	fb02 a101 	mla	r1, r2, r1, sl
 8019210:	f8a5 e004 	strh.w	lr, [r5, #4]
 8019214:	80e9      	strh	r1, [r5, #6]
 8019216:	e6f9      	b.n	801900c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8019218:	2c00      	cmp	r4, #0
 801921a:	f2c0 80a9 	blt.w	8019370 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801921e:	2701      	movs	r7, #1
 8019220:	f1c1 0c20 	rsb	ip, r1, #32
 8019224:	970a      	str	r7, [sp, #40]	@ 0x28
 8019226:	fb02 f20c 	mul.w	r2, r2, ip
 801922a:	2720      	movs	r7, #32
 801922c:	9709      	str	r7, [sp, #36]	@ 0x24
 801922e:	fb92 fcf4 	sdiv	ip, r2, r4
 8019232:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8019234:	fb04 221c 	mls	r2, r4, ip, r2
 8019238:	2a00      	cmp	r2, #0
 801923a:	bfb8      	it	lt
 801923c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8019240:	4439      	add	r1, r7
 8019242:	fb0c a101 	mla	r1, ip, r1, sl
 8019246:	80e9      	strh	r1, [r5, #6]
 8019248:	44e6      	add	lr, ip
 801924a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801924c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8019250:	eb08 0501 	add.w	r5, r8, r1
 8019254:	6901      	ldr	r1, [r0, #16]
 8019256:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801925a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801925e:	bfb8      	it	lt
 8019260:	1912      	addlt	r2, r2, r4
 8019262:	ea58 070e 	orrs.w	r7, r8, lr
 8019266:	d010      	beq.n	801928a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8019268:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 801926c:	f1be 0f00 	cmp.w	lr, #0
 8019270:	db0b      	blt.n	801928a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8019272:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8019274:	45be      	cmp	lr, r7
 8019276:	da08      	bge.n	801928a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8019278:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801927c:	45be      	cmp	lr, r7
 801927e:	bf3c      	itt	cc
 8019280:	3108      	addcc	r1, #8
 8019282:	6101      	strcc	r1, [r0, #16]
 8019284:	f10e 0101 	add.w	r1, lr, #1
 8019288:	6081      	str	r1, [r0, #8]
 801928a:	6901      	ldr	r1, [r0, #16]
 801928c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019290:	800d      	strh	r5, [r1, #0]
 8019292:	f04f 0e00 	mov.w	lr, #0
 8019296:	42ae      	cmp	r6, r5
 8019298:	f8a1 8002 	strh.w	r8, [r1, #2]
 801929c:	f8a1 e004 	strh.w	lr, [r1, #4]
 80192a0:	f8a1 e006 	strh.w	lr, [r1, #6]
 80192a4:	4463      	add	r3, ip
 80192a6:	d054      	beq.n	8019352 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80192a8:	9901      	ldr	r1, [sp, #4]
 80192aa:	1ac9      	subs	r1, r1, r3
 80192ac:	4461      	add	r1, ip
 80192ae:	0149      	lsls	r1, r1, #5
 80192b0:	fb91 fef4 	sdiv	lr, r1, r4
 80192b4:	fb04 111e 	mls	r1, r4, lr, r1
 80192b8:	2900      	cmp	r1, #0
 80192ba:	bfb8      	it	lt
 80192bc:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80192c0:	f10e 0701 	add.w	r7, lr, #1
 80192c4:	bfb8      	it	lt
 80192c6:	1909      	addlt	r1, r1, r4
 80192c8:	1b12      	subs	r2, r2, r4
 80192ca:	970d      	str	r7, [sp, #52]	@ 0x34
 80192cc:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80192d0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80192d2:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80192d6:	1852      	adds	r2, r2, r1
 80192d8:	bf54      	ite	pl
 80192da:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 80192de:	46f4      	movmi	ip, lr
 80192e0:	44e3      	add	fp, ip
 80192e2:	f8aa b004 	strh.w	fp, [sl, #4]
 80192e6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80192ea:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80192ee:	f8aa b006 	strh.w	fp, [sl, #6]
 80192f2:	4463      	add	r3, ip
 80192f4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80192f8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80192fc:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8019300:	bf58      	it	pl
 8019302:	1b12      	subpl	r2, r2, r4
 8019304:	443d      	add	r5, r7
 8019306:	ea5b 070a 	orrs.w	r7, fp, sl
 801930a:	d014      	beq.n	8019336 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801930c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8019310:	f1ba 0f00 	cmp.w	sl, #0
 8019314:	db0f      	blt.n	8019336 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8019316:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8019318:	45ba      	cmp	sl, r7
 801931a:	da0c      	bge.n	8019336 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801931c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8019320:	45ba      	cmp	sl, r7
 8019322:	bf38      	it	cc
 8019324:	f10c 0c08 	addcc.w	ip, ip, #8
 8019328:	f10a 0a01 	add.w	sl, sl, #1
 801932c:	bf38      	it	cc
 801932e:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8019332:	f8c0 a008 	str.w	sl, [r0, #8]
 8019336:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801933a:	f04f 0700 	mov.w	r7, #0
 801933e:	42ae      	cmp	r6, r5
 8019340:	f8ac 5000 	strh.w	r5, [ip]
 8019344:	f8ac 8002 	strh.w	r8, [ip, #2]
 8019348:	f8ac 7004 	strh.w	r7, [ip, #4]
 801934c:	f8ac 7006 	strh.w	r7, [ip, #6]
 8019350:	d1bc      	bne.n	80192cc <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8019352:	6904      	ldr	r4, [r0, #16]
 8019354:	9a01      	ldr	r2, [sp, #4]
 8019356:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019358:	1ad3      	subs	r3, r2, r3
 801935a:	88a2      	ldrh	r2, [r4, #4]
 801935c:	441a      	add	r2, r3
 801935e:	80a2      	strh	r2, [r4, #4]
 8019360:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019362:	3120      	adds	r1, #32
 8019364:	1a89      	subs	r1, r1, r2
 8019366:	88e2      	ldrh	r2, [r4, #6]
 8019368:	fb03 2301 	mla	r3, r3, r1, r2
 801936c:	80e3      	strh	r3, [r4, #6]
 801936e:	e64d      	b.n	801900c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8019370:	f04f 37ff 	mov.w	r7, #4294967295
 8019374:	970a      	str	r7, [sp, #40]	@ 0x28
 8019376:	434a      	muls	r2, r1
 8019378:	4264      	negs	r4, r4
 801937a:	2700      	movs	r7, #0
 801937c:	e756      	b.n	801922c <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801937e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8019382:	f009 031f 	and.w	r3, r9, #31
 8019386:	45d0      	cmp	r8, sl
 8019388:	f007 071f 	and.w	r7, r7, #31
 801938c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801938e:	fa1f fc8c 	uxth.w	ip, ip
 8019392:	fa1f fe8e 	uxth.w	lr, lr
 8019396:	d10a      	bne.n	80193ae <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8019398:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801939a:	449c      	add	ip, r3
 801939c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801939e:	f8a5 c004 	strh.w	ip, [r5, #4]
 80193a2:	441f      	add	r7, r3
 80193a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80193a6:	fb03 e707 	mla	r7, r3, r7, lr
 80193aa:	80ef      	strh	r7, [r5, #6]
 80193ac:	e6b9      	b.n	8019122 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80193ae:	2900      	cmp	r1, #0
 80193b0:	f2c0 80a8 	blt.w	8019504 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 80193b4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80193b6:	f1c7 0320 	rsb	r3, r7, #32
 80193ba:	4363      	muls	r3, r4
 80193bc:	2401      	movs	r4, #1
 80193be:	940d      	str	r4, [sp, #52]	@ 0x34
 80193c0:	2420      	movs	r4, #32
 80193c2:	940c      	str	r4, [sp, #48]	@ 0x30
 80193c4:	fb93 f4f1 	sdiv	r4, r3, r1
 80193c8:	fb01 3b14 	mls	fp, r1, r4, r3
 80193cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80193ce:	f1bb 0f00 	cmp.w	fp, #0
 80193d2:	bfb8      	it	lt
 80193d4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80193d8:	441f      	add	r7, r3
 80193da:	fb04 e707 	mla	r7, r4, r7, lr
 80193de:	44a4      	add	ip, r4
 80193e0:	f8a5 c004 	strh.w	ip, [r5, #4]
 80193e4:	80ef      	strh	r7, [r5, #6]
 80193e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80193ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80193ec:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80193f0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80193f4:	bfb8      	it	lt
 80193f6:	448b      	addlt	fp, r1
 80193f8:	eb08 0503 	add.w	r5, r8, r3
 80193fc:	ea5e 0307 	orrs.w	r3, lr, r7
 8019400:	d011      	beq.n	8019426 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8019402:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8019406:	f1be 0f00 	cmp.w	lr, #0
 801940a:	db0c      	blt.n	8019426 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801940c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801940e:	45be      	cmp	lr, r7
 8019410:	da09      	bge.n	8019426 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8019412:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8019416:	45be      	cmp	lr, r7
 8019418:	bf3c      	itt	cc
 801941a:	f10c 0708 	addcc.w	r7, ip, #8
 801941e:	6107      	strcc	r7, [r0, #16]
 8019420:	f10e 0701 	add.w	r7, lr, #1
 8019424:	6087      	str	r7, [r0, #8]
 8019426:	6907      	ldr	r7, [r0, #16]
 8019428:	b213      	sxth	r3, r2
 801942a:	9310      	str	r3, [sp, #64]	@ 0x40
 801942c:	807b      	strh	r3, [r7, #2]
 801942e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019430:	803d      	strh	r5, [r7, #0]
 8019432:	4555      	cmp	r5, sl
 8019434:	80be      	strh	r6, [r7, #4]
 8019436:	80fe      	strh	r6, [r7, #6]
 8019438:	eb04 0c03 	add.w	ip, r4, r3
 801943c:	d051      	beq.n	80194e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801943e:	9b01      	ldr	r3, [sp, #4]
 8019440:	eba3 070c 	sub.w	r7, r3, ip
 8019444:	443c      	add	r4, r7
 8019446:	0164      	lsls	r4, r4, #5
 8019448:	fb94 f8f1 	sdiv	r8, r4, r1
 801944c:	fb01 4418 	mls	r4, r1, r8, r4
 8019450:	2c00      	cmp	r4, #0
 8019452:	bfb8      	it	lt
 8019454:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8019458:	ebab 0301 	sub.w	r3, fp, r1
 801945c:	f108 0701 	add.w	r7, r8, #1
 8019460:	bfb8      	it	lt
 8019462:	1864      	addlt	r4, r4, r1
 8019464:	9309      	str	r3, [sp, #36]	@ 0x24
 8019466:	9711      	str	r7, [sp, #68]	@ 0x44
 8019468:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801946a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801946e:	191b      	adds	r3, r3, r4
 8019470:	bf58      	it	pl
 8019472:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8019474:	f8be b004 	ldrh.w	fp, [lr, #4]
 8019478:	9309      	str	r3, [sp, #36]	@ 0x24
 801947a:	bf48      	it	mi
 801947c:	4647      	movmi	r7, r8
 801947e:	44bb      	add	fp, r7
 8019480:	f8ae b004 	strh.w	fp, [lr, #4]
 8019484:	f8be b006 	ldrh.w	fp, [lr, #6]
 8019488:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801948c:	f8ae b006 	strh.w	fp, [lr, #6]
 8019490:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8019494:	44bc      	add	ip, r7
 8019496:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8019498:	f8be b006 	ldrh.w	fp, [lr, #6]
 801949c:	443d      	add	r5, r7
 801949e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80194a2:	bf5c      	itt	pl
 80194a4:	1a5b      	subpl	r3, r3, r1
 80194a6:	9309      	strpl	r3, [sp, #36]	@ 0x24
 80194a8:	ea5b 0307 	orrs.w	r3, fp, r7
 80194ac:	d011      	beq.n	80194d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80194ae:	f9be b002 	ldrsh.w	fp, [lr, #2]
 80194b2:	f1bb 0f00 	cmp.w	fp, #0
 80194b6:	db0c      	blt.n	80194d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80194b8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80194ba:	45bb      	cmp	fp, r7
 80194bc:	da09      	bge.n	80194d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80194be:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80194c2:	45bb      	cmp	fp, r7
 80194c4:	bf3c      	itt	cc
 80194c6:	f10e 0708 	addcc.w	r7, lr, #8
 80194ca:	6107      	strcc	r7, [r0, #16]
 80194cc:	f10b 0701 	add.w	r7, fp, #1
 80194d0:	6087      	str	r7, [r0, #8]
 80194d2:	6907      	ldr	r7, [r0, #16]
 80194d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80194d6:	803d      	strh	r5, [r7, #0]
 80194d8:	4555      	cmp	r5, sl
 80194da:	807b      	strh	r3, [r7, #2]
 80194dc:	80be      	strh	r6, [r7, #4]
 80194de:	80fe      	strh	r6, [r7, #6]
 80194e0:	d1c2      	bne.n	8019468 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80194e2:	9b01      	ldr	r3, [sp, #4]
 80194e4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80194e6:	eba3 0c0c 	sub.w	ip, r3, ip
 80194ea:	6903      	ldr	r3, [r0, #16]
 80194ec:	8899      	ldrh	r1, [r3, #4]
 80194ee:	4461      	add	r1, ip
 80194f0:	8099      	strh	r1, [r3, #4]
 80194f2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80194f4:	3720      	adds	r7, #32
 80194f6:	1a7f      	subs	r7, r7, r1
 80194f8:	88d9      	ldrh	r1, [r3, #6]
 80194fa:	fb0c 1c07 	mla	ip, ip, r7, r1
 80194fe:	f8a3 c006 	strh.w	ip, [r3, #6]
 8019502:	e60e      	b.n	8019122 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8019504:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019506:	f04f 34ff 	mov.w	r4, #4294967295
 801950a:	940d      	str	r4, [sp, #52]	@ 0x34
 801950c:	437b      	muls	r3, r7
 801950e:	4249      	negs	r1, r1
 8019510:	2400      	movs	r4, #0
 8019512:	e756      	b.n	80193c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8019514:	9905      	ldr	r1, [sp, #20]
 8019516:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 801951a:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801951e:	f001 011f 	and.w	r1, r1, #31
 8019522:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8019526:	9102      	str	r1, [sp, #8]
 8019528:	9904      	ldr	r1, [sp, #16]
 801952a:	45f3      	cmp	fp, lr
 801952c:	f009 0c1f 	and.w	ip, r9, #31
 8019530:	eba1 0406 	sub.w	r4, r1, r6
 8019534:	d108      	bne.n	8019548 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8019536:	9b02      	ldr	r3, [sp, #8]
 8019538:	449c      	add	ip, r3
 801953a:	44a0      	add	r8, r4
 801953c:	fb04 a40c 	mla	r4, r4, ip, sl
 8019540:	f8a7 8004 	strh.w	r8, [r7, #4]
 8019544:	80fc      	strh	r4, [r7, #6]
 8019546:	e458      	b.n	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8019548:	9905      	ldr	r1, [sp, #20]
 801954a:	ebb1 0109 	subs.w	r1, r1, r9
 801954e:	bf5b      	ittet	pl
 8019550:	f1cc 0520 	rsbpl	r5, ip, #32
 8019554:	436c      	mulpl	r4, r5
 8019556:	2500      	movmi	r5, #0
 8019558:	2520      	movpl	r5, #32
 801955a:	bf44      	itt	mi
 801955c:	fb04 f40c 	mulmi.w	r4, r4, ip
 8019560:	4249      	negmi	r1, r1
 8019562:	9501      	str	r5, [sp, #4]
 8019564:	9b01      	ldr	r3, [sp, #4]
 8019566:	fb94 f5f1 	sdiv	r5, r4, r1
 801956a:	fb01 4415 	mls	r4, r1, r5, r4
 801956e:	bf54      	ite	pl
 8019570:	f04f 0901 	movpl.w	r9, #1
 8019574:	f04f 39ff 	movmi.w	r9, #4294967295
 8019578:	2c00      	cmp	r4, #0
 801957a:	bfb8      	it	lt
 801957c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8019580:	449c      	add	ip, r3
 8019582:	44a8      	add	r8, r5
 8019584:	fb05 ac0c 	mla	ip, r5, ip, sl
 8019588:	f8a7 8004 	strh.w	r8, [r7, #4]
 801958c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8019590:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8019594:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8019598:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801959c:	bfb8      	it	lt
 801959e:	1864      	addlt	r4, r4, r1
 80195a0:	ea58 0707 	orrs.w	r7, r8, r7
 80195a4:	eb0b 0309 	add.w	r3, fp, r9
 80195a8:	d011      	beq.n	80195ce <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80195aa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80195ae:	f1b8 0f00 	cmp.w	r8, #0
 80195b2:	db0c      	blt.n	80195ce <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80195b4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80195b6:	45b8      	cmp	r8, r7
 80195b8:	da09      	bge.n	80195ce <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80195ba:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 80195be:	45b8      	cmp	r8, r7
 80195c0:	bf3c      	itt	cc
 80195c2:	f10c 0708 	addcc.w	r7, ip, #8
 80195c6:	6107      	strcc	r7, [r0, #16]
 80195c8:	f108 0701 	add.w	r7, r8, #1
 80195cc:	6087      	str	r7, [r0, #8]
 80195ce:	6907      	ldr	r7, [r0, #16]
 80195d0:	f04f 0c00 	mov.w	ip, #0
 80195d4:	b212      	sxth	r2, r2
 80195d6:	459e      	cmp	lr, r3
 80195d8:	803b      	strh	r3, [r7, #0]
 80195da:	807a      	strh	r2, [r7, #2]
 80195dc:	f8a7 c004 	strh.w	ip, [r7, #4]
 80195e0:	f8a7 c006 	strh.w	ip, [r7, #6]
 80195e4:	442e      	add	r6, r5
 80195e6:	d04d      	beq.n	8019684 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80195e8:	9f04      	ldr	r7, [sp, #16]
 80195ea:	1bbf      	subs	r7, r7, r6
 80195ec:	443d      	add	r5, r7
 80195ee:	016d      	lsls	r5, r5, #5
 80195f0:	fb95 f8f1 	sdiv	r8, r5, r1
 80195f4:	fb01 5518 	mls	r5, r1, r8, r5
 80195f8:	4565      	cmp	r5, ip
 80195fa:	bfb8      	it	lt
 80195fc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8019600:	f108 0701 	add.w	r7, r8, #1
 8019604:	bfb8      	it	lt
 8019606:	186d      	addlt	r5, r5, r1
 8019608:	1a64      	subs	r4, r4, r1
 801960a:	9703      	str	r7, [sp, #12]
 801960c:	f04f 0a00 	mov.w	sl, #0
 8019610:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8019614:	1964      	adds	r4, r4, r5
 8019616:	bf58      	it	pl
 8019618:	9f03      	ldrpl	r7, [sp, #12]
 801961a:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801961e:	bf48      	it	mi
 8019620:	4647      	movmi	r7, r8
 8019622:	44bb      	add	fp, r7
 8019624:	f8ac b004 	strh.w	fp, [ip, #4]
 8019628:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801962c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8019630:	f8ac b006 	strh.w	fp, [ip, #6]
 8019634:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8019638:	443e      	add	r6, r7
 801963a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801963e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8019642:	bf58      	it	pl
 8019644:	1a64      	subpl	r4, r4, r1
 8019646:	ea5b 0707 	orrs.w	r7, fp, r7
 801964a:	444b      	add	r3, r9
 801964c:	d011      	beq.n	8019672 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801964e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8019652:	f1bb 0f00 	cmp.w	fp, #0
 8019656:	db0c      	blt.n	8019672 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8019658:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801965a:	45bb      	cmp	fp, r7
 801965c:	da09      	bge.n	8019672 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801965e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8019662:	45bb      	cmp	fp, r7
 8019664:	bf3c      	itt	cc
 8019666:	f10c 0708 	addcc.w	r7, ip, #8
 801966a:	6107      	strcc	r7, [r0, #16]
 801966c:	f10b 0701 	add.w	r7, fp, #1
 8019670:	6087      	str	r7, [r0, #8]
 8019672:	6907      	ldr	r7, [r0, #16]
 8019674:	459e      	cmp	lr, r3
 8019676:	803b      	strh	r3, [r7, #0]
 8019678:	807a      	strh	r2, [r7, #2]
 801967a:	f8a7 a004 	strh.w	sl, [r7, #4]
 801967e:	f8a7 a006 	strh.w	sl, [r7, #6]
 8019682:	d1c5      	bne.n	8019610 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8019684:	9b04      	ldr	r3, [sp, #16]
 8019686:	1b9e      	subs	r6, r3, r6
 8019688:	6903      	ldr	r3, [r0, #16]
 801968a:	889a      	ldrh	r2, [r3, #4]
 801968c:	4432      	add	r2, r6
 801968e:	809a      	strh	r2, [r3, #4]
 8019690:	9a02      	ldr	r2, [sp, #8]
 8019692:	f102 0c20 	add.w	ip, r2, #32
 8019696:	9a01      	ldr	r2, [sp, #4]
 8019698:	ebac 0c02 	sub.w	ip, ip, r2
 801969c:	88da      	ldrh	r2, [r3, #6]
 801969e:	fb06 260c 	mla	r6, r6, ip, r2
 80196a2:	80de      	strh	r6, [r3, #6]
 80196a4:	f7ff bba9 	b.w	8018dfa <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080196a8 <_ZN8touchgfx7Outline6lineToEii>:
 80196a8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80196aa:	079b      	lsls	r3, r3, #30
 80196ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80196ae:	460e      	mov	r6, r1
 80196b0:	4615      	mov	r5, r2
 80196b2:	d511      	bpl.n	80196d8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80196b4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80196b8:	ea86 0701 	eor.w	r7, r6, r1
 80196bc:	ea85 0302 	eor.w	r3, r5, r2
 80196c0:	433b      	orrs	r3, r7
 80196c2:	d009      	beq.n	80196d8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80196c4:	4633      	mov	r3, r6
 80196c6:	9500      	str	r5, [sp, #0]
 80196c8:	f7ff fb3e 	bl	8018d48 <_ZN8touchgfx7Outline10renderLineEiiii>
 80196cc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80196ce:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80196d2:	f043 0301 	orr.w	r3, r3, #1
 80196d6:	6243      	str	r3, [r0, #36]	@ 0x24
 80196d8:	b003      	add	sp, #12
 80196da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080196dc <_ZN8touchgfx7Outline6moveToEii>:
 80196dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80196de:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80196e0:	4615      	mov	r5, r2
 80196e2:	079a      	lsls	r2, r3, #30
 80196e4:	4604      	mov	r4, r0
 80196e6:	460e      	mov	r6, r1
 80196e8:	d401      	bmi.n	80196ee <_ZN8touchgfx7Outline6moveToEii+0x12>
 80196ea:	f7ff faf9 	bl	8018ce0 <_ZN8touchgfx7Outline5resetEv>
 80196ee:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80196f0:	07db      	lsls	r3, r3, #31
 80196f2:	d504      	bpl.n	80196fe <_ZN8touchgfx7Outline6moveToEii+0x22>
 80196f4:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80196f8:	4620      	mov	r0, r4
 80196fa:	f7ff ffd5 	bl	80196a8 <_ZN8touchgfx7Outline6lineToEii>
 80196fe:	6923      	ldr	r3, [r4, #16]
 8019700:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019704:	1170      	asrs	r0, r6, #5
 8019706:	4290      	cmp	r0, r2
 8019708:	ea4f 1165 	mov.w	r1, r5, asr #5
 801970c:	d103      	bne.n	8019716 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801970e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8019712:	4291      	cmp	r1, r2
 8019714:	d01a      	beq.n	801974c <_ZN8touchgfx7Outline6moveToEii+0x70>
 8019716:	88df      	ldrh	r7, [r3, #6]
 8019718:	889a      	ldrh	r2, [r3, #4]
 801971a:	433a      	orrs	r2, r7
 801971c:	d010      	beq.n	8019740 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801971e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8019722:	2a00      	cmp	r2, #0
 8019724:	db0c      	blt.n	8019740 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8019726:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8019728:	42ba      	cmp	r2, r7
 801972a:	da09      	bge.n	8019740 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801972c:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8019730:	42ba      	cmp	r2, r7
 8019732:	bf38      	it	cc
 8019734:	3308      	addcc	r3, #8
 8019736:	f102 0201 	add.w	r2, r2, #1
 801973a:	bf38      	it	cc
 801973c:	6123      	strcc	r3, [r4, #16]
 801973e:	60a2      	str	r2, [r4, #8]
 8019740:	6923      	ldr	r3, [r4, #16]
 8019742:	2200      	movs	r2, #0
 8019744:	8018      	strh	r0, [r3, #0]
 8019746:	8059      	strh	r1, [r3, #2]
 8019748:	809a      	strh	r2, [r3, #4]
 801974a:	80da      	strh	r2, [r3, #6]
 801974c:	6166      	str	r6, [r4, #20]
 801974e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8019752:	6225      	str	r5, [r4, #32]
 8019754:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019756 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8019756:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801975a:	b0d0      	sub	sp, #320	@ 0x140
 801975c:	466c      	mov	r4, sp
 801975e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8019762:	4627      	mov	r7, r4
 8019764:	1a0d      	subs	r5, r1, r0
 8019766:	2d48      	cmp	r5, #72	@ 0x48
 8019768:	f100 0308 	add.w	r3, r0, #8
 801976c:	f340 80d5 	ble.w	801991a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8019770:	112d      	asrs	r5, r5, #4
 8019772:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8019776:	f9b0 9000 	ldrsh.w	r9, [r0]
 801977a:	6816      	ldr	r6, [r2, #0]
 801977c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8019780:	6006      	str	r6, [r0, #0]
 8019782:	6856      	ldr	r6, [r2, #4]
 8019784:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8019788:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801978c:	6046      	str	r6, [r0, #4]
 801978e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8019792:	f8a2 8002 	strh.w	r8, [r2, #2]
 8019796:	f8a2 e004 	strh.w	lr, [r2, #4]
 801979a:	f8a2 c006 	strh.w	ip, [r2, #6]
 801979e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80197a2:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80197a6:	4565      	cmp	r5, ip
 80197a8:	f1a1 0208 	sub.w	r2, r1, #8
 80197ac:	db06      	blt.n	80197bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80197ae:	d119      	bne.n	80197e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80197b0:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80197b4:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80197b8:	42ae      	cmp	r6, r5
 80197ba:	dd13      	ble.n	80197e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80197bc:	460e      	mov	r6, r1
 80197be:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80197c2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80197c6:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80197ca:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80197ce:	601d      	str	r5, [r3, #0]
 80197d0:	6875      	ldr	r5, [r6, #4]
 80197d2:	605d      	str	r5, [r3, #4]
 80197d4:	f821 9c08 	strh.w	r9, [r1, #-8]
 80197d8:	f821 cc06 	strh.w	ip, [r1, #-6]
 80197dc:	f821 8c04 	strh.w	r8, [r1, #-4]
 80197e0:	f821 ec02 	strh.w	lr, [r1, #-2]
 80197e4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80197e8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80197ec:	42ae      	cmp	r6, r5
 80197ee:	db06      	blt.n	80197fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80197f0:	d116      	bne.n	8019820 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80197f2:	f9b0 c000 	ldrsh.w	ip, [r0]
 80197f6:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80197fa:	45ac      	cmp	ip, r5
 80197fc:	da10      	bge.n	8019820 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80197fe:	681d      	ldr	r5, [r3, #0]
 8019800:	f9b0 8000 	ldrsh.w	r8, [r0]
 8019804:	6005      	str	r5, [r0, #0]
 8019806:	685d      	ldr	r5, [r3, #4]
 8019808:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801980c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8019810:	f8a0 8008 	strh.w	r8, [r0, #8]
 8019814:	6045      	str	r5, [r0, #4]
 8019816:	8146      	strh	r6, [r0, #10]
 8019818:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801981c:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8019820:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8019824:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8019828:	4565      	cmp	r5, ip
 801982a:	db06      	blt.n	801983a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 801982c:	d119      	bne.n	8019862 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801982e:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8019832:	f9b0 5000 	ldrsh.w	r5, [r0]
 8019836:	42ae      	cmp	r6, r5
 8019838:	da13      	bge.n	8019862 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801983a:	460e      	mov	r6, r1
 801983c:	f9b0 9000 	ldrsh.w	r9, [r0]
 8019840:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8019844:	6005      	str	r5, [r0, #0]
 8019846:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801984a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801984e:	6875      	ldr	r5, [r6, #4]
 8019850:	6045      	str	r5, [r0, #4]
 8019852:	f821 9c08 	strh.w	r9, [r1, #-8]
 8019856:	f821 cc06 	strh.w	ip, [r1, #-6]
 801985a:	f821 8c04 	strh.w	r8, [r1, #-4]
 801985e:	f821 ec02 	strh.w	lr, [r1, #-2]
 8019862:	3308      	adds	r3, #8
 8019864:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8019868:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801986c:	45e6      	cmp	lr, ip
 801986e:	dbf8      	blt.n	8019862 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8019870:	d105      	bne.n	801987e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8019872:	f9b3 6000 	ldrsh.w	r6, [r3]
 8019876:	f9b0 5000 	ldrsh.w	r5, [r0]
 801987a:	42ae      	cmp	r6, r5
 801987c:	dbf1      	blt.n	8019862 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801987e:	4615      	mov	r5, r2
 8019880:	3a08      	subs	r2, #8
 8019882:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8019886:	45b4      	cmp	ip, r6
 8019888:	dbf9      	blt.n	801987e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801988a:	d105      	bne.n	8019898 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 801988c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8019890:	f9b2 6000 	ldrsh.w	r6, [r2]
 8019894:	45b0      	cmp	r8, r6
 8019896:	dbf2      	blt.n	801987e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8019898:	4293      	cmp	r3, r2
 801989a:	f1a5 0608 	sub.w	r6, r5, #8
 801989e:	d816      	bhi.n	80198ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80198a0:	f8d6 c000 	ldr.w	ip, [r6]
 80198a4:	f9b3 a000 	ldrsh.w	sl, [r3]
 80198a8:	f8c3 c000 	str.w	ip, [r3]
 80198ac:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80198b0:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80198b4:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80198b8:	f8c3 c004 	str.w	ip, [r3, #4]
 80198bc:	f825 ac08 	strh.w	sl, [r5, #-8]
 80198c0:	f825 ec06 	strh.w	lr, [r5, #-6]
 80198c4:	f825 9c04 	strh.w	r9, [r5, #-4]
 80198c8:	f825 8c02 	strh.w	r8, [r5, #-2]
 80198cc:	e7c9      	b.n	8019862 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80198ce:	f8d6 e000 	ldr.w	lr, [r6]
 80198d2:	f9b0 a000 	ldrsh.w	sl, [r0]
 80198d6:	f8c0 e000 	str.w	lr, [r0]
 80198da:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80198de:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80198e2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80198e6:	f8c0 e004 	str.w	lr, [r0, #4]
 80198ea:	f825 ac08 	strh.w	sl, [r5, #-8]
 80198ee:	f825 cc06 	strh.w	ip, [r5, #-6]
 80198f2:	f825 9c04 	strh.w	r9, [r5, #-4]
 80198f6:	f825 8c02 	strh.w	r8, [r5, #-2]
 80198fa:	1acd      	subs	r5, r1, r3
 80198fc:	1a16      	subs	r6, r2, r0
 80198fe:	10ed      	asrs	r5, r5, #3
 8019900:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8019904:	bfb5      	itete	lt
 8019906:	e9c4 0200 	strdlt	r0, r2, [r4]
 801990a:	e9c4 3100 	strdge	r3, r1, [r4]
 801990e:	460a      	movlt	r2, r1
 8019910:	4603      	movge	r3, r0
 8019912:	3408      	adds	r4, #8
 8019914:	4618      	mov	r0, r3
 8019916:	4611      	mov	r1, r2
 8019918:	e724      	b.n	8019764 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801991a:	4299      	cmp	r1, r3
 801991c:	d928      	bls.n	8019970 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801991e:	f1a3 0210 	sub.w	r2, r3, #16
 8019922:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8019926:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 801992a:	45ac      	cmp	ip, r5
 801992c:	db06      	blt.n	801993c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801992e:	d11d      	bne.n	801996c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8019930:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8019934:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8019938:	42ae      	cmp	r6, r5
 801993a:	da17      	bge.n	801996c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801993c:	4615      	mov	r5, r2
 801993e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8019942:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8019946:	6116      	str	r6, [r2, #16]
 8019948:	686e      	ldr	r6, [r5, #4]
 801994a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801994e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8019952:	f8a2 9008 	strh.w	r9, [r2, #8]
 8019956:	42a8      	cmp	r0, r5
 8019958:	6156      	str	r6, [r2, #20]
 801995a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801995e:	f8a2 800c 	strh.w	r8, [r2, #12]
 8019962:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8019966:	f1a2 0208 	sub.w	r2, r2, #8
 801996a:	d1da      	bne.n	8019922 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 801996c:	3308      	adds	r3, #8
 801996e:	e7d4      	b.n	801991a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8019970:	42bc      	cmp	r4, r7
 8019972:	d903      	bls.n	801997c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8019974:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8019978:	3c08      	subs	r4, #8
 801997a:	e6f3      	b.n	8019764 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801997c:	b050      	add	sp, #320	@ 0x140
 801997e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019982 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8019982:	b510      	push	{r4, lr}
 8019984:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019986:	07da      	lsls	r2, r3, #31
 8019988:	4604      	mov	r4, r0
 801998a:	d507      	bpl.n	801999c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801998c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8019990:	f7ff fe8a 	bl	80196a8 <_ZN8touchgfx7Outline6lineToEii>
 8019994:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8019996:	f023 0301 	bic.w	r3, r3, #1
 801999a:	6243      	str	r3, [r0, #36]	@ 0x24
 801999c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801999e:	079b      	lsls	r3, r3, #30
 80199a0:	d521      	bpl.n	80199e6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80199a2:	6923      	ldr	r3, [r4, #16]
 80199a4:	88d9      	ldrh	r1, [r3, #6]
 80199a6:	889a      	ldrh	r2, [r3, #4]
 80199a8:	430a      	orrs	r2, r1
 80199aa:	d010      	beq.n	80199ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80199ac:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80199b0:	2a00      	cmp	r2, #0
 80199b2:	db0c      	blt.n	80199ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80199b4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80199b6:	428a      	cmp	r2, r1
 80199b8:	da09      	bge.n	80199ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80199ba:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80199be:	4291      	cmp	r1, r2
 80199c0:	bf88      	it	hi
 80199c2:	3308      	addhi	r3, #8
 80199c4:	f102 0201 	add.w	r2, r2, #1
 80199c8:	bf88      	it	hi
 80199ca:	6123      	strhi	r3, [r4, #16]
 80199cc:	60a2      	str	r2, [r4, #8]
 80199ce:	68a1      	ldr	r1, [r4, #8]
 80199d0:	b129      	cbz	r1, 80199de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80199d2:	6863      	ldr	r3, [r4, #4]
 80199d4:	4299      	cmp	r1, r3
 80199d6:	d802      	bhi.n	80199de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80199d8:	68e0      	ldr	r0, [r4, #12]
 80199da:	f7ff febc 	bl	8019756 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80199de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80199e0:	f023 0302 	bic.w	r3, r3, #2
 80199e4:	6263      	str	r3, [r4, #36]	@ 0x24
 80199e6:	68e0      	ldr	r0, [r4, #12]
 80199e8:	bd10      	pop	{r4, pc}
	...

080199ec <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80199ec:	4b01      	ldr	r3, [pc, #4]	@ (80199f4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80199ee:	6818      	ldr	r0, [r3, #0]
 80199f0:	4770      	bx	lr
 80199f2:	bf00      	nop
 80199f4:	200138ec 	.word	0x200138ec

080199f8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80199f8:	4b01      	ldr	r3, [pc, #4]	@ (8019a00 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80199fa:	6818      	ldr	r0, [r3, #0]
 80199fc:	4770      	bx	lr
 80199fe:	bf00      	nop
 8019a00:	200138f0 	.word	0x200138f0

08019a04 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8019a04:	b510      	push	{r4, lr}
 8019a06:	6803      	ldr	r3, [r0, #0]
 8019a08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019a0a:	460c      	mov	r4, r1
 8019a0c:	4798      	blx	r3
 8019a0e:	1b03      	subs	r3, r0, r4
 8019a10:	4258      	negs	r0, r3
 8019a12:	4158      	adcs	r0, r3
 8019a14:	bd10      	pop	{r4, pc}
	...

08019a18 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8019a18:	4b01      	ldr	r3, [pc, #4]	@ (8019a20 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8019a1a:	6019      	str	r1, [r3, #0]
 8019a1c:	4770      	bx	lr
 8019a1e:	bf00      	nop
 8019a20:	200138f4 	.word	0x200138f4

08019a24 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8019a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a28:	4696      	mov	lr, r2
 8019a2a:	4605      	mov	r5, r0
 8019a2c:	4614      	mov	r4, r2
 8019a2e:	460e      	mov	r6, r1
 8019a30:	461f      	mov	r7, r3
 8019a32:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019a36:	b097      	sub	sp, #92	@ 0x5c
 8019a38:	f10d 0c1c 	add.w	ip, sp, #28
 8019a3c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019a40:	f8de 3000 	ldr.w	r3, [lr]
 8019a44:	f8cc 3000 	str.w	r3, [ip]
 8019a48:	f104 0e14 	add.w	lr, r4, #20
 8019a4c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019a50:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8019a54:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019a58:	f8de 3000 	ldr.w	r3, [lr]
 8019a5c:	f8cc 3000 	str.w	r3, [ip]
 8019a60:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8019a64:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019a68:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8019a6c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019a70:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8019a74:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8019a78:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8019a7c:	f8de 3000 	ldr.w	r3, [lr]
 8019a80:	f8cc 3000 	str.w	r3, [ip]
 8019a84:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019a86:	682b      	ldr	r3, [r5, #0]
 8019a88:	9201      	str	r2, [sp, #4]
 8019a8a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8019a8e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019a90:	9200      	str	r2, [sp, #0]
 8019a92:	f8cd 8008 	str.w	r8, [sp, #8]
 8019a96:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8019a9a:	aa07      	add	r2, sp, #28
 8019a9c:	463b      	mov	r3, r7
 8019a9e:	4631      	mov	r1, r6
 8019aa0:	4628      	mov	r0, r5
 8019aa2:	47d8      	blx	fp
 8019aa4:	46a6      	mov	lr, r4
 8019aa6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019aaa:	f10d 0c1c 	add.w	ip, sp, #28
 8019aae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019ab2:	f8de 3000 	ldr.w	r3, [lr]
 8019ab6:	f8cc 3000 	str.w	r3, [ip]
 8019aba:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8019abe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019ac2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8019ac6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019aca:	343c      	adds	r4, #60	@ 0x3c
 8019acc:	f8de 3000 	ldr.w	r3, [lr]
 8019ad0:	f8cc 3000 	str.w	r3, [ip]
 8019ad4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019ad6:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8019ada:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019ade:	6823      	ldr	r3, [r4, #0]
 8019ae0:	f8cc 3000 	str.w	r3, [ip]
 8019ae4:	682b      	ldr	r3, [r5, #0]
 8019ae6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8019aea:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019aec:	9201      	str	r2, [sp, #4]
 8019aee:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019af0:	9200      	str	r2, [sp, #0]
 8019af2:	f8cd 8008 	str.w	r8, [sp, #8]
 8019af6:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 8019af8:	aa07      	add	r2, sp, #28
 8019afa:	463b      	mov	r3, r7
 8019afc:	4631      	mov	r1, r6
 8019afe:	4628      	mov	r0, r5
 8019b00:	47a0      	blx	r4
 8019b02:	b017      	add	sp, #92	@ 0x5c
 8019b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b08 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8019b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b0c:	b08d      	sub	sp, #52	@ 0x34
 8019b0e:	4688      	mov	r8, r1
 8019b10:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8019b12:	f8d3 c000 	ldr.w	ip, [r3]
 8019b16:	680f      	ldr	r7, [r1, #0]
 8019b18:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8019b1c:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8019b20:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 8019b24:	edd3 6a07 	vldr	s13, [r3, #28]
 8019b28:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8019b2a:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8019b2e:	f9b1 9000 	ldrsh.w	r9, [r1]
 8019b32:	f9ba 1000 	ldrsh.w	r1, [sl]
 8019b36:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8019b3a:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8019b3e:	eba7 070c 	sub.w	r7, r7, ip
 8019b42:	42bc      	cmp	r4, r7
 8019b44:	bfa8      	it	ge
 8019b46:	463c      	movge	r4, r7
 8019b48:	ee07 4a90 	vmov	s15, r4
 8019b4c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8019b50:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8019b54:	ee25 4a04 	vmul.f32	s8, s10, s8
 8019b58:	ee65 4a24 	vmul.f32	s9, s10, s9
 8019b5c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8019b60:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8019b64:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019b68:	eb09 0e0c 	add.w	lr, r9, ip
 8019b6c:	4571      	cmp	r1, lr
 8019b6e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8019b72:	ee32 1a05 	vadd.f32	s2, s4, s10
 8019b76:	ee36 0a84 	vadd.f32	s0, s13, s8
 8019b7a:	ee61 1a87 	vmul.f32	s3, s3, s14
 8019b7e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019b82:	f340 808d 	ble.w	8019ca0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8019b86:	eba1 060e 	sub.w	r6, r1, lr
 8019b8a:	fb96 f5f4 	sdiv	r5, r6, r4
 8019b8e:	ee07 5a10 	vmov	s14, r5
 8019b92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019b96:	2d00      	cmp	r5, #0
 8019b98:	fb04 6615 	mls	r6, r4, r5, r6
 8019b9c:	eea7 0a04 	vfma.f32	s0, s14, s8
 8019ba0:	eee7 0a24 	vfma.f32	s1, s14, s9
 8019ba4:	eea7 1a05 	vfma.f32	s2, s14, s10
 8019ba8:	dd13      	ble.n	8019bd2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8019baa:	ee70 6a44 	vsub.f32	s13, s0, s8
 8019bae:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8019bb2:	eef5 6a40 	vcmp.f32	s13, #0.0
 8019bb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019bba:	bf18      	it	ne
 8019bbc:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8019bc0:	ee31 2a45 	vsub.f32	s4, s2, s10
 8019bc4:	bf08      	it	eq
 8019bc6:	eeb0 7a67 	vmoveq.f32	s14, s15
 8019bca:	ee61 1a87 	vmul.f32	s3, s3, s14
 8019bce:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019bd2:	fb05 f204 	mul.w	r2, r5, r4
 8019bd6:	1abf      	subs	r7, r7, r2
 8019bd8:	4494      	add	ip, r2
 8019bda:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8019bde:	4411      	add	r1, r2
 8019be0:	eb09 020c 	add.w	r2, r9, ip
 8019be4:	443a      	add	r2, r7
 8019be6:	b209      	sxth	r1, r1
 8019be8:	428a      	cmp	r2, r1
 8019bea:	bfc4      	itt	gt
 8019bec:	eba1 0209 	subgt.w	r2, r1, r9
 8019bf0:	eba2 070c 	subgt.w	r7, r2, ip
 8019bf4:	2f00      	cmp	r7, #0
 8019bf6:	dd50      	ble.n	8019c9a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8019bf8:	fb97 f1f4 	sdiv	r1, r7, r4
 8019bfc:	fb04 7211 	mls	r2, r4, r1, r7
 8019c00:	b90a      	cbnz	r2, 8019c06 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8019c02:	3901      	subs	r1, #1
 8019c04:	4622      	mov	r2, r4
 8019c06:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8019c0a:	6840      	ldr	r0, [r0, #4]
 8019c0c:	900b      	str	r0, [sp, #44]	@ 0x2c
 8019c0e:	f8d0 a000 	ldr.w	sl, [r0]
 8019c12:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8019c14:	9008      	str	r0, [sp, #32]
 8019c16:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8019c1a:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8019c1c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8019c20:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8019c24:	695b      	ldr	r3, [r3, #20]
 8019c26:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019c28:	445b      	add	r3, fp
 8019c2a:	eef0 6a42 	vmov.f32	s13, s4
 8019c2e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8019c32:	ee21 3a23 	vmul.f32	s6, s2, s7
 8019c36:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8019c3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c3e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8019c42:	9307      	str	r3, [sp, #28]
 8019c44:	ee17 7a90 	vmov	r7, s15
 8019c48:	ee73 7a42 	vsub.f32	s15, s6, s4
 8019c4c:	eeb0 7a61 	vmov.f32	s14, s3
 8019c50:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8019c54:	ee16 3a90 	vmov	r3, s13
 8019c58:	fb97 f7f4 	sdiv	r7, r7, r4
 8019c5c:	ee17 ca90 	vmov	ip, s15
 8019c60:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8019c64:	fb9c fcf4 	sdiv	ip, ip, r4
 8019c68:	fb0c 3306 	mla	r3, ip, r6, r3
 8019c6c:	9302      	str	r3, [sp, #8]
 8019c6e:	ee17 3a10 	vmov	r3, s14
 8019c72:	44b6      	add	lr, r6
 8019c74:	fb04 e505 	mla	r5, r4, r5, lr
 8019c78:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8019c7c:	fb07 3706 	mla	r7, r7, r6, r3
 8019c80:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8019c84:	e9cd 4700 	strd	r4, r7, [sp]
 8019c88:	2900      	cmp	r1, #0
 8019c8a:	bfcc      	ite	gt
 8019c8c:	46a1      	movgt	r9, r4
 8019c8e:	4691      	movle	r9, r2
 8019c90:	eba9 0306 	sub.w	r3, r9, r6
 8019c94:	f8da 4008 	ldr.w	r4, [sl, #8]
 8019c98:	47a0      	blx	r4
 8019c9a:	b00d      	add	sp, #52	@ 0x34
 8019c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ca0:	2500      	movs	r5, #0
 8019ca2:	462e      	mov	r6, r5
 8019ca4:	e799      	b.n	8019bda <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08019ca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8019ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cac:	b0db      	sub	sp, #364	@ 0x16c
 8019cae:	461d      	mov	r5, r3
 8019cb0:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8019cb4:	930a      	str	r3, [sp, #40]	@ 0x28
 8019cb6:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8019cba:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019cbc:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8019cc0:	9310      	str	r3, [sp, #64]	@ 0x40
 8019cc2:	6803      	ldr	r3, [r0, #0]
 8019cc4:	910f      	str	r1, [sp, #60]	@ 0x3c
 8019cc6:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8019cc8:	9009      	str	r0, [sp, #36]	@ 0x24
 8019cca:	4614      	mov	r4, r2
 8019ccc:	4629      	mov	r1, r5
 8019cce:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8019cd2:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8019cd6:	47b8      	blx	r7
 8019cd8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019cda:	6058      	str	r0, [r3, #4]
 8019cdc:	2800      	cmp	r0, #0
 8019cde:	f000 83a1 	beq.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019ce2:	682b      	ldr	r3, [r5, #0]
 8019ce4:	9314      	str	r3, [sp, #80]	@ 0x50
 8019ce6:	686b      	ldr	r3, [r5, #4]
 8019ce8:	9315      	str	r3, [sp, #84]	@ 0x54
 8019cea:	4bc4      	ldr	r3, [pc, #784]	@ (8019ffc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8019cec:	ed94 7a02 	vldr	s14, [r4, #8]
 8019cf0:	7819      	ldrb	r1, [r3, #0]
 8019cf2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8019cf6:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8019cfa:	2900      	cmp	r1, #0
 8019cfc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019d00:	bf16      	itet	ne
 8019d02:	4619      	movne	r1, r3
 8019d04:	4611      	moveq	r1, r2
 8019d06:	4613      	movne	r3, r2
 8019d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d0c:	9116      	str	r1, [sp, #88]	@ 0x58
 8019d0e:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8019d12:	f240 8387 	bls.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d16:	ed94 7a07 	vldr	s14, [r4, #28]
 8019d1a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019d1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d22:	f240 837f 	bls.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d26:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8019d2a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d32:	f240 8377 	bls.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d36:	6822      	ldr	r2, [r4, #0]
 8019d38:	4bb1      	ldr	r3, [pc, #708]	@ (801a000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8019d3a:	429a      	cmp	r2, r3
 8019d3c:	f2c0 8372 	blt.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d40:	49b0      	ldr	r1, [pc, #704]	@ (801a004 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8019d42:	6963      	ldr	r3, [r4, #20]
 8019d44:	428a      	cmp	r2, r1
 8019d46:	f300 836d 	bgt.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d4a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8019d4e:	48ae      	ldr	r0, [pc, #696]	@ (801a008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8019d50:	33ff      	adds	r3, #255	@ 0xff
 8019d52:	4283      	cmp	r3, r0
 8019d54:	f200 8366 	bhi.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d58:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8019d5a:	4dac      	ldr	r5, [pc, #688]	@ (801a00c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8019d5c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8019d60:	33ff      	adds	r3, #255	@ 0xff
 8019d62:	42ab      	cmp	r3, r5
 8019d64:	f200 835e 	bhi.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d68:	6862      	ldr	r2, [r4, #4]
 8019d6a:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8019d6e:	33ff      	adds	r3, #255	@ 0xff
 8019d70:	4283      	cmp	r3, r0
 8019d72:	f200 8357 	bhi.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d76:	69a1      	ldr	r1, [r4, #24]
 8019d78:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8019d7c:	33ff      	adds	r3, #255	@ 0xff
 8019d7e:	4283      	cmp	r3, r0
 8019d80:	f200 8350 	bhi.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d84:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8019d86:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8019d8a:	30ff      	adds	r0, #255	@ 0xff
 8019d8c:	42a8      	cmp	r0, r5
 8019d8e:	f200 8349 	bhi.w	801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019d92:	428a      	cmp	r2, r1
 8019d94:	f280 8110 	bge.w	8019fb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8019d98:	429a      	cmp	r2, r3
 8019d9a:	f300 8119 	bgt.w	8019fd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8019d9e:	4299      	cmp	r1, r3
 8019da0:	f280 811d 	bge.w	8019fde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8019da4:	2502      	movs	r5, #2
 8019da6:	2701      	movs	r7, #1
 8019da8:	46a9      	mov	r9, r5
 8019daa:	46b8      	mov	r8, r7
 8019dac:	f04f 0a00 	mov.w	sl, #0
 8019db0:	4621      	mov	r1, r4
 8019db2:	a849      	add	r0, sp, #292	@ 0x124
 8019db4:	f004 fa70 	bl	801e298 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8019db8:	4622      	mov	r2, r4
 8019dba:	4653      	mov	r3, sl
 8019dbc:	a949      	add	r1, sp, #292	@ 0x124
 8019dbe:	f8cd 9000 	str.w	r9, [sp]
 8019dc2:	a819      	add	r0, sp, #100	@ 0x64
 8019dc4:	f004 fb98 	bl	801e4f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8019dc8:	4622      	mov	r2, r4
 8019dca:	4653      	mov	r3, sl
 8019dcc:	a949      	add	r1, sp, #292	@ 0x124
 8019dce:	f8cd 8000 	str.w	r8, [sp]
 8019dd2:	a829      	add	r0, sp, #164	@ 0xa4
 8019dd4:	f004 fb90 	bl	801e4f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8019dd8:	4643      	mov	r3, r8
 8019dda:	4622      	mov	r2, r4
 8019ddc:	a949      	add	r1, sp, #292	@ 0x124
 8019dde:	f8cd 9000 	str.w	r9, [sp]
 8019de2:	a839      	add	r0, sp, #228	@ 0xe4
 8019de4:	f004 fb88 	bl	801e4f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8019de8:	42af      	cmp	r7, r5
 8019dea:	bfb5      	itete	lt
 8019dec:	2300      	movlt	r3, #0
 8019dee:	2301      	movge	r3, #1
 8019df0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8019df2:	930e      	strge	r3, [sp, #56]	@ 0x38
 8019df4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019df6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8019dfa:	af12      	add	r7, sp, #72	@ 0x48
 8019dfc:	bfb9      	ittee	lt
 8019dfe:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8019e00:	ac19      	addlt	r4, sp, #100	@ 0x64
 8019e02:	ad19      	addge	r5, sp, #100	@ 0x64
 8019e04:	ac29      	addge	r4, sp, #164	@ 0xa4
 8019e06:	e887 0003 	stmia.w	r7, {r0, r1}
 8019e0a:	b928      	cbnz	r0, 8019e18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8019e0c:	4b80      	ldr	r3, [pc, #512]	@ (801a010 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8019e0e:	6818      	ldr	r0, [r3, #0]
 8019e10:	6803      	ldr	r3, [r0, #0]
 8019e12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019e14:	4798      	blx	r3
 8019e16:	6038      	str	r0, [r7, #0]
 8019e18:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8019e1a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8019e1e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8019e22:	930c      	str	r3, [sp, #48]	@ 0x30
 8019e24:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019e26:	6963      	ldr	r3, [r4, #20]
 8019e28:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8019e2a:	440b      	add	r3, r1
 8019e2c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8019e30:	4408      	add	r0, r1
 8019e32:	b200      	sxth	r0, r0
 8019e34:	4283      	cmp	r3, r0
 8019e36:	900d      	str	r0, [sp, #52]	@ 0x34
 8019e38:	f280 80dd 	bge.w	8019ff6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8019e3c:	428b      	cmp	r3, r1
 8019e3e:	da08      	bge.n	8019e52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8019e40:	2a00      	cmp	r2, #0
 8019e42:	dd06      	ble.n	8019e52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8019e44:	1acb      	subs	r3, r1, r3
 8019e46:	429a      	cmp	r2, r3
 8019e48:	f2c0 80e4 	blt.w	801a014 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8019e4c:	2b00      	cmp	r3, #0
 8019e4e:	f300 80e2 	bgt.w	801a016 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8019e52:	6967      	ldr	r7, [r4, #20]
 8019e54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e56:	443b      	add	r3, r7
 8019e58:	461f      	mov	r7, r3
 8019e5a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019e5c:	1bdf      	subs	r7, r3, r7
 8019e5e:	4297      	cmp	r7, r2
 8019e60:	bfa8      	it	ge
 8019e62:	4617      	movge	r7, r2
 8019e64:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8019e68:	2f00      	cmp	r7, #0
 8019e6a:	f340 8166 	ble.w	801a13a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8019e6e:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8019e70:	6829      	ldr	r1, [r5, #0]
 8019e72:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019e76:	f9bb 3000 	ldrsh.w	r3, [fp]
 8019e7a:	6820      	ldr	r0, [r4, #0]
 8019e7c:	4411      	add	r1, r2
 8019e7e:	4299      	cmp	r1, r3
 8019e80:	dd1a      	ble.n	8019eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8019e82:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8019e86:	440b      	add	r3, r1
 8019e88:	4402      	add	r2, r0
 8019e8a:	b21b      	sxth	r3, r3
 8019e8c:	429a      	cmp	r2, r3
 8019e8e:	dc13      	bgt.n	8019eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8019e90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e92:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019e94:	681b      	ldr	r3, [r3, #0]
 8019e96:	9206      	str	r2, [sp, #24]
 8019e98:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019e9a:	9205      	str	r2, [sp, #20]
 8019e9c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019e9e:	9500      	str	r5, [sp, #0]
 8019ea0:	e9cd b203 	strd	fp, r2, [sp, #12]
 8019ea4:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8019ea6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019ea8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8019eac:	a912      	add	r1, sp, #72	@ 0x48
 8019eae:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8019eb2:	aa49      	add	r2, sp, #292	@ 0x124
 8019eb4:	4623      	mov	r3, r4
 8019eb6:	47c8      	blx	r9
 8019eb8:	e9d4 2300 	ldrd	r2, r3, [r4]
 8019ebc:	441a      	add	r2, r3
 8019ebe:	6963      	ldr	r3, [r4, #20]
 8019ec0:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8019ec4:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8019ec8:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8019ecc:	68a1      	ldr	r1, [r4, #8]
 8019ece:	ed94 6a08 	vldr	s12, [r4, #32]
 8019ed2:	6022      	str	r2, [r4, #0]
 8019ed4:	3301      	adds	r3, #1
 8019ed6:	6163      	str	r3, [r4, #20]
 8019ed8:	69a3      	ldr	r3, [r4, #24]
 8019eda:	ee37 7a27 	vadd.f32	s14, s14, s15
 8019ede:	3b01      	subs	r3, #1
 8019ee0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8019ee4:	61a3      	str	r3, [r4, #24]
 8019ee6:	6923      	ldr	r3, [r4, #16]
 8019ee8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8019eec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019ef0:	edd4 6a07 	vldr	s13, [r4, #28]
 8019ef4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8019ef8:	440b      	add	r3, r1
 8019efa:	68e1      	ldr	r1, [r4, #12]
 8019efc:	6123      	str	r3, [r4, #16]
 8019efe:	ee76 6a86 	vadd.f32	s13, s13, s12
 8019f02:	428b      	cmp	r3, r1
 8019f04:	edc4 6a07 	vstr	s13, [r4, #28]
 8019f08:	db15      	blt.n	8019f36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8019f0a:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8019f0e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8019f12:	3201      	adds	r2, #1
 8019f14:	edc4 6a07 	vstr	s13, [r4, #28]
 8019f18:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8019f1c:	6022      	str	r2, [r4, #0]
 8019f1e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019f22:	1a5b      	subs	r3, r3, r1
 8019f24:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8019f28:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8019f2c:	6123      	str	r3, [r4, #16]
 8019f2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8019f32:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8019f36:	e9d5 2300 	ldrd	r2, r3, [r5]
 8019f3a:	441a      	add	r2, r3
 8019f3c:	696b      	ldr	r3, [r5, #20]
 8019f3e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8019f42:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8019f46:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8019f4a:	68a9      	ldr	r1, [r5, #8]
 8019f4c:	ed95 6a08 	vldr	s12, [r5, #32]
 8019f50:	602a      	str	r2, [r5, #0]
 8019f52:	3301      	adds	r3, #1
 8019f54:	616b      	str	r3, [r5, #20]
 8019f56:	69ab      	ldr	r3, [r5, #24]
 8019f58:	ee37 7a27 	vadd.f32	s14, s14, s15
 8019f5c:	3b01      	subs	r3, #1
 8019f5e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8019f62:	61ab      	str	r3, [r5, #24]
 8019f64:	692b      	ldr	r3, [r5, #16]
 8019f66:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019f6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8019f6e:	edd5 6a07 	vldr	s13, [r5, #28]
 8019f72:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019f76:	440b      	add	r3, r1
 8019f78:	68e9      	ldr	r1, [r5, #12]
 8019f7a:	612b      	str	r3, [r5, #16]
 8019f7c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8019f80:	428b      	cmp	r3, r1
 8019f82:	edc5 6a07 	vstr	s13, [r5, #28]
 8019f86:	db15      	blt.n	8019fb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8019f88:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8019f8c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8019f90:	3201      	adds	r2, #1
 8019f92:	edc5 6a07 	vstr	s13, [r5, #28]
 8019f96:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8019f9a:	602a      	str	r2, [r5, #0]
 8019f9c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8019fa0:	1a5b      	subs	r3, r3, r1
 8019fa2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8019fa6:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8019faa:	612b      	str	r3, [r5, #16]
 8019fac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8019fb0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8019fb4:	3f01      	subs	r7, #1
 8019fb6:	e757      	b.n	8019e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8019fb8:	4299      	cmp	r1, r3
 8019fba:	dc13      	bgt.n	8019fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8019fbc:	429a      	cmp	r2, r3
 8019fbe:	da14      	bge.n	8019fea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8019fc0:	2502      	movs	r5, #2
 8019fc2:	2703      	movs	r7, #3
 8019fc4:	46a9      	mov	r9, r5
 8019fc6:	f04f 0800 	mov.w	r8, #0
 8019fca:	f04f 0a01 	mov.w	sl, #1
 8019fce:	e6ef      	b.n	8019db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8019fd0:	2501      	movs	r5, #1
 8019fd2:	2700      	movs	r7, #0
 8019fd4:	46a9      	mov	r9, r5
 8019fd6:	46b8      	mov	r8, r7
 8019fd8:	f04f 0a02 	mov.w	sl, #2
 8019fdc:	e6e8      	b.n	8019db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8019fde:	2501      	movs	r5, #1
 8019fe0:	2702      	movs	r7, #2
 8019fe2:	e6e1      	b.n	8019da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8019fe4:	2500      	movs	r5, #0
 8019fe6:	2701      	movs	r7, #1
 8019fe8:	e7f4      	b.n	8019fd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8019fea:	2702      	movs	r7, #2
 8019fec:	2503      	movs	r5, #3
 8019fee:	f04f 0900 	mov.w	r9, #0
 8019ff2:	46b8      	mov	r8, r7
 8019ff4:	e7e9      	b.n	8019fca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8019ff6:	4613      	mov	r3, r2
 8019ff8:	e728      	b.n	8019e4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8019ffa:	bf00      	nop
 8019ffc:	200138dc 	.word	0x200138dc
 801a000:	fffd8f01 	.word	0xfffd8f01
 801a004:	00027100 	.word	0x00027100
 801a008:	0004e1ff 	.word	0x0004e1ff
 801a00c:	0004e1fe 	.word	0x0004e1fe
 801a010:	200138e4 	.word	0x200138e4
 801a014:	4613      	mov	r3, r2
 801a016:	992b      	ldr	r1, [sp, #172]	@ 0xac
 801a018:	9111      	str	r1, [sp, #68]	@ 0x44
 801a01a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 801a01e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 801a022:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 801a024:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 801a028:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 801a02c:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 801a030:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 801a034:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 801a038:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 801a03c:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 801a040:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 801a044:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 801a048:	469e      	mov	lr, r3
 801a04a:	469c      	mov	ip, r3
 801a04c:	f04f 0900 	mov.w	r9, #0
 801a050:	f1bc 0f00 	cmp.w	ip, #0
 801a054:	d147      	bne.n	801a0e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801a056:	eb03 0c07 	add.w	ip, r3, r7
 801a05a:	1ad7      	subs	r7, r2, r3
 801a05c:	f1b9 0f00 	cmp.w	r9, #0
 801a060:	d009      	beq.n	801a076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801a062:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 801a066:	9029      	str	r0, [sp, #164]	@ 0xa4
 801a068:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 801a06c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 801a070:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 801a074:	912d      	str	r1, [sp, #180]	@ 0xb4
 801a076:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 801a078:	9111      	str	r1, [sp, #68]	@ 0x44
 801a07a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801a07e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801a082:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801a086:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801a08a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801a08e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801a092:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801a096:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801a09a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801a09e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801a0a2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801a0a6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801a0aa:	f04f 0800 	mov.w	r8, #0
 801a0ae:	f1be 0f00 	cmp.w	lr, #0
 801a0b2:	d031      	beq.n	801a118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801a0b4:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801a0b6:	4431      	add	r1, r6
 801a0b8:	4549      	cmp	r1, r9
 801a0ba:	4450      	add	r0, sl
 801a0bc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801a0c0:	ee37 7a04 	vadd.f32	s14, s14, s8
 801a0c4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801a0c8:	db08      	blt.n	801a0dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801a0ca:	ee77 7a85 	vadd.f32	s15, s15, s10
 801a0ce:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801a0d2:	ee37 7a06 	vadd.f32	s14, s14, s12
 801a0d6:	3001      	adds	r0, #1
 801a0d8:	eba1 0109 	sub.w	r1, r1, r9
 801a0dc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a0e0:	f04f 0801 	mov.w	r8, #1
 801a0e4:	e7e3      	b.n	801a0ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801a0e6:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801a0e8:	4431      	add	r1, r6
 801a0ea:	4541      	cmp	r1, r8
 801a0ec:	4450      	add	r0, sl
 801a0ee:	ee37 7a24 	vadd.f32	s14, s14, s9
 801a0f2:	ee77 7a84 	vadd.f32	s15, s15, s8
 801a0f6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801a0fa:	db08      	blt.n	801a10e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 801a0fc:	ee76 6a85 	vadd.f32	s13, s13, s10
 801a100:	ee37 7a25 	vadd.f32	s14, s14, s11
 801a104:	ee77 7a86 	vadd.f32	s15, s15, s12
 801a108:	3001      	adds	r0, #1
 801a10a:	eba1 0108 	sub.w	r1, r1, r8
 801a10e:	f10c 3cff 	add.w	ip, ip, #4294967295
 801a112:	f04f 0901 	mov.w	r9, #1
 801a116:	e79b      	b.n	801a050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801a118:	449c      	add	ip, r3
 801a11a:	1aff      	subs	r7, r7, r3
 801a11c:	f1b8 0f00 	cmp.w	r8, #0
 801a120:	d009      	beq.n	801a136 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801a122:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 801a126:	9019      	str	r0, [sp, #100]	@ 0x64
 801a128:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801a12c:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 801a130:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 801a134:	911d      	str	r1, [sp, #116]	@ 0x74
 801a136:	1ad2      	subs	r2, r2, r3
 801a138:	e68b      	b.n	8019e52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801a13a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a13c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 801a13e:	2b00      	cmp	r3, #0
 801a140:	f000 80d1 	beq.w	801a2e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801a144:	ad19      	add	r5, sp, #100	@ 0x64
 801a146:	ac39      	add	r4, sp, #228	@ 0xe4
 801a148:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801a14a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801a14e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a152:	930c      	str	r3, [sp, #48]	@ 0x30
 801a154:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a156:	6963      	ldr	r3, [r4, #20]
 801a158:	440b      	add	r3, r1
 801a15a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801a15e:	4408      	add	r0, r1
 801a160:	b200      	sxth	r0, r0
 801a162:	4283      	cmp	r3, r0
 801a164:	900d      	str	r0, [sp, #52]	@ 0x34
 801a166:	f280 80c1 	bge.w	801a2ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801a16a:	428b      	cmp	r3, r1
 801a16c:	da08      	bge.n	801a180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801a16e:	2a00      	cmp	r2, #0
 801a170:	dd06      	ble.n	801a180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801a172:	1acb      	subs	r3, r1, r3
 801a174:	429a      	cmp	r2, r3
 801a176:	f2c0 80bb 	blt.w	801a2f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801a17a:	2b00      	cmp	r3, #0
 801a17c:	f300 80b9 	bgt.w	801a2f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 801a180:	6967      	ldr	r7, [r4, #20]
 801a182:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a184:	443b      	add	r3, r7
 801a186:	461f      	mov	r7, r3
 801a188:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a18a:	1bdf      	subs	r7, r3, r7
 801a18c:	4297      	cmp	r7, r2
 801a18e:	bfa8      	it	ge
 801a190:	4617      	movge	r7, r2
 801a192:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 801a196:	2f00      	cmp	r7, #0
 801a198:	f340 813c 	ble.w	801a414 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801a19c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801a19e:	6829      	ldr	r1, [r5, #0]
 801a1a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a1a4:	f9bb 3000 	ldrsh.w	r3, [fp]
 801a1a8:	6820      	ldr	r0, [r4, #0]
 801a1aa:	4411      	add	r1, r2
 801a1ac:	4299      	cmp	r1, r3
 801a1ae:	dd1a      	ble.n	801a1e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801a1b0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801a1b4:	440b      	add	r3, r1
 801a1b6:	4402      	add	r2, r0
 801a1b8:	b21b      	sxth	r3, r3
 801a1ba:	429a      	cmp	r2, r3
 801a1bc:	dc13      	bgt.n	801a1e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801a1be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a1c0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a1c2:	681b      	ldr	r3, [r3, #0]
 801a1c4:	9206      	str	r2, [sp, #24]
 801a1c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a1c8:	9205      	str	r2, [sp, #20]
 801a1ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a1cc:	9500      	str	r5, [sp, #0]
 801a1ce:	e9cd b203 	strd	fp, r2, [sp, #12]
 801a1d2:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 801a1d4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801a1d6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801a1da:	a912      	add	r1, sp, #72	@ 0x48
 801a1dc:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 801a1e0:	aa49      	add	r2, sp, #292	@ 0x124
 801a1e2:	4623      	mov	r3, r4
 801a1e4:	47c8      	blx	r9
 801a1e6:	e9d4 2300 	ldrd	r2, r3, [r4]
 801a1ea:	441a      	add	r2, r3
 801a1ec:	6963      	ldr	r3, [r4, #20]
 801a1ee:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 801a1f2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801a1f6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 801a1fa:	68a1      	ldr	r1, [r4, #8]
 801a1fc:	ed94 6a08 	vldr	s12, [r4, #32]
 801a200:	6022      	str	r2, [r4, #0]
 801a202:	3301      	adds	r3, #1
 801a204:	6163      	str	r3, [r4, #20]
 801a206:	69a3      	ldr	r3, [r4, #24]
 801a208:	ee37 7a27 	vadd.f32	s14, s14, s15
 801a20c:	3b01      	subs	r3, #1
 801a20e:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 801a212:	61a3      	str	r3, [r4, #24]
 801a214:	6923      	ldr	r3, [r4, #16]
 801a216:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 801a21a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801a21e:	edd4 6a07 	vldr	s13, [r4, #28]
 801a222:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801a226:	440b      	add	r3, r1
 801a228:	68e1      	ldr	r1, [r4, #12]
 801a22a:	6123      	str	r3, [r4, #16]
 801a22c:	ee76 6a86 	vadd.f32	s13, s13, s12
 801a230:	428b      	cmp	r3, r1
 801a232:	edc4 6a07 	vstr	s13, [r4, #28]
 801a236:	db15      	blt.n	801a264 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801a238:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 801a23c:	ee76 6a26 	vadd.f32	s13, s12, s13
 801a240:	3201      	adds	r2, #1
 801a242:	edc4 6a07 	vstr	s13, [r4, #28]
 801a246:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 801a24a:	6022      	str	r2, [r4, #0]
 801a24c:	ee36 7a87 	vadd.f32	s14, s13, s14
 801a250:	1a5b      	subs	r3, r3, r1
 801a252:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 801a256:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 801a25a:	6123      	str	r3, [r4, #16]
 801a25c:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a260:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801a264:	e9d5 2300 	ldrd	r2, r3, [r5]
 801a268:	441a      	add	r2, r3
 801a26a:	696b      	ldr	r3, [r5, #20]
 801a26c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801a270:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 801a274:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 801a278:	68a9      	ldr	r1, [r5, #8]
 801a27a:	ed95 6a08 	vldr	s12, [r5, #32]
 801a27e:	602a      	str	r2, [r5, #0]
 801a280:	3301      	adds	r3, #1
 801a282:	616b      	str	r3, [r5, #20]
 801a284:	69ab      	ldr	r3, [r5, #24]
 801a286:	ee37 7a27 	vadd.f32	s14, s14, s15
 801a28a:	3b01      	subs	r3, #1
 801a28c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801a290:	61ab      	str	r3, [r5, #24]
 801a292:	692b      	ldr	r3, [r5, #16]
 801a294:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801a298:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801a29c:	edd5 6a07 	vldr	s13, [r5, #28]
 801a2a0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801a2a4:	440b      	add	r3, r1
 801a2a6:	68e9      	ldr	r1, [r5, #12]
 801a2a8:	612b      	str	r3, [r5, #16]
 801a2aa:	ee76 6a86 	vadd.f32	s13, s13, s12
 801a2ae:	428b      	cmp	r3, r1
 801a2b0:	edc5 6a07 	vstr	s13, [r5, #28]
 801a2b4:	db15      	blt.n	801a2e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801a2b6:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 801a2ba:	ee76 6a26 	vadd.f32	s13, s12, s13
 801a2be:	3201      	adds	r2, #1
 801a2c0:	edc5 6a07 	vstr	s13, [r5, #28]
 801a2c4:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 801a2c8:	602a      	str	r2, [r5, #0]
 801a2ca:	ee36 7a87 	vadd.f32	s14, s13, s14
 801a2ce:	1a5b      	subs	r3, r3, r1
 801a2d0:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801a2d4:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 801a2d8:	612b      	str	r3, [r5, #16]
 801a2da:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a2de:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801a2e2:	3f01      	subs	r7, #1
 801a2e4:	e757      	b.n	801a196 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801a2e6:	ad39      	add	r5, sp, #228	@ 0xe4
 801a2e8:	ac19      	add	r4, sp, #100	@ 0x64
 801a2ea:	e72d      	b.n	801a148 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 801a2ec:	4613      	mov	r3, r2
 801a2ee:	e744      	b.n	801a17a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801a2f0:	4613      	mov	r3, r2
 801a2f2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 801a2f6:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 801a2f8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 801a2fc:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 801a300:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 801a304:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 801a308:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 801a30c:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 801a310:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 801a314:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 801a316:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 801a31a:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 801a31e:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 801a322:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 801a326:	960e      	str	r6, [sp, #56]	@ 0x38
 801a328:	469e      	mov	lr, r3
 801a32a:	461f      	mov	r7, r3
 801a32c:	f04f 0900 	mov.w	r9, #0
 801a330:	2f00      	cmp	r7, #0
 801a332:	d146      	bne.n	801a3c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801a334:	449c      	add	ip, r3
 801a336:	1ad7      	subs	r7, r2, r3
 801a338:	f1b9 0f00 	cmp.w	r9, #0
 801a33c:	d009      	beq.n	801a352 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801a33e:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 801a342:	9039      	str	r0, [sp, #228]	@ 0xe4
 801a344:	913d      	str	r1, [sp, #244]	@ 0xf4
 801a346:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 801a34a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 801a34e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 801a352:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 801a354:	910e      	str	r1, [sp, #56]	@ 0x38
 801a356:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801a35a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801a35e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801a362:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801a366:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801a36a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801a36e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801a372:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801a376:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801a37a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801a37e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801a382:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801a386:	f04f 0800 	mov.w	r8, #0
 801a38a:	f1be 0f00 	cmp.w	lr, #0
 801a38e:	d030      	beq.n	801a3f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801a390:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801a392:	4431      	add	r1, r6
 801a394:	4549      	cmp	r1, r9
 801a396:	4450      	add	r0, sl
 801a398:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801a39c:	ee37 7a04 	vadd.f32	s14, s14, s8
 801a3a0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801a3a4:	db08      	blt.n	801a3b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801a3a6:	ee77 7a85 	vadd.f32	s15, s15, s10
 801a3aa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801a3ae:	ee37 7a06 	vadd.f32	s14, s14, s12
 801a3b2:	3001      	adds	r0, #1
 801a3b4:	eba1 0109 	sub.w	r1, r1, r9
 801a3b8:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a3bc:	f04f 0801 	mov.w	r8, #1
 801a3c0:	e7e3      	b.n	801a38a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801a3c2:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801a3c4:	4431      	add	r1, r6
 801a3c6:	4541      	cmp	r1, r8
 801a3c8:	4450      	add	r0, sl
 801a3ca:	ee37 7a24 	vadd.f32	s14, s14, s9
 801a3ce:	ee77 7a84 	vadd.f32	s15, s15, s8
 801a3d2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801a3d6:	db08      	blt.n	801a3ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801a3d8:	ee76 6a85 	vadd.f32	s13, s13, s10
 801a3dc:	ee37 7a25 	vadd.f32	s14, s14, s11
 801a3e0:	ee77 7a86 	vadd.f32	s15, s15, s12
 801a3e4:	3001      	adds	r0, #1
 801a3e6:	eba1 0108 	sub.w	r1, r1, r8
 801a3ea:	3f01      	subs	r7, #1
 801a3ec:	f04f 0901 	mov.w	r9, #1
 801a3f0:	e79e      	b.n	801a330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801a3f2:	449c      	add	ip, r3
 801a3f4:	1aff      	subs	r7, r7, r3
 801a3f6:	f1b8 0f00 	cmp.w	r8, #0
 801a3fa:	d009      	beq.n	801a410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 801a3fc:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 801a400:	9019      	str	r0, [sp, #100]	@ 0x64
 801a402:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801a406:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 801a40a:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 801a40e:	911d      	str	r1, [sp, #116]	@ 0x74
 801a410:	1ad2      	subs	r2, r2, r3
 801a412:	e6b5      	b.n	801a180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801a414:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a416:	681b      	ldr	r3, [r3, #0]
 801a418:	b923      	cbnz	r3, 801a424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801a41a:	4b04      	ldr	r3, [pc, #16]	@ (801a42c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 801a41c:	6818      	ldr	r0, [r3, #0]
 801a41e:	6803      	ldr	r3, [r0, #0]
 801a420:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a422:	4798      	blx	r3
 801a424:	b05b      	add	sp, #364	@ 0x16c
 801a426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a42a:	bf00      	nop
 801a42c:	200138e4 	.word	0x200138e4

0801a430 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 801a430:	b570      	push	{r4, r5, r6, lr}
 801a432:	4604      	mov	r4, r0
 801a434:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801a438:	9805      	ldr	r0, [sp, #20]
 801a43a:	6061      	str	r1, [r4, #4]
 801a43c:	2500      	movs	r5, #0
 801a43e:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801a442:	8263      	strh	r3, [r4, #18]
 801a444:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a448:	8025      	strh	r5, [r4, #0]
 801a44a:	7221      	strb	r1, [r4, #8]
 801a44c:	7266      	strb	r6, [r4, #9]
 801a44e:	60e0      	str	r0, [r4, #12]
 801a450:	8222      	strh	r2, [r4, #16]
 801a452:	82a3      	strh	r3, [r4, #20]
 801a454:	82e5      	strh	r5, [r4, #22]
 801a456:	8325      	strh	r5, [r4, #24]
 801a458:	8365      	strh	r5, [r4, #26]
 801a45a:	83a5      	strh	r5, [r4, #28]
 801a45c:	83e5      	strh	r5, [r4, #30]
 801a45e:	8425      	strh	r5, [r4, #32]
 801a460:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 801a464:	b32e      	cbz	r6, 801a4b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801a466:	6803      	ldr	r3, [r0, #0]
 801a468:	695b      	ldr	r3, [r3, #20]
 801a46a:	4798      	blx	r3
 801a46c:	4606      	mov	r6, r0
 801a46e:	b300      	cbz	r0, 801a4b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801a470:	68e0      	ldr	r0, [r4, #12]
 801a472:	6803      	ldr	r3, [r0, #0]
 801a474:	4631      	mov	r1, r6
 801a476:	68db      	ldr	r3, [r3, #12]
 801a478:	4798      	blx	r3
 801a47a:	4605      	mov	r5, r0
 801a47c:	b1c8      	cbz	r0, 801a4b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801a47e:	7b43      	ldrb	r3, [r0, #13]
 801a480:	7a82      	ldrb	r2, [r0, #10]
 801a482:	005b      	lsls	r3, r3, #1
 801a484:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801a488:	4313      	orrs	r3, r2
 801a48a:	8423      	strh	r3, [r4, #32]
 801a48c:	7a63      	ldrb	r3, [r4, #9]
 801a48e:	2b06      	cmp	r3, #6
 801a490:	d10f      	bne.n	801a4b2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801a492:	68e0      	ldr	r0, [r4, #12]
 801a494:	6803      	ldr	r3, [r0, #0]
 801a496:	462a      	mov	r2, r5
 801a498:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a49a:	4631      	mov	r1, r6
 801a49c:	4798      	blx	r3
 801a49e:	7b6b      	ldrb	r3, [r5, #13]
 801a4a0:	005b      	lsls	r3, r3, #1
 801a4a2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801a4a6:	7aab      	ldrb	r3, [r5, #10]
 801a4a8:	4313      	orrs	r3, r2
 801a4aa:	4418      	add	r0, r3
 801a4ac:	8c23      	ldrh	r3, [r4, #32]
 801a4ae:	4418      	add	r0, r3
 801a4b0:	8420      	strh	r0, [r4, #32]
 801a4b2:	4620      	mov	r0, r4
 801a4b4:	bd70      	pop	{r4, r5, r6, pc}

0801a4b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801a4b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4ba:	2400      	movs	r4, #0
 801a4bc:	b085      	sub	sp, #20
 801a4be:	4681      	mov	r9, r0
 801a4c0:	4688      	mov	r8, r1
 801a4c2:	4692      	mov	sl, r2
 801a4c4:	469b      	mov	fp, r3
 801a4c6:	4627      	mov	r7, r4
 801a4c8:	4625      	mov	r5, r4
 801a4ca:	4626      	mov	r6, r4
 801a4cc:	4554      	cmp	r4, sl
 801a4ce:	da2a      	bge.n	801a526 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801a4d0:	2300      	movs	r3, #0
 801a4d2:	9303      	str	r3, [sp, #12]
 801a4d4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801a4d8:	429d      	cmp	r5, r3
 801a4da:	d004      	beq.n	801a4e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 801a4dc:	f242 030b 	movw	r3, #8203	@ 0x200b
 801a4e0:	429d      	cmp	r5, r3
 801a4e2:	bf18      	it	ne
 801a4e4:	462f      	movne	r7, r5
 801a4e6:	ab03      	add	r3, sp, #12
 801a4e8:	4642      	mov	r2, r8
 801a4ea:	4659      	mov	r1, fp
 801a4ec:	4648      	mov	r0, r9
 801a4ee:	f003 fce9 	bl	801dec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a4f2:	4605      	mov	r5, r0
 801a4f4:	b1b8      	cbz	r0, 801a526 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801a4f6:	280a      	cmp	r0, #10
 801a4f8:	d015      	beq.n	801a526 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801a4fa:	9a03      	ldr	r2, [sp, #12]
 801a4fc:	b18a      	cbz	r2, 801a522 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801a4fe:	7b50      	ldrb	r0, [r2, #13]
 801a500:	7a93      	ldrb	r3, [r2, #10]
 801a502:	8895      	ldrh	r5, [r2, #4]
 801a504:	0040      	lsls	r0, r0, #1
 801a506:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801a50a:	4303      	orrs	r3, r0
 801a50c:	9301      	str	r3, [sp, #4]
 801a50e:	f8d8 3000 	ldr.w	r3, [r8]
 801a512:	4639      	mov	r1, r7
 801a514:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a516:	4640      	mov	r0, r8
 801a518:	4798      	blx	r3
 801a51a:	9b01      	ldr	r3, [sp, #4]
 801a51c:	4418      	add	r0, r3
 801a51e:	4406      	add	r6, r0
 801a520:	b2b6      	uxth	r6, r6
 801a522:	3401      	adds	r4, #1
 801a524:	e7d2      	b.n	801a4cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801a526:	4630      	mov	r0, r6
 801a528:	b005      	add	sp, #20
 801a52a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a52e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801a52e:	2a02      	cmp	r2, #2
 801a530:	b530      	push	{r4, r5, lr}
 801a532:	d011      	beq.n	801a558 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801a534:	2a03      	cmp	r2, #3
 801a536:	d01c      	beq.n	801a572 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801a538:	2a01      	cmp	r2, #1
 801a53a:	d10c      	bne.n	801a556 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801a53c:	888b      	ldrh	r3, [r1, #4]
 801a53e:	8801      	ldrh	r1, [r0, #0]
 801a540:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801a544:	8844      	ldrh	r4, [r0, #2]
 801a546:	8004      	strh	r4, [r0, #0]
 801a548:	1a5b      	subs	r3, r3, r1
 801a54a:	1a9b      	subs	r3, r3, r2
 801a54c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801a550:	8043      	strh	r3, [r0, #2]
 801a552:	8081      	strh	r1, [r0, #4]
 801a554:	80c2      	strh	r2, [r0, #6]
 801a556:	bd30      	pop	{r4, r5, pc}
 801a558:	88cb      	ldrh	r3, [r1, #6]
 801a55a:	8842      	ldrh	r2, [r0, #2]
 801a55c:	1a9b      	subs	r3, r3, r2
 801a55e:	88c2      	ldrh	r2, [r0, #6]
 801a560:	1a9b      	subs	r3, r3, r2
 801a562:	888a      	ldrh	r2, [r1, #4]
 801a564:	8801      	ldrh	r1, [r0, #0]
 801a566:	8043      	strh	r3, [r0, #2]
 801a568:	1a52      	subs	r2, r2, r1
 801a56a:	8881      	ldrh	r1, [r0, #4]
 801a56c:	1a52      	subs	r2, r2, r1
 801a56e:	8002      	strh	r2, [r0, #0]
 801a570:	e7f1      	b.n	801a556 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801a572:	88cb      	ldrh	r3, [r1, #6]
 801a574:	8841      	ldrh	r1, [r0, #2]
 801a576:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801a57a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801a57e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801a582:	8045      	strh	r5, [r0, #2]
 801a584:	1a5b      	subs	r3, r3, r1
 801a586:	1a9b      	subs	r3, r3, r2
 801a588:	8003      	strh	r3, [r0, #0]
 801a58a:	8082      	strh	r2, [r0, #4]
 801a58c:	80c4      	strh	r4, [r0, #6]
 801a58e:	e7e2      	b.n	801a556 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801a590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801a590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a594:	b09f      	sub	sp, #124	@ 0x7c
 801a596:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a598:	9312      	str	r3, [sp, #72]	@ 0x48
 801a59a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a59c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a59e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801a5a0:	8812      	ldrh	r2, [r2, #0]
 801a5a2:	889b      	ldrh	r3, [r3, #4]
 801a5a4:	900e      	str	r0, [sp, #56]	@ 0x38
 801a5a6:	4413      	add	r3, r2
 801a5a8:	6828      	ldr	r0, [r5, #0]
 801a5aa:	9117      	str	r1, [sp, #92]	@ 0x5c
 801a5ac:	b21b      	sxth	r3, r3
 801a5ae:	9311      	str	r3, [sp, #68]	@ 0x44
 801a5b0:	6803      	ldr	r3, [r0, #0]
 801a5b2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 801a5b6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801a5b8:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 801a5bc:	4798      	blx	r3
 801a5be:	682b      	ldr	r3, [r5, #0]
 801a5c0:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a5c2:	7b1a      	ldrb	r2, [r3, #12]
 801a5c4:	7adb      	ldrb	r3, [r3, #11]
 801a5c6:	9215      	str	r2, [sp, #84]	@ 0x54
 801a5c8:	9316      	str	r3, [sp, #88]	@ 0x58
 801a5ca:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 801a5ce:	2c00      	cmp	r4, #0
 801a5d0:	d067      	beq.n	801a6a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801a5d2:	7c2b      	ldrb	r3, [r5, #16]
 801a5d4:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801a5d6:	2b06      	cmp	r3, #6
 801a5d8:	bf14      	ite	ne
 801a5da:	2301      	movne	r3, #1
 801a5dc:	2302      	moveq	r3, #2
 801a5de:	4413      	add	r3, r2
 801a5e0:	f04f 0900 	mov.w	r9, #0
 801a5e4:	9310      	str	r3, [sp, #64]	@ 0x40
 801a5e6:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 801a5ea:	464c      	mov	r4, r9
 801a5ec:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 801a5f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a5f2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a5f4:	4293      	cmp	r3, r2
 801a5f6:	f280 808b 	bge.w	801a710 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801a5fa:	2300      	movs	r3, #0
 801a5fc:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 801a600:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 801a604:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801a608:	429c      	cmp	r4, r3
 801a60a:	d006      	beq.n	801a61a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 801a60c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a60e:	f242 020b 	movw	r2, #8203	@ 0x200b
 801a612:	4294      	cmp	r4, r2
 801a614:	bf18      	it	ne
 801a616:	4623      	movne	r3, r4
 801a618:	930c      	str	r3, [sp, #48]	@ 0x30
 801a61a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a61c:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 801a61e:	682a      	ldr	r2, [r5, #0]
 801a620:	428b      	cmp	r3, r1
 801a622:	db40      	blt.n	801a6a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801a624:	6813      	ldr	r3, [r2, #0]
 801a626:	4610      	mov	r0, r2
 801a628:	695b      	ldr	r3, [r3, #20]
 801a62a:	4798      	blx	r3
 801a62c:	4604      	mov	r4, r0
 801a62e:	6828      	ldr	r0, [r5, #0]
 801a630:	6803      	ldr	r3, [r0, #0]
 801a632:	aa1d      	add	r2, sp, #116	@ 0x74
 801a634:	689f      	ldr	r7, [r3, #8]
 801a636:	4621      	mov	r1, r4
 801a638:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 801a63c:	47b8      	blx	r7
 801a63e:	901c      	str	r0, [sp, #112]	@ 0x70
 801a640:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801a644:	429c      	cmp	r4, r3
 801a646:	f000 80ea 	beq.w	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a64a:	f242 030b 	movw	r3, #8203	@ 0x200b
 801a64e:	429c      	cmp	r4, r3
 801a650:	f000 80e5 	beq.w	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a654:	2c00      	cmp	r4, #0
 801a656:	f000 810c 	beq.w	801a872 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801a65a:	2c0a      	cmp	r4, #10
 801a65c:	d05e      	beq.n	801a71c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801a65e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801a660:	b36a      	cbz	r2, 801a6be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801a662:	8894      	ldrh	r4, [r2, #4]
 801a664:	f1bb 0f00 	cmp.w	fp, #0
 801a668:	d03a      	beq.n	801a6e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 801a66a:	f892 900d 	ldrb.w	r9, [r2, #13]
 801a66e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a672:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801a676:	f892 900a 	ldrb.w	r9, [r2, #10]
 801a67a:	f1bb 0f01 	cmp.w	fp, #1
 801a67e:	ea49 0903 	orr.w	r9, r9, r3
 801a682:	d133      	bne.n	801a6ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 801a684:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a686:	eba6 0609 	sub.w	r6, r6, r9
 801a68a:	2b00      	cmp	r3, #0
 801a68c:	d14d      	bne.n	801a72a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 801a68e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a690:	eb09 0306 	add.w	r3, r9, r6
 801a694:	4413      	add	r3, r2
 801a696:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a698:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a69c:	4293      	cmp	r3, r2
 801a69e:	da4e      	bge.n	801a73e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 801a6a0:	e036      	b.n	801a710 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801a6a2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801a6a4:	e79c      	b.n	801a5e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 801a6a6:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 801a6aa:	9301      	str	r3, [sp, #4]
 801a6ac:	ab1d      	add	r3, sp, #116	@ 0x74
 801a6ae:	9300      	str	r3, [sp, #0]
 801a6b0:	4659      	mov	r1, fp
 801a6b2:	ab1c      	add	r3, sp, #112	@ 0x70
 801a6b4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801a6b6:	f003 fc4e 	bl	801df56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801a6ba:	4604      	mov	r4, r0
 801a6bc:	e7c0      	b.n	801a640 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801a6be:	6828      	ldr	r0, [r5, #0]
 801a6c0:	6803      	ldr	r3, [r0, #0]
 801a6c2:	691b      	ldr	r3, [r3, #16]
 801a6c4:	4798      	blx	r3
 801a6c6:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801a6ca:	4298      	cmp	r0, r3
 801a6cc:	f000 80a7 	beq.w	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a6d0:	f242 030b 	movw	r3, #8203	@ 0x200b
 801a6d4:	4298      	cmp	r0, r3
 801a6d6:	f000 80a2 	beq.w	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a6da:	f1bb 0f00 	cmp.w	fp, #0
 801a6de:	d100      	bne.n	801a6e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801a6e0:	444e      	add	r6, r9
 801a6e2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801a6e4:	2a00      	cmp	r2, #0
 801a6e6:	d1c0      	bne.n	801a66a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801a6e8:	4691      	mov	r9, r2
 801a6ea:	e098      	b.n	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a6ec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a6ee:	2b00      	cmp	r3, #0
 801a6f0:	f000 80c1 	beq.w	801a876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 801a6f4:	f1bb 0f00 	cmp.w	fp, #0
 801a6f8:	d117      	bne.n	801a72a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 801a6fa:	6828      	ldr	r0, [r5, #0]
 801a6fc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a6fe:	6803      	ldr	r3, [r0, #0]
 801a700:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a702:	4798      	blx	r3
 801a704:	4406      	add	r6, r0
 801a706:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801a708:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a70a:	1af3      	subs	r3, r6, r3
 801a70c:	4293      	cmp	r3, r2
 801a70e:	dd16      	ble.n	801a73e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 801a710:	2c00      	cmp	r4, #0
 801a712:	f000 80ae 	beq.w	801a872 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801a716:	2c0a      	cmp	r4, #10
 801a718:	f040 809c 	bne.w	801a854 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 801a71c:	240a      	movs	r4, #10
 801a71e:	fab4 f084 	clz	r0, r4
 801a722:	0940      	lsrs	r0, r0, #5
 801a724:	b01f      	add	sp, #124	@ 0x7c
 801a726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a72a:	6828      	ldr	r0, [r5, #0]
 801a72c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a72e:	6803      	ldr	r3, [r0, #0]
 801a730:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a732:	4798      	blx	r3
 801a734:	f1bb 0f01 	cmp.w	fp, #1
 801a738:	eba6 0600 	sub.w	r6, r6, r0
 801a73c:	d0a7      	beq.n	801a68e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801a73e:	981c      	ldr	r0, [sp, #112]	@ 0x70
 801a740:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a742:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801a746:	f9b3 8000 	ldrsh.w	r8, [r3]
 801a74a:	7b43      	ldrb	r3, [r0, #13]
 801a74c:	015b      	lsls	r3, r3, #5
 801a74e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801a752:	7983      	ldrb	r3, [r0, #6]
 801a754:	4431      	add	r1, r6
 801a756:	4313      	orrs	r3, r2
 801a758:	440b      	add	r3, r1
 801a75a:	4543      	cmp	r3, r8
 801a75c:	db5f      	blt.n	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a75e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a760:	4299      	cmp	r1, r3
 801a762:	da5c      	bge.n	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a764:	6828      	ldr	r0, [r5, #0]
 801a766:	6803      	ldr	r3, [r0, #0]
 801a768:	45b0      	cmp	r8, r6
 801a76a:	bfc8      	it	gt
 801a76c:	eba8 0806 	subgt.w	r8, r8, r6
 801a770:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a772:	bfcc      	ite	gt
 801a774:	fa1f f888 	uxthgt.w	r8, r8
 801a778:	f04f 0800 	movle.w	r8, #0
 801a77c:	4798      	blx	r3
 801a77e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801a780:	7b53      	ldrb	r3, [r2, #13]
 801a782:	00d9      	lsls	r1, r3, #3
 801a784:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 801a788:	7a11      	ldrb	r1, [r2, #8]
 801a78a:	4339      	orrs	r1, r7
 801a78c:	065f      	lsls	r7, r3, #25
 801a78e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a790:	bf44      	itt	mi
 801a792:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 801a796:	b209      	sxthmi	r1, r1
 801a798:	19c7      	adds	r7, r0, r7
 801a79a:	1a7f      	subs	r7, r7, r1
 801a79c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 801a79e:	b2bf      	uxth	r7, r7
 801a7a0:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801a7a4:	fa0f fa87 	sxth.w	sl, r7
 801a7a8:	4551      	cmp	r1, sl
 801a7aa:	dd3c      	ble.n	801a826 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 801a7ac:	011b      	lsls	r3, r3, #4
 801a7ae:	79d0      	ldrb	r0, [r2, #7]
 801a7b0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801a7b4:	4303      	orrs	r3, r0
 801a7b6:	449a      	add	sl, r3
 801a7b8:	4551      	cmp	r1, sl
 801a7ba:	dc30      	bgt.n	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a7bc:	1bcf      	subs	r7, r1, r7
 801a7be:	b23f      	sxth	r7, r7
 801a7c0:	468a      	mov	sl, r1
 801a7c2:	9219      	str	r2, [sp, #100]	@ 0x64
 801a7c4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a7c6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a7c8:	6828      	ldr	r0, [r5, #0]
 801a7ca:	2a00      	cmp	r2, #0
 801a7cc:	d12d      	bne.n	801a82a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801a7ce:	9318      	str	r3, [sp, #96]	@ 0x60
 801a7d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a7d2:	6819      	ldr	r1, [r3, #0]
 801a7d4:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801a7d6:	6801      	ldr	r1, [r0, #0]
 801a7d8:	9314      	str	r3, [sp, #80]	@ 0x50
 801a7da:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 801a7dc:	4788      	blx	r1
 801a7de:	79a9      	ldrb	r1, [r5, #6]
 801a7e0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a7e2:	7ba9      	ldrb	r1, [r5, #14]
 801a7e4:	910a      	str	r1, [sp, #40]	@ 0x28
 801a7e6:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 801a7ea:	9109      	str	r1, [sp, #36]	@ 0x24
 801a7ec:	68a9      	ldr	r1, [r5, #8]
 801a7ee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a7f0:	9306      	str	r3, [sp, #24]
 801a7f2:	b2bf      	uxth	r7, r7
 801a7f4:	e9cd 8702 	strd	r8, r7, [sp, #8]
 801a7f8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a7fa:	9304      	str	r3, [sp, #16]
 801a7fc:	44b0      	add	r8, r6
 801a7fe:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801a802:	fa0f f388 	sxth.w	r3, r8
 801a806:	9300      	str	r3, [sp, #0]
 801a808:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801a80a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a80c:	9205      	str	r2, [sp, #20]
 801a80e:	f8cd a004 	str.w	sl, [sp, #4]
 801a812:	681a      	ldr	r2, [r3, #0]
 801a814:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801a816:	685b      	ldr	r3, [r3, #4]
 801a818:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a81a:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 801a81c:	47b8      	blx	r7
 801a81e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a820:	3301      	adds	r3, #1
 801a822:	930d      	str	r3, [sp, #52]	@ 0x34
 801a824:	e6e4      	b.n	801a5f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 801a826:	2700      	movs	r7, #0
 801a828:	e7cb      	b.n	801a7c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 801a82a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a82c:	f8d2 c008 	ldr.w	ip, [r2, #8]
 801a830:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a832:	f8dc 1000 	ldr.w	r1, [ip]
 801a836:	e9cd 6204 	strd	r6, r2, [sp, #16]
 801a83a:	79aa      	ldrb	r2, [r5, #6]
 801a83c:	9203      	str	r2, [sp, #12]
 801a83e:	7baa      	ldrb	r2, [r5, #14]
 801a840:	9202      	str	r2, [sp, #8]
 801a842:	68aa      	ldr	r2, [r5, #8]
 801a844:	e9cd 0200 	strd	r0, r2, [sp]
 801a848:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a84a:	688f      	ldr	r7, [r1, #8]
 801a84c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801a84e:	4660      	mov	r0, ip
 801a850:	47b8      	blx	r7
 801a852:	e7e4      	b.n	801a81e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801a854:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a856:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801a858:	3501      	adds	r5, #1
 801a85a:	429d      	cmp	r5, r3
 801a85c:	f6bf af5f 	bge.w	801a71e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801a860:	4659      	mov	r1, fp
 801a862:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801a864:	f7ef fd22 	bl	800a2ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801a868:	4604      	mov	r4, r0
 801a86a:	b110      	cbz	r0, 801a872 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801a86c:	280a      	cmp	r0, #10
 801a86e:	d1f2      	bne.n	801a856 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 801a870:	e754      	b.n	801a71c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801a872:	2400      	movs	r4, #0
 801a874:	e753      	b.n	801a71e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801a876:	f1bb 0f00 	cmp.w	fp, #0
 801a87a:	f43f af44 	beq.w	801a706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 801a87e:	e75e      	b.n	801a73e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0801a880 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801a880:	b530      	push	{r4, r5, lr}
 801a882:	8ac4      	ldrh	r4, [r0, #22]
 801a884:	8b45      	ldrh	r5, [r0, #26]
 801a886:	8343      	strh	r3, [r0, #26]
 801a888:	442c      	add	r4, r5
 801a88a:	1ae4      	subs	r4, r4, r3
 801a88c:	82c4      	strh	r4, [r0, #22]
 801a88e:	8b83      	ldrh	r3, [r0, #28]
 801a890:	8b04      	ldrh	r4, [r0, #24]
 801a892:	4422      	add	r2, r4
 801a894:	440c      	add	r4, r1
 801a896:	1a59      	subs	r1, r3, r1
 801a898:	83c2      	strh	r2, [r0, #30]
 801a89a:	8304      	strh	r4, [r0, #24]
 801a89c:	8381      	strh	r1, [r0, #28]
 801a89e:	bd30      	pop	{r4, r5, pc}

0801a8a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801a8a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8a4:	4604      	mov	r4, r0
 801a8a6:	8a47      	ldrh	r7, [r0, #18]
 801a8a8:	68c0      	ldr	r0, [r0, #12]
 801a8aa:	6803      	ldr	r3, [r0, #0]
 801a8ac:	b085      	sub	sp, #20
 801a8ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a8b0:	4798      	blx	r3
 801a8b2:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801a8b6:	7a63      	ldrb	r3, [r4, #9]
 801a8b8:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 801a8bc:	42b7      	cmp	r7, r6
 801a8be:	f103 33ff 	add.w	r3, r3, #4294967295
 801a8c2:	bfac      	ite	ge
 801a8c4:	f04f 0900 	movge.w	r9, #0
 801a8c8:	f04f 0901 	movlt.w	r9, #1
 801a8cc:	2b05      	cmp	r3, #5
 801a8ce:	d804      	bhi.n	801a8da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801a8d0:	e8df f003 	tbb	[pc, r3]
 801a8d4:	470e0854 	.word	0x470e0854
 801a8d8:	4c4c      	.short	0x4c4c
 801a8da:	2500      	movs	r5, #0
 801a8dc:	46a9      	mov	r9, r5
 801a8de:	462e      	mov	r6, r5
 801a8e0:	462f      	mov	r7, r5
 801a8e2:	e00d      	b.n	801a900 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a8e4:	42b7      	cmp	r7, r6
 801a8e6:	bfb4      	ite	lt
 801a8e8:	2600      	movlt	r6, #0
 801a8ea:	2601      	movge	r6, #1
 801a8ec:	2500      	movs	r5, #0
 801a8ee:	e7f7      	b.n	801a8e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801a8f0:	42b7      	cmp	r7, r6
 801a8f2:	464d      	mov	r5, r9
 801a8f4:	f04f 0900 	mov.w	r9, #0
 801a8f8:	bfb4      	ite	lt
 801a8fa:	2600      	movlt	r6, #0
 801a8fc:	2601      	movge	r6, #1
 801a8fe:	464f      	mov	r7, r9
 801a900:	f04f 0800 	mov.w	r8, #0
 801a904:	f8a4 8016 	strh.w	r8, [r4, #22]
 801a908:	f8a4 8018 	strh.w	r8, [r4, #24]
 801a90c:	f8cd 8004 	str.w	r8, [sp, #4]
 801a910:	2300      	movs	r3, #0
 801a912:	9303      	str	r3, [sp, #12]
 801a914:	8823      	ldrh	r3, [r4, #0]
 801a916:	2b20      	cmp	r3, #32
 801a918:	d034      	beq.n	801a984 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801a91a:	f242 010b 	movw	r1, #8203	@ 0x200b
 801a91e:	1a5a      	subs	r2, r3, r1
 801a920:	f1d2 0a00 	rsbs	sl, r2, #0
 801a924:	eb4a 0a02 	adc.w	sl, sl, r2
 801a928:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801a92c:	4293      	cmp	r3, r2
 801a92e:	d009      	beq.n	801a944 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801a930:	428b      	cmp	r3, r1
 801a932:	9a01      	ldr	r2, [sp, #4]
 801a934:	bf18      	it	ne
 801a936:	461a      	movne	r2, r3
 801a938:	9201      	str	r2, [sp, #4]
 801a93a:	bf0c      	ite	eq
 801a93c:	f04f 0a01 	moveq.w	sl, #1
 801a940:	f04f 0a00 	movne.w	sl, #0
 801a944:	ab03      	add	r3, sp, #12
 801a946:	68e2      	ldr	r2, [r4, #12]
 801a948:	7a21      	ldrb	r1, [r4, #8]
 801a94a:	6860      	ldr	r0, [r4, #4]
 801a94c:	f003 faba 	bl	801dec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a950:	8020      	strh	r0, [r4, #0]
 801a952:	b9d8      	cbnz	r0, 801a98c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801a954:	8ba2      	ldrh	r2, [r4, #28]
 801a956:	2300      	movs	r3, #0
 801a958:	4611      	mov	r1, r2
 801a95a:	4620      	mov	r0, r4
 801a95c:	f7ff ff90 	bl	801a880 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801a960:	e06e      	b.n	801aa40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801a962:	2500      	movs	r5, #0
 801a964:	46a9      	mov	r9, r5
 801a966:	462e      	mov	r6, r5
 801a968:	2701      	movs	r7, #1
 801a96a:	e7c9      	b.n	801a900 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a96c:	42b7      	cmp	r7, r6
 801a96e:	f04f 0500 	mov.w	r5, #0
 801a972:	bfb4      	ite	lt
 801a974:	2700      	movlt	r7, #0
 801a976:	2701      	movge	r7, #1
 801a978:	462e      	mov	r6, r5
 801a97a:	e7c1      	b.n	801a900 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801a97c:	2500      	movs	r5, #0
 801a97e:	46a9      	mov	r9, r5
 801a980:	2601      	movs	r6, #1
 801a982:	e7ad      	b.n	801a8e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801a984:	9301      	str	r3, [sp, #4]
 801a986:	f04f 0a01 	mov.w	sl, #1
 801a98a:	e7db      	b.n	801a944 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801a98c:	8b63      	ldrh	r3, [r4, #26]
 801a98e:	280a      	cmp	r0, #10
 801a990:	f103 0301 	add.w	r3, r3, #1
 801a994:	8363      	strh	r3, [r4, #26]
 801a996:	d0dd      	beq.n	801a954 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 801a998:	9a03      	ldr	r2, [sp, #12]
 801a99a:	bb62      	cbnz	r2, 801a9f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 801a99c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801a9a0:	4298      	cmp	r0, r3
 801a9a2:	d003      	beq.n	801a9ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801a9a4:	f242 030b 	movw	r3, #8203	@ 0x200b
 801a9a8:	4298      	cmp	r0, r3
 801a9aa:	d1b1      	bne.n	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a9ac:	8823      	ldrh	r3, [r4, #0]
 801a9ae:	8ba1      	ldrh	r1, [r4, #28]
 801a9b0:	2b20      	cmp	r3, #32
 801a9b2:	d003      	beq.n	801a9bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801a9b4:	f242 000b 	movw	r0, #8203	@ 0x200b
 801a9b8:	4283      	cmp	r3, r0
 801a9ba:	d131      	bne.n	801aa20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 801a9bc:	f1ba 0f00 	cmp.w	sl, #0
 801a9c0:	bf0a      	itet	eq
 801a9c2:	4688      	moveq	r8, r1
 801a9c4:	4650      	movne	r0, sl
 801a9c6:	2001      	moveq	r0, #1
 801a9c8:	440a      	add	r2, r1
 801a9ca:	8b23      	ldrh	r3, [r4, #24]
 801a9cc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801a9d0:	b292      	uxth	r2, r2
 801a9d2:	83a2      	strh	r2, [r4, #28]
 801a9d4:	4413      	add	r3, r2
 801a9d6:	f1b9 0f00 	cmp.w	r9, #0
 801a9da:	d102      	bne.n	801a9e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 801a9dc:	2d00      	cmp	r5, #0
 801a9de:	d042      	beq.n	801aa66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801a9e0:	b300      	cbz	r0, 801aa24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801a9e2:	8c21      	ldrh	r1, [r4, #32]
 801a9e4:	4419      	add	r1, r3
 801a9e6:	458c      	cmp	ip, r1
 801a9e8:	da37      	bge.n	801aa5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801a9ea:	8ae1      	ldrh	r1, [r4, #22]
 801a9ec:	2900      	cmp	r1, #0
 801a9ee:	d034      	beq.n	801aa5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801a9f0:	4563      	cmp	r3, ip
 801a9f2:	dd8d      	ble.n	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801a9f4:	e01d      	b.n	801aa32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801a9f6:	8893      	ldrh	r3, [r2, #4]
 801a9f8:	8023      	strh	r3, [r4, #0]
 801a9fa:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801a9fe:	9901      	ldr	r1, [sp, #4]
 801aa00:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801aa04:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 801aa08:	f892 b00a 	ldrb.w	fp, [r2, #10]
 801aa0c:	ea4b 0b00 	orr.w	fp, fp, r0
 801aa10:	68e0      	ldr	r0, [r4, #12]
 801aa12:	6803      	ldr	r3, [r0, #0]
 801aa14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801aa16:	4798      	blx	r3
 801aa18:	eb0b 0200 	add.w	r2, fp, r0
 801aa1c:	b292      	uxth	r2, r2
 801aa1e:	e7c5      	b.n	801a9ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801aa20:	2000      	movs	r0, #0
 801aa22:	e7d1      	b.n	801a9c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 801aa24:	4563      	cmp	r3, ip
 801aa26:	f77f af73 	ble.w	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aa2a:	8ae3      	ldrh	r3, [r4, #22]
 801aa2c:	2b00      	cmp	r3, #0
 801aa2e:	f43f af6f 	beq.w	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aa32:	2301      	movs	r3, #1
 801aa34:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 801aa38:	8c22      	ldrh	r2, [r4, #32]
 801aa3a:	8be3      	ldrh	r3, [r4, #30]
 801aa3c:	4413      	add	r3, r2
 801aa3e:	83e3      	strh	r3, [r4, #30]
 801aa40:	68e0      	ldr	r0, [r4, #12]
 801aa42:	6803      	ldr	r3, [r0, #0]
 801aa44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801aa46:	4798      	blx	r3
 801aa48:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 801aa4c:	4418      	add	r0, r3
 801aa4e:	8a63      	ldrh	r3, [r4, #18]
 801aa50:	1a18      	subs	r0, r3, r0
 801aa52:	8260      	strh	r0, [r4, #18]
 801aa54:	b005      	add	sp, #20
 801aa56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa5a:	2300      	movs	r3, #0
 801aa5c:	4611      	mov	r1, r2
 801aa5e:	4620      	mov	r0, r4
 801aa60:	f7ff ff0e 	bl	801a880 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801aa64:	e754      	b.n	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aa66:	4563      	cmp	r3, ip
 801aa68:	dd14      	ble.n	801aa94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801aa6a:	b117      	cbz	r7, 801aa72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 801aa6c:	2301      	movs	r3, #1
 801aa6e:	460a      	mov	r2, r1
 801aa70:	e772      	b.n	801a958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801aa72:	2e00      	cmp	r6, #0
 801aa74:	f43f af4c 	beq.w	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aa78:	2800      	cmp	r0, #0
 801aa7a:	f47f af49 	bne.w	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aa7e:	f1ba 0f00 	cmp.w	sl, #0
 801aa82:	d002      	beq.n	801aa8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801aa84:	2301      	movs	r3, #1
 801aa86:	4642      	mov	r2, r8
 801aa88:	e767      	b.n	801a95a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801aa8a:	8ae3      	ldrh	r3, [r4, #22]
 801aa8c:	2b00      	cmp	r3, #0
 801aa8e:	f43f af3f 	beq.w	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aa92:	e7d5      	b.n	801aa40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801aa94:	2800      	cmp	r0, #0
 801aa96:	f47f af3b 	bne.w	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aa9a:	f1ba 0f00 	cmp.w	sl, #0
 801aa9e:	f43f af37 	beq.w	801a910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801aaa2:	2301      	movs	r3, #1
 801aaa4:	4642      	mov	r2, r8
 801aaa6:	e7da      	b.n	801aa5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801aaa8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801aaa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801aaaa:	4605      	mov	r5, r0
 801aaac:	b08f      	sub	sp, #60	@ 0x3c
 801aaae:	4617      	mov	r7, r2
 801aab0:	461c      	mov	r4, r3
 801aab2:	460e      	mov	r6, r1
 801aab4:	b1d1      	cbz	r1, 801aaec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801aab6:	681b      	ldr	r3, [r3, #0]
 801aab8:	4620      	mov	r0, r4
 801aaba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801aabc:	4798      	blx	r3
 801aabe:	4240      	negs	r0, r0
 801aac0:	b200      	sxth	r0, r0
 801aac2:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801aac6:	9603      	str	r6, [sp, #12]
 801aac8:	9700      	str	r7, [sp, #0]
 801aaca:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801aace:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801aad2:	4629      	mov	r1, r5
 801aad4:	a805      	add	r0, sp, #20
 801aad6:	f7ff fcab 	bl	801a430 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801aada:	2401      	movs	r4, #1
 801aadc:	a805      	add	r0, sp, #20
 801aade:	f7ff fedf 	bl	801a8a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801aae2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801aae6:	b163      	cbz	r3, 801ab02 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801aae8:	3401      	adds	r4, #1
 801aaea:	e7f7      	b.n	801aadc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801aaec:	f003 fab8 	bl	801e060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801aaf0:	2401      	movs	r4, #1
 801aaf2:	280a      	cmp	r0, #10
 801aaf4:	4628      	mov	r0, r5
 801aaf6:	bf08      	it	eq
 801aaf8:	3401      	addeq	r4, #1
 801aafa:	f003 fab1 	bl	801e060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801aafe:	2800      	cmp	r0, #0
 801ab00:	d1f7      	bne.n	801aaf2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801ab02:	b2a0      	uxth	r0, r4
 801ab04:	b00f      	add	sp, #60	@ 0x3c
 801ab06:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801ab08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801ab08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab0c:	b0e3      	sub	sp, #396	@ 0x18c
 801ab0e:	461c      	mov	r4, r3
 801ab10:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 801ab12:	4683      	mov	fp, r0
 801ab14:	4688      	mov	r8, r1
 801ab16:	2b00      	cmp	r3, #0
 801ab18:	f000 8112 	beq.w	801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801ab1c:	6823      	ldr	r3, [r4, #0]
 801ab1e:	2b00      	cmp	r3, #0
 801ab20:	f000 810e 	beq.w	801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801ab24:	7ba3      	ldrb	r3, [r4, #14]
 801ab26:	2b00      	cmp	r3, #0
 801ab28:	f000 810a 	beq.w	801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801ab2c:	6810      	ldr	r0, [r2, #0]
 801ab2e:	6851      	ldr	r1, [r2, #4]
 801ab30:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 801ab34:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801ab38:	ad0a      	add	r5, sp, #40	@ 0x28
 801ab3a:	462b      	mov	r3, r5
 801ab3c:	c303      	stmia	r3!, {r0, r1}
 801ab3e:	2100      	movs	r1, #0
 801ab40:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801ab44:	910c      	str	r1, [sp, #48]	@ 0x30
 801ab46:	79a2      	ldrb	r2, [r4, #6]
 801ab48:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801ab4c:	a90c      	add	r1, sp, #48	@ 0x30
 801ab4e:	4628      	mov	r0, r5
 801ab50:	f7ff fced 	bl	801a52e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801ab54:	a90c      	add	r1, sp, #48	@ 0x30
 801ab56:	4608      	mov	r0, r1
 801ab58:	79a2      	ldrb	r2, [r4, #6]
 801ab5a:	f7ff fce8 	bl	801a52e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801ab5e:	a817      	add	r0, sp, #92	@ 0x5c
 801ab60:	f002 fe28 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801ab64:	6820      	ldr	r0, [r4, #0]
 801ab66:	6803      	ldr	r3, [r0, #0]
 801ab68:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801ab6a:	4798      	blx	r3
 801ab6c:	4606      	mov	r6, r0
 801ab6e:	6820      	ldr	r0, [r4, #0]
 801ab70:	6803      	ldr	r3, [r0, #0]
 801ab72:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801ab74:	4798      	blx	r3
 801ab76:	4633      	mov	r3, r6
 801ab78:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801ab7a:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801ab7c:	9000      	str	r0, [sp, #0]
 801ab7e:	a817      	add	r0, sp, #92	@ 0x5c
 801ab80:	f002 fe73 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801ab84:	6820      	ldr	r0, [r4, #0]
 801ab86:	f894 a004 	ldrb.w	sl, [r4, #4]
 801ab8a:	6803      	ldr	r3, [r0, #0]
 801ab8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ab8e:	4798      	blx	r3
 801ab90:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 801ab94:	6823      	ldr	r3, [r4, #0]
 801ab96:	4607      	mov	r7, r0
 801ab98:	4406      	add	r6, r0
 801ab9a:	a830      	add	r0, sp, #192	@ 0xc0
 801ab9c:	f893 9009 	ldrb.w	r9, [r3, #9]
 801aba0:	f002 fe08 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801aba4:	7c23      	ldrb	r3, [r4, #16]
 801aba6:	b17b      	cbz	r3, 801abc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801aba8:	6820      	ldr	r0, [r4, #0]
 801abaa:	6803      	ldr	r3, [r0, #0]
 801abac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801abae:	4798      	blx	r3
 801abb0:	9009      	str	r0, [sp, #36]	@ 0x24
 801abb2:	6820      	ldr	r0, [r4, #0]
 801abb4:	6802      	ldr	r2, [r0, #0]
 801abb6:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 801abb8:	4790      	blx	r2
 801abba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801abbc:	9000      	str	r0, [sp, #0]
 801abbe:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801abc0:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801abc2:	a830      	add	r0, sp, #192	@ 0xc0
 801abc4:	f002 fe51 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801abc8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801abcc:	7be2      	ldrb	r2, [r4, #15]
 801abce:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801abd2:	1a8a      	subs	r2, r1, r2
 801abd4:	7c21      	ldrb	r1, [r4, #16]
 801abd6:	9103      	str	r1, [sp, #12]
 801abd8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801abdc:	9102      	str	r1, [sp, #8]
 801abde:	6821      	ldr	r1, [r4, #0]
 801abe0:	9101      	str	r1, [sp, #4]
 801abe2:	7961      	ldrb	r1, [r4, #5]
 801abe4:	9100      	str	r1, [sp, #0]
 801abe6:	b292      	uxth	r2, r2
 801abe8:	a930      	add	r1, sp, #192	@ 0xc0
 801abea:	a80e      	add	r0, sp, #56	@ 0x38
 801abec:	f7ff fc20 	bl	801a430 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801abf0:	2e00      	cmp	r6, #0
 801abf2:	dc5b      	bgt.n	801acac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 801abf4:	af17      	add	r7, sp, #92	@ 0x5c
 801abf6:	f04f 0900 	mov.w	r9, #0
 801abfa:	7c23      	ldrb	r3, [r4, #16]
 801abfc:	2b00      	cmp	r3, #0
 801abfe:	f000 80b1 	beq.w	801ad64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801ac02:	a80e      	add	r0, sp, #56	@ 0x38
 801ac04:	f7ff fe4c 	bl	801a8a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801ac08:	f1ba 0f00 	cmp.w	sl, #0
 801ac0c:	f000 80a5 	beq.w	801ad5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801ac10:	7c23      	ldrb	r3, [r4, #16]
 801ac12:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac14:	2264      	movs	r2, #100	@ 0x64
 801ac16:	4639      	mov	r1, r7
 801ac18:	a849      	add	r0, sp, #292	@ 0x124
 801ac1a:	f014 f898 	bl	802ed4e <memcpy>
 801ac1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ac20:	2b00      	cmp	r3, #0
 801ac22:	f000 80a7 	beq.w	801ad74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801ac26:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 801ac2a:	7922      	ldrb	r2, [r4, #4]
 801ac2c:	2a01      	cmp	r2, #1
 801ac2e:	f040 808a 	bne.w	801ad46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801ac32:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 801ac36:	1ac0      	subs	r0, r0, r3
 801ac38:	2302      	movs	r3, #2
 801ac3a:	fb90 f0f3 	sdiv	r0, r0, r3
 801ac3e:	b200      	sxth	r0, r0
 801ac40:	7c23      	ldrb	r3, [r4, #16]
 801ac42:	2b00      	cmp	r3, #0
 801ac44:	f000 808b 	beq.w	801ad5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801ac48:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 801ac4c:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 801ac50:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ac54:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801ac58:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801ac5c:	4410      	add	r0, r2
 801ac5e:	b200      	sxth	r0, r0
 801ac60:	9000      	str	r0, [sp, #0]
 801ac62:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801ac66:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801ac6a:	4642      	mov	r2, r8
 801ac6c:	2100      	movs	r1, #0
 801ac6e:	4658      	mov	r0, fp
 801ac70:	f7ff fc8e 	bl	801a590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801ac74:	2800      	cmp	r0, #0
 801ac76:	d163      	bne.n	801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801ac78:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801ac7c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801ac80:	b2b2      	uxth	r2, r6
 801ac82:	4413      	add	r3, r2
 801ac84:	1a8a      	subs	r2, r1, r2
 801ac86:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801ac8a:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801ac8e:	b21b      	sxth	r3, r3
 801ac90:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ac94:	2a00      	cmp	r2, #0
 801ac96:	d153      	bne.n	801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801ac98:	6822      	ldr	r2, [r4, #0]
 801ac9a:	8869      	ldrh	r1, [r5, #2]
 801ac9c:	7a12      	ldrb	r2, [r2, #8]
 801ac9e:	1a9b      	subs	r3, r3, r2
 801aca0:	88ea      	ldrh	r2, [r5, #6]
 801aca2:	440a      	add	r2, r1
 801aca4:	b212      	sxth	r2, r2
 801aca6:	4293      	cmp	r3, r2
 801aca8:	dda7      	ble.n	801abfa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801acaa:	e049      	b.n	801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801acac:	7c23      	ldrb	r3, [r4, #16]
 801acae:	444f      	add	r7, r9
 801acb0:	b1c3      	cbz	r3, 801ace4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801acb2:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 801acb6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801acba:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801acbe:	443b      	add	r3, r7
 801acc0:	4293      	cmp	r3, r2
 801acc2:	da97      	bge.n	801abf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801acc4:	a80e      	add	r0, sp, #56	@ 0x38
 801acc6:	f7ff fdeb 	bl	801a8a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801acca:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 801acce:	3b01      	subs	r3, #1
 801acd0:	b29b      	uxth	r3, r3
 801acd2:	454b      	cmp	r3, r9
 801acd4:	9309      	str	r3, [sp, #36]	@ 0x24
 801acd6:	d021      	beq.n	801ad1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801acd8:	7961      	ldrb	r1, [r4, #5]
 801acda:	a817      	add	r0, sp, #92	@ 0x5c
 801acdc:	f7ef fae6 	bl	800a2ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ace0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ace2:	e7f4      	b.n	801acce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 801ace4:	fa1f f986 	uxth.w	r9, r6
 801ace8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801acec:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801acf0:	443b      	add	r3, r7
 801acf2:	4293      	cmp	r3, r2
 801acf4:	f6bf af7e 	bge.w	801abf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801acf8:	a817      	add	r0, sp, #92	@ 0x5c
 801acfa:	f003 f9b1 	bl	801e060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801acfe:	b1f8      	cbz	r0, 801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801ad00:	280a      	cmp	r0, #10
 801ad02:	d1f1      	bne.n	801ace8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801ad04:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801ad08:	444b      	add	r3, r9
 801ad0a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801ad0e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801ad12:	eba3 0309 	sub.w	r3, r3, r9
 801ad16:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801ad1a:	e7e5      	b.n	801ace8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801ad1c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801ad20:	b2b3      	uxth	r3, r6
 801ad22:	441a      	add	r2, r3
 801ad24:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801ad28:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 801ad2c:	1ad3      	subs	r3, r2, r3
 801ad2e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801ad32:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801ad36:	b11b      	cbz	r3, 801ad40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801ad38:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 801ad3c:	2b00      	cmp	r3, #0
 801ad3e:	d0ba      	beq.n	801acb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801ad40:	b063      	add	sp, #396	@ 0x18c
 801ad42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad46:	2a02      	cmp	r2, #2
 801ad48:	d105      	bne.n	801ad56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801ad4a:	7be2      	ldrb	r2, [r4, #15]
 801ad4c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801ad50:	1a80      	subs	r0, r0, r2
 801ad52:	1ac0      	subs	r0, r0, r3
 801ad54:	e773      	b.n	801ac3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801ad56:	2000      	movs	r0, #0
 801ad58:	e772      	b.n	801ac40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801ad5a:	7be0      	ldrb	r0, [r4, #15]
 801ad5c:	e770      	b.n	801ac40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801ad5e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801ad62:	e773      	b.n	801ac4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801ad64:	f1ba 0f00 	cmp.w	sl, #0
 801ad68:	d0f7      	beq.n	801ad5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801ad6a:	2264      	movs	r2, #100	@ 0x64
 801ad6c:	4639      	mov	r1, r7
 801ad6e:	a849      	add	r0, sp, #292	@ 0x124
 801ad70:	f013 ffed 	bl	802ed4e <memcpy>
 801ad74:	2300      	movs	r3, #0
 801ad76:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801ad7a:	6821      	ldr	r1, [r4, #0]
 801ad7c:	a849      	add	r0, sp, #292	@ 0x124
 801ad7e:	f7ff fb9a 	bl	801a4b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801ad82:	b203      	sxth	r3, r0
 801ad84:	e751      	b.n	801ac2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801ad86 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801ad86:	2b03      	cmp	r3, #3
 801ad88:	d818      	bhi.n	801adbc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801ad8a:	e8df f003 	tbb	[pc, r3]
 801ad8e:	0602      	.short	0x0602
 801ad90:	130d      	.short	0x130d
 801ad92:	f9b0 2000 	ldrsh.w	r2, [r0]
 801ad96:	1850      	adds	r0, r2, r1
 801ad98:	4770      	bx	lr
 801ad9a:	8803      	ldrh	r3, [r0, #0]
 801ad9c:	8880      	ldrh	r0, [r0, #4]
 801ad9e:	4418      	add	r0, r3
 801ada0:	b200      	sxth	r0, r0
 801ada2:	1a80      	subs	r0, r0, r2
 801ada4:	3801      	subs	r0, #1
 801ada6:	4770      	bx	lr
 801ada8:	8803      	ldrh	r3, [r0, #0]
 801adaa:	8880      	ldrh	r0, [r0, #4]
 801adac:	4418      	add	r0, r3
 801adae:	b200      	sxth	r0, r0
 801adb0:	1a40      	subs	r0, r0, r1
 801adb2:	e7f7      	b.n	801ada4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801adb4:	f9b0 0000 	ldrsh.w	r0, [r0]
 801adb8:	4410      	add	r0, r2
 801adba:	4770      	bx	lr
 801adbc:	2000      	movs	r0, #0
 801adbe:	4770      	bx	lr

0801adc0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801adc0:	2b03      	cmp	r3, #3
 801adc2:	d817      	bhi.n	801adf4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801adc4:	e8df f003 	tbb	[pc, r3]
 801adc8:	10090602 	.word	0x10090602
 801adcc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801add0:	1850      	adds	r0, r2, r1
 801add2:	4770      	bx	lr
 801add4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801add8:	e7fa      	b.n	801add0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801adda:	8843      	ldrh	r3, [r0, #2]
 801addc:	88c0      	ldrh	r0, [r0, #6]
 801adde:	4418      	add	r0, r3
 801ade0:	b200      	sxth	r0, r0
 801ade2:	1a80      	subs	r0, r0, r2
 801ade4:	3801      	subs	r0, #1
 801ade6:	4770      	bx	lr
 801ade8:	8843      	ldrh	r3, [r0, #2]
 801adea:	88c0      	ldrh	r0, [r0, #6]
 801adec:	4418      	add	r0, r3
 801adee:	b200      	sxth	r0, r0
 801adf0:	1a40      	subs	r0, r0, r1
 801adf2:	e7f7      	b.n	801ade4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801adf4:	2000      	movs	r0, #0
 801adf6:	4770      	bx	lr

0801adf8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801adf8:	4b01      	ldr	r3, [pc, #4]	@ (801ae00 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801adfa:	2200      	movs	r2, #0
 801adfc:	601a      	str	r2, [r3, #0]
 801adfe:	4770      	bx	lr
 801ae00:	200138f4 	.word	0x200138f4

0801ae04 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801ae04:	4603      	mov	r3, r0
 801ae06:	b1c8      	cbz	r0, 801ae3c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801ae08:	0c02      	lsrs	r2, r0, #16
 801ae0a:	0412      	lsls	r2, r2, #16
 801ae0c:	b9a2      	cbnz	r2, 801ae38 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801ae0e:	0403      	lsls	r3, r0, #16
 801ae10:	2010      	movs	r0, #16
 801ae12:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801ae16:	bf04      	itt	eq
 801ae18:	021b      	lsleq	r3, r3, #8
 801ae1a:	3008      	addeq	r0, #8
 801ae1c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801ae20:	bf04      	itt	eq
 801ae22:	011b      	lsleq	r3, r3, #4
 801ae24:	3004      	addeq	r0, #4
 801ae26:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801ae2a:	bf04      	itt	eq
 801ae2c:	009b      	lsleq	r3, r3, #2
 801ae2e:	3002      	addeq	r0, #2
 801ae30:	2b00      	cmp	r3, #0
 801ae32:	db04      	blt.n	801ae3e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801ae34:	3001      	adds	r0, #1
 801ae36:	4770      	bx	lr
 801ae38:	2000      	movs	r0, #0
 801ae3a:	e7ea      	b.n	801ae12 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801ae3c:	2020      	movs	r0, #32
 801ae3e:	4770      	bx	lr

0801ae40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801ae40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae44:	b087      	sub	sp, #28
 801ae46:	460d      	mov	r5, r1
 801ae48:	4616      	mov	r6, r2
 801ae4a:	4698      	mov	r8, r3
 801ae4c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 801ae50:	4601      	mov	r1, r0
 801ae52:	b120      	cbz	r0, 801ae5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801ae54:	b11a      	cbz	r2, 801ae5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801ae56:	2d1f      	cmp	r5, #31
 801ae58:	d801      	bhi.n	801ae5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801ae5a:	2b1f      	cmp	r3, #31
 801ae5c:	d904      	bls.n	801ae68 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801ae5e:	2000      	movs	r0, #0
 801ae60:	6038      	str	r0, [r7, #0]
 801ae62:	b007      	add	sp, #28
 801ae64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae68:	b97d      	cbnz	r5, 801ae8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801ae6a:	b143      	cbz	r3, 801ae7e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 801ae6c:	4602      	mov	r2, r0
 801ae6e:	e9cd 4700 	strd	r4, r7, [sp]
 801ae72:	462b      	mov	r3, r5
 801ae74:	4641      	mov	r1, r8
 801ae76:	4630      	mov	r0, r6
 801ae78:	f7ff ffe2 	bl	801ae40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801ae7c:	e7f1      	b.n	801ae62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801ae7e:	f04f 33ff 	mov.w	r3, #4294967295
 801ae82:	603b      	str	r3, [r7, #0]
 801ae84:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 801ae88:	e7eb      	b.n	801ae62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801ae8a:	fa32 fa05 	lsrs.w	sl, r2, r5
 801ae8e:	d106      	bne.n	801ae9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801ae90:	4346      	muls	r6, r0
 801ae92:	fbb6 f0f4 	udiv	r0, r6, r4
 801ae96:	fb04 6610 	mls	r6, r4, r0, r6
 801ae9a:	603e      	str	r6, [r7, #0]
 801ae9c:	e7e1      	b.n	801ae62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801ae9e:	2201      	movs	r2, #1
 801aea0:	40aa      	lsls	r2, r5
 801aea2:	3a01      	subs	r2, #1
 801aea4:	4016      	ands	r6, r2
 801aea6:	fa00 fb05 	lsl.w	fp, r0, r5
 801aeaa:	4630      	mov	r0, r6
 801aeac:	fbbb f9f4 	udiv	r9, fp, r4
 801aeb0:	fb0a f309 	mul.w	r3, sl, r9
 801aeb4:	9303      	str	r3, [sp, #12]
 801aeb6:	f7ff ffa5 	bl	801ae04 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801aeba:	462b      	mov	r3, r5
 801aebc:	460a      	mov	r2, r1
 801aebe:	e9cd 4700 	strd	r4, r7, [sp]
 801aec2:	4601      	mov	r1, r0
 801aec4:	4630      	mov	r0, r6
 801aec6:	f7ff ffbb 	bl	801ae40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801aeca:	fb04 b919 	mls	r9, r4, r9, fp
 801aece:	4606      	mov	r6, r0
 801aed0:	4648      	mov	r0, r9
 801aed2:	eb05 0108 	add.w	r1, r5, r8
 801aed6:	f7ff ff95 	bl	801ae04 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801aeda:	ab05      	add	r3, sp, #20
 801aedc:	e9cd 4300 	strd	r4, r3, [sp]
 801aee0:	464a      	mov	r2, r9
 801aee2:	4603      	mov	r3, r0
 801aee4:	4650      	mov	r0, sl
 801aee6:	f7ff ffab 	bl	801ae40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801aeea:	6839      	ldr	r1, [r7, #0]
 801aeec:	9a05      	ldr	r2, [sp, #20]
 801aeee:	9b03      	ldr	r3, [sp, #12]
 801aef0:	4411      	add	r1, r2
 801aef2:	fbb1 f2f4 	udiv	r2, r1, r4
 801aef6:	18d3      	adds	r3, r2, r3
 801aef8:	441e      	add	r6, r3
 801aefa:	fb04 1412 	mls	r4, r4, r2, r1
 801aefe:	4430      	add	r0, r6
 801af00:	603c      	str	r4, [r7, #0]
 801af02:	e7ae      	b.n	801ae62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0801af04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801af04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801af08:	b085      	sub	sp, #20
 801af0a:	f1b0 0900 	subs.w	r9, r0, #0
 801af0e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801af10:	461d      	mov	r5, r3
 801af12:	bfbf      	itttt	lt
 801af14:	6823      	ldrlt	r3, [r4, #0]
 801af16:	425b      	neglt	r3, r3
 801af18:	f1c9 0900 	rsblt	r9, r9, #0
 801af1c:	6023      	strlt	r3, [r4, #0]
 801af1e:	bfb4      	ite	lt
 801af20:	f04f 36ff 	movlt.w	r6, #4294967295
 801af24:	2601      	movge	r6, #1
 801af26:	2a00      	cmp	r2, #0
 801af28:	4617      	mov	r7, r2
 801af2a:	da04      	bge.n	801af36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801af2c:	6823      	ldr	r3, [r4, #0]
 801af2e:	425b      	negs	r3, r3
 801af30:	4257      	negs	r7, r2
 801af32:	4276      	negs	r6, r6
 801af34:	6023      	str	r3, [r4, #0]
 801af36:	2d00      	cmp	r5, #0
 801af38:	4638      	mov	r0, r7
 801af3a:	bfba      	itte	lt
 801af3c:	426d      	neglt	r5, r5
 801af3e:	f04f 38ff 	movlt.w	r8, #4294967295
 801af42:	f04f 0801 	movge.w	r8, #1
 801af46:	f7ff ff5d 	bl	801ae04 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801af4a:	ab03      	add	r3, sp, #12
 801af4c:	e9cd 5300 	strd	r5, r3, [sp]
 801af50:	463a      	mov	r2, r7
 801af52:	4603      	mov	r3, r0
 801af54:	4648      	mov	r0, r9
 801af56:	f7ff ff73 	bl	801ae40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801af5a:	6823      	ldr	r3, [r4, #0]
 801af5c:	9a03      	ldr	r2, [sp, #12]
 801af5e:	4546      	cmp	r6, r8
 801af60:	441a      	add	r2, r3
 801af62:	fb92 f3f5 	sdiv	r3, r2, r5
 801af66:	4418      	add	r0, r3
 801af68:	bf18      	it	ne
 801af6a:	4240      	negne	r0, r0
 801af6c:	fb05 2313 	mls	r3, r5, r3, r2
 801af70:	1c72      	adds	r2, r6, #1
 801af72:	6023      	str	r3, [r4, #0]
 801af74:	d105      	bne.n	801af82 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801af76:	2b00      	cmp	r3, #0
 801af78:	f1c3 0200 	rsb	r2, r3, #0
 801af7c:	db0b      	blt.n	801af96 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801af7e:	6022      	str	r2, [r4, #0]
 801af80:	e006      	b.n	801af90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801af82:	2e01      	cmp	r6, #1
 801af84:	d104      	bne.n	801af90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801af86:	2b00      	cmp	r3, #0
 801af88:	da02      	bge.n	801af90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801af8a:	442b      	add	r3, r5
 801af8c:	3801      	subs	r0, #1
 801af8e:	6023      	str	r3, [r4, #0]
 801af90:	b005      	add	sp, #20
 801af92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801af96:	3801      	subs	r0, #1
 801af98:	1b52      	subs	r2, r2, r5
 801af9a:	e7f0      	b.n	801af7e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0801af9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801af9c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801afa0:	4c1c      	ldr	r4, [pc, #112]	@ (801b014 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801afa2:	6807      	ldr	r7, [r0, #0]
 801afa4:	69a3      	ldr	r3, [r4, #24]
 801afa6:	4605      	mov	r5, r0
 801afa8:	b92b      	cbnz	r3, 801afb6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801afaa:	6840      	ldr	r0, [r0, #4]
 801afac:	e9c5 7000 	strd	r7, r0, [r5]
 801afb0:	b004      	add	sp, #16
 801afb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801afb6:	68a2      	ldr	r2, [r4, #8]
 801afb8:	6820      	ldr	r0, [r4, #0]
 801afba:	ae04      	add	r6, sp, #16
 801afbc:	f04f 0802 	mov.w	r8, #2
 801afc0:	fb93 f1f8 	sdiv	r1, r3, r8
 801afc4:	440a      	add	r2, r1
 801afc6:	f846 2d04 	str.w	r2, [r6, #-4]!
 801afca:	69e1      	ldr	r1, [r4, #28]
 801afcc:	9600      	str	r6, [sp, #0]
 801afce:	463a      	mov	r2, r7
 801afd0:	f7ff ff98 	bl	801af04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801afd4:	69a3      	ldr	r3, [r4, #24]
 801afd6:	686a      	ldr	r2, [r5, #4]
 801afd8:	6a21      	ldr	r1, [r4, #32]
 801afda:	9600      	str	r6, [sp, #0]
 801afdc:	4607      	mov	r7, r0
 801afde:	6860      	ldr	r0, [r4, #4]
 801afe0:	f7ff ff90 	bl	801af04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801afe4:	6962      	ldr	r2, [r4, #20]
 801afe6:	69a3      	ldr	r3, [r4, #24]
 801afe8:	fb93 f8f8 	sdiv	r8, r3, r8
 801afec:	4442      	add	r2, r8
 801afee:	9203      	str	r2, [sp, #12]
 801aff0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 801aff2:	682a      	ldr	r2, [r5, #0]
 801aff4:	9600      	str	r6, [sp, #0]
 801aff6:	4407      	add	r7, r0
 801aff8:	68e0      	ldr	r0, [r4, #12]
 801affa:	f7ff ff83 	bl	801af04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801affe:	9600      	str	r6, [sp, #0]
 801b000:	4680      	mov	r8, r0
 801b002:	69a3      	ldr	r3, [r4, #24]
 801b004:	686a      	ldr	r2, [r5, #4]
 801b006:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 801b008:	6920      	ldr	r0, [r4, #16]
 801b00a:	f7ff ff7b 	bl	801af04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801b00e:	4440      	add	r0, r8
 801b010:	e7cc      	b.n	801afac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801b012:	bf00      	nop
 801b014:	200138f8 	.word	0x200138f8

0801b018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801b018:	4b07      	ldr	r3, [pc, #28]	@ (801b038 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801b01a:	781b      	ldrb	r3, [r3, #0]
 801b01c:	2b01      	cmp	r3, #1
 801b01e:	d109      	bne.n	801b034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801b020:	f9b1 3000 	ldrsh.w	r3, [r1]
 801b024:	f9b0 2000 	ldrsh.w	r2, [r0]
 801b028:	8003      	strh	r3, [r0, #0]
 801b02a:	4b04      	ldr	r3, [pc, #16]	@ (801b03c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801b02c:	881b      	ldrh	r3, [r3, #0]
 801b02e:	3b01      	subs	r3, #1
 801b030:	1a9b      	subs	r3, r3, r2
 801b032:	800b      	strh	r3, [r1, #0]
 801b034:	4770      	bx	lr
 801b036:	bf00      	nop
 801b038:	200138dc 	.word	0x200138dc
 801b03c:	200138d8 	.word	0x200138d8

0801b040 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801b040:	b510      	push	{r4, lr}
 801b042:	4b07      	ldr	r3, [pc, #28]	@ (801b060 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801b044:	781b      	ldrb	r3, [r3, #0]
 801b046:	2b01      	cmp	r3, #1
 801b048:	d108      	bne.n	801b05c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801b04a:	4b06      	ldr	r3, [pc, #24]	@ (801b064 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801b04c:	880c      	ldrh	r4, [r1, #0]
 801b04e:	881b      	ldrh	r3, [r3, #0]
 801b050:	f9b0 2000 	ldrsh.w	r2, [r0]
 801b054:	3b01      	subs	r3, #1
 801b056:	1b1b      	subs	r3, r3, r4
 801b058:	8003      	strh	r3, [r0, #0]
 801b05a:	800a      	strh	r2, [r1, #0]
 801b05c:	bd10      	pop	{r4, pc}
 801b05e:	bf00      	nop
 801b060:	200138dc 	.word	0x200138dc
 801b064:	200138d8 	.word	0x200138d8

0801b068 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801b068:	b510      	push	{r4, lr}
 801b06a:	4b0a      	ldr	r3, [pc, #40]	@ (801b094 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801b06c:	781b      	ldrb	r3, [r3, #0]
 801b06e:	2b01      	cmp	r3, #1
 801b070:	d10e      	bne.n	801b090 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801b072:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801b076:	8843      	ldrh	r3, [r0, #2]
 801b078:	f9b0 4000 	ldrsh.w	r4, [r0]
 801b07c:	8044      	strh	r4, [r0, #2]
 801b07e:	18ca      	adds	r2, r1, r3
 801b080:	4b05      	ldr	r3, [pc, #20]	@ (801b098 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801b082:	881b      	ldrh	r3, [r3, #0]
 801b084:	1a9b      	subs	r3, r3, r2
 801b086:	8003      	strh	r3, [r0, #0]
 801b088:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801b08c:	80c3      	strh	r3, [r0, #6]
 801b08e:	8081      	strh	r1, [r0, #4]
 801b090:	bd10      	pop	{r4, pc}
 801b092:	bf00      	nop
 801b094:	200138dc 	.word	0x200138dc
 801b098:	200138d8 	.word	0x200138d8

0801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801b09c:	4b08      	ldr	r3, [pc, #32]	@ (801b0c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801b09e:	781b      	ldrb	r3, [r3, #0]
 801b0a0:	2b01      	cmp	r3, #1
 801b0a2:	d10c      	bne.n	801b0be <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801b0a4:	8803      	ldrh	r3, [r0, #0]
 801b0a6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801b0aa:	8842      	ldrh	r2, [r0, #2]
 801b0ac:	8002      	strh	r2, [r0, #0]
 801b0ae:	185a      	adds	r2, r3, r1
 801b0b0:	4b04      	ldr	r3, [pc, #16]	@ (801b0c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801b0b2:	881b      	ldrh	r3, [r3, #0]
 801b0b4:	1a9b      	subs	r3, r3, r2
 801b0b6:	8043      	strh	r3, [r0, #2]
 801b0b8:	88c3      	ldrh	r3, [r0, #6]
 801b0ba:	8083      	strh	r3, [r0, #4]
 801b0bc:	80c1      	strh	r1, [r0, #6]
 801b0be:	4770      	bx	lr
 801b0c0:	200138dc 	.word	0x200138dc
 801b0c4:	200138d8 	.word	0x200138d8

0801b0c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801b0c8:	b510      	push	{r4, lr}
 801b0ca:	4b07      	ldr	r3, [pc, #28]	@ (801b0e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801b0cc:	781b      	ldrb	r3, [r3, #0]
 801b0ce:	2b01      	cmp	r3, #1
 801b0d0:	d108      	bne.n	801b0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801b0d2:	f9b1 3000 	ldrsh.w	r3, [r1]
 801b0d6:	f9b0 4000 	ldrsh.w	r4, [r0]
 801b0da:	8003      	strh	r3, [r0, #0]
 801b0dc:	8893      	ldrh	r3, [r2, #4]
 801b0de:	3b01      	subs	r3, #1
 801b0e0:	1b1b      	subs	r3, r3, r4
 801b0e2:	800b      	strh	r3, [r1, #0]
 801b0e4:	bd10      	pop	{r4, pc}
 801b0e6:	bf00      	nop
 801b0e8:	200138dc 	.word	0x200138dc

0801b0ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 801b0ec:	4b0b      	ldr	r3, [pc, #44]	@ (801b11c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801b0ee:	781b      	ldrb	r3, [r3, #0]
 801b0f0:	2b01      	cmp	r3, #1
 801b0f2:	d111      	bne.n	801b118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 801b0f4:	680b      	ldr	r3, [r1, #0]
 801b0f6:	ed90 7a00 	vldr	s14, [r0]
 801b0fa:	6003      	str	r3, [r0, #0]
 801b0fc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801b100:	eddf 6a07 	vldr	s13, [pc, #28]	@ 801b120 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 801b104:	ee07 3a90 	vmov	s15, r3
 801b108:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b10c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801b110:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801b114:	edc1 7a00 	vstr	s15, [r1]
 801b118:	4770      	bx	lr
 801b11a:	bf00      	nop
 801b11c:	200138dc 	.word	0x200138dc
 801b120:	38d1b717 	.word	0x38d1b717

0801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801b124:	b510      	push	{r4, lr}
 801b126:	4b0a      	ldr	r3, [pc, #40]	@ (801b150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801b128:	781b      	ldrb	r3, [r3, #0]
 801b12a:	2b01      	cmp	r3, #1
 801b12c:	460a      	mov	r2, r1
 801b12e:	d10d      	bne.n	801b14c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801b130:	8881      	ldrh	r1, [r0, #4]
 801b132:	8803      	ldrh	r3, [r0, #0]
 801b134:	440b      	add	r3, r1
 801b136:	4601      	mov	r1, r0
 801b138:	3b01      	subs	r3, #1
 801b13a:	f821 3b02 	strh.w	r3, [r1], #2
 801b13e:	f7ff ffc3 	bl	801b0c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801b142:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801b146:	88c2      	ldrh	r2, [r0, #6]
 801b148:	8082      	strh	r2, [r0, #4]
 801b14a:	80c3      	strh	r3, [r0, #6]
 801b14c:	bd10      	pop	{r4, pc}
 801b14e:	bf00      	nop
 801b150:	200138dc 	.word	0x200138dc

0801b154 <_ZN8touchgfx11Application13requestRedrawEv>:
 801b154:	4b06      	ldr	r3, [pc, #24]	@ (801b170 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801b156:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b15a:	4b06      	ldr	r3, [pc, #24]	@ (801b174 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801b15c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 801b160:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b164:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 801b168:	2100      	movs	r1, #0
 801b16a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 801b16e:	4770      	bx	lr
 801b170:	200138d8 	.word	0x200138d8
 801b174:	200138da 	.word	0x200138da

0801b178 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801b178:	4b03      	ldr	r3, [pc, #12]	@ (801b188 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801b17a:	6818      	ldr	r0, [r3, #0]
 801b17c:	b110      	cbz	r0, 801b184 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801b17e:	6803      	ldr	r3, [r0, #0]
 801b180:	699b      	ldr	r3, [r3, #24]
 801b182:	4718      	bx	r3
 801b184:	4770      	bx	lr
 801b186:	bf00      	nop
 801b188:	20013928 	.word	0x20013928

0801b18c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801b18c:	4770      	bx	lr
	...

0801b190 <_ZN8touchgfx11Application4drawEv>:
 801b190:	b507      	push	{r0, r1, r2, lr}
 801b192:	4b09      	ldr	r3, [pc, #36]	@ (801b1b8 <_ZN8touchgfx11Application4drawEv+0x28>)
 801b194:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b198:	4b08      	ldr	r3, [pc, #32]	@ (801b1bc <_ZN8touchgfx11Application4drawEv+0x2c>)
 801b19a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b19e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b1a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b1a6:	6803      	ldr	r3, [r0, #0]
 801b1a8:	2100      	movs	r1, #0
 801b1aa:	9100      	str	r1, [sp, #0]
 801b1ac:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801b1ae:	4669      	mov	r1, sp
 801b1b0:	4798      	blx	r3
 801b1b2:	b003      	add	sp, #12
 801b1b4:	f85d fb04 	ldr.w	pc, [sp], #4
 801b1b8:	200138d8 	.word	0x200138d8
 801b1bc:	200138da 	.word	0x200138da

0801b1c0 <_ZN8touchgfx11Application10invalidateEv>:
 801b1c0:	4b09      	ldr	r3, [pc, #36]	@ (801b1e8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801b1c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b1c6:	4b09      	ldr	r3, [pc, #36]	@ (801b1ec <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801b1c8:	b082      	sub	sp, #8
 801b1ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b1ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b1d2:	2100      	movs	r1, #0
 801b1d4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b1d8:	9100      	str	r1, [sp, #0]
 801b1da:	6803      	ldr	r3, [r0, #0]
 801b1dc:	aa02      	add	r2, sp, #8
 801b1de:	e912 0006 	ldmdb	r2, {r1, r2}
 801b1e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801b1e4:	b002      	add	sp, #8
 801b1e6:	4718      	bx	r3
 801b1e8:	200138d8 	.word	0x200138d8
 801b1ec:	200138da 	.word	0x200138da

0801b1f0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801b1f0:	4b03      	ldr	r3, [pc, #12]	@ (801b200 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801b1f2:	6818      	ldr	r0, [r3, #0]
 801b1f4:	b110      	cbz	r0, 801b1fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801b1f6:	6803      	ldr	r3, [r0, #0]
 801b1f8:	69db      	ldr	r3, [r3, #28]
 801b1fa:	4718      	bx	r3
 801b1fc:	4770      	bx	lr
 801b1fe:	bf00      	nop
 801b200:	20013928 	.word	0x20013928

0801b204 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801b204:	4b03      	ldr	r3, [pc, #12]	@ (801b214 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801b206:	6818      	ldr	r0, [r3, #0]
 801b208:	b110      	cbz	r0, 801b210 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801b20a:	6803      	ldr	r3, [r0, #0]
 801b20c:	6a1b      	ldr	r3, [r3, #32]
 801b20e:	4718      	bx	r3
 801b210:	4770      	bx	lr
 801b212:	bf00      	nop
 801b214:	20013928 	.word	0x20013928

0801b218 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801b218:	2300      	movs	r3, #0
 801b21a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801b21e:	4770      	bx	lr

0801b220 <_ZN8touchgfx11Application14handleKeyEventEh>:
 801b220:	4b03      	ldr	r3, [pc, #12]	@ (801b230 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801b222:	6818      	ldr	r0, [r3, #0]
 801b224:	b110      	cbz	r0, 801b22c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801b226:	6803      	ldr	r3, [r0, #0]
 801b228:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b22a:	4718      	bx	r3
 801b22c:	4770      	bx	lr
 801b22e:	bf00      	nop
 801b230:	20013928 	.word	0x20013928

0801b234 <_ZN8touchgfx11ApplicationD1Ev>:
 801b234:	4770      	bx	lr

0801b236 <_ZN8touchgfx11ApplicationD0Ev>:
 801b236:	b510      	push	{r4, lr}
 801b238:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 801b23c:	4604      	mov	r4, r0
 801b23e:	f012 fb72 	bl	802d926 <_ZdlPvj>
 801b242:	4620      	mov	r0, r4
 801b244:	bd10      	pop	{r4, pc}

0801b246 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801b246:	b510      	push	{r4, lr}
 801b248:	f9b1 4000 	ldrsh.w	r4, [r1]
 801b24c:	888a      	ldrh	r2, [r1, #4]
 801b24e:	f9b0 3000 	ldrsh.w	r3, [r0]
 801b252:	4422      	add	r2, r4
 801b254:	b212      	sxth	r2, r2
 801b256:	4293      	cmp	r3, r2
 801b258:	da15      	bge.n	801b286 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801b25a:	8882      	ldrh	r2, [r0, #4]
 801b25c:	4413      	add	r3, r2
 801b25e:	b21b      	sxth	r3, r3
 801b260:	429c      	cmp	r4, r3
 801b262:	da10      	bge.n	801b286 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801b264:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801b268:	88c9      	ldrh	r1, [r1, #6]
 801b26a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801b26e:	4419      	add	r1, r3
 801b270:	b209      	sxth	r1, r1
 801b272:	428a      	cmp	r2, r1
 801b274:	da07      	bge.n	801b286 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801b276:	88c0      	ldrh	r0, [r0, #6]
 801b278:	4410      	add	r0, r2
 801b27a:	b200      	sxth	r0, r0
 801b27c:	4283      	cmp	r3, r0
 801b27e:	bfac      	ite	ge
 801b280:	2000      	movge	r0, #0
 801b282:	2001      	movlt	r0, #1
 801b284:	bd10      	pop	{r4, pc}
 801b286:	2000      	movs	r0, #0
 801b288:	e7fc      	b.n	801b284 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801b28a <_ZN8touchgfx4Rect10restrictToEss>:
 801b28a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801b28e:	2b00      	cmp	r3, #0
 801b290:	b510      	push	{r4, lr}
 801b292:	da04      	bge.n	801b29e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801b294:	8884      	ldrh	r4, [r0, #4]
 801b296:	4423      	add	r3, r4
 801b298:	8083      	strh	r3, [r0, #4]
 801b29a:	2300      	movs	r3, #0
 801b29c:	8003      	strh	r3, [r0, #0]
 801b29e:	f9b0 4000 	ldrsh.w	r4, [r0]
 801b2a2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801b2a6:	1b09      	subs	r1, r1, r4
 801b2a8:	428b      	cmp	r3, r1
 801b2aa:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801b2ae:	bfc8      	it	gt
 801b2b0:	8081      	strhgt	r1, [r0, #4]
 801b2b2:	2b00      	cmp	r3, #0
 801b2b4:	da04      	bge.n	801b2c0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801b2b6:	88c1      	ldrh	r1, [r0, #6]
 801b2b8:	440b      	add	r3, r1
 801b2ba:	80c3      	strh	r3, [r0, #6]
 801b2bc:	2300      	movs	r3, #0
 801b2be:	8043      	strh	r3, [r0, #2]
 801b2c0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801b2c4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801b2c8:	1a52      	subs	r2, r2, r1
 801b2ca:	4293      	cmp	r3, r2
 801b2cc:	bfc8      	it	gt
 801b2ce:	80c2      	strhgt	r2, [r0, #6]
 801b2d0:	bd10      	pop	{r4, pc}
	...

0801b2d4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801b2d4:	b510      	push	{r4, lr}
 801b2d6:	4b10      	ldr	r3, [pc, #64]	@ (801b318 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801b2d8:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b2dc:	4b0f      	ldr	r3, [pc, #60]	@ (801b31c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801b2de:	460c      	mov	r4, r1
 801b2e0:	4620      	mov	r0, r4
 801b2e2:	f9b3 1000 	ldrsh.w	r1, [r3]
 801b2e6:	f7ff ffd0 	bl	801b28a <_ZN8touchgfx4Rect10restrictToEss>
 801b2ea:	4b0d      	ldr	r3, [pc, #52]	@ (801b320 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801b2ec:	6818      	ldr	r0, [r3, #0]
 801b2ee:	b190      	cbz	r0, 801b316 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801b2f0:	6803      	ldr	r3, [r0, #0]
 801b2f2:	4621      	mov	r1, r4
 801b2f4:	689b      	ldr	r3, [r3, #8]
 801b2f6:	4798      	blx	r3
 801b2f8:	4b0a      	ldr	r3, [pc, #40]	@ (801b324 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801b2fa:	6818      	ldr	r0, [r3, #0]
 801b2fc:	b118      	cbz	r0, 801b306 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801b2fe:	6803      	ldr	r3, [r0, #0]
 801b300:	4621      	mov	r1, r4
 801b302:	689b      	ldr	r3, [r3, #8]
 801b304:	4798      	blx	r3
 801b306:	4b08      	ldr	r3, [pc, #32]	@ (801b328 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801b308:	6818      	ldr	r0, [r3, #0]
 801b30a:	6803      	ldr	r3, [r0, #0]
 801b30c:	4621      	mov	r1, r4
 801b30e:	69db      	ldr	r3, [r3, #28]
 801b310:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b314:	4718      	bx	r3
 801b316:	bd10      	pop	{r4, pc}
 801b318:	200138da 	.word	0x200138da
 801b31c:	200138d8 	.word	0x200138d8
 801b320:	20013928 	.word	0x20013928
 801b324:	20013924 	.word	0x20013924
 801b328:	200138e4 	.word	0x200138e4

0801b32c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801b32c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b32e:	4606      	mov	r6, r0
 801b330:	4608      	mov	r0, r1
 801b332:	460f      	mov	r7, r1
 801b334:	f7fa f8ab 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b338:	b9e8      	cbnz	r0, 801b376 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801b33a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801b33e:	f9b6 4000 	ldrsh.w	r4, [r6]
 801b342:	42a5      	cmp	r5, r4
 801b344:	db17      	blt.n	801b376 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801b346:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801b34a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801b34e:	429a      	cmp	r2, r3
 801b350:	db11      	blt.n	801b376 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801b352:	88b9      	ldrh	r1, [r7, #4]
 801b354:	440d      	add	r5, r1
 801b356:	88b1      	ldrh	r1, [r6, #4]
 801b358:	440c      	add	r4, r1
 801b35a:	b22d      	sxth	r5, r5
 801b35c:	b224      	sxth	r4, r4
 801b35e:	42a5      	cmp	r5, r4
 801b360:	dc09      	bgt.n	801b376 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801b362:	88f8      	ldrh	r0, [r7, #6]
 801b364:	4410      	add	r0, r2
 801b366:	88f2      	ldrh	r2, [r6, #6]
 801b368:	4413      	add	r3, r2
 801b36a:	b200      	sxth	r0, r0
 801b36c:	b21b      	sxth	r3, r3
 801b36e:	4298      	cmp	r0, r3
 801b370:	bfcc      	ite	gt
 801b372:	2000      	movgt	r0, #0
 801b374:	2001      	movle	r0, #1
 801b376:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801b378 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801b378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b37a:	4604      	mov	r4, r0
 801b37c:	4608      	mov	r0, r1
 801b37e:	460d      	mov	r5, r1
 801b380:	f7fa f885 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b384:	b978      	cbnz	r0, 801b3a6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801b386:	4620      	mov	r0, r4
 801b388:	f7fa f881 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b38c:	f9b5 6000 	ldrsh.w	r6, [r5]
 801b390:	b150      	cbz	r0, 801b3a8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801b392:	8026      	strh	r6, [r4, #0]
 801b394:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801b398:	8063      	strh	r3, [r4, #2]
 801b39a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801b39e:	80a3      	strh	r3, [r4, #4]
 801b3a0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801b3a4:	80e3      	strh	r3, [r4, #6]
 801b3a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b3a8:	f9b4 1000 	ldrsh.w	r1, [r4]
 801b3ac:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801b3b0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801b3b4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801b3b8:	88ed      	ldrh	r5, [r5, #6]
 801b3ba:	42b1      	cmp	r1, r6
 801b3bc:	460f      	mov	r7, r1
 801b3be:	bfa8      	it	ge
 801b3c0:	4637      	movge	r7, r6
 801b3c2:	4293      	cmp	r3, r2
 801b3c4:	4618      	mov	r0, r3
 801b3c6:	4466      	add	r6, ip
 801b3c8:	bfa8      	it	ge
 801b3ca:	4610      	movge	r0, r2
 801b3cc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801b3d0:	8027      	strh	r7, [r4, #0]
 801b3d2:	442a      	add	r2, r5
 801b3d4:	88e5      	ldrh	r5, [r4, #6]
 801b3d6:	8060      	strh	r0, [r4, #2]
 801b3d8:	4461      	add	r1, ip
 801b3da:	442b      	add	r3, r5
 801b3dc:	b236      	sxth	r6, r6
 801b3de:	b209      	sxth	r1, r1
 801b3e0:	b212      	sxth	r2, r2
 801b3e2:	b21b      	sxth	r3, r3
 801b3e4:	428e      	cmp	r6, r1
 801b3e6:	bfac      	ite	ge
 801b3e8:	ebc7 0106 	rsbge	r1, r7, r6
 801b3ec:	ebc7 0101 	rsblt	r1, r7, r1
 801b3f0:	429a      	cmp	r2, r3
 801b3f2:	bfac      	ite	ge
 801b3f4:	ebc0 0202 	rsbge	r2, r0, r2
 801b3f8:	ebc0 0203 	rsblt	r2, r0, r3
 801b3fc:	80a1      	strh	r1, [r4, #4]
 801b3fe:	80e2      	strh	r2, [r4, #6]
 801b400:	e7d1      	b.n	801b3a6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801b404 <_ZN8touchgfx11Application11getInstanceEv>:
 801b404:	4b01      	ldr	r3, [pc, #4]	@ (801b40c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801b406:	6818      	ldr	r0, [r3, #0]
 801b408:	4770      	bx	lr
 801b40a:	bf00      	nop
 801b40c:	20013938 	.word	0x20013938

0801b410 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801b410:	b510      	push	{r4, lr}
 801b412:	2300      	movs	r3, #0
 801b414:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 801b418:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801b41c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801b420:	4604      	mov	r4, r0
 801b422:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801b426:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801b42a:	429a      	cmp	r2, r3
 801b42c:	d90e      	bls.n	801b44c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801b42e:	18e2      	adds	r2, r4, r3
 801b430:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 801b434:	b122      	cbz	r2, 801b440 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801b436:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801b43a:	6803      	ldr	r3, [r0, #0]
 801b43c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801b43e:	4798      	blx	r3
 801b440:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801b444:	3301      	adds	r3, #1
 801b446:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801b44a:	e7ea      	b.n	801b422 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801b44c:	bd10      	pop	{r4, pc}

0801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801b44e:	2300      	movs	r3, #0
 801b450:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801b454:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 801b458:	30a4      	adds	r0, #164	@ 0xa4
 801b45a:	f802 3b01 	strb.w	r3, [r2], #1
 801b45e:	4282      	cmp	r2, r0
 801b460:	d1fb      	bne.n	801b45a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801b462:	4770      	bx	lr

0801b464 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801b464:	b570      	push	{r4, r5, r6, lr}
 801b466:	4c0b      	ldr	r4, [pc, #44]	@ (801b494 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801b468:	4605      	mov	r5, r0
 801b46a:	6820      	ldr	r0, [r4, #0]
 801b46c:	460e      	mov	r6, r1
 801b46e:	b110      	cbz	r0, 801b476 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 801b470:	6803      	ldr	r3, [r0, #0]
 801b472:	695b      	ldr	r3, [r3, #20]
 801b474:	4798      	blx	r3
 801b476:	1d28      	adds	r0, r5, #4
 801b478:	f7ff ffe9 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801b47c:	6026      	str	r6, [r4, #0]
 801b47e:	6833      	ldr	r3, [r6, #0]
 801b480:	4630      	mov	r0, r6
 801b482:	68db      	ldr	r3, [r3, #12]
 801b484:	4798      	blx	r3
 801b486:	682b      	ldr	r3, [r5, #0]
 801b488:	4628      	mov	r0, r5
 801b48a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801b48c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b490:	4718      	bx	r3
 801b492:	bf00      	nop
 801b494:	20013928 	.word	0x20013928

0801b498 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801b498:	2300      	movs	r3, #0
 801b49a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801b49e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 801b4a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b4a4:	461a      	mov	r2, r3
 801b4a6:	461c      	mov	r4, r3
 801b4a8:	461d      	mov	r5, r3
 801b4aa:	459c      	cmp	ip, r3
 801b4ac:	dd1a      	ble.n	801b4e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801b4ae:	18c6      	adds	r6, r0, r3
 801b4b0:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 801b4b4:	b16e      	cbz	r6, 801b4d2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801b4b6:	429a      	cmp	r2, r3
 801b4b8:	d008      	beq.n	801b4cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801b4ba:	fa1f fe82 	uxth.w	lr, r2
 801b4be:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801b4c2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801b4c6:	1887      	adds	r7, r0, r2
 801b4c8:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 801b4cc:	3201      	adds	r2, #1
 801b4ce:	3301      	adds	r3, #1
 801b4d0:	e7eb      	b.n	801b4aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801b4d2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801b4d6:	4299      	cmp	r1, r3
 801b4d8:	bfa8      	it	ge
 801b4da:	3501      	addge	r5, #1
 801b4dc:	429e      	cmp	r6, r3
 801b4de:	bfc8      	it	gt
 801b4e0:	3401      	addgt	r4, #1
 801b4e2:	e7f4      	b.n	801b4ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 801b4e4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 801b4e8:	1b49      	subs	r1, r1, r5
 801b4ea:	1b1b      	subs	r3, r3, r4
 801b4ec:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801b4f0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801b4f4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801b4f8:	4293      	cmp	r3, r2
 801b4fa:	dd03      	ble.n	801b504 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801b4fc:	3b01      	subs	r3, #1
 801b4fe:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801b502:	e7f7      	b.n	801b4f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801b504:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801b508 <_ZN8touchgfx11Application15handleTickEventEv>:
 801b508:	b570      	push	{r4, r5, r6, lr}
 801b50a:	4d16      	ldr	r5, [pc, #88]	@ (801b564 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801b50c:	4604      	mov	r4, r0
 801b50e:	6828      	ldr	r0, [r5, #0]
 801b510:	b140      	cbz	r0, 801b524 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801b512:	7a03      	ldrb	r3, [r0, #8]
 801b514:	b933      	cbnz	r3, 801b524 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801b516:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801b51a:	6803      	ldr	r3, [r0, #0]
 801b51c:	689b      	ldr	r3, [r3, #8]
 801b51e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b522:	4718      	bx	r3
 801b524:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 801b528:	4e0f      	ldr	r6, [pc, #60]	@ (801b568 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801b52a:	b973      	cbnz	r3, 801b54a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801b52c:	b168      	cbz	r0, 801b54a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801b52e:	7a03      	ldrb	r3, [r0, #8]
 801b530:	b15b      	cbz	r3, 801b54a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801b532:	6830      	ldr	r0, [r6, #0]
 801b534:	b110      	cbz	r0, 801b53c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801b536:	6803      	ldr	r3, [r0, #0]
 801b538:	691b      	ldr	r3, [r3, #16]
 801b53a:	4798      	blx	r3
 801b53c:	6828      	ldr	r0, [r5, #0]
 801b53e:	6803      	ldr	r3, [r0, #0]
 801b540:	68db      	ldr	r3, [r3, #12]
 801b542:	4798      	blx	r3
 801b544:	2301      	movs	r3, #1
 801b546:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801b54a:	3404      	adds	r4, #4
 801b54c:	4620      	mov	r0, r4
 801b54e:	f7ff ff5f 	bl	801b410 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801b552:	4620      	mov	r0, r4
 801b554:	f7ff ffa0 	bl	801b498 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801b558:	6830      	ldr	r0, [r6, #0]
 801b55a:	b110      	cbz	r0, 801b562 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801b55c:	6803      	ldr	r3, [r0, #0]
 801b55e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801b560:	e7dd      	b.n	801b51e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801b562:	bd70      	pop	{r4, r5, r6, pc}
 801b564:	2001392c 	.word	0x2001392c
 801b568:	20013928 	.word	0x20013928

0801b56c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801b56c:	4603      	mov	r3, r0
 801b56e:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 801b572:	2200      	movs	r2, #0
 801b574:	801a      	strh	r2, [r3, #0]
 801b576:	805a      	strh	r2, [r3, #2]
 801b578:	809a      	strh	r2, [r3, #4]
 801b57a:	80da      	strh	r2, [r3, #6]
 801b57c:	3308      	adds	r3, #8
 801b57e:	428b      	cmp	r3, r1
 801b580:	d1f8      	bne.n	801b574 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801b582:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801b586:	4770      	bx	lr

0801b588 <_ZN8touchgfx11ApplicationC1Ev>:
 801b588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b58a:	4606      	mov	r6, r0
 801b58c:	4b1c      	ldr	r3, [pc, #112]	@ (801b600 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801b58e:	f846 3b04 	str.w	r3, [r6], #4
 801b592:	4604      	mov	r4, r0
 801b594:	2500      	movs	r5, #0
 801b596:	22a8      	movs	r2, #168	@ 0xa8
 801b598:	2100      	movs	r1, #0
 801b59a:	4630      	mov	r0, r6
 801b59c:	f013 fb07 	bl	802ebae <memset>
 801b5a0:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 801b5a4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801b5a8:	f7ff ffe0 	bl	801b56c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801b5ac:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 801b5b0:	f7ff ffdc 	bl	801b56c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801b5b4:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 801b5b8:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 801b5bc:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801b5c0:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 801b5c4:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 801b5c8:	490e      	ldr	r1, [pc, #56]	@ (801b604 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801b5ca:	480f      	ldr	r0, [pc, #60]	@ (801b608 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801b5cc:	4f0f      	ldr	r7, [pc, #60]	@ (801b60c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801b5ce:	f011 fb35 	bl	802cc3c <CRC_Lock>
 801b5d2:	4b0f      	ldr	r3, [pc, #60]	@ (801b610 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801b5d4:	b158      	cbz	r0, 801b5ee <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801b5d6:	801d      	strh	r5, [r3, #0]
 801b5d8:	4a0e      	ldr	r2, [pc, #56]	@ (801b614 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801b5da:	2300      	movs	r3, #0
 801b5dc:	6013      	str	r3, [r2, #0]
 801b5de:	4a0e      	ldr	r2, [pc, #56]	@ (801b618 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801b5e0:	603b      	str	r3, [r7, #0]
 801b5e2:	4630      	mov	r0, r6
 801b5e4:	6013      	str	r3, [r2, #0]
 801b5e6:	f7ff ff32 	bl	801b44e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801b5ea:	4620      	mov	r0, r4
 801b5ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b5ee:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801b5f2:	2002      	movs	r0, #2
 801b5f4:	801a      	strh	r2, [r3, #0]
 801b5f6:	6038      	str	r0, [r7, #0]
 801b5f8:	f001 ff62 	bl	801d4c0 <_ZN8touchgfx6Screen4drawEv>
 801b5fc:	e7ec      	b.n	801b5d8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801b5fe:	bf00      	nop
 801b600:	08033544 	.word	0x08033544
 801b604:	b5e8b5cd 	.word	0xb5e8b5cd
 801b608:	f407a5c2 	.word	0xf407a5c2
 801b60c:	20013928 	.word	0x20013928
 801b610:	20000090 	.word	0x20000090
 801b614:	20013938 	.word	0x20013938
 801b618:	2001392c 	.word	0x2001392c

0801b61c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801b61c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801b620:	3b01      	subs	r3, #1
 801b622:	b29b      	uxth	r3, r3
 801b624:	428b      	cmp	r3, r1
 801b626:	b510      	push	{r4, lr}
 801b628:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801b62c:	d908      	bls.n	801b640 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801b62e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801b632:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801b636:	681a      	ldr	r2, [r3, #0]
 801b638:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801b63c:	685a      	ldr	r2, [r3, #4]
 801b63e:	6062      	str	r2, [r4, #4]
 801b640:	bd10      	pop	{r4, pc}
	...

0801b644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801b644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b648:	4b92      	ldr	r3, [pc, #584]	@ (801b894 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 801b64a:	b08f      	sub	sp, #60	@ 0x3c
 801b64c:	ac0a      	add	r4, sp, #40	@ 0x28
 801b64e:	e884 0006 	stmia.w	r4, {r1, r2}
 801b652:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b656:	4b90      	ldr	r3, [pc, #576]	@ (801b898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 801b658:	4683      	mov	fp, r0
 801b65a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801b65e:	4620      	mov	r0, r4
 801b660:	f7ff fe13 	bl	801b28a <_ZN8touchgfx4Rect10restrictToEss>
 801b664:	4620      	mov	r0, r4
 801b666:	f7f9 ff12 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801b66a:	2800      	cmp	r0, #0
 801b66c:	d170      	bne.n	801b750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801b66e:	4b8b      	ldr	r3, [pc, #556]	@ (801b89c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801b670:	681b      	ldr	r3, [r3, #0]
 801b672:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 801b676:	2b02      	cmp	r3, #2
 801b678:	d06a      	beq.n	801b750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801b67a:	9403      	str	r4, [sp, #12]
 801b67c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801b680:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801b684:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801b688:	35a4      	adds	r5, #164	@ 0xa4
 801b68a:	9301      	str	r3, [sp, #4]
 801b68c:	b15c      	cbz	r4, 801b6a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 801b68e:	4629      	mov	r1, r5
 801b690:	9803      	ldr	r0, [sp, #12]
 801b692:	f7ff fe4b 	bl	801b32c <_ZNK8touchgfx4Rect8includesERKS0_>
 801b696:	3c01      	subs	r4, #1
 801b698:	b118      	cbz	r0, 801b6a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801b69a:	b2a1      	uxth	r1, r4
 801b69c:	9801      	ldr	r0, [sp, #4]
 801b69e:	f7ff ffbd 	bl	801b61c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b6a2:	3d08      	subs	r5, #8
 801b6a4:	e7f2      	b.n	801b68c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801b6a6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801b6aa:	f8cd a010 	str.w	sl, [sp, #16]
 801b6ae:	f10a 33ff 	add.w	r3, sl, #4294967295
 801b6b2:	9302      	str	r3, [sp, #8]
 801b6b4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801b6b8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 801b6bc:	9306      	str	r3, [sp, #24]
 801b6be:	445c      	add	r4, fp
 801b6c0:	2500      	movs	r5, #0
 801b6c2:	4626      	mov	r6, r4
 801b6c4:	f8cd a014 	str.w	sl, [sp, #20]
 801b6c8:	462f      	mov	r7, r5
 801b6ca:	9b05      	ldr	r3, [sp, #20]
 801b6cc:	2b00      	cmp	r3, #0
 801b6ce:	d073      	beq.n	801b7b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 801b6d0:	9903      	ldr	r1, [sp, #12]
 801b6d2:	4630      	mov	r0, r6
 801b6d4:	f7ff fdb7 	bl	801b246 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b6d8:	b350      	cbz	r0, 801b730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801b6da:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801b6de:	f9b6 c000 	ldrsh.w	ip, [r6]
 801b6e2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801b6e6:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801b6ea:	45e6      	cmp	lr, ip
 801b6ec:	db33      	blt.n	801b756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801b6ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801b6f2:	88b3      	ldrh	r3, [r6, #4]
 801b6f4:	4472      	add	r2, lr
 801b6f6:	4463      	add	r3, ip
 801b6f8:	b212      	sxth	r2, r2
 801b6fa:	b21b      	sxth	r3, r3
 801b6fc:	429a      	cmp	r2, r3
 801b6fe:	dc2a      	bgt.n	801b756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801b700:	88f3      	ldrh	r3, [r6, #6]
 801b702:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801b706:	fa1f f289 	uxth.w	r2, r9
 801b70a:	4413      	add	r3, r2
 801b70c:	b29b      	uxth	r3, r3
 801b70e:	45c8      	cmp	r8, r9
 801b710:	fa1f fc88 	uxth.w	ip, r8
 801b714:	fa0f fe83 	sxth.w	lr, r3
 801b718:	db0f      	blt.n	801b73a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 801b71a:	eba3 030c 	sub.w	r3, r3, ip
 801b71e:	1ac9      	subs	r1, r1, r3
 801b720:	b209      	sxth	r1, r1
 801b722:	2900      	cmp	r1, #0
 801b724:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b728:	dd12      	ble.n	801b750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801b72a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801b72e:	4605      	mov	r5, r0
 801b730:	9b05      	ldr	r3, [sp, #20]
 801b732:	3b01      	subs	r3, #1
 801b734:	9305      	str	r3, [sp, #20]
 801b736:	3e08      	subs	r6, #8
 801b738:	e7c7      	b.n	801b6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 801b73a:	4461      	add	r1, ip
 801b73c:	b209      	sxth	r1, r1
 801b73e:	4571      	cmp	r1, lr
 801b740:	dc38      	bgt.n	801b7b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b742:	eba2 020c 	sub.w	r2, r2, ip
 801b746:	b212      	sxth	r2, r2
 801b748:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801b74c:	2a00      	cmp	r2, #0
 801b74e:	dcee      	bgt.n	801b72e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801b750:	b00f      	add	sp, #60	@ 0x3c
 801b752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b756:	45c8      	cmp	r8, r9
 801b758:	db2c      	blt.n	801b7b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b75a:	88f3      	ldrh	r3, [r6, #6]
 801b75c:	4499      	add	r9, r3
 801b75e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801b762:	4498      	add	r8, r3
 801b764:	fa0f f989 	sxth.w	r9, r9
 801b768:	fa0f f888 	sxth.w	r8, r8
 801b76c:	45c1      	cmp	r9, r8
 801b76e:	db21      	blt.n	801b7b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b770:	88b3      	ldrh	r3, [r6, #4]
 801b772:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801b776:	fa1f f28c 	uxth.w	r2, ip
 801b77a:	4413      	add	r3, r2
 801b77c:	b29b      	uxth	r3, r3
 801b77e:	45e6      	cmp	lr, ip
 801b780:	fa1f f88e 	uxth.w	r8, lr
 801b784:	fa0f f983 	sxth.w	r9, r3
 801b788:	db0a      	blt.n	801b7a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 801b78a:	eba3 0308 	sub.w	r3, r3, r8
 801b78e:	1ac9      	subs	r1, r1, r3
 801b790:	b209      	sxth	r1, r1
 801b792:	2900      	cmp	r1, #0
 801b794:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801b798:	ddda      	ble.n	801b750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801b79a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801b79e:	e7c6      	b.n	801b72e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801b7a0:	4441      	add	r1, r8
 801b7a2:	b209      	sxth	r1, r1
 801b7a4:	4549      	cmp	r1, r9
 801b7a6:	dc05      	bgt.n	801b7b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801b7a8:	eba2 0208 	sub.w	r2, r2, r8
 801b7ac:	b212      	sxth	r2, r2
 801b7ae:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801b7b2:	e7cb      	b.n	801b74c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 801b7b4:	4607      	mov	r7, r0
 801b7b6:	e7bb      	b.n	801b730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801b7b8:	2d00      	cmp	r5, #0
 801b7ba:	d181      	bne.n	801b6c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 801b7bc:	2f00      	cmp	r7, #0
 801b7be:	f000 81df 	beq.w	801bb80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801b7c2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801b7c6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801b7ca:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801b7ce:	b2b3      	uxth	r3, r6
 801b7d0:	9305      	str	r3, [sp, #20]
 801b7d2:	9a05      	ldr	r2, [sp, #20]
 801b7d4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801b7d8:	4413      	add	r3, r2
 801b7da:	b2ba      	uxth	r2, r7
 801b7dc:	4492      	add	sl, r2
 801b7de:	b29b      	uxth	r3, r3
 801b7e0:	fa1f fa8a 	uxth.w	sl, sl
 801b7e4:	fa0f f883 	sxth.w	r8, r3
 801b7e8:	fa0f f98a 	sxth.w	r9, sl
 801b7ec:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801b7f0:	9b04      	ldr	r3, [sp, #16]
 801b7f2:	2b00      	cmp	r3, #0
 801b7f4:	d054      	beq.n	801b8a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 801b7f6:	9903      	ldr	r1, [sp, #12]
 801b7f8:	4620      	mov	r0, r4
 801b7fa:	f7ff fd24 	bl	801b246 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b7fe:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801b802:	b1c0      	cbz	r0, 801b836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b804:	f9b4 e000 	ldrsh.w	lr, [r4]
 801b808:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801b80c:	4576      	cmp	r6, lr
 801b80e:	dc22      	bgt.n	801b856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801b810:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801b814:	44f4      	add	ip, lr
 801b816:	fa0f fc8c 	sxth.w	ip, ip
 801b81a:	45e0      	cmp	r8, ip
 801b81c:	db1b      	blt.n	801b856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801b81e:	428f      	cmp	r7, r1
 801b820:	fa1f fc81 	uxth.w	ip, r1
 801b824:	88e1      	ldrh	r1, [r4, #6]
 801b826:	dc0d      	bgt.n	801b844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 801b828:	ebaa 0c0c 	sub.w	ip, sl, ip
 801b82c:	eba1 010c 	sub.w	r1, r1, ip
 801b830:	f8a4 9002 	strh.w	r9, [r4, #2]
 801b834:	80e1      	strh	r1, [r4, #6]
 801b836:	4628      	mov	r0, r5
 801b838:	9904      	ldr	r1, [sp, #16]
 801b83a:	3901      	subs	r1, #1
 801b83c:	9104      	str	r1, [sp, #16]
 801b83e:	3c08      	subs	r4, #8
 801b840:	4605      	mov	r5, r0
 801b842:	e7d3      	b.n	801b7ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 801b844:	4461      	add	r1, ip
 801b846:	b209      	sxth	r1, r1
 801b848:	4549      	cmp	r1, r9
 801b84a:	dcf5      	bgt.n	801b838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b84c:	eba2 0c0c 	sub.w	ip, r2, ip
 801b850:	f8a4 c006 	strh.w	ip, [r4, #6]
 801b854:	e7ef      	b.n	801b836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b856:	428f      	cmp	r7, r1
 801b858:	dcee      	bgt.n	801b838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b85a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801b85e:	4461      	add	r1, ip
 801b860:	b209      	sxth	r1, r1
 801b862:	4589      	cmp	r9, r1
 801b864:	dbe8      	blt.n	801b838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b866:	4576      	cmp	r6, lr
 801b868:	fa1f fc8e 	uxth.w	ip, lr
 801b86c:	88a1      	ldrh	r1, [r4, #4]
 801b86e:	dc07      	bgt.n	801b880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 801b870:	eba3 0c0c 	sub.w	ip, r3, ip
 801b874:	eba1 010c 	sub.w	r1, r1, ip
 801b878:	f8a4 8000 	strh.w	r8, [r4]
 801b87c:	80a1      	strh	r1, [r4, #4]
 801b87e:	e7da      	b.n	801b836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b880:	4461      	add	r1, ip
 801b882:	b209      	sxth	r1, r1
 801b884:	4588      	cmp	r8, r1
 801b886:	dbd7      	blt.n	801b838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801b888:	9905      	ldr	r1, [sp, #20]
 801b88a:	eba1 0c0c 	sub.w	ip, r1, ip
 801b88e:	f8a4 c004 	strh.w	ip, [r4, #4]
 801b892:	e7d0      	b.n	801b836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b894:	200138da 	.word	0x200138da
 801b898:	200138d8 	.word	0x200138d8
 801b89c:	200138e4 	.word	0x200138e4
 801b8a0:	2d00      	cmp	r5, #0
 801b8a2:	f000 816d 	beq.w	801bb80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801b8a6:	9b06      	ldr	r3, [sp, #24]
 801b8a8:	445b      	add	r3, fp
 801b8aa:	461c      	mov	r4, r3
 801b8ac:	9b02      	ldr	r3, [sp, #8]
 801b8ae:	3301      	adds	r3, #1
 801b8b0:	f000 8166 	beq.w	801bb80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801b8b4:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 801b8b8:	4629      	mov	r1, r5
 801b8ba:	9803      	ldr	r0, [sp, #12]
 801b8bc:	f7ff fd36 	bl	801b32c <_ZNK8touchgfx4Rect8includesERKS0_>
 801b8c0:	b120      	cbz	r0, 801b8cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 801b8c2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b8c6:	9801      	ldr	r0, [sp, #4]
 801b8c8:	f7ff fea8 	bl	801b61c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b8cc:	9903      	ldr	r1, [sp, #12]
 801b8ce:	4628      	mov	r0, r5
 801b8d0:	f7ff fcb9 	bl	801b246 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b8d4:	2800      	cmp	r0, #0
 801b8d6:	f000 809c 	beq.w	801ba12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801b8da:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801b8de:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801b8e2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801b8e6:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8e8:	fa1f f189 	uxth.w	r1, r9
 801b8ec:	eb01 0c03 	add.w	ip, r1, r3
 801b8f0:	fa1f fa8c 	uxth.w	sl, ip
 801b8f4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801b8f8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 801b8fc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801b900:	b283      	uxth	r3, r0
 801b902:	eb03 050c 	add.w	r5, r3, ip
 801b906:	b2ad      	uxth	r5, r5
 801b908:	9505      	str	r5, [sp, #20]
 801b90a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801b90e:	9504      	str	r5, [sp, #16]
 801b910:	4548      	cmp	r0, r9
 801b912:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 801b916:	f340 8099 	ble.w	801ba4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 801b91a:	1a5b      	subs	r3, r3, r1
 801b91c:	b29b      	uxth	r3, r3
 801b91e:	4596      	cmp	lr, r2
 801b920:	fa0f f08a 	sxth.w	r0, sl
 801b924:	b21e      	sxth	r6, r3
 801b926:	dd2e      	ble.n	801b986 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 801b928:	9f02      	ldr	r7, [sp, #8]
 801b92a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801b92e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801b932:	9f04      	ldr	r7, [sp, #16]
 801b934:	1a3f      	subs	r7, r7, r0
 801b936:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801b93a:	fa1f fe8e 	uxth.w	lr, lr
 801b93e:	b292      	uxth	r2, r2
 801b940:	ebae 0102 	sub.w	r1, lr, r2
 801b944:	44a6      	add	lr, r4
 801b946:	4402      	add	r2, r0
 801b948:	b289      	uxth	r1, r1
 801b94a:	fa0f fe8e 	sxth.w	lr, lr
 801b94e:	b212      	sxth	r2, r2
 801b950:	b20d      	sxth	r5, r1
 801b952:	ebae 0202 	sub.w	r2, lr, r2
 801b956:	436f      	muls	r7, r5
 801b958:	4372      	muls	r2, r6
 801b95a:	4297      	cmp	r7, r2
 801b95c:	db09      	blt.n	801b972 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 801b95e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 801b962:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 801b966:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801b96a:	449c      	add	ip, r3
 801b96c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801b970:	e684      	b.n	801b67c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b972:	4421      	add	r1, r4
 801b974:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 801b978:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 801b97c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b980:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801b984:	e67a      	b.n	801b67c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b986:	9f04      	ldr	r7, [sp, #16]
 801b988:	42b8      	cmp	r0, r7
 801b98a:	da27      	bge.n	801b9dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 801b98c:	9902      	ldr	r1, [sp, #8]
 801b98e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 801b992:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801b996:	eb05 010e 	add.w	r1, r5, lr
 801b99a:	fa1f f881 	uxth.w	r8, r1
 801b99e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 801b9a2:	4411      	add	r1, r2
 801b9a4:	eba1 0108 	sub.w	r1, r1, r8
 801b9a8:	b289      	uxth	r1, r1
 801b9aa:	fa0f f988 	sxth.w	r9, r8
 801b9ae:	eba2 020e 	sub.w	r2, r2, lr
 801b9b2:	fa0f f881 	sxth.w	r8, r1
 801b9b6:	1a3f      	subs	r7, r7, r0
 801b9b8:	4372      	muls	r2, r6
 801b9ba:	fb08 f707 	mul.w	r7, r8, r7
 801b9be:	42ba      	cmp	r2, r7
 801b9c0:	dc06      	bgt.n	801b9d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 801b9c2:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 801b9c6:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801b9ca:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801b9ce:	e7ca      	b.n	801b966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801b9d0:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 801b9d4:	4429      	add	r1, r5
 801b9d6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801b9da:	e64f      	b.n	801b67c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801b9dc:	9805      	ldr	r0, [sp, #20]
 801b9de:	ebaa 0000 	sub.w	r0, sl, r0
 801b9e2:	b280      	uxth	r0, r0
 801b9e4:	2d06      	cmp	r5, #6
 801b9e6:	fa0f fe80 	sxth.w	lr, r0
 801b9ea:	d817      	bhi.n	801ba1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 801b9ec:	9b04      	ldr	r3, [sp, #16]
 801b9ee:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801b9f2:	1c6b      	adds	r3, r5, #1
 801b9f4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 801b9f8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 801b9fc:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801ba00:	9b01      	ldr	r3, [sp, #4]
 801ba02:	9801      	ldr	r0, [sp, #4]
 801ba04:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801ba08:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801ba0c:	805a      	strh	r2, [r3, #2]
 801ba0e:	809e      	strh	r6, [r3, #4]
 801ba10:	80d9      	strh	r1, [r3, #6]
 801ba12:	9b02      	ldr	r3, [sp, #8]
 801ba14:	3b01      	subs	r3, #1
 801ba16:	9302      	str	r3, [sp, #8]
 801ba18:	3c08      	subs	r4, #8
 801ba1a:	e747      	b.n	801b8ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 801ba1c:	9a02      	ldr	r2, [sp, #8]
 801ba1e:	45b6      	cmp	lr, r6
 801ba20:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801ba24:	db0d      	blt.n	801ba42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 801ba26:	449c      	add	ip, r3
 801ba28:	fa1f fc8c 	uxth.w	ip, ip
 801ba2c:	445a      	add	r2, fp
 801ba2e:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801ba32:	448c      	add	ip, r1
 801ba34:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801ba38:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 801ba3c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801ba40:	e61c      	b.n	801b67c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801ba42:	445a      	add	r2, fp
 801ba44:	4484      	add	ip, r0
 801ba46:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801ba4a:	e78f      	b.n	801b96c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801ba4c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801ba50:	fa1f f18e 	uxth.w	r1, lr
 801ba54:	eb01 0806 	add.w	r8, r1, r6
 801ba58:	b293      	uxth	r3, r2
 801ba5a:	fa1f f888 	uxth.w	r8, r8
 801ba5e:	9306      	str	r3, [sp, #24]
 801ba60:	fa0f f388 	sxth.w	r3, r8
 801ba64:	9307      	str	r3, [sp, #28]
 801ba66:	9f06      	ldr	r7, [sp, #24]
 801ba68:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801ba6c:	443b      	add	r3, r7
 801ba6e:	b29b      	uxth	r3, r3
 801ba70:	4596      	cmp	lr, r2
 801ba72:	9308      	str	r3, [sp, #32]
 801ba74:	da24      	bge.n	801bac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801ba76:	9905      	ldr	r1, [sp, #20]
 801ba78:	eba3 0308 	sub.w	r3, r3, r8
 801ba7c:	ebaa 0401 	sub.w	r4, sl, r1
 801ba80:	b2a4      	uxth	r4, r4
 801ba82:	b29b      	uxth	r3, r3
 801ba84:	b225      	sxth	r5, r4
 801ba86:	b219      	sxth	r1, r3
 801ba88:	eba2 020e 	sub.w	r2, r2, lr
 801ba8c:	eba9 0000 	sub.w	r0, r9, r0
 801ba90:	436a      	muls	r2, r5
 801ba92:	4348      	muls	r0, r1
 801ba94:	4282      	cmp	r2, r0
 801ba96:	9a02      	ldr	r2, [sp, #8]
 801ba98:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801ba9c:	445a      	add	r2, fp
 801ba9e:	dc06      	bgt.n	801baae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 801baa0:	9b07      	ldr	r3, [sp, #28]
 801baa2:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 801baa6:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801baaa:	44a4      	add	ip, r4
 801baac:	e75e      	b.n	801b96c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801baae:	9904      	ldr	r1, [sp, #16]
 801bab0:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 801bab4:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 801bab8:	4433      	add	r3, r6
 801baba:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801babe:	e5dd      	b.n	801b67c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801bac0:	9f06      	ldr	r7, [sp, #24]
 801bac2:	9b04      	ldr	r3, [sp, #16]
 801bac4:	1bc9      	subs	r1, r1, r7
 801bac6:	fa0f f78a 	sxth.w	r7, sl
 801baca:	b289      	uxth	r1, r1
 801bacc:	429f      	cmp	r7, r3
 801bace:	fa0f fe81 	sxth.w	lr, r1
 801bad2:	dd23      	ble.n	801bb1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 801bad4:	9a05      	ldr	r2, [sp, #20]
 801bad6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801bada:	9d07      	ldr	r5, [sp, #28]
 801badc:	ebaa 0202 	sub.w	r2, sl, r2
 801bae0:	b292      	uxth	r2, r2
 801bae2:	eba5 0a03 	sub.w	sl, r5, r3
 801bae6:	b214      	sxth	r4, r2
 801bae8:	eba9 0000 	sub.w	r0, r9, r0
 801baec:	9b02      	ldr	r3, [sp, #8]
 801baee:	fb0e f000 	mul.w	r0, lr, r0
 801baf2:	fb04 fa0a 	mul.w	sl, r4, sl
 801baf6:	00db      	lsls	r3, r3, #3
 801baf8:	4550      	cmp	r0, sl
 801bafa:	445b      	add	r3, fp
 801bafc:	db03      	blt.n	801bb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 801bafe:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801bb02:	4494      	add	ip, r2
 801bb04:	e732      	b.n	801b96c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801bb06:	9a04      	ldr	r2, [sp, #16]
 801bb08:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 801bb0c:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801bb10:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 801bb14:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801bb18:	4431      	add	r1, r6
 801bb1a:	e75c      	b.n	801b9d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 801bb1c:	9b08      	ldr	r3, [sp, #32]
 801bb1e:	eba3 0308 	sub.w	r3, r3, r8
 801bb22:	b29b      	uxth	r3, r3
 801bb24:	2d06      	cmp	r5, #6
 801bb26:	b218      	sxth	r0, r3
 801bb28:	d813      	bhi.n	801bb52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 801bb2a:	9b07      	ldr	r3, [sp, #28]
 801bb2c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801bb30:	1c6b      	adds	r3, r5, #1
 801bb32:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 801bb36:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801bb3a:	9b01      	ldr	r3, [sp, #4]
 801bb3c:	9901      	ldr	r1, [sp, #4]
 801bb3e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801bb42:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801bb46:	805a      	strh	r2, [r3, #2]
 801bb48:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bb4a:	809a      	strh	r2, [r3, #4]
 801bb4c:	f8a3 e006 	strh.w	lr, [r3, #6]
 801bb50:	e75f      	b.n	801ba12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801bb52:	9c02      	ldr	r4, [sp, #8]
 801bb54:	4570      	cmp	r0, lr
 801bb56:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801bb5a:	db0d      	blt.n	801bb78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 801bb5c:	4431      	add	r1, r6
 801bb5e:	9b06      	ldr	r3, [sp, #24]
 801bb60:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801bb64:	b289      	uxth	r1, r1
 801bb66:	445c      	add	r4, fp
 801bb68:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801bb6c:	4419      	add	r1, r3
 801bb6e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 801bb72:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 801bb76:	e581      	b.n	801b67c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801bb78:	445c      	add	r4, fp
 801bb7a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801bb7e:	e79b      	b.n	801bab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 801bb80:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801bb84:	1e65      	subs	r5, r4, #1
 801bb86:	b2ad      	uxth	r5, r5
 801bb88:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801bb8c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 801bb90:	42b5      	cmp	r5, r6
 801bb92:	d044      	beq.n	801bc1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 801bb94:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801bb98:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 801bb9c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801bba0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 801bba4:	4282      	cmp	r2, r0
 801bba6:	d11f      	bne.n	801bbe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801bba8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 801bbac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801bbb0:	459c      	cmp	ip, r3
 801bbb2:	d119      	bne.n	801bbe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801bbb4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 801bbb8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801bbbc:	19d8      	adds	r0, r3, r7
 801bbbe:	b200      	sxth	r0, r0
 801bbc0:	4288      	cmp	r0, r1
 801bbc2:	d109      	bne.n	801bbd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801bbc4:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 801bbc8:	4413      	add	r3, r2
 801bbca:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801bbce:	4629      	mov	r1, r5
 801bbd0:	9801      	ldr	r0, [sp, #4]
 801bbd2:	f7ff fd23 	bl	801b61c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801bbd6:	e003      	b.n	801bbe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801bbd8:	4411      	add	r1, r2
 801bbda:	b209      	sxth	r1, r1
 801bbdc:	42b9      	cmp	r1, r7
 801bbde:	d0f3      	beq.n	801bbc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801bbe0:	3d01      	subs	r5, #1
 801bbe2:	b2ad      	uxth	r5, r5
 801bbe4:	3c08      	subs	r4, #8
 801bbe6:	e7d3      	b.n	801bb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 801bbe8:	42b9      	cmp	r1, r7
 801bbea:	d1f9      	bne.n	801bbe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801bbec:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801bbf0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801bbf4:	4299      	cmp	r1, r3
 801bbf6:	d1f3      	bne.n	801bbe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801bbf8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801bbfc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801bc00:	181f      	adds	r7, r3, r0
 801bc02:	b23f      	sxth	r7, r7
 801bc04:	42ba      	cmp	r2, r7
 801bc06:	d105      	bne.n	801bc14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 801bc08:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 801bc0c:	440b      	add	r3, r1
 801bc0e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801bc12:	e7dc      	b.n	801bbce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 801bc14:	440a      	add	r2, r1
 801bc16:	b212      	sxth	r2, r2
 801bc18:	4290      	cmp	r0, r2
 801bc1a:	d1e1      	bne.n	801bbe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801bc1c:	e7f6      	b.n	801bc0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 801bc1e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801bc22:	2e07      	cmp	r6, #7
 801bc24:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801bc28:	d812      	bhi.n	801bc50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 801bc2a:	1c75      	adds	r5, r6, #1
 801bc2c:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801bc30:	9d01      	ldr	r5, [sp, #4]
 801bc32:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801bc36:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801bc3a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801bc3e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801bc42:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801bc46:	442c      	add	r4, r5
 801bc48:	8061      	strh	r1, [r4, #2]
 801bc4a:	80a2      	strh	r2, [r4, #4]
 801bc4c:	80e3      	strh	r3, [r4, #6]
 801bc4e:	e57f      	b.n	801b750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801bc50:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801bc54:	3e01      	subs	r6, #1
 801bc56:	445c      	add	r4, fp
 801bc58:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 801bc5c:	f04f 37ff 	mov.w	r7, #4294967295
 801bc60:	2500      	movs	r5, #0
 801bc62:	9305      	str	r3, [sp, #20]
 801bc64:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801bc68:	9302      	str	r3, [sp, #8]
 801bc6a:	1e72      	subs	r2, r6, #1
 801bc6c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801bc70:	9304      	str	r3, [sp, #16]
 801bc72:	4691      	mov	r9, r2
 801bc74:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 801bc78:	f1b9 3fff 	cmp.w	r9, #4294967295
 801bc7c:	bf14      	ite	ne
 801bc7e:	9905      	ldrne	r1, [sp, #20]
 801bc80:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801bc84:	6818      	ldr	r0, [r3, #0]
 801bc86:	9207      	str	r2, [sp, #28]
 801bc88:	bf18      	it	ne
 801bc8a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801bc8e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801bc92:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801bc96:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801bc9a:	9306      	str	r3, [sp, #24]
 801bc9c:	fb18 f801 	smulbb	r8, r8, r1
 801bca0:	6859      	ldr	r1, [r3, #4]
 801bca2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801bca6:	4671      	mov	r1, lr
 801bca8:	a80c      	add	r0, sp, #48	@ 0x30
 801bcaa:	f7ff fb65 	bl	801b378 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801bcae:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801bcb2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801bcb6:	9b04      	ldr	r3, [sp, #16]
 801bcb8:	9a02      	ldr	r2, [sp, #8]
 801bcba:	fb10 f001 	smulbb	r0, r0, r1
 801bcbe:	fb02 8803 	mla	r8, r2, r3, r8
 801bcc2:	eba0 0108 	sub.w	r1, r0, r8
 801bcc6:	f04f 0c08 	mov.w	ip, #8
 801bcca:	fb90 f0fc 	sdiv	r0, r0, ip
 801bcce:	4288      	cmp	r0, r1
 801bcd0:	dc20      	bgt.n	801bd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801bcd2:	4551      	cmp	r1, sl
 801bcd4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801bcd8:	da03      	bge.n	801bce2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 801bcda:	b1d9      	cbz	r1, 801bd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801bcdc:	468a      	mov	sl, r1
 801bcde:	464f      	mov	r7, r9
 801bce0:	4635      	mov	r5, r6
 801bce2:	f109 39ff 	add.w	r9, r9, #4294967295
 801bce6:	f119 0f02 	cmn.w	r9, #2
 801bcea:	d1c5      	bne.n	801bc78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 801bcec:	4616      	mov	r6, r2
 801bcee:	3201      	adds	r2, #1
 801bcf0:	f1a4 0408 	sub.w	r4, r4, #8
 801bcf4:	d1b6      	bne.n	801bc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 801bcf6:	9b01      	ldr	r3, [sp, #4]
 801bcf8:	b2ac      	uxth	r4, r5
 801bcfa:	00ed      	lsls	r5, r5, #3
 801bcfc:	1958      	adds	r0, r3, r5
 801bcfe:	1c7b      	adds	r3, r7, #1
 801bd00:	d10b      	bne.n	801bd1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 801bd02:	4601      	mov	r1, r0
 801bd04:	9803      	ldr	r0, [sp, #12]
 801bd06:	f7ff fb37 	bl	801b378 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801bd0a:	4621      	mov	r1, r4
 801bd0c:	9801      	ldr	r0, [sp, #4]
 801bd0e:	f7ff fc85 	bl	801b61c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801bd12:	e4b3      	b.n	801b67c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801bd14:	464f      	mov	r7, r9
 801bd16:	4635      	mov	r5, r6
 801bd18:	e7ed      	b.n	801bcf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 801bd1a:	9b01      	ldr	r3, [sp, #4]
 801bd1c:	00ff      	lsls	r7, r7, #3
 801bd1e:	19d9      	adds	r1, r3, r7
 801bd20:	f7ff fb2a 	bl	801b378 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801bd24:	9b03      	ldr	r3, [sp, #12]
 801bd26:	cb03      	ldmia	r3!, {r0, r1}
 801bd28:	445f      	add	r7, fp
 801bd2a:	445d      	add	r5, fp
 801bd2c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801bd30:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 801bd34:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801bd38:	9b03      	ldr	r3, [sp, #12]
 801bd3a:	6869      	ldr	r1, [r5, #4]
 801bd3c:	c303      	stmia	r3!, {r0, r1}
 801bd3e:	e7e4      	b.n	801bd0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0801bd40 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801bd40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd44:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 801bd48:	b0a1      	sub	sp, #132	@ 0x84
 801bd4a:	4604      	mov	r4, r0
 801bd4c:	4630      	mov	r0, r6
 801bd4e:	f7f9 fb9e 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801bd52:	4605      	mov	r5, r0
 801bd54:	b948      	cbnz	r0, 801bd6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801bd56:	6823      	ldr	r3, [r4, #0]
 801bd58:	e896 0006 	ldmia.w	r6, {r1, r2}
 801bd5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801bd5e:	4620      	mov	r0, r4
 801bd60:	4798      	blx	r3
 801bd62:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 801bd66:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 801bd6a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801bd6e:	2b00      	cmp	r3, #0
 801bd70:	d149      	bne.n	801be06 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 801bd72:	4bb1      	ldr	r3, [pc, #708]	@ (801c038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 801bd74:	681b      	ldr	r3, [r3, #0]
 801bd76:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 801bd7a:	1ebb      	subs	r3, r7, #2
 801bd7c:	425f      	negs	r7, r3
 801bd7e:	415f      	adcs	r7, r3
 801bd80:	4bae      	ldr	r3, [pc, #696]	@ (801c03c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 801bd82:	681b      	ldr	r3, [r3, #0]
 801bd84:	2b00      	cmp	r3, #0
 801bd86:	d040      	beq.n	801be0a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801bd88:	4dad      	ldr	r5, [pc, #692]	@ (801c040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801bd8a:	4628      	mov	r0, r5
 801bd8c:	f7f9 fb7f 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801bd90:	4606      	mov	r6, r0
 801bd92:	2800      	cmp	r0, #0
 801bd94:	d139      	bne.n	801be0a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801bd96:	4628      	mov	r0, r5
 801bd98:	f7ff f966 	bl	801b068 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801bd9c:	6823      	ldr	r3, [r4, #0]
 801bd9e:	6829      	ldr	r1, [r5, #0]
 801bda0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801bda2:	686a      	ldr	r2, [r5, #4]
 801bda4:	4620      	mov	r0, r4
 801bda6:	4798      	blx	r3
 801bda8:	802e      	strh	r6, [r5, #0]
 801bdaa:	806e      	strh	r6, [r5, #2]
 801bdac:	80ae      	strh	r6, [r5, #4]
 801bdae:	80ee      	strh	r6, [r5, #6]
 801bdb0:	af0f      	add	r7, sp, #60	@ 0x3c
 801bdb2:	4ea4      	ldr	r6, [pc, #656]	@ (801c044 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 801bdb4:	4638      	mov	r0, r7
 801bdb6:	f7ff fbd9 	bl	801b56c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801bdba:	8835      	ldrh	r5, [r6, #0]
 801bdbc:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 801bdc0:	462b      	mov	r3, r5
 801bdc2:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801bdc6:	4563      	cmp	r3, ip
 801bdc8:	d224      	bcs.n	801be14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801bdca:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 801bdce:	2907      	cmp	r1, #7
 801bdd0:	d816      	bhi.n	801be00 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801bdd2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801bdd6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801bdda:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801bdde:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 801bde2:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 801bde6:	1c4a      	adds	r2, r1, #1
 801bde8:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 801bdec:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 801bdf0:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 801bdf4:	f8a2 a002 	strh.w	sl, [r2, #2]
 801bdf8:	f8a2 8004 	strh.w	r8, [r2, #4]
 801bdfc:	f8a2 e006 	strh.w	lr, [r2, #6]
 801be00:	3301      	adds	r3, #1
 801be02:	b29b      	uxth	r3, r3
 801be04:	e7df      	b.n	801bdc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 801be06:	2701      	movs	r7, #1
 801be08:	e7ba      	b.n	801bd80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 801be0a:	2f00      	cmp	r7, #0
 801be0c:	d1d0      	bne.n	801bdb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 801be0e:	b021      	add	sp, #132	@ 0x84
 801be10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be14:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 801be18:	42ab      	cmp	r3, r5
 801be1a:	d90c      	bls.n	801be36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 801be1c:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801be20:	6822      	ldr	r2, [r4, #0]
 801be22:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 801be26:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 801be28:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 801be2c:	4620      	mov	r0, r4
 801be2e:	3501      	adds	r5, #1
 801be30:	47b8      	blx	r7
 801be32:	b2ad      	uxth	r5, r5
 801be34:	e7ee      	b.n	801be14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 801be36:	4d80      	ldr	r5, [pc, #512]	@ (801c038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 801be38:	6828      	ldr	r0, [r5, #0]
 801be3a:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801be3e:	2b01      	cmp	r3, #1
 801be40:	f040 813b 	bne.w	801c0ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 801be44:	4a80      	ldr	r2, [pc, #512]	@ (801c048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 801be46:	8833      	ldrh	r3, [r6, #0]
 801be48:	7812      	ldrb	r2, [r2, #0]
 801be4a:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801be4e:	2a01      	cmp	r2, #1
 801be50:	d014      	beq.n	801be7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801be52:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 801be56:	32ae      	adds	r2, #174	@ 0xae
 801be58:	f04f 0900 	mov.w	r9, #0
 801be5c:	4283      	cmp	r3, r0
 801be5e:	f102 0208 	add.w	r2, r2, #8
 801be62:	f280 8082 	bge.w	801bf6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 801be66:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 801be6a:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 801be6e:	4439      	add	r1, r7
 801be70:	b209      	sxth	r1, r1
 801be72:	4589      	cmp	r9, r1
 801be74:	bfb8      	it	lt
 801be76:	4689      	movlt	r9, r1
 801be78:	3301      	adds	r3, #1
 801be7a:	e7ef      	b.n	801be5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 801be7c:	4f73      	ldr	r7, [pc, #460]	@ (801c04c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 801be7e:	883a      	ldrh	r2, [r7, #0]
 801be80:	4693      	mov	fp, r2
 801be82:	4283      	cmp	r3, r0
 801be84:	da08      	bge.n	801be98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 801be86:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 801be8a:	3301      	adds	r3, #1
 801be8c:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 801be90:	458b      	cmp	fp, r1
 801be92:	bfa8      	it	ge
 801be94:	468b      	movge	fp, r1
 801be96:	e7f4      	b.n	801be82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 801be98:	2300      	movs	r3, #0
 801be9a:	2a0f      	cmp	r2, #15
 801be9c:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 801c050 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 801bea0:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801bea4:	bf8c      	ite	hi
 801bea6:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 801beaa:	f04f 0801 	movls.w	r8, #1
 801beae:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801beb2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801beb6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801beba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801bebe:	6828      	ldr	r0, [r5, #0]
 801bec0:	455b      	cmp	r3, fp
 801bec2:	f340 80c7 	ble.w	801c054 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801bec6:	6803      	ldr	r3, [r0, #0]
 801bec8:	f8b7 a000 	ldrh.w	sl, [r7]
 801becc:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801bed0:	4798      	blx	r3
 801bed2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801bed6:	682b      	ldr	r3, [r5, #0]
 801bed8:	ebaa 0000 	sub.w	r0, sl, r0
 801bedc:	b280      	uxth	r0, r0
 801bede:	ebac 0e08 	sub.w	lr, ip, r8
 801bee2:	4570      	cmp	r0, lr
 801bee4:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 801bee8:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 801beec:	dd05      	ble.n	801befa <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801beee:	4558      	cmp	r0, fp
 801bef0:	dd03      	ble.n	801befa <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801bef2:	b901      	cbnz	r1, 801bef6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801bef4:	b392      	cbz	r2, 801bf5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 801bef6:	4658      	mov	r0, fp
 801bef8:	e006      	b.n	801bf08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801befa:	2900      	cmp	r1, #0
 801befc:	d1fb      	bne.n	801bef6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801befe:	2a00      	cmp	r2, #0
 801bf00:	d1f9      	bne.n	801bef6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801bf02:	4558      	cmp	r0, fp
 801bf04:	bfb8      	it	lt
 801bf06:	4658      	movlt	r0, fp
 801bf08:	f9b9 3000 	ldrsh.w	r3, [r9]
 801bf0c:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 801bf10:	2200      	movs	r2, #0
 801bf12:	ebac 0000 	sub.w	r0, ip, r0
 801bf16:	f8b6 a000 	ldrh.w	sl, [r6]
 801bf1a:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801bf1e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801bf22:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801bf26:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801bf2a:	4553      	cmp	r3, sl
 801bf2c:	ddc5      	ble.n	801beba <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801bf2e:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801bf32:	ab0d      	add	r3, sp, #52	@ 0x34
 801bf34:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801bf38:	6851      	ldr	r1, [r2, #4]
 801bf3a:	c303      	stmia	r3!, {r0, r1}
 801bf3c:	a80d      	add	r0, sp, #52	@ 0x34
 801bf3e:	a90b      	add	r1, sp, #44	@ 0x2c
 801bf40:	f7f9 fa62 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801bf44:	a80d      	add	r0, sp, #52	@ 0x34
 801bf46:	f7f9 faa2 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801bf4a:	b920      	cbnz	r0, 801bf56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 801bf4c:	6823      	ldr	r3, [r4, #0]
 801bf4e:	a90d      	add	r1, sp, #52	@ 0x34
 801bf50:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801bf52:	4620      	mov	r0, r4
 801bf54:	4798      	blx	r3
 801bf56:	f10a 0a01 	add.w	sl, sl, #1
 801bf5a:	e7e4      	b.n	801bf26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 801bf5c:	681a      	ldr	r2, [r3, #0]
 801bf5e:	2101      	movs	r1, #1
 801bf60:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 801bf64:	4618      	mov	r0, r3
 801bf66:	4790      	blx	r2
 801bf68:	e7a7      	b.n	801beba <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801bf6a:	4b39      	ldr	r3, [pc, #228]	@ (801c050 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 801bf6c:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 801c04c <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 801bf70:	881f      	ldrh	r7, [r3, #0]
 801bf72:	2300      	movs	r3, #0
 801bf74:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 801bf78:	2f0f      	cmp	r7, #15
 801bf7a:	bf8c      	ite	hi
 801bf7c:	08ff      	lsrhi	r7, r7, #3
 801bf7e:	2701      	movls	r7, #1
 801bf80:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801bf84:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 801bf88:	6828      	ldr	r0, [r5, #0]
 801bf8a:	4413      	add	r3, r2
 801bf8c:	b21b      	sxth	r3, r3
 801bf8e:	454b      	cmp	r3, r9
 801bf90:	da60      	bge.n	801c054 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801bf92:	6803      	ldr	r3, [r0, #0]
 801bf94:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801bf98:	4798      	blx	r3
 801bf9a:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 801bf9e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801bfa2:	682a      	ldr	r2, [r5, #0]
 801bfa4:	4473      	add	r3, lr
 801bfa6:	b21b      	sxth	r3, r3
 801bfa8:	eb03 0e07 	add.w	lr, r3, r7
 801bfac:	4570      	cmp	r0, lr
 801bfae:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 801bfb2:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 801bfb6:	da0d      	bge.n	801bfd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801bfb8:	4548      	cmp	r0, r9
 801bfba:	da0b      	bge.n	801bfd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 801bfbc:	f1bc 0f00 	cmp.w	ip, #0
 801bfc0:	d138      	bne.n	801c034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801bfc2:	2900      	cmp	r1, #0
 801bfc4:	d136      	bne.n	801c034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801bfc6:	6813      	ldr	r3, [r2, #0]
 801bfc8:	2101      	movs	r1, #1
 801bfca:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 801bfce:	4610      	mov	r0, r2
 801bfd0:	4798      	blx	r3
 801bfd2:	e7d5      	b.n	801bf80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801bfd4:	f1bc 0f00 	cmp.w	ip, #0
 801bfd8:	d12c      	bne.n	801c034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801bfda:	bb59      	cbnz	r1, 801c034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801bfdc:	4548      	cmp	r0, r9
 801bfde:	bfa8      	it	ge
 801bfe0:	4648      	movge	r0, r9
 801bfe2:	f9b8 2000 	ldrsh.w	r2, [r8]
 801bfe6:	f8b6 a000 	ldrh.w	sl, [r6]
 801bfea:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801bfee:	2100      	movs	r1, #0
 801bff0:	1ac0      	subs	r0, r0, r3
 801bff2:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801bff6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801bffa:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 801bffe:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801c002:	4553      	cmp	r3, sl
 801c004:	ddbc      	ble.n	801bf80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801c006:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801c00a:	ab0d      	add	r3, sp, #52	@ 0x34
 801c00c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801c010:	6851      	ldr	r1, [r2, #4]
 801c012:	c303      	stmia	r3!, {r0, r1}
 801c014:	a80d      	add	r0, sp, #52	@ 0x34
 801c016:	a90b      	add	r1, sp, #44	@ 0x2c
 801c018:	f7f9 f9f6 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801c01c:	a80d      	add	r0, sp, #52	@ 0x34
 801c01e:	f7f9 fa36 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801c022:	b920      	cbnz	r0, 801c02e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 801c024:	6823      	ldr	r3, [r4, #0]
 801c026:	a90d      	add	r1, sp, #52	@ 0x34
 801c028:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801c02a:	4620      	mov	r0, r4
 801c02c:	4798      	blx	r3
 801c02e:	f10a 0a01 	add.w	sl, sl, #1
 801c032:	e7e4      	b.n	801bffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 801c034:	4648      	mov	r0, r9
 801c036:	e7d4      	b.n	801bfe2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 801c038:	200138e4 	.word	0x200138e4
 801c03c:	20013924 	.word	0x20013924
 801c040:	20013930 	.word	0x20013930
 801c044:	20000090 	.word	0x20000090
 801c048:	200138dc 	.word	0x200138dc
 801c04c:	200138d8 	.word	0x200138d8
 801c050:	200138da 	.word	0x200138da
 801c054:	6828      	ldr	r0, [r5, #0]
 801c056:	6803      	ldr	r3, [r0, #0]
 801c058:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801c05a:	4798      	blx	r3
 801c05c:	4ba5      	ldr	r3, [pc, #660]	@ (801c2f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 801c05e:	781b      	ldrb	r3, [r3, #0]
 801c060:	2b00      	cmp	r3, #0
 801c062:	f43f aed4 	beq.w	801be0e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801c066:	2300      	movs	r3, #0
 801c068:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801c06c:	4ba2      	ldr	r3, [pc, #648]	@ (801c2f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 801c06e:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 801c072:	881b      	ldrh	r3, [r3, #0]
 801c074:	a80f      	add	r0, sp, #60	@ 0x3c
 801c076:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 801c07a:	42b3      	cmp	r3, r6
 801c07c:	f4bf aec7 	bcs.w	801be0e <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801c080:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 801c084:	2907      	cmp	r1, #7
 801c086:	d815      	bhi.n	801c0b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 801c088:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801c08c:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801c090:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801c094:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801c098:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 801c09c:	1c4a      	adds	r2, r1, #1
 801c09e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 801c0a2:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 801c0a6:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 801c0aa:	f8a2 e002 	strh.w	lr, [r2, #2]
 801c0ae:	f8a2 c004 	strh.w	ip, [r2, #4]
 801c0b2:	80d7      	strh	r7, [r2, #6]
 801c0b4:	3301      	adds	r3, #1
 801c0b6:	b29b      	uxth	r3, r3
 801c0b8:	e7df      	b.n	801c07a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801c0ba:	2b02      	cmp	r3, #2
 801c0bc:	f040 80d1 	bne.w	801c262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801c0c0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801c0c4:	9308      	str	r3, [sp, #32]
 801c0c6:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 801c0ca:	9307      	str	r3, [sp, #28]
 801c0cc:	6803      	ldr	r3, [r0, #0]
 801c0ce:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 801c0d2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801c0d6:	4798      	blx	r3
 801c0d8:	4b88      	ldr	r3, [pc, #544]	@ (801c2fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 801c0da:	881b      	ldrh	r3, [r3, #0]
 801c0dc:	9302      	str	r3, [sp, #8]
 801c0de:	4b88      	ldr	r3, [pc, #544]	@ (801c300 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 801c0e0:	881e      	ldrh	r6, [r3, #0]
 801c0e2:	4b88      	ldr	r3, [pc, #544]	@ (801c304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801c0e4:	781b      	ldrb	r3, [r3, #0]
 801c0e6:	f10b 37ff 	add.w	r7, fp, #4294967295
 801c0ea:	2b01      	cmp	r3, #1
 801c0ec:	bf1c      	itt	ne
 801c0ee:	9b02      	ldrne	r3, [sp, #8]
 801c0f0:	9602      	strne	r6, [sp, #8]
 801c0f2:	b2bf      	uxth	r7, r7
 801c0f4:	fa0f f887 	sxth.w	r8, r7
 801c0f8:	4682      	mov	sl, r0
 801c0fa:	f04f 0000 	mov.w	r0, #0
 801c0fe:	bf18      	it	ne
 801c100:	461e      	movne	r6, r3
 801c102:	f7e4 feaf 	bl	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801c106:	fb96 fbfb 	sdiv	fp, r6, fp
 801c10a:	fb0b f808 	mul.w	r8, fp, r8
 801c10e:	45c2      	cmp	sl, r8
 801c110:	da0c      	bge.n	801c12c <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 801c112:	6828      	ldr	r0, [r5, #0]
 801c114:	6803      	ldr	r3, [r0, #0]
 801c116:	210a      	movs	r1, #10
 801c118:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801c11c:	4798      	blx	r3
 801c11e:	6828      	ldr	r0, [r5, #0]
 801c120:	6803      	ldr	r3, [r0, #0]
 801c122:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801c126:	4798      	blx	r3
 801c128:	4682      	mov	sl, r0
 801c12a:	e7f0      	b.n	801c10e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 801c12c:	2000      	movs	r0, #0
 801c12e:	f7e4 fec3 	bl	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801c132:	fa1f f38b 	uxth.w	r3, fp
 801c136:	fb17 f703 	smulbb	r7, r7, r3
 801c13a:	9304      	str	r3, [sp, #16]
 801c13c:	b2bb      	uxth	r3, r7
 801c13e:	9305      	str	r3, [sp, #20]
 801c140:	f04f 0800 	mov.w	r8, #0
 801c144:	0973      	lsrs	r3, r6, #5
 801c146:	4f70      	ldr	r7, [pc, #448]	@ (801c308 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 801c148:	9306      	str	r3, [sp, #24]
 801c14a:	4645      	mov	r5, r8
 801c14c:	42b5      	cmp	r5, r6
 801c14e:	d085      	beq.n	801c05c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801c150:	6838      	ldr	r0, [r7, #0]
 801c152:	6803      	ldr	r3, [r0, #0]
 801c154:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801c158:	4798      	blx	r3
 801c15a:	4582      	cmp	sl, r0
 801c15c:	4681      	mov	r9, r0
 801c15e:	d907      	bls.n	801c170 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 801c160:	f1b8 0f00 	cmp.w	r8, #0
 801c164:	d007      	beq.n	801c176 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 801c166:	6838      	ldr	r0, [r7, #0]
 801c168:	6803      	ldr	r3, [r0, #0]
 801c16a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 801c16e:	e774      	b.n	801c05a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 801c170:	f1b8 0f00 	cmp.w	r8, #0
 801c174:	d003      	beq.n	801c17e <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 801c176:	454d      	cmp	r5, r9
 801c178:	d3f5      	bcc.n	801c166 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 801c17a:	f04f 0801 	mov.w	r8, #1
 801c17e:	9a04      	ldr	r2, [sp, #16]
 801c180:	fb95 f3fb 	sdiv	r3, r5, fp
 801c184:	9303      	str	r3, [sp, #12]
 801c186:	3301      	adds	r3, #1
 801c188:	fb13 f302 	smulbb	r3, r3, r2
 801c18c:	b299      	uxth	r1, r3
 801c18e:	f1b8 0f00 	cmp.w	r8, #0
 801c192:	d04e      	beq.n	801c232 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 801c194:	eb09 030b 	add.w	r3, r9, fp
 801c198:	42b3      	cmp	r3, r6
 801c19a:	bfa8      	it	ge
 801c19c:	4633      	movge	r3, r6
 801c19e:	9807      	ldr	r0, [sp, #28]
 801c1a0:	b29b      	uxth	r3, r3
 801c1a2:	428b      	cmp	r3, r1
 801c1a4:	bf94      	ite	ls
 801c1a6:	ebc5 0203 	rsbls	r2, r5, r3
 801c1aa:	ebc5 0201 	rsbhi	r2, r5, r1
 801c1ae:	4282      	cmp	r2, r0
 801c1b0:	bfa8      	it	ge
 801c1b2:	4602      	movge	r2, r0
 801c1b4:	9808      	ldr	r0, [sp, #32]
 801c1b6:	fa1f fa82 	uxth.w	sl, r2
 801c1ba:	4582      	cmp	sl, r0
 801c1bc:	d205      	bcs.n	801c1ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801c1be:	fa15 f082 	uxtah	r0, r5, r2
 801c1c2:	4286      	cmp	r6, r0
 801c1c4:	d001      	beq.n	801c1ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801c1c6:	4299      	cmp	r1, r3
 801c1c8:	d240      	bcs.n	801c24c <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 801c1ca:	2001      	movs	r0, #1
 801c1cc:	9209      	str	r2, [sp, #36]	@ 0x24
 801c1ce:	f7e4 fe49 	bl	8000e64 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801c1d2:	6838      	ldr	r0, [r7, #0]
 801c1d4:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 801c1d8:	6803      	ldr	r3, [r0, #0]
 801c1da:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801c1de:	4798      	blx	r3
 801c1e0:	4b48      	ldr	r3, [pc, #288]	@ (801c304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801c1e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c1e4:	781b      	ldrb	r3, [r3, #0]
 801c1e6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c1ea:	2b01      	cmp	r3, #1
 801c1ec:	b212      	sxth	r2, r2
 801c1ee:	f04f 0000 	mov.w	r0, #0
 801c1f2:	d122      	bne.n	801c23a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 801c1f4:	1b73      	subs	r3, r6, r5
 801c1f6:	eba3 030a 	sub.w	r3, r3, sl
 801c1fa:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801c1fe:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 801c202:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801c206:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 801c20a:	6823      	ldr	r3, [r4, #0]
 801c20c:	a90d      	add	r1, sp, #52	@ 0x34
 801c20e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801c210:	4620      	mov	r0, r4
 801c212:	4798      	blx	r3
 801c214:	6838      	ldr	r0, [r7, #0]
 801c216:	9b03      	ldr	r3, [sp, #12]
 801c218:	4259      	negs	r1, r3
 801c21a:	6803      	ldr	r3, [r0, #0]
 801c21c:	b209      	sxth	r1, r1
 801c21e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801c222:	4798      	blx	r3
 801c224:	4455      	add	r5, sl
 801c226:	2001      	movs	r0, #1
 801c228:	b2ad      	uxth	r5, r5
 801c22a:	f7e4 fe45 	bl	8000eb8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801c22e:	46ca      	mov	sl, r9
 801c230:	e78c      	b.n	801c14c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 801c232:	9b05      	ldr	r3, [sp, #20]
 801c234:	eba9 0303 	sub.w	r3, r9, r3
 801c238:	e7b1      	b.n	801c19e <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801c23a:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 801c23e:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 801c242:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 801c246:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801c24a:	e7de      	b.n	801c20a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 801c24c:	6838      	ldr	r0, [r7, #0]
 801c24e:	6803      	ldr	r3, [r0, #0]
 801c250:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c252:	4798      	blx	r3
 801c254:	6838      	ldr	r0, [r7, #0]
 801c256:	9906      	ldr	r1, [sp, #24]
 801c258:	6803      	ldr	r3, [r0, #0]
 801c25a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 801c25e:	4798      	blx	r3
 801c260:	e7e5      	b.n	801c22e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 801c262:	2b03      	cmp	r3, #3
 801c264:	f040 8130 	bne.w	801c4c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 801c268:	4b26      	ldr	r3, [pc, #152]	@ (801c304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801c26a:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 801c26e:	781b      	ldrb	r3, [r3, #0]
 801c270:	2b01      	cmp	r3, #1
 801c272:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801c276:	f000 8093 	beq.w	801c3a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801c27a:	8832      	ldrh	r2, [r6, #0]
 801c27c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 801c280:	3201      	adds	r2, #1
 801c282:	b292      	uxth	r2, r2
 801c284:	2900      	cmp	r1, #0
 801c286:	f43f aee9 	beq.w	801c05c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801c28a:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801c28e:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 801c292:	441d      	add	r5, r3
 801c294:	b22d      	sxth	r5, r5
 801c296:	4694      	mov	ip, r2
 801c298:	f04f 0800 	mov.w	r8, #0
 801c29c:	fa1f f38c 	uxth.w	r3, ip
 801c2a0:	4299      	cmp	r1, r3
 801c2a2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801c2a6:	f240 80ba 	bls.w	801c41e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 801c2aa:	4427      	add	r7, r4
 801c2ac:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801c2b0:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 801c2b4:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 801c2b8:	4283      	cmp	r3, r0
 801c2ba:	f340 809c 	ble.w	801c3f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 801c2be:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 801c2c2:	4405      	add	r5, r0
 801c2c4:	b22d      	sxth	r5, r5
 801c2c6:	429d      	cmp	r5, r3
 801c2c8:	bfa8      	it	ge
 801c2ca:	461d      	movge	r5, r3
 801c2cc:	46e0      	mov	r8, ip
 801c2ce:	f10c 0c01 	add.w	ip, ip, #1
 801c2d2:	e7e3      	b.n	801c29c <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 801c2d4:	d10a      	bne.n	801c2ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801c2d6:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 801c2da:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 801c2de:	4562      	cmp	r2, ip
 801c2e0:	bfb8      	it	lt
 801c2e2:	4662      	movlt	r2, ip
 801c2e4:	4288      	cmp	r0, r1
 801c2e6:	bfb8      	it	lt
 801c2e8:	4698      	movlt	r8, r3
 801c2ea:	e082      	b.n	801c3f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 801c2ec:	428a      	cmp	r2, r1
 801c2ee:	bfb8      	it	lt
 801c2f0:	460a      	movlt	r2, r1
 801c2f2:	e07e      	b.n	801c3f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 801c2f4:	200138e2 	.word	0x200138e2
 801c2f8:	20000090 	.word	0x20000090
 801c2fc:	200138da 	.word	0x200138da
 801c300:	200138d8 	.word	0x200138d8
 801c304:	200138dc 	.word	0x200138dc
 801c308:	200138e4 	.word	0x200138e4
 801c30c:	19e1      	adds	r1, r4, r7
 801c30e:	ab0d      	add	r3, sp, #52	@ 0x34
 801c310:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801c314:	6849      	ldr	r1, [r1, #4]
 801c316:	c303      	stmia	r3!, {r0, r1}
 801c318:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 801c31c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801c320:	454b      	cmp	r3, r9
 801c322:	bfb8      	it	lt
 801c324:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 801c328:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801c32c:	440b      	add	r3, r1
 801c32e:	1a9b      	subs	r3, r3, r2
 801c330:	a80d      	add	r0, sp, #52	@ 0x34
 801c332:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801c336:	f7fe feb1 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c33a:	a80d      	add	r0, sp, #52	@ 0x34
 801c33c:	f7f9 f8a7 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801c340:	bb70      	cbnz	r0, 801c3a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801c342:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 801c346:	6828      	ldr	r0, [r5, #0]
 801c348:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801c34c:	f8d0 e000 	ldr.w	lr, [r0]
 801c350:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 801c354:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801c358:	45cc      	cmp	ip, r9
 801c35a:	bfd4      	ite	le
 801c35c:	fa1f fc8c 	uxthle.w	ip, ip
 801c360:	fa1f fc89 	uxthgt.w	ip, r9
 801c364:	f8cd c000 	str.w	ip, [sp]
 801c368:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 801c36c:	47d8      	blx	fp
 801c36e:	4683      	mov	fp, r0
 801c370:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801c374:	a80d      	add	r0, sp, #52	@ 0x34
 801c376:	f7fe fe77 	bl	801b068 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801c37a:	6823      	ldr	r3, [r4, #0]
 801c37c:	4427      	add	r7, r4
 801c37e:	4620      	mov	r0, r4
 801c380:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801c382:	a90d      	add	r1, sp, #52	@ 0x34
 801c384:	4798      	blx	r3
 801c386:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 801c38a:	eba0 000b 	sub.w	r0, r0, fp
 801c38e:	b200      	sxth	r0, r0
 801c390:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 801c394:	b920      	cbnz	r0, 801c3a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801c396:	fa1f f188 	uxth.w	r1, r8
 801c39a:	4650      	mov	r0, sl
 801c39c:	f7ff f93e 	bl	801b61c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801c3a0:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801c3a4:	f1bb 0f00 	cmp.w	fp, #0
 801c3a8:	f43f ae58 	beq.w	801c05c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801c3ac:	8833      	ldrh	r3, [r6, #0]
 801c3ae:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801c3b2:	3301      	adds	r3, #1
 801c3b4:	b29b      	uxth	r3, r3
 801c3b6:	f04f 0800 	mov.w	r8, #0
 801c3ba:	b299      	uxth	r1, r3
 801c3bc:	458b      	cmp	fp, r1
 801c3be:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801c3c2:	d9a3      	bls.n	801c30c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 801c3c4:	4427      	add	r7, r4
 801c3c6:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801c3ca:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 801c3ce:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 801c3d2:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801c3d6:	4408      	add	r0, r1
 801c3d8:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 801c3dc:	4461      	add	r1, ip
 801c3de:	b200      	sxth	r0, r0
 801c3e0:	b209      	sxth	r1, r1
 801c3e2:	4288      	cmp	r0, r1
 801c3e4:	f6bf af76 	bge.w	801c2d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 801c3e8:	4584      	cmp	ip, r0
 801c3ea:	4662      	mov	r2, ip
 801c3ec:	4698      	mov	r8, r3
 801c3ee:	bfb8      	it	lt
 801c3f0:	4602      	movlt	r2, r0
 801c3f2:	3301      	adds	r3, #1
 801c3f4:	e7e1      	b.n	801c3ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 801c3f6:	d10e      	bne.n	801c416 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 801c3f8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 801c3fc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 801c400:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801c404:	4473      	add	r3, lr
 801c406:	b21b      	sxth	r3, r3
 801c408:	429d      	cmp	r5, r3
 801c40a:	bfa8      	it	ge
 801c40c:	461d      	movge	r5, r3
 801c40e:	4287      	cmp	r7, r0
 801c410:	bfb8      	it	lt
 801c412:	46e0      	movlt	r8, ip
 801c414:	e75b      	b.n	801c2ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801c416:	4285      	cmp	r5, r0
 801c418:	bfa8      	it	ge
 801c41a:	4605      	movge	r5, r0
 801c41c:	e757      	b.n	801c2ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801c41e:	eb0a 0007 	add.w	r0, sl, r7
 801c422:	4427      	add	r7, r4
 801c424:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801c428:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 801c42c:	45cb      	cmp	fp, r9
 801c42e:	bfbe      	ittt	lt
 801c430:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 801c434:	445d      	addlt	r5, fp
 801c436:	b22d      	sxthlt	r5, r5
 801c438:	f7f9 f829 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801c43c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801c440:	2800      	cmp	r0, #0
 801c442:	f47f af1f 	bne.w	801c284 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 801c446:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 801c44a:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801c44e:	482b      	ldr	r0, [pc, #172]	@ (801c4fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 801c450:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801c454:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 801c458:	6800      	ldr	r0, [r0, #0]
 801c45a:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 801c45e:	1aad      	subs	r5, r5, r2
 801c460:	454d      	cmp	r5, r9
 801c462:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801c466:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801c46a:	bfa8      	it	ge
 801c46c:	464d      	movge	r5, r9
 801c46e:	f8d0 c000 	ldr.w	ip, [r0]
 801c472:	b2ad      	uxth	r5, r5
 801c474:	fa1f fb8b 	uxth.w	fp, fp
 801c478:	455d      	cmp	r5, fp
 801c47a:	bf94      	ite	ls
 801c47c:	9500      	strls	r5, [sp, #0]
 801c47e:	f8cd b000 	strhi.w	fp, [sp]
 801c482:	b292      	uxth	r2, r2
 801c484:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 801c488:	b29b      	uxth	r3, r3
 801c48a:	b289      	uxth	r1, r1
 801c48c:	47a8      	blx	r5
 801c48e:	6823      	ldr	r3, [r4, #0]
 801c490:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801c494:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801c496:	a90d      	add	r1, sp, #52	@ 0x34
 801c498:	4620      	mov	r0, r4
 801c49a:	4798      	blx	r3
 801c49c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 801c4a0:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801c4a4:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801c4a8:	1a5b      	subs	r3, r3, r1
 801c4aa:	440a      	add	r2, r1
 801c4ac:	b21b      	sxth	r3, r3
 801c4ae:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801c4b2:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801c4b6:	2b00      	cmp	r3, #0
 801c4b8:	f47f aedf 	bne.w	801c27a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801c4bc:	fa1f f188 	uxth.w	r1, r8
 801c4c0:	4650      	mov	r0, sl
 801c4c2:	f7ff f8ab 	bl	801b61c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801c4c6:	e6d8      	b.n	801c27a <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801c4c8:	8835      	ldrh	r5, [r6, #0]
 801c4ca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801c4ce:	42ab      	cmp	r3, r5
 801c4d0:	f67f adc4 	bls.w	801c05c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801c4d4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801c4d8:	ab0d      	add	r3, sp, #52	@ 0x34
 801c4da:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801c4de:	6851      	ldr	r1, [r2, #4]
 801c4e0:	c303      	stmia	r3!, {r0, r1}
 801c4e2:	a80d      	add	r0, sp, #52	@ 0x34
 801c4e4:	f7f8 ffd3 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 801c4e8:	b920      	cbnz	r0, 801c4f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 801c4ea:	6823      	ldr	r3, [r4, #0]
 801c4ec:	a90d      	add	r1, sp, #52	@ 0x34
 801c4ee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801c4f0:	4620      	mov	r0, r4
 801c4f2:	4798      	blx	r3
 801c4f4:	3501      	adds	r5, #1
 801c4f6:	b2ad      	uxth	r5, r5
 801c4f8:	e7e7      	b.n	801c4ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 801c4fa:	bf00      	nop
 801c4fc:	200138e4 	.word	0x200138e4

0801c500 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801c500:	4b03      	ldr	r3, [pc, #12]	@ (801c510 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801c502:	2200      	movs	r2, #0
 801c504:	801a      	strh	r2, [r3, #0]
 801c506:	805a      	strh	r2, [r3, #2]
 801c508:	809a      	strh	r2, [r3, #4]
 801c50a:	80da      	strh	r2, [r3, #6]
 801c50c:	4770      	bx	lr
 801c50e:	bf00      	nop
 801c510:	20013930 	.word	0x20013930

0801c514 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801c514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c518:	4606      	mov	r6, r0
 801c51a:	b09d      	sub	sp, #116	@ 0x74
 801c51c:	a803      	add	r0, sp, #12
 801c51e:	4614      	mov	r4, r2
 801c520:	468a      	mov	sl, r1
 801c522:	461d      	mov	r5, r3
 801c524:	f001 f946 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801c528:	6833      	ldr	r3, [r6, #0]
 801c52a:	4630      	mov	r0, r6
 801c52c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801c52e:	4798      	blx	r3
 801c530:	6833      	ldr	r3, [r6, #0]
 801c532:	4607      	mov	r7, r0
 801c534:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801c536:	4630      	mov	r0, r6
 801c538:	4798      	blx	r3
 801c53a:	462a      	mov	r2, r5
 801c53c:	9000      	str	r0, [sp, #0]
 801c53e:	4621      	mov	r1, r4
 801c540:	463b      	mov	r3, r7
 801c542:	a803      	add	r0, sp, #12
 801c544:	f001 f991 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801c548:	2500      	movs	r5, #0
 801c54a:	462c      	mov	r4, r5
 801c54c:	46a9      	mov	r9, r5
 801c54e:	46a8      	mov	r8, r5
 801c550:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801c554:	2300      	movs	r3, #0
 801c556:	9302      	str	r3, [sp, #8]
 801c558:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801c55c:	429c      	cmp	r4, r3
 801c55e:	d002      	beq.n	801c566 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801c560:	455c      	cmp	r4, fp
 801c562:	bf18      	it	ne
 801c564:	4625      	movne	r5, r4
 801c566:	ab02      	add	r3, sp, #8
 801c568:	4632      	mov	r2, r6
 801c56a:	4651      	mov	r1, sl
 801c56c:	a803      	add	r0, sp, #12
 801c56e:	f001 fca9 	bl	801dec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c572:	4604      	mov	r4, r0
 801c574:	b108      	cbz	r0, 801c57a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801c576:	280a      	cmp	r0, #10
 801c578:	d10a      	bne.n	801c590 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801c57a:	45c1      	cmp	r9, r8
 801c57c:	bf38      	it	cc
 801c57e:	46c1      	movcc	r9, r8
 801c580:	f04f 0800 	mov.w	r8, #0
 801c584:	2c00      	cmp	r4, #0
 801c586:	d1e5      	bne.n	801c554 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801c588:	4648      	mov	r0, r9
 801c58a:	b01d      	add	sp, #116	@ 0x74
 801c58c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c590:	9a02      	ldr	r2, [sp, #8]
 801c592:	2a00      	cmp	r2, #0
 801c594:	d0de      	beq.n	801c554 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801c596:	7b57      	ldrb	r7, [r2, #13]
 801c598:	6833      	ldr	r3, [r6, #0]
 801c59a:	8894      	ldrh	r4, [r2, #4]
 801c59c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801c59e:	007f      	lsls	r7, r7, #1
 801c5a0:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801c5a4:	7a97      	ldrb	r7, [r2, #10]
 801c5a6:	4629      	mov	r1, r5
 801c5a8:	4307      	orrs	r7, r0
 801c5aa:	4630      	mov	r0, r6
 801c5ac:	4798      	blx	r3
 801c5ae:	4438      	add	r0, r7
 801c5b0:	4480      	add	r8, r0
 801c5b2:	fa1f f888 	uxth.w	r8, r8
 801c5b6:	e7e5      	b.n	801c584 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801c5b8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801c5b8:	b508      	push	{r3, lr}
 801c5ba:	6803      	ldr	r3, [r0, #0]
 801c5bc:	68db      	ldr	r3, [r3, #12]
 801c5be:	4798      	blx	r3
 801c5c0:	b128      	cbz	r0, 801c5ce <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801c5c2:	7b43      	ldrb	r3, [r0, #13]
 801c5c4:	7a80      	ldrb	r0, [r0, #10]
 801c5c6:	005b      	lsls	r3, r3, #1
 801c5c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801c5cc:	4318      	orrs	r0, r3
 801c5ce:	bd08      	pop	{r3, pc}

0801c5d0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801c5d0:	b40e      	push	{r1, r2, r3}
 801c5d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c5d4:	b09e      	sub	sp, #120	@ 0x78
 801c5d6:	ab23      	add	r3, sp, #140	@ 0x8c
 801c5d8:	4605      	mov	r5, r0
 801c5da:	f853 4b04 	ldr.w	r4, [r3], #4
 801c5de:	9303      	str	r3, [sp, #12]
 801c5e0:	a805      	add	r0, sp, #20
 801c5e2:	f001 f8e7 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801c5e6:	682b      	ldr	r3, [r5, #0]
 801c5e8:	4628      	mov	r0, r5
 801c5ea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801c5ec:	4798      	blx	r3
 801c5ee:	682b      	ldr	r3, [r5, #0]
 801c5f0:	4606      	mov	r6, r0
 801c5f2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801c5f4:	4628      	mov	r0, r5
 801c5f6:	4798      	blx	r3
 801c5f8:	4633      	mov	r3, r6
 801c5fa:	ae1e      	add	r6, sp, #120	@ 0x78
 801c5fc:	4621      	mov	r1, r4
 801c5fe:	9000      	str	r0, [sp, #0]
 801c600:	9a03      	ldr	r2, [sp, #12]
 801c602:	2400      	movs	r4, #0
 801c604:	a805      	add	r0, sp, #20
 801c606:	f001 f930 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801c60a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801c60e:	462a      	mov	r2, r5
 801c610:	4633      	mov	r3, r6
 801c612:	4621      	mov	r1, r4
 801c614:	a805      	add	r0, sp, #20
 801c616:	f001 fc55 	bl	801dec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c61a:	b1f0      	cbz	r0, 801c65a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801c61c:	280a      	cmp	r0, #10
 801c61e:	d018      	beq.n	801c652 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801c620:	9f04      	ldr	r7, [sp, #16]
 801c622:	b1b7      	cbz	r7, 801c652 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801c624:	7b78      	ldrb	r0, [r7, #13]
 801c626:	7a3b      	ldrb	r3, [r7, #8]
 801c628:	88ea      	ldrh	r2, [r5, #6]
 801c62a:	00c1      	lsls	r1, r0, #3
 801c62c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801c630:	4319      	orrs	r1, r3
 801c632:	0643      	lsls	r3, r0, #25
 801c634:	bf44      	itt	mi
 801c636:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 801c63a:	b219      	sxthmi	r1, r3
 801c63c:	0100      	lsls	r0, r0, #4
 801c63e:	79fb      	ldrb	r3, [r7, #7]
 801c640:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801c644:	4303      	orrs	r3, r0
 801c646:	4413      	add	r3, r2
 801c648:	1a5b      	subs	r3, r3, r1
 801c64a:	b21b      	sxth	r3, r3
 801c64c:	429c      	cmp	r4, r3
 801c64e:	bfb8      	it	lt
 801c650:	461c      	movlt	r4, r3
 801c652:	4633      	mov	r3, r6
 801c654:	462a      	mov	r2, r5
 801c656:	2100      	movs	r1, #0
 801c658:	e7dc      	b.n	801c614 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801c65a:	b2a0      	uxth	r0, r4
 801c65c:	b01e      	add	sp, #120	@ 0x78
 801c65e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801c662:	b003      	add	sp, #12
 801c664:	4770      	bx	lr

0801c666 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801c666:	7a43      	ldrb	r3, [r0, #9]
 801c668:	8880      	ldrh	r0, [r0, #4]
 801c66a:	4418      	add	r0, r3
 801c66c:	b280      	uxth	r0, r0
 801c66e:	4770      	bx	lr

0801c670 <_ZNK8touchgfx4Font13getFontHeightEv>:
 801c670:	6803      	ldr	r3, [r0, #0]
 801c672:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c674:	4718      	bx	r3

0801c676 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801c676:	b40e      	push	{r1, r2, r3}
 801c678:	b570      	push	{r4, r5, r6, lr}
 801c67a:	b09d      	sub	sp, #116	@ 0x74
 801c67c:	ab21      	add	r3, sp, #132	@ 0x84
 801c67e:	4604      	mov	r4, r0
 801c680:	f853 5b04 	ldr.w	r5, [r3], #4
 801c684:	9302      	str	r3, [sp, #8]
 801c686:	a803      	add	r0, sp, #12
 801c688:	f001 f894 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801c68c:	6823      	ldr	r3, [r4, #0]
 801c68e:	4620      	mov	r0, r4
 801c690:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801c692:	4798      	blx	r3
 801c694:	6823      	ldr	r3, [r4, #0]
 801c696:	4606      	mov	r6, r0
 801c698:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801c69a:	4620      	mov	r0, r4
 801c69c:	4798      	blx	r3
 801c69e:	4633      	mov	r3, r6
 801c6a0:	9000      	str	r0, [sp, #0]
 801c6a2:	9a02      	ldr	r2, [sp, #8]
 801c6a4:	4629      	mov	r1, r5
 801c6a6:	a803      	add	r0, sp, #12
 801c6a8:	f001 f8df 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801c6ac:	a803      	add	r0, sp, #12
 801c6ae:	f001 fcd7 	bl	801e060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801c6b2:	2401      	movs	r4, #1
 801c6b4:	b2a3      	uxth	r3, r4
 801c6b6:	b140      	cbz	r0, 801c6ca <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801c6b8:	280a      	cmp	r0, #10
 801c6ba:	bf08      	it	eq
 801c6bc:	3301      	addeq	r3, #1
 801c6be:	a803      	add	r0, sp, #12
 801c6c0:	bf08      	it	eq
 801c6c2:	b21c      	sxtheq	r4, r3
 801c6c4:	f001 fccc 	bl	801e060 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801c6c8:	e7f4      	b.n	801c6b4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801c6ca:	4618      	mov	r0, r3
 801c6cc:	b01d      	add	sp, #116	@ 0x74
 801c6ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c6d2:	b003      	add	sp, #12
 801c6d4:	4770      	bx	lr

0801c6d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801c6d6:	b40e      	push	{r1, r2, r3}
 801c6d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c6da:	b09e      	sub	sp, #120	@ 0x78
 801c6dc:	ab23      	add	r3, sp, #140	@ 0x8c
 801c6de:	4604      	mov	r4, r0
 801c6e0:	f853 5b04 	ldr.w	r5, [r3], #4
 801c6e4:	9303      	str	r3, [sp, #12]
 801c6e6:	a805      	add	r0, sp, #20
 801c6e8:	f001 f864 	bl	801d7b4 <_ZN8touchgfx12TextProviderC1Ev>
 801c6ec:	6823      	ldr	r3, [r4, #0]
 801c6ee:	4620      	mov	r0, r4
 801c6f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801c6f2:	4798      	blx	r3
 801c6f4:	6823      	ldr	r3, [r4, #0]
 801c6f6:	4606      	mov	r6, r0
 801c6f8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801c6fa:	4620      	mov	r0, r4
 801c6fc:	4798      	blx	r3
 801c6fe:	4633      	mov	r3, r6
 801c700:	4629      	mov	r1, r5
 801c702:	9000      	str	r0, [sp, #0]
 801c704:	9a03      	ldr	r2, [sp, #12]
 801c706:	a805      	add	r0, sp, #20
 801c708:	ad1e      	add	r5, sp, #120	@ 0x78
 801c70a:	f001 f8ae 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801c70e:	2100      	movs	r1, #0
 801c710:	f845 1d68 	str.w	r1, [r5, #-104]!
 801c714:	4622      	mov	r2, r4
 801c716:	462b      	mov	r3, r5
 801c718:	a805      	add	r0, sp, #20
 801c71a:	f001 fbd3 	bl	801dec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c71e:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801c722:	b1d8      	cbz	r0, 801c75c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801c724:	280a      	cmp	r0, #10
 801c726:	d012      	beq.n	801c74e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801c728:	9804      	ldr	r0, [sp, #16]
 801c72a:	b180      	cbz	r0, 801c74e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801c72c:	7b47      	ldrb	r7, [r0, #13]
 801c72e:	88e2      	ldrh	r2, [r4, #6]
 801c730:	00fb      	lsls	r3, r7, #3
 801c732:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801c736:	7a03      	ldrb	r3, [r0, #8]
 801c738:	430b      	orrs	r3, r1
 801c73a:	0679      	lsls	r1, r7, #25
 801c73c:	bf44      	itt	mi
 801c73e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801c742:	b21b      	sxthmi	r3, r3
 801c744:	1ad3      	subs	r3, r2, r3
 801c746:	b21b      	sxth	r3, r3
 801c748:	429e      	cmp	r6, r3
 801c74a:	bfa8      	it	ge
 801c74c:	461e      	movge	r6, r3
 801c74e:	462b      	mov	r3, r5
 801c750:	4622      	mov	r2, r4
 801c752:	2100      	movs	r1, #0
 801c754:	a805      	add	r0, sp, #20
 801c756:	f001 fbb5 	bl	801dec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c75a:	e7e2      	b.n	801c722 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801c75c:	4630      	mov	r0, r6
 801c75e:	b01e      	add	sp, #120	@ 0x78
 801c760:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801c764:	b003      	add	sp, #12
 801c766:	4770      	bx	lr

0801c768 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801c768:	b513      	push	{r0, r1, r4, lr}
 801c76a:	6803      	ldr	r3, [r0, #0]
 801c76c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801c770:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c774:	f8ad 1004 	strh.w	r1, [sp, #4]
 801c778:	2400      	movs	r4, #0
 801c77a:	9400      	str	r4, [sp, #0]
 801c77c:	f8ad 2006 	strh.w	r2, [sp, #6]
 801c780:	691b      	ldr	r3, [r3, #16]
 801c782:	4669      	mov	r1, sp
 801c784:	4798      	blx	r3
 801c786:	b002      	add	sp, #8
 801c788:	bd10      	pop	{r4, pc}

0801c78a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801c78a:	b538      	push	{r3, r4, r5, lr}
 801c78c:	680b      	ldr	r3, [r1, #0]
 801c78e:	460c      	mov	r4, r1
 801c790:	68db      	ldr	r3, [r3, #12]
 801c792:	4605      	mov	r5, r0
 801c794:	4798      	blx	r3
 801c796:	6823      	ldr	r3, [r4, #0]
 801c798:	4620      	mov	r0, r4
 801c79a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c79c:	4629      	mov	r1, r5
 801c79e:	4798      	blx	r3
 801c7a0:	4628      	mov	r0, r5
 801c7a2:	bd38      	pop	{r3, r4, r5, pc}

0801c7a4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801c7a4:	b410      	push	{r4}
 801c7a6:	880a      	ldrh	r2, [r1, #0]
 801c7a8:	8884      	ldrh	r4, [r0, #4]
 801c7aa:	4422      	add	r2, r4
 801c7ac:	800a      	strh	r2, [r1, #0]
 801c7ae:	88c4      	ldrh	r4, [r0, #6]
 801c7b0:	884a      	ldrh	r2, [r1, #2]
 801c7b2:	4422      	add	r2, r4
 801c7b4:	804a      	strh	r2, [r1, #2]
 801c7b6:	6940      	ldr	r0, [r0, #20]
 801c7b8:	b120      	cbz	r0, 801c7c4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801c7ba:	6803      	ldr	r3, [r0, #0]
 801c7bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c7c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c7c2:	4718      	bx	r3
 801c7c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c7c8:	4770      	bx	lr

0801c7ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801c7ca:	b570      	push	{r4, r5, r6, lr}
 801c7cc:	8882      	ldrh	r2, [r0, #4]
 801c7ce:	880b      	ldrh	r3, [r1, #0]
 801c7d0:	4413      	add	r3, r2
 801c7d2:	800b      	strh	r3, [r1, #0]
 801c7d4:	88c2      	ldrh	r2, [r0, #6]
 801c7d6:	884b      	ldrh	r3, [r1, #2]
 801c7d8:	460c      	mov	r4, r1
 801c7da:	4413      	add	r3, r2
 801c7dc:	804b      	strh	r3, [r1, #2]
 801c7de:	4605      	mov	r5, r0
 801c7e0:	1d01      	adds	r1, r0, #4
 801c7e2:	4620      	mov	r0, r4
 801c7e4:	f7f8 fe10 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801c7e8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801c7ec:	2b00      	cmp	r3, #0
 801c7ee:	dd0b      	ble.n	801c808 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c7f0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c7f4:	2b00      	cmp	r3, #0
 801c7f6:	dd07      	ble.n	801c808 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c7f8:	6968      	ldr	r0, [r5, #20]
 801c7fa:	b128      	cbz	r0, 801c808 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c7fc:	6803      	ldr	r3, [r0, #0]
 801c7fe:	4621      	mov	r1, r4
 801c800:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c802:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c806:	4718      	bx	r3
 801c808:	bd70      	pop	{r4, r5, r6, pc}
	...

0801c80c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801c80c:	b570      	push	{r4, r5, r6, lr}
 801c80e:	8882      	ldrh	r2, [r0, #4]
 801c810:	880b      	ldrh	r3, [r1, #0]
 801c812:	4413      	add	r3, r2
 801c814:	800b      	strh	r3, [r1, #0]
 801c816:	88c2      	ldrh	r2, [r0, #6]
 801c818:	884b      	ldrh	r3, [r1, #2]
 801c81a:	460c      	mov	r4, r1
 801c81c:	4413      	add	r3, r2
 801c81e:	804b      	strh	r3, [r1, #2]
 801c820:	4605      	mov	r5, r0
 801c822:	1d01      	adds	r1, r0, #4
 801c824:	4620      	mov	r0, r4
 801c826:	f7f8 fdef 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801c82a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801c82e:	2b00      	cmp	r3, #0
 801c830:	dd19      	ble.n	801c866 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801c832:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c836:	2b00      	cmp	r3, #0
 801c838:	dd15      	ble.n	801c866 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801c83a:	6968      	ldr	r0, [r5, #20]
 801c83c:	b128      	cbz	r0, 801c84a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801c83e:	6803      	ldr	r3, [r0, #0]
 801c840:	4621      	mov	r1, r4
 801c842:	691b      	ldr	r3, [r3, #16]
 801c844:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c848:	4718      	bx	r3
 801c84a:	4b07      	ldr	r3, [pc, #28]	@ (801c868 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801c84c:	681b      	ldr	r3, [r3, #0]
 801c84e:	3304      	adds	r3, #4
 801c850:	429d      	cmp	r5, r3
 801c852:	d108      	bne.n	801c866 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801c854:	f7fe fdd6 	bl	801b404 <_ZN8touchgfx11Application11getInstanceEv>
 801c858:	6803      	ldr	r3, [r0, #0]
 801c85a:	6821      	ldr	r1, [r4, #0]
 801c85c:	6862      	ldr	r2, [r4, #4]
 801c85e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801c860:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c864:	4718      	bx	r3
 801c866:	bd70      	pop	{r4, r5, r6, pc}
 801c868:	20013928 	.word	0x20013928

0801c86c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801c86c:	b570      	push	{r4, r5, r6, lr}
 801c86e:	4604      	mov	r4, r0
 801c870:	4616      	mov	r6, r2
 801c872:	460d      	mov	r5, r1
 801c874:	b901      	cbnz	r1, 801c878 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801c876:	b192      	cbz	r2, 801c89e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801c878:	6823      	ldr	r3, [r4, #0]
 801c87a:	4620      	mov	r0, r4
 801c87c:	699b      	ldr	r3, [r3, #24]
 801c87e:	4798      	blx	r3
 801c880:	88e2      	ldrh	r2, [r4, #6]
 801c882:	88a1      	ldrh	r1, [r4, #4]
 801c884:	4432      	add	r2, r6
 801c886:	4429      	add	r1, r5
 801c888:	4620      	mov	r0, r4
 801c88a:	b212      	sxth	r2, r2
 801c88c:	b209      	sxth	r1, r1
 801c88e:	f7e6 fa84 	bl	8002d9a <_ZN8touchgfx8Drawable5setXYEss>
 801c892:	6823      	ldr	r3, [r4, #0]
 801c894:	4620      	mov	r0, r4
 801c896:	699b      	ldr	r3, [r3, #24]
 801c898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c89c:	4718      	bx	r3
 801c89e:	bd70      	pop	{r4, r5, r6, pc}

0801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801c8a0:	b510      	push	{r4, lr}
 801c8a2:	4604      	mov	r4, r0
 801c8a4:	4608      	mov	r0, r1
 801c8a6:	2300      	movs	r3, #0
 801c8a8:	8023      	strh	r3, [r4, #0]
 801c8aa:	8063      	strh	r3, [r4, #2]
 801c8ac:	6803      	ldr	r3, [r0, #0]
 801c8ae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c8b2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801c8b6:	80a1      	strh	r1, [r4, #4]
 801c8b8:	80e2      	strh	r2, [r4, #6]
 801c8ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c8bc:	4621      	mov	r1, r4
 801c8be:	4798      	blx	r3
 801c8c0:	4620      	mov	r0, r4
 801c8c2:	bd10      	pop	{r4, pc}

0801c8c4 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 801c8c4:	4770      	bx	lr

0801c8c6 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 801c8c6:	b510      	push	{r4, lr}
 801c8c8:	211c      	movs	r1, #28
 801c8ca:	4604      	mov	r4, r0
 801c8cc:	f011 f82b 	bl	802d926 <_ZdlPvj>
 801c8d0:	4620      	mov	r0, r4
 801c8d2:	bd10      	pop	{r4, pc}

0801c8d4 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 801c8d4:	4a04      	ldr	r2, [pc, #16]	@ (801c8e8 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 801c8d6:	6002      	str	r2, [r0, #0]
 801c8d8:	2200      	movs	r2, #0
 801c8da:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801c8de:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801c8e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801c8e6:	4770      	bx	lr
 801c8e8:	08033598 	.word	0x08033598

0801c8ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 801c8ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8f0:	4604      	mov	r4, r0
 801c8f2:	b087      	sub	sp, #28
 801c8f4:	8b45      	ldrh	r5, [r0, #26]
 801c8f6:	f8b2 c000 	ldrh.w	ip, [r2]
 801c8fa:	9105      	str	r1, [sp, #20]
 801c8fc:	68e1      	ldr	r1, [r4, #12]
 801c8fe:	9203      	str	r2, [sp, #12]
 801c900:	1c68      	adds	r0, r5, #1
 801c902:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801c906:	f01c 0501 	ands.w	r5, ip, #1
 801c90a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c90e:	9502      	str	r5, [sp, #8]
 801c910:	b280      	uxth	r0, r0
 801c912:	d07d      	beq.n	801ca10 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 801c914:	ee07 2a90 	vmov	s15, r2
 801c918:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 801c91c:	8360      	strh	r0, [r4, #26]
 801c91e:	edc1 6a00 	vstr	s13, [r1]
 801c922:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801c926:	8b61      	ldrh	r1, [r4, #26]
 801c928:	ee07 2a10 	vmov	s14, r2
 801c92c:	68e2      	ldr	r2, [r4, #12]
 801c92e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c932:	f04f 0e00 	mov.w	lr, #0
 801c936:	1c48      	adds	r0, r1, #1
 801c938:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 801c93c:	ee06 ea10 	vmov	s12, lr
 801c940:	8360      	strh	r0, [r4, #26]
 801c942:	ed82 7a00 	vstr	s14, [r2]
 801c946:	8b21      	ldrh	r1, [r4, #24]
 801c948:	68a2      	ldr	r2, [r4, #8]
 801c94a:	2501      	movs	r5, #1
 801c94c:	1c48      	adds	r0, r1, #1
 801c94e:	8320      	strh	r0, [r4, #24]
 801c950:	5455      	strb	r5, [r2, r1]
 801c952:	2200      	movs	r2, #0
 801c954:	3304      	adds	r3, #4
 801c956:	ee07 2a90 	vmov	s15, r2
 801c95a:	9300      	str	r3, [sp, #0]
 801c95c:	46aa      	mov	sl, r5
 801c95e:	4613      	mov	r3, r2
 801c960:	4611      	mov	r1, r2
 801c962:	462e      	mov	r6, r5
 801c964:	9201      	str	r2, [sp, #4]
 801c966:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801c96a:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 801c96e:	9805      	ldr	r0, [sp, #20]
 801c970:	f8d4 b008 	ldr.w	fp, [r4, #8]
 801c974:	f108 0701 	add.w	r7, r8, #1
 801c978:	42a8      	cmp	r0, r5
 801c97a:	b2bf      	uxth	r7, r7
 801c97c:	eb0b 0908 	add.w	r9, fp, r8
 801c980:	f340 80db 	ble.w	801cb3a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 801c984:	fa4c f906 	asr.w	r9, ip, r6
 801c988:	f009 0901 	and.w	r9, r9, #1
 801c98c:	fa5f f389 	uxtb.w	r3, r9
 801c990:	9304      	str	r3, [sp, #16]
 801c992:	9b00      	ldr	r3, [sp, #0]
 801c994:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c998:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c99c:	f1b9 0f00 	cmp.w	r9, #0
 801c9a0:	d07d      	beq.n	801ca9e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 801c9a2:	ee05 1a10 	vmov	s10, r1
 801c9a6:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 801c9aa:	ee05 3a10 	vmov	s10, r3
 801c9ae:	8327      	strh	r7, [r4, #24]
 801c9b0:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 801c9b4:	f1ba 0f00 	cmp.w	sl, #0
 801c9b8:	d050      	beq.n	801ca5c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 801c9ba:	f04f 0002 	mov.w	r0, #2
 801c9be:	f80b 0008 	strb.w	r0, [fp, r8]
 801c9c2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c9c6:	68e7      	ldr	r7, [r4, #12]
 801c9c8:	f108 0901 	add.w	r9, r8, #1
 801c9cc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c9d0:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c9d4:	edc7 4a00 	vstr	s9, [r7]
 801c9d8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801c9dc:	68e7      	ldr	r7, [r4, #12]
 801c9de:	f108 0901 	add.w	r9, r8, #1
 801c9e2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801c9e6:	f8a4 901a 	strh.w	r9, [r4, #26]
 801c9ea:	ed87 5a00 	vstr	s10, [r7]
 801c9ee:	3601      	adds	r6, #1
 801c9f0:	2e10      	cmp	r6, #16
 801c9f2:	d106      	bne.n	801ca02 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 801c9f4:	9e01      	ldr	r6, [sp, #4]
 801c9f6:	9803      	ldr	r0, [sp, #12]
 801c9f8:	3601      	adds	r6, #1
 801c9fa:	9601      	str	r6, [sp, #4]
 801c9fc:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 801ca00:	2600      	movs	r6, #0
 801ca02:	9800      	ldr	r0, [sp, #0]
 801ca04:	f8dd a010 	ldr.w	sl, [sp, #16]
 801ca08:	3004      	adds	r0, #4
 801ca0a:	3501      	adds	r5, #1
 801ca0c:	9000      	str	r0, [sp, #0]
 801ca0e:	e7ac      	b.n	801c96a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 801ca10:	ee06 2a10 	vmov	s12, r2
 801ca14:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 801ca18:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801ca1c:	ee16 5a10 	vmov	r5, s12
 801ca20:	442a      	add	r2, r5
 801ca22:	ee06 2a90 	vmov	s13, r2
 801ca26:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 801ca2a:	8360      	strh	r0, [r4, #26]
 801ca2c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801ca30:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 801ca34:	4472      	add	r2, lr
 801ca36:	ee07 2a10 	vmov	s14, r2
 801ca3a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801ca3e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801ca42:	edc1 6a00 	vstr	s13, [r1]
 801ca46:	8b61      	ldrh	r1, [r4, #26]
 801ca48:	68e2      	ldr	r2, [r4, #12]
 801ca4a:	ee27 7a27 	vmul.f32	s14, s14, s15
 801ca4e:	1c48      	adds	r0, r1, #1
 801ca50:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 801ca54:	8360      	strh	r0, [r4, #26]
 801ca56:	ed82 7a00 	vstr	s14, [r2]
 801ca5a:	e774      	b.n	801c946 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 801ca5c:	f04f 0005 	mov.w	r0, #5
 801ca60:	f80b 0008 	strb.w	r0, [fp, r8]
 801ca64:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801ca68:	68e7      	ldr	r7, [r4, #12]
 801ca6a:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 801ca6e:	f108 0901 	add.w	r9, r8, #1
 801ca72:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801ca76:	f8a4 901a 	strh.w	r9, [r4, #26]
 801ca7a:	ed87 4a00 	vstr	s8, [r7]
 801ca7e:	ee04 2a10 	vmov	s8, r2
 801ca82:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801ca86:	68e7      	ldr	r7, [r4, #12]
 801ca88:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 801ca8c:	f108 0901 	add.w	r9, r8, #1
 801ca90:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801ca94:	f8a4 901a 	strh.w	r9, [r4, #26]
 801ca98:	ed87 4a00 	vstr	s8, [r7]
 801ca9c:	e791      	b.n	801c9c2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 801ca9e:	f1ba 0f00 	cmp.w	sl, #0
 801caa2:	d146      	bne.n	801cb32 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 801caa4:	f04f 0005 	mov.w	r0, #5
 801caa8:	8327      	strh	r7, [r4, #24]
 801caaa:	f80b 0008 	strb.w	r0, [fp, r8]
 801caae:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801cab2:	68e7      	ldr	r7, [r4, #12]
 801cab4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801cab8:	f108 0901 	add.w	r9, r8, #1
 801cabc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801cac0:	ee17 0a90 	vmov	r0, s15
 801cac4:	f8a4 901a 	strh.w	r9, [r4, #26]
 801cac8:	ed87 5a00 	vstr	s10, [r7]
 801cacc:	ee05 2a10 	vmov	s10, r2
 801cad0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801cad4:	68e7      	ldr	r7, [r4, #12]
 801cad6:	4408      	add	r0, r1
 801cad8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 801cadc:	ee07 0a90 	vmov	s15, r0
 801cae0:	f108 0901 	add.w	r9, r8, #1
 801cae4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801cae8:	f8a4 901a 	strh.w	r9, [r4, #26]
 801caec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801caf0:	ed87 5a00 	vstr	s10, [r7]
 801caf4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801caf8:	68e7      	ldr	r7, [r4, #12]
 801cafa:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801cafe:	f108 0901 	add.w	r9, r8, #1
 801cb02:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801cb06:	441a      	add	r2, r3
 801cb08:	f8a4 901a 	strh.w	r9, [r4, #26]
 801cb0c:	edc7 7a00 	vstr	s15, [r7]
 801cb10:	ee07 2a90 	vmov	s15, r2
 801cb14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cb18:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801cb1c:	68e7      	ldr	r7, [r4, #12]
 801cb1e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801cb22:	f108 0901 	add.w	r9, r8, #1
 801cb26:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801cb2a:	f8a4 901a 	strh.w	r9, [r4, #26]
 801cb2e:	edc7 7a00 	vstr	s15, [r7]
 801cb32:	461a      	mov	r2, r3
 801cb34:	ee07 1a90 	vmov	s15, r1
 801cb38:	e759      	b.n	801c9ee <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 801cb3a:	f1ba 0f00 	cmp.w	sl, #0
 801cb3e:	d045      	beq.n	801cbcc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801cb40:	ee05 1a90 	vmov	s11, r1
 801cb44:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801cb48:	eef4 5a66 	vcmp.f32	s11, s13
 801cb4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cb50:	d108      	bne.n	801cb64 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 801cb52:	ee05 3a90 	vmov	s11, r3
 801cb56:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801cb5a:	eef4 5a47 	vcmp.f32	s11, s14
 801cb5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cb62:	d033      	beq.n	801cbcc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801cb64:	9b02      	ldr	r3, [sp, #8]
 801cb66:	8327      	strh	r7, [r4, #24]
 801cb68:	b1b3      	cbz	r3, 801cb98 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 801cb6a:	2302      	movs	r3, #2
 801cb6c:	f889 3000 	strb.w	r3, [r9]
 801cb70:	8b62      	ldrh	r2, [r4, #26]
 801cb72:	68e3      	ldr	r3, [r4, #12]
 801cb74:	1c51      	adds	r1, r2, #1
 801cb76:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801cb7a:	8361      	strh	r1, [r4, #26]
 801cb7c:	edc3 6a00 	vstr	s13, [r3]
 801cb80:	8b62      	ldrh	r2, [r4, #26]
 801cb82:	68e3      	ldr	r3, [r4, #12]
 801cb84:	1c51      	adds	r1, r2, #1
 801cb86:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801cb8a:	8361      	strh	r1, [r4, #26]
 801cb8c:	ed83 7a00 	vstr	s14, [r3]
 801cb90:	9800      	ldr	r0, [sp, #0]
 801cb92:	b007      	add	sp, #28
 801cb94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb98:	2305      	movs	r3, #5
 801cb9a:	f889 3000 	strb.w	r3, [r9]
 801cb9e:	8b62      	ldrh	r2, [r4, #26]
 801cba0:	68e3      	ldr	r3, [r4, #12]
 801cba2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801cba6:	1c51      	adds	r1, r2, #1
 801cba8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801cbac:	8361      	strh	r1, [r4, #26]
 801cbae:	ee07 ea90 	vmov	s15, lr
 801cbb2:	ed83 6a00 	vstr	s12, [r3]
 801cbb6:	8b62      	ldrh	r2, [r4, #26]
 801cbb8:	68e3      	ldr	r3, [r4, #12]
 801cbba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cbbe:	1c51      	adds	r1, r2, #1
 801cbc0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801cbc4:	8361      	strh	r1, [r4, #26]
 801cbc6:	edc3 7a00 	vstr	s15, [r3]
 801cbca:	e7d1      	b.n	801cb70 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801cbcc:	ee05 2a90 	vmov	s11, r2
 801cbd0:	9902      	ldr	r1, [sp, #8]
 801cbd2:	8327      	strh	r7, [r4, #24]
 801cbd4:	2305      	movs	r3, #5
 801cbd6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801cbda:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801cbde:	f889 3000 	strb.w	r3, [r9]
 801cbe2:	b181      	cbz	r1, 801cc06 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 801cbe4:	8b62      	ldrh	r2, [r4, #26]
 801cbe6:	68e3      	ldr	r3, [r4, #12]
 801cbe8:	1c51      	adds	r1, r2, #1
 801cbea:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801cbee:	8361      	strh	r1, [r4, #26]
 801cbf0:	ed83 5a00 	vstr	s10, [r3]
 801cbf4:	8b62      	ldrh	r2, [r4, #26]
 801cbf6:	68e3      	ldr	r3, [r4, #12]
 801cbf8:	1c51      	adds	r1, r2, #1
 801cbfa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801cbfe:	8361      	strh	r1, [r4, #26]
 801cc00:	edc3 5a00 	vstr	s11, [r3]
 801cc04:	e7b4      	b.n	801cb70 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801cc06:	8b65      	ldrh	r5, [r4, #26]
 801cc08:	68e1      	ldr	r1, [r4, #12]
 801cc0a:	1c6e      	adds	r6, r5, #1
 801cc0c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801cc10:	8366      	strh	r6, [r4, #26]
 801cc12:	ed81 5a00 	vstr	s10, [r1]
 801cc16:	8b65      	ldrh	r5, [r4, #26]
 801cc18:	68e1      	ldr	r1, [r4, #12]
 801cc1a:	1c6e      	adds	r6, r5, #1
 801cc1c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801cc20:	8366      	strh	r6, [r4, #26]
 801cc22:	edc1 5a00 	vstr	s11, [r1]
 801cc26:	8b65      	ldrh	r5, [r4, #26]
 801cc28:	68e1      	ldr	r1, [r4, #12]
 801cc2a:	1c6e      	adds	r6, r5, #1
 801cc2c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801cc30:	ee17 0a90 	vmov	r0, s15
 801cc34:	ee16 5a10 	vmov	r5, s12
 801cc38:	4428      	add	r0, r5
 801cc3a:	ee07 0a90 	vmov	s15, r0
 801cc3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cc42:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 801cc46:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801cc4a:	4472      	add	r2, lr
 801cc4c:	8366      	strh	r6, [r4, #26]
 801cc4e:	edc1 7a00 	vstr	s15, [r1]
 801cc52:	ee07 2a90 	vmov	s15, r2
 801cc56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801cc5a:	8b61      	ldrh	r1, [r4, #26]
 801cc5c:	68e5      	ldr	r5, [r4, #12]
 801cc5e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801cc62:	1c4e      	adds	r6, r1, #1
 801cc64:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801cc68:	8366      	strh	r6, [r4, #26]
 801cc6a:	edc1 7a00 	vstr	s15, [r1]
 801cc6e:	8b22      	ldrh	r2, [r4, #24]
 801cc70:	68a1      	ldr	r1, [r4, #8]
 801cc72:	1c55      	adds	r5, r2, #1
 801cc74:	8325      	strh	r5, [r4, #24]
 801cc76:	548b      	strb	r3, [r1, r2]
 801cc78:	e791      	b.n	801cb9e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

0801cc7c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 801cc7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cc80:	b08e      	sub	sp, #56	@ 0x38
 801cc82:	4604      	mov	r4, r0
 801cc84:	4688      	mov	r8, r1
 801cc86:	4615      	mov	r5, r2
 801cc88:	4699      	mov	r9, r3
 801cc8a:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 801cc8c:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 801cc90:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 801cc92:	f7e4 ff77 	bl	8001b84 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 801cc96:	6060      	str	r0, [r4, #4]
 801cc98:	f1b9 0f00 	cmp.w	r9, #0
 801cc9c:	f000 80e8 	beq.w	801ce70 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801cca0:	2800      	cmp	r0, #0
 801cca2:	f000 80e5 	beq.w	801ce70 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801cca6:	a805      	add	r0, sp, #20
 801cca8:	f000 f8f9 	bl	801ce9e <_ZN8touchgfx9Matrix3x3C1Ev>
 801ccac:	6833      	ldr	r3, [r6, #0]
 801ccae:	4630      	mov	r0, r6
 801ccb0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 801ccb2:	4798      	blx	r3
 801ccb4:	a805      	add	r0, sp, #20
 801ccb6:	eef0 0a40 	vmov.f32	s1, s0
 801ccba:	f000 f8f4 	bl	801cea6 <_ZN8touchgfx9Matrix3x35scaleEff>
 801ccbe:	6860      	ldr	r0, [r4, #4]
 801ccc0:	f1ba 0f03 	cmp.w	sl, #3
 801ccc4:	d83b      	bhi.n	801cd3e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 801ccc6:	e8df f00a 	tbb	[pc, sl]
 801ccca:	1002      	.short	0x1002
 801cccc:	9f71      	.short	0x9f71
 801ccce:	6803      	ldr	r3, [r0, #0]
 801ccd0:	462a      	mov	r2, r5
 801ccd2:	689b      	ldr	r3, [r3, #8]
 801ccd4:	4641      	mov	r1, r8
 801ccd6:	4798      	blx	r3
 801ccd8:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 801ccdc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801cce0:	ee07 7a90 	vmov	s15, r7
 801cce4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801cce8:	e026      	b.n	801cd38 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 801ccea:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 801ccee:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801ccf2:	8869      	ldrh	r1, [r5, #2]
 801ccf4:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ccf8:	1a9b      	subs	r3, r3, r2
 801ccfa:	1a5b      	subs	r3, r3, r1
 801ccfc:	f8ad 300c 	strh.w	r3, [sp, #12]
 801cd00:	882b      	ldrh	r3, [r5, #0]
 801cd02:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cd06:	88ab      	ldrh	r3, [r5, #4]
 801cd08:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cd0c:	6803      	ldr	r3, [r0, #0]
 801cd0e:	aa03      	add	r2, sp, #12
 801cd10:	689b      	ldr	r3, [r3, #8]
 801cd12:	4641      	mov	r1, r8
 801cd14:	4798      	blx	r3
 801cd16:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 801ce78 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 801cd1a:	a805      	add	r0, sp, #20
 801cd1c:	f000 f8e8 	bl	801cef0 <_ZN8touchgfx9Matrix3x36rotateEf>
 801cd20:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 801cd24:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801cd26:	ee07 7a90 	vmov	s15, r7
 801cd2a:	1a9b      	subs	r3, r3, r2
 801cd2c:	ee00 3a10 	vmov	s0, r3
 801cd30:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801cd34:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 801cd38:	a805      	add	r0, sp, #20
 801cd3a:	f000 f927 	bl	801cf8c <_ZN8touchgfx9Matrix3x39translateEff>
 801cd3e:	6860      	ldr	r0, [r4, #4]
 801cd40:	6803      	ldr	r3, [r0, #0]
 801cd42:	a905      	add	r1, sp, #20
 801cd44:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801cd46:	4798      	blx	r3
 801cd48:	6860      	ldr	r0, [r4, #4]
 801cd4a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801cd4c:	6803      	ldr	r3, [r0, #0]
 801cd4e:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 801cd52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cd54:	4798      	blx	r3
 801cd56:	6860      	ldr	r0, [r4, #4]
 801cd58:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 801cd5c:	6803      	ldr	r3, [r0, #0]
 801cd5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cd60:	4798      	blx	r3
 801cd62:	6860      	ldr	r0, [r4, #4]
 801cd64:	6803      	ldr	r3, [r0, #0]
 801cd66:	2101      	movs	r1, #1
 801cd68:	68db      	ldr	r3, [r3, #12]
 801cd6a:	2500      	movs	r5, #0
 801cd6c:	4798      	blx	r3
 801cd6e:	f8b9 7000 	ldrh.w	r7, [r9]
 801cd72:	61a5      	str	r5, [r4, #24]
 801cd74:	f104 0310 	add.w	r3, r4, #16
 801cd78:	f104 0208 	add.w	r2, r4, #8
 801cd7c:	f104 0114 	add.w	r1, r4, #20
 801cd80:	f104 000c 	add.w	r0, r4, #12
 801cd84:	f109 0602 	add.w	r6, r9, #2
 801cd88:	f7ed fb4a 	bl	800a420 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 801cd8c:	42af      	cmp	r7, r5
 801cd8e:	dd60      	ble.n	801ce52 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 801cd90:	8831      	ldrh	r1, [r6, #0]
 801cd92:	f101 030f 	add.w	r3, r1, #15
 801cd96:	1cb2      	adds	r2, r6, #2
 801cd98:	f3c3 1307 	ubfx	r3, r3, #4, #8
 801cd9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cda0:	4620      	mov	r0, r4
 801cda2:	f7ff fda3 	bl	801c8ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 801cda6:	3501      	adds	r5, #1
 801cda8:	4606      	mov	r6, r0
 801cdaa:	e7ef      	b.n	801cd8c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 801cdac:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801cdb0:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801cdb4:	8829      	ldrh	r1, [r5, #0]
 801cdb6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cdba:	1a9b      	subs	r3, r3, r2
 801cdbc:	1a5b      	subs	r3, r3, r1
 801cdbe:	f8ad 300c 	strh.w	r3, [sp, #12]
 801cdc2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801cdc6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801cdca:	886d      	ldrh	r5, [r5, #2]
 801cdcc:	f8ad 1012 	strh.w	r1, [sp, #18]
 801cdd0:	1a5b      	subs	r3, r3, r1
 801cdd2:	1b5b      	subs	r3, r3, r5
 801cdd4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cdd8:	6803      	ldr	r3, [r0, #0]
 801cdda:	aa03      	add	r2, sp, #12
 801cddc:	689b      	ldr	r3, [r3, #8]
 801cdde:	4641      	mov	r1, r8
 801cde0:	4798      	blx	r3
 801cde2:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 801ce7c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 801cde6:	a805      	add	r0, sp, #20
 801cde8:	f000 f882 	bl	801cef0 <_ZN8touchgfx9Matrix3x36rotateEf>
 801cdec:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801cdf0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801cdf2:	1a9b      	subs	r3, r3, r2
 801cdf4:	ee00 3a90 	vmov	s1, r3
 801cdf8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 801cdfc:	1bdb      	subs	r3, r3, r7
 801cdfe:	ee00 3a10 	vmov	s0, r3
 801ce02:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801ce06:	e795      	b.n	801cd34 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 801ce08:	886b      	ldrh	r3, [r5, #2]
 801ce0a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801ce0e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801ce12:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801ce16:	8829      	ldrh	r1, [r5, #0]
 801ce18:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ce1c:	1a9b      	subs	r3, r3, r2
 801ce1e:	1a5b      	subs	r3, r3, r1
 801ce20:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ce24:	88eb      	ldrh	r3, [r5, #6]
 801ce26:	f8ad 3010 	strh.w	r3, [sp, #16]
 801ce2a:	6803      	ldr	r3, [r0, #0]
 801ce2c:	aa03      	add	r2, sp, #12
 801ce2e:	689b      	ldr	r3, [r3, #8]
 801ce30:	4641      	mov	r1, r8
 801ce32:	4798      	blx	r3
 801ce34:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 801ce80 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 801ce38:	a805      	add	r0, sp, #20
 801ce3a:	f000 f859 	bl	801cef0 <_ZN8touchgfx9Matrix3x36rotateEf>
 801ce3e:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801ce42:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 801ce46:	1bdb      	subs	r3, r3, r7
 801ce48:	ee00 3a90 	vmov	s1, r3
 801ce4c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801ce50:	e748      	b.n	801cce4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 801ce52:	6860      	ldr	r0, [r4, #4]
 801ce54:	8b22      	ldrh	r2, [r4, #24]
 801ce56:	6803      	ldr	r3, [r0, #0]
 801ce58:	2100      	movs	r1, #0
 801ce5a:	9101      	str	r1, [sp, #4]
 801ce5c:	8b61      	ldrh	r1, [r4, #26]
 801ce5e:	9100      	str	r1, [sp, #0]
 801ce60:	6a1d      	ldr	r5, [r3, #32]
 801ce62:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 801ce66:	47a8      	blx	r5
 801ce68:	6860      	ldr	r0, [r4, #4]
 801ce6a:	6803      	ldr	r3, [r0, #0]
 801ce6c:	69db      	ldr	r3, [r3, #28]
 801ce6e:	4798      	blx	r3
 801ce70:	b00e      	add	sp, #56	@ 0x38
 801ce72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ce76:	bf00      	nop
 801ce78:	42b40000 	.word	0x42b40000
 801ce7c:	43340000 	.word	0x43340000
 801ce80:	43870000 	.word	0x43870000

0801ce84 <_ZN8touchgfx9Matrix3x35resetEv>:
 801ce84:	2300      	movs	r3, #0
 801ce86:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 801ce8a:	6002      	str	r2, [r0, #0]
 801ce8c:	6043      	str	r3, [r0, #4]
 801ce8e:	6083      	str	r3, [r0, #8]
 801ce90:	60c3      	str	r3, [r0, #12]
 801ce92:	6102      	str	r2, [r0, #16]
 801ce94:	6143      	str	r3, [r0, #20]
 801ce96:	6183      	str	r3, [r0, #24]
 801ce98:	61c3      	str	r3, [r0, #28]
 801ce9a:	6202      	str	r2, [r0, #32]
 801ce9c:	4770      	bx	lr

0801ce9e <_ZN8touchgfx9Matrix3x3C1Ev>:
 801ce9e:	b508      	push	{r3, lr}
 801cea0:	f7ff fff0 	bl	801ce84 <_ZN8touchgfx9Matrix3x35resetEv>
 801cea4:	bd08      	pop	{r3, pc}

0801cea6 <_ZN8touchgfx9Matrix3x35scaleEff>:
 801cea6:	edd0 7a00 	vldr	s15, [r0]
 801ceaa:	ee67 7a80 	vmul.f32	s15, s15, s0
 801ceae:	edc0 7a00 	vstr	s15, [r0]
 801ceb2:	edd0 7a01 	vldr	s15, [r0, #4]
 801ceb6:	ee67 7a80 	vmul.f32	s15, s15, s0
 801ceba:	edc0 7a01 	vstr	s15, [r0, #4]
 801cebe:	edd0 7a02 	vldr	s15, [r0, #8]
 801cec2:	ee27 0a80 	vmul.f32	s0, s15, s0
 801cec6:	edd0 7a03 	vldr	s15, [r0, #12]
 801ceca:	ed80 0a02 	vstr	s0, [r0, #8]
 801cece:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801ced2:	edc0 7a03 	vstr	s15, [r0, #12]
 801ced6:	edd0 7a04 	vldr	s15, [r0, #16]
 801ceda:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801cede:	edc0 7a04 	vstr	s15, [r0, #16]
 801cee2:	edd0 7a05 	vldr	s15, [r0, #20]
 801cee6:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801ceea:	edc0 0a05 	vstr	s1, [r0, #20]
 801ceee:	4770      	bx	lr

0801cef0 <_ZN8touchgfx9Matrix3x36rotateEf>:
 801cef0:	b510      	push	{r4, lr}
 801cef2:	eddf 7a24 	vldr	s15, [pc, #144]	@ 801cf84 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 801cef6:	ee20 0a27 	vmul.f32	s0, s0, s15
 801cefa:	eddf 7a23 	vldr	s15, [pc, #140]	@ 801cf88 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 801cefe:	ed2d 8b02 	vpush	{d8}
 801cf02:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801cf06:	4604      	mov	r4, r0
 801cf08:	eeb0 0a68 	vmov.f32	s0, s17
 801cf0c:	f010 fd54 	bl	802d9b8 <cosf>
 801cf10:	eeb0 8a40 	vmov.f32	s16, s0
 801cf14:	eeb0 0a68 	vmov.f32	s0, s17
 801cf18:	f010 fd92 	bl	802da40 <sinf>
 801cf1c:	edd4 6a03 	vldr	s13, [r4, #12]
 801cf20:	edd4 4a00 	vldr	s9, [r4]
 801cf24:	ed94 7a04 	vldr	s14, [r4, #16]
 801cf28:	ed94 5a01 	vldr	s10, [r4, #4]
 801cf2c:	edd4 5a02 	vldr	s11, [r4, #8]
 801cf30:	ee60 7a66 	vnmul.f32	s15, s0, s13
 801cf34:	ee66 6a88 	vmul.f32	s13, s13, s16
 801cf38:	eee8 7a24 	vfma.f32	s15, s16, s9
 801cf3c:	eee0 6a24 	vfma.f32	s13, s0, s9
 801cf40:	edc4 7a00 	vstr	s15, [r4]
 801cf44:	ee60 7a47 	vnmul.f32	s15, s0, s14
 801cf48:	ee27 7a08 	vmul.f32	s14, s14, s16
 801cf4c:	eee8 7a05 	vfma.f32	s15, s16, s10
 801cf50:	eea0 7a05 	vfma.f32	s14, s0, s10
 801cf54:	edc4 7a01 	vstr	s15, [r4, #4]
 801cf58:	edd4 7a05 	vldr	s15, [r4, #20]
 801cf5c:	edc4 6a03 	vstr	s13, [r4, #12]
 801cf60:	ee20 6a67 	vnmul.f32	s12, s0, s15
 801cf64:	ee67 7a88 	vmul.f32	s15, s15, s16
 801cf68:	eea8 6a25 	vfma.f32	s12, s16, s11
 801cf6c:	ecbd 8b02 	vpop	{d8}
 801cf70:	eee0 7a25 	vfma.f32	s15, s0, s11
 801cf74:	ed84 6a02 	vstr	s12, [r4, #8]
 801cf78:	ed84 7a04 	vstr	s14, [r4, #16]
 801cf7c:	edc4 7a05 	vstr	s15, [r4, #20]
 801cf80:	bd10      	pop	{r4, pc}
 801cf82:	bf00      	nop
 801cf84:	40490fdb 	.word	0x40490fdb
 801cf88:	43340000 	.word	0x43340000

0801cf8c <_ZN8touchgfx9Matrix3x39translateEff>:
 801cf8c:	ed90 6a06 	vldr	s12, [r0, #24]
 801cf90:	edd0 7a00 	vldr	s15, [r0]
 801cf94:	edd0 6a07 	vldr	s13, [r0, #28]
 801cf98:	ed90 7a08 	vldr	s14, [r0, #32]
 801cf9c:	eee6 7a00 	vfma.f32	s15, s12, s0
 801cfa0:	edc0 7a00 	vstr	s15, [r0]
 801cfa4:	edd0 7a01 	vldr	s15, [r0, #4]
 801cfa8:	eee6 7a80 	vfma.f32	s15, s13, s0
 801cfac:	edc0 7a01 	vstr	s15, [r0, #4]
 801cfb0:	edd0 7a02 	vldr	s15, [r0, #8]
 801cfb4:	eee7 7a00 	vfma.f32	s15, s14, s0
 801cfb8:	edc0 7a02 	vstr	s15, [r0, #8]
 801cfbc:	edd0 7a03 	vldr	s15, [r0, #12]
 801cfc0:	eee6 7a20 	vfma.f32	s15, s12, s1
 801cfc4:	edc0 7a03 	vstr	s15, [r0, #12]
 801cfc8:	edd0 7a04 	vldr	s15, [r0, #16]
 801cfcc:	eee6 7aa0 	vfma.f32	s15, s13, s1
 801cfd0:	edc0 7a04 	vstr	s15, [r0, #16]
 801cfd4:	edd0 7a05 	vldr	s15, [r0, #20]
 801cfd8:	eee7 7a20 	vfma.f32	s15, s14, s1
 801cfdc:	edc0 7a05 	vstr	s15, [r0, #20]
 801cfe0:	4770      	bx	lr

0801cfe2 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 801cfe2:	edd0 6a01 	vldr	s13, [r0, #4]
 801cfe6:	edd0 7a04 	vldr	s15, [r0, #16]
 801cfea:	ed90 7a03 	vldr	s14, [r0, #12]
 801cfee:	ee60 7aa7 	vmul.f32	s15, s1, s15
 801cff2:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801cff6:	edd0 6a00 	vldr	s13, [r0]
 801cffa:	eee7 7a00 	vfma.f32	s15, s14, s0
 801cffe:	b084      	sub	sp, #16
 801d000:	eee6 0a80 	vfma.f32	s1, s13, s0
 801d004:	ed90 7a05 	vldr	s14, [r0, #20]
 801d008:	ed90 0a02 	vldr	s0, [r0, #8]
 801d00c:	ee30 0a80 	vadd.f32	s0, s1, s0
 801d010:	ee77 0a87 	vadd.f32	s1, s15, s14
 801d014:	b004      	add	sp, #16
 801d016:	4770      	bx	lr

0801d018 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801d018:	b530      	push	{r4, r5, lr}
 801d01a:	8083      	strh	r3, [r0, #4]
 801d01c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801d020:	80c3      	strh	r3, [r0, #6]
 801d022:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801d026:	7203      	strb	r3, [r0, #8]
 801d028:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d02c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801d030:	7243      	strb	r3, [r0, #9]
 801d032:	7a83      	ldrb	r3, [r0, #10]
 801d034:	6141      	str	r1, [r0, #20]
 801d036:	f365 0306 	bfi	r3, r5, #0, #7
 801d03a:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801d03e:	8302      	strh	r2, [r0, #24]
 801d040:	f365 13c7 	bfi	r3, r5, #7, #1
 801d044:	7283      	strb	r3, [r0, #10]
 801d046:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801d04a:	72c3      	strb	r3, [r0, #11]
 801d04c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 801d050:	7303      	strb	r3, [r0, #12]
 801d052:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801d056:	81c3      	strh	r3, [r0, #14]
 801d058:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801d05c:	8203      	strh	r3, [r0, #16]
 801d05e:	4b01      	ldr	r3, [pc, #4]	@ (801d064 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801d060:	6003      	str	r3, [r0, #0]
 801d062:	bd30      	pop	{r4, r5, pc}
 801d064:	080335ac 	.word	0x080335ac

0801d068 <_ZNK8touchgfx9ConstFont4findEt>:
 801d068:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d06a:	6944      	ldr	r4, [r0, #20]
 801d06c:	b3bc      	cbz	r4, 801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d06e:	88a3      	ldrh	r3, [r4, #4]
 801d070:	8b02      	ldrh	r2, [r0, #24]
 801d072:	1acb      	subs	r3, r1, r3
 801d074:	f102 32ff 	add.w	r2, r2, #4294967295
 801d078:	d431      	bmi.n	801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d07a:	4293      	cmp	r3, r2
 801d07c:	dd0c      	ble.n	801d098 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801d07e:	230e      	movs	r3, #14
 801d080:	fb03 4302 	mla	r3, r3, r2, r4
 801d084:	889b      	ldrh	r3, [r3, #4]
 801d086:	1a5b      	subs	r3, r3, r1
 801d088:	1ad3      	subs	r3, r2, r3
 801d08a:	429a      	cmp	r2, r3
 801d08c:	db27      	blt.n	801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d08e:	2b00      	cmp	r3, #0
 801d090:	bfbc      	itt	lt
 801d092:	2302      	movlt	r3, #2
 801d094:	fb92 f3f3 	sdivlt	r3, r2, r3
 801d098:	2500      	movs	r5, #0
 801d09a:	260e      	movs	r6, #14
 801d09c:	4295      	cmp	r5, r2
 801d09e:	dc1e      	bgt.n	801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d0a0:	fb06 4003 	mla	r0, r6, r3, r4
 801d0a4:	8887      	ldrh	r7, [r0, #4]
 801d0a6:	42b9      	cmp	r1, r7
 801d0a8:	d01a      	beq.n	801d0e0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801d0aa:	d20d      	bcs.n	801d0c8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801d0ac:	1e5a      	subs	r2, r3, #1
 801d0ae:	4295      	cmp	r5, r2
 801d0b0:	dc15      	bgt.n	801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d0b2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801d0b6:	1a5b      	subs	r3, r3, r1
 801d0b8:	1ad3      	subs	r3, r2, r3
 801d0ba:	429a      	cmp	r2, r3
 801d0bc:	db0f      	blt.n	801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d0be:	429d      	cmp	r5, r3
 801d0c0:	ddec      	ble.n	801d09c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801d0c2:	1953      	adds	r3, r2, r5
 801d0c4:	105b      	asrs	r3, r3, #1
 801d0c6:	e7e9      	b.n	801d09c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801d0c8:	1c5d      	adds	r5, r3, #1
 801d0ca:	42aa      	cmp	r2, r5
 801d0cc:	db07      	blt.n	801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d0ce:	8a43      	ldrh	r3, [r0, #18]
 801d0d0:	1acb      	subs	r3, r1, r3
 801d0d2:	442b      	add	r3, r5
 801d0d4:	429d      	cmp	r5, r3
 801d0d6:	dc02      	bgt.n	801d0de <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801d0d8:	429a      	cmp	r2, r3
 801d0da:	dadf      	bge.n	801d09c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801d0dc:	e7f1      	b.n	801d0c2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801d0de:	2000      	movs	r0, #0
 801d0e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d0e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801d0e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d0e4:	4604      	mov	r4, r0
 801d0e6:	4617      	mov	r7, r2
 801d0e8:	461e      	mov	r6, r3
 801d0ea:	b911      	cbnz	r1, 801d0f2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801d0ec:	2500      	movs	r5, #0
 801d0ee:	4628      	mov	r0, r5
 801d0f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801d0f2:	290a      	cmp	r1, #10
 801d0f4:	d0fa      	beq.n	801d0ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801d0f6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801d0fa:	4291      	cmp	r1, r2
 801d0fc:	d0f6      	beq.n	801d0ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801d0fe:	f242 020b 	movw	r2, #8203	@ 0x200b
 801d102:	4291      	cmp	r1, r2
 801d104:	d0f2      	beq.n	801d0ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801d106:	f7ff ffaf 	bl	801d068 <_ZNK8touchgfx9ConstFont4findEt>
 801d10a:	4605      	mov	r5, r0
 801d10c:	b950      	cbnz	r0, 801d124 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801d10e:	6823      	ldr	r3, [r4, #0]
 801d110:	4620      	mov	r0, r4
 801d112:	691b      	ldr	r3, [r3, #16]
 801d114:	4798      	blx	r3
 801d116:	4601      	mov	r1, r0
 801d118:	4620      	mov	r0, r4
 801d11a:	f7ff ffa5 	bl	801d068 <_ZNK8touchgfx9ConstFont4findEt>
 801d11e:	4605      	mov	r5, r0
 801d120:	2800      	cmp	r0, #0
 801d122:	d0e3      	beq.n	801d0ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801d124:	6823      	ldr	r3, [r4, #0]
 801d126:	4629      	mov	r1, r5
 801d128:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801d12a:	4620      	mov	r0, r4
 801d12c:	4798      	blx	r3
 801d12e:	6038      	str	r0, [r7, #0]
 801d130:	6823      	ldr	r3, [r4, #0]
 801d132:	4620      	mov	r0, r4
 801d134:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801d136:	4798      	blx	r3
 801d138:	7030      	strb	r0, [r6, #0]
 801d13a:	e7d8      	b.n	801d0ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801d13c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801d13c:	b538      	push	{r3, r4, r5, lr}
 801d13e:	4605      	mov	r5, r0
 801d140:	f001 fce8 	bl	801eb14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d144:	4604      	mov	r4, r0
 801d146:	4628      	mov	r0, r5
 801d148:	f001 fc28 	bl	801e99c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d14c:	2800      	cmp	r0, #0
 801d14e:	bf14      	ite	ne
 801d150:	2002      	movne	r0, #2
 801d152:	2000      	moveq	r0, #0
 801d154:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801d158:	b280      	uxth	r0, r0
 801d15a:	bd38      	pop	{r3, r4, r5, pc}

0801d15c <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801d15c:	b538      	push	{r3, r4, r5, lr}
 801d15e:	4605      	mov	r5, r0
 801d160:	f001 fcd8 	bl	801eb14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d164:	4604      	mov	r4, r0
 801d166:	4628      	mov	r0, r5
 801d168:	f001 fc18 	bl	801e99c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d16c:	2800      	cmp	r0, #0
 801d16e:	bf14      	ite	ne
 801d170:	2002      	movne	r0, #2
 801d172:	2000      	moveq	r0, #0
 801d174:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801d178:	f040 0001 	orr.w	r0, r0, #1
 801d17c:	b280      	uxth	r0, r0
 801d17e:	bd38      	pop	{r3, r4, r5, pc}

0801d180 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801d180:	2000      	movs	r0, #0
 801d182:	4770      	bx	lr

0801d184 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801d184:	2001      	movs	r0, #1
 801d186:	4770      	bx	lr

0801d188 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801d188:	2002      	movs	r0, #2
 801d18a:	4770      	bx	lr

0801d18c <_ZN8touchgfx6ScreenD1Ev>:
 801d18c:	4770      	bx	lr

0801d18e <_ZN8touchgfx12GestureEventD1Ev>:
 801d18e:	4770      	bx	lr

0801d190 <_ZN8touchgfx9DragEventD1Ev>:
 801d190:	4770      	bx	lr

0801d192 <_ZN8touchgfx10ClickEventD1Ev>:
 801d192:	4770      	bx	lr

0801d194 <_ZN8touchgfx10ClickEventD0Ev>:
 801d194:	b510      	push	{r4, lr}
 801d196:	210c      	movs	r1, #12
 801d198:	4604      	mov	r4, r0
 801d19a:	f010 fbc4 	bl	802d926 <_ZdlPvj>
 801d19e:	4620      	mov	r0, r4
 801d1a0:	bd10      	pop	{r4, pc}

0801d1a2 <_ZN8touchgfx9DragEventD0Ev>:
 801d1a2:	b510      	push	{r4, lr}
 801d1a4:	2110      	movs	r1, #16
 801d1a6:	4604      	mov	r4, r0
 801d1a8:	f010 fbbd 	bl	802d926 <_ZdlPvj>
 801d1ac:	4620      	mov	r0, r4
 801d1ae:	bd10      	pop	{r4, pc}

0801d1b0 <_ZN8touchgfx12GestureEventD0Ev>:
 801d1b0:	b510      	push	{r4, lr}
 801d1b2:	210c      	movs	r1, #12
 801d1b4:	4604      	mov	r4, r0
 801d1b6:	f010 fbb6 	bl	802d926 <_ZdlPvj>
 801d1ba:	4620      	mov	r0, r4
 801d1bc:	bd10      	pop	{r4, pc}

0801d1be <_ZN8touchgfx6ScreenD0Ev>:
 801d1be:	b510      	push	{r4, lr}
 801d1c0:	213c      	movs	r1, #60	@ 0x3c
 801d1c2:	4604      	mov	r4, r0
 801d1c4:	f010 fbaf 	bl	802d926 <_ZdlPvj>
 801d1c8:	4620      	mov	r0, r4
 801d1ca:	bd10      	pop	{r4, pc}

0801d1cc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801d1cc:	b530      	push	{r4, r5, lr}
 801d1ce:	460d      	mov	r5, r1
 801d1d0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801d1d2:	b087      	sub	sp, #28
 801d1d4:	4604      	mov	r4, r0
 801d1d6:	b301      	cbz	r1, 801d21a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801d1d8:	a801      	add	r0, sp, #4
 801d1da:	f7ff fb61 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d1de:	892a      	ldrh	r2, [r5, #8]
 801d1e0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801d1e4:	7928      	ldrb	r0, [r5, #4]
 801d1e6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801d1ea:	f88d 0010 	strb.w	r0, [sp, #16]
 801d1ee:	1ad2      	subs	r2, r2, r3
 801d1f0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801d1f2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801d1f4:	f8ad 1012 	strh.w	r1, [sp, #18]
 801d1f8:	441a      	add	r2, r3
 801d1fa:	896b      	ldrh	r3, [r5, #10]
 801d1fc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801d200:	f8ad 2014 	strh.w	r2, [sp, #20]
 801d204:	1b5b      	subs	r3, r3, r5
 801d206:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 801d208:	442b      	add	r3, r5
 801d20a:	4d05      	ldr	r5, [pc, #20]	@ (801d220 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801d20c:	9503      	str	r5, [sp, #12]
 801d20e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801d212:	6803      	ldr	r3, [r0, #0]
 801d214:	a903      	add	r1, sp, #12
 801d216:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801d218:	4798      	blx	r3
 801d21a:	b007      	add	sp, #28
 801d21c:	bd30      	pop	{r4, r5, pc}
 801d21e:	bf00      	nop
 801d220:	0803363c 	.word	0x0803363c

0801d224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801d224:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d228:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801d22a:	b08a      	sub	sp, #40	@ 0x28
 801d22c:	4604      	mov	r4, r0
 801d22e:	460d      	mov	r5, r1
 801d230:	b113      	cbz	r3, 801d238 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801d232:	790b      	ldrb	r3, [r1, #4]
 801d234:	2b00      	cmp	r3, #0
 801d236:	d044      	beq.n	801d2c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801d238:	f104 0804 	add.w	r8, r4, #4
 801d23c:	4641      	mov	r1, r8
 801d23e:	a803      	add	r0, sp, #12
 801d240:	f7ff fb2e 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d244:	792b      	ldrb	r3, [r5, #4]
 801d246:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801d24a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801d24e:	b983      	cbnz	r3, 801d272 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801d250:	892a      	ldrh	r2, [r5, #8]
 801d252:	88e9      	ldrh	r1, [r5, #6]
 801d254:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 801d258:	1b92      	subs	r2, r2, r6
 801d25a:	1bc9      	subs	r1, r1, r7
 801d25c:	9301      	str	r3, [sp, #4]
 801d25e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801d262:	9300      	str	r3, [sp, #0]
 801d264:	b212      	sxth	r2, r2
 801d266:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801d26a:	b209      	sxth	r1, r1
 801d26c:	4640      	mov	r0, r8
 801d26e:	f7f7 ffe7 	bl	8015240 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801d272:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801d274:	b329      	cbz	r1, 801d2c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801d276:	a805      	add	r0, sp, #20
 801d278:	f7ff fb12 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d27c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801d280:	792b      	ldrb	r3, [r5, #4]
 801d282:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801d284:	f88d 3020 	strb.w	r3, [sp, #32]
 801d288:	1abf      	subs	r7, r7, r2
 801d28a:	88ea      	ldrh	r2, [r5, #6]
 801d28c:	4417      	add	r7, r2
 801d28e:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801d290:	4417      	add	r7, r2
 801d292:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801d296:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801d29a:	1ab6      	subs	r6, r6, r2
 801d29c:	892a      	ldrh	r2, [r5, #8]
 801d29e:	4416      	add	r6, r2
 801d2a0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801d2a2:	4416      	add	r6, r2
 801d2a4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 801d2a8:	4a07      	ldr	r2, [pc, #28]	@ (801d2c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801d2aa:	9207      	str	r2, [sp, #28]
 801d2ac:	2600      	movs	r6, #0
 801d2ae:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801d2b2:	6803      	ldr	r3, [r0, #0]
 801d2b4:	a907      	add	r1, sp, #28
 801d2b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801d2b8:	4798      	blx	r3
 801d2ba:	792b      	ldrb	r3, [r5, #4]
 801d2bc:	b10b      	cbz	r3, 801d2c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801d2be:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801d2c2:	b00a      	add	sp, #40	@ 0x28
 801d2c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d2c8:	08033614 	.word	0x08033614

0801d2cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801d2cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d2d0:	460c      	mov	r4, r1
 801d2d2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801d2d4:	b088      	sub	sp, #32
 801d2d6:	4605      	mov	r5, r0
 801d2d8:	2900      	cmp	r1, #0
 801d2da:	d06d      	beq.n	801d3b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801d2dc:	4668      	mov	r0, sp
 801d2de:	f7ff fadf 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d2e2:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 801d2e4:	88e3      	ldrh	r3, [r4, #6]
 801d2e6:	f9bd 8000 	ldrsh.w	r8, [sp]
 801d2ea:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801d2ee:	440b      	add	r3, r1
 801d2f0:	b21b      	sxth	r3, r3
 801d2f2:	4543      	cmp	r3, r8
 801d2f4:	db31      	blt.n	801d35a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801d2f6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801d2fa:	44c4      	add	ip, r8
 801d2fc:	fa0f fc8c 	sxth.w	ip, ip
 801d300:	4563      	cmp	r3, ip
 801d302:	da2a      	bge.n	801d35a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801d304:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801d306:	8926      	ldrh	r6, [r4, #8]
 801d308:	4416      	add	r6, r2
 801d30a:	b236      	sxth	r6, r6
 801d30c:	42be      	cmp	r6, r7
 801d30e:	db24      	blt.n	801d35a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801d310:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801d314:	4438      	add	r0, r7
 801d316:	b200      	sxth	r0, r0
 801d318:	4286      	cmp	r6, r0
 801d31a:	da1e      	bge.n	801d35a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801d31c:	8963      	ldrh	r3, [r4, #10]
 801d31e:	4419      	add	r1, r3
 801d320:	b209      	sxth	r1, r1
 801d322:	4541      	cmp	r1, r8
 801d324:	db08      	blt.n	801d338 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801d326:	4561      	cmp	r1, ip
 801d328:	da06      	bge.n	801d338 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801d32a:	89a3      	ldrh	r3, [r4, #12]
 801d32c:	441a      	add	r2, r3
 801d32e:	b212      	sxth	r2, r2
 801d330:	42ba      	cmp	r2, r7
 801d332:	db01      	blt.n	801d338 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801d334:	4282      	cmp	r2, r0
 801d336:	db10      	blt.n	801d35a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801d338:	4b21      	ldr	r3, [pc, #132]	@ (801d3c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801d33a:	9304      	str	r3, [sp, #16]
 801d33c:	2302      	movs	r3, #2
 801d33e:	f88d 3014 	strb.w	r3, [sp, #20]
 801d342:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801d344:	2300      	movs	r3, #0
 801d346:	f8ad 3016 	strh.w	r3, [sp, #22]
 801d34a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801d34e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801d352:	6803      	ldr	r3, [r0, #0]
 801d354:	a904      	add	r1, sp, #16
 801d356:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801d358:	4798      	blx	r3
 801d35a:	1d29      	adds	r1, r5, #4
 801d35c:	a802      	add	r0, sp, #8
 801d35e:	f7ff fa9f 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d362:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801d366:	88e0      	ldrh	r0, [r4, #6]
 801d368:	7921      	ldrb	r1, [r4, #4]
 801d36a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801d36e:	8922      	ldrh	r2, [r4, #8]
 801d370:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801d372:	f88d 1014 	strb.w	r1, [sp, #20]
 801d376:	eba3 0808 	sub.w	r8, r3, r8
 801d37a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801d37e:	1bdf      	subs	r7, r3, r7
 801d380:	b2bb      	uxth	r3, r7
 801d382:	fa1f f888 	uxth.w	r8, r8
 801d386:	8967      	ldrh	r7, [r4, #10]
 801d388:	89a4      	ldrh	r4, [r4, #12]
 801d38a:	4440      	add	r0, r8
 801d38c:	4460      	add	r0, ip
 801d38e:	441a      	add	r2, r3
 801d390:	44b8      	add	r8, r7
 801d392:	4423      	add	r3, r4
 801d394:	f8ad 0016 	strh.w	r0, [sp, #22]
 801d398:	4433      	add	r3, r6
 801d39a:	4432      	add	r2, r6
 801d39c:	44e0      	add	r8, ip
 801d39e:	4c09      	ldr	r4, [pc, #36]	@ (801d3c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801d3a0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801d3a2:	9404      	str	r4, [sp, #16]
 801d3a4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d3a8:	f8ad 801a 	strh.w	r8, [sp, #26]
 801d3ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d3b0:	6803      	ldr	r3, [r0, #0]
 801d3b2:	a904      	add	r1, sp, #16
 801d3b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801d3b6:	4798      	blx	r3
 801d3b8:	b008      	add	sp, #32
 801d3ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d3be:	bf00      	nop
 801d3c0:	08033614 	.word	0x08033614
 801d3c4:	08033628 	.word	0x08033628

0801d3c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801d3c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801d3ca:	4604      	mov	r4, r0
 801d3cc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801d3d0:	3201      	adds	r2, #1
 801d3d2:	d112      	bne.n	801d3fa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801d3d4:	6803      	ldr	r3, [r0, #0]
 801d3d6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801d3da:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d3de:	f8ad 1004 	strh.w	r1, [sp, #4]
 801d3e2:	2500      	movs	r5, #0
 801d3e4:	9500      	str	r5, [sp, #0]
 801d3e6:	466d      	mov	r5, sp
 801d3e8:	4629      	mov	r1, r5
 801d3ea:	f8ad 2006 	strh.w	r2, [sp, #6]
 801d3ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d3f0:	4798      	blx	r3
 801d3f2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801d3f6:	e884 0003 	stmia.w	r4, {r0, r1}
 801d3fa:	4620      	mov	r0, r4
 801d3fc:	b003      	add	sp, #12
 801d3fe:	bd30      	pop	{r4, r5, pc}

0801d400 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801d400:	b513      	push	{r0, r1, r4, lr}
 801d402:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801d406:	3301      	adds	r3, #1
 801d408:	4604      	mov	r4, r0
 801d40a:	d109      	bne.n	801d420 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801d40c:	4601      	mov	r1, r0
 801d40e:	4668      	mov	r0, sp
 801d410:	f7ff fa46 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d414:	f8bd 3000 	ldrh.w	r3, [sp]
 801d418:	8423      	strh	r3, [r4, #32]
 801d41a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801d41e:	8463      	strh	r3, [r4, #34]	@ 0x22
 801d420:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801d424:	b002      	add	sp, #8
 801d426:	bd10      	pop	{r4, pc}

0801d428 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801d428:	b513      	push	{r0, r1, r4, lr}
 801d42a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801d42e:	3301      	adds	r3, #1
 801d430:	4604      	mov	r4, r0
 801d432:	d109      	bne.n	801d448 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801d434:	4601      	mov	r1, r0
 801d436:	4668      	mov	r0, sp
 801d438:	f7ff fa32 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d43c:	f8bd 3000 	ldrh.w	r3, [sp]
 801d440:	8423      	strh	r3, [r4, #32]
 801d442:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801d446:	8463      	strh	r3, [r4, #34]	@ 0x22
 801d448:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801d44c:	b002      	add	sp, #8
 801d44e:	bd10      	pop	{r4, pc}

0801d450 <_ZN8touchgfx6ScreenC1Ev>:
 801d450:	b570      	push	{r4, r5, r6, lr}
 801d452:	4605      	mov	r5, r0
 801d454:	4b16      	ldr	r3, [pc, #88]	@ (801d4b0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801d456:	f845 3b04 	str.w	r3, [r5], #4
 801d45a:	2300      	movs	r3, #0
 801d45c:	8103      	strh	r3, [r0, #8]
 801d45e:	8143      	strh	r3, [r0, #10]
 801d460:	8183      	strh	r3, [r0, #12]
 801d462:	81c3      	strh	r3, [r0, #14]
 801d464:	8203      	strh	r3, [r0, #16]
 801d466:	8243      	strh	r3, [r0, #18]
 801d468:	8283      	strh	r3, [r0, #20]
 801d46a:	82c3      	strh	r3, [r0, #22]
 801d46c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801d470:	6203      	str	r3, [r0, #32]
 801d472:	8483      	strh	r3, [r0, #36]	@ 0x24
 801d474:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801d476:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801d47a:	4a0e      	ldr	r2, [pc, #56]	@ (801d4b4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801d47c:	6343      	str	r3, [r0, #52]	@ 0x34
 801d47e:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801d482:	4b0d      	ldr	r3, [pc, #52]	@ (801d4b8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801d484:	6042      	str	r2, [r0, #4]
 801d486:	f9b3 6000 	ldrsh.w	r6, [r3]
 801d48a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801d48c:	4a0b      	ldr	r2, [pc, #44]	@ (801d4bc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801d48e:	4604      	mov	r4, r0
 801d490:	2101      	movs	r1, #1
 801d492:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801d496:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801d49a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d49e:	4628      	mov	r0, r5
 801d4a0:	4798      	blx	r3
 801d4a2:	6863      	ldr	r3, [r4, #4]
 801d4a4:	4628      	mov	r0, r5
 801d4a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801d4a8:	4631      	mov	r1, r6
 801d4aa:	4798      	blx	r3
 801d4ac:	4620      	mov	r0, r4
 801d4ae:	bd70      	pop	{r4, r5, r6, pc}
 801d4b0:	08033650 	.word	0x08033650
 801d4b4:	08033104 	.word	0x08033104
 801d4b8:	200138da 	.word	0x200138da
 801d4bc:	200138d8 	.word	0x200138d8

0801d4c0 <_ZN8touchgfx6Screen4drawEv>:
 801d4c0:	b507      	push	{r0, r1, r2, lr}
 801d4c2:	4b09      	ldr	r3, [pc, #36]	@ (801d4e8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801d4c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d4c8:	4b08      	ldr	r3, [pc, #32]	@ (801d4ec <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801d4ca:	f8ad 2004 	strh.w	r2, [sp, #4]
 801d4ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 801d4d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d4d6:	6803      	ldr	r3, [r0, #0]
 801d4d8:	2100      	movs	r1, #0
 801d4da:	9100      	str	r1, [sp, #0]
 801d4dc:	689b      	ldr	r3, [r3, #8]
 801d4de:	4669      	mov	r1, sp
 801d4e0:	4798      	blx	r3
 801d4e2:	b003      	add	sp, #12
 801d4e4:	f85d fb04 	ldr.w	pc, [sp], #4
 801d4e8:	200138d8 	.word	0x200138d8
 801d4ec:	200138da 	.word	0x200138da

0801d4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801d4f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4f4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801d4f8:	2b00      	cmp	r3, #0
 801d4fa:	b089      	sub	sp, #36	@ 0x24
 801d4fc:	4680      	mov	r8, r0
 801d4fe:	460c      	mov	r4, r1
 801d500:	4615      	mov	r5, r2
 801d502:	dd0e      	ble.n	801d522 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801d504:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801d508:	2b00      	cmp	r3, #0
 801d50a:	dd0a      	ble.n	801d522 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801d50c:	4628      	mov	r0, r5
 801d50e:	f7ff ff5b 	bl	801d3c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801d512:	4621      	mov	r1, r4
 801d514:	f7fd fe97 	bl	801b246 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801d518:	69eb      	ldr	r3, [r5, #28]
 801d51a:	b928      	cbnz	r0, 801d528 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801d51c:	461d      	mov	r5, r3
 801d51e:	2b00      	cmp	r3, #0
 801d520:	d1f4      	bne.n	801d50c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801d522:	b009      	add	sp, #36	@ 0x24
 801d524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d528:	ae04      	add	r6, sp, #16
 801d52a:	2b00      	cmp	r3, #0
 801d52c:	f000 80b5 	beq.w	801d69a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801d530:	682b      	ldr	r3, [r5, #0]
 801d532:	4629      	mov	r1, r5
 801d534:	68db      	ldr	r3, [r3, #12]
 801d536:	a802      	add	r0, sp, #8
 801d538:	4798      	blx	r3
 801d53a:	4628      	mov	r0, r5
 801d53c:	f7ff ff60 	bl	801d400 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801d540:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801d544:	4407      	add	r7, r0
 801d546:	4628      	mov	r0, r5
 801d548:	f7ff ff6e 	bl	801d428 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801d54c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801d550:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801d554:	f8ad 2014 	strh.w	r2, [sp, #20]
 801d558:	4418      	add	r0, r3
 801d55a:	4621      	mov	r1, r4
 801d55c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801d560:	f8ad 0012 	strh.w	r0, [sp, #18]
 801d564:	b23f      	sxth	r7, r7
 801d566:	4630      	mov	r0, r6
 801d568:	f8ad 3016 	strh.w	r3, [sp, #22]
 801d56c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801d570:	f7f7 ff4a 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801d574:	4628      	mov	r0, r5
 801d576:	f7ff ff27 	bl	801d3c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801d57a:	4602      	mov	r2, r0
 801d57c:	e896 0003 	ldmia.w	r6, {r0, r1}
 801d580:	ab06      	add	r3, sp, #24
 801d582:	e883 0003 	stmia.w	r3, {r0, r1}
 801d586:	4611      	mov	r1, r2
 801d588:	4618      	mov	r0, r3
 801d58a:	f7f7 ff3d 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801d58e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801d592:	f9b4 1000 	ldrsh.w	r1, [r4]
 801d596:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801d59a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801d59e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801d5a2:	4299      	cmp	r1, r3
 801d5a4:	d10b      	bne.n	801d5be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801d5a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d5aa:	4552      	cmp	r2, sl
 801d5ac:	d107      	bne.n	801d5be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801d5ae:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801d5b2:	455a      	cmp	r2, fp
 801d5b4:	d103      	bne.n	801d5be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801d5b6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801d5ba:	454a      	cmp	r2, r9
 801d5bc:	d06d      	beq.n	801d69a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801d5be:	f1bb 0f00 	cmp.w	fp, #0
 801d5c2:	dd65      	ble.n	801d690 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801d5c4:	f1b9 0f00 	cmp.w	r9, #0
 801d5c8:	dd62      	ble.n	801d690 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801d5ca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d5ce:	fa1f f08a 	uxth.w	r0, sl
 801d5d2:	4552      	cmp	r2, sl
 801d5d4:	9000      	str	r0, [sp, #0]
 801d5d6:	da12      	bge.n	801d5fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801d5d8:	9301      	str	r3, [sp, #4]
 801d5da:	9b00      	ldr	r3, [sp, #0]
 801d5dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d5e0:	f8ad 2012 	strh.w	r2, [sp, #18]
 801d5e4:	1a9a      	subs	r2, r3, r2
 801d5e6:	f8ad 1010 	strh.w	r1, [sp, #16]
 801d5ea:	f8ad 0014 	strh.w	r0, [sp, #20]
 801d5ee:	f8ad 2016 	strh.w	r2, [sp, #22]
 801d5f2:	69ea      	ldr	r2, [r5, #28]
 801d5f4:	4631      	mov	r1, r6
 801d5f6:	4640      	mov	r0, r8
 801d5f8:	f7ff ff7a 	bl	801d4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801d5fc:	9b01      	ldr	r3, [sp, #4]
 801d5fe:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d602:	429a      	cmp	r2, r3
 801d604:	b29f      	uxth	r7, r3
 801d606:	da0d      	bge.n	801d624 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801d608:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d60c:	1aba      	subs	r2, r7, r2
 801d60e:	f8ad a012 	strh.w	sl, [sp, #18]
 801d612:	f8ad 2014 	strh.w	r2, [sp, #20]
 801d616:	f8ad 9016 	strh.w	r9, [sp, #22]
 801d61a:	69ea      	ldr	r2, [r5, #28]
 801d61c:	4631      	mov	r1, r6
 801d61e:	4640      	mov	r0, r8
 801d620:	f7ff ff66 	bl	801d4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801d624:	8822      	ldrh	r2, [r4, #0]
 801d626:	88a3      	ldrh	r3, [r4, #4]
 801d628:	445f      	add	r7, fp
 801d62a:	4413      	add	r3, r2
 801d62c:	b29b      	uxth	r3, r3
 801d62e:	b2bf      	uxth	r7, r7
 801d630:	b23a      	sxth	r2, r7
 801d632:	b219      	sxth	r1, r3
 801d634:	4291      	cmp	r1, r2
 801d636:	dd0d      	ble.n	801d654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801d638:	1bdb      	subs	r3, r3, r7
 801d63a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d63e:	f8ad a012 	strh.w	sl, [sp, #18]
 801d642:	f8ad 3014 	strh.w	r3, [sp, #20]
 801d646:	f8ad 9016 	strh.w	r9, [sp, #22]
 801d64a:	69ea      	ldr	r2, [r5, #28]
 801d64c:	4631      	mov	r1, r6
 801d64e:	4640      	mov	r0, r8
 801d650:	f7ff ff4e 	bl	801d4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801d654:	88e2      	ldrh	r2, [r4, #6]
 801d656:	8863      	ldrh	r3, [r4, #2]
 801d658:	4413      	add	r3, r2
 801d65a:	9a00      	ldr	r2, [sp, #0]
 801d65c:	444a      	add	r2, r9
 801d65e:	b29b      	uxth	r3, r3
 801d660:	fa1f f982 	uxth.w	r9, r2
 801d664:	fa0f f289 	sxth.w	r2, r9
 801d668:	b219      	sxth	r1, r3
 801d66a:	428a      	cmp	r2, r1
 801d66c:	da15      	bge.n	801d69a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801d66e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d672:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d676:	f8ad 1014 	strh.w	r1, [sp, #20]
 801d67a:	eba3 0309 	sub.w	r3, r3, r9
 801d67e:	f8ad 0010 	strh.w	r0, [sp, #16]
 801d682:	f8ad 2012 	strh.w	r2, [sp, #18]
 801d686:	f8ad 3016 	strh.w	r3, [sp, #22]
 801d68a:	69ea      	ldr	r2, [r5, #28]
 801d68c:	4631      	mov	r1, r6
 801d68e:	e001      	b.n	801d694 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801d690:	69ea      	ldr	r2, [r5, #28]
 801d692:	4621      	mov	r1, r4
 801d694:	4640      	mov	r0, r8
 801d696:	f7ff ff2b 	bl	801d4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801d69a:	4628      	mov	r0, r5
 801d69c:	f7ff fe94 	bl	801d3c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801d6a0:	6861      	ldr	r1, [r4, #4]
 801d6a2:	4602      	mov	r2, r0
 801d6a4:	6820      	ldr	r0, [r4, #0]
 801d6a6:	4633      	mov	r3, r6
 801d6a8:	c303      	stmia	r3!, {r0, r1}
 801d6aa:	4611      	mov	r1, r2
 801d6ac:	4630      	mov	r0, r6
 801d6ae:	f7f7 feab 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801d6b2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801d6b6:	2b00      	cmp	r3, #0
 801d6b8:	f77f af33 	ble.w	801d522 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801d6bc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801d6c0:	2b00      	cmp	r3, #0
 801d6c2:	f77f af2e 	ble.w	801d522 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801d6c6:	4628      	mov	r0, r5
 801d6c8:	f7ff fe9a 	bl	801d400 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801d6cc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801d6d0:	1a18      	subs	r0, r3, r0
 801d6d2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801d6d6:	4628      	mov	r0, r5
 801d6d8:	f7ff fea6 	bl	801d428 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801d6dc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d6e0:	1a18      	subs	r0, r3, r0
 801d6e2:	f8ad 0012 	strh.w	r0, [sp, #18]
 801d6e6:	682b      	ldr	r3, [r5, #0]
 801d6e8:	4631      	mov	r1, r6
 801d6ea:	689b      	ldr	r3, [r3, #8]
 801d6ec:	4628      	mov	r0, r5
 801d6ee:	4798      	blx	r3
 801d6f0:	e717      	b.n	801d522 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801d6f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801d6f2:	b570      	push	{r4, r5, r6, lr}
 801d6f4:	460c      	mov	r4, r1
 801d6f6:	b086      	sub	sp, #24
 801d6f8:	1d06      	adds	r6, r0, #4
 801d6fa:	2300      	movs	r3, #0
 801d6fc:	4631      	mov	r1, r6
 801d6fe:	4605      	mov	r5, r0
 801d700:	a802      	add	r0, sp, #8
 801d702:	9301      	str	r3, [sp, #4]
 801d704:	f7ff f8cc 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d708:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801d70c:	8822      	ldrh	r2, [r4, #0]
 801d70e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801d712:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d716:	f8ad 0014 	strh.w	r0, [sp, #20]
 801d71a:	1ad2      	subs	r2, r2, r3
 801d71c:	8863      	ldrh	r3, [r4, #2]
 801d71e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d722:	1a5b      	subs	r3, r3, r1
 801d724:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801d728:	f8ad 1016 	strh.w	r1, [sp, #22]
 801d72c:	aa01      	add	r2, sp, #4
 801d72e:	a904      	add	r1, sp, #16
 801d730:	4630      	mov	r0, r6
 801d732:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d736:	f7f7 ff3f 	bl	80155b8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801d73a:	9a01      	ldr	r2, [sp, #4]
 801d73c:	b11a      	cbz	r2, 801d746 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801d73e:	4621      	mov	r1, r4
 801d740:	4628      	mov	r0, r5
 801d742:	f7ff fed5 	bl	801d4f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801d746:	b006      	add	sp, #24
 801d748:	bd70      	pop	{r4, r5, r6, pc}

0801d74a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801d74a:	b530      	push	{r4, r5, lr}
 801d74c:	4602      	mov	r2, r0
 801d74e:	4604      	mov	r4, r0
 801d750:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801d754:	b085      	sub	sp, #20
 801d756:	460d      	mov	r5, r1
 801d758:	6851      	ldr	r1, [r2, #4]
 801d75a:	466b      	mov	r3, sp
 801d75c:	c303      	stmia	r3!, {r0, r1}
 801d75e:	4629      	mov	r1, r5
 801d760:	4668      	mov	r0, sp
 801d762:	f7f7 fe51 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 801d766:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801d76a:	b12b      	cbz	r3, 801d778 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801d76c:	4669      	mov	r1, sp
 801d76e:	4620      	mov	r0, r4
 801d770:	f7ff ffbf 	bl	801d6f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801d774:	b005      	add	sp, #20
 801d776:	bd30      	pop	{r4, r5, pc}
 801d778:	3404      	adds	r4, #4
 801d77a:	4621      	mov	r1, r4
 801d77c:	a802      	add	r0, sp, #8
 801d77e:	f7ff f88f 	bl	801c8a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801d782:	f8bd 3000 	ldrh.w	r3, [sp]
 801d786:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801d78a:	1a9b      	subs	r3, r3, r2
 801d78c:	f8ad 3000 	strh.w	r3, [sp]
 801d790:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d794:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801d798:	4669      	mov	r1, sp
 801d79a:	1a9b      	subs	r3, r3, r2
 801d79c:	4620      	mov	r0, r4
 801d79e:	f8ad 3002 	strh.w	r3, [sp, #2]
 801d7a2:	f7f7 fed0 	bl	8015546 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801d7a6:	e7e5      	b.n	801d774 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801d7a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801d7a8:	680a      	ldr	r2, [r1, #0]
 801d7aa:	460b      	mov	r3, r1
 801d7ac:	6992      	ldr	r2, [r2, #24]
 801d7ae:	1d01      	adds	r1, r0, #4
 801d7b0:	4618      	mov	r0, r3
 801d7b2:	4710      	bx	r2

0801d7b4 <_ZN8touchgfx12TextProviderC1Ev>:
 801d7b4:	b538      	push	{r3, r4, r5, lr}
 801d7b6:	2500      	movs	r5, #0
 801d7b8:	2302      	movs	r3, #2
 801d7ba:	4604      	mov	r4, r0
 801d7bc:	e9c0 5500 	strd	r5, r5, [r0]
 801d7c0:	7403      	strb	r3, [r0, #16]
 801d7c2:	6145      	str	r5, [r0, #20]
 801d7c4:	7605      	strb	r5, [r0, #24]
 801d7c6:	83c5      	strh	r5, [r0, #30]
 801d7c8:	8405      	strh	r5, [r0, #32]
 801d7ca:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801d7cc:	8705      	strh	r5, [r0, #56]	@ 0x38
 801d7ce:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801d7d0:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 801d7d4:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 801d7d8:	220e      	movs	r2, #14
 801d7da:	4629      	mov	r1, r5
 801d7dc:	304c      	adds	r0, #76	@ 0x4c
 801d7de:	f011 f9e6 	bl	802ebae <memset>
 801d7e2:	2301      	movs	r3, #1
 801d7e4:	4620      	mov	r0, r4
 801d7e6:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801d7ea:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801d7ee:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801d7f2:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801d7f6:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801d7fa:	f7ec fd99 	bl	800a330 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801d7fe:	4620      	mov	r0, r4
 801d800:	bd38      	pop	{r3, r4, r5, pc}

0801d802 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801d802:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801d804:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d808:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 801d80a:	fab0 f080 	clz	r0, r0
 801d80e:	0940      	lsrs	r0, r0, #5
 801d810:	4770      	bx	lr

0801d812 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801d812:	b530      	push	{r4, r5, lr}
 801d814:	2500      	movs	r5, #0
 801d816:	2401      	movs	r4, #1
 801d818:	6843      	ldr	r3, [r0, #4]
 801d81a:	b913      	cbnz	r3, 801d822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801d81c:	6803      	ldr	r3, [r0, #0]
 801d81e:	b313      	cbz	r3, 801d866 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801d820:	6043      	str	r3, [r0, #4]
 801d822:	7e03      	ldrb	r3, [r0, #24]
 801d824:	b143      	cbz	r3, 801d838 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801d826:	6943      	ldr	r3, [r0, #20]
 801d828:	b12b      	cbz	r3, 801d836 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801d82a:	881a      	ldrh	r2, [r3, #0]
 801d82c:	b11a      	cbz	r2, 801d836 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801d82e:	1c9a      	adds	r2, r3, #2
 801d830:	6142      	str	r2, [r0, #20]
 801d832:	8818      	ldrh	r0, [r3, #0]
 801d834:	bd30      	pop	{r4, r5, pc}
 801d836:	7605      	strb	r5, [r0, #24]
 801d838:	6843      	ldr	r3, [r0, #4]
 801d83a:	8819      	ldrh	r1, [r3, #0]
 801d83c:	b199      	cbz	r1, 801d866 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801d83e:	1c9a      	adds	r2, r3, #2
 801d840:	2902      	cmp	r1, #2
 801d842:	6042      	str	r2, [r0, #4]
 801d844:	d1f5      	bne.n	801d832 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801d846:	7c03      	ldrb	r3, [r0, #16]
 801d848:	2b01      	cmp	r3, #1
 801d84a:	d8e5      	bhi.n	801d818 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d84c:	1c5a      	adds	r2, r3, #1
 801d84e:	3302      	adds	r3, #2
 801d850:	7402      	strb	r2, [r0, #16]
 801d852:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801d856:	6143      	str	r3, [r0, #20]
 801d858:	2b00      	cmp	r3, #0
 801d85a:	d0dd      	beq.n	801d818 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d85c:	881b      	ldrh	r3, [r3, #0]
 801d85e:	2b00      	cmp	r3, #0
 801d860:	d0da      	beq.n	801d818 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d862:	7604      	strb	r4, [r0, #24]
 801d864:	e7d8      	b.n	801d818 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801d866:	2000      	movs	r0, #0
 801d868:	e7e4      	b.n	801d834 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801d86a:	b430      	push	{r4, r5}
 801d86c:	6001      	str	r1, [r0, #0]
 801d86e:	2100      	movs	r1, #0
 801d870:	6041      	str	r1, [r0, #4]
 801d872:	6815      	ldr	r5, [r2, #0]
 801d874:	6085      	str	r5, [r0, #8]
 801d876:	6852      	ldr	r2, [r2, #4]
 801d878:	6443      	str	r3, [r0, #68]	@ 0x44
 801d87a:	9b02      	ldr	r3, [sp, #8]
 801d87c:	60c2      	str	r2, [r0, #12]
 801d87e:	7401      	strb	r1, [r0, #16]
 801d880:	6141      	str	r1, [r0, #20]
 801d882:	7601      	strb	r1, [r0, #24]
 801d884:	8701      	strh	r1, [r0, #56]	@ 0x38
 801d886:	8401      	strh	r1, [r0, #32]
 801d888:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 801d88c:	6483      	str	r3, [r0, #72]	@ 0x48
 801d88e:	bc30      	pop	{r4, r5}
 801d890:	f7ec bd4e 	b.w	800a330 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801d894 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801d894:	b408      	push	{r3}
 801d896:	b510      	push	{r4, lr}
 801d898:	b085      	sub	sp, #20
 801d89a:	ac07      	add	r4, sp, #28
 801d89c:	f854 3b04 	ldr.w	r3, [r4], #4
 801d8a0:	9300      	str	r3, [sp, #0]
 801d8a2:	4613      	mov	r3, r2
 801d8a4:	4622      	mov	r2, r4
 801d8a6:	9403      	str	r4, [sp, #12]
 801d8a8:	f7ff ffdf 	bl	801d86a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801d8ac:	b005      	add	sp, #20
 801d8ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d8b2:	b001      	add	sp, #4
 801d8b4:	4770      	bx	lr

0801d8b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801d8b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d8b8:	4605      	mov	r5, r0
 801d8ba:	4608      	mov	r0, r1
 801d8bc:	b1e9      	cbz	r1, 801d8fa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801d8be:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 801d8c2:	460b      	mov	r3, r1
 801d8c4:	f101 0708 	add.w	r7, r1, #8
 801d8c8:	4622      	mov	r2, r4
 801d8ca:	6818      	ldr	r0, [r3, #0]
 801d8cc:	6859      	ldr	r1, [r3, #4]
 801d8ce:	4626      	mov	r6, r4
 801d8d0:	c603      	stmia	r6!, {r0, r1}
 801d8d2:	3308      	adds	r3, #8
 801d8d4:	42bb      	cmp	r3, r7
 801d8d6:	4634      	mov	r4, r6
 801d8d8:	d1f7      	bne.n	801d8ca <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801d8da:	6818      	ldr	r0, [r3, #0]
 801d8dc:	6030      	str	r0, [r6, #0]
 801d8de:	889b      	ldrh	r3, [r3, #4]
 801d8e0:	80b3      	strh	r3, [r6, #4]
 801d8e2:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801d8e6:	015b      	lsls	r3, r3, #5
 801d8e8:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801d8ec:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 801d8f0:	430b      	orrs	r3, r1
 801d8f2:	425b      	negs	r3, r3
 801d8f4:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801d8f8:	4610      	mov	r0, r2
 801d8fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801d8fc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801d8fc:	b538      	push	{r3, r4, r5, lr}
 801d8fe:	460c      	mov	r4, r1
 801d900:	6811      	ldr	r1, [r2, #0]
 801d902:	4610      	mov	r0, r2
 801d904:	68cd      	ldr	r5, [r1, #12]
 801d906:	4619      	mov	r1, r3
 801d908:	47a8      	blx	r5
 801d90a:	2800      	cmp	r0, #0
 801d90c:	bf08      	it	eq
 801d90e:	4620      	moveq	r0, r4
 801d910:	bd38      	pop	{r3, r4, r5, pc}
	...

0801d914 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801d914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d918:	468c      	mov	ip, r1
 801d91a:	4605      	mov	r5, r0
 801d91c:	4614      	mov	r4, r2
 801d91e:	b942      	cbnz	r2, 801d932 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 801d920:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801d924:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 801d928:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801d92c:	4620      	mov	r0, r4
 801d92e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d932:	7b50      	ldrb	r0, [r2, #13]
 801d934:	8893      	ldrh	r3, [r2, #4]
 801d936:	0106      	lsls	r6, r0, #4
 801d938:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801d93c:	79e6      	ldrb	r6, [r4, #7]
 801d93e:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801d942:	4316      	orrs	r6, r2
 801d944:	185a      	adds	r2, r3, r1
 801d946:	b291      	uxth	r1, r2
 801d948:	291d      	cmp	r1, #29
 801d94a:	b2b7      	uxth	r7, r6
 801d94c:	d87e      	bhi.n	801da4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801d94e:	2201      	movs	r2, #1
 801d950:	408a      	lsls	r2, r1
 801d952:	498a      	ldr	r1, [pc, #552]	@ (801db7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 801d954:	420a      	tst	r2, r1
 801d956:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801d95a:	d12d      	bne.n	801d9b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801d95c:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801d960:	d074      	beq.n	801da4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801d962:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d966:	4623      	mov	r3, r4
 801d968:	f104 0e08 	add.w	lr, r4, #8
 801d96c:	4614      	mov	r4, r2
 801d96e:	6818      	ldr	r0, [r3, #0]
 801d970:	6859      	ldr	r1, [r3, #4]
 801d972:	4694      	mov	ip, r2
 801d974:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801d978:	3308      	adds	r3, #8
 801d97a:	4573      	cmp	r3, lr
 801d97c:	4662      	mov	r2, ip
 801d97e:	d1f6      	bne.n	801d96e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801d980:	6818      	ldr	r0, [r3, #0]
 801d982:	f8cc 0000 	str.w	r0, [ip]
 801d986:	889b      	ldrh	r3, [r3, #4]
 801d988:	f8ac 3004 	strh.w	r3, [ip, #4]
 801d98c:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801d990:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 801d994:	b2b3      	uxth	r3, r6
 801d996:	1aca      	subs	r2, r1, r3
 801d998:	b292      	uxth	r2, r2
 801d99a:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 801d99e:	10d2      	asrs	r2, r2, #3
 801d9a0:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 801d9a4:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 801d9a8:	4302      	orrs	r2, r0
 801d9aa:	1bcf      	subs	r7, r1, r7
 801d9ac:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 801d9b0:	1afb      	subs	r3, r7, r3
 801d9b2:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 801d9b6:	e7b9      	b.n	801d92c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801d9b8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801d9bc:	4623      	mov	r3, r4
 801d9be:	f104 0808 	add.w	r8, r4, #8
 801d9c2:	4614      	mov	r4, r2
 801d9c4:	6818      	ldr	r0, [r3, #0]
 801d9c6:	6859      	ldr	r1, [r3, #4]
 801d9c8:	4696      	mov	lr, r2
 801d9ca:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d9ce:	3308      	adds	r3, #8
 801d9d0:	4543      	cmp	r3, r8
 801d9d2:	4672      	mov	r2, lr
 801d9d4:	d1f6      	bne.n	801d9c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 801d9d6:	6818      	ldr	r0, [r3, #0]
 801d9d8:	f8ce 0000 	str.w	r0, [lr]
 801d9dc:	889b      	ldrh	r3, [r3, #4]
 801d9de:	f8ae 3004 	strh.w	r3, [lr, #4]
 801d9e2:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 801d9e4:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 801d9e8:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 801d9ea:	f640 6333 	movw	r3, #3635	@ 0xe33
 801d9ee:	4299      	cmp	r1, r3
 801d9f0:	d111      	bne.n	801da16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801d9f2:	f8dc 3000 	ldr.w	r3, [ip]
 801d9f6:	4660      	mov	r0, ip
 801d9f8:	68db      	ldr	r3, [r3, #12]
 801d9fa:	4798      	blx	r3
 801d9fc:	7b41      	ldrb	r1, [r0, #13]
 801d9fe:	00cb      	lsls	r3, r1, #3
 801da00:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801da04:	7a03      	ldrb	r3, [r0, #8]
 801da06:	4313      	orrs	r3, r2
 801da08:	064a      	lsls	r2, r1, #25
 801da0a:	bf44      	itt	mi
 801da0c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801da10:	b21b      	sxthmi	r3, r3
 801da12:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801da16:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801da1a:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801da1e:	443b      	add	r3, r7
 801da20:	4433      	add	r3, r6
 801da22:	b29b      	uxth	r3, r3
 801da24:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801da28:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801da2c:	10db      	asrs	r3, r3, #3
 801da2e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801da32:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801da36:	4313      	orrs	r3, r2
 801da38:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801da3c:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801da40:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 801da44:	1a9b      	subs	r3, r3, r2
 801da46:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801da4a:	e76f      	b.n	801d92c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801da4c:	f023 0204 	bic.w	r2, r3, #4
 801da50:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801da54:	428a      	cmp	r2, r1
 801da56:	d003      	beq.n	801da60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 801da58:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801da5c:	4293      	cmp	r3, r2
 801da5e:	d137      	bne.n	801dad0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 801da60:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 801da64:	4622      	mov	r2, r4
 801da66:	f104 0808 	add.w	r8, r4, #8
 801da6a:	4634      	mov	r4, r6
 801da6c:	6810      	ldr	r0, [r2, #0]
 801da6e:	6851      	ldr	r1, [r2, #4]
 801da70:	46b6      	mov	lr, r6
 801da72:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801da76:	3208      	adds	r2, #8
 801da78:	4542      	cmp	r2, r8
 801da7a:	4676      	mov	r6, lr
 801da7c:	d1f6      	bne.n	801da6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801da7e:	6810      	ldr	r0, [r2, #0]
 801da80:	f8ce 0000 	str.w	r0, [lr]
 801da84:	8892      	ldrh	r2, [r2, #4]
 801da86:	f8ae 2004 	strh.w	r2, [lr, #4]
 801da8a:	3b01      	subs	r3, #1
 801da8c:	b29b      	uxth	r3, r3
 801da8e:	4662      	mov	r2, ip
 801da90:	4621      	mov	r1, r4
 801da92:	4628      	mov	r0, r5
 801da94:	f7ff ff32 	bl	801d8fc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801da98:	7b41      	ldrb	r1, [r0, #13]
 801da9a:	00cb      	lsls	r3, r1, #3
 801da9c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801daa0:	7a03      	ldrb	r3, [r0, #8]
 801daa2:	0648      	lsls	r0, r1, #25
 801daa4:	ea43 0302 	orr.w	r3, r3, r2
 801daa8:	bf44      	itt	mi
 801daaa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801daae:	b21b      	sxthmi	r3, r3
 801dab0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801dab4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801dab8:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 801dabc:	005b      	lsls	r3, r3, #1
 801dabe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801dac2:	4313      	orrs	r3, r2
 801dac4:	115a      	asrs	r2, r3, #5
 801dac6:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801daca:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 801dace:	e046      	b.n	801db5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 801dad0:	00c2      	lsls	r2, r0, #3
 801dad2:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 801dad6:	7a22      	ldrb	r2, [r4, #8]
 801dad8:	430a      	orrs	r2, r1
 801dada:	0641      	lsls	r1, r0, #25
 801dadc:	bf44      	itt	mi
 801dade:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 801dae2:	b212      	sxthmi	r2, r2
 801dae4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801dae8:	f640 6109 	movw	r1, #3593	@ 0xe09
 801daec:	f023 0210 	bic.w	r2, r3, #16
 801daf0:	428a      	cmp	r2, r1
 801daf2:	d003      	beq.n	801dafc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 801daf4:	f640 6213 	movw	r2, #3603	@ 0xe13
 801daf8:	4293      	cmp	r3, r2
 801dafa:	d13d      	bne.n	801db78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 801dafc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801db00:	f104 0808 	add.w	r8, r4, #8
 801db04:	4696      	mov	lr, r2
 801db06:	6820      	ldr	r0, [r4, #0]
 801db08:	6861      	ldr	r1, [r4, #4]
 801db0a:	4616      	mov	r6, r2
 801db0c:	c603      	stmia	r6!, {r0, r1}
 801db0e:	3408      	adds	r4, #8
 801db10:	4544      	cmp	r4, r8
 801db12:	4632      	mov	r2, r6
 801db14:	d1f7      	bne.n	801db06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 801db16:	6820      	ldr	r0, [r4, #0]
 801db18:	6030      	str	r0, [r6, #0]
 801db1a:	88a1      	ldrh	r1, [r4, #4]
 801db1c:	80b1      	strh	r1, [r6, #4]
 801db1e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 801db22:	0076      	lsls	r6, r6, #1
 801db24:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801db28:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801db2c:	4316      	orrs	r6, r2
 801db2e:	f640 6213 	movw	r2, #3603	@ 0xe13
 801db32:	4293      	cmp	r3, r2
 801db34:	bf1a      	itte	ne
 801db36:	f103 33ff 	addne.w	r3, r3, #4294967295
 801db3a:	b29b      	uxthne	r3, r3
 801db3c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 801db40:	4662      	mov	r2, ip
 801db42:	4671      	mov	r1, lr
 801db44:	4628      	mov	r0, r5
 801db46:	4674      	mov	r4, lr
 801db48:	f7ff fed8 	bl	801d8fc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801db4c:	7b43      	ldrb	r3, [r0, #13]
 801db4e:	7a82      	ldrb	r2, [r0, #10]
 801db50:	005b      	lsls	r3, r3, #1
 801db52:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801db56:	4313      	orrs	r3, r2
 801db58:	1af6      	subs	r6, r6, r3
 801db5a:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801db5e:	7b61      	ldrb	r1, [r4, #13]
 801db60:	00cb      	lsls	r3, r1, #3
 801db62:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801db66:	7a23      	ldrb	r3, [r4, #8]
 801db68:	4313      	orrs	r3, r2
 801db6a:	064a      	lsls	r2, r1, #25
 801db6c:	bf44      	itt	mi
 801db6e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801db72:	b21b      	sxthmi	r3, r3
 801db74:	1bdb      	subs	r3, r3, r7
 801db76:	e71c      	b.n	801d9b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801db78:	2300      	movs	r3, #0
 801db7a:	e7a6      	b.n	801daca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 801db7c:	3fc00079 	.word	0x3fc00079

0801db80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801db80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801db84:	4604      	mov	r4, r0
 801db86:	b942      	cbnz	r2, 801db9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801db88:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801db8c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801db90:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 801db94:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 801db98:	e047      	b.n	801dc2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801db9a:	7b51      	ldrb	r1, [r2, #13]
 801db9c:	8893      	ldrh	r3, [r2, #4]
 801db9e:	010d      	lsls	r5, r1, #4
 801dba0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 801dba4:	79d5      	ldrb	r5, [r2, #7]
 801dba6:	4305      	orrs	r5, r0
 801dba8:	2d04      	cmp	r5, #4
 801dbaa:	bfcc      	ite	gt
 801dbac:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801dbb0:	f04f 0e01 	movle.w	lr, #1
 801dbb4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 801dbb8:	f200 80ab 	bhi.w	801dd12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801dbbc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 801dbc0:	4283      	cmp	r3, r0
 801dbc2:	d216      	bcs.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dbc4:	f240 605b 	movw	r0, #1627	@ 0x65b
 801dbc8:	4283      	cmp	r3, r0
 801dbca:	d859      	bhi.n	801dc80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801dbcc:	f240 6057 	movw	r0, #1623	@ 0x657
 801dbd0:	4283      	cmp	r3, r0
 801dbd2:	d20e      	bcs.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dbd4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801dbd8:	d24a      	bcs.n	801dc70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801dbda:	f240 604e 	movw	r0, #1614	@ 0x64e
 801dbde:	4283      	cmp	r3, r0
 801dbe0:	d207      	bcs.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dbe2:	f240 601a 	movw	r0, #1562	@ 0x61a
 801dbe6:	4283      	cmp	r3, r0
 801dbe8:	d02a      	beq.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dbea:	d821      	bhi.n	801dc30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801dbec:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801dbf0:	d35b      	bcc.n	801dcaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801dbf2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 801dbf6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801dbfa:	f040 80d0 	bne.w	801dd9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801dbfe:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801dc02:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801dc06:	f040 80ca 	bne.w	801dd9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801dc0a:	00cb      	lsls	r3, r1, #3
 801dc0c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801dc10:	7a13      	ldrb	r3, [r2, #8]
 801dc12:	0649      	lsls	r1, r1, #25
 801dc14:	ea43 0300 	orr.w	r3, r3, r0
 801dc18:	bf44      	itt	mi
 801dc1a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801dc1e:	b21b      	sxthmi	r3, r3
 801dc20:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801dc24:	1b5d      	subs	r5, r3, r5
 801dc26:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801dc2a:	4610      	mov	r0, r2
 801dc2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dc30:	f240 604b 	movw	r0, #1611	@ 0x64b
 801dc34:	4283      	cmp	r3, r0
 801dc36:	d338      	bcc.n	801dcaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801dc38:	f240 604c 	movw	r0, #1612	@ 0x64c
 801dc3c:	4283      	cmp	r3, r0
 801dc3e:	d9d8      	bls.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dc40:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 801dc44:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 801dc48:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801dc4c:	f040 80f2 	bne.w	801de34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801dc50:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801dc54:	f040 80ee 	bne.w	801de34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801dc58:	00cb      	lsls	r3, r1, #3
 801dc5a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801dc5e:	7a13      	ldrb	r3, [r2, #8]
 801dc60:	064e      	lsls	r6, r1, #25
 801dc62:	ea43 0300 	orr.w	r3, r3, r0
 801dc66:	bf44      	itt	mi
 801dc68:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801dc6c:	b21b      	sxthmi	r3, r3
 801dc6e:	e7d9      	b.n	801dc24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801dc70:	f240 6054 	movw	r0, #1620	@ 0x654
 801dc74:	4283      	cmp	r3, r0
 801dc76:	d8e3      	bhi.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dc78:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801dc7c:	d9e0      	bls.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dc7e:	e7b8      	b.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dc80:	f240 6074 	movw	r0, #1652	@ 0x674
 801dc84:	4283      	cmp	r3, r0
 801dc86:	d0b4      	beq.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dc88:	d82d      	bhi.n	801dce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801dc8a:	f240 605e 	movw	r0, #1630	@ 0x65e
 801dc8e:	4283      	cmp	r3, r0
 801dc90:	d804      	bhi.n	801dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801dc92:	f240 605d 	movw	r0, #1629	@ 0x65d
 801dc96:	4283      	cmp	r3, r0
 801dc98:	d3d2      	bcc.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dc9a:	e7aa      	b.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dc9c:	f240 605f 	movw	r0, #1631	@ 0x65f
 801dca0:	4283      	cmp	r3, r0
 801dca2:	d0cd      	beq.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dca4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 801dca8:	d0a3      	beq.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dcaa:	00cb      	lsls	r3, r1, #3
 801dcac:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801dcb0:	7a13      	ldrb	r3, [r2, #8]
 801dcb2:	0649      	lsls	r1, r1, #25
 801dcb4:	ea43 0300 	orr.w	r3, r3, r0
 801dcb8:	bf44      	itt	mi
 801dcba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801dcbe:	b21b      	sxthmi	r3, r3
 801dcc0:	1b5d      	subs	r5, r3, r5
 801dcc2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801dcc6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801dcca:	7b53      	ldrb	r3, [r2, #13]
 801dccc:	015b      	lsls	r3, r3, #5
 801dcce:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801dcd2:	7993      	ldrb	r3, [r2, #6]
 801dcd4:	430b      	orrs	r3, r1
 801dcd6:	005b      	lsls	r3, r3, #1
 801dcd8:	2105      	movs	r1, #5
 801dcda:	fb93 f3f1 	sdiv	r3, r3, r1
 801dcde:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801dce2:	440b      	add	r3, r1
 801dce4:	e756      	b.n	801db94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801dce6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801dcea:	4283      	cmp	r3, r0
 801dcec:	d809      	bhi.n	801dd02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801dcee:	f240 60df 	movw	r0, #1759	@ 0x6df
 801dcf2:	4283      	cmp	r3, r0
 801dcf4:	f4bf af7d 	bcs.w	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dcf8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 801dcfc:	2b05      	cmp	r3, #5
 801dcfe:	d8d4      	bhi.n	801dcaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801dd00:	e777      	b.n	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dd02:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 801dd06:	4283      	cmp	r3, r0
 801dd08:	d09a      	beq.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dd0a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801dd0e:	4283      	cmp	r3, r0
 801dd10:	e7ca      	b.n	801dca8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801dd12:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 801dd16:	d22b      	bcs.n	801dd70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801dd18:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801dd1c:	4283      	cmp	r3, r0
 801dd1e:	d28f      	bcs.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dd20:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 801dd24:	4283      	cmp	r3, r0
 801dd26:	d816      	bhi.n	801dd56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801dd28:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801dd2c:	4283      	cmp	r3, r0
 801dd2e:	f4bf af60 	bcs.w	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dd32:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 801dd36:	4283      	cmp	r3, r0
 801dd38:	d80a      	bhi.n	801dd50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801dd3a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801dd3e:	4283      	cmp	r3, r0
 801dd40:	f4bf af57 	bcs.w	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dd44:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 801dd48:	4283      	cmp	r3, r0
 801dd4a:	f43f af79 	beq.w	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dd4e:	e7ac      	b.n	801dcaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801dd50:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 801dd54:	e7f8      	b.n	801dd48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801dd56:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801dd5a:	4283      	cmp	r3, r0
 801dd5c:	d802      	bhi.n	801dd64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801dd5e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801dd62:	e798      	b.n	801dc96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801dd64:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 801dd68:	4283      	cmp	r3, r0
 801dd6a:	f47f af42 	bne.w	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dd6e:	e767      	b.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dd70:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 801dd74:	4283      	cmp	r3, r0
 801dd76:	f43f af63 	beq.w	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dd7a:	d802      	bhi.n	801dd82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801dd7c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801dd80:	e7f2      	b.n	801dd68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801dd82:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801dd86:	4283      	cmp	r3, r0
 801dd88:	d805      	bhi.n	801dd96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801dd8a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801dd8e:	4283      	cmp	r3, r0
 801dd90:	f4ff af2f 	bcc.w	801dbf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801dd94:	e754      	b.n	801dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801dd96:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801dd9a:	4283      	cmp	r3, r0
 801dd9c:	e7af      	b.n	801dcfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801dd9e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801dda2:	4617      	mov	r7, r2
 801dda4:	f102 0808 	add.w	r8, r2, #8
 801dda8:	4666      	mov	r6, ip
 801ddaa:	6838      	ldr	r0, [r7, #0]
 801ddac:	6879      	ldr	r1, [r7, #4]
 801ddae:	46e6      	mov	lr, ip
 801ddb0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801ddb4:	3708      	adds	r7, #8
 801ddb6:	4547      	cmp	r7, r8
 801ddb8:	46f4      	mov	ip, lr
 801ddba:	d1f6      	bne.n	801ddaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801ddbc:	6838      	ldr	r0, [r7, #0]
 801ddbe:	f8ce 0000 	str.w	r0, [lr]
 801ddc2:	88b9      	ldrh	r1, [r7, #4]
 801ddc4:	f8ae 1004 	strh.w	r1, [lr, #4]
 801ddc8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801ddcc:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801ddd0:	d009      	beq.n	801dde6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801ddd2:	7b51      	ldrb	r1, [r2, #13]
 801ddd4:	7992      	ldrb	r2, [r2, #6]
 801ddd6:	0149      	lsls	r1, r1, #5
 801ddd8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801dddc:	4311      	orrs	r1, r2
 801ddde:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801dde2:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801dde6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801ddea:	b2ad      	uxth	r5, r5
 801ddec:	d00d      	beq.n	801de0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801ddee:	442b      	add	r3, r5
 801ddf0:	b29b      	uxth	r3, r3
 801ddf2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801ddf6:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801ddfa:	10db      	asrs	r3, r3, #3
 801ddfc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801de00:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801de04:	4313      	orrs	r3, r2
 801de06:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801de0a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801de0e:	00cb      	lsls	r3, r1, #3
 801de10:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801de14:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801de18:	064f      	lsls	r7, r1, #25
 801de1a:	ea43 0302 	orr.w	r3, r3, r2
 801de1e:	bf44      	itt	mi
 801de20:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801de24:	b21b      	sxthmi	r3, r3
 801de26:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801de2a:	1b5b      	subs	r3, r3, r5
 801de2c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801de30:	4632      	mov	r2, r6
 801de32:	e6fa      	b.n	801dc2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801de34:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801de38:	4617      	mov	r7, r2
 801de3a:	f102 0908 	add.w	r9, r2, #8
 801de3e:	4666      	mov	r6, ip
 801de40:	6838      	ldr	r0, [r7, #0]
 801de42:	6879      	ldr	r1, [r7, #4]
 801de44:	46e0      	mov	r8, ip
 801de46:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801de4a:	3708      	adds	r7, #8
 801de4c:	454f      	cmp	r7, r9
 801de4e:	46c4      	mov	ip, r8
 801de50:	d1f6      	bne.n	801de40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801de52:	6838      	ldr	r0, [r7, #0]
 801de54:	f8c8 0000 	str.w	r0, [r8]
 801de58:	88b9      	ldrh	r1, [r7, #4]
 801de5a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801de5e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801de62:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801de66:	d009      	beq.n	801de7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801de68:	7b51      	ldrb	r1, [r2, #13]
 801de6a:	7992      	ldrb	r2, [r2, #6]
 801de6c:	0149      	lsls	r1, r1, #5
 801de6e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801de72:	4311      	orrs	r1, r2
 801de74:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801de78:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801de7c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801de80:	d00e      	beq.n	801dea0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801de82:	eba3 030e 	sub.w	r3, r3, lr
 801de86:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801de8a:	b29b      	uxth	r3, r3
 801de8c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801de90:	10db      	asrs	r3, r3, #3
 801de92:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801de96:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801de9a:	4313      	orrs	r3, r2
 801de9c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801dea0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801dea4:	00cb      	lsls	r3, r1, #3
 801dea6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801deaa:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801deae:	0648      	lsls	r0, r1, #25
 801deb0:	ea43 0302 	orr.w	r3, r3, r2
 801deb4:	bf44      	itt	mi
 801deb6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801deba:	b21b      	sxthmi	r3, r3
 801debc:	1b5d      	subs	r5, r3, r5
 801debe:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801dec2:	e7b5      	b.n	801de30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801dec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801dec4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dec8:	461e      	mov	r6, r3
 801deca:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801decc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ded0:	4604      	mov	r4, r0
 801ded2:	4617      	mov	r7, r2
 801ded4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801ded8:	f7ec f9e8 	bl	800a2ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801dedc:	4605      	mov	r5, r0
 801dede:	b918      	cbnz	r0, 801dee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801dee0:	6030      	str	r0, [r6, #0]
 801dee2:	4628      	mov	r0, r5
 801dee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801dee8:	683b      	ldr	r3, [r7, #0]
 801deea:	4601      	mov	r1, r0
 801deec:	68db      	ldr	r3, [r3, #12]
 801deee:	4638      	mov	r0, r7
 801def0:	4798      	blx	r3
 801def2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801def6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801defa:	4602      	mov	r2, r0
 801defc:	6030      	str	r0, [r6, #0]
 801defe:	d213      	bcs.n	801df28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801df00:	4643      	mov	r3, r8
 801df02:	4639      	mov	r1, r7
 801df04:	4620      	mov	r0, r4
 801df06:	f7ff fe3b 	bl	801db80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801df0a:	6030      	str	r0, [r6, #0]
 801df0c:	6833      	ldr	r3, [r6, #0]
 801df0e:	b143      	cbz	r3, 801df22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801df10:	7b5a      	ldrb	r2, [r3, #13]
 801df12:	7a9b      	ldrb	r3, [r3, #10]
 801df14:	0052      	lsls	r2, r2, #1
 801df16:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801df1a:	4313      	orrs	r3, r2
 801df1c:	bf0c      	ite	eq
 801df1e:	2301      	moveq	r3, #1
 801df20:	2300      	movne	r3, #0
 801df22:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801df26:	e7dc      	b.n	801dee2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801df28:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801df2c:	b29b      	uxth	r3, r3
 801df2e:	2b7f      	cmp	r3, #127	@ 0x7f
 801df30:	d804      	bhi.n	801df3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801df32:	4639      	mov	r1, r7
 801df34:	4620      	mov	r0, r4
 801df36:	f7ff fced 	bl	801d914 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801df3a:	e7e6      	b.n	801df0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801df3c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801df40:	2b00      	cmp	r3, #0
 801df42:	d0e3      	beq.n	801df0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801df44:	f640 1302 	movw	r3, #2306	@ 0x902
 801df48:	429d      	cmp	r5, r3
 801df4a:	d1df      	bne.n	801df0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801df4c:	4601      	mov	r1, r0
 801df4e:	4620      	mov	r0, r4
 801df50:	f7ff fcb1 	bl	801d8b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801df54:	e7d9      	b.n	801df0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801df56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801df56:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801df5a:	461e      	mov	r6, r3
 801df5c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801df5e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801df62:	4604      	mov	r4, r0
 801df64:	4617      	mov	r7, r2
 801df66:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801df6a:	f7ec f99f 	bl	800a2ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801df6e:	4605      	mov	r5, r0
 801df70:	b918      	cbnz	r0, 801df7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801df72:	6030      	str	r0, [r6, #0]
 801df74:	4628      	mov	r0, r5
 801df76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801df7a:	683b      	ldr	r3, [r7, #0]
 801df7c:	4601      	mov	r1, r0
 801df7e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801df82:	4638      	mov	r0, r7
 801df84:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801df88:	47c8      	blx	r9
 801df8a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801df8e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801df92:	4602      	mov	r2, r0
 801df94:	6030      	str	r0, [r6, #0]
 801df96:	d213      	bcs.n	801dfc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801df98:	4643      	mov	r3, r8
 801df9a:	4639      	mov	r1, r7
 801df9c:	4620      	mov	r0, r4
 801df9e:	f7ff fdef 	bl	801db80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801dfa2:	6030      	str	r0, [r6, #0]
 801dfa4:	6833      	ldr	r3, [r6, #0]
 801dfa6:	b143      	cbz	r3, 801dfba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801dfa8:	7b5a      	ldrb	r2, [r3, #13]
 801dfaa:	7a9b      	ldrb	r3, [r3, #10]
 801dfac:	0052      	lsls	r2, r2, #1
 801dfae:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801dfb2:	4313      	orrs	r3, r2
 801dfb4:	bf0c      	ite	eq
 801dfb6:	2301      	moveq	r3, #1
 801dfb8:	2300      	movne	r3, #0
 801dfba:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801dfbe:	e7d9      	b.n	801df74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801dfc0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801dfc4:	b29b      	uxth	r3, r3
 801dfc6:	2b7f      	cmp	r3, #127	@ 0x7f
 801dfc8:	d804      	bhi.n	801dfd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801dfca:	4639      	mov	r1, r7
 801dfcc:	4620      	mov	r0, r4
 801dfce:	f7ff fca1 	bl	801d914 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801dfd2:	e7e6      	b.n	801dfa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801dfd4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801dfd8:	2b00      	cmp	r3, #0
 801dfda:	d0e3      	beq.n	801dfa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801dfdc:	f640 1302 	movw	r3, #2306	@ 0x902
 801dfe0:	429d      	cmp	r5, r3
 801dfe2:	d1df      	bne.n	801dfa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801dfe4:	4601      	mov	r1, r0
 801dfe6:	4620      	mov	r0, r4
 801dfe8:	f7ff fc65 	bl	801d8b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801dfec:	e7d9      	b.n	801dfa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801dfee <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801dfee:	b510      	push	{r4, lr}
 801dff0:	4604      	mov	r4, r0
 801dff2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 801dff6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801dff8:	b1f1      	cbz	r1, 801e038 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801dffa:	2b0a      	cmp	r3, #10
 801dffc:	d02f      	beq.n	801e05e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801dffe:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801e000:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801e004:	3901      	subs	r1, #1
 801e006:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 801e008:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 801e00c:	1c51      	adds	r1, r2, #1
 801e00e:	b289      	uxth	r1, r1
 801e010:	2901      	cmp	r1, #1
 801e012:	bf84      	itt	hi
 801e014:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801e018:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801e01a:	f103 0201 	add.w	r2, r3, #1
 801e01e:	8722      	strh	r2, [r4, #56]	@ 0x38
 801e020:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801e022:	bf98      	it	ls
 801e024:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801e026:	4413      	add	r3, r2
 801e028:	b29b      	uxth	r3, r3
 801e02a:	2b09      	cmp	r3, #9
 801e02c:	bf88      	it	hi
 801e02e:	3b0a      	subhi	r3, #10
 801e030:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e034:	8458      	strh	r0, [r3, #34]	@ 0x22
 801e036:	e7dc      	b.n	801dff2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801e038:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801e03a:	2b0a      	cmp	r3, #10
 801e03c:	d00f      	beq.n	801e05e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801e03e:	4620      	mov	r0, r4
 801e040:	f7ff fbe7 	bl	801d812 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801e044:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801e046:	1c5a      	adds	r2, r3, #1
 801e048:	8722      	strh	r2, [r4, #56]	@ 0x38
 801e04a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801e04c:	4413      	add	r3, r2
 801e04e:	b29b      	uxth	r3, r3
 801e050:	2b09      	cmp	r3, #9
 801e052:	bf88      	it	hi
 801e054:	3b0a      	subhi	r3, #10
 801e056:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e05a:	8458      	strh	r0, [r3, #34]	@ 0x22
 801e05c:	e7ec      	b.n	801e038 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801e05e:	bd10      	pop	{r4, pc}

0801e060 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801e060:	b538      	push	{r3, r4, r5, lr}
 801e062:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801e064:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801e068:	4604      	mov	r4, r0
 801e06a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 801e06c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801e06e:	3a01      	subs	r2, #1
 801e070:	8702      	strh	r2, [r0, #56]	@ 0x38
 801e072:	1c5a      	adds	r2, r3, #1
 801e074:	b292      	uxth	r2, r2
 801e076:	2a09      	cmp	r2, #9
 801e078:	bf86      	itte	hi
 801e07a:	3b09      	subhi	r3, #9
 801e07c:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801e07e:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801e080:	f7ff ffb5 	bl	801dfee <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801e084:	8c23      	ldrh	r3, [r4, #32]
 801e086:	2b01      	cmp	r3, #1
 801e088:	bf9c      	itt	ls
 801e08a:	3301      	addls	r3, #1
 801e08c:	8423      	strhls	r3, [r4, #32]
 801e08e:	8be3      	ldrh	r3, [r4, #30]
 801e090:	b90b      	cbnz	r3, 801e096 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801e092:	2302      	movs	r3, #2
 801e094:	83e3      	strh	r3, [r4, #30]
 801e096:	8be3      	ldrh	r3, [r4, #30]
 801e098:	3b01      	subs	r3, #1
 801e09a:	b29b      	uxth	r3, r3
 801e09c:	83e3      	strh	r3, [r4, #30]
 801e09e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e0a2:	4628      	mov	r0, r5
 801e0a4:	8365      	strh	r5, [r4, #26]
 801e0a6:	bd38      	pop	{r3, r4, r5, pc}

0801e0a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801e0a8:	428a      	cmp	r2, r1
 801e0aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e0ae:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801e0b0:	d931      	bls.n	801e116 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801e0b2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 801e0b4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 801e0b8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 801e0bc:	19ee      	adds	r6, r5, r7
 801e0be:	1a54      	subs	r4, r2, r1
 801e0c0:	3e01      	subs	r6, #1
 801e0c2:	fa1f fe84 	uxth.w	lr, r4
 801e0c6:	b2b4      	uxth	r4, r6
 801e0c8:	eba4 090e 	sub.w	r9, r4, lr
 801e0cc:	fa1f f989 	uxth.w	r9, r9
 801e0d0:	2c09      	cmp	r4, #9
 801e0d2:	4626      	mov	r6, r4
 801e0d4:	bf88      	it	hi
 801e0d6:	f1a4 060a 	subhi.w	r6, r4, #10
 801e0da:	f1bc 0f00 	cmp.w	ip, #0
 801e0de:	bf08      	it	eq
 801e0e0:	f04f 0c02 	moveq.w	ip, #2
 801e0e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e0e8:	f10c 3cff 	add.w	ip, ip, #4294967295
 801e0ec:	fa1f fc8c 	uxth.w	ip, ip
 801e0f0:	3c01      	subs	r4, #1
 801e0f2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801e0f6:	b2a4      	uxth	r4, r4
 801e0f8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801e0fc:	454c      	cmp	r4, r9
 801e0fe:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801e102:	d1e5      	bne.n	801e0d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801e104:	eba5 050e 	sub.w	r5, r5, lr
 801e108:	eb0e 0408 	add.w	r4, lr, r8
 801e10c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801e10e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801e112:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 801e116:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 801e118:	1a64      	subs	r4, r4, r1
 801e11a:	4439      	add	r1, r7
 801e11c:	b289      	uxth	r1, r1
 801e11e:	2909      	cmp	r1, #9
 801e120:	bf88      	it	hi
 801e122:	390a      	subhi	r1, #10
 801e124:	8704      	strh	r4, [r0, #56]	@ 0x38
 801e126:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801e128:	250a      	movs	r5, #10
 801e12a:	b18a      	cbz	r2, 801e150 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801e12c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801e12e:	3a01      	subs	r2, #1
 801e130:	b292      	uxth	r2, r2
 801e132:	3101      	adds	r1, #1
 801e134:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801e138:	8701      	strh	r1, [r0, #56]	@ 0x38
 801e13a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801e13c:	b901      	cbnz	r1, 801e140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801e13e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801e140:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801e142:	3901      	subs	r1, #1
 801e144:	b289      	uxth	r1, r1
 801e146:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801e148:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801e14c:	844c      	strh	r4, [r1, #34]	@ 0x22
 801e14e:	e7ec      	b.n	801e12a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801e150:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e154:	f7ff bf4b 	b.w	801dfee <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801e158 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801e158:	b570      	push	{r4, r5, r6, lr}
 801e15a:	2500      	movs	r5, #0
 801e15c:	4295      	cmp	r5, r2
 801e15e:	d011      	beq.n	801e184 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801e160:	8bc4      	ldrh	r4, [r0, #30]
 801e162:	f831 6b02 	ldrh.w	r6, [r1], #2
 801e166:	4414      	add	r4, r2
 801e168:	3c01      	subs	r4, #1
 801e16a:	1b64      	subs	r4, r4, r5
 801e16c:	b2a4      	uxth	r4, r4
 801e16e:	2c01      	cmp	r4, #1
 801e170:	bf88      	it	hi
 801e172:	3c02      	subhi	r4, #2
 801e174:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e178:	8b64      	ldrh	r4, [r4, #26]
 801e17a:	42b4      	cmp	r4, r6
 801e17c:	d117      	bne.n	801e1ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801e17e:	3501      	adds	r5, #1
 801e180:	b2ad      	uxth	r5, r5
 801e182:	e7eb      	b.n	801e15c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801e184:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e188:	2400      	movs	r4, #0
 801e18a:	4413      	add	r3, r2
 801e18c:	b2a2      	uxth	r2, r4
 801e18e:	429a      	cmp	r2, r3
 801e190:	da0f      	bge.n	801e1b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801e192:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801e194:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801e198:	4432      	add	r2, r6
 801e19a:	b292      	uxth	r2, r2
 801e19c:	2a09      	cmp	r2, #9
 801e19e:	bf88      	it	hi
 801e1a0:	3a0a      	subhi	r2, #10
 801e1a2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e1a6:	3401      	adds	r4, #1
 801e1a8:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 801e1aa:	42aa      	cmp	r2, r5
 801e1ac:	d0ee      	beq.n	801e18c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801e1ae:	2000      	movs	r0, #0
 801e1b0:	bd70      	pop	{r4, r5, r6, pc}
 801e1b2:	2001      	movs	r0, #1
 801e1b4:	e7fc      	b.n	801e1b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801e1b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801e1b6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1ba:	4605      	mov	r5, r0
 801e1bc:	4616      	mov	r6, r2
 801e1be:	1c8c      	adds	r4, r1, #2
 801e1c0:	8809      	ldrh	r1, [r1, #0]
 801e1c2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801e1c6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801e1ca:	42b3      	cmp	r3, r6
 801e1cc:	d124      	bne.n	801e218 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801e1ce:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801e1d2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801e1d6:	f001 070f 	and.w	r7, r1, #15
 801e1da:	f8cd 8000 	str.w	r8, [sp]
 801e1de:	464b      	mov	r3, r9
 801e1e0:	4652      	mov	r2, sl
 801e1e2:	4621      	mov	r1, r4
 801e1e4:	4628      	mov	r0, r5
 801e1e6:	f7ff ffb7 	bl	801e158 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801e1ea:	4683      	mov	fp, r0
 801e1ec:	b168      	cbz	r0, 801e20a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801e1ee:	eb0a 0109 	add.w	r1, sl, r9
 801e1f2:	4441      	add	r1, r8
 801e1f4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801e1f8:	463a      	mov	r2, r7
 801e1fa:	4649      	mov	r1, r9
 801e1fc:	4628      	mov	r0, r5
 801e1fe:	f7ff ff53 	bl	801e0a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801e202:	4658      	mov	r0, fp
 801e204:	b003      	add	sp, #12
 801e206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e20a:	eb07 010a 	add.w	r1, r7, sl
 801e20e:	4449      	add	r1, r9
 801e210:	4441      	add	r1, r8
 801e212:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801e216:	e7d2      	b.n	801e1be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801e218:	f04f 0b00 	mov.w	fp, #0
 801e21c:	e7f1      	b.n	801e202 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801e21e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801e21e:	b570      	push	{r4, r5, r6, lr}
 801e220:	8810      	ldrh	r0, [r2, #0]
 801e222:	4298      	cmp	r0, r3
 801e224:	d817      	bhi.n	801e256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801e226:	1e48      	subs	r0, r1, #1
 801e228:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801e22c:	4298      	cmp	r0, r3
 801e22e:	d312      	bcc.n	801e256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801e230:	2400      	movs	r4, #0
 801e232:	428c      	cmp	r4, r1
 801e234:	d20f      	bcs.n	801e256 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801e236:	1860      	adds	r0, r4, r1
 801e238:	1040      	asrs	r0, r0, #1
 801e23a:	0085      	lsls	r5, r0, #2
 801e23c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801e240:	42b3      	cmp	r3, r6
 801e242:	d902      	bls.n	801e24a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801e244:	3001      	adds	r0, #1
 801e246:	b284      	uxth	r4, r0
 801e248:	e7f3      	b.n	801e232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801e24a:	d201      	bcs.n	801e250 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801e24c:	b281      	uxth	r1, r0
 801e24e:	e7f0      	b.n	801e232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801e250:	442a      	add	r2, r5
 801e252:	8850      	ldrh	r0, [r2, #2]
 801e254:	bd70      	pop	{r4, r5, r6, pc}
 801e256:	2000      	movs	r0, #0
 801e258:	e7fc      	b.n	801e254 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801e25a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801e25a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e25e:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801e260:	886f      	ldrh	r7, [r5, #2]
 801e262:	4604      	mov	r4, r0
 801e264:	087f      	lsrs	r7, r7, #1
 801e266:	260b      	movs	r6, #11
 801e268:	3e01      	subs	r6, #1
 801e26a:	d013      	beq.n	801e294 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801e26c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801e26e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e272:	462a      	mov	r2, r5
 801e274:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801e278:	4639      	mov	r1, r7
 801e27a:	4643      	mov	r3, r8
 801e27c:	4620      	mov	r0, r4
 801e27e:	f7ff ffce 	bl	801e21e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801e282:	b138      	cbz	r0, 801e294 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801e284:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801e288:	4642      	mov	r2, r8
 801e28a:	4620      	mov	r0, r4
 801e28c:	f7ff ff93 	bl	801e1b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801e290:	2800      	cmp	r0, #0
 801e292:	d1e9      	bne.n	801e268 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801e294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801e298 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801e298:	b570      	push	{r4, r5, r6, lr}
 801e29a:	694a      	ldr	r2, [r1, #20]
 801e29c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801e29e:	684b      	ldr	r3, [r1, #4]
 801e2a0:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801e2a2:	1b54      	subs	r4, r2, r5
 801e2a4:	f000 8106 	beq.w	801e4b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801e2a8:	1b9b      	subs	r3, r3, r6
 801e2aa:	d003      	beq.n	801e2b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801e2ac:	4363      	muls	r3, r4
 801e2ae:	2210      	movs	r2, #16
 801e2b0:	fb93 f3f2 	sdiv	r3, r3, r2
 801e2b4:	680c      	ldr	r4, [r1, #0]
 801e2b6:	698a      	ldr	r2, [r1, #24]
 801e2b8:	1b65      	subs	r5, r4, r5
 801e2ba:	f000 80fd 	beq.w	801e4b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801e2be:	1b92      	subs	r2, r2, r6
 801e2c0:	d003      	beq.n	801e2ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801e2c2:	436a      	muls	r2, r5
 801e2c4:	2410      	movs	r4, #16
 801e2c6:	fb92 f2f4 	sdiv	r2, r2, r4
 801e2ca:	1a9b      	subs	r3, r3, r2
 801e2cc:	ee07 3a90 	vmov	s15, r3
 801e2d0:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 801e4f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801e2d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801e2d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e2dc:	ee67 7a84 	vmul.f32	s15, s15, s8
 801e2e0:	460a      	mov	r2, r1
 801e2e2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801e2e6:	4603      	mov	r3, r0
 801e2e8:	f100 040c 	add.w	r4, r0, #12
 801e2ec:	eeb1 6a43 	vneg.f32	s12, s6
 801e2f0:	edd2 7a02 	vldr	s15, [r2, #8]
 801e2f4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801e2f8:	3214      	adds	r2, #20
 801e2fa:	ece3 6a01 	vstmia	r3!, {s13}
 801e2fe:	ed52 7a02 	vldr	s15, [r2, #-8]
 801e302:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801e306:	429c      	cmp	r4, r3
 801e308:	edc3 7a02 	vstr	s15, [r3, #8]
 801e30c:	ed52 7a01 	vldr	s15, [r2, #-4]
 801e310:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801e314:	edc3 7a05 	vstr	s15, [r3, #20]
 801e318:	d1ea      	bne.n	801e2f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801e31a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801e31c:	698b      	ldr	r3, [r1, #24]
 801e31e:	edd0 4a02 	vldr	s9, [r0, #8]
 801e322:	edd0 3a00 	vldr	s7, [r0]
 801e326:	edd0 6a01 	vldr	s13, [r0, #4]
 801e32a:	ed90 5a05 	vldr	s10, [r0, #20]
 801e32e:	ed90 2a03 	vldr	s4, [r0, #12]
 801e332:	edd0 5a04 	vldr	s11, [r0, #16]
 801e336:	ed90 1a07 	vldr	s2, [r0, #28]
 801e33a:	edd0 2a06 	vldr	s5, [r0, #24]
 801e33e:	1a9b      	subs	r3, r3, r2
 801e340:	ee07 3a90 	vmov	s15, r3
 801e344:	684b      	ldr	r3, [r1, #4]
 801e346:	1a9b      	subs	r3, r3, r2
 801e348:	ee07 3a10 	vmov	s14, r3
 801e34c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801e350:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801e354:	ee67 7a84 	vmul.f32	s15, s15, s8
 801e358:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801e35c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e360:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801e364:	ee27 7a04 	vmul.f32	s14, s14, s8
 801e368:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801e36c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801e370:	ee32 5a45 	vsub.f32	s10, s4, s10
 801e374:	ee67 7a83 	vmul.f32	s15, s15, s6
 801e378:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801e37c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801e37e:	694a      	ldr	r2, [r1, #20]
 801e380:	1b13      	subs	r3, r2, r4
 801e382:	ee07 3a10 	vmov	s14, r3
 801e386:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e38a:	680b      	ldr	r3, [r1, #0]
 801e38c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801e390:	1b1b      	subs	r3, r3, r4
 801e392:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801e396:	ee07 3a10 	vmov	s14, r3
 801e39a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e39e:	ee27 7a04 	vmul.f32	s14, s14, s8
 801e3a2:	eee6 4a87 	vfma.f32	s9, s13, s14
 801e3a6:	ee64 4a86 	vmul.f32	s9, s9, s12
 801e3aa:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801e3ae:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801e3b0:	698b      	ldr	r3, [r1, #24]
 801e3b2:	1a9b      	subs	r3, r3, r2
 801e3b4:	ee06 3a90 	vmov	s13, r3
 801e3b8:	684b      	ldr	r3, [r1, #4]
 801e3ba:	1a9b      	subs	r3, r3, r2
 801e3bc:	ee07 3a10 	vmov	s14, r3
 801e3c0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801e3c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e3c8:	ee66 6a84 	vmul.f32	s13, s13, s8
 801e3cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 801e3d0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801e3d4:	eee5 6a87 	vfma.f32	s13, s11, s14
 801e3d8:	ee66 6a83 	vmul.f32	s13, s13, s6
 801e3dc:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801e3e0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801e3e2:	694a      	ldr	r2, [r1, #20]
 801e3e4:	1b13      	subs	r3, r2, r4
 801e3e6:	ee07 3a10 	vmov	s14, r3
 801e3ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e3ee:	680b      	ldr	r3, [r1, #0]
 801e3f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 801e3f4:	1b1b      	subs	r3, r3, r4
 801e3f6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801e3fa:	ee07 3a10 	vmov	s14, r3
 801e3fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e402:	ee27 7a04 	vmul.f32	s14, s14, s8
 801e406:	eea5 5a87 	vfma.f32	s10, s11, s14
 801e40a:	edd0 5a08 	vldr	s11, [r0, #32]
 801e40e:	ee25 5a06 	vmul.f32	s10, s10, s12
 801e412:	ee31 1a65 	vsub.f32	s2, s2, s11
 801e416:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801e41a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801e41c:	698b      	ldr	r3, [r1, #24]
 801e41e:	1a9b      	subs	r3, r3, r2
 801e420:	ee07 3a10 	vmov	s14, r3
 801e424:	684b      	ldr	r3, [r1, #4]
 801e426:	1a9b      	subs	r3, r3, r2
 801e428:	ee01 3a90 	vmov	s3, r3
 801e42c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e430:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801e434:	ee27 7a04 	vmul.f32	s14, s14, s8
 801e438:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801e43c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801e440:	ee61 1a84 	vmul.f32	s3, s3, s8
 801e444:	eea1 7a21 	vfma.f32	s14, s2, s3
 801e448:	ee27 7a03 	vmul.f32	s14, s14, s6
 801e44c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801e450:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801e452:	694a      	ldr	r2, [r1, #20]
 801e454:	1b13      	subs	r3, r2, r4
 801e456:	ee03 3a10 	vmov	s6, r3
 801e45a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801e45e:	680b      	ldr	r3, [r1, #0]
 801e460:	ee23 3a04 	vmul.f32	s6, s6, s8
 801e464:	1b1b      	subs	r3, r3, r4
 801e466:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801e46a:	ee03 3a10 	vmov	s6, r3
 801e46e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801e472:	ee23 4a04 	vmul.f32	s8, s6, s8
 801e476:	eee1 5a04 	vfma.f32	s11, s2, s8
 801e47a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801e47e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801e482:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801e486:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801e48a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801e48e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e492:	dd13      	ble.n	801e4bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801e494:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801e498:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801e49c:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801e49e:	eee3 7a87 	vfma.f32	s15, s7, s14
 801e4a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801e4a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e4aa:	dd15      	ble.n	801e4d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801e4ac:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801e4b0:	6403      	str	r3, [r0, #64]	@ 0x40
 801e4b2:	bd70      	pop	{r4, r5, r6, pc}
 801e4b4:	4623      	mov	r3, r4
 801e4b6:	e6fd      	b.n	801e2b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801e4b8:	462a      	mov	r2, r5
 801e4ba:	e706      	b.n	801e2ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801e4bc:	d502      	bpl.n	801e4c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801e4be:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801e4c2:	e7e9      	b.n	801e498 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801e4c4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801e4c8:	eea3 2a85 	vfma.f32	s4, s7, s10
 801e4cc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801e4d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e4d4:	dade      	bge.n	801e494 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801e4d6:	e7f2      	b.n	801e4be <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801e4d8:	d502      	bpl.n	801e4e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801e4da:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801e4de:	e7e7      	b.n	801e4b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801e4e0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801e4e4:	eee3 4a86 	vfma.f32	s9, s7, s12
 801e4e8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801e4ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e4f0:	dadc      	bge.n	801e4ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801e4f2:	e7f2      	b.n	801e4da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801e4f4:	3d800000 	.word	0x3d800000

0801e4f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801e4f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e4fc:	2714      	movs	r7, #20
 801e4fe:	435f      	muls	r7, r3
 801e500:	eb02 0c07 	add.w	ip, r2, r7
 801e504:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801e508:	f115 0e0f 	adds.w	lr, r5, #15
 801e50c:	f100 80a2 	bmi.w	801e654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801e510:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801e514:	9c08      	ldr	r4, [sp, #32]
 801e516:	f8c0 e014 	str.w	lr, [r0, #20]
 801e51a:	2614      	movs	r6, #20
 801e51c:	4366      	muls	r6, r4
 801e51e:	eb02 0806 	add.w	r8, r2, r6
 801e522:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e526:	f115 040f 	adds.w	r4, r5, #15
 801e52a:	f100 809f 	bmi.w	801e66c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801e52e:	1124      	asrs	r4, r4, #4
 801e530:	eba4 040e 	sub.w	r4, r4, lr
 801e534:	6184      	str	r4, [r0, #24]
 801e536:	2c00      	cmp	r4, #0
 801e538:	f000 808a 	beq.w	801e650 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801e53c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801e540:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801e544:	5995      	ldr	r5, [r2, r6]
 801e546:	eba4 0809 	sub.w	r8, r4, r9
 801e54a:	59d4      	ldr	r4, [r2, r7]
 801e54c:	eba5 0a04 	sub.w	sl, r5, r4
 801e550:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801e554:	fb0e fe05 	mul.w	lr, lr, r5
 801e558:	fb0a ee19 	mls	lr, sl, r9, lr
 801e55c:	fb08 e404 	mla	r4, r8, r4, lr
 801e560:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801e564:	3c01      	subs	r4, #1
 801e566:	19a4      	adds	r4, r4, r6
 801e568:	f100 808c 	bmi.w	801e684 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801e56c:	fb94 fef6 	sdiv	lr, r4, r6
 801e570:	f8c0 e000 	str.w	lr, [r0]
 801e574:	fb06 441e 	mls	r4, r6, lr, r4
 801e578:	6104      	str	r4, [r0, #16]
 801e57a:	2d00      	cmp	r5, #0
 801e57c:	f2c0 8095 	blt.w	801e6aa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801e580:	fb95 f4f6 	sdiv	r4, r5, r6
 801e584:	6044      	str	r4, [r0, #4]
 801e586:	fb06 5514 	mls	r5, r6, r4, r5
 801e58a:	6085      	str	r5, [r0, #8]
 801e58c:	60c6      	str	r6, [r0, #12]
 801e58e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801e592:	6945      	ldr	r5, [r0, #20]
 801e594:	59d2      	ldr	r2, [r2, r7]
 801e596:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 801e6cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801e59a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801e59e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801e5a2:	ee07 4a10 	vmov	s14, r4
 801e5a6:	6804      	ldr	r4, [r0, #0]
 801e5a8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801e5ac:	ee07 2a90 	vmov	s15, r2
 801e5b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e5b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801e5b8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801e5bc:	ee27 7a26 	vmul.f32	s14, s14, s13
 801e5c0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801e5c4:	edd3 6a00 	vldr	s13, [r3]
 801e5c8:	eee6 6a07 	vfma.f32	s13, s12, s14
 801e5cc:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801e5d0:	eee6 6a27 	vfma.f32	s13, s12, s15
 801e5d4:	edc0 6a07 	vstr	s13, [r0, #28]
 801e5d8:	edd0 6a01 	vldr	s13, [r0, #4]
 801e5dc:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801e5e0:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801e5e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801e5e8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801e5ec:	ed80 6a08 	vstr	s12, [r0, #32]
 801e5f0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801e5f2:	6242      	str	r2, [r0, #36]	@ 0x24
 801e5f4:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801e5f8:	ed93 6a03 	vldr	s12, [r3, #12]
 801e5fc:	eea5 6a87 	vfma.f32	s12, s11, s14
 801e600:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801e604:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801e608:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801e60c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801e610:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 801e614:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801e618:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801e61c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801e61e:	6302      	str	r2, [r0, #48]	@ 0x30
 801e620:	ed93 6a06 	vldr	s12, [r3, #24]
 801e624:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801e628:	eea5 6a87 	vfma.f32	s12, s11, s14
 801e62c:	eeb0 7a46 	vmov.f32	s14, s12
 801e630:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 801e634:	eea6 7a27 	vfma.f32	s14, s12, s15
 801e638:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801e63c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801e640:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 801e644:	eee6 7a87 	vfma.f32	s15, s13, s14
 801e648:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801e64c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801e64e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801e650:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e654:	f1c5 0501 	rsb	r5, r5, #1
 801e658:	f015 050f 	ands.w	r5, r5, #15
 801e65c:	bf18      	it	ne
 801e65e:	2501      	movne	r5, #1
 801e660:	2410      	movs	r4, #16
 801e662:	fb9e fef4 	sdiv	lr, lr, r4
 801e666:	ebae 0e05 	sub.w	lr, lr, r5
 801e66a:	e753      	b.n	801e514 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801e66c:	f1c5 0501 	rsb	r5, r5, #1
 801e670:	f015 050f 	ands.w	r5, r5, #15
 801e674:	bf18      	it	ne
 801e676:	2501      	movne	r5, #1
 801e678:	f04f 0910 	mov.w	r9, #16
 801e67c:	fb94 f4f9 	sdiv	r4, r4, r9
 801e680:	1b64      	subs	r4, r4, r5
 801e682:	e755      	b.n	801e530 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801e684:	4264      	negs	r4, r4
 801e686:	fb94 fef6 	sdiv	lr, r4, r6
 801e68a:	f1ce 0800 	rsb	r8, lr, #0
 801e68e:	fb06 441e 	mls	r4, r6, lr, r4
 801e692:	f8c0 8000 	str.w	r8, [r0]
 801e696:	6104      	str	r4, [r0, #16]
 801e698:	2c00      	cmp	r4, #0
 801e69a:	f43f af6e 	beq.w	801e57a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801e69e:	ea6f 0e0e 	mvn.w	lr, lr
 801e6a2:	f8c0 e000 	str.w	lr, [r0]
 801e6a6:	1b34      	subs	r4, r6, r4
 801e6a8:	e766      	b.n	801e578 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801e6aa:	426d      	negs	r5, r5
 801e6ac:	fb95 f4f6 	sdiv	r4, r5, r6
 801e6b0:	f1c4 0e00 	rsb	lr, r4, #0
 801e6b4:	fb06 5514 	mls	r5, r6, r4, r5
 801e6b8:	f8c0 e004 	str.w	lr, [r0, #4]
 801e6bc:	6085      	str	r5, [r0, #8]
 801e6be:	2d00      	cmp	r5, #0
 801e6c0:	f43f af64 	beq.w	801e58c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801e6c4:	43e4      	mvns	r4, r4
 801e6c6:	6044      	str	r4, [r0, #4]
 801e6c8:	1b75      	subs	r5, r6, r5
 801e6ca:	e75e      	b.n	801e58a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801e6cc:	3d800000 	.word	0x3d800000

0801e6d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801e6d0:	4b01      	ldr	r3, [pc, #4]	@ (801e6d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801e6d2:	6018      	str	r0, [r3, #0]
 801e6d4:	4770      	bx	lr
 801e6d6:	bf00      	nop
 801e6d8:	2001394c 	.word	0x2001394c

0801e6dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801e6dc:	4b06      	ldr	r3, [pc, #24]	@ (801e6f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801e6de:	881a      	ldrh	r2, [r3, #0]
 801e6e0:	4282      	cmp	r2, r0
 801e6e2:	d807      	bhi.n	801e6f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801e6e4:	4b05      	ldr	r3, [pc, #20]	@ (801e6fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801e6e6:	881b      	ldrh	r3, [r3, #0]
 801e6e8:	4413      	add	r3, r2
 801e6ea:	4298      	cmp	r0, r3
 801e6ec:	bfac      	ite	ge
 801e6ee:	2000      	movge	r0, #0
 801e6f0:	2001      	movlt	r0, #1
 801e6f2:	4770      	bx	lr
 801e6f4:	2000      	movs	r0, #0
 801e6f6:	4770      	bx	lr
 801e6f8:	2001396c 	.word	0x2001396c
 801e6fc:	20013970 	.word	0x20013970

0801e700 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801e700:	b508      	push	{r3, lr}
 801e702:	4601      	mov	r1, r0
 801e704:	f7ff ffea 	bl	801e6dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801e708:	b118      	cbz	r0, 801e712 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801e70a:	4b02      	ldr	r3, [pc, #8]	@ (801e714 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801e70c:	681b      	ldr	r3, [r3, #0]
 801e70e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801e712:	bd08      	pop	{r3, pc}
 801e714:	20013950 	.word	0x20013950

0801e718 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801e718:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e71a:	4c24      	ldr	r4, [pc, #144]	@ (801e7ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801e71c:	6823      	ldr	r3, [r4, #0]
 801e71e:	2b00      	cmp	r3, #0
 801e720:	d042      	beq.n	801e7a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801e722:	4a23      	ldr	r2, [pc, #140]	@ (801e7b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801e724:	4d23      	ldr	r5, [pc, #140]	@ (801e7b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801e726:	8811      	ldrh	r1, [r2, #0]
 801e728:	f8b5 c000 	ldrh.w	ip, [r5]
 801e72c:	4822      	ldr	r0, [pc, #136]	@ (801e7b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801e72e:	4461      	add	r1, ip
 801e730:	1c4a      	adds	r2, r1, #1
 801e732:	f022 0201 	bic.w	r2, r2, #1
 801e736:	008f      	lsls	r7, r1, #2
 801e738:	0412      	lsls	r2, r2, #16
 801e73a:	19de      	adds	r6, r3, r7
 801e73c:	0c12      	lsrs	r2, r2, #16
 801e73e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801e742:	6006      	str	r6, [r0, #0]
 801e744:	4e1d      	ldr	r6, [pc, #116]	@ (801e7bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801e746:	19da      	adds	r2, r3, r7
 801e748:	6032      	str	r2, [r6, #0]
 801e74a:	220e      	movs	r2, #14
 801e74c:	fb02 f20c 	mul.w	r2, r2, ip
 801e750:	3203      	adds	r2, #3
 801e752:	f022 0203 	bic.w	r2, r2, #3
 801e756:	443a      	add	r2, r7
 801e758:	4f19      	ldr	r7, [pc, #100]	@ (801e7c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801e75a:	4413      	add	r3, r2
 801e75c:	603b      	str	r3, [r7, #0]
 801e75e:	4f19      	ldr	r7, [pc, #100]	@ (801e7c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801e760:	2300      	movs	r3, #0
 801e762:	803b      	strh	r3, [r7, #0]
 801e764:	4f18      	ldr	r7, [pc, #96]	@ (801e7c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801e766:	683f      	ldr	r7, [r7, #0]
 801e768:	1aba      	subs	r2, r7, r2
 801e76a:	4f18      	ldr	r7, [pc, #96]	@ (801e7cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801e76c:	603a      	str	r2, [r7, #0]
 801e76e:	4a18      	ldr	r2, [pc, #96]	@ (801e7d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801e770:	469c      	mov	ip, r3
 801e772:	8013      	strh	r3, [r2, #0]
 801e774:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801e778:	428b      	cmp	r3, r1
 801e77a:	d10d      	bne.n	801e798 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801e77c:	882d      	ldrh	r5, [r5, #0]
 801e77e:	6830      	ldr	r0, [r6, #0]
 801e780:	2300      	movs	r3, #0
 801e782:	240e      	movs	r4, #14
 801e784:	429d      	cmp	r5, r3
 801e786:	d90f      	bls.n	801e7a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801e788:	fb04 0203 	mla	r2, r4, r3, r0
 801e78c:	3301      	adds	r3, #1
 801e78e:	7b11      	ldrb	r1, [r2, #12]
 801e790:	f36f 1145 	bfc	r1, #5, #1
 801e794:	7311      	strb	r1, [r2, #12]
 801e796:	e7f5      	b.n	801e784 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801e798:	6822      	ldr	r2, [r4, #0]
 801e79a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801e79e:	6802      	ldr	r2, [r0, #0]
 801e7a0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801e7a4:	3301      	adds	r3, #1
 801e7a6:	e7e7      	b.n	801e778 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801e7a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e7aa:	bf00      	nop
 801e7ac:	20013950 	.word	0x20013950
 801e7b0:	2001396c 	.word	0x2001396c
 801e7b4:	20013970 	.word	0x20013970
 801e7b8:	20013964 	.word	0x20013964
 801e7bc:	20013954 	.word	0x20013954
 801e7c0:	2001395c 	.word	0x2001395c
 801e7c4:	2001396e 	.word	0x2001396e
 801e7c8:	20013958 	.word	0x20013958
 801e7cc:	20013968 	.word	0x20013968
 801e7d0:	20013960 	.word	0x20013960

0801e7d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801e7d4:	4b06      	ldr	r3, [pc, #24]	@ (801e7f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801e7d6:	681b      	ldr	r3, [r3, #0]
 801e7d8:	b943      	cbnz	r3, 801e7ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801e7da:	b139      	cbz	r1, 801e7ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801e7dc:	4b05      	ldr	r3, [pc, #20]	@ (801e7f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801e7de:	801a      	strh	r2, [r3, #0]
 801e7e0:	4b05      	ldr	r3, [pc, #20]	@ (801e7f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801e7e2:	6019      	str	r1, [r3, #0]
 801e7e4:	4b05      	ldr	r3, [pc, #20]	@ (801e7fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801e7e6:	6018      	str	r0, [r3, #0]
 801e7e8:	f7ff bf96 	b.w	801e718 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801e7ec:	4770      	bx	lr
 801e7ee:	bf00      	nop
 801e7f0:	2001395c 	.word	0x2001395c
 801e7f4:	20013970 	.word	0x20013970
 801e7f8:	20013958 	.word	0x20013958
 801e7fc:	20013950 	.word	0x20013950

0801e800 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801e800:	b470      	push	{r4, r5, r6}
 801e802:	4c07      	ldr	r4, [pc, #28]	@ (801e820 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801e804:	6826      	ldr	r6, [r4, #0]
 801e806:	4605      	mov	r5, r0
 801e808:	4610      	mov	r0, r2
 801e80a:	9a03      	ldr	r2, [sp, #12]
 801e80c:	b936      	cbnz	r6, 801e81c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801e80e:	6025      	str	r5, [r4, #0]
 801e810:	4c04      	ldr	r4, [pc, #16]	@ (801e824 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801e812:	8021      	strh	r1, [r4, #0]
 801e814:	bc70      	pop	{r4, r5, r6}
 801e816:	4619      	mov	r1, r3
 801e818:	f7ff bfdc 	b.w	801e7d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801e81c:	bc70      	pop	{r4, r5, r6}
 801e81e:	4770      	bx	lr
 801e820:	20013974 	.word	0x20013974
 801e824:	2001396c 	.word	0x2001396c

0801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801e828:	4a12      	ldr	r2, [pc, #72]	@ (801e874 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801e82a:	8803      	ldrh	r3, [r0, #0]
 801e82c:	8812      	ldrh	r2, [r2, #0]
 801e82e:	4293      	cmp	r3, r2
 801e830:	d207      	bcs.n	801e842 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801e832:	4a11      	ldr	r2, [pc, #68]	@ (801e878 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801e834:	6812      	ldr	r2, [r2, #0]
 801e836:	2114      	movs	r1, #20
 801e838:	fb01 2303 	mla	r3, r1, r3, r2
 801e83c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801e840:	4770      	bx	lr
 801e842:	490e      	ldr	r1, [pc, #56]	@ (801e87c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801e844:	8809      	ldrh	r1, [r1, #0]
 801e846:	4411      	add	r1, r2
 801e848:	428b      	cmp	r3, r1
 801e84a:	da04      	bge.n	801e856 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801e84c:	1a9b      	subs	r3, r3, r2
 801e84e:	4a0c      	ldr	r2, [pc, #48]	@ (801e880 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801e850:	210e      	movs	r1, #14
 801e852:	6812      	ldr	r2, [r2, #0]
 801e854:	e7f0      	b.n	801e838 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801e856:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e85a:	4293      	cmp	r3, r2
 801e85c:	d108      	bne.n	801e870 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801e85e:	4b09      	ldr	r3, [pc, #36]	@ (801e884 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801e860:	781b      	ldrb	r3, [r3, #0]
 801e862:	b91b      	cbnz	r3, 801e86c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801e864:	4b08      	ldr	r3, [pc, #32]	@ (801e888 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801e866:	f9b3 0000 	ldrsh.w	r0, [r3]
 801e86a:	4770      	bx	lr
 801e86c:	4b07      	ldr	r3, [pc, #28]	@ (801e88c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801e86e:	e7fa      	b.n	801e866 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801e870:	2000      	movs	r0, #0
 801e872:	4770      	bx	lr
 801e874:	2001396c 	.word	0x2001396c
 801e878:	20013974 	.word	0x20013974
 801e87c:	20013970 	.word	0x20013970
 801e880:	20013954 	.word	0x20013954
 801e884:	200138dc 	.word	0x200138dc
 801e888:	200138de 	.word	0x200138de
 801e88c:	200138e0 	.word	0x200138e0

0801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801e890:	4a12      	ldr	r2, [pc, #72]	@ (801e8dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801e892:	8803      	ldrh	r3, [r0, #0]
 801e894:	8812      	ldrh	r2, [r2, #0]
 801e896:	4293      	cmp	r3, r2
 801e898:	d207      	bcs.n	801e8aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801e89a:	4a11      	ldr	r2, [pc, #68]	@ (801e8e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801e89c:	6812      	ldr	r2, [r2, #0]
 801e89e:	2114      	movs	r1, #20
 801e8a0:	fb01 2303 	mla	r3, r1, r3, r2
 801e8a4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801e8a8:	4770      	bx	lr
 801e8aa:	490e      	ldr	r1, [pc, #56]	@ (801e8e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801e8ac:	8809      	ldrh	r1, [r1, #0]
 801e8ae:	4411      	add	r1, r2
 801e8b0:	428b      	cmp	r3, r1
 801e8b2:	da04      	bge.n	801e8be <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801e8b4:	1a9b      	subs	r3, r3, r2
 801e8b6:	4a0c      	ldr	r2, [pc, #48]	@ (801e8e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801e8b8:	210e      	movs	r1, #14
 801e8ba:	6812      	ldr	r2, [r2, #0]
 801e8bc:	e7f0      	b.n	801e8a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801e8be:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e8c2:	4293      	cmp	r3, r2
 801e8c4:	d108      	bne.n	801e8d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801e8c6:	4b09      	ldr	r3, [pc, #36]	@ (801e8ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801e8c8:	781b      	ldrb	r3, [r3, #0]
 801e8ca:	b91b      	cbnz	r3, 801e8d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801e8cc:	4b08      	ldr	r3, [pc, #32]	@ (801e8f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801e8ce:	f9b3 0000 	ldrsh.w	r0, [r3]
 801e8d2:	4770      	bx	lr
 801e8d4:	4b07      	ldr	r3, [pc, #28]	@ (801e8f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801e8d6:	e7fa      	b.n	801e8ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801e8d8:	2000      	movs	r0, #0
 801e8da:	4770      	bx	lr
 801e8dc:	2001396c 	.word	0x2001396c
 801e8e0:	20013974 	.word	0x20013974
 801e8e4:	20013970 	.word	0x20013970
 801e8e8:	20013954 	.word	0x20013954
 801e8ec:	200138dc 	.word	0x200138dc
 801e8f0:	200138e0 	.word	0x200138e0
 801e8f4:	200138de 	.word	0x200138de

0801e8f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801e8f8:	b530      	push	{r4, r5, lr}
 801e8fa:	4a22      	ldr	r2, [pc, #136]	@ (801e984 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801e8fc:	880b      	ldrh	r3, [r1, #0]
 801e8fe:	8812      	ldrh	r2, [r2, #0]
 801e900:	4293      	cmp	r3, r2
 801e902:	d213      	bcs.n	801e92c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801e904:	4a20      	ldr	r2, [pc, #128]	@ (801e988 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801e906:	6812      	ldr	r2, [r2, #0]
 801e908:	2114      	movs	r1, #20
 801e90a:	fb01 2303 	mla	r3, r1, r3, r2
 801e90e:	8a1a      	ldrh	r2, [r3, #16]
 801e910:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801e914:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801e918:	8a5b      	ldrh	r3, [r3, #18]
 801e91a:	8004      	strh	r4, [r0, #0]
 801e91c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e920:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801e924:	8041      	strh	r1, [r0, #2]
 801e926:	8082      	strh	r2, [r0, #4]
 801e928:	80c3      	strh	r3, [r0, #6]
 801e92a:	e024      	b.n	801e976 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801e92c:	4917      	ldr	r1, [pc, #92]	@ (801e98c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801e92e:	8809      	ldrh	r1, [r1, #0]
 801e930:	4411      	add	r1, r2
 801e932:	428b      	cmp	r3, r1
 801e934:	da10      	bge.n	801e958 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801e936:	1a9b      	subs	r3, r3, r2
 801e938:	220e      	movs	r2, #14
 801e93a:	4353      	muls	r3, r2
 801e93c:	4a14      	ldr	r2, [pc, #80]	@ (801e990 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801e93e:	6811      	ldr	r1, [r2, #0]
 801e940:	18ca      	adds	r2, r1, r3
 801e942:	5ecd      	ldrsh	r5, [r1, r3]
 801e944:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801e948:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801e94c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801e950:	8005      	strh	r5, [r0, #0]
 801e952:	8044      	strh	r4, [r0, #2]
 801e954:	8081      	strh	r1, [r0, #4]
 801e956:	e7e7      	b.n	801e928 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801e958:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801e95c:	4293      	cmp	r3, r2
 801e95e:	d10b      	bne.n	801e978 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801e960:	4b0c      	ldr	r3, [pc, #48]	@ (801e994 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801e962:	f9b3 1000 	ldrsh.w	r1, [r3]
 801e966:	4b0c      	ldr	r3, [pc, #48]	@ (801e998 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801e968:	8081      	strh	r1, [r0, #4]
 801e96a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e96e:	80c2      	strh	r2, [r0, #6]
 801e970:	2300      	movs	r3, #0
 801e972:	8003      	strh	r3, [r0, #0]
 801e974:	8043      	strh	r3, [r0, #2]
 801e976:	bd30      	pop	{r4, r5, pc}
 801e978:	2300      	movs	r3, #0
 801e97a:	8003      	strh	r3, [r0, #0]
 801e97c:	8043      	strh	r3, [r0, #2]
 801e97e:	8083      	strh	r3, [r0, #4]
 801e980:	e7d2      	b.n	801e928 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801e982:	bf00      	nop
 801e984:	2001396c 	.word	0x2001396c
 801e988:	20013974 	.word	0x20013974
 801e98c:	20013970 	.word	0x20013970
 801e990:	20013954 	.word	0x20013954
 801e994:	200138d8 	.word	0x200138d8
 801e998:	200138da 	.word	0x200138da

0801e99c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801e99c:	4a17      	ldr	r2, [pc, #92]	@ (801e9fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801e99e:	8803      	ldrh	r3, [r0, #0]
 801e9a0:	8812      	ldrh	r2, [r2, #0]
 801e9a2:	4293      	cmp	r3, r2
 801e9a4:	d213      	bcs.n	801e9ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801e9a6:	4a16      	ldr	r2, [pc, #88]	@ (801ea00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801e9a8:	6812      	ldr	r2, [r2, #0]
 801e9aa:	2114      	movs	r1, #20
 801e9ac:	fb01 2303 	mla	r3, r1, r3, r2
 801e9b0:	8a1a      	ldrh	r2, [r3, #16]
 801e9b2:	8919      	ldrh	r1, [r3, #8]
 801e9b4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e9b8:	428a      	cmp	r2, r1
 801e9ba:	db1d      	blt.n	801e9f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801e9bc:	8a58      	ldrh	r0, [r3, #18]
 801e9be:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801e9c2:	895b      	ldrh	r3, [r3, #10]
 801e9c4:	4298      	cmp	r0, r3
 801e9c6:	bfac      	ite	ge
 801e9c8:	2000      	movge	r0, #0
 801e9ca:	2001      	movlt	r0, #1
 801e9cc:	4770      	bx	lr
 801e9ce:	490d      	ldr	r1, [pc, #52]	@ (801ea04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801e9d0:	8809      	ldrh	r1, [r1, #0]
 801e9d2:	4411      	add	r1, r2
 801e9d4:	428b      	cmp	r3, r1
 801e9d6:	da0d      	bge.n	801e9f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801e9d8:	1a9b      	subs	r3, r3, r2
 801e9da:	4a0b      	ldr	r2, [pc, #44]	@ (801ea08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801e9dc:	6812      	ldr	r2, [r2, #0]
 801e9de:	210e      	movs	r1, #14
 801e9e0:	fb01 2303 	mla	r3, r1, r3, r2
 801e9e4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801e9e8:	891a      	ldrh	r2, [r3, #8]
 801e9ea:	4291      	cmp	r1, r2
 801e9ec:	db04      	blt.n	801e9f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801e9ee:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801e9f2:	e7e6      	b.n	801e9c2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801e9f4:	2000      	movs	r0, #0
 801e9f6:	4770      	bx	lr
 801e9f8:	2001      	movs	r0, #1
 801e9fa:	4770      	bx	lr
 801e9fc:	2001396c 	.word	0x2001396c
 801ea00:	20013974 	.word	0x20013974
 801ea04:	20013970 	.word	0x20013970
 801ea08:	20013954 	.word	0x20013954

0801ea0c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801ea0c:	4a12      	ldr	r2, [pc, #72]	@ (801ea58 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801ea0e:	8803      	ldrh	r3, [r0, #0]
 801ea10:	8811      	ldrh	r1, [r2, #0]
 801ea12:	428b      	cmp	r3, r1
 801ea14:	d20b      	bcs.n	801ea2e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801ea16:	4a11      	ldr	r2, [pc, #68]	@ (801ea5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801ea18:	6812      	ldr	r2, [r2, #0]
 801ea1a:	b112      	cbz	r2, 801ea22 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801ea1c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801ea20:	b9c0      	cbnz	r0, 801ea54 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801ea22:	4a0f      	ldr	r2, [pc, #60]	@ (801ea60 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801ea24:	6811      	ldr	r1, [r2, #0]
 801ea26:	2214      	movs	r2, #20
 801ea28:	4353      	muls	r3, r2
 801ea2a:	58c8      	ldr	r0, [r1, r3]
 801ea2c:	4770      	bx	lr
 801ea2e:	4a0d      	ldr	r2, [pc, #52]	@ (801ea64 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801ea30:	8812      	ldrh	r2, [r2, #0]
 801ea32:	440a      	add	r2, r1
 801ea34:	4293      	cmp	r3, r2
 801ea36:	da04      	bge.n	801ea42 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801ea38:	4a08      	ldr	r2, [pc, #32]	@ (801ea5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801ea3a:	6812      	ldr	r2, [r2, #0]
 801ea3c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801ea40:	4770      	bx	lr
 801ea42:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801ea46:	4293      	cmp	r3, r2
 801ea48:	d103      	bne.n	801ea52 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801ea4a:	4b07      	ldr	r3, [pc, #28]	@ (801ea68 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801ea4c:	681b      	ldr	r3, [r3, #0]
 801ea4e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801ea50:	4770      	bx	lr
 801ea52:	2000      	movs	r0, #0
 801ea54:	4770      	bx	lr
 801ea56:	bf00      	nop
 801ea58:	2001396c 	.word	0x2001396c
 801ea5c:	20013950 	.word	0x20013950
 801ea60:	20013974 	.word	0x20013974
 801ea64:	20013970 	.word	0x20013970
 801ea68:	200138e4 	.word	0x200138e4

0801ea6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801ea6c:	4b24      	ldr	r3, [pc, #144]	@ (801eb00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801ea6e:	8802      	ldrh	r2, [r0, #0]
 801ea70:	8818      	ldrh	r0, [r3, #0]
 801ea72:	4282      	cmp	r2, r0
 801ea74:	d221      	bcs.n	801eaba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801ea76:	4b23      	ldr	r3, [pc, #140]	@ (801eb04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801ea78:	6819      	ldr	r1, [r3, #0]
 801ea7a:	2314      	movs	r3, #20
 801ea7c:	fb03 1302 	mla	r3, r3, r2, r1
 801ea80:	6858      	ldr	r0, [r3, #4]
 801ea82:	2800      	cmp	r0, #0
 801ea84:	d03a      	beq.n	801eafc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801ea86:	4920      	ldr	r1, [pc, #128]	@ (801eb08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801ea88:	6809      	ldr	r1, [r1, #0]
 801ea8a:	2900      	cmp	r1, #0
 801ea8c:	d036      	beq.n	801eafc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801ea8e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801ea92:	2900      	cmp	r1, #0
 801ea94:	d032      	beq.n	801eafc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801ea96:	891a      	ldrh	r2, [r3, #8]
 801ea98:	8958      	ldrh	r0, [r3, #10]
 801ea9a:	4350      	muls	r0, r2
 801ea9c:	7c5a      	ldrb	r2, [r3, #17]
 801ea9e:	7cdb      	ldrb	r3, [r3, #19]
 801eaa0:	0952      	lsrs	r2, r2, #5
 801eaa2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801eaa6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801eaaa:	2b0b      	cmp	r3, #11
 801eaac:	bf18      	it	ne
 801eaae:	0040      	lslne	r0, r0, #1
 801eab0:	3003      	adds	r0, #3
 801eab2:	f020 0003 	bic.w	r0, r0, #3
 801eab6:	4408      	add	r0, r1
 801eab8:	4770      	bx	lr
 801eaba:	4b14      	ldr	r3, [pc, #80]	@ (801eb0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801eabc:	881b      	ldrh	r3, [r3, #0]
 801eabe:	4403      	add	r3, r0
 801eac0:	429a      	cmp	r2, r3
 801eac2:	da1a      	bge.n	801eafa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801eac4:	4b12      	ldr	r3, [pc, #72]	@ (801eb10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801eac6:	681b      	ldr	r3, [r3, #0]
 801eac8:	1a10      	subs	r0, r2, r0
 801eaca:	210e      	movs	r1, #14
 801eacc:	fb01 3000 	mla	r0, r1, r0, r3
 801ead0:	7b03      	ldrb	r3, [r0, #12]
 801ead2:	f003 031f 	and.w	r3, r3, #31
 801ead6:	2b0b      	cmp	r3, #11
 801ead8:	d10b      	bne.n	801eaf2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801eada:	8903      	ldrh	r3, [r0, #8]
 801eadc:	8940      	ldrh	r0, [r0, #10]
 801eade:	4358      	muls	r0, r3
 801eae0:	4b09      	ldr	r3, [pc, #36]	@ (801eb08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801eae2:	6819      	ldr	r1, [r3, #0]
 801eae4:	3003      	adds	r0, #3
 801eae6:	f020 0303 	bic.w	r3, r0, #3
 801eaea:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801eaee:	4418      	add	r0, r3
 801eaf0:	4770      	bx	lr
 801eaf2:	2b0d      	cmp	r3, #13
 801eaf4:	d101      	bne.n	801eafa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801eaf6:	300d      	adds	r0, #13
 801eaf8:	4770      	bx	lr
 801eafa:	2000      	movs	r0, #0
 801eafc:	4770      	bx	lr
 801eafe:	bf00      	nop
 801eb00:	2001396c 	.word	0x2001396c
 801eb04:	20013974 	.word	0x20013974
 801eb08:	20013950 	.word	0x20013950
 801eb0c:	20013970 	.word	0x20013970
 801eb10:	20013954 	.word	0x20013954

0801eb14 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801eb14:	b510      	push	{r4, lr}
 801eb16:	4b1f      	ldr	r3, [pc, #124]	@ (801eb94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801eb18:	8802      	ldrh	r2, [r0, #0]
 801eb1a:	881b      	ldrh	r3, [r3, #0]
 801eb1c:	429a      	cmp	r2, r3
 801eb1e:	d21a      	bcs.n	801eb56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 801eb20:	4b1d      	ldr	r3, [pc, #116]	@ (801eb98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801eb22:	681b      	ldr	r3, [r3, #0]
 801eb24:	2114      	movs	r1, #20
 801eb26:	fb01 3102 	mla	r1, r1, r2, r3
 801eb2a:	7c4b      	ldrb	r3, [r1, #17]
 801eb2c:	0958      	lsrs	r0, r3, #5
 801eb2e:	7ccb      	ldrb	r3, [r1, #19]
 801eb30:	491a      	ldr	r1, [pc, #104]	@ (801eb9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801eb32:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801eb36:	6809      	ldr	r1, [r1, #0]
 801eb38:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801eb3c:	b2d8      	uxtb	r0, r3
 801eb3e:	b149      	cbz	r1, 801eb54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eb40:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801eb44:	b132      	cbz	r2, 801eb54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eb46:	2b0e      	cmp	r3, #14
 801eb48:	d021      	beq.n	801eb8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801eb4a:	280f      	cmp	r0, #15
 801eb4c:	d01d      	beq.n	801eb8a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801eb4e:	2810      	cmp	r0, #16
 801eb50:	bf08      	it	eq
 801eb52:	2002      	moveq	r0, #2
 801eb54:	bd10      	pop	{r4, pc}
 801eb56:	4912      	ldr	r1, [pc, #72]	@ (801eba0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801eb58:	8809      	ldrh	r1, [r1, #0]
 801eb5a:	4419      	add	r1, r3
 801eb5c:	428a      	cmp	r2, r1
 801eb5e:	da09      	bge.n	801eb74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 801eb60:	1ad3      	subs	r3, r2, r3
 801eb62:	4a10      	ldr	r2, [pc, #64]	@ (801eba4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 801eb64:	6812      	ldr	r2, [r2, #0]
 801eb66:	210e      	movs	r1, #14
 801eb68:	fb01 2303 	mla	r3, r1, r3, r2
 801eb6c:	7b18      	ldrb	r0, [r3, #12]
 801eb6e:	f000 001f 	and.w	r0, r0, #31
 801eb72:	e7ef      	b.n	801eb54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eb74:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801eb78:	429a      	cmp	r2, r3
 801eb7a:	d108      	bne.n	801eb8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801eb7c:	f7e5 f998 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 801eb80:	6803      	ldr	r3, [r0, #0]
 801eb82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eb86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801eb88:	4718      	bx	r3
 801eb8a:	2001      	movs	r0, #1
 801eb8c:	e7e2      	b.n	801eb54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eb8e:	2000      	movs	r0, #0
 801eb90:	e7e0      	b.n	801eb54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801eb92:	bf00      	nop
 801eb94:	2001396c 	.word	0x2001396c
 801eb98:	20013974 	.word	0x20013974
 801eb9c:	20013950 	.word	0x20013950
 801eba0:	20013970 	.word	0x20013970
 801eba4:	20013954 	.word	0x20013954

0801eba8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801eba8:	2010      	movs	r0, #16
 801ebaa:	4770      	bx	lr

0801ebac <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801ebac:	2000      	movs	r0, #0
 801ebae:	4770      	bx	lr

0801ebb0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801ebb0:	4b02      	ldr	r3, [pc, #8]	@ (801ebbc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801ebb2:	8818      	ldrh	r0, [r3, #0]
 801ebb4:	0040      	lsls	r0, r0, #1
 801ebb6:	b280      	uxth	r0, r0
 801ebb8:	4770      	bx	lr
 801ebba:	bf00      	nop
 801ebbc:	200138de 	.word	0x200138de

0801ebc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801ebc0:	2bff      	cmp	r3, #255	@ 0xff
 801ebc2:	d05e      	beq.n	801ec82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801ebc4:	2a0b      	cmp	r2, #11
 801ebc6:	d058      	beq.n	801ec7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801ebc8:	d80e      	bhi.n	801ebe8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801ebca:	2a03      	cmp	r2, #3
 801ebcc:	d04d      	beq.n	801ec6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 801ebce:	d804      	bhi.n	801ebda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801ebd0:	2a01      	cmp	r2, #1
 801ebd2:	d04c      	beq.n	801ec6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801ebd4:	d94d      	bls.n	801ec72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801ebd6:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801ebd8:	e031      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebda:	2a09      	cmp	r2, #9
 801ebdc:	d04d      	beq.n	801ec7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801ebde:	d84a      	bhi.n	801ec76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801ebe0:	2a08      	cmp	r2, #8
 801ebe2:	d048      	beq.n	801ec76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801ebe4:	2300      	movs	r3, #0
 801ebe6:	e02a      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ebe8:	2a2f      	cmp	r2, #47	@ 0x2f
 801ebea:	d02c      	beq.n	801ec46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 801ebec:	d811      	bhi.n	801ec12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801ebee:	2a2d      	cmp	r2, #45	@ 0x2d
 801ebf0:	d018      	beq.n	801ec24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801ebf2:	d831      	bhi.n	801ec58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801ebf4:	2a2c      	cmp	r2, #44	@ 0x2c
 801ebf6:	d1f5      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ebf8:	684a      	ldr	r2, [r1, #4]
 801ebfa:	7813      	ldrb	r3, [r2, #0]
 801ebfc:	7852      	ldrb	r2, [r2, #1]
 801ebfe:	2a00      	cmp	r2, #0
 801ec00:	d1f0      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec02:	2b01      	cmp	r3, #1
 801ec04:	d01d      	beq.n	801ec42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801ec06:	2b00      	cmp	r3, #0
 801ec08:	d02d      	beq.n	801ec66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801ec0a:	2b02      	cmp	r3, #2
 801ec0c:	d1ea      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec0e:	68c3      	ldr	r3, [r0, #12]
 801ec10:	e015      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec12:	2a31      	cmp	r2, #49	@ 0x31
 801ec14:	d004      	beq.n	801ec20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801ec16:	d332      	bcc.n	801ec7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801ec18:	2a32      	cmp	r2, #50	@ 0x32
 801ec1a:	d030      	beq.n	801ec7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801ec1c:	2a33      	cmp	r2, #51	@ 0x33
 801ec1e:	d1e1      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec20:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801ec22:	e00c      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec24:	684a      	ldr	r2, [r1, #4]
 801ec26:	7813      	ldrb	r3, [r2, #0]
 801ec28:	7852      	ldrb	r2, [r2, #1]
 801ec2a:	2a00      	cmp	r2, #0
 801ec2c:	d1da      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec2e:	2b01      	cmp	r3, #1
 801ec30:	d004      	beq.n	801ec3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801ec32:	d30f      	bcc.n	801ec54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801ec34:	2b02      	cmp	r3, #2
 801ec36:	d1d5      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec38:	6943      	ldr	r3, [r0, #20]
 801ec3a:	e000      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec3c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801ec3e:	4618      	mov	r0, r3
 801ec40:	4770      	bx	lr
 801ec42:	69c3      	ldr	r3, [r0, #28]
 801ec44:	e7fb      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec46:	684b      	ldr	r3, [r1, #4]
 801ec48:	781a      	ldrb	r2, [r3, #0]
 801ec4a:	785b      	ldrb	r3, [r3, #1]
 801ec4c:	2b00      	cmp	r3, #0
 801ec4e:	d1c9      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec50:	2a00      	cmp	r2, #0
 801ec52:	d1f4      	bne.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec54:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801ec56:	e7f2      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec58:	684b      	ldr	r3, [r1, #4]
 801ec5a:	781a      	ldrb	r2, [r3, #0]
 801ec5c:	785b      	ldrb	r3, [r3, #1]
 801ec5e:	2b00      	cmp	r3, #0
 801ec60:	d1c0      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ec62:	2a00      	cmp	r2, #0
 801ec64:	d1eb      	bne.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec66:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801ec68:	e7e9      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec6a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801ec6c:	e7e7      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec6e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 801ec70:	e7e5      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec72:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801ec74:	e7e3      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec76:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801ec78:	e7e1      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec7a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801ec7c:	e7df      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec7e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801ec80:	e7dd      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec82:	2a0b      	cmp	r2, #11
 801ec84:	d059      	beq.n	801ed3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801ec86:	d80e      	bhi.n	801eca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801ec88:	2a03      	cmp	r2, #3
 801ec8a:	d050      	beq.n	801ed2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801ec8c:	d804      	bhi.n	801ec98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801ec8e:	2a01      	cmp	r2, #1
 801ec90:	d04f      	beq.n	801ed32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801ec92:	d950      	bls.n	801ed36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801ec94:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801ec96:	e7d2      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ec98:	2a09      	cmp	r2, #9
 801ec9a:	d04e      	beq.n	801ed3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801ec9c:	d801      	bhi.n	801eca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801ec9e:	2a08      	cmp	r2, #8
 801eca0:	d1a0      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eca2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801eca4:	e7cb      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801eca6:	2a2f      	cmp	r2, #47	@ 0x2f
 801eca8:	d02d      	beq.n	801ed06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801ecaa:	d811      	bhi.n	801ecd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801ecac:	2a2d      	cmp	r2, #45	@ 0x2d
 801ecae:	d018      	beq.n	801ece2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 801ecb0:	d833      	bhi.n	801ed1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801ecb2:	2a2c      	cmp	r2, #44	@ 0x2c
 801ecb4:	d196      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ecb6:	684a      	ldr	r2, [r1, #4]
 801ecb8:	7813      	ldrb	r3, [r2, #0]
 801ecba:	7852      	ldrb	r2, [r2, #1]
 801ecbc:	2a00      	cmp	r2, #0
 801ecbe:	d191      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ecc0:	2b01      	cmp	r3, #1
 801ecc2:	d01e      	beq.n	801ed02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801ecc4:	2b00      	cmp	r3, #0
 801ecc6:	d030      	beq.n	801ed2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801ecc8:	2b02      	cmp	r3, #2
 801ecca:	d18b      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eccc:	6903      	ldr	r3, [r0, #16]
 801ecce:	e7b6      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecd0:	2a31      	cmp	r2, #49	@ 0x31
 801ecd2:	d004      	beq.n	801ecde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801ecd4:	d333      	bcc.n	801ed3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801ecd6:	2a32      	cmp	r2, #50	@ 0x32
 801ecd8:	d031      	beq.n	801ed3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801ecda:	2a33      	cmp	r2, #51	@ 0x33
 801ecdc:	d182      	bne.n	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ecde:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 801ece0:	e7ad      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ece2:	684a      	ldr	r2, [r1, #4]
 801ece4:	7813      	ldrb	r3, [r2, #0]
 801ece6:	7852      	ldrb	r2, [r2, #1]
 801ece8:	2a00      	cmp	r2, #0
 801ecea:	f47f af7b 	bne.w	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ecee:	2b01      	cmp	r3, #1
 801ecf0:	d005      	beq.n	801ecfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801ecf2:	d310      	bcc.n	801ed16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801ecf4:	2b02      	cmp	r3, #2
 801ecf6:	f47f af75 	bne.w	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ecfa:	6983      	ldr	r3, [r0, #24]
 801ecfc:	e79f      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ecfe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801ed00:	e79d      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed02:	6a03      	ldr	r3, [r0, #32]
 801ed04:	e79b      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed06:	684b      	ldr	r3, [r1, #4]
 801ed08:	781a      	ldrb	r2, [r3, #0]
 801ed0a:	785b      	ldrb	r3, [r3, #1]
 801ed0c:	2b00      	cmp	r3, #0
 801ed0e:	f47f af69 	bne.w	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ed12:	2a00      	cmp	r2, #0
 801ed14:	d193      	bne.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed16:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801ed18:	e791      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed1a:	684b      	ldr	r3, [r1, #4]
 801ed1c:	781a      	ldrb	r2, [r3, #0]
 801ed1e:	785b      	ldrb	r3, [r3, #1]
 801ed20:	2b00      	cmp	r3, #0
 801ed22:	f47f af5f 	bne.w	801ebe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ed26:	2a00      	cmp	r2, #0
 801ed28:	d189      	bne.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed2a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801ed2c:	e787      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed2e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801ed30:	e785      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed32:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801ed34:	e783      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed36:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801ed38:	e781      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed3a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801ed3c:	e77f      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ed3e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801ed40:	e77d      	b.n	801ec3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801ed42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ed42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed46:	b087      	sub	sp, #28
 801ed48:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ed4a:	9205      	str	r2, [sp, #20]
 801ed4c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801ed50:	9202      	str	r2, [sp, #8]
 801ed52:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801ed56:	9101      	str	r1, [sp, #4]
 801ed58:	6841      	ldr	r1, [r0, #4]
 801ed5a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801ed5e:	fb01 2404 	mla	r4, r1, r4, r2
 801ed62:	6802      	ldr	r2, [r0, #0]
 801ed64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ed68:	f8de 2000 	ldr.w	r2, [lr]
 801ed6c:	9203      	str	r2, [sp, #12]
 801ed6e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ed72:	3204      	adds	r2, #4
 801ed74:	9204      	str	r2, [sp, #16]
 801ed76:	9a02      	ldr	r2, [sp, #8]
 801ed78:	43d6      	mvns	r6, r2
 801ed7a:	b2f6      	uxtb	r6, r6
 801ed7c:	9a01      	ldr	r2, [sp, #4]
 801ed7e:	2a00      	cmp	r2, #0
 801ed80:	dc03      	bgt.n	801ed8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ed82:	9a05      	ldr	r2, [sp, #20]
 801ed84:	2a00      	cmp	r2, #0
 801ed86:	f340 8129 	ble.w	801efdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ed8a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ed8c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ed90:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ed94:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ed98:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ed9a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ed9e:	2b00      	cmp	r3, #0
 801eda0:	dd0e      	ble.n	801edc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801eda2:	1408      	asrs	r0, r1, #16
 801eda4:	d405      	bmi.n	801edb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801eda6:	4560      	cmp	r0, ip
 801eda8:	da03      	bge.n	801edb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801edaa:	1410      	asrs	r0, r2, #16
 801edac:	d401      	bmi.n	801edb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801edae:	42b8      	cmp	r0, r7
 801edb0:	db07      	blt.n	801edc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801edb2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801edb4:	4401      	add	r1, r0
 801edb6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801edb8:	3b01      	subs	r3, #1
 801edba:	4402      	add	r2, r0
 801edbc:	3402      	adds	r4, #2
 801edbe:	e7ee      	b.n	801ed9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801edc0:	d071      	beq.n	801eea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801edc2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801edc4:	1e58      	subs	r0, r3, #1
 801edc6:	fb05 1500 	mla	r5, r5, r0, r1
 801edca:	142d      	asrs	r5, r5, #16
 801edcc:	d45f      	bmi.n	801ee8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801edce:	4565      	cmp	r5, ip
 801edd0:	da5d      	bge.n	801ee8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801edd2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801edd4:	fb05 2000 	mla	r0, r5, r0, r2
 801edd8:	1400      	asrs	r0, r0, #16
 801edda:	d458      	bmi.n	801ee8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801eddc:	42b8      	cmp	r0, r7
 801edde:	da56      	bge.n	801ee8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ede0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ede4:	4699      	mov	r9, r3
 801ede6:	46a2      	mov	sl, r4
 801ede8:	f1b9 0f00 	cmp.w	r9, #0
 801edec:	dd57      	ble.n	801ee9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801edee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801edf2:	9803      	ldr	r0, [sp, #12]
 801edf4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801edf8:	140d      	asrs	r5, r1, #16
 801edfa:	fb07 000c 	mla	r0, r7, ip, r0
 801edfe:	f109 39ff 	add.w	r9, r9, #4294967295
 801ee02:	5d40      	ldrb	r0, [r0, r5]
 801ee04:	9d04      	ldr	r5, [sp, #16]
 801ee06:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ee0a:	f8ba 5000 	ldrh.w	r5, [sl]
 801ee0e:	122f      	asrs	r7, r5, #8
 801ee10:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ee14:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ee18:	fb17 f706 	smulbb	r7, r7, r6
 801ee1c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ee20:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ee24:	00ed      	lsls	r5, r5, #3
 801ee26:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ee2a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801ee2e:	10c7      	asrs	r7, r0, #3
 801ee30:	b2ed      	uxtb	r5, r5
 801ee32:	00c0      	lsls	r0, r0, #3
 801ee34:	fb18 f806 	smulbb	r8, r8, r6
 801ee38:	fb15 f506 	smulbb	r5, r5, r6
 801ee3c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ee40:	b2c0      	uxtb	r0, r0
 801ee42:	fa1f fc8c 	uxth.w	ip, ip
 801ee46:	fb07 870b 	mla	r7, r7, fp, r8
 801ee4a:	fb00 500b 	mla	r0, r0, fp, r5
 801ee4e:	b280      	uxth	r0, r0
 801ee50:	b2bf      	uxth	r7, r7
 801ee52:	f10c 0501 	add.w	r5, ip, #1
 801ee56:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ee5a:	f107 0801 	add.w	r8, r7, #1
 801ee5e:	1c45      	adds	r5, r0, #1
 801ee60:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ee64:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ee68:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ee6a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ee6e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ee72:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ee76:	ea45 0c0c 	orr.w	ip, r5, ip
 801ee7a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ee7e:	4401      	add	r1, r0
 801ee80:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ee82:	ea4c 0c08 	orr.w	ip, ip, r8
 801ee86:	f82a cb02 	strh.w	ip, [sl], #2
 801ee8a:	4402      	add	r2, r0
 801ee8c:	e7ac      	b.n	801ede8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ee8e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ee92:	f04f 0800 	mov.w	r8, #0
 801ee96:	eb03 0008 	add.w	r0, r3, r8
 801ee9a:	2800      	cmp	r0, #0
 801ee9c:	dc41      	bgt.n	801ef22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ee9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801eea2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801eea6:	9b01      	ldr	r3, [sp, #4]
 801eea8:	2b00      	cmp	r3, #0
 801eeaa:	f340 8097 	ble.w	801efdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801eeae:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eeb2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801eeb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eeba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801eebc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eec0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eec4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eec8:	eef0 6a62 	vmov.f32	s13, s5
 801eecc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eed0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eed4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eed8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801eedc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eee0:	eef0 6a43 	vmov.f32	s13, s6
 801eee4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eee8:	ee12 2a90 	vmov	r2, s5
 801eeec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eef0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eef4:	ee13 2a10 	vmov	r2, s6
 801eef8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801eefa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801eefc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ef00:	9314      	str	r3, [sp, #80]	@ 0x50
 801ef02:	9b01      	ldr	r3, [sp, #4]
 801ef04:	9a05      	ldr	r2, [sp, #20]
 801ef06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ef0a:	3b01      	subs	r3, #1
 801ef0c:	9301      	str	r3, [sp, #4]
 801ef0e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801ef12:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ef14:	eeb0 3a67 	vmov.f32	s6, s15
 801ef18:	bf08      	it	eq
 801ef1a:	4613      	moveq	r3, r2
 801ef1c:	eef0 2a47 	vmov.f32	s5, s14
 801ef20:	e72c      	b.n	801ed7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ef22:	140f      	asrs	r7, r1, #16
 801ef24:	d453      	bmi.n	801efce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ef26:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ef2a:	42bd      	cmp	r5, r7
 801ef2c:	dd4f      	ble.n	801efce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ef2e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ef32:	d44c      	bmi.n	801efce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ef34:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ef38:	4560      	cmp	r0, ip
 801ef3a:	dd48      	ble.n	801efce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ef3c:	9803      	ldr	r0, [sp, #12]
 801ef3e:	b22d      	sxth	r5, r5
 801ef40:	fb0c 0505 	mla	r5, ip, r5, r0
 801ef44:	5de8      	ldrb	r0, [r5, r7]
 801ef46:	9d04      	ldr	r5, [sp, #16]
 801ef48:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ef4c:	f06f 0501 	mvn.w	r5, #1
 801ef50:	fb05 fb08 	mul.w	fp, r5, r8
 801ef54:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ef58:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ef5c:	122f      	asrs	r7, r5, #8
 801ef5e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ef62:	fb17 f706 	smulbb	r7, r7, r6
 801ef66:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ef6a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ef6e:	00ed      	lsls	r5, r5, #3
 801ef70:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ef74:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ef78:	10c7      	asrs	r7, r0, #3
 801ef7a:	b2ed      	uxtb	r5, r5
 801ef7c:	00c0      	lsls	r0, r0, #3
 801ef7e:	fb19 f906 	smulbb	r9, r9, r6
 801ef82:	fb15 f506 	smulbb	r5, r5, r6
 801ef86:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ef8a:	b2c0      	uxtb	r0, r0
 801ef8c:	fa1f fc8c 	uxth.w	ip, ip
 801ef90:	fb07 970a 	mla	r7, r7, sl, r9
 801ef94:	fb00 500a 	mla	r0, r0, sl, r5
 801ef98:	b2bf      	uxth	r7, r7
 801ef9a:	b280      	uxth	r0, r0
 801ef9c:	f10c 0501 	add.w	r5, ip, #1
 801efa0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801efa4:	f107 0901 	add.w	r9, r7, #1
 801efa8:	1c45      	adds	r5, r0, #1
 801efaa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801efae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801efb2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801efb6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801efba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801efbe:	ea45 0c0c 	orr.w	ip, r5, ip
 801efc2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801efc6:	ea4c 0c09 	orr.w	ip, ip, r9
 801efca:	f824 c00b 	strh.w	ip, [r4, fp]
 801efce:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801efd0:	4401      	add	r1, r0
 801efd2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801efd4:	f108 38ff 	add.w	r8, r8, #4294967295
 801efd8:	4402      	add	r2, r0
 801efda:	e75c      	b.n	801ee96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801efdc:	b007      	add	sp, #28
 801efde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801efe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801efe2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801efe6:	b085      	sub	sp, #20
 801efe8:	4693      	mov	fp, r2
 801efea:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801efec:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801efee:	6870      	ldr	r0, [r6, #4]
 801eff0:	9100      	str	r1, [sp, #0]
 801eff2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801eff6:	fb00 2404 	mla	r4, r0, r4, r2
 801effa:	6832      	ldr	r2, [r6, #0]
 801effc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f000:	682a      	ldr	r2, [r5, #0]
 801f002:	9201      	str	r2, [sp, #4]
 801f004:	686a      	ldr	r2, [r5, #4]
 801f006:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801f00a:	3204      	adds	r2, #4
 801f00c:	9202      	str	r2, [sp, #8]
 801f00e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f012:	9a00      	ldr	r2, [sp, #0]
 801f014:	2a00      	cmp	r2, #0
 801f016:	dc03      	bgt.n	801f020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f018:	f1bb 0f00 	cmp.w	fp, #0
 801f01c:	f340 80a0 	ble.w	801f160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801f020:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f022:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801f026:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801f02a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801f02e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f030:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f034:	2b00      	cmp	r3, #0
 801f036:	dd0c      	ble.n	801f052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f038:	1406      	asrs	r6, r0, #16
 801f03a:	d405      	bmi.n	801f048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f03c:	454e      	cmp	r6, r9
 801f03e:	da03      	bge.n	801f048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f040:	1416      	asrs	r6, r2, #16
 801f042:	d401      	bmi.n	801f048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f044:	4546      	cmp	r6, r8
 801f046:	db05      	blt.n	801f054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f048:	4470      	add	r0, lr
 801f04a:	4462      	add	r2, ip
 801f04c:	3b01      	subs	r3, #1
 801f04e:	3402      	adds	r4, #2
 801f050:	e7f0      	b.n	801f034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f052:	d00f      	beq.n	801f074 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f054:	1e5e      	subs	r6, r3, #1
 801f056:	fb0e 0706 	mla	r7, lr, r6, r0
 801f05a:	143f      	asrs	r7, r7, #16
 801f05c:	d541      	bpl.n	801f0e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801f05e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801f062:	4698      	mov	r8, r3
 801f064:	9603      	str	r6, [sp, #12]
 801f066:	f1b8 0f00 	cmp.w	r8, #0
 801f06a:	dc59      	bgt.n	801f120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801f06c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f070:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f074:	9b00      	ldr	r3, [sp, #0]
 801f076:	2b00      	cmp	r3, #0
 801f078:	dd72      	ble.n	801f160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801f07a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f07e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f082:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f086:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f088:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f08c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f090:	eeb0 6a62 	vmov.f32	s12, s5
 801f094:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f098:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f09c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f0a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f0a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f0a8:	eeb0 6a43 	vmov.f32	s12, s6
 801f0ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f0b0:	ee12 2a90 	vmov	r2, s5
 801f0b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f0b8:	fb92 fef3 	sdiv	lr, r2, r3
 801f0bc:	ee13 2a10 	vmov	r2, s6
 801f0c0:	fb92 fcf3 	sdiv	ip, r2, r3
 801f0c4:	9b00      	ldr	r3, [sp, #0]
 801f0c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f0ca:	3b01      	subs	r3, #1
 801f0cc:	9300      	str	r3, [sp, #0]
 801f0ce:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f0d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f0d4:	eeb0 3a67 	vmov.f32	s6, s15
 801f0d8:	bf08      	it	eq
 801f0da:	465b      	moveq	r3, fp
 801f0dc:	eef0 2a47 	vmov.f32	s5, s14
 801f0e0:	e797      	b.n	801f012 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801f0e2:	454f      	cmp	r7, r9
 801f0e4:	dabb      	bge.n	801f05e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f0e6:	fb0c 2606 	mla	r6, ip, r6, r2
 801f0ea:	1436      	asrs	r6, r6, #16
 801f0ec:	d4b7      	bmi.n	801f05e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f0ee:	4546      	cmp	r6, r8
 801f0f0:	dab5      	bge.n	801f05e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f0f2:	461e      	mov	r6, r3
 801f0f4:	46a0      	mov	r8, r4
 801f0f6:	2e00      	cmp	r6, #0
 801f0f8:	ddb8      	ble.n	801f06c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f0fa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801f0fe:	9901      	ldr	r1, [sp, #4]
 801f100:	1417      	asrs	r7, r2, #16
 801f102:	ea4f 4920 	mov.w	r9, r0, asr #16
 801f106:	fb0a 1707 	mla	r7, sl, r7, r1
 801f10a:	9902      	ldr	r1, [sp, #8]
 801f10c:	f817 7009 	ldrb.w	r7, [r7, r9]
 801f110:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801f114:	f828 7b02 	strh.w	r7, [r8], #2
 801f118:	4470      	add	r0, lr
 801f11a:	4462      	add	r2, ip
 801f11c:	3e01      	subs	r6, #1
 801f11e:	e7ea      	b.n	801f0f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801f120:	ea5f 4920 	movs.w	r9, r0, asr #16
 801f124:	d417      	bmi.n	801f156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f126:	68ae      	ldr	r6, [r5, #8]
 801f128:	454e      	cmp	r6, r9
 801f12a:	dd14      	ble.n	801f156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f12c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801f130:	d411      	bmi.n	801f156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f132:	68ef      	ldr	r7, [r5, #12]
 801f134:	4557      	cmp	r7, sl
 801f136:	dd0e      	ble.n	801f156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801f138:	9f01      	ldr	r7, [sp, #4]
 801f13a:	b236      	sxth	r6, r6
 801f13c:	fb0a 7606 	mla	r6, sl, r6, r7
 801f140:	9f02      	ldr	r7, [sp, #8]
 801f142:	f816 6009 	ldrb.w	r6, [r6, r9]
 801f146:	f06f 0101 	mvn.w	r1, #1
 801f14a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801f14e:	fb01 f608 	mul.w	r6, r1, r8
 801f152:	9903      	ldr	r1, [sp, #12]
 801f154:	538f      	strh	r7, [r1, r6]
 801f156:	4470      	add	r0, lr
 801f158:	4462      	add	r2, ip
 801f15a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f15e:	e782      	b.n	801f066 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f160:	b005      	add	sp, #20
 801f162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f166:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f16a:	b087      	sub	sp, #28
 801f16c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801f16e:	9205      	str	r2, [sp, #20]
 801f170:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801f174:	9203      	str	r2, [sp, #12]
 801f176:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801f17a:	9102      	str	r1, [sp, #8]
 801f17c:	6861      	ldr	r1, [r4, #4]
 801f17e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801f182:	fb01 2000 	mla	r0, r1, r0, r2
 801f186:	6822      	ldr	r2, [r4, #0]
 801f188:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801f18c:	9200      	str	r2, [sp, #0]
 801f18e:	f8dc 2000 	ldr.w	r2, [ip]
 801f192:	9204      	str	r2, [sp, #16]
 801f194:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801f198:	3204      	adds	r2, #4
 801f19a:	9201      	str	r2, [sp, #4]
 801f19c:	9a03      	ldr	r2, [sp, #12]
 801f19e:	43d5      	mvns	r5, r2
 801f1a0:	b2ed      	uxtb	r5, r5
 801f1a2:	9a02      	ldr	r2, [sp, #8]
 801f1a4:	2a00      	cmp	r2, #0
 801f1a6:	dc03      	bgt.n	801f1b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f1a8:	9a05      	ldr	r2, [sp, #20]
 801f1aa:	2a00      	cmp	r2, #0
 801f1ac:	f340 812c 	ble.w	801f408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f1b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f1b2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801f1b6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801f1ba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f1be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f1c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f1c4:	2b00      	cmp	r3, #0
 801f1c6:	dd10      	ble.n	801f1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f1c8:	140c      	asrs	r4, r1, #16
 801f1ca:	d405      	bmi.n	801f1d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f1cc:	4574      	cmp	r4, lr
 801f1ce:	da03      	bge.n	801f1d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f1d0:	1414      	asrs	r4, r2, #16
 801f1d2:	d401      	bmi.n	801f1d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f1d4:	42bc      	cmp	r4, r7
 801f1d6:	db09      	blt.n	801f1ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f1d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801f1da:	9800      	ldr	r0, [sp, #0]
 801f1dc:	4421      	add	r1, r4
 801f1de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f1e0:	3002      	adds	r0, #2
 801f1e2:	4422      	add	r2, r4
 801f1e4:	3b01      	subs	r3, #1
 801f1e6:	9000      	str	r0, [sp, #0]
 801f1e8:	e7ec      	b.n	801f1c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801f1ea:	d071      	beq.n	801f2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801f1ec:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801f1ee:	1e5c      	subs	r4, r3, #1
 801f1f0:	fb06 1604 	mla	r6, r6, r4, r1
 801f1f4:	1436      	asrs	r6, r6, #16
 801f1f6:	d45d      	bmi.n	801f2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f1f8:	4576      	cmp	r6, lr
 801f1fa:	da5b      	bge.n	801f2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f1fc:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801f1fe:	fb06 2404 	mla	r4, r6, r4, r2
 801f202:	1424      	asrs	r4, r4, #16
 801f204:	d456      	bmi.n	801f2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f206:	42bc      	cmp	r4, r7
 801f208:	da54      	bge.n	801f2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f20a:	f8dd 9000 	ldr.w	r9, [sp]
 801f20e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801f212:	4698      	mov	r8, r3
 801f214:	f1b8 0f00 	cmp.w	r8, #0
 801f218:	dd54      	ble.n	801f2c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801f21a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801f21e:	9804      	ldr	r0, [sp, #16]
 801f220:	1414      	asrs	r4, r2, #16
 801f222:	fb07 0404 	mla	r4, r7, r4, r0
 801f226:	140e      	asrs	r6, r1, #16
 801f228:	9801      	ldr	r0, [sp, #4]
 801f22a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801f22e:	f8b9 4000 	ldrh.w	r4, [r9]
 801f232:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f236:	eb00 0b0e 	add.w	fp, r0, lr
 801f23a:	1227      	asrs	r7, r4, #8
 801f23c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801f240:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f244:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801f248:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f24a:	fb16 f60a 	smulbb	r6, r6, sl
 801f24e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f252:	fb07 6705 	mla	r7, r7, r5, r6
 801f256:	10e6      	asrs	r6, r4, #3
 801f258:	00e4      	lsls	r4, r4, #3
 801f25a:	b2e4      	uxtb	r4, r4
 801f25c:	fb1b fb0a 	smulbb	fp, fp, sl
 801f260:	fb14 f405 	smulbb	r4, r4, r5
 801f264:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f268:	b2bf      	uxth	r7, r7
 801f26a:	fb06 b605 	mla	r6, r6, r5, fp
 801f26e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801f272:	b2b6      	uxth	r6, r6
 801f274:	fa1f fe8e 	uxth.w	lr, lr
 801f278:	1c7c      	adds	r4, r7, #1
 801f27a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801f27e:	f106 0b01 	add.w	fp, r6, #1
 801f282:	f10e 0401 	add.w	r4, lr, #1
 801f286:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801f28a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801f28e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f292:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801f296:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801f29a:	4327      	orrs	r7, r4
 801f29c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801f2a0:	4401      	add	r1, r0
 801f2a2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801f2a4:	ea47 070b 	orr.w	r7, r7, fp
 801f2a8:	f829 7b02 	strh.w	r7, [r9], #2
 801f2ac:	4402      	add	r2, r0
 801f2ae:	f108 38ff 	add.w	r8, r8, #4294967295
 801f2b2:	e7af      	b.n	801f214 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801f2b4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801f2b8:	f04f 0e00 	mov.w	lr, #0
 801f2bc:	eb03 040e 	add.w	r4, r3, lr
 801f2c0:	2c00      	cmp	r4, #0
 801f2c2:	dc43      	bgt.n	801f34c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f2c4:	9a00      	ldr	r2, [sp, #0]
 801f2c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f2ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f2ce:	9300      	str	r3, [sp, #0]
 801f2d0:	9b02      	ldr	r3, [sp, #8]
 801f2d2:	2b00      	cmp	r3, #0
 801f2d4:	f340 8098 	ble.w	801f408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f2d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f2dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f2e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f2e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f2e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2f2:	eef0 6a62 	vmov.f32	s13, s5
 801f2f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f302:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801f306:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f30a:	eef0 6a43 	vmov.f32	s13, s6
 801f30e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f312:	ee12 2a90 	vmov	r2, s5
 801f316:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f31a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f31e:	ee13 2a10 	vmov	r2, s6
 801f322:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f324:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f326:	fb92 f3f3 	sdiv	r3, r2, r3
 801f32a:	9314      	str	r3, [sp, #80]	@ 0x50
 801f32c:	9b02      	ldr	r3, [sp, #8]
 801f32e:	9a05      	ldr	r2, [sp, #20]
 801f330:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f334:	3b01      	subs	r3, #1
 801f336:	9302      	str	r3, [sp, #8]
 801f338:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801f33c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f33e:	eeb0 3a67 	vmov.f32	s6, s15
 801f342:	bf08      	it	eq
 801f344:	4613      	moveq	r3, r2
 801f346:	eef0 2a47 	vmov.f32	s5, s14
 801f34a:	e72a      	b.n	801f1a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f34c:	140f      	asrs	r7, r1, #16
 801f34e:	d454      	bmi.n	801f3fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f350:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801f354:	42be      	cmp	r6, r7
 801f356:	dd50      	ble.n	801f3fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f358:	ea5f 4822 	movs.w	r8, r2, asr #16
 801f35c:	d44d      	bmi.n	801f3fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f35e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801f362:	4544      	cmp	r4, r8
 801f364:	dd49      	ble.n	801f3fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f366:	9c04      	ldr	r4, [sp, #16]
 801f368:	b236      	sxth	r6, r6
 801f36a:	fb08 4606 	mla	r6, r8, r6, r4
 801f36e:	f06f 0001 	mvn.w	r0, #1
 801f372:	f816 8007 	ldrb.w	r8, [r6, r7]
 801f376:	9c01      	ldr	r4, [sp, #4]
 801f378:	fb00 fa0e 	mul.w	sl, r0, lr
 801f37c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f380:	9800      	ldr	r0, [sp, #0]
 801f382:	eb04 0b08 	add.w	fp, r4, r8
 801f386:	f830 400a 	ldrh.w	r4, [r0, sl]
 801f38a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801f38e:	9801      	ldr	r0, [sp, #4]
 801f390:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f394:	f810 8008 	ldrb.w	r8, [r0, r8]
 801f398:	9800      	ldr	r0, [sp, #0]
 801f39a:	1227      	asrs	r7, r4, #8
 801f39c:	fb16 f609 	smulbb	r6, r6, r9
 801f3a0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f3a4:	fb07 6705 	mla	r7, r7, r5, r6
 801f3a8:	10e6      	asrs	r6, r4, #3
 801f3aa:	00e4      	lsls	r4, r4, #3
 801f3ac:	b2e4      	uxtb	r4, r4
 801f3ae:	fb1b fb09 	smulbb	fp, fp, r9
 801f3b2:	fb14 f405 	smulbb	r4, r4, r5
 801f3b6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f3ba:	b2bf      	uxth	r7, r7
 801f3bc:	fb06 b605 	mla	r6, r6, r5, fp
 801f3c0:	fb08 4809 	mla	r8, r8, r9, r4
 801f3c4:	b2b6      	uxth	r6, r6
 801f3c6:	fa1f f888 	uxth.w	r8, r8
 801f3ca:	1c7c      	adds	r4, r7, #1
 801f3cc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801f3d0:	f106 0b01 	add.w	fp, r6, #1
 801f3d4:	f108 0401 	add.w	r4, r8, #1
 801f3d8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801f3dc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801f3e0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f3e4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801f3e8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801f3ec:	4327      	orrs	r7, r4
 801f3ee:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801f3f2:	ea47 070b 	orr.w	r7, r7, fp
 801f3f6:	f820 700a 	strh.w	r7, [r0, sl]
 801f3fa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f3fc:	4401      	add	r1, r0
 801f3fe:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801f400:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f404:	4402      	add	r2, r0
 801f406:	e759      	b.n	801f2bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801f408:	b007      	add	sp, #28
 801f40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801f410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f414:	b085      	sub	sp, #20
 801f416:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f41a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801f41c:	9203      	str	r2, [sp, #12]
 801f41e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801f422:	6870      	ldr	r0, [r6, #4]
 801f424:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f426:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801f42a:	686f      	ldr	r7, [r5, #4]
 801f42c:	9101      	str	r1, [sp, #4]
 801f42e:	fb00 2404 	mla	r4, r0, r4, r2
 801f432:	6832      	ldr	r2, [r6, #0]
 801f434:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f438:	682a      	ldr	r2, [r5, #0]
 801f43a:	9202      	str	r2, [sp, #8]
 801f43c:	3704      	adds	r7, #4
 801f43e:	9a01      	ldr	r2, [sp, #4]
 801f440:	2a00      	cmp	r2, #0
 801f442:	dc03      	bgt.n	801f44c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f444:	9a03      	ldr	r2, [sp, #12]
 801f446:	2a00      	cmp	r2, #0
 801f448:	f340 80cc 	ble.w	801f5e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f44c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f44e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801f452:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801f456:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801f45a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f45c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f460:	2b00      	cmp	r3, #0
 801f462:	dd0d      	ble.n	801f480 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f464:	1406      	asrs	r6, r0, #16
 801f466:	d405      	bmi.n	801f474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f468:	454e      	cmp	r6, r9
 801f46a:	da03      	bge.n	801f474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f46c:	1416      	asrs	r6, r2, #16
 801f46e:	d401      	bmi.n	801f474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f470:	4546      	cmp	r6, r8
 801f472:	db06      	blt.n	801f482 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f474:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801f476:	4460      	add	r0, ip
 801f478:	4432      	add	r2, r6
 801f47a:	3b01      	subs	r3, #1
 801f47c:	3402      	adds	r4, #2
 801f47e:	e7ef      	b.n	801f460 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801f480:	d00f      	beq.n	801f4a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f482:	1e5e      	subs	r6, r3, #1
 801f484:	fb0c 0e06 	mla	lr, ip, r6, r0
 801f488:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801f48c:	d543      	bpl.n	801f516 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f48e:	4698      	mov	r8, r3
 801f490:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801f494:	f1b8 0f00 	cmp.w	r8, #0
 801f498:	dc71      	bgt.n	801f57e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801f49a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f49e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f4a2:	9b01      	ldr	r3, [sp, #4]
 801f4a4:	2b00      	cmp	r3, #0
 801f4a6:	f340 809d 	ble.w	801f5e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f4aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f4ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f4b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f4b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f4b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f4bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f4c0:	eeb0 6a62 	vmov.f32	s12, s5
 801f4c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f4c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f4cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f4d0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f4d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f4d8:	eeb0 6a43 	vmov.f32	s12, s6
 801f4dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f4e0:	ee12 2a90 	vmov	r2, s5
 801f4e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4e8:	fb92 fcf3 	sdiv	ip, r2, r3
 801f4ec:	ee13 2a10 	vmov	r2, s6
 801f4f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4f4:	9312      	str	r3, [sp, #72]	@ 0x48
 801f4f6:	9b01      	ldr	r3, [sp, #4]
 801f4f8:	9a03      	ldr	r2, [sp, #12]
 801f4fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f4fe:	3b01      	subs	r3, #1
 801f500:	9301      	str	r3, [sp, #4]
 801f502:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f506:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f508:	eeb0 3a67 	vmov.f32	s6, s15
 801f50c:	bf08      	it	eq
 801f50e:	4613      	moveq	r3, r2
 801f510:	eef0 2a47 	vmov.f32	s5, s14
 801f514:	e793      	b.n	801f43e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801f516:	45ce      	cmp	lr, r9
 801f518:	dab9      	bge.n	801f48e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f51a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f51c:	fb01 2606 	mla	r6, r1, r6, r2
 801f520:	1436      	asrs	r6, r6, #16
 801f522:	d4b4      	bmi.n	801f48e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f524:	4546      	cmp	r6, r8
 801f526:	dab2      	bge.n	801f48e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f528:	4698      	mov	r8, r3
 801f52a:	46a2      	mov	sl, r4
 801f52c:	f1b8 0f00 	cmp.w	r8, #0
 801f530:	ddb3      	ble.n	801f49a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f532:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801f536:	9902      	ldr	r1, [sp, #8]
 801f538:	1416      	asrs	r6, r2, #16
 801f53a:	fb09 1606 	mla	r6, r9, r6, r1
 801f53e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801f542:	492a      	ldr	r1, [pc, #168]	@ (801f5ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801f544:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801f548:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f54c:	eb07 0b0e 	add.w	fp, r7, lr
 801f550:	4460      	add	r0, ip
 801f552:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801f556:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801f55a:	00f6      	lsls	r6, r6, #3
 801f55c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801f560:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801f564:	ea49 0606 	orr.w	r6, r9, r6
 801f568:	f817 900e 	ldrb.w	r9, [r7, lr]
 801f56c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f56e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801f572:	f82a 6b02 	strh.w	r6, [sl], #2
 801f576:	440a      	add	r2, r1
 801f578:	f108 38ff 	add.w	r8, r8, #4294967295
 801f57c:	e7d6      	b.n	801f52c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f57e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801f582:	d429      	bmi.n	801f5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f584:	68ae      	ldr	r6, [r5, #8]
 801f586:	454e      	cmp	r6, r9
 801f588:	dd26      	ble.n	801f5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f58a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801f58e:	d423      	bmi.n	801f5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f590:	68e9      	ldr	r1, [r5, #12]
 801f592:	4559      	cmp	r1, fp
 801f594:	dd20      	ble.n	801f5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f596:	9902      	ldr	r1, [sp, #8]
 801f598:	fa0f fe86 	sxth.w	lr, r6
 801f59c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801f5a0:	f06f 0101 	mvn.w	r1, #1
 801f5a4:	f81e e009 	ldrb.w	lr, [lr, r9]
 801f5a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f5ac:	eb07 060e 	add.w	r6, r7, lr
 801f5b0:	fb01 f908 	mul.w	r9, r1, r8
 801f5b4:	f896 b002 	ldrb.w	fp, [r6, #2]
 801f5b8:	7876      	ldrb	r6, [r6, #1]
 801f5ba:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801f5be:	00f6      	lsls	r6, r6, #3
 801f5c0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801f5c4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801f5c8:	ea4b 0606 	orr.w	r6, fp, r6
 801f5cc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801f5d0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801f5d4:	f82a 6009 	strh.w	r6, [sl, r9]
 801f5d8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f5da:	4460      	add	r0, ip
 801f5dc:	440a      	add	r2, r1
 801f5de:	f108 38ff 	add.w	r8, r8, #4294967295
 801f5e2:	e757      	b.n	801f494 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f5e4:	b005      	add	sp, #20
 801f5e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5ea:	bf00      	nop
 801f5ec:	fffff800 	.word	0xfffff800

0801f5f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f5f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f5f4:	b087      	sub	sp, #28
 801f5f6:	468b      	mov	fp, r1
 801f5f8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801f5fa:	9204      	str	r2, [sp, #16]
 801f5fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801f600:	9205      	str	r2, [sp, #20]
 801f602:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801f606:	6841      	ldr	r1, [r0, #4]
 801f608:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801f60c:	fb01 2404 	mla	r4, r1, r4, r2
 801f610:	6802      	ldr	r2, [r0, #0]
 801f612:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f616:	f8dc 2000 	ldr.w	r2, [ip]
 801f61a:	9201      	str	r2, [sp, #4]
 801f61c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801f620:	3204      	adds	r2, #4
 801f622:	9202      	str	r2, [sp, #8]
 801f624:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f628:	f1bb 0f00 	cmp.w	fp, #0
 801f62c:	dc03      	bgt.n	801f636 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f62e:	9a04      	ldr	r2, [sp, #16]
 801f630:	2a00      	cmp	r2, #0
 801f632:	f340 8138 	ble.w	801f8a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f636:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f638:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801f63c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801f640:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801f644:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f646:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f64a:	2b00      	cmp	r3, #0
 801f64c:	dd0e      	ble.n	801f66c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f64e:	1402      	asrs	r2, r0, #16
 801f650:	d405      	bmi.n	801f65e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f652:	42ba      	cmp	r2, r7
 801f654:	da03      	bge.n	801f65e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f656:	140a      	asrs	r2, r1, #16
 801f658:	d401      	bmi.n	801f65e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f65a:	42b2      	cmp	r2, r6
 801f65c:	db07      	blt.n	801f66e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f65e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f660:	4410      	add	r0, r2
 801f662:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f664:	3b01      	subs	r3, #1
 801f666:	4411      	add	r1, r2
 801f668:	3402      	adds	r4, #2
 801f66a:	e7ee      	b.n	801f64a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f66c:	d019      	beq.n	801f6a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801f66e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f670:	1e5a      	subs	r2, r3, #1
 801f672:	fb05 0502 	mla	r5, r5, r2, r0
 801f676:	142d      	asrs	r5, r5, #16
 801f678:	d409      	bmi.n	801f68e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f67a:	42bd      	cmp	r5, r7
 801f67c:	da07      	bge.n	801f68e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f67e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f680:	fb05 1202 	mla	r2, r5, r2, r1
 801f684:	1412      	asrs	r2, r2, #16
 801f686:	d402      	bmi.n	801f68e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f688:	42b2      	cmp	r2, r6
 801f68a:	f2c0 80ac 	blt.w	801f7e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801f68e:	f04f 0e00 	mov.w	lr, #0
 801f692:	eb03 020e 	add.w	r2, r3, lr
 801f696:	2a00      	cmp	r2, #0
 801f698:	dc3e      	bgt.n	801f718 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801f69a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f69e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f6a2:	f1bb 0f00 	cmp.w	fp, #0
 801f6a6:	f340 80fe 	ble.w	801f8a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f6aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f6ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f6b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f6b8:	f1bb 0b01 	subs.w	fp, fp, #1
 801f6bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f6c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f6c4:	eeb0 6a62 	vmov.f32	s12, s5
 801f6c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f6d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6d4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801f6d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6dc:	eeb0 6a43 	vmov.f32	s12, s6
 801f6e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6e4:	ee12 2a90 	vmov	r2, s5
 801f6e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6f0:	ee13 2a10 	vmov	r2, s6
 801f6f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f6f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f6fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f6fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f700:	9a04      	ldr	r2, [sp, #16]
 801f702:	9314      	str	r3, [sp, #80]	@ 0x50
 801f704:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801f708:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f70a:	eeb0 3a67 	vmov.f32	s6, s15
 801f70e:	bf08      	it	eq
 801f710:	4613      	moveq	r3, r2
 801f712:	eef0 2a47 	vmov.f32	s5, s14
 801f716:	e787      	b.n	801f628 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f718:	1406      	asrs	r6, r0, #16
 801f71a:	d45d      	bmi.n	801f7d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f71c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801f720:	42b5      	cmp	r5, r6
 801f722:	dd59      	ble.n	801f7d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f724:	140f      	asrs	r7, r1, #16
 801f726:	d457      	bmi.n	801f7d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f728:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801f72c:	42ba      	cmp	r2, r7
 801f72e:	dd53      	ble.n	801f7d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f730:	9a01      	ldr	r2, [sp, #4]
 801f732:	b22d      	sxth	r5, r5
 801f734:	fb07 2505 	mla	r5, r7, r5, r2
 801f738:	5daa      	ldrb	r2, [r5, r6]
 801f73a:	9d02      	ldr	r5, [sp, #8]
 801f73c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f740:	0e2e      	lsrs	r6, r5, #24
 801f742:	d049      	beq.n	801f7d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f744:	f06f 0201 	mvn.w	r2, #1
 801f748:	fb02 f20e 	mul.w	r2, r2, lr
 801f74c:	9203      	str	r2, [sp, #12]
 801f74e:	f834 8002 	ldrh.w	r8, [r4, r2]
 801f752:	9a05      	ldr	r2, [sp, #20]
 801f754:	4356      	muls	r6, r2
 801f756:	1c72      	adds	r2, r6, #1
 801f758:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f75c:	1212      	asrs	r2, r2, #8
 801f75e:	fa1f f982 	uxth.w	r9, r2
 801f762:	ea4f 2728 	mov.w	r7, r8, asr #8
 801f766:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f76a:	43d2      	mvns	r2, r2
 801f76c:	b2d2      	uxtb	r2, r2
 801f76e:	fb16 f609 	smulbb	r6, r6, r9
 801f772:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f776:	fb07 6702 	mla	r7, r7, r2, r6
 801f77a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f77e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801f782:	b2ed      	uxtb	r5, r5
 801f784:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f788:	fa5f f888 	uxtb.w	r8, r8
 801f78c:	fb15 f509 	smulbb	r5, r5, r9
 801f790:	fb08 5502 	mla	r5, r8, r2, r5
 801f794:	b2bf      	uxth	r7, r7
 801f796:	fb1a fa09 	smulbb	sl, sl, r9
 801f79a:	b2ad      	uxth	r5, r5
 801f79c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f7a0:	fb06 a602 	mla	r6, r6, r2, sl
 801f7a4:	1c7a      	adds	r2, r7, #1
 801f7a6:	f105 0a01 	add.w	sl, r5, #1
 801f7aa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f7ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f7b2:	b2b6      	uxth	r6, r6
 801f7b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f7b8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f7bc:	ea4a 0707 	orr.w	r7, sl, r7
 801f7c0:	f106 0a01 	add.w	sl, r6, #1
 801f7c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f7c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f7cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f7d0:	9a03      	ldr	r2, [sp, #12]
 801f7d2:	ea47 070a 	orr.w	r7, r7, sl
 801f7d6:	52a7      	strh	r7, [r4, r2]
 801f7d8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f7da:	4410      	add	r0, r2
 801f7dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f7de:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f7e2:	4411      	add	r1, r2
 801f7e4:	e755      	b.n	801f692 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801f7e6:	f04f 0800 	mov.w	r8, #0
 801f7ea:	eba3 0208 	sub.w	r2, r3, r8
 801f7ee:	2a00      	cmp	r2, #0
 801f7f0:	f77f af53 	ble.w	801f69a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801f7f4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801f7f8:	9f01      	ldr	r7, [sp, #4]
 801f7fa:	140a      	asrs	r2, r1, #16
 801f7fc:	1405      	asrs	r5, r0, #16
 801f7fe:	fb06 7202 	mla	r2, r6, r2, r7
 801f802:	5d52      	ldrb	r2, [r2, r5]
 801f804:	9d02      	ldr	r5, [sp, #8]
 801f806:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f80a:	0e2e      	lsrs	r6, r5, #24
 801f80c:	d044      	beq.n	801f898 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f80e:	9a05      	ldr	r2, [sp, #20]
 801f810:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801f814:	4356      	muls	r6, r2
 801f816:	1c72      	adds	r2, r6, #1
 801f818:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f81c:	1212      	asrs	r2, r2, #8
 801f81e:	fa1f f982 	uxth.w	r9, r2
 801f822:	ea4f 272e 	mov.w	r7, lr, asr #8
 801f826:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f82a:	43d2      	mvns	r2, r2
 801f82c:	b2d2      	uxtb	r2, r2
 801f82e:	fb16 f609 	smulbb	r6, r6, r9
 801f832:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f836:	fb07 6702 	mla	r7, r7, r2, r6
 801f83a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f83e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f842:	b2ed      	uxtb	r5, r5
 801f844:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f848:	fa5f fe8e 	uxtb.w	lr, lr
 801f84c:	fb15 f509 	smulbb	r5, r5, r9
 801f850:	fb0e 5502 	mla	r5, lr, r2, r5
 801f854:	b2bf      	uxth	r7, r7
 801f856:	fb1a fa09 	smulbb	sl, sl, r9
 801f85a:	b2ad      	uxth	r5, r5
 801f85c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f860:	fb06 a602 	mla	r6, r6, r2, sl
 801f864:	1c7a      	adds	r2, r7, #1
 801f866:	f105 0a01 	add.w	sl, r5, #1
 801f86a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f86e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f872:	b2b6      	uxth	r6, r6
 801f874:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f878:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f87c:	ea4a 0707 	orr.w	r7, sl, r7
 801f880:	f106 0a01 	add.w	sl, r6, #1
 801f884:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f888:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f88c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f890:	ea47 070a 	orr.w	r7, r7, sl
 801f894:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801f898:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f89a:	4410      	add	r0, r2
 801f89c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f89e:	f108 0801 	add.w	r8, r8, #1
 801f8a2:	4411      	add	r1, r2
 801f8a4:	e7a1      	b.n	801f7ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801f8a6:	b007      	add	sp, #28
 801f8a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f8ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8b0:	b085      	sub	sp, #20
 801f8b2:	468b      	mov	fp, r1
 801f8b4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f8b6:	9203      	str	r2, [sp, #12]
 801f8b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801f8bc:	6841      	ldr	r1, [r0, #4]
 801f8be:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801f8c2:	fb01 2404 	mla	r4, r1, r4, r2
 801f8c6:	6802      	ldr	r2, [r0, #0]
 801f8c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f8cc:	f8de 2000 	ldr.w	r2, [lr]
 801f8d0:	9200      	str	r2, [sp, #0]
 801f8d2:	f8de 2004 	ldr.w	r2, [lr, #4]
 801f8d6:	3204      	adds	r2, #4
 801f8d8:	9201      	str	r2, [sp, #4]
 801f8da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f8de:	f1bb 0f00 	cmp.w	fp, #0
 801f8e2:	dc03      	bgt.n	801f8ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f8e4:	9a03      	ldr	r2, [sp, #12]
 801f8e6:	2a00      	cmp	r2, #0
 801f8e8:	f340 8153 	ble.w	801fb92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f8ec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f8ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801f8f2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801f8f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801f8fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f8fc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801f900:	2b00      	cmp	r3, #0
 801f902:	dd0e      	ble.n	801f922 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f904:	1408      	asrs	r0, r1, #16
 801f906:	d405      	bmi.n	801f914 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f908:	42b8      	cmp	r0, r7
 801f90a:	da03      	bge.n	801f914 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f90c:	1410      	asrs	r0, r2, #16
 801f90e:	d401      	bmi.n	801f914 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f910:	42b0      	cmp	r0, r6
 801f912:	db07      	blt.n	801f924 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f914:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f916:	4401      	add	r1, r0
 801f918:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f91a:	3b01      	subs	r3, #1
 801f91c:	4402      	add	r2, r0
 801f91e:	3402      	adds	r4, #2
 801f920:	e7ee      	b.n	801f900 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f922:	d017      	beq.n	801f954 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801f924:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f926:	1e58      	subs	r0, r3, #1
 801f928:	fb05 1500 	mla	r5, r5, r0, r1
 801f92c:	142d      	asrs	r5, r5, #16
 801f92e:	d409      	bmi.n	801f944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f930:	42bd      	cmp	r5, r7
 801f932:	da07      	bge.n	801f944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f934:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f936:	fb05 2000 	mla	r0, r5, r0, r2
 801f93a:	1400      	asrs	r0, r0, #16
 801f93c:	d402      	bmi.n	801f944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f93e:	42b0      	cmp	r0, r6
 801f940:	f2c0 80bc 	blt.w	801fabc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801f944:	2600      	movs	r6, #0
 801f946:	1998      	adds	r0, r3, r6
 801f948:	2800      	cmp	r0, #0
 801f94a:	dc3e      	bgt.n	801f9ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801f94c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f950:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f954:	f1bb 0f00 	cmp.w	fp, #0
 801f958:	f340 811b 	ble.w	801fb92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f95c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f960:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f964:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f968:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f96a:	f1bb 0b01 	subs.w	fp, fp, #1
 801f96e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f972:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f976:	eeb0 6a62 	vmov.f32	s12, s5
 801f97a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f97e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f982:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f986:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801f98a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f98e:	eeb0 6a43 	vmov.f32	s12, s6
 801f992:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f996:	ee12 2a90 	vmov	r2, s5
 801f99a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f99e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9a2:	ee13 2a10 	vmov	r2, s6
 801f9a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f9aa:	9311      	str	r3, [sp, #68]	@ 0x44
 801f9ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f9ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9b2:	9a03      	ldr	r2, [sp, #12]
 801f9b4:	9312      	str	r3, [sp, #72]	@ 0x48
 801f9b6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801f9ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f9bc:	eeb0 3a67 	vmov.f32	s6, s15
 801f9c0:	bf08      	it	eq
 801f9c2:	4613      	moveq	r3, r2
 801f9c4:	eef0 2a47 	vmov.f32	s5, s14
 801f9c8:	e789      	b.n	801f8de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f9ca:	140f      	asrs	r7, r1, #16
 801f9cc:	d426      	bmi.n	801fa1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f9ce:	f8de 5008 	ldr.w	r5, [lr, #8]
 801f9d2:	42bd      	cmp	r5, r7
 801f9d4:	dd22      	ble.n	801fa1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f9d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801f9da:	d41f      	bmi.n	801fa1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f9dc:	f8de 000c 	ldr.w	r0, [lr, #12]
 801f9e0:	4560      	cmp	r0, ip
 801f9e2:	dd1b      	ble.n	801fa1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801f9e4:	9800      	ldr	r0, [sp, #0]
 801f9e6:	b22d      	sxth	r5, r5
 801f9e8:	fb0c 0505 	mla	r5, ip, r5, r0
 801f9ec:	5de8      	ldrb	r0, [r5, r7]
 801f9ee:	9d01      	ldr	r5, [sp, #4]
 801f9f0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801f9f4:	0e07      	lsrs	r7, r0, #24
 801f9f6:	2fff      	cmp	r7, #255	@ 0xff
 801f9f8:	d116      	bne.n	801fa28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801f9fa:	f06f 0501 	mvn.w	r5, #1
 801f9fe:	fb05 f706 	mul.w	r7, r5, r6
 801fa02:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801fa06:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801fa0a:	0945      	lsrs	r5, r0, #5
 801fa0c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fa10:	ea4c 0505 	orr.w	r5, ip, r5
 801fa14:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801fa18:	4305      	orrs	r5, r0
 801fa1a:	53e5      	strh	r5, [r4, r7]
 801fa1c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fa1e:	4401      	add	r1, r0
 801fa20:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801fa22:	3e01      	subs	r6, #1
 801fa24:	4402      	add	r2, r0
 801fa26:	e78e      	b.n	801f946 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fa28:	b2fd      	uxtb	r5, r7
 801fa2a:	2f00      	cmp	r7, #0
 801fa2c:	d0f6      	beq.n	801fa1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801fa2e:	f06f 0701 	mvn.w	r7, #1
 801fa32:	4377      	muls	r7, r6
 801fa34:	fa1f f985 	uxth.w	r9, r5
 801fa38:	f834 8007 	ldrh.w	r8, [r4, r7]
 801fa3c:	9702      	str	r7, [sp, #8]
 801fa3e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801fa42:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801fa46:	43ed      	mvns	r5, r5
 801fa48:	b2ed      	uxtb	r5, r5
 801fa4a:	fb17 f709 	smulbb	r7, r7, r9
 801fa4e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fa52:	fb0c 7c05 	mla	ip, ip, r5, r7
 801fa56:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801fa5a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801fa5e:	b2c0      	uxtb	r0, r0
 801fa60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801fa64:	fa5f f888 	uxtb.w	r8, r8
 801fa68:	fb10 f009 	smulbb	r0, r0, r9
 801fa6c:	fb08 0005 	mla	r0, r8, r5, r0
 801fa70:	b280      	uxth	r0, r0
 801fa72:	fa1f fc8c 	uxth.w	ip, ip
 801fa76:	fb1a fa09 	smulbb	sl, sl, r9
 801fa7a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801fa7e:	fb07 a705 	mla	r7, r7, r5, sl
 801fa82:	f100 0a01 	add.w	sl, r0, #1
 801fa86:	f10c 0501 	add.w	r5, ip, #1
 801fa8a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801fa8e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801fa92:	b2bf      	uxth	r7, r7
 801fa94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fa98:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fa9c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801faa0:	f107 0a01 	add.w	sl, r7, #1
 801faa4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801faa8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801faac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fab0:	9802      	ldr	r0, [sp, #8]
 801fab2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fab6:	f824 c000 	strh.w	ip, [r4, r0]
 801faba:	e7af      	b.n	801fa1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801fabc:	f04f 0800 	mov.w	r8, #0
 801fac0:	eba3 0008 	sub.w	r0, r3, r8
 801fac4:	2800      	cmp	r0, #0
 801fac6:	f77f af41 	ble.w	801f94c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801faca:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801face:	9f00      	ldr	r7, [sp, #0]
 801fad0:	1410      	asrs	r0, r2, #16
 801fad2:	140d      	asrs	r5, r1, #16
 801fad4:	fb06 7000 	mla	r0, r6, r0, r7
 801fad8:	5d40      	ldrb	r0, [r0, r5]
 801fada:	9d01      	ldr	r5, [sp, #4]
 801fadc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801fae0:	0e2e      	lsrs	r6, r5, #24
 801fae2:	2eff      	cmp	r6, #255	@ 0xff
 801fae4:	d112      	bne.n	801fb0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801fae6:	482c      	ldr	r0, [pc, #176]	@ (801fb98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801fae8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801faec:	0968      	lsrs	r0, r5, #5
 801faee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801faf2:	4330      	orrs	r0, r6
 801faf4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801faf8:	4328      	orrs	r0, r5
 801fafa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801fafe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801fb00:	4401      	add	r1, r0
 801fb02:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801fb04:	f108 0801 	add.w	r8, r8, #1
 801fb08:	4402      	add	r2, r0
 801fb0a:	e7d9      	b.n	801fac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fb0c:	b2f0      	uxtb	r0, r6
 801fb0e:	2e00      	cmp	r6, #0
 801fb10:	d0f5      	beq.n	801fafe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fb12:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801fb16:	fa1f f980 	uxth.w	r9, r0
 801fb1a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801fb1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801fb22:	43c0      	mvns	r0, r0
 801fb24:	b2c0      	uxtb	r0, r0
 801fb26:	fb16 f609 	smulbb	r6, r6, r9
 801fb2a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801fb2e:	fb07 6700 	mla	r7, r7, r0, r6
 801fb32:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801fb36:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801fb3a:	b2ed      	uxtb	r5, r5
 801fb3c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fb40:	fa5f fc8c 	uxtb.w	ip, ip
 801fb44:	fb15 f509 	smulbb	r5, r5, r9
 801fb48:	fb0c 5500 	mla	r5, ip, r0, r5
 801fb4c:	b2bf      	uxth	r7, r7
 801fb4e:	fb1a fa09 	smulbb	sl, sl, r9
 801fb52:	b2ad      	uxth	r5, r5
 801fb54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fb58:	fb06 a600 	mla	r6, r6, r0, sl
 801fb5c:	1c78      	adds	r0, r7, #1
 801fb5e:	f105 0a01 	add.w	sl, r5, #1
 801fb62:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801fb66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fb6a:	b2b6      	uxth	r6, r6
 801fb6c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fb70:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801fb74:	ea4a 0707 	orr.w	r7, sl, r7
 801fb78:	f106 0a01 	add.w	sl, r6, #1
 801fb7c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fb80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fb84:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fb88:	ea47 070a 	orr.w	r7, r7, sl
 801fb8c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801fb90:	e7b5      	b.n	801fafe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fb92:	b005      	add	sp, #20
 801fb94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb98:	fffff800 	.word	0xfffff800

0801fb9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fba0:	b087      	sub	sp, #28
 801fba2:	468b      	mov	fp, r1
 801fba4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801fba6:	9204      	str	r2, [sp, #16]
 801fba8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801fbac:	9205      	str	r2, [sp, #20]
 801fbae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801fbb2:	6861      	ldr	r1, [r4, #4]
 801fbb4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801fbb8:	fb01 2000 	mla	r0, r1, r0, r2
 801fbbc:	6822      	ldr	r2, [r4, #0]
 801fbbe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801fbc2:	f8de 2000 	ldr.w	r2, [lr]
 801fbc6:	9201      	str	r2, [sp, #4]
 801fbc8:	f8de 2004 	ldr.w	r2, [lr, #4]
 801fbcc:	9202      	str	r2, [sp, #8]
 801fbce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801fbd2:	f1bb 0f00 	cmp.w	fp, #0
 801fbd6:	dc03      	bgt.n	801fbe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801fbd8:	9a04      	ldr	r2, [sp, #16]
 801fbda:	2a00      	cmp	r2, #0
 801fbdc:	f340 8142 	ble.w	801fe64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801fbe0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fbe2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801fbe6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801fbea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801fbee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801fbf0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801fbf4:	2b00      	cmp	r3, #0
 801fbf6:	dd0e      	ble.n	801fc16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbf8:	140c      	asrs	r4, r1, #16
 801fbfa:	d405      	bmi.n	801fc08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fbfc:	42bc      	cmp	r4, r7
 801fbfe:	da03      	bge.n	801fc08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fc00:	1414      	asrs	r4, r2, #16
 801fc02:	d401      	bmi.n	801fc08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fc04:	42b4      	cmp	r4, r6
 801fc06:	db07      	blt.n	801fc18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fc08:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fc0a:	4421      	add	r1, r4
 801fc0c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801fc0e:	3b01      	subs	r3, #1
 801fc10:	4422      	add	r2, r4
 801fc12:	3002      	adds	r0, #2
 801fc14:	e7ee      	b.n	801fbf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fc16:	d019      	beq.n	801fc4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801fc18:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fc1a:	1e5c      	subs	r4, r3, #1
 801fc1c:	fb05 1504 	mla	r5, r5, r4, r1
 801fc20:	142d      	asrs	r5, r5, #16
 801fc22:	d409      	bmi.n	801fc38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fc24:	42bd      	cmp	r5, r7
 801fc26:	da07      	bge.n	801fc38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fc28:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fc2a:	fb05 2404 	mla	r4, r5, r4, r2
 801fc2e:	1424      	asrs	r4, r4, #16
 801fc30:	d402      	bmi.n	801fc38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fc32:	42b4      	cmp	r4, r6
 801fc34:	f2c0 80b1 	blt.w	801fd9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fc38:	f04f 0800 	mov.w	r8, #0
 801fc3c:	eb03 0408 	add.w	r4, r3, r8
 801fc40:	2c00      	cmp	r4, #0
 801fc42:	dc3e      	bgt.n	801fcc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801fc44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fc48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fc4c:	f1bb 0f00 	cmp.w	fp, #0
 801fc50:	f340 8108 	ble.w	801fe64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801fc54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801fc60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fc62:	f1bb 0b01 	subs.w	fp, fp, #1
 801fc66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc6e:	eeb0 6a62 	vmov.f32	s12, s5
 801fc72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fc7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc7e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801fc82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc86:	eeb0 6a43 	vmov.f32	s12, s6
 801fc8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc8e:	ee12 2a90 	vmov	r2, s5
 801fc92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc96:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc9a:	ee13 2a10 	vmov	r2, s6
 801fc9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fca2:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fca4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fca6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcaa:	9a04      	ldr	r2, [sp, #16]
 801fcac:	9314      	str	r3, [sp, #80]	@ 0x50
 801fcae:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801fcb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fcb4:	eeb0 3a67 	vmov.f32	s6, s15
 801fcb8:	bf08      	it	eq
 801fcba:	4613      	moveq	r3, r2
 801fcbc:	eef0 2a47 	vmov.f32	s5, s14
 801fcc0:	e787      	b.n	801fbd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801fcc2:	140e      	asrs	r6, r1, #16
 801fcc4:	d462      	bmi.n	801fd8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fcc6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801fcca:	42b5      	cmp	r5, r6
 801fccc:	dd5e      	ble.n	801fd8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fcce:	1417      	asrs	r7, r2, #16
 801fcd0:	d45c      	bmi.n	801fd8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fcd2:	f8de 400c 	ldr.w	r4, [lr, #12]
 801fcd6:	42bc      	cmp	r4, r7
 801fcd8:	dd58      	ble.n	801fd8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fcda:	b22d      	sxth	r5, r5
 801fcdc:	fb07 6505 	mla	r5, r7, r5, r6
 801fce0:	9c02      	ldr	r4, [sp, #8]
 801fce2:	5d66      	ldrb	r6, [r4, r5]
 801fce4:	2e00      	cmp	r6, #0
 801fce6:	d051      	beq.n	801fd8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fce8:	9c01      	ldr	r4, [sp, #4]
 801fcea:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801fcee:	f06f 0401 	mvn.w	r4, #1
 801fcf2:	fb04 f408 	mul.w	r4, r4, r8
 801fcf6:	9403      	str	r4, [sp, #12]
 801fcf8:	5b05      	ldrh	r5, [r0, r4]
 801fcfa:	9c05      	ldr	r4, [sp, #20]
 801fcfc:	4366      	muls	r6, r4
 801fcfe:	1c74      	adds	r4, r6, #1
 801fd00:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801fd04:	1224      	asrs	r4, r4, #8
 801fd06:	b2a7      	uxth	r7, r4
 801fd08:	122e      	asrs	r6, r5, #8
 801fd0a:	43e4      	mvns	r4, r4
 801fd0c:	b2e4      	uxtb	r4, r4
 801fd0e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801fd12:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801fd16:	fb16 f604 	smulbb	r6, r6, r4
 801fd1a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fd1e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fd22:	00ed      	lsls	r5, r5, #3
 801fd24:	fb0c 6c07 	mla	ip, ip, r7, r6
 801fd28:	b2ed      	uxtb	r5, r5
 801fd2a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801fd2e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801fd32:	fb15 f504 	smulbb	r5, r5, r4
 801fd36:	fa5f f989 	uxtb.w	r9, r9
 801fd3a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801fd3e:	fb09 5507 	mla	r5, r9, r7, r5
 801fd42:	fb1a fa04 	smulbb	sl, sl, r4
 801fd46:	fa1f fc8c 	uxth.w	ip, ip
 801fd4a:	b2ad      	uxth	r5, r5
 801fd4c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fd50:	fb06 a607 	mla	r6, r6, r7, sl
 801fd54:	f10c 0401 	add.w	r4, ip, #1
 801fd58:	f105 0a01 	add.w	sl, r5, #1
 801fd5c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801fd60:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fd64:	b2b6      	uxth	r6, r6
 801fd66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fd6a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fd6e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801fd72:	f106 0a01 	add.w	sl, r6, #1
 801fd76:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fd7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fd7e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fd82:	9c03      	ldr	r4, [sp, #12]
 801fd84:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fd88:	f820 c004 	strh.w	ip, [r0, r4]
 801fd8c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fd8e:	4421      	add	r1, r4
 801fd90:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801fd92:	f108 38ff 	add.w	r8, r8, #4294967295
 801fd96:	4422      	add	r2, r4
 801fd98:	e750      	b.n	801fc3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801fd9a:	f04f 0900 	mov.w	r9, #0
 801fd9e:	eba3 0409 	sub.w	r4, r3, r9
 801fda2:	2c00      	cmp	r4, #0
 801fda4:	f77f af4e 	ble.w	801fc44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801fda8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801fdac:	140d      	asrs	r5, r1, #16
 801fdae:	1414      	asrs	r4, r2, #16
 801fdb0:	fb06 5404 	mla	r4, r6, r4, r5
 801fdb4:	9d02      	ldr	r5, [sp, #8]
 801fdb6:	5d2e      	ldrb	r6, [r5, r4]
 801fdb8:	2e00      	cmp	r6, #0
 801fdba:	d04c      	beq.n	801fe56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801fdbc:	9d01      	ldr	r5, [sp, #4]
 801fdbe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801fdc2:	9c05      	ldr	r4, [sp, #20]
 801fdc4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801fdc8:	4366      	muls	r6, r4
 801fdca:	1c74      	adds	r4, r6, #1
 801fdcc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801fdd0:	1224      	asrs	r4, r4, #8
 801fdd2:	b2a7      	uxth	r7, r4
 801fdd4:	122e      	asrs	r6, r5, #8
 801fdd6:	43e4      	mvns	r4, r4
 801fdd8:	b2e4      	uxtb	r4, r4
 801fdda:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801fdde:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801fde2:	fb16 f604 	smulbb	r6, r6, r4
 801fde6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fdea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801fdee:	00ed      	lsls	r5, r5, #3
 801fdf0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801fdf4:	b2ed      	uxtb	r5, r5
 801fdf6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801fdfa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801fdfe:	fb15 f504 	smulbb	r5, r5, r4
 801fe02:	fa5f f888 	uxtb.w	r8, r8
 801fe06:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801fe0a:	fb08 5507 	mla	r5, r8, r7, r5
 801fe0e:	fb1a fa04 	smulbb	sl, sl, r4
 801fe12:	fa1f fc8c 	uxth.w	ip, ip
 801fe16:	b2ad      	uxth	r5, r5
 801fe18:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fe1c:	fb06 a607 	mla	r6, r6, r7, sl
 801fe20:	f10c 0401 	add.w	r4, ip, #1
 801fe24:	f105 0a01 	add.w	sl, r5, #1
 801fe28:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801fe2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fe30:	b2b6      	uxth	r6, r6
 801fe32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fe36:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801fe3a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801fe3e:	f106 0a01 	add.w	sl, r6, #1
 801fe42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fe46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fe4a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fe4e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fe52:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801fe56:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fe58:	4421      	add	r1, r4
 801fe5a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801fe5c:	f109 0901 	add.w	r9, r9, #1
 801fe60:	4422      	add	r2, r4
 801fe62:	e79c      	b.n	801fd9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801fe64:	b007      	add	sp, #28
 801fe66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fe6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe6e:	b085      	sub	sp, #20
 801fe70:	468b      	mov	fp, r1
 801fe72:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fe74:	9203      	str	r2, [sp, #12]
 801fe76:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801fe7a:	6861      	ldr	r1, [r4, #4]
 801fe7c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801fe80:	fb01 2000 	mla	r0, r1, r0, r2
 801fe84:	6822      	ldr	r2, [r4, #0]
 801fe86:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801fe8a:	f8d8 2000 	ldr.w	r2, [r8]
 801fe8e:	9200      	str	r2, [sp, #0]
 801fe90:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801fe94:	9201      	str	r2, [sp, #4]
 801fe96:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801fe9a:	f1bb 0f00 	cmp.w	fp, #0
 801fe9e:	dc03      	bgt.n	801fea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fea0:	9a03      	ldr	r2, [sp, #12]
 801fea2:	2a00      	cmp	r2, #0
 801fea4:	f340 8146 	ble.w	8020134 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801fea8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801feaa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801feae:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801feb2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801feb6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801feb8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801febc:	2b00      	cmp	r3, #0
 801febe:	dd0e      	ble.n	801fede <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801fec0:	140c      	asrs	r4, r1, #16
 801fec2:	d405      	bmi.n	801fed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fec4:	42bc      	cmp	r4, r7
 801fec6:	da03      	bge.n	801fed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fec8:	1414      	asrs	r4, r2, #16
 801feca:	d401      	bmi.n	801fed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fecc:	42b4      	cmp	r4, r6
 801fece:	db07      	blt.n	801fee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fed0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801fed2:	4421      	add	r1, r4
 801fed4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801fed6:	3b01      	subs	r3, #1
 801fed8:	4422      	add	r2, r4
 801feda:	3002      	adds	r0, #2
 801fedc:	e7ee      	b.n	801febc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fede:	d017      	beq.n	801ff10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801fee0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fee2:	1e5c      	subs	r4, r3, #1
 801fee4:	fb05 1504 	mla	r5, r5, r4, r1
 801fee8:	142d      	asrs	r5, r5, #16
 801feea:	d409      	bmi.n	801ff00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801feec:	42bd      	cmp	r5, r7
 801feee:	da07      	bge.n	801ff00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fef0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fef2:	fb05 2404 	mla	r4, r5, r4, r2
 801fef6:	1424      	asrs	r4, r4, #16
 801fef8:	d402      	bmi.n	801ff00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fefa:	42b4      	cmp	r4, r6
 801fefc:	f2c0 80b3 	blt.w	8020066 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ff00:	2600      	movs	r6, #0
 801ff02:	199c      	adds	r4, r3, r6
 801ff04:	2c00      	cmp	r4, #0
 801ff06:	dc3e      	bgt.n	801ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ff08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ff0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ff10:	f1bb 0f00 	cmp.w	fp, #0
 801ff14:	f340 810e 	ble.w	8020134 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ff18:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ff24:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ff26:	f1bb 0b01 	subs.w	fp, fp, #1
 801ff2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff32:	eeb0 6a62 	vmov.f32	s12, s5
 801ff36:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ff3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff42:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801ff46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff4a:	eeb0 6a43 	vmov.f32	s12, s6
 801ff4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff52:	ee12 2a90 	vmov	r2, s5
 801ff56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff5e:	ee13 2a10 	vmov	r2, s6
 801ff62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ff66:	9311      	str	r3, [sp, #68]	@ 0x44
 801ff68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ff6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff6e:	9a03      	ldr	r2, [sp, #12]
 801ff70:	9312      	str	r3, [sp, #72]	@ 0x48
 801ff72:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801ff76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ff78:	eeb0 3a67 	vmov.f32	s6, s15
 801ff7c:	bf08      	it	eq
 801ff7e:	4613      	moveq	r3, r2
 801ff80:	eef0 2a47 	vmov.f32	s5, s14
 801ff84:	e789      	b.n	801fe9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ff86:	140f      	asrs	r7, r1, #16
 801ff88:	d418      	bmi.n	801ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff8a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ff8e:	42bd      	cmp	r5, r7
 801ff90:	dd14      	ble.n	801ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff92:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ff96:	d411      	bmi.n	801ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ff98:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801ff9c:	4564      	cmp	r4, ip
 801ff9e:	dd0d      	ble.n	801ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ffa0:	b22d      	sxth	r5, r5
 801ffa2:	fb0c 7505 	mla	r5, ip, r5, r7
 801ffa6:	9c01      	ldr	r4, [sp, #4]
 801ffa8:	5d64      	ldrb	r4, [r4, r5]
 801ffaa:	2cff      	cmp	r4, #255	@ 0xff
 801ffac:	d10c      	bne.n	801ffc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ffae:	9c00      	ldr	r4, [sp, #0]
 801ffb0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801ffb4:	f06f 0401 	mvn.w	r4, #1
 801ffb8:	4374      	muls	r4, r6
 801ffba:	5305      	strh	r5, [r0, r4]
 801ffbc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ffbe:	4421      	add	r1, r4
 801ffc0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ffc2:	3e01      	subs	r6, #1
 801ffc4:	4422      	add	r2, r4
 801ffc6:	e79c      	b.n	801ff02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ffc8:	2c00      	cmp	r4, #0
 801ffca:	d0f7      	beq.n	801ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ffcc:	9f00      	ldr	r7, [sp, #0]
 801ffce:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801ffd2:	f06f 0501 	mvn.w	r5, #1
 801ffd6:	4375      	muls	r5, r6
 801ffd8:	9502      	str	r5, [sp, #8]
 801ffda:	5b45      	ldrh	r5, [r0, r5]
 801ffdc:	fa1f fc84 	uxth.w	ip, r4
 801ffe0:	122f      	asrs	r7, r5, #8
 801ffe2:	43e4      	mvns	r4, r4
 801ffe4:	b2e4      	uxtb	r4, r4
 801ffe6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ffea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ffee:	fb17 f704 	smulbb	r7, r7, r4
 801fff2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fff6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801fffa:	00ed      	lsls	r5, r5, #3
 801fffc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8020000:	b2ed      	uxtb	r5, r5
 8020002:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8020006:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 802000a:	fb15 f504 	smulbb	r5, r5, r4
 802000e:	fa5f f989 	uxtb.w	r9, r9
 8020012:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8020016:	fb09 550c 	mla	r5, r9, ip, r5
 802001a:	fb1a fa04 	smulbb	sl, sl, r4
 802001e:	fa1f fe8e 	uxth.w	lr, lr
 8020022:	b2ad      	uxth	r5, r5
 8020024:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020028:	fb07 a70c 	mla	r7, r7, ip, sl
 802002c:	f10e 0401 	add.w	r4, lr, #1
 8020030:	f105 0a01 	add.w	sl, r5, #1
 8020034:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8020038:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 802003c:	b2bf      	uxth	r7, r7
 802003e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020042:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8020046:	ea4a 0e0e 	orr.w	lr, sl, lr
 802004a:	f107 0a01 	add.w	sl, r7, #1
 802004e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8020052:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020056:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802005a:	9c02      	ldr	r4, [sp, #8]
 802005c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8020060:	f820 e004 	strh.w	lr, [r0, r4]
 8020064:	e7aa      	b.n	801ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020066:	f04f 0900 	mov.w	r9, #0
 802006a:	eba3 0409 	sub.w	r4, r3, r9
 802006e:	2c00      	cmp	r4, #0
 8020070:	f77f af4a 	ble.w	801ff08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020074:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8020078:	1414      	asrs	r4, r2, #16
 802007a:	140d      	asrs	r5, r1, #16
 802007c:	fb06 5504 	mla	r5, r6, r4, r5
 8020080:	9c01      	ldr	r4, [sp, #4]
 8020082:	5d64      	ldrb	r4, [r4, r5]
 8020084:	2cff      	cmp	r4, #255	@ 0xff
 8020086:	d10b      	bne.n	80200a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020088:	9c00      	ldr	r4, [sp, #0]
 802008a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 802008e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8020092:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020094:	4421      	add	r1, r4
 8020096:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020098:	f109 0901 	add.w	r9, r9, #1
 802009c:	4422      	add	r2, r4
 802009e:	e7e4      	b.n	802006a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80200a0:	2c00      	cmp	r4, #0
 80200a2:	d0f6      	beq.n	8020092 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80200a4:	9e00      	ldr	r6, [sp, #0]
 80200a6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80200aa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80200ae:	b2a7      	uxth	r7, r4
 80200b0:	122e      	asrs	r6, r5, #8
 80200b2:	43e4      	mvns	r4, r4
 80200b4:	b2e4      	uxtb	r4, r4
 80200b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80200ba:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80200be:	fb16 f604 	smulbb	r6, r6, r4
 80200c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80200c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80200ca:	00ed      	lsls	r5, r5, #3
 80200cc:	fb0c 6c07 	mla	ip, ip, r7, r6
 80200d0:	b2ed      	uxtb	r5, r5
 80200d2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80200d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80200da:	fb15 f504 	smulbb	r5, r5, r4
 80200de:	fa5f fe8e 	uxtb.w	lr, lr
 80200e2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80200e6:	fb0e 5507 	mla	r5, lr, r7, r5
 80200ea:	fb1a fa04 	smulbb	sl, sl, r4
 80200ee:	fa1f fc8c 	uxth.w	ip, ip
 80200f2:	b2ad      	uxth	r5, r5
 80200f4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80200f8:	fb06 a607 	mla	r6, r6, r7, sl
 80200fc:	f10c 0401 	add.w	r4, ip, #1
 8020100:	f105 0a01 	add.w	sl, r5, #1
 8020104:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8020108:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 802010c:	b2b6      	uxth	r6, r6
 802010e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020112:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020116:	ea4a 0c0c 	orr.w	ip, sl, ip
 802011a:	f106 0a01 	add.w	sl, r6, #1
 802011e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8020122:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020126:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802012a:	ea4c 0c0a 	orr.w	ip, ip, sl
 802012e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8020132:	e7ae      	b.n	8020092 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020134:	b005      	add	sp, #20
 8020136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802013a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802013a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802013e:	b085      	sub	sp, #20
 8020140:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8020142:	9203      	str	r2, [sp, #12]
 8020144:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8020148:	9201      	str	r2, [sp, #4]
 802014a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 802014e:	9100      	str	r1, [sp, #0]
 8020150:	6841      	ldr	r1, [r0, #4]
 8020152:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8020156:	fb01 2404 	mla	r4, r1, r4, r2
 802015a:	6802      	ldr	r2, [r0, #0]
 802015c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020160:	f8de 2000 	ldr.w	r2, [lr]
 8020164:	9202      	str	r2, [sp, #8]
 8020166:	9a01      	ldr	r2, [sp, #4]
 8020168:	43d6      	mvns	r6, r2
 802016a:	b2f6      	uxtb	r6, r6
 802016c:	9a00      	ldr	r2, [sp, #0]
 802016e:	2a00      	cmp	r2, #0
 8020170:	dc03      	bgt.n	802017a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020172:	9a03      	ldr	r2, [sp, #12]
 8020174:	2a00      	cmp	r2, #0
 8020176:	f340 8124 	ble.w	80203c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802017a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802017c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8020180:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8020184:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020188:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802018a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802018e:	2b00      	cmp	r3, #0
 8020190:	dd0e      	ble.n	80201b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020192:	1408      	asrs	r0, r1, #16
 8020194:	d405      	bmi.n	80201a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020196:	4560      	cmp	r0, ip
 8020198:	da03      	bge.n	80201a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802019a:	1410      	asrs	r0, r2, #16
 802019c:	d401      	bmi.n	80201a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802019e:	42b8      	cmp	r0, r7
 80201a0:	db07      	blt.n	80201b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80201a2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80201a4:	4401      	add	r1, r0
 80201a6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80201a8:	3b01      	subs	r3, #1
 80201aa:	4402      	add	r2, r0
 80201ac:	3402      	adds	r4, #2
 80201ae:	e7ee      	b.n	802018e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80201b0:	d06e      	beq.n	8020290 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80201b2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80201b4:	1e58      	subs	r0, r3, #1
 80201b6:	fb05 1500 	mla	r5, r5, r0, r1
 80201ba:	142d      	asrs	r5, r5, #16
 80201bc:	d45c      	bmi.n	8020278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80201be:	4565      	cmp	r5, ip
 80201c0:	da5a      	bge.n	8020278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80201c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80201c4:	fb05 2000 	mla	r0, r5, r0, r2
 80201c8:	1400      	asrs	r0, r0, #16
 80201ca:	d455      	bmi.n	8020278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80201cc:	42b8      	cmp	r0, r7
 80201ce:	da53      	bge.n	8020278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80201d0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80201d4:	4699      	mov	r9, r3
 80201d6:	46a2      	mov	sl, r4
 80201d8:	f1b9 0f00 	cmp.w	r9, #0
 80201dc:	dd54      	ble.n	8020288 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80201de:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80201e2:	140d      	asrs	r5, r1, #16
 80201e4:	1410      	asrs	r0, r2, #16
 80201e6:	fb07 5000 	mla	r0, r7, r0, r5
 80201ea:	9d02      	ldr	r5, [sp, #8]
 80201ec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80201f0:	f8ba 5000 	ldrh.w	r5, [sl]
 80201f4:	122f      	asrs	r7, r5, #8
 80201f6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80201fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80201fe:	fb17 f706 	smulbb	r7, r7, r6
 8020202:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8020206:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802020a:	00ed      	lsls	r5, r5, #3
 802020c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8020210:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8020214:	10c7      	asrs	r7, r0, #3
 8020216:	b2ed      	uxtb	r5, r5
 8020218:	00c0      	lsls	r0, r0, #3
 802021a:	fb18 f806 	smulbb	r8, r8, r6
 802021e:	fb15 f506 	smulbb	r5, r5, r6
 8020222:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020226:	b2c0      	uxtb	r0, r0
 8020228:	fa1f fc8c 	uxth.w	ip, ip
 802022c:	fb07 870b 	mla	r7, r7, fp, r8
 8020230:	fb00 500b 	mla	r0, r0, fp, r5
 8020234:	b280      	uxth	r0, r0
 8020236:	b2bf      	uxth	r7, r7
 8020238:	f10c 0501 	add.w	r5, ip, #1
 802023c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8020240:	f107 0801 	add.w	r8, r7, #1
 8020244:	1c45      	adds	r5, r0, #1
 8020246:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 802024a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 802024e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020250:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020254:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020258:	ea4f 1858 	mov.w	r8, r8, lsr #5
 802025c:	ea45 0c0c 	orr.w	ip, r5, ip
 8020260:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8020264:	4401      	add	r1, r0
 8020266:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020268:	ea4c 0c08 	orr.w	ip, ip, r8
 802026c:	f82a cb02 	strh.w	ip, [sl], #2
 8020270:	4402      	add	r2, r0
 8020272:	f109 39ff 	add.w	r9, r9, #4294967295
 8020276:	e7af      	b.n	80201d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020278:	f8bd a004 	ldrh.w	sl, [sp, #4]
 802027c:	f04f 0800 	mov.w	r8, #0
 8020280:	eb03 0008 	add.w	r0, r3, r8
 8020284:	2800      	cmp	r0, #0
 8020286:	dc41      	bgt.n	802030c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020288:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802028c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020290:	9b00      	ldr	r3, [sp, #0]
 8020292:	2b00      	cmp	r3, #0
 8020294:	f340 8095 	ble.w	80203c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8020298:	ee30 0a04 	vadd.f32	s0, s0, s8
 802029c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80202a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80202a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80202a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202b2:	eef0 6a62 	vmov.f32	s13, s5
 80202b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202c2:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80202c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202ca:	eef0 6a43 	vmov.f32	s13, s6
 80202ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202d2:	ee12 2a90 	vmov	r2, s5
 80202d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202da:	fb92 f3f3 	sdiv	r3, r2, r3
 80202de:	ee13 2a10 	vmov	r2, s6
 80202e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80202e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80202e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80202ea:	9312      	str	r3, [sp, #72]	@ 0x48
 80202ec:	9b00      	ldr	r3, [sp, #0]
 80202ee:	9a03      	ldr	r2, [sp, #12]
 80202f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202f4:	3b01      	subs	r3, #1
 80202f6:	9300      	str	r3, [sp, #0]
 80202f8:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 80202fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80202fe:	eeb0 3a67 	vmov.f32	s6, s15
 8020302:	bf08      	it	eq
 8020304:	4613      	moveq	r3, r2
 8020306:	eef0 2a47 	vmov.f32	s5, s14
 802030a:	e72f      	b.n	802016c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 802030c:	140f      	asrs	r7, r1, #16
 802030e:	d451      	bmi.n	80203b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8020310:	f8de 5008 	ldr.w	r5, [lr, #8]
 8020314:	42bd      	cmp	r5, r7
 8020316:	dd4d      	ble.n	80203b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8020318:	ea5f 4c22 	movs.w	ip, r2, asr #16
 802031c:	d44a      	bmi.n	80203b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 802031e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8020322:	4560      	cmp	r0, ip
 8020324:	dd46      	ble.n	80203b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8020326:	b22d      	sxth	r5, r5
 8020328:	fb0c 7505 	mla	r5, ip, r5, r7
 802032c:	9802      	ldr	r0, [sp, #8]
 802032e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8020332:	f06f 0501 	mvn.w	r5, #1
 8020336:	fb05 fb08 	mul.w	fp, r5, r8
 802033a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 802033e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8020342:	122f      	asrs	r7, r5, #8
 8020344:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020348:	fb17 f706 	smulbb	r7, r7, r6
 802034c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8020350:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020354:	00ed      	lsls	r5, r5, #3
 8020356:	fb0c 7c0a 	mla	ip, ip, sl, r7
 802035a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 802035e:	10c7      	asrs	r7, r0, #3
 8020360:	b2ed      	uxtb	r5, r5
 8020362:	00c0      	lsls	r0, r0, #3
 8020364:	fb19 f906 	smulbb	r9, r9, r6
 8020368:	fb15 f506 	smulbb	r5, r5, r6
 802036c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020370:	b2c0      	uxtb	r0, r0
 8020372:	fa1f fc8c 	uxth.w	ip, ip
 8020376:	fb07 970a 	mla	r7, r7, sl, r9
 802037a:	fb00 500a 	mla	r0, r0, sl, r5
 802037e:	b2bf      	uxth	r7, r7
 8020380:	b280      	uxth	r0, r0
 8020382:	f10c 0501 	add.w	r5, ip, #1
 8020386:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 802038a:	f107 0901 	add.w	r9, r7, #1
 802038e:	1c45      	adds	r5, r0, #1
 8020390:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8020394:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8020398:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802039c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80203a0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80203a4:	ea45 0c0c 	orr.w	ip, r5, ip
 80203a8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80203ac:	ea4c 0c09 	orr.w	ip, ip, r9
 80203b0:	f824 c00b 	strh.w	ip, [r4, fp]
 80203b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80203b6:	4401      	add	r1, r0
 80203b8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80203ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80203be:	4402      	add	r2, r0
 80203c0:	e75e      	b.n	8020280 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80203c2:	b005      	add	sp, #20
 80203c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080203c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80203c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203cc:	b085      	sub	sp, #20
 80203ce:	4693      	mov	fp, r2
 80203d0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80203d2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80203d4:	6870      	ldr	r0, [r6, #4]
 80203d6:	9101      	str	r1, [sp, #4]
 80203d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80203dc:	fb00 2404 	mla	r4, r0, r4, r2
 80203e0:	6832      	ldr	r2, [r6, #0]
 80203e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80203e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80203ea:	682a      	ldr	r2, [r5, #0]
 80203ec:	9202      	str	r2, [sp, #8]
 80203ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80203f2:	9a01      	ldr	r2, [sp, #4]
 80203f4:	2a00      	cmp	r2, #0
 80203f6:	dc03      	bgt.n	8020400 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80203f8:	f1bb 0f00 	cmp.w	fp, #0
 80203fc:	f340 809a 	ble.w	8020534 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8020400:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020402:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8020406:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 802040a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 802040e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020410:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8020414:	2b00      	cmp	r3, #0
 8020416:	dd0c      	ble.n	8020432 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020418:	1406      	asrs	r6, r0, #16
 802041a:	d405      	bmi.n	8020428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802041c:	454e      	cmp	r6, r9
 802041e:	da03      	bge.n	8020428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020420:	1416      	asrs	r6, r2, #16
 8020422:	d401      	bmi.n	8020428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020424:	4546      	cmp	r6, r8
 8020426:	db05      	blt.n	8020434 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020428:	4470      	add	r0, lr
 802042a:	4462      	add	r2, ip
 802042c:	3b01      	subs	r3, #1
 802042e:	3402      	adds	r4, #2
 8020430:	e7f0      	b.n	8020414 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020432:	d00f      	beq.n	8020454 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020434:	1e5e      	subs	r6, r3, #1
 8020436:	fb0e 0706 	mla	r7, lr, r6, r0
 802043a:	143f      	asrs	r7, r7, #16
 802043c:	d541      	bpl.n	80204c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 802043e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8020442:	4698      	mov	r8, r3
 8020444:	9603      	str	r6, [sp, #12]
 8020446:	f1b8 0f00 	cmp.w	r8, #0
 802044a:	dc56      	bgt.n	80204fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802044c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020450:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020454:	9b01      	ldr	r3, [sp, #4]
 8020456:	2b00      	cmp	r3, #0
 8020458:	dd6c      	ble.n	8020534 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 802045a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802045e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020462:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020466:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020468:	ee31 1a05 	vadd.f32	s2, s2, s10
 802046c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020470:	eeb0 6a62 	vmov.f32	s12, s5
 8020474:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020478:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802047c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020480:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8020484:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020488:	eeb0 6a43 	vmov.f32	s12, s6
 802048c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020490:	ee12 2a90 	vmov	r2, s5
 8020494:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020498:	fb92 fef3 	sdiv	lr, r2, r3
 802049c:	ee13 2a10 	vmov	r2, s6
 80204a0:	fb92 fcf3 	sdiv	ip, r2, r3
 80204a4:	9b01      	ldr	r3, [sp, #4]
 80204a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80204aa:	3b01      	subs	r3, #1
 80204ac:	9301      	str	r3, [sp, #4]
 80204ae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80204b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80204b4:	eeb0 3a67 	vmov.f32	s6, s15
 80204b8:	bf08      	it	eq
 80204ba:	465b      	moveq	r3, fp
 80204bc:	eef0 2a47 	vmov.f32	s5, s14
 80204c0:	e797      	b.n	80203f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80204c2:	454f      	cmp	r7, r9
 80204c4:	dabb      	bge.n	802043e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80204c6:	fb0c 2606 	mla	r6, ip, r6, r2
 80204ca:	1436      	asrs	r6, r6, #16
 80204cc:	d4b7      	bmi.n	802043e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80204ce:	4546      	cmp	r6, r8
 80204d0:	dab5      	bge.n	802043e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80204d2:	461e      	mov	r6, r3
 80204d4:	46a0      	mov	r8, r4
 80204d6:	2e00      	cmp	r6, #0
 80204d8:	ddb8      	ble.n	802044c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80204da:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80204de:	9902      	ldr	r1, [sp, #8]
 80204e0:	1417      	asrs	r7, r2, #16
 80204e2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80204e6:	fb0a 9707 	mla	r7, sl, r7, r9
 80204ea:	4470      	add	r0, lr
 80204ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80204f0:	f828 7b02 	strh.w	r7, [r8], #2
 80204f4:	4462      	add	r2, ip
 80204f6:	3e01      	subs	r6, #1
 80204f8:	e7ed      	b.n	80204d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80204fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80204fe:	d414      	bmi.n	802052a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020500:	68ae      	ldr	r6, [r5, #8]
 8020502:	454e      	cmp	r6, r9
 8020504:	dd11      	ble.n	802052a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020506:	ea5f 4a22 	movs.w	sl, r2, asr #16
 802050a:	d40e      	bmi.n	802052a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 802050c:	68ef      	ldr	r7, [r5, #12]
 802050e:	4557      	cmp	r7, sl
 8020510:	dd0b      	ble.n	802052a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020512:	b236      	sxth	r6, r6
 8020514:	fb0a 9606 	mla	r6, sl, r6, r9
 8020518:	9f02      	ldr	r7, [sp, #8]
 802051a:	f06f 0101 	mvn.w	r1, #1
 802051e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8020522:	fb01 f608 	mul.w	r6, r1, r8
 8020526:	9903      	ldr	r1, [sp, #12]
 8020528:	538f      	strh	r7, [r1, r6]
 802052a:	4470      	add	r0, lr
 802052c:	4462      	add	r2, ip
 802052e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020532:	e788      	b.n	8020446 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8020534:	b005      	add	sp, #20
 8020536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802053a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802053a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802053e:	b087      	sub	sp, #28
 8020540:	468b      	mov	fp, r1
 8020542:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020544:	9203      	str	r2, [sp, #12]
 8020546:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 802054a:	9204      	str	r2, [sp, #16]
 802054c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8020550:	6841      	ldr	r1, [r0, #4]
 8020552:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8020556:	fb01 2505 	mla	r5, r1, r5, r2
 802055a:	6802      	ldr	r2, [r0, #0]
 802055c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8020560:	f8d9 2000 	ldr.w	r2, [r9]
 8020564:	9201      	str	r2, [sp, #4]
 8020566:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802056a:	f1bb 0f00 	cmp.w	fp, #0
 802056e:	dc03      	bgt.n	8020578 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020570:	9a03      	ldr	r2, [sp, #12]
 8020572:	2a00      	cmp	r2, #0
 8020574:	f340 8159 	ble.w	802082a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020578:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802057a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 802057e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8020582:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8020586:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020588:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 802058c:	2b00      	cmp	r3, #0
 802058e:	dd0e      	ble.n	80205ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020590:	1402      	asrs	r2, r0, #16
 8020592:	d405      	bmi.n	80205a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020594:	42ba      	cmp	r2, r7
 8020596:	da03      	bge.n	80205a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020598:	140a      	asrs	r2, r1, #16
 802059a:	d401      	bmi.n	80205a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802059c:	42b2      	cmp	r2, r6
 802059e:	db07      	blt.n	80205b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80205a0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80205a2:	4410      	add	r0, r2
 80205a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80205a6:	3b01      	subs	r3, #1
 80205a8:	4411      	add	r1, r2
 80205aa:	3502      	adds	r5, #2
 80205ac:	e7ee      	b.n	802058c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80205ae:	d017      	beq.n	80205e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80205b0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80205b2:	1e5a      	subs	r2, r3, #1
 80205b4:	fb04 0402 	mla	r4, r4, r2, r0
 80205b8:	1424      	asrs	r4, r4, #16
 80205ba:	d409      	bmi.n	80205d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80205bc:	42bc      	cmp	r4, r7
 80205be:	da07      	bge.n	80205d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80205c0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80205c2:	fb04 1202 	mla	r2, r4, r2, r1
 80205c6:	1412      	asrs	r2, r2, #16
 80205c8:	d402      	bmi.n	80205d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80205ca:	42b2      	cmp	r2, r6
 80205cc:	f2c0 80bf 	blt.w	802074e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80205d0:	2700      	movs	r7, #0
 80205d2:	19da      	adds	r2, r3, r7
 80205d4:	2a00      	cmp	r2, #0
 80205d6:	dc3e      	bgt.n	8020656 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80205d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80205dc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80205e0:	f1bb 0f00 	cmp.w	fp, #0
 80205e4:	f340 8121 	ble.w	802082a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80205e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80205f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80205f6:	f1bb 0b01 	subs.w	fp, fp, #1
 80205fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80205fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020602:	eeb0 6a62 	vmov.f32	s12, s5
 8020606:	ee61 7a27 	vmul.f32	s15, s2, s15
 802060a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802060e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020612:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8020616:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802061a:	eeb0 6a43 	vmov.f32	s12, s6
 802061e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020622:	ee12 2a90 	vmov	r2, s5
 8020626:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802062a:	fb92 f3f3 	sdiv	r3, r2, r3
 802062e:	ee13 2a10 	vmov	r2, s6
 8020632:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020636:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020638:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802063a:	fb92 f3f3 	sdiv	r3, r2, r3
 802063e:	9a03      	ldr	r2, [sp, #12]
 8020640:	9314      	str	r3, [sp, #80]	@ 0x50
 8020642:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8020646:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020648:	eeb0 3a67 	vmov.f32	s6, s15
 802064c:	bf08      	it	eq
 802064e:	4613      	moveq	r3, r2
 8020650:	eef0 2a47 	vmov.f32	s5, s14
 8020654:	e789      	b.n	802056a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020656:	1406      	asrs	r6, r0, #16
 8020658:	d42d      	bmi.n	80206b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 802065a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 802065e:	42b4      	cmp	r4, r6
 8020660:	dd29      	ble.n	80206b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8020662:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8020666:	d426      	bmi.n	80206b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8020668:	f8d9 200c 	ldr.w	r2, [r9, #12]
 802066c:	4562      	cmp	r2, ip
 802066e:	dd22      	ble.n	80206b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8020670:	b224      	sxth	r4, r4
 8020672:	9a01      	ldr	r2, [sp, #4]
 8020674:	fb0c 6404 	mla	r4, ip, r4, r6
 8020678:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 802067c:	0e22      	lsrs	r2, r4, #24
 802067e:	d01a      	beq.n	80206b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8020680:	9e04      	ldr	r6, [sp, #16]
 8020682:	4372      	muls	r2, r6
 8020684:	1c56      	adds	r6, r2, #1
 8020686:	eb06 2222 	add.w	r2, r6, r2, asr #8
 802068a:	1212      	asrs	r2, r2, #8
 802068c:	0a26      	lsrs	r6, r4, #8
 802068e:	2aff      	cmp	r2, #255	@ 0xff
 8020690:	9605      	str	r6, [sp, #20]
 8020692:	d116      	bne.n	80206c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8020694:	f06f 0201 	mvn.w	r2, #1
 8020698:	fb02 fc07 	mul.w	ip, r2, r7
 802069c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80206a0:	0962      	lsrs	r2, r4, #5
 80206a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80206a6:	f026 0607 	bic.w	r6, r6, #7
 80206aa:	4316      	orrs	r6, r2
 80206ac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80206b0:	4326      	orrs	r6, r4
 80206b2:	f825 600c 	strh.w	r6, [r5, ip]
 80206b6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80206b8:	4410      	add	r0, r2
 80206ba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80206bc:	3f01      	subs	r7, #1
 80206be:	4411      	add	r1, r2
 80206c0:	e787      	b.n	80205d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80206c2:	f06f 0601 	mvn.w	r6, #1
 80206c6:	437e      	muls	r6, r7
 80206c8:	fa1f fa82 	uxth.w	sl, r2
 80206cc:	f835 8006 	ldrh.w	r8, [r5, r6]
 80206d0:	9602      	str	r6, [sp, #8]
 80206d2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80206d6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80206da:	43d2      	mvns	r2, r2
 80206dc:	b2d2      	uxtb	r2, r2
 80206de:	fb1c fc0a 	smulbb	ip, ip, sl
 80206e2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80206e6:	fb0e ce02 	mla	lr, lr, r2, ip
 80206ea:	b2e4      	uxtb	r4, r4
 80206ec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80206f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80206f4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80206f8:	fa5f f888 	uxtb.w	r8, r8
 80206fc:	fb14 f40a 	smulbb	r4, r4, sl
 8020700:	fb08 4402 	mla	r4, r8, r2, r4
 8020704:	fa1f fe8e 	uxth.w	lr, lr
 8020708:	fb16 f60a 	smulbb	r6, r6, sl
 802070c:	b2a4      	uxth	r4, r4
 802070e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8020712:	fb0c 6c02 	mla	ip, ip, r2, r6
 8020716:	f10e 0201 	add.w	r2, lr, #1
 802071a:	1c66      	adds	r6, r4, #1
 802071c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8020720:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8020724:	fa1f fc8c 	uxth.w	ip, ip
 8020728:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802072c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8020730:	ea46 0e0e 	orr.w	lr, r6, lr
 8020734:	f10c 0601 	add.w	r6, ip, #1
 8020738:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 802073c:	0976      	lsrs	r6, r6, #5
 802073e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020742:	9a02      	ldr	r2, [sp, #8]
 8020744:	ea4e 0e06 	orr.w	lr, lr, r6
 8020748:	f825 e002 	strh.w	lr, [r5, r2]
 802074c:	e7b3      	b.n	80206b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 802074e:	f04f 0800 	mov.w	r8, #0
 8020752:	eba3 0208 	sub.w	r2, r3, r8
 8020756:	2a00      	cmp	r2, #0
 8020758:	f77f af3e 	ble.w	80205d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802075c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8020760:	1404      	asrs	r4, r0, #16
 8020762:	140a      	asrs	r2, r1, #16
 8020764:	fb06 4202 	mla	r2, r6, r2, r4
 8020768:	9c01      	ldr	r4, [sp, #4]
 802076a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 802076e:	0e22      	lsrs	r2, r4, #24
 8020770:	d016      	beq.n	80207a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8020772:	9e04      	ldr	r6, [sp, #16]
 8020774:	4372      	muls	r2, r6
 8020776:	1c56      	adds	r6, r2, #1
 8020778:	eb06 2222 	add.w	r2, r6, r2, asr #8
 802077c:	1212      	asrs	r2, r2, #8
 802077e:	2aff      	cmp	r2, #255	@ 0xff
 8020780:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8020784:	d113      	bne.n	80207ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8020786:	0962      	lsrs	r2, r4, #5
 8020788:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 802078c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020790:	f026 0607 	bic.w	r6, r6, #7
 8020794:	4316      	orrs	r6, r2
 8020796:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 802079a:	4326      	orrs	r6, r4
 802079c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80207a0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80207a2:	4410      	add	r0, r2
 80207a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80207a6:	f108 0801 	add.w	r8, r8, #1
 80207aa:	4411      	add	r1, r2
 80207ac:	e7d1      	b.n	8020752 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80207ae:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80207b2:	fa1f fa82 	uxth.w	sl, r2
 80207b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80207ba:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80207be:	43d2      	mvns	r2, r2
 80207c0:	b2d2      	uxtb	r2, r2
 80207c2:	fb17 f70a 	smulbb	r7, r7, sl
 80207c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80207ca:	fb0c 7c02 	mla	ip, ip, r2, r7
 80207ce:	b2e4      	uxtb	r4, r4
 80207d0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80207d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80207d8:	fa5f fe8e 	uxtb.w	lr, lr
 80207dc:	fb14 f40a 	smulbb	r4, r4, sl
 80207e0:	fb0e 4402 	mla	r4, lr, r2, r4
 80207e4:	b2f6      	uxtb	r6, r6
 80207e6:	fa1f fc8c 	uxth.w	ip, ip
 80207ea:	fb16 f60a 	smulbb	r6, r6, sl
 80207ee:	b2a4      	uxth	r4, r4
 80207f0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80207f4:	fb07 6702 	mla	r7, r7, r2, r6
 80207f8:	f10c 0201 	add.w	r2, ip, #1
 80207fc:	1c66      	adds	r6, r4, #1
 80207fe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8020802:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8020806:	b2bf      	uxth	r7, r7
 8020808:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802080c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020810:	ea46 0c0c 	orr.w	ip, r6, ip
 8020814:	1c7e      	adds	r6, r7, #1
 8020816:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 802081a:	0976      	lsrs	r6, r6, #5
 802081c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020820:	ea4c 0c06 	orr.w	ip, ip, r6
 8020824:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8020828:	e7ba      	b.n	80207a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 802082a:	b007      	add	sp, #28
 802082c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020830 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020834:	b085      	sub	sp, #20
 8020836:	468b      	mov	fp, r1
 8020838:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802083a:	9203      	str	r2, [sp, #12]
 802083c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8020840:	6841      	ldr	r1, [r0, #4]
 8020842:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8020846:	fb01 2404 	mla	r4, r1, r4, r2
 802084a:	6802      	ldr	r2, [r0, #0]
 802084c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020850:	f8d8 2000 	ldr.w	r2, [r8]
 8020854:	9201      	str	r2, [sp, #4]
 8020856:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802085a:	f1bb 0f00 	cmp.w	fp, #0
 802085e:	dc03      	bgt.n	8020868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020860:	9a03      	ldr	r2, [sp, #12]
 8020862:	2a00      	cmp	r2, #0
 8020864:	f340 814f 	ble.w	8020b06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8020868:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802086a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 802086e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8020872:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020876:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020878:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 802087c:	2b00      	cmp	r3, #0
 802087e:	dd0e      	ble.n	802089e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020880:	1408      	asrs	r0, r1, #16
 8020882:	d405      	bmi.n	8020890 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020884:	42b8      	cmp	r0, r7
 8020886:	da03      	bge.n	8020890 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020888:	1410      	asrs	r0, r2, #16
 802088a:	d401      	bmi.n	8020890 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802088c:	42b0      	cmp	r0, r6
 802088e:	db07      	blt.n	80208a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020890:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020892:	4401      	add	r1, r0
 8020894:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020896:	3b01      	subs	r3, #1
 8020898:	4402      	add	r2, r0
 802089a:	3402      	adds	r4, #2
 802089c:	e7ee      	b.n	802087c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802089e:	d017      	beq.n	80208d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80208a0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80208a2:	1e58      	subs	r0, r3, #1
 80208a4:	fb05 1500 	mla	r5, r5, r0, r1
 80208a8:	142d      	asrs	r5, r5, #16
 80208aa:	d409      	bmi.n	80208c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80208ac:	42bd      	cmp	r5, r7
 80208ae:	da07      	bge.n	80208c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80208b0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80208b2:	fb05 2000 	mla	r0, r5, r0, r2
 80208b6:	1400      	asrs	r0, r0, #16
 80208b8:	d402      	bmi.n	80208c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80208ba:	42b0      	cmp	r0, r6
 80208bc:	f2c0 80ba 	blt.w	8020a34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80208c0:	2600      	movs	r6, #0
 80208c2:	1998      	adds	r0, r3, r6
 80208c4:	2800      	cmp	r0, #0
 80208c6:	dc3e      	bgt.n	8020946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80208c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80208cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80208d0:	f1bb 0f00 	cmp.w	fp, #0
 80208d4:	f340 8117 	ble.w	8020b06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80208d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80208dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80208e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80208e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80208e6:	f1bb 0b01 	subs.w	fp, fp, #1
 80208ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80208ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80208f2:	eeb0 6a62 	vmov.f32	s12, s5
 80208f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80208fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80208fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020902:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8020906:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802090a:	eeb0 6a43 	vmov.f32	s12, s6
 802090e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020912:	ee12 2a90 	vmov	r2, s5
 8020916:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802091a:	fb92 f3f3 	sdiv	r3, r2, r3
 802091e:	ee13 2a10 	vmov	r2, s6
 8020922:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020926:	9311      	str	r3, [sp, #68]	@ 0x44
 8020928:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802092a:	fb92 f3f3 	sdiv	r3, r2, r3
 802092e:	9a03      	ldr	r2, [sp, #12]
 8020930:	9312      	str	r3, [sp, #72]	@ 0x48
 8020932:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8020936:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020938:	eeb0 3a67 	vmov.f32	s6, s15
 802093c:	bf08      	it	eq
 802093e:	4613      	moveq	r3, r2
 8020940:	eef0 2a47 	vmov.f32	s5, s14
 8020944:	e789      	b.n	802085a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8020946:	140f      	asrs	r7, r1, #16
 8020948:	d424      	bmi.n	8020994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802094a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 802094e:	42bd      	cmp	r5, r7
 8020950:	dd20      	ble.n	8020994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020952:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8020956:	d41d      	bmi.n	8020994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020958:	f8d8 000c 	ldr.w	r0, [r8, #12]
 802095c:	4560      	cmp	r0, ip
 802095e:	dd19      	ble.n	8020994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020960:	b22d      	sxth	r5, r5
 8020962:	fb0c 7505 	mla	r5, ip, r5, r7
 8020966:	9801      	ldr	r0, [sp, #4]
 8020968:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 802096c:	0e07      	lsrs	r7, r0, #24
 802096e:	2fff      	cmp	r7, #255	@ 0xff
 8020970:	d116      	bne.n	80209a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8020972:	f06f 0501 	mvn.w	r5, #1
 8020976:	fb05 f706 	mul.w	r7, r5, r6
 802097a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 802097e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8020982:	0945      	lsrs	r5, r0, #5
 8020984:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020988:	ea4c 0505 	orr.w	r5, ip, r5
 802098c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8020990:	4305      	orrs	r5, r0
 8020992:	53e5      	strh	r5, [r4, r7]
 8020994:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020996:	4401      	add	r1, r0
 8020998:	9812      	ldr	r0, [sp, #72]	@ 0x48
 802099a:	3e01      	subs	r6, #1
 802099c:	4402      	add	r2, r0
 802099e:	e790      	b.n	80208c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209a0:	b2fd      	uxtb	r5, r7
 80209a2:	2f00      	cmp	r7, #0
 80209a4:	d0f6      	beq.n	8020994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80209a6:	f06f 0701 	mvn.w	r7, #1
 80209aa:	4377      	muls	r7, r6
 80209ac:	fa1f f985 	uxth.w	r9, r5
 80209b0:	f834 e007 	ldrh.w	lr, [r4, r7]
 80209b4:	9702      	str	r7, [sp, #8]
 80209b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80209ba:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80209be:	43ed      	mvns	r5, r5
 80209c0:	b2ed      	uxtb	r5, r5
 80209c2:	fb17 f709 	smulbb	r7, r7, r9
 80209c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80209ca:	fb0c 7c05 	mla	ip, ip, r5, r7
 80209ce:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80209d2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80209d6:	b2c0      	uxtb	r0, r0
 80209d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80209dc:	fa5f fe8e 	uxtb.w	lr, lr
 80209e0:	fb10 f009 	smulbb	r0, r0, r9
 80209e4:	fb0e 0005 	mla	r0, lr, r5, r0
 80209e8:	b280      	uxth	r0, r0
 80209ea:	fa1f fc8c 	uxth.w	ip, ip
 80209ee:	fb1a fa09 	smulbb	sl, sl, r9
 80209f2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80209f6:	fb07 a705 	mla	r7, r7, r5, sl
 80209fa:	f100 0a01 	add.w	sl, r0, #1
 80209fe:	f10c 0501 	add.w	r5, ip, #1
 8020a02:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8020a06:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8020a0a:	b2bf      	uxth	r7, r7
 8020a0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020a10:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020a14:	ea4a 0c0c 	orr.w	ip, sl, ip
 8020a18:	f107 0a01 	add.w	sl, r7, #1
 8020a1c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8020a20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020a24:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8020a28:	9802      	ldr	r0, [sp, #8]
 8020a2a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8020a2e:	f824 c000 	strh.w	ip, [r4, r0]
 8020a32:	e7af      	b.n	8020994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020a34:	f04f 0e00 	mov.w	lr, #0
 8020a38:	eba3 000e 	sub.w	r0, r3, lr
 8020a3c:	2800      	cmp	r0, #0
 8020a3e:	f77f af43 	ble.w	80208c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8020a42:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8020a46:	140d      	asrs	r5, r1, #16
 8020a48:	1410      	asrs	r0, r2, #16
 8020a4a:	fb06 5000 	mla	r0, r6, r0, r5
 8020a4e:	9d01      	ldr	r5, [sp, #4]
 8020a50:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8020a54:	0e2e      	lsrs	r6, r5, #24
 8020a56:	2eff      	cmp	r6, #255	@ 0xff
 8020a58:	d112      	bne.n	8020a80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8020a5a:	482c      	ldr	r0, [pc, #176]	@ (8020b0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8020a5c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8020a60:	0968      	lsrs	r0, r5, #5
 8020a62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020a66:	4330      	orrs	r0, r6
 8020a68:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020a6c:	4328      	orrs	r0, r5
 8020a6e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8020a72:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020a74:	4401      	add	r1, r0
 8020a76:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020a78:	f10e 0e01 	add.w	lr, lr, #1
 8020a7c:	4402      	add	r2, r0
 8020a7e:	e7db      	b.n	8020a38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8020a80:	b2f0      	uxtb	r0, r6
 8020a82:	2e00      	cmp	r6, #0
 8020a84:	d0f5      	beq.n	8020a72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020a86:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8020a8a:	fa1f f980 	uxth.w	r9, r0
 8020a8e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020a92:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8020a96:	43c0      	mvns	r0, r0
 8020a98:	b2c0      	uxtb	r0, r0
 8020a9a:	fb16 f609 	smulbb	r6, r6, r9
 8020a9e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020aa2:	fb07 6700 	mla	r7, r7, r0, r6
 8020aa6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8020aaa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8020aae:	b2ed      	uxtb	r5, r5
 8020ab0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020ab4:	fa5f fc8c 	uxtb.w	ip, ip
 8020ab8:	fb15 f509 	smulbb	r5, r5, r9
 8020abc:	fb0c 5500 	mla	r5, ip, r0, r5
 8020ac0:	b2bf      	uxth	r7, r7
 8020ac2:	fb1a fa09 	smulbb	sl, sl, r9
 8020ac6:	b2ad      	uxth	r5, r5
 8020ac8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020acc:	fb06 a600 	mla	r6, r6, r0, sl
 8020ad0:	1c78      	adds	r0, r7, #1
 8020ad2:	f105 0a01 	add.w	sl, r5, #1
 8020ad6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8020ada:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020ade:	b2b6      	uxth	r6, r6
 8020ae0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020ae4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8020ae8:	ea4a 0707 	orr.w	r7, sl, r7
 8020aec:	f106 0a01 	add.w	sl, r6, #1
 8020af0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8020af4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020af8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8020afc:	ea47 070a 	orr.w	r7, r7, sl
 8020b00:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8020b04:	e7b5      	b.n	8020a72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020b06:	b005      	add	sp, #20
 8020b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b0c:	fffff800 	.word	0xfffff800

08020b10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b14:	b087      	sub	sp, #28
 8020b16:	468b      	mov	fp, r1
 8020b18:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020b1a:	9203      	str	r2, [sp, #12]
 8020b1c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8020b20:	9204      	str	r2, [sp, #16]
 8020b22:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8020b26:	6841      	ldr	r1, [r0, #4]
 8020b28:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8020b2c:	fb01 2404 	mla	r4, r1, r4, r2
 8020b30:	6802      	ldr	r2, [r0, #0]
 8020b32:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020b36:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8020b3a:	3201      	adds	r2, #1
 8020b3c:	f022 0201 	bic.w	r2, r2, #1
 8020b40:	9200      	str	r2, [sp, #0]
 8020b42:	f8d9 2000 	ldr.w	r2, [r9]
 8020b46:	9201      	str	r2, [sp, #4]
 8020b48:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8020b4c:	f1bb 0f00 	cmp.w	fp, #0
 8020b50:	dc03      	bgt.n	8020b5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020b52:	9a03      	ldr	r2, [sp, #12]
 8020b54:	2a00      	cmp	r2, #0
 8020b56:	f340 8169 	ble.w	8020e2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020b5a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020b5c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8020b60:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8020b64:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8020b68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020b6a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020b6e:	2b00      	cmp	r3, #0
 8020b70:	dd0e      	ble.n	8020b90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020b72:	1402      	asrs	r2, r0, #16
 8020b74:	d405      	bmi.n	8020b82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020b76:	42ba      	cmp	r2, r7
 8020b78:	da03      	bge.n	8020b82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020b7a:	140a      	asrs	r2, r1, #16
 8020b7c:	d401      	bmi.n	8020b82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020b7e:	42b2      	cmp	r2, r6
 8020b80:	db07      	blt.n	8020b92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020b82:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020b84:	4410      	add	r0, r2
 8020b86:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020b88:	3b01      	subs	r3, #1
 8020b8a:	4411      	add	r1, r2
 8020b8c:	3402      	adds	r4, #2
 8020b8e:	e7ee      	b.n	8020b6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8020b90:	d017      	beq.n	8020bc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8020b92:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020b94:	1e5a      	subs	r2, r3, #1
 8020b96:	fb05 0502 	mla	r5, r5, r2, r0
 8020b9a:	142d      	asrs	r5, r5, #16
 8020b9c:	d409      	bmi.n	8020bb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020b9e:	42bd      	cmp	r5, r7
 8020ba0:	da07      	bge.n	8020bb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020ba2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020ba4:	fb05 1202 	mla	r2, r5, r2, r1
 8020ba8:	1412      	asrs	r2, r2, #16
 8020baa:	d402      	bmi.n	8020bb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020bac:	42b2      	cmp	r2, r6
 8020bae:	f2c0 80c7 	blt.w	8020d40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8020bb2:	2700      	movs	r7, #0
 8020bb4:	19da      	adds	r2, r3, r7
 8020bb6:	2a00      	cmp	r2, #0
 8020bb8:	dc3e      	bgt.n	8020c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8020bba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020bbe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020bc2:	f1bb 0f00 	cmp.w	fp, #0
 8020bc6:	f340 8131 	ble.w	8020e2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020bca:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020bce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020bd2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020bd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020bd8:	f1bb 0b01 	subs.w	fp, fp, #1
 8020bdc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020be0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020be4:	eeb0 6a62 	vmov.f32	s12, s5
 8020be8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020bec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020bf0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020bf4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8020bf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020bfc:	eeb0 6a43 	vmov.f32	s12, s6
 8020c00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c04:	ee12 2a90 	vmov	r2, s5
 8020c08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c10:	ee13 2a10 	vmov	r2, s6
 8020c14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020c18:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020c1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020c1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c20:	9a03      	ldr	r2, [sp, #12]
 8020c22:	9314      	str	r3, [sp, #80]	@ 0x50
 8020c24:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8020c28:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020c2a:	eeb0 3a67 	vmov.f32	s6, s15
 8020c2e:	bf08      	it	eq
 8020c30:	4613      	moveq	r3, r2
 8020c32:	eef0 2a47 	vmov.f32	s5, s14
 8020c36:	e789      	b.n	8020b4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020c38:	1405      	asrs	r5, r0, #16
 8020c3a:	d435      	bmi.n	8020ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c3c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8020c40:	42aa      	cmp	r2, r5
 8020c42:	dd31      	ble.n	8020ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c44:	140e      	asrs	r6, r1, #16
 8020c46:	d42f      	bmi.n	8020ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c48:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8020c4c:	42b2      	cmp	r2, r6
 8020c4e:	dd2b      	ble.n	8020ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c50:	9a00      	ldr	r2, [sp, #0]
 8020c52:	fb06 5502 	mla	r5, r6, r2, r5
 8020c56:	086a      	lsrs	r2, r5, #1
 8020c58:	9e01      	ldr	r6, [sp, #4]
 8020c5a:	5cb2      	ldrb	r2, [r6, r2]
 8020c5c:	07ee      	lsls	r6, r5, #31
 8020c5e:	bf54      	ite	pl
 8020c60:	f002 020f 	andpl.w	r2, r2, #15
 8020c64:	1112      	asrmi	r2, r2, #4
 8020c66:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020c6a:	b2d2      	uxtb	r2, r2
 8020c6c:	b1e2      	cbz	r2, 8020ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c6e:	9d04      	ldr	r5, [sp, #16]
 8020c70:	436a      	muls	r2, r5
 8020c72:	1c55      	adds	r5, r2, #1
 8020c74:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8020c78:	4d6e      	ldr	r5, [pc, #440]	@ (8020e34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8020c7a:	682d      	ldr	r5, [r5, #0]
 8020c7c:	1212      	asrs	r2, r2, #8
 8020c7e:	0a2e      	lsrs	r6, r5, #8
 8020c80:	2aff      	cmp	r2, #255	@ 0xff
 8020c82:	9605      	str	r6, [sp, #20]
 8020c84:	d116      	bne.n	8020cb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020c86:	f06f 0201 	mvn.w	r2, #1
 8020c8a:	fb02 fc07 	mul.w	ip, r2, r7
 8020c8e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8020c92:	096a      	lsrs	r2, r5, #5
 8020c94:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020c98:	f026 0607 	bic.w	r6, r6, #7
 8020c9c:	4316      	orrs	r6, r2
 8020c9e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020ca2:	432e      	orrs	r6, r5
 8020ca4:	f824 600c 	strh.w	r6, [r4, ip]
 8020ca8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020caa:	4410      	add	r0, r2
 8020cac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020cae:	3f01      	subs	r7, #1
 8020cb0:	4411      	add	r1, r2
 8020cb2:	e77f      	b.n	8020bb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8020cb4:	f06f 0601 	mvn.w	r6, #1
 8020cb8:	437e      	muls	r6, r7
 8020cba:	fa1f fa82 	uxth.w	sl, r2
 8020cbe:	f834 8006 	ldrh.w	r8, [r4, r6]
 8020cc2:	9602      	str	r6, [sp, #8]
 8020cc4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8020cc8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8020ccc:	43d2      	mvns	r2, r2
 8020cce:	b2d2      	uxtb	r2, r2
 8020cd0:	fb1c fc0a 	smulbb	ip, ip, sl
 8020cd4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8020cd8:	fb0e ce02 	mla	lr, lr, r2, ip
 8020cdc:	b2ed      	uxtb	r5, r5
 8020cde:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8020ce2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8020ce6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8020cea:	fa5f f888 	uxtb.w	r8, r8
 8020cee:	fb15 f50a 	smulbb	r5, r5, sl
 8020cf2:	fb08 5502 	mla	r5, r8, r2, r5
 8020cf6:	fa1f fe8e 	uxth.w	lr, lr
 8020cfa:	fb16 f60a 	smulbb	r6, r6, sl
 8020cfe:	b2ad      	uxth	r5, r5
 8020d00:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8020d04:	fb0c 6c02 	mla	ip, ip, r2, r6
 8020d08:	f10e 0201 	add.w	r2, lr, #1
 8020d0c:	1c6e      	adds	r6, r5, #1
 8020d0e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8020d12:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8020d16:	fa1f fc8c 	uxth.w	ip, ip
 8020d1a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020d1e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8020d22:	ea46 0e0e 	orr.w	lr, r6, lr
 8020d26:	f10c 0601 	add.w	r6, ip, #1
 8020d2a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8020d2e:	0976      	lsrs	r6, r6, #5
 8020d30:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020d34:	9a02      	ldr	r2, [sp, #8]
 8020d36:	ea4e 0e06 	orr.w	lr, lr, r6
 8020d3a:	f824 e002 	strh.w	lr, [r4, r2]
 8020d3e:	e7b3      	b.n	8020ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020d40:	f04f 0800 	mov.w	r8, #0
 8020d44:	eba3 0208 	sub.w	r2, r3, r8
 8020d48:	2a00      	cmp	r2, #0
 8020d4a:	f77f af36 	ble.w	8020bba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8020d4e:	9e00      	ldr	r6, [sp, #0]
 8020d50:	1402      	asrs	r2, r0, #16
 8020d52:	140d      	asrs	r5, r1, #16
 8020d54:	fb06 2505 	mla	r5, r6, r5, r2
 8020d58:	086a      	lsrs	r2, r5, #1
 8020d5a:	9e01      	ldr	r6, [sp, #4]
 8020d5c:	5cb2      	ldrb	r2, [r6, r2]
 8020d5e:	07ed      	lsls	r5, r5, #31
 8020d60:	bf54      	ite	pl
 8020d62:	f002 020f 	andpl.w	r2, r2, #15
 8020d66:	1112      	asrmi	r2, r2, #4
 8020d68:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020d6c:	b2d2      	uxtb	r2, r2
 8020d6e:	b1c2      	cbz	r2, 8020da2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8020d70:	9d04      	ldr	r5, [sp, #16]
 8020d72:	436a      	muls	r2, r5
 8020d74:	1c55      	adds	r5, r2, #1
 8020d76:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8020d7a:	4d2e      	ldr	r5, [pc, #184]	@ (8020e34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8020d7c:	1212      	asrs	r2, r2, #8
 8020d7e:	682e      	ldr	r6, [r5, #0]
 8020d80:	2aff      	cmp	r2, #255	@ 0xff
 8020d82:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8020d86:	d113      	bne.n	8020db0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8020d88:	0972      	lsrs	r2, r6, #5
 8020d8a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8020d8e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d92:	f025 0507 	bic.w	r5, r5, #7
 8020d96:	4315      	orrs	r5, r2
 8020d98:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020d9c:	4335      	orrs	r5, r6
 8020d9e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8020da2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020da4:	4410      	add	r0, r2
 8020da6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020da8:	f108 0801 	add.w	r8, r8, #1
 8020dac:	4411      	add	r1, r2
 8020dae:	e7c9      	b.n	8020d44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020db0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8020db4:	fa1f fa82 	uxth.w	sl, r2
 8020db8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020dbc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8020dc0:	43d2      	mvns	r2, r2
 8020dc2:	b2d2      	uxtb	r2, r2
 8020dc4:	fb17 f70a 	smulbb	r7, r7, sl
 8020dc8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020dcc:	fb0c 7c02 	mla	ip, ip, r2, r7
 8020dd0:	b2f6      	uxtb	r6, r6
 8020dd2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8020dd6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020dda:	fa5f fe8e 	uxtb.w	lr, lr
 8020dde:	fb16 f60a 	smulbb	r6, r6, sl
 8020de2:	fb0e 6602 	mla	r6, lr, r2, r6
 8020de6:	b2ed      	uxtb	r5, r5
 8020de8:	fa1f fc8c 	uxth.w	ip, ip
 8020dec:	fb15 f50a 	smulbb	r5, r5, sl
 8020df0:	b2b6      	uxth	r6, r6
 8020df2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020df6:	fb07 5702 	mla	r7, r7, r2, r5
 8020dfa:	f10c 0201 	add.w	r2, ip, #1
 8020dfe:	1c75      	adds	r5, r6, #1
 8020e00:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8020e04:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8020e08:	b2bf      	uxth	r7, r7
 8020e0a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020e0e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8020e12:	ea45 0c0c 	orr.w	ip, r5, ip
 8020e16:	1c7d      	adds	r5, r7, #1
 8020e18:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8020e1c:	096d      	lsrs	r5, r5, #5
 8020e1e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020e22:	ea4c 0c05 	orr.w	ip, ip, r5
 8020e26:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8020e2a:	e7ba      	b.n	8020da2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8020e2c:	b007      	add	sp, #28
 8020e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020e32:	bf00      	nop
 8020e34:	200138f4 	.word	0x200138f4

08020e38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e3c:	b087      	sub	sp, #28
 8020e3e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 802114c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8020e42:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020e44:	9205      	str	r2, [sp, #20]
 8020e46:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8020e4a:	9101      	str	r1, [sp, #4]
 8020e4c:	6841      	ldr	r1, [r0, #4]
 8020e4e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8020e52:	fb01 2404 	mla	r4, r1, r4, r2
 8020e56:	6802      	ldr	r2, [r0, #0]
 8020e58:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020e5c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8020e60:	3201      	adds	r2, #1
 8020e62:	f022 0201 	bic.w	r2, r2, #1
 8020e66:	9202      	str	r2, [sp, #8]
 8020e68:	f8db 2000 	ldr.w	r2, [fp]
 8020e6c:	9203      	str	r2, [sp, #12]
 8020e6e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8020e72:	9a01      	ldr	r2, [sp, #4]
 8020e74:	2a00      	cmp	r2, #0
 8020e76:	dc03      	bgt.n	8020e80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020e78:	9a05      	ldr	r2, [sp, #20]
 8020e7a:	2a00      	cmp	r2, #0
 8020e7c:	f340 8162 	ble.w	8021144 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020e80:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020e82:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8020e86:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8020e8a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8020e8e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020e90:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8020e94:	2b00      	cmp	r3, #0
 8020e96:	dd0e      	ble.n	8020eb6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8020e98:	1402      	asrs	r2, r0, #16
 8020e9a:	d405      	bmi.n	8020ea8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020e9c:	42ba      	cmp	r2, r7
 8020e9e:	da03      	bge.n	8020ea8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020ea0:	140a      	asrs	r2, r1, #16
 8020ea2:	d401      	bmi.n	8020ea8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020ea4:	42b2      	cmp	r2, r6
 8020ea6:	db07      	blt.n	8020eb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020ea8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020eaa:	4410      	add	r0, r2
 8020eac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020eae:	3b01      	subs	r3, #1
 8020eb0:	4411      	add	r1, r2
 8020eb2:	3402      	adds	r4, #2
 8020eb4:	e7ee      	b.n	8020e94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8020eb6:	d017      	beq.n	8020ee8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8020eb8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020eba:	1e5a      	subs	r2, r3, #1
 8020ebc:	fb05 0502 	mla	r5, r5, r2, r0
 8020ec0:	142d      	asrs	r5, r5, #16
 8020ec2:	d409      	bmi.n	8020ed8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020ec4:	42bd      	cmp	r5, r7
 8020ec6:	da07      	bge.n	8020ed8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020ec8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020eca:	fb05 1202 	mla	r2, r5, r2, r1
 8020ece:	1412      	asrs	r2, r2, #16
 8020ed0:	d402      	bmi.n	8020ed8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8020ed2:	42b2      	cmp	r2, r6
 8020ed4:	f2c0 80c3 	blt.w	802105e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8020ed8:	2500      	movs	r5, #0
 8020eda:	195a      	adds	r2, r3, r5
 8020edc:	2a00      	cmp	r2, #0
 8020ede:	dc3f      	bgt.n	8020f60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8020ee0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020ee4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020ee8:	9b01      	ldr	r3, [sp, #4]
 8020eea:	2b00      	cmp	r3, #0
 8020eec:	f340 812a 	ble.w	8021144 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020ef0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020ef4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020ef8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020efc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020efe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020f02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020f06:	eeb0 6a62 	vmov.f32	s12, s5
 8020f0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020f0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020f12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020f16:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8020f1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020f1e:	eeb0 6a43 	vmov.f32	s12, s6
 8020f22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f26:	ee12 2a90 	vmov	r2, s5
 8020f2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f32:	ee13 2a10 	vmov	r2, s6
 8020f36:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020f38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020f3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f3e:	9314      	str	r3, [sp, #80]	@ 0x50
 8020f40:	9b01      	ldr	r3, [sp, #4]
 8020f42:	9a05      	ldr	r2, [sp, #20]
 8020f44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020f48:	3b01      	subs	r3, #1
 8020f4a:	9301      	str	r3, [sp, #4]
 8020f4c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8020f50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020f52:	eeb0 3a67 	vmov.f32	s6, s15
 8020f56:	bf08      	it	eq
 8020f58:	4613      	moveq	r3, r2
 8020f5a:	eef0 2a47 	vmov.f32	s5, s14
 8020f5e:	e788      	b.n	8020e72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020f60:	1406      	asrs	r6, r0, #16
 8020f62:	d42c      	bmi.n	8020fbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020f64:	f8db 2008 	ldr.w	r2, [fp, #8]
 8020f68:	42b2      	cmp	r2, r6
 8020f6a:	dd28      	ble.n	8020fbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020f6c:	140f      	asrs	r7, r1, #16
 8020f6e:	d426      	bmi.n	8020fbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020f70:	f8db 200c 	ldr.w	r2, [fp, #12]
 8020f74:	42ba      	cmp	r2, r7
 8020f76:	dd22      	ble.n	8020fbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020f78:	9a02      	ldr	r2, [sp, #8]
 8020f7a:	fb07 6602 	mla	r6, r7, r2, r6
 8020f7e:	0872      	lsrs	r2, r6, #1
 8020f80:	9f03      	ldr	r7, [sp, #12]
 8020f82:	5cba      	ldrb	r2, [r7, r2]
 8020f84:	07f6      	lsls	r6, r6, #31
 8020f86:	bf54      	ite	pl
 8020f88:	f002 020f 	andpl.w	r2, r2, #15
 8020f8c:	1112      	asrmi	r2, r2, #4
 8020f8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020f92:	b2d2      	uxtb	r2, r2
 8020f94:	2aff      	cmp	r2, #255	@ 0xff
 8020f96:	d118      	bne.n	8020fca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8020f98:	f8d8 2000 	ldr.w	r2, [r8]
 8020f9c:	f06f 0601 	mvn.w	r6, #1
 8020fa0:	fb06 f705 	mul.w	r7, r6, r5
 8020fa4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8020fa8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8020fac:	0956      	lsrs	r6, r2, #5
 8020fae:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020fb2:	ea4c 0606 	orr.w	r6, ip, r6
 8020fb6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020fba:	4316      	orrs	r6, r2
 8020fbc:	53e6      	strh	r6, [r4, r7]
 8020fbe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020fc0:	4410      	add	r0, r2
 8020fc2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020fc4:	3d01      	subs	r5, #1
 8020fc6:	4411      	add	r1, r2
 8020fc8:	e787      	b.n	8020eda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020fca:	2a00      	cmp	r2, #0
 8020fcc:	d0f7      	beq.n	8020fbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020fce:	f06f 0601 	mvn.w	r6, #1
 8020fd2:	436e      	muls	r6, r5
 8020fd4:	f8d8 c000 	ldr.w	ip, [r8]
 8020fd8:	f834 e006 	ldrh.w	lr, [r4, r6]
 8020fdc:	9604      	str	r6, [sp, #16]
 8020fde:	fa1f f982 	uxth.w	r9, r2
 8020fe2:	ea4f 272e 	mov.w	r7, lr, asr #8
 8020fe6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8020fea:	43d2      	mvns	r2, r2
 8020fec:	b2d2      	uxtb	r2, r2
 8020fee:	fb16 f609 	smulbb	r6, r6, r9
 8020ff2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020ff6:	fb07 6702 	mla	r7, r7, r2, r6
 8020ffa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8020ffe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8021002:	fa5f fc8c 	uxtb.w	ip, ip
 8021006:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802100a:	fa5f fe8e 	uxtb.w	lr, lr
 802100e:	fb1c fc09 	smulbb	ip, ip, r9
 8021012:	fb0e cc02 	mla	ip, lr, r2, ip
 8021016:	b2bf      	uxth	r7, r7
 8021018:	fb1a fa09 	smulbb	sl, sl, r9
 802101c:	fa1f fc8c 	uxth.w	ip, ip
 8021020:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8021024:	fb06 a602 	mla	r6, r6, r2, sl
 8021028:	1c7a      	adds	r2, r7, #1
 802102a:	f10c 0a01 	add.w	sl, ip, #1
 802102e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8021032:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8021036:	b2b6      	uxth	r6, r6
 8021038:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 802103c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8021040:	ea4a 0707 	orr.w	r7, sl, r7
 8021044:	f106 0a01 	add.w	sl, r6, #1
 8021048:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 802104c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021050:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8021054:	9a04      	ldr	r2, [sp, #16]
 8021056:	ea47 070a 	orr.w	r7, r7, sl
 802105a:	52a7      	strh	r7, [r4, r2]
 802105c:	e7af      	b.n	8020fbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802105e:	f04f 0e00 	mov.w	lr, #0
 8021062:	eba3 020e 	sub.w	r2, r3, lr
 8021066:	2a00      	cmp	r2, #0
 8021068:	f77f af3a 	ble.w	8020ee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802106c:	9e02      	ldr	r6, [sp, #8]
 802106e:	1402      	asrs	r2, r0, #16
 8021070:	140d      	asrs	r5, r1, #16
 8021072:	fb06 2505 	mla	r5, r6, r5, r2
 8021076:	086a      	lsrs	r2, r5, #1
 8021078:	9e03      	ldr	r6, [sp, #12]
 802107a:	5cb2      	ldrb	r2, [r6, r2]
 802107c:	07ed      	lsls	r5, r5, #31
 802107e:	bf54      	ite	pl
 8021080:	f002 020f 	andpl.w	r2, r2, #15
 8021084:	1112      	asrmi	r2, r2, #4
 8021086:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802108a:	b2d2      	uxtb	r2, r2
 802108c:	2aff      	cmp	r2, #255	@ 0xff
 802108e:	d115      	bne.n	80210bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8021090:	f8d8 5000 	ldr.w	r5, [r8]
 8021094:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8021098:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 802109c:	096a      	lsrs	r2, r5, #5
 802109e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80210a2:	4332      	orrs	r2, r6
 80210a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80210a8:	432a      	orrs	r2, r5
 80210aa:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80210ae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80210b0:	4410      	add	r0, r2
 80210b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80210b4:	f10e 0e01 	add.w	lr, lr, #1
 80210b8:	4411      	add	r1, r2
 80210ba:	e7d2      	b.n	8021062 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80210bc:	2a00      	cmp	r2, #0
 80210be:	d0f6      	beq.n	80210ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80210c0:	f8d8 7000 	ldr.w	r7, [r8]
 80210c4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80210c8:	fa1f f982 	uxth.w	r9, r2
 80210cc:	ea4f 262c 	mov.w	r6, ip, asr #8
 80210d0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80210d4:	43d2      	mvns	r2, r2
 80210d6:	b2d2      	uxtb	r2, r2
 80210d8:	fb15 f509 	smulbb	r5, r5, r9
 80210dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80210e0:	fb06 5602 	mla	r6, r6, r2, r5
 80210e4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80210e8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80210ec:	b2ff      	uxtb	r7, r7
 80210ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80210f2:	fa5f fc8c 	uxtb.w	ip, ip
 80210f6:	fb17 f709 	smulbb	r7, r7, r9
 80210fa:	fb0c 7702 	mla	r7, ip, r2, r7
 80210fe:	b2b6      	uxth	r6, r6
 8021100:	fb1a fa09 	smulbb	sl, sl, r9
 8021104:	b2bf      	uxth	r7, r7
 8021106:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802110a:	fb05 a502 	mla	r5, r5, r2, sl
 802110e:	1c72      	adds	r2, r6, #1
 8021110:	f107 0a01 	add.w	sl, r7, #1
 8021114:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8021118:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 802111c:	b2ad      	uxth	r5, r5
 802111e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8021122:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8021126:	ea4a 0606 	orr.w	r6, sl, r6
 802112a:	f105 0a01 	add.w	sl, r5, #1
 802112e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8021132:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021136:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802113a:	ea46 060a 	orr.w	r6, r6, sl
 802113e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8021142:	e7b4      	b.n	80210ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021144:	b007      	add	sp, #28
 8021146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802114a:	bf00      	nop
 802114c:	200138f4 	.word	0x200138f4

08021150 <_ZN8touchgfx8LCD16bppD1Ev>:
 8021150:	4770      	bx	lr

08021152 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8021152:	4770      	bx	lr

08021154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8021154:	4770      	bx	lr

08021156 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8021156:	4770      	bx	lr

08021158 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8021158:	4770      	bx	lr

0802115a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 802115a:	4770      	bx	lr

0802115c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 802115c:	4770      	bx	lr

0802115e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 802115e:	4770      	bx	lr

08021160 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8021160:	4770      	bx	lr

08021162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8021162:	4770      	bx	lr

08021164 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8021164:	4770      	bx	lr

08021166 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8021166:	4770      	bx	lr

08021168 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8021168:	4770      	bx	lr

0802116a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802116a:	4770      	bx	lr

0802116c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 802116c:	4770      	bx	lr

0802116e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802116e:	4770      	bx	lr

08021170 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8021170:	4770      	bx	lr

08021172 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8021172:	4770      	bx	lr

08021174 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8021174:	4770      	bx	lr

08021176 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8021176:	4770      	bx	lr

08021178 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8021178:	4770      	bx	lr

0802117a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802117a:	4770      	bx	lr

0802117c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 802117c:	4770      	bx	lr

0802117e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 802117e:	4770      	bx	lr

08021180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8021180:	4770      	bx	lr

08021182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8021182:	4770      	bx	lr

08021184 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8021184:	4770      	bx	lr

08021186 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8021186:	4770      	bx	lr

08021188 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8021188:	4770      	bx	lr

0802118a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802118a:	4770      	bx	lr

0802118c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 802118c:	4770      	bx	lr

0802118e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 802118e:	4770      	bx	lr

08021190 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8021190:	4770      	bx	lr

08021192 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8021192:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021196:	b088      	sub	sp, #32
 8021198:	ac08      	add	r4, sp, #32
 802119a:	4606      	mov	r6, r0
 802119c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80211a0:	4620      	mov	r0, r4
 80211a2:	4688      	mov	r8, r1
 80211a4:	4691      	mov	r9, r2
 80211a6:	f7fd fc31 	bl	801ea0c <_ZNK8touchgfx6Bitmap7getDataEv>
 80211aa:	6833      	ldr	r3, [r6, #0]
 80211ac:	4605      	mov	r5, r0
 80211ae:	4620      	mov	r0, r4
 80211b0:	699f      	ldr	r7, [r3, #24]
 80211b2:	f7fd fb39 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80211b6:	4682      	mov	sl, r0
 80211b8:	4620      	mov	r0, r4
 80211ba:	f7fd fb69 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80211be:	9500      	str	r5, [sp, #0]
 80211c0:	e9cd a001 	strd	sl, r0, [sp, #4]
 80211c4:	464b      	mov	r3, r9
 80211c6:	a806      	add	r0, sp, #24
 80211c8:	4642      	mov	r2, r8
 80211ca:	4631      	mov	r1, r6
 80211cc:	47b8      	blx	r7
 80211ce:	4628      	mov	r0, r5
 80211d0:	b008      	add	sp, #32
 80211d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080211d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80211d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80211dc:	2300      	movs	r3, #0
 80211de:	9300      	str	r3, [sp, #0]
 80211e0:	4b3d      	ldr	r3, [pc, #244]	@ (80212d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80211e2:	781b      	ldrb	r3, [r3, #0]
 80211e4:	2b00      	cmp	r3, #0
 80211e6:	d137      	bne.n	8021258 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80211e8:	4a3c      	ldr	r2, [pc, #240]	@ (80212dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80211ea:	f9b2 2000 	ldrsh.w	r2, [r2]
 80211ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 80211f2:	2b00      	cmp	r3, #0
 80211f4:	d132      	bne.n	802125c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80211f6:	4b3a      	ldr	r3, [pc, #232]	@ (80212e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80211f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80211fc:	6808      	ldr	r0, [r1, #0]
 80211fe:	6849      	ldr	r1, [r1, #4]
 8021200:	f8ad 3006 	strh.w	r3, [sp, #6]
 8021204:	ac02      	add	r4, sp, #8
 8021206:	ab02      	add	r3, sp, #8
 8021208:	c303      	stmia	r3!, {r0, r1}
 802120a:	4669      	mov	r1, sp
 802120c:	4620      	mov	r0, r4
 802120e:	f7f9 ff89 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021212:	4668      	mov	r0, sp
 8021214:	f7f9 ff42 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021218:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 802121c:	f8bd 2000 	ldrh.w	r2, [sp]
 8021220:	4d30      	ldr	r5, [pc, #192]	@ (80212e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8021222:	4413      	add	r3, r2
 8021224:	f8ad 3008 	strh.w	r3, [sp, #8]
 8021228:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 802122c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8021230:	6828      	ldr	r0, [r5, #0]
 8021232:	4413      	add	r3, r2
 8021234:	f8ad 300a 	strh.w	r3, [sp, #10]
 8021238:	6803      	ldr	r3, [r0, #0]
 802123a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 802123c:	4798      	blx	r3
 802123e:	f010 0f01 	tst.w	r0, #1
 8021242:	462f      	mov	r7, r5
 8021244:	d00c      	beq.n	8021260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8021246:	6828      	ldr	r0, [r5, #0]
 8021248:	6803      	ldr	r3, [r0, #0]
 802124a:	e894 0006 	ldmia.w	r4, {r1, r2}
 802124e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8021250:	4798      	blx	r3
 8021252:	b004      	add	sp, #16
 8021254:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021258:	4a21      	ldr	r2, [pc, #132]	@ (80212e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 802125a:	e7c6      	b.n	80211ea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 802125c:	4b1f      	ldr	r3, [pc, #124]	@ (80212dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 802125e:	e7cb      	b.n	80211f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8021260:	6838      	ldr	r0, [r7, #0]
 8021262:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8021266:	6803      	ldr	r3, [r0, #0]
 8021268:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 802126c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 802126e:	4798      	blx	r3
 8021270:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8021274:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021278:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 802127c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8021280:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8021284:	6838      	ldr	r0, [r7, #0]
 8021286:	6803      	ldr	r3, [r0, #0]
 8021288:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802128a:	4798      	blx	r3
 802128c:	4a13      	ldr	r2, [pc, #76]	@ (80212dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 802128e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8021292:	8813      	ldrh	r3, [r2, #0]
 8021294:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8021298:	fb03 1404 	mla	r4, r3, r4, r1
 802129c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80212a0:	435d      	muls	r5, r3
 80212a2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80212a6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80212aa:	4691      	mov	r9, r2
 80212ac:	6838      	ldr	r0, [r7, #0]
 80212ae:	42ac      	cmp	r4, r5
 80212b0:	6803      	ldr	r3, [r0, #0]
 80212b2:	d20e      	bcs.n	80212d2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80212b4:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 80212b8:	4632      	mov	r2, r6
 80212ba:	4643      	mov	r3, r8
 80212bc:	4621      	mov	r1, r4
 80212be:	47d0      	blx	sl
 80212c0:	f8b9 3000 	ldrh.w	r3, [r9]
 80212c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80212c8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80212cc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80212d0:	e7ec      	b.n	80212ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80212d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80212d4:	4798      	blx	r3
 80212d6:	e7bc      	b.n	8021252 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80212d8:	200138dc 	.word	0x200138dc
 80212dc:	200138de 	.word	0x200138de
 80212e0:	200138e0 	.word	0x200138e0
 80212e4:	200138e4 	.word	0x200138e4

080212e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80212e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212ec:	b08b      	sub	sp, #44	@ 0x2c
 80212ee:	460f      	mov	r7, r1
 80212f0:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80212f4:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80212f8:	4616      	mov	r6, r2
 80212fa:	f1bb 0f00 	cmp.w	fp, #0
 80212fe:	d04a      	beq.n	8021396 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8021300:	6810      	ldr	r0, [r2, #0]
 8021302:	6851      	ldr	r1, [r2, #4]
 8021304:	ad06      	add	r5, sp, #24
 8021306:	c503      	stmia	r5!, {r0, r1}
 8021308:	6818      	ldr	r0, [r3, #0]
 802130a:	6859      	ldr	r1, [r3, #4]
 802130c:	ad08      	add	r5, sp, #32
 802130e:	c503      	stmia	r5!, {r0, r1}
 8021310:	a806      	add	r0, sp, #24
 8021312:	f7f9 fec3 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021316:	4631      	mov	r1, r6
 8021318:	a808      	add	r0, sp, #32
 802131a:	f7f9 ff03 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802131e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8021322:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8021326:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 802132a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 802132e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8021332:	fb16 2103 	smlabb	r1, r6, r3, r2
 8021336:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 802133a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 802133e:	4f5f      	ldr	r7, [pc, #380]	@ (80214bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8021340:	440a      	add	r2, r1
 8021342:	f8ad 2020 	strh.w	r2, [sp, #32]
 8021346:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 802134a:	6838      	ldr	r0, [r7, #0]
 802134c:	4413      	add	r3, r2
 802134e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8021352:	6803      	ldr	r3, [r0, #0]
 8021354:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8021356:	4798      	blx	r3
 8021358:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 802135c:	46b9      	mov	r9, r7
 802135e:	d11d      	bne.n	802139c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8021360:	b9fc      	cbnz	r4, 80213a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8021362:	f010 0f01 	tst.w	r0, #1
 8021366:	d01c      	beq.n	80213a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8021368:	f8d9 0000 	ldr.w	r0, [r9]
 802136c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8021370:	6801      	ldr	r1, [r0, #0]
 8021372:	f8cd b00c 	str.w	fp, [sp, #12]
 8021376:	2700      	movs	r7, #0
 8021378:	e9cd 4704 	strd	r4, r7, [sp, #16]
 802137c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8021380:	9402      	str	r4, [sp, #8]
 8021382:	b2ad      	uxth	r5, r5
 8021384:	fa1f f488 	uxth.w	r4, r8
 8021388:	9501      	str	r5, [sp, #4]
 802138a:	9400      	str	r4, [sp, #0]
 802138c:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 802138e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021392:	4631      	mov	r1, r6
 8021394:	47a0      	blx	r4
 8021396:	b00b      	add	sp, #44	@ 0x2c
 8021398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802139c:	f010 0f04 	tst.w	r0, #4
 80213a0:	e7e1      	b.n	8021366 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80213a2:	f8d9 0000 	ldr.w	r0, [r9]
 80213a6:	6803      	ldr	r3, [r0, #0]
 80213a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80213aa:	4798      	blx	r3
 80213ac:	4b44      	ldr	r3, [pc, #272]	@ (80214c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80213ae:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80213b2:	881a      	ldrh	r2, [r3, #0]
 80213b4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80213b8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80213bc:	fb02 1404 	mla	r4, r2, r4, r1
 80213c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80213c4:	469a      	mov	sl, r3
 80213c6:	fb05 f502 	mul.w	r5, r5, r2
 80213ca:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80213ce:	d059      	beq.n	8021484 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80213d0:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80213d4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80213d8:	fa1f f28b 	uxth.w	r2, fp
 80213dc:	fa1f f989 	uxth.w	r9, r9
 80213e0:	469e      	mov	lr, r3
 80213e2:	42ac      	cmp	r4, r5
 80213e4:	d264      	bcs.n	80214b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80213e6:	eb04 0a07 	add.w	sl, r4, r7
 80213ea:	4554      	cmp	r4, sl
 80213ec:	d23d      	bcs.n	802146a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80213ee:	8821      	ldrh	r1, [r4, #0]
 80213f0:	f836 3b02 	ldrh.w	r3, [r6], #2
 80213f4:	1208      	asrs	r0, r1, #8
 80213f6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80213fa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80213fe:	fb10 f009 	smulbb	r0, r0, r9
 8021402:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8021406:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802140a:	00c9      	lsls	r1, r1, #3
 802140c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8021410:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8021414:	10d8      	asrs	r0, r3, #3
 8021416:	b2c9      	uxtb	r1, r1
 8021418:	00db      	lsls	r3, r3, #3
 802141a:	fa1f fc8c 	uxth.w	ip, ip
 802141e:	fb1b fb09 	smulbb	fp, fp, r9
 8021422:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021426:	b2db      	uxtb	r3, r3
 8021428:	fb11 f109 	smulbb	r1, r1, r9
 802142c:	fb00 b002 	mla	r0, r0, r2, fp
 8021430:	fb03 1302 	mla	r3, r3, r2, r1
 8021434:	f10c 0b01 	add.w	fp, ip, #1
 8021438:	b29b      	uxth	r3, r3
 802143a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 802143e:	b280      	uxth	r0, r0
 8021440:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8021444:	f103 0c01 	add.w	ip, r3, #1
 8021448:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802144c:	1c43      	adds	r3, r0, #1
 802144e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021452:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021456:	0940      	lsrs	r0, r0, #5
 8021458:	ea4c 0c0b 	orr.w	ip, ip, fp
 802145c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021460:	ea4c 0c00 	orr.w	ip, ip, r0
 8021464:	f824 cb02 	strh.w	ip, [r4], #2
 8021468:	e7bf      	b.n	80213ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 802146a:	f8be 3000 	ldrh.w	r3, [lr]
 802146e:	eba3 0308 	sub.w	r3, r3, r8
 8021472:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8021476:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 802147a:	eba3 0308 	sub.w	r3, r3, r8
 802147e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8021482:	e7ae      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8021484:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8021488:	f8d9 0000 	ldr.w	r0, [r9]
 802148c:	42ac      	cmp	r4, r5
 802148e:	6803      	ldr	r3, [r0, #0]
 8021490:	d20e      	bcs.n	80214b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8021492:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 8021496:	4632      	mov	r2, r6
 8021498:	463b      	mov	r3, r7
 802149a:	4621      	mov	r1, r4
 802149c:	47c0      	blx	r8
 802149e:	f8ba 3000 	ldrh.w	r3, [sl]
 80214a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80214a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80214aa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80214ae:	e7eb      	b.n	8021488 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80214b0:	4b02      	ldr	r3, [pc, #8]	@ (80214bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80214b2:	6818      	ldr	r0, [r3, #0]
 80214b4:	6803      	ldr	r3, [r0, #0]
 80214b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80214b8:	4798      	blx	r3
 80214ba:	e76c      	b.n	8021396 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80214bc:	200138e4 	.word	0x200138e4
 80214c0:	200138de 	.word	0x200138de

080214c4 <_ZN8touchgfx8LCD16bppD0Ev>:
 80214c4:	b510      	push	{r4, lr}
 80214c6:	218c      	movs	r1, #140	@ 0x8c
 80214c8:	4604      	mov	r4, r0
 80214ca:	f00c fa2c 	bl	802d926 <_ZdlPvj>
 80214ce:	4620      	mov	r0, r4
 80214d0:	bd10      	pop	{r4, pc}

080214d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80214d2:	b510      	push	{r4, lr}
 80214d4:	2104      	movs	r1, #4
 80214d6:	4604      	mov	r4, r0
 80214d8:	f00c fa25 	bl	802d926 <_ZdlPvj>
 80214dc:	4620      	mov	r0, r4
 80214de:	bd10      	pop	{r4, pc}

080214e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80214e0:	b510      	push	{r4, lr}
 80214e2:	2104      	movs	r1, #4
 80214e4:	4604      	mov	r4, r0
 80214e6:	f00c fa1e 	bl	802d926 <_ZdlPvj>
 80214ea:	4620      	mov	r0, r4
 80214ec:	bd10      	pop	{r4, pc}

080214ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80214ee:	b510      	push	{r4, lr}
 80214f0:	f640 0144 	movw	r1, #2116	@ 0x844
 80214f4:	4604      	mov	r4, r0
 80214f6:	f00c fa16 	bl	802d926 <_ZdlPvj>
 80214fa:	4620      	mov	r0, r4
 80214fc:	bd10      	pop	{r4, pc}

080214fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 80214fe:	b510      	push	{r4, lr}
 8021500:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8021504:	4604      	mov	r4, r0
 8021506:	f00c fa0e 	bl	802d926 <_ZdlPvj>
 802150a:	4620      	mov	r0, r4
 802150c:	bd10      	pop	{r4, pc}

0802150e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 802150e:	b510      	push	{r4, lr}
 8021510:	2104      	movs	r1, #4
 8021512:	4604      	mov	r4, r0
 8021514:	f00c fa07 	bl	802d926 <_ZdlPvj>
 8021518:	4620      	mov	r0, r4
 802151a:	bd10      	pop	{r4, pc}

0802151c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 802151c:	b510      	push	{r4, lr}
 802151e:	2104      	movs	r1, #4
 8021520:	4604      	mov	r4, r0
 8021522:	f00c fa00 	bl	802d926 <_ZdlPvj>
 8021526:	4620      	mov	r0, r4
 8021528:	bd10      	pop	{r4, pc}

0802152a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 802152a:	b510      	push	{r4, lr}
 802152c:	2104      	movs	r1, #4
 802152e:	4604      	mov	r4, r0
 8021530:	f00c f9f9 	bl	802d926 <_ZdlPvj>
 8021534:	4620      	mov	r0, r4
 8021536:	bd10      	pop	{r4, pc}

08021538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8021538:	b510      	push	{r4, lr}
 802153a:	2104      	movs	r1, #4
 802153c:	4604      	mov	r4, r0
 802153e:	f00c f9f2 	bl	802d926 <_ZdlPvj>
 8021542:	4620      	mov	r0, r4
 8021544:	bd10      	pop	{r4, pc}

08021546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8021546:	b510      	push	{r4, lr}
 8021548:	2104      	movs	r1, #4
 802154a:	4604      	mov	r4, r0
 802154c:	f00c f9eb 	bl	802d926 <_ZdlPvj>
 8021550:	4620      	mov	r0, r4
 8021552:	bd10      	pop	{r4, pc}

08021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8021554:	b510      	push	{r4, lr}
 8021556:	2104      	movs	r1, #4
 8021558:	4604      	mov	r4, r0
 802155a:	f00c f9e4 	bl	802d926 <_ZdlPvj>
 802155e:	4620      	mov	r0, r4
 8021560:	bd10      	pop	{r4, pc}

08021562 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8021562:	b510      	push	{r4, lr}
 8021564:	2104      	movs	r1, #4
 8021566:	4604      	mov	r4, r0
 8021568:	f00c f9dd 	bl	802d926 <_ZdlPvj>
 802156c:	4620      	mov	r0, r4
 802156e:	bd10      	pop	{r4, pc}

08021570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8021570:	b510      	push	{r4, lr}
 8021572:	2104      	movs	r1, #4
 8021574:	4604      	mov	r4, r0
 8021576:	f00c f9d6 	bl	802d926 <_ZdlPvj>
 802157a:	4620      	mov	r0, r4
 802157c:	bd10      	pop	{r4, pc}

0802157e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 802157e:	b510      	push	{r4, lr}
 8021580:	2104      	movs	r1, #4
 8021582:	4604      	mov	r4, r0
 8021584:	f00c f9cf 	bl	802d926 <_ZdlPvj>
 8021588:	4620      	mov	r0, r4
 802158a:	bd10      	pop	{r4, pc}

0802158c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 802158c:	b510      	push	{r4, lr}
 802158e:	2104      	movs	r1, #4
 8021590:	4604      	mov	r4, r0
 8021592:	f00c f9c8 	bl	802d926 <_ZdlPvj>
 8021596:	4620      	mov	r0, r4
 8021598:	bd10      	pop	{r4, pc}

0802159a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 802159a:	b510      	push	{r4, lr}
 802159c:	2104      	movs	r1, #4
 802159e:	4604      	mov	r4, r0
 80215a0:	f00c f9c1 	bl	802d926 <_ZdlPvj>
 80215a4:	4620      	mov	r0, r4
 80215a6:	bd10      	pop	{r4, pc}

080215a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80215a8:	b510      	push	{r4, lr}
 80215aa:	2104      	movs	r1, #4
 80215ac:	4604      	mov	r4, r0
 80215ae:	f00c f9ba 	bl	802d926 <_ZdlPvj>
 80215b2:	4620      	mov	r0, r4
 80215b4:	bd10      	pop	{r4, pc}

080215b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80215b6:	b510      	push	{r4, lr}
 80215b8:	2104      	movs	r1, #4
 80215ba:	4604      	mov	r4, r0
 80215bc:	f00c f9b3 	bl	802d926 <_ZdlPvj>
 80215c0:	4620      	mov	r0, r4
 80215c2:	bd10      	pop	{r4, pc}

080215c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80215c4:	b510      	push	{r4, lr}
 80215c6:	2104      	movs	r1, #4
 80215c8:	4604      	mov	r4, r0
 80215ca:	f00c f9ac 	bl	802d926 <_ZdlPvj>
 80215ce:	4620      	mov	r0, r4
 80215d0:	bd10      	pop	{r4, pc}

080215d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80215d2:	b510      	push	{r4, lr}
 80215d4:	2104      	movs	r1, #4
 80215d6:	4604      	mov	r4, r0
 80215d8:	f00c f9a5 	bl	802d926 <_ZdlPvj>
 80215dc:	4620      	mov	r0, r4
 80215de:	bd10      	pop	{r4, pc}

080215e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80215e0:	b510      	push	{r4, lr}
 80215e2:	2104      	movs	r1, #4
 80215e4:	4604      	mov	r4, r0
 80215e6:	f00c f99e 	bl	802d926 <_ZdlPvj>
 80215ea:	4620      	mov	r0, r4
 80215ec:	bd10      	pop	{r4, pc}

080215ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80215ee:	b510      	push	{r4, lr}
 80215f0:	2104      	movs	r1, #4
 80215f2:	4604      	mov	r4, r0
 80215f4:	f00c f997 	bl	802d926 <_ZdlPvj>
 80215f8:	4620      	mov	r0, r4
 80215fa:	bd10      	pop	{r4, pc}

080215fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80215fc:	b510      	push	{r4, lr}
 80215fe:	2104      	movs	r1, #4
 8021600:	4604      	mov	r4, r0
 8021602:	f00c f990 	bl	802d926 <_ZdlPvj>
 8021606:	4620      	mov	r0, r4
 8021608:	bd10      	pop	{r4, pc}

0802160a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 802160a:	b510      	push	{r4, lr}
 802160c:	2104      	movs	r1, #4
 802160e:	4604      	mov	r4, r0
 8021610:	f00c f989 	bl	802d926 <_ZdlPvj>
 8021614:	4620      	mov	r0, r4
 8021616:	bd10      	pop	{r4, pc}

08021618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8021618:	b510      	push	{r4, lr}
 802161a:	2104      	movs	r1, #4
 802161c:	4604      	mov	r4, r0
 802161e:	f00c f982 	bl	802d926 <_ZdlPvj>
 8021622:	4620      	mov	r0, r4
 8021624:	bd10      	pop	{r4, pc}

08021626 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8021626:	b510      	push	{r4, lr}
 8021628:	2104      	movs	r1, #4
 802162a:	4604      	mov	r4, r0
 802162c:	f00c f97b 	bl	802d926 <_ZdlPvj>
 8021630:	4620      	mov	r0, r4
 8021632:	bd10      	pop	{r4, pc}

08021634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8021634:	b510      	push	{r4, lr}
 8021636:	2104      	movs	r1, #4
 8021638:	4604      	mov	r4, r0
 802163a:	f00c f974 	bl	802d926 <_ZdlPvj>
 802163e:	4620      	mov	r0, r4
 8021640:	bd10      	pop	{r4, pc}

08021642 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8021642:	b510      	push	{r4, lr}
 8021644:	2104      	movs	r1, #4
 8021646:	4604      	mov	r4, r0
 8021648:	f00c f96d 	bl	802d926 <_ZdlPvj>
 802164c:	4620      	mov	r0, r4
 802164e:	bd10      	pop	{r4, pc}

08021650 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8021650:	b510      	push	{r4, lr}
 8021652:	2104      	movs	r1, #4
 8021654:	4604      	mov	r4, r0
 8021656:	f00c f966 	bl	802d926 <_ZdlPvj>
 802165a:	4620      	mov	r0, r4
 802165c:	bd10      	pop	{r4, pc}

0802165e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 802165e:	b510      	push	{r4, lr}
 8021660:	2104      	movs	r1, #4
 8021662:	4604      	mov	r4, r0
 8021664:	f00c f95f 	bl	802d926 <_ZdlPvj>
 8021668:	4620      	mov	r0, r4
 802166a:	bd10      	pop	{r4, pc}

0802166c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 802166c:	b510      	push	{r4, lr}
 802166e:	2104      	movs	r1, #4
 8021670:	4604      	mov	r4, r0
 8021672:	f00c f958 	bl	802d926 <_ZdlPvj>
 8021676:	4620      	mov	r0, r4
 8021678:	bd10      	pop	{r4, pc}

0802167a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 802167a:	b510      	push	{r4, lr}
 802167c:	2104      	movs	r1, #4
 802167e:	4604      	mov	r4, r0
 8021680:	f00c f951 	bl	802d926 <_ZdlPvj>
 8021684:	4620      	mov	r0, r4
 8021686:	bd10      	pop	{r4, pc}

08021688 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8021688:	b510      	push	{r4, lr}
 802168a:	2104      	movs	r1, #4
 802168c:	4604      	mov	r4, r0
 802168e:	f00c f94a 	bl	802d926 <_ZdlPvj>
 8021692:	4620      	mov	r0, r4
 8021694:	bd10      	pop	{r4, pc}
	...

08021698 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8021698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802169c:	b08f      	sub	sp, #60	@ 0x3c
 802169e:	4616      	mov	r6, r2
 80216a0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80216a4:	9205      	str	r2, [sp, #20]
 80216a6:	4682      	mov	sl, r0
 80216a8:	460d      	mov	r5, r1
 80216aa:	2a00      	cmp	r2, #0
 80216ac:	f000 82b7 	beq.w	8021c1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80216b0:	6830      	ldr	r0, [r6, #0]
 80216b2:	6871      	ldr	r1, [r6, #4]
 80216b4:	ac0a      	add	r4, sp, #40	@ 0x28
 80216b6:	c403      	stmia	r4!, {r0, r1}
 80216b8:	6818      	ldr	r0, [r3, #0]
 80216ba:	6859      	ldr	r1, [r3, #4]
 80216bc:	ac0c      	add	r4, sp, #48	@ 0x30
 80216be:	c403      	stmia	r4!, {r0, r1}
 80216c0:	a80a      	add	r0, sp, #40	@ 0x28
 80216c2:	f7f9 fceb 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80216c6:	4631      	mov	r1, r6
 80216c8:	a80c      	add	r0, sp, #48	@ 0x30
 80216ca:	f7f9 fd2b 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80216ce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80216d2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80216d6:	bfd7      	itett	le
 80216d8:	b293      	uxthle	r3, r2
 80216da:	2301      	movgt	r3, #1
 80216dc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80216e0:	fb91 f3f3 	sdivle	r3, r1, r3
 80216e4:	9300      	str	r3, [sp, #0]
 80216e6:	f105 0308 	add.w	r3, r5, #8
 80216ea:	9900      	ldr	r1, [sp, #0]
 80216ec:	9306      	str	r3, [sp, #24]
 80216ee:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80216f2:	440b      	add	r3, r1
 80216f4:	3b01      	subs	r3, #1
 80216f6:	fb93 f3f1 	sdiv	r3, r3, r1
 80216fa:	9906      	ldr	r1, [sp, #24]
 80216fc:	3b01      	subs	r3, #1
 80216fe:	b29b      	uxth	r3, r3
 8021700:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8021704:	9307      	str	r3, [sp, #28]
 8021706:	9900      	ldr	r1, [sp, #0]
 8021708:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 802170c:	fb93 f0f1 	sdiv	r0, r3, r1
 8021710:	b284      	uxth	r4, r0
 8021712:	9402      	str	r4, [sp, #8]
 8021714:	9d02      	ldr	r5, [sp, #8]
 8021716:	9c00      	ldr	r4, [sp, #0]
 8021718:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 802171c:	fb05 3414 	mls	r4, r5, r4, r3
 8021720:	fb14 f402 	smulbb	r4, r4, r2
 8021724:	440c      	add	r4, r1
 8021726:	b2a4      	uxth	r4, r4
 8021728:	2d00      	cmp	r5, #0
 802172a:	d06c      	beq.n	8021806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 802172c:	1e6a      	subs	r2, r5, #1
 802172e:	9806      	ldr	r0, [sp, #24]
 8021730:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8021734:	9a07      	ldr	r2, [sp, #28]
 8021736:	ba36      	rev	r6, r6
 8021738:	4416      	add	r6, r2
 802173a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 802173e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8021742:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8021a78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8021746:	4411      	add	r1, r2
 8021748:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 802174c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8021750:	4413      	add	r3, r2
 8021752:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8021756:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802175a:	9301      	str	r3, [sp, #4]
 802175c:	4bc4      	ldr	r3, [pc, #784]	@ (8021a70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 802175e:	6818      	ldr	r0, [r3, #0]
 8021760:	6803      	ldr	r3, [r0, #0]
 8021762:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021764:	4798      	blx	r3
 8021766:	4bc3      	ldr	r3, [pc, #780]	@ (8021a74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8021768:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802176c:	881b      	ldrh	r3, [r3, #0]
 802176e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8021772:	fb03 2808 	mla	r8, r3, r8, r2
 8021776:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 802177a:	436b      	muls	r3, r5
 802177c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8021780:	9309      	str	r3, [sp, #36]	@ 0x24
 8021782:	2500      	movs	r5, #0
 8021784:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021788:	fb94 f3f3 	sdiv	r3, r4, r3
 802178c:	9304      	str	r3, [sp, #16]
 802178e:	f10a 0304 	add.w	r3, sl, #4
 8021792:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8021796:	4629      	mov	r1, r5
 8021798:	4618      	mov	r0, r3
 802179a:	9308      	str	r3, [sp, #32]
 802179c:	f00d fa07 	bl	802ebae <memset>
 80217a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80217a2:	4543      	cmp	r3, r8
 80217a4:	f240 8236 	bls.w	8021c14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80217a8:	2203      	movs	r2, #3
 80217aa:	2107      	movs	r1, #7
 80217ac:	200b      	movs	r0, #11
 80217ae:	2c00      	cmp	r4, #0
 80217b0:	f000 8131 	beq.w	8021a16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80217b4:	7833      	ldrb	r3, [r6, #0]
 80217b6:	b2db      	uxtb	r3, r3
 80217b8:	2bfe      	cmp	r3, #254	@ 0xfe
 80217ba:	d126      	bne.n	802180a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80217bc:	f896 e001 	ldrb.w	lr, [r6, #1]
 80217c0:	f896 c002 	ldrb.w	ip, [r6, #2]
 80217c4:	f896 b003 	ldrb.w	fp, [r6, #3]
 80217c8:	fa5f fe8e 	uxtb.w	lr, lr
 80217cc:	fa5f fc8c 	uxtb.w	ip, ip
 80217d0:	f36e 0507 	bfi	r5, lr, #0, #8
 80217d4:	f36c 250f 	bfi	r5, ip, #8, #8
 80217d8:	fa5f fb8b 	uxtb.w	fp, fp
 80217dc:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80217e0:	f36b 4517 	bfi	r5, fp, #16, #8
 80217e4:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80217e8:	0e2b      	lsrs	r3, r5, #24
 80217ea:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80217ee:	fb10 c303 	smlabb	r3, r0, r3, ip
 80217f2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80217f6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80217fa:	3c01      	subs	r4, #1
 80217fc:	1d37      	adds	r7, r6, #4
 80217fe:	b2a4      	uxth	r4, r4
 8021800:	605d      	str	r5, [r3, #4]
 8021802:	463e      	mov	r6, r7
 8021804:	e7d3      	b.n	80217ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8021806:	9e07      	ldr	r6, [sp, #28]
 8021808:	e797      	b.n	802173a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 802180a:	2bff      	cmp	r3, #255	@ 0xff
 802180c:	d127      	bne.n	802185e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 802180e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021812:	78b3      	ldrb	r3, [r6, #2]
 8021814:	f896 e003 	ldrb.w	lr, [r6, #3]
 8021818:	f896 b004 	ldrb.w	fp, [r6, #4]
 802181c:	fa5f fc8c 	uxtb.w	ip, ip
 8021820:	b2db      	uxtb	r3, r3
 8021822:	f36c 0507 	bfi	r5, ip, #0, #8
 8021826:	f363 250f 	bfi	r5, r3, #8, #8
 802182a:	fa5f fe8e 	uxtb.w	lr, lr
 802182e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8021832:	fb12 330e 	smlabb	r3, r2, lr, r3
 8021836:	fa5f fb8b 	uxtb.w	fp, fp
 802183a:	f36e 4517 	bfi	r5, lr, #16, #8
 802183e:	fb11 330c 	smlabb	r3, r1, ip, r3
 8021842:	f36b 651f 	bfi	r5, fp, #24, #8
 8021846:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 802184a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 802184e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8021852:	3c01      	subs	r4, #1
 8021854:	1d77      	adds	r7, r6, #5
 8021856:	b2a4      	uxth	r4, r4
 8021858:	f8cb 5004 	str.w	r5, [fp, #4]
 802185c:	e7d1      	b.n	8021802 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 802185e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8021862:	f106 0701 	add.w	r7, r6, #1
 8021866:	d107      	bne.n	8021878 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8021868:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 802186c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8021870:	685d      	ldr	r5, [r3, #4]
 8021872:	3c01      	subs	r4, #1
 8021874:	b2a4      	uxth	r4, r4
 8021876:	e7c4      	b.n	8021802 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8021878:	f1bc 0f01 	cmp.w	ip, #1
 802187c:	d12c      	bne.n	80218d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 802187e:	f003 0e03 	and.w	lr, r3, #3
 8021882:	f1ae 0e02 	sub.w	lr, lr, #2
 8021886:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 802188a:	fa5f fe8e 	uxtb.w	lr, lr
 802188e:	f003 0c0c 	and.w	ip, r3, #12
 8021892:	f36e 0507 	bfi	r5, lr, #0, #8
 8021896:	f1ac 0c08 	sub.w	ip, ip, #8
 802189a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 802189e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80218a2:	f36c 250f 	bfi	r5, ip, #8, #8
 80218a6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80218aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80218ae:	3b02      	subs	r3, #2
 80218b0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80218b4:	b2db      	uxtb	r3, r3
 80218b6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80218ba:	f363 4517 	bfi	r5, r3, #16, #8
 80218be:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80218c2:	0e2e      	lsrs	r6, r5, #24
 80218c4:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80218c8:	fb10 c606 	smlabb	r6, r0, r6, ip
 80218cc:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80218d0:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 80218d4:	6075      	str	r5, [r6, #4]
 80218d6:	e7cc      	b.n	8021872 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 80218d8:	f1bc 0f02 	cmp.w	ip, #2
 80218dc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80218e0:	d12a      	bne.n	8021938 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 80218e2:	1cb7      	adds	r7, r6, #2
 80218e4:	7876      	ldrb	r6, [r6, #1]
 80218e6:	b2f6      	uxtb	r6, r6
 80218e8:	f006 0c0f 	and.w	ip, r6, #15
 80218ec:	3b20      	subs	r3, #32
 80218ee:	f1ac 0c08 	sub.w	ip, ip, #8
 80218f2:	449c      	add	ip, r3
 80218f4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 80218f8:	fa5f fc8c 	uxtb.w	ip, ip
 80218fc:	f36c 0507 	bfi	r5, ip, #0, #8
 8021900:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8021904:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8021908:	fa5f fe8e 	uxtb.w	lr, lr
 802190c:	1136      	asrs	r6, r6, #4
 802190e:	f36e 250f 	bfi	r5, lr, #8, #8
 8021912:	3e08      	subs	r6, #8
 8021914:	4433      	add	r3, r6
 8021916:	f3c5 4607 	ubfx	r6, r5, #16, #8
 802191a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 802191e:	b2db      	uxtb	r3, r3
 8021920:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8021924:	f363 4517 	bfi	r5, r3, #16, #8
 8021928:	fb12 ee03 	smlabb	lr, r2, r3, lr
 802192c:	0e2e      	lsrs	r6, r5, #24
 802192e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8021932:	fb10 e606 	smlabb	r6, r0, r6, lr
 8021936:	e7c9      	b.n	80218cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8021938:	1c5e      	adds	r6, r3, #1
 802193a:	42a6      	cmp	r6, r4
 802193c:	dd4e      	ble.n	80219dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 802193e:	1b36      	subs	r6, r6, r4
 8021940:	2e00      	cmp	r6, #0
 8021942:	dc4e      	bgt.n	80219e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8021944:	f8dd b004 	ldr.w	fp, [sp, #4]
 8021948:	2400      	movs	r4, #0
 802194a:	f1bb 0f00 	cmp.w	fp, #0
 802194e:	f340 8122 	ble.w	8021b96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8021952:	1c7b      	adds	r3, r7, #1
 8021954:	9303      	str	r3, [sp, #12]
 8021956:	783b      	ldrb	r3, [r7, #0]
 8021958:	b2db      	uxtb	r3, r3
 802195a:	2bfe      	cmp	r3, #254	@ 0xfe
 802195c:	d160      	bne.n	8021a20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 802195e:	7879      	ldrb	r1, [r7, #1]
 8021960:	78ba      	ldrb	r2, [r7, #2]
 8021962:	78f8      	ldrb	r0, [r7, #3]
 8021964:	b2c9      	uxtb	r1, r1
 8021966:	f361 0507 	bfi	r5, r1, #0, #8
 802196a:	b2d2      	uxtb	r2, r2
 802196c:	1d3b      	adds	r3, r7, #4
 802196e:	f362 250f 	bfi	r5, r2, #8, #8
 8021972:	b2c0      	uxtb	r0, r0
 8021974:	9303      	str	r3, [sp, #12]
 8021976:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 802197a:	2303      	movs	r3, #3
 802197c:	fb13 2200 	smlabb	r2, r3, r0, r2
 8021980:	f360 4517 	bfi	r5, r0, #16, #8
 8021984:	2307      	movs	r3, #7
 8021986:	fb13 2101 	smlabb	r1, r3, r1, r2
 802198a:	0e2e      	lsrs	r6, r5, #24
 802198c:	230b      	movs	r3, #11
 802198e:	fb13 1306 	smlabb	r3, r3, r6, r1
 8021992:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021996:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 802199a:	605d      	str	r5, [r3, #4]
 802199c:	2601      	movs	r6, #1
 802199e:	4637      	mov	r7, r6
 80219a0:	0e2b      	lsrs	r3, r5, #24
 80219a2:	ebab 0b07 	sub.w	fp, fp, r7
 80219a6:	eba6 0607 	sub.w	r6, r6, r7
 80219aa:	f040 80d3 	bne.w	8021b54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80219ae:	b18c      	cbz	r4, 80219d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80219b0:	4648      	mov	r0, r9
 80219b2:	00a1      	lsls	r1, r4, #2
 80219b4:	f7df fdd2 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 80219b8:	9b05      	ldr	r3, [sp, #20]
 80219ba:	4622      	mov	r2, r4
 80219bc:	4649      	mov	r1, r9
 80219be:	4640      	mov	r0, r8
 80219c0:	f7df fe1a 	bl	80015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80219c4:	4b2c      	ldr	r3, [pc, #176]	@ (8021a78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 80219c6:	4a2d      	ldr	r2, [pc, #180]	@ (8021a7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 80219c8:	4599      	cmp	r9, r3
 80219ca:	bf08      	it	eq
 80219cc:	4613      	moveq	r3, r2
 80219ce:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80219d2:	4699      	mov	r9, r3
 80219d4:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 80219d8:	2400      	movs	r4, #0
 80219da:	e0da      	b.n	8021b92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 80219dc:	1ba6      	subs	r6, r4, r6
 80219de:	b2b4      	uxth	r4, r6
 80219e0:	e70f      	b.n	8021802 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80219e2:	9b01      	ldr	r3, [sp, #4]
 80219e4:	9a01      	ldr	r2, [sp, #4]
 80219e6:	42b3      	cmp	r3, r6
 80219e8:	bfa8      	it	ge
 80219ea:	4633      	movge	r3, r6
 80219ec:	0e2c      	lsrs	r4, r5, #24
 80219ee:	eba2 0b03 	sub.w	fp, r2, r3
 80219f2:	eba6 0603 	sub.w	r6, r6, r3
 80219f6:	d00b      	beq.n	8021a10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 80219f8:	f1a9 0104 	sub.w	r1, r9, #4
 80219fc:	461a      	mov	r2, r3
 80219fe:	2a00      	cmp	r2, #0
 8021a00:	dc02      	bgt.n	8021a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8021a02:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021a06:	e7a0      	b.n	802194a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8021a08:	f841 5f04 	str.w	r5, [r1, #4]!
 8021a0c:	3a01      	subs	r2, #1
 8021a0e:	e7f6      	b.n	80219fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8021a10:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8021a14:	e799      	b.n	802194a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8021a16:	4637      	mov	r7, r6
 8021a18:	f8dd b004 	ldr.w	fp, [sp, #4]
 8021a1c:	4626      	mov	r6, r4
 8021a1e:	e794      	b.n	802194a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8021a20:	2bff      	cmp	r3, #255	@ 0xff
 8021a22:	d11d      	bne.n	8021a60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8021a24:	7878      	ldrb	r0, [r7, #1]
 8021a26:	78ba      	ldrb	r2, [r7, #2]
 8021a28:	78fe      	ldrb	r6, [r7, #3]
 8021a2a:	1d7b      	adds	r3, r7, #5
 8021a2c:	b2c0      	uxtb	r0, r0
 8021a2e:	9303      	str	r3, [sp, #12]
 8021a30:	793b      	ldrb	r3, [r7, #4]
 8021a32:	f360 0507 	bfi	r5, r0, #0, #8
 8021a36:	b2d2      	uxtb	r2, r2
 8021a38:	b2d9      	uxtb	r1, r3
 8021a3a:	f362 250f 	bfi	r5, r2, #8, #8
 8021a3e:	b2f6      	uxtb	r6, r6
 8021a40:	2303      	movs	r3, #3
 8021a42:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8021a46:	fb13 2206 	smlabb	r2, r3, r6, r2
 8021a4a:	2307      	movs	r3, #7
 8021a4c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8021a50:	f366 4517 	bfi	r5, r6, #16, #8
 8021a54:	230b      	movs	r3, #11
 8021a56:	f361 651f 	bfi	r5, r1, #24, #8
 8021a5a:	fb13 0301 	smlabb	r3, r3, r1, r0
 8021a5e:	e798      	b.n	8021992 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8021a60:	119e      	asrs	r6, r3, #6
 8021a62:	d10d      	bne.n	8021a80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8021a64:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021a68:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8021a6c:	685d      	ldr	r5, [r3, #4]
 8021a6e:	e795      	b.n	802199c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8021a70:	200138e4 	.word	0x200138e4
 8021a74:	200138de 	.word	0x200138de
 8021a78:	20000180 	.word	0x20000180
 8021a7c:	20000280 	.word	0x20000280
 8021a80:	2e01      	cmp	r6, #1
 8021a82:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8021a86:	d12b      	bne.n	8021ae0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8021a88:	f003 0003 	and.w	r0, r3, #3
 8021a8c:	3802      	subs	r0, #2
 8021a8e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8021a92:	b2c0      	uxtb	r0, r0
 8021a94:	f003 020c 	and.w	r2, r3, #12
 8021a98:	f360 0507 	bfi	r5, r0, #0, #8
 8021a9c:	3a08      	subs	r2, #8
 8021a9e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8021aa2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8021aa6:	f362 250f 	bfi	r5, r2, #8, #8
 8021aaa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8021aae:	1e9f      	subs	r7, r3, #2
 8021ab0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8021ab4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8021ab8:	b2db      	uxtb	r3, r3
 8021aba:	2703      	movs	r7, #3
 8021abc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8021ac0:	fb17 2203 	smlabb	r2, r7, r3, r2
 8021ac4:	2707      	movs	r7, #7
 8021ac6:	f363 4517 	bfi	r5, r3, #16, #8
 8021aca:	fb17 2000 	smlabb	r0, r7, r0, r2
 8021ace:	230b      	movs	r3, #11
 8021ad0:	fb13 0101 	smlabb	r1, r3, r1, r0
 8021ad4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8021ad8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8021adc:	604d      	str	r5, [r1, #4]
 8021ade:	e75e      	b.n	802199e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8021ae0:	2e02      	cmp	r6, #2
 8021ae2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8021ae6:	d12f      	bne.n	8021b48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8021ae8:	7878      	ldrb	r0, [r7, #1]
 8021aea:	1cba      	adds	r2, r7, #2
 8021aec:	b2c0      	uxtb	r0, r0
 8021aee:	9203      	str	r2, [sp, #12]
 8021af0:	f000 020f 	and.w	r2, r0, #15
 8021af4:	3b20      	subs	r3, #32
 8021af6:	3a08      	subs	r2, #8
 8021af8:	441a      	add	r2, r3
 8021afa:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8021afe:	b2d2      	uxtb	r2, r2
 8021b00:	f362 0507 	bfi	r5, r2, #0, #8
 8021b04:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8021b08:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8021b0c:	b2f6      	uxtb	r6, r6
 8021b0e:	1100      	asrs	r0, r0, #4
 8021b10:	f366 250f 	bfi	r5, r6, #8, #8
 8021b14:	3808      	subs	r0, #8
 8021b16:	4403      	add	r3, r0
 8021b18:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8021b1c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8021b20:	b2db      	uxtb	r3, r3
 8021b22:	2003      	movs	r0, #3
 8021b24:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8021b28:	fb10 6603 	smlabb	r6, r0, r3, r6
 8021b2c:	2007      	movs	r0, #7
 8021b2e:	f363 4517 	bfi	r5, r3, #16, #8
 8021b32:	fb10 6202 	smlabb	r2, r0, r2, r6
 8021b36:	230b      	movs	r3, #11
 8021b38:	fb13 2101 	smlabb	r1, r3, r1, r2
 8021b3c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8021b40:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8021b44:	604d      	str	r5, [r1, #4]
 8021b46:	e729      	b.n	802199c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8021b48:	1c5e      	adds	r6, r3, #1
 8021b4a:	45b3      	cmp	fp, r6
 8021b4c:	465f      	mov	r7, fp
 8021b4e:	bfa8      	it	ge
 8021b50:	4637      	movge	r7, r6
 8021b52:	e725      	b.n	80219a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8021b54:	193b      	adds	r3, r7, r4
 8021b56:	2b40      	cmp	r3, #64	@ 0x40
 8021b58:	dd13      	ble.n	8021b82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8021b5a:	4648      	mov	r0, r9
 8021b5c:	00a1      	lsls	r1, r4, #2
 8021b5e:	f7df fcfd 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8021b62:	4649      	mov	r1, r9
 8021b64:	9b05      	ldr	r3, [sp, #20]
 8021b66:	4622      	mov	r2, r4
 8021b68:	4640      	mov	r0, r8
 8021b6a:	f7df fd45 	bl	80015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8021b6e:	4b2d      	ldr	r3, [pc, #180]	@ (8021c24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8021b70:	4599      	cmp	r9, r3
 8021b72:	bf0c      	ite	eq
 8021b74:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8021c30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8021b78:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8021c24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8021b7c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021b80:	2400      	movs	r4, #0
 8021b82:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8021b86:	463b      	mov	r3, r7
 8021b88:	3b01      	subs	r3, #1
 8021b8a:	f842 5b04 	str.w	r5, [r2], #4
 8021b8e:	d1fb      	bne.n	8021b88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8021b90:	443c      	add	r4, r7
 8021b92:	9f03      	ldr	r7, [sp, #12]
 8021b94:	e6d9      	b.n	802194a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8021b96:	b15c      	cbz	r4, 8021bb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8021b98:	00a1      	lsls	r1, r4, #2
 8021b9a:	4648      	mov	r0, r9
 8021b9c:	f7df fcde 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8021ba0:	4640      	mov	r0, r8
 8021ba2:	9b05      	ldr	r3, [sp, #20]
 8021ba4:	4622      	mov	r2, r4
 8021ba6:	4649      	mov	r1, r9
 8021ba8:	f7df fd26 	bl	80015f8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8021bac:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021bb0:	4b1d      	ldr	r3, [pc, #116]	@ (8021c28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8021bb2:	9a01      	ldr	r2, [sp, #4]
 8021bb4:	881b      	ldrh	r3, [r3, #0]
 8021bb6:	1a9b      	subs	r3, r3, r2
 8021bb8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8021bbc:	9b04      	ldr	r3, [sp, #16]
 8021bbe:	3301      	adds	r3, #1
 8021bc0:	9304      	str	r3, [sp, #16]
 8021bc2:	9a04      	ldr	r2, [sp, #16]
 8021bc4:	9b00      	ldr	r3, [sp, #0]
 8021bc6:	4293      	cmp	r3, r2
 8021bc8:	d11d      	bne.n	8021c06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8021bca:	9b02      	ldr	r3, [sp, #8]
 8021bcc:	9a02      	ldr	r2, [sp, #8]
 8021bce:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8021bd2:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8021bd6:	9808      	ldr	r0, [sp, #32]
 8021bd8:	f103 0b01 	add.w	fp, r3, #1
 8021bdc:	9b06      	ldr	r3, [sp, #24]
 8021bde:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8021be2:	9b07      	ldr	r3, [sp, #28]
 8021be4:	2500      	movs	r5, #0
 8021be6:	ba3f      	rev	r7, r7
 8021be8:	1ba4      	subs	r4, r4, r6
 8021bea:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8021bee:	4629      	mov	r1, r5
 8021bf0:	441f      	add	r7, r3
 8021bf2:	b2a4      	uxth	r4, r4
 8021bf4:	f00c ffdb 	bl	802ebae <memset>
 8021bf8:	f8cd b008 	str.w	fp, [sp, #8]
 8021bfc:	9504      	str	r5, [sp, #16]
 8021bfe:	f7df fca3 	bl	8001548 <_ZN8touchgfx5paint8tearDownEv>
 8021c02:	463e      	mov	r6, r7
 8021c04:	e5cc      	b.n	80217a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8021c06:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8021c0a:	9b01      	ldr	r3, [sp, #4]
 8021c0c:	1ae4      	subs	r4, r4, r3
 8021c0e:	1ba4      	subs	r4, r4, r6
 8021c10:	b2a4      	uxth	r4, r4
 8021c12:	e7f4      	b.n	8021bfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8021c14:	4b05      	ldr	r3, [pc, #20]	@ (8021c2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8021c16:	6818      	ldr	r0, [r3, #0]
 8021c18:	6803      	ldr	r3, [r0, #0]
 8021c1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021c1c:	4798      	blx	r3
 8021c1e:	b00f      	add	sp, #60	@ 0x3c
 8021c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c24:	20000180 	.word	0x20000180
 8021c28:	200138de 	.word	0x200138de
 8021c2c:	200138e4 	.word	0x200138e4
 8021c30:	20000280 	.word	0x20000280

08021c34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c38:	b08f      	sub	sp, #60	@ 0x3c
 8021c3a:	461c      	mov	r4, r3
 8021c3c:	9205      	str	r2, [sp, #20]
 8021c3e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8021c42:	9100      	str	r1, [sp, #0]
 8021c44:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021c46:	9201      	str	r2, [sp, #4]
 8021c48:	2a00      	cmp	r2, #0
 8021c4a:	f000 8115 	beq.w	8021e78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8021c4e:	6820      	ldr	r0, [r4, #0]
 8021c50:	6861      	ldr	r1, [r4, #4]
 8021c52:	aa0a      	add	r2, sp, #40	@ 0x28
 8021c54:	c203      	stmia	r2!, {r0, r1}
 8021c56:	6818      	ldr	r0, [r3, #0]
 8021c58:	6859      	ldr	r1, [r3, #4]
 8021c5a:	aa0c      	add	r2, sp, #48	@ 0x30
 8021c5c:	c203      	stmia	r2!, {r0, r1}
 8021c5e:	a80a      	add	r0, sp, #40	@ 0x28
 8021c60:	f7f9 fa1c 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021c64:	4621      	mov	r1, r4
 8021c66:	a80c      	add	r0, sp, #48	@ 0x30
 8021c68:	f7f9 fa5c 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021c6c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8021c70:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8021c74:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8021c78:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8021c7c:	bfde      	ittt	le
 8021c7e:	b2b3      	uxthle	r3, r6
 8021c80:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8021c84:	fb92 f3f3 	sdivle	r3, r2, r3
 8021c88:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8021c8c:	bfc8      	it	gt
 8021c8e:	2301      	movgt	r3, #1
 8021c90:	fb92 f1f3 	sdiv	r1, r2, r3
 8021c94:	fa1f fc81 	uxth.w	ip, r1
 8021c98:	fb0c 2413 	mls	r4, ip, r3, r2
 8021c9c:	fb14 f406 	smulbb	r4, r4, r6
 8021ca0:	441d      	add	r5, r3
 8021ca2:	4404      	add	r4, r0
 8021ca4:	4661      	mov	r1, ip
 8021ca6:	3d01      	subs	r5, #1
 8021ca8:	b2a4      	uxth	r4, r4
 8021caa:	fb95 f5f3 	sdiv	r5, r5, r3
 8021cae:	b131      	cbz	r1, 8021cbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8021cb0:	9b05      	ldr	r3, [sp, #20]
 8021cb2:	9900      	ldr	r1, [sp, #0]
 8021cb4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8021cb8:	ba1b      	rev	r3, r3
 8021cba:	4419      	add	r1, r3
 8021cbc:	9100      	str	r1, [sp, #0]
 8021cbe:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8021cc2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8021cc6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8021cca:	4418      	add	r0, r3
 8021ccc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021cd0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8021cd4:	441a      	add	r2, r3
 8021cd6:	4b6a      	ldr	r3, [pc, #424]	@ (8021e80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8021cd8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8021cdc:	6818      	ldr	r0, [r3, #0]
 8021cde:	6803      	ldr	r3, [r0, #0]
 8021ce0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021ce2:	4798      	blx	r3
 8021ce4:	4967      	ldr	r1, [pc, #412]	@ (8021e84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8021ce6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8021cea:	880b      	ldrh	r3, [r1, #0]
 8021cec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8021cf0:	9109      	str	r1, [sp, #36]	@ 0x24
 8021cf2:	fb03 c202 	mla	r2, r3, r2, ip
 8021cf6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021cfa:	4373      	muls	r3, r6
 8021cfc:	b2ad      	uxth	r5, r5
 8021cfe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021d02:	00ad      	lsls	r5, r5, #2
 8021d04:	9306      	str	r3, [sp, #24]
 8021d06:	1d2b      	adds	r3, r5, #4
 8021d08:	9307      	str	r3, [sp, #28]
 8021d0a:	9b01      	ldr	r3, [sp, #4]
 8021d0c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8021d10:	9103      	str	r1, [sp, #12]
 8021d12:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8021d16:	2c00      	cmp	r4, #0
 8021d18:	bf0c      	ite	eq
 8021d1a:	46c6      	moveq	lr, r8
 8021d1c:	f04f 0e00 	movne.w	lr, #0
 8021d20:	2300      	movs	r3, #0
 8021d22:	b292      	uxth	r2, r2
 8021d24:	fa1f fe8e 	uxth.w	lr, lr
 8021d28:	9302      	str	r3, [sp, #8]
 8021d2a:	9204      	str	r2, [sp, #16]
 8021d2c:	9a06      	ldr	r2, [sp, #24]
 8021d2e:	4282      	cmp	r2, r0
 8021d30:	f240 809d 	bls.w	8021e6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8021d34:	b963      	cbnz	r3, 8021d50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8021d36:	9b00      	ldr	r3, [sp, #0]
 8021d38:	781a      	ldrb	r2, [r3, #0]
 8021d3a:	0993      	lsrs	r3, r2, #6
 8021d3c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8021d40:	9202      	str	r2, [sp, #8]
 8021d42:	1e5a      	subs	r2, r3, #1
 8021d44:	2a02      	cmp	r2, #2
 8021d46:	d815      	bhi.n	8021d74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8021d48:	9a00      	ldr	r2, [sp, #0]
 8021d4a:	3201      	adds	r2, #1
 8021d4c:	9200      	str	r2, [sp, #0]
 8021d4e:	b29b      	uxth	r3, r3
 8021d50:	b1b4      	cbz	r4, 8021d80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8021d52:	429c      	cmp	r4, r3
 8021d54:	bf95      	itete	ls
 8021d56:	1b1c      	subls	r4, r3, r4
 8021d58:	1ae4      	subhi	r4, r4, r3
 8021d5a:	fa1f fa84 	uxthls.w	sl, r4
 8021d5e:	b2a4      	uxthhi	r4, r4
 8021d60:	bf87      	ittee	hi
 8021d62:	4671      	movhi	r1, lr
 8021d64:	f04f 0a00 	movhi.w	sl, #0
 8021d68:	fa1f f188 	uxthls.w	r1, r8
 8021d6c:	2400      	movls	r4, #0
 8021d6e:	4653      	mov	r3, sl
 8021d70:	468e      	mov	lr, r1
 8021d72:	e7db      	b.n	8021d2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8021d74:	9a00      	ldr	r2, [sp, #0]
 8021d76:	9b00      	ldr	r3, [sp, #0]
 8021d78:	3202      	adds	r2, #2
 8021d7a:	785b      	ldrb	r3, [r3, #1]
 8021d7c:	9200      	str	r2, [sp, #0]
 8021d7e:	e7e7      	b.n	8021d50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8021d80:	2202      	movs	r2, #2
 8021d82:	4615      	mov	r5, r2
 8021d84:	9907      	ldr	r1, [sp, #28]
 8021d86:	9a02      	ldr	r2, [sp, #8]
 8021d88:	fb15 1202 	smlabb	r2, r5, r2, r1
 8021d8c:	9905      	ldr	r1, [sp, #20]
 8021d8e:	4573      	cmp	r3, lr
 8021d90:	f831 c002 	ldrh.w	ip, [r1, r2]
 8021d94:	9a01      	ldr	r2, [sp, #4]
 8021d96:	bf2b      	itete	cs
 8021d98:	eba3 0a0e 	subcs.w	sl, r3, lr
 8021d9c:	ebae 0103 	subcc.w	r1, lr, r3
 8021da0:	46f1      	movcs	r9, lr
 8021da2:	4699      	movcc	r9, r3
 8021da4:	bf27      	ittee	cs
 8021da6:	fa1f fa8a 	uxthcs.w	sl, sl
 8021daa:	4621      	movcs	r1, r4
 8021dac:	b289      	uxthcc	r1, r1
 8021dae:	46a2      	movcc	sl, r4
 8021db0:	2aff      	cmp	r2, #255	@ 0xff
 8021db2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021db6:	d105      	bne.n	8021dc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8021db8:	4481      	add	r9, r0
 8021dba:	4581      	cmp	r9, r0
 8021dbc:	d045      	beq.n	8021e4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8021dbe:	f820 cb02 	strh.w	ip, [r0], #2
 8021dc2:	e7fa      	b.n	8021dba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8021dc4:	9d03      	ldr	r5, [sp, #12]
 8021dc6:	ea4f 222c 	mov.w	r2, ip, asr #8
 8021dca:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8021dce:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021dd2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021dd6:	436a      	muls	r2, r5
 8021dd8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8021ddc:	fa5f fc8c 	uxtb.w	ip, ip
 8021de0:	9208      	str	r2, [sp, #32]
 8021de2:	fb0b fb05 	mul.w	fp, fp, r5
 8021de6:	fb0c fc05 	mul.w	ip, ip, r5
 8021dea:	4481      	add	r9, r0
 8021dec:	4581      	cmp	r9, r0
 8021dee:	d02c      	beq.n	8021e4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8021df0:	8802      	ldrh	r2, [r0, #0]
 8021df2:	9d04      	ldr	r5, [sp, #16]
 8021df4:	9f04      	ldr	r7, [sp, #16]
 8021df6:	1216      	asrs	r6, r2, #8
 8021df8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8021dfc:	fb16 f605 	smulbb	r6, r6, r5
 8021e00:	9d08      	ldr	r5, [sp, #32]
 8021e02:	442e      	add	r6, r5
 8021e04:	10d5      	asrs	r5, r2, #3
 8021e06:	00d2      	lsls	r2, r2, #3
 8021e08:	b2d2      	uxtb	r2, r2
 8021e0a:	fb12 f207 	smulbb	r2, r2, r7
 8021e0e:	b2b6      	uxth	r6, r6
 8021e10:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8021e14:	4462      	add	r2, ip
 8021e16:	fb15 f507 	smulbb	r5, r5, r7
 8021e1a:	b292      	uxth	r2, r2
 8021e1c:	1c77      	adds	r7, r6, #1
 8021e1e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8021e22:	1c57      	adds	r7, r2, #1
 8021e24:	445d      	add	r5, fp
 8021e26:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8021e2a:	b2ad      	uxth	r5, r5
 8021e2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021e30:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8021e34:	4316      	orrs	r6, r2
 8021e36:	1c6a      	adds	r2, r5, #1
 8021e38:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8021e3c:	096d      	lsrs	r5, r5, #5
 8021e3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021e42:	432e      	orrs	r6, r5
 8021e44:	f820 6b02 	strh.w	r6, [r0], #2
 8021e48:	e7d0      	b.n	8021dec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8021e4a:	4573      	cmp	r3, lr
 8021e4c:	d38f      	bcc.n	8021d6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8021e4e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8021e52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021e54:	fa1f f188 	uxth.w	r1, r8
 8021e58:	1a64      	subs	r4, r4, r1
 8021e5a:	881b      	ldrh	r3, [r3, #0]
 8021e5c:	b2a4      	uxth	r4, r4
 8021e5e:	2c00      	cmp	r4, #0
 8021e60:	eba3 0308 	sub.w	r3, r3, r8
 8021e64:	bf18      	it	ne
 8021e66:	2100      	movne	r1, #0
 8021e68:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021e6c:	e77f      	b.n	8021d6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8021e6e:	4b04      	ldr	r3, [pc, #16]	@ (8021e80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8021e70:	6818      	ldr	r0, [r3, #0]
 8021e72:	6803      	ldr	r3, [r0, #0]
 8021e74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021e76:	4798      	blx	r3
 8021e78:	b00f      	add	sp, #60	@ 0x3c
 8021e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e7e:	bf00      	nop
 8021e80:	200138e4 	.word	0x200138e4
 8021e84:	200138de 	.word	0x200138de

08021e88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e8c:	b09f      	sub	sp, #124	@ 0x7c
 8021e8e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8021e92:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8021e96:	9209      	str	r2, [sp, #36]	@ 0x24
 8021e98:	461d      	mov	r5, r3
 8021e9a:	4604      	mov	r4, r0
 8021e9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021e9e:	2a00      	cmp	r2, #0
 8021ea0:	f000 81eb 	beq.w	802227a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8021ea4:	6828      	ldr	r0, [r5, #0]
 8021ea6:	6869      	ldr	r1, [r5, #4]
 8021ea8:	aa1a      	add	r2, sp, #104	@ 0x68
 8021eaa:	c203      	stmia	r2!, {r0, r1}
 8021eac:	6818      	ldr	r0, [r3, #0]
 8021eae:	6859      	ldr	r1, [r3, #4]
 8021eb0:	aa1c      	add	r2, sp, #112	@ 0x70
 8021eb2:	c203      	stmia	r2!, {r0, r1}
 8021eb4:	a81a      	add	r0, sp, #104	@ 0x68
 8021eb6:	f7f9 f8f1 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021eba:	4629      	mov	r1, r5
 8021ebc:	a81c      	add	r0, sp, #112	@ 0x70
 8021ebe:	f7f9 f931 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021ec2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8021ec6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8021eca:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8021ece:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8021ed2:	bfd7      	itett	le
 8021ed4:	b29a      	uxthle	r2, r3
 8021ed6:	2201      	movgt	r2, #1
 8021ed8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8021edc:	fb91 f2f2 	sdivle	r2, r1, r2
 8021ee0:	9202      	str	r2, [sp, #8]
 8021ee2:	9802      	ldr	r0, [sp, #8]
 8021ee4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8021ee8:	fb92 f0f0 	sdiv	r0, r2, r0
 8021eec:	b280      	uxth	r0, r0
 8021eee:	9010      	str	r0, [sp, #64]	@ 0x40
 8021ef0:	9902      	ldr	r1, [sp, #8]
 8021ef2:	9802      	ldr	r0, [sp, #8]
 8021ef4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021ef6:	4488      	add	r8, r1
 8021ef8:	fb05 2510 	mls	r5, r5, r0, r2
 8021efc:	fb15 f503 	smulbb	r5, r5, r3
 8021f00:	f108 38ff 	add.w	r8, r8, #4294967295
 8021f04:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8021f08:	fb98 f8f1 	sdiv	r8, r8, r1
 8021f0c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8021f10:	440d      	add	r5, r1
 8021f12:	4419      	add	r1, r3
 8021f14:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8021f18:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8021f1c:	441a      	add	r2, r3
 8021f1e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8021f22:	9304      	str	r3, [sp, #16]
 8021f24:	4b95      	ldr	r3, [pc, #596]	@ (802217c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8021f26:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8021f2a:	6818      	ldr	r0, [r3, #0]
 8021f2c:	6803      	ldr	r3, [r0, #0]
 8021f2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021f30:	4798      	blx	r3
 8021f32:	4b93      	ldr	r3, [pc, #588]	@ (8022180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8021f34:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8021f38:	881a      	ldrh	r2, [r3, #0]
 8021f3a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8021f3e:	9318      	str	r3, [sp, #96]	@ 0x60
 8021f40:	fb02 7101 	mla	r1, r2, r1, r7
 8021f44:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8021f48:	4356      	muls	r6, r2
 8021f4a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8021f4e:	f108 0801 	add.w	r8, r8, #1
 8021f52:	920a      	str	r2, [sp, #40]	@ 0x28
 8021f54:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021f56:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8021f5a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021f5c:	fa1f f888 	uxth.w	r8, r8
 8021f60:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8021f64:	f108 0204 	add.w	r2, r8, #4
 8021f68:	9211      	str	r2, [sp, #68]	@ 0x44
 8021f6a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021f6c:	4b85      	ldr	r3, [pc, #532]	@ (8022184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8021f6e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8021f72:	b2ad      	uxth	r5, r5
 8021f74:	9215      	str	r2, [sp, #84]	@ 0x54
 8021f76:	2d00      	cmp	r5, #0
 8021f78:	9a04      	ldr	r2, [sp, #16]
 8021f7a:	f04f 0100 	mov.w	r1, #0
 8021f7e:	bf18      	it	ne
 8021f80:	2200      	movne	r2, #0
 8021f82:	1b1b      	subs	r3, r3, r4
 8021f84:	b292      	uxth	r2, r2
 8021f86:	910d      	str	r1, [sp, #52]	@ 0x34
 8021f88:	9319      	str	r3, [sp, #100]	@ 0x64
 8021f8a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8021f8c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021f8e:	fa11 f383 	uxtah	r3, r1, r3
 8021f92:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8021f94:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8021f98:	3304      	adds	r3, #4
 8021f9a:	9306      	str	r3, [sp, #24]
 8021f9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021f9e:	4283      	cmp	r3, r0
 8021fa0:	f240 8166 	bls.w	8022270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8021fa4:	9902      	ldr	r1, [sp, #8]
 8021fa6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8021faa:	fbb5 f3f3 	udiv	r3, r5, r3
 8021fae:	1acb      	subs	r3, r1, r3
 8021fb0:	b29b      	uxth	r3, r3
 8021fb2:	9316      	str	r3, [sp, #88]	@ 0x58
 8021fb4:	9b06      	ldr	r3, [sp, #24]
 8021fb6:	9e06      	ldr	r6, [sp, #24]
 8021fb8:	7859      	ldrb	r1, [r3, #1]
 8021fba:	789b      	ldrb	r3, [r3, #2]
 8021fbc:	7836      	ldrb	r6, [r6, #0]
 8021fbe:	9612      	str	r6, [sp, #72]	@ 0x48
 8021fc0:	021b      	lsls	r3, r3, #8
 8021fc2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8021fc6:	9906      	ldr	r1, [sp, #24]
 8021fc8:	78c9      	ldrb	r1, [r1, #3]
 8021fca:	430b      	orrs	r3, r1
 8021fcc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8021fce:	3601      	adds	r6, #1
 8021fd0:	4419      	add	r1, r3
 8021fd2:	9605      	str	r6, [sp, #20]
 8021fd4:	1c4e      	adds	r6, r1, #1
 8021fd6:	9603      	str	r6, [sp, #12]
 8021fd8:	7849      	ldrb	r1, [r1, #1]
 8021fda:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8021fdc:	0209      	lsls	r1, r1, #8
 8021fde:	5cf3      	ldrb	r3, [r6, r3]
 8021fe0:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8021fe4:	4319      	orrs	r1, r3
 8021fe6:	b28b      	uxth	r3, r1
 8021fe8:	930c      	str	r3, [sp, #48]	@ 0x30
 8021fea:	2300      	movs	r3, #0
 8021fec:	f04f 0a01 	mov.w	sl, #1
 8021ff0:	9307      	str	r3, [sp, #28]
 8021ff2:	469c      	mov	ip, r3
 8021ff4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8021ff8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8021ffc:	46d3      	mov	fp, sl
 8021ffe:	4657      	mov	r7, sl
 8022000:	930e      	str	r3, [sp, #56]	@ 0x38
 8022002:	2d00      	cmp	r5, #0
 8022004:	d07e      	beq.n	8022104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8022006:	42af      	cmp	r7, r5
 8022008:	d26e      	bcs.n	80220e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 802200a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802200c:	9201      	str	r2, [sp, #4]
 802200e:	1bed      	subs	r5, r5, r7
 8022010:	4283      	cmp	r3, r0
 8022012:	b2ad      	uxth	r5, r5
 8022014:	d802      	bhi.n	802201c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8022016:	e073      	b.n	8022100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8022018:	2b00      	cmp	r3, #0
 802201a:	d15f      	bne.n	80220dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 802201c:	9b03      	ldr	r3, [sp, #12]
 802201e:	785b      	ldrb	r3, [r3, #1]
 8022020:	f1cb 0207 	rsb	r2, fp, #7
 8022024:	4093      	lsls	r3, r2
 8022026:	005b      	lsls	r3, r3, #1
 8022028:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 802202c:	9b03      	ldr	r3, [sp, #12]
 802202e:	781b      	ldrb	r3, [r3, #0]
 8022030:	fa43 f30b 	asr.w	r3, r3, fp
 8022034:	b2db      	uxtb	r3, r3
 8022036:	4313      	orrs	r3, r2
 8022038:	f10b 0201 	add.w	r2, fp, #1
 802203c:	fa5f fb82 	uxtb.w	fp, r2
 8022040:	9a03      	ldr	r2, [sp, #12]
 8022042:	f1bb 0f08 	cmp.w	fp, #8
 8022046:	bf15      	itete	ne
 8022048:	3201      	addne	r2, #1
 802204a:	3202      	addeq	r2, #2
 802204c:	9203      	strne	r2, [sp, #12]
 802204e:	9203      	streq	r2, [sp, #12]
 8022050:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8022052:	b29f      	uxth	r7, r3
 8022054:	bf08      	it	eq
 8022056:	f04f 0b00 	moveq.w	fp, #0
 802205a:	42ba      	cmp	r2, r7
 802205c:	d309      	bcc.n	8022072 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 802205e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8022062:	2301      	movs	r3, #1
 8022064:	9a05      	ldr	r2, [sp, #20]
 8022066:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 802206a:	d30e      	bcc.n	802208a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 802206c:	469a      	mov	sl, r3
 802206e:	2600      	movs	r6, #0
 8022070:	e035      	b.n	80220de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8022072:	9b05      	ldr	r3, [sp, #20]
 8022074:	429f      	cmp	r7, r3
 8022076:	d318      	bcc.n	80220aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8022078:	eb04 030a 	add.w	r3, r4, sl
 802207c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8022080:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8022084:	f10a 0301 	add.w	r3, sl, #1
 8022088:	b29b      	uxth	r3, r3
 802208a:	9a05      	ldr	r2, [sp, #20]
 802208c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8022090:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8022092:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8022096:	7116      	strb	r6, [r2, #4]
 8022098:	f10a 0601 	add.w	r6, sl, #1
 802209c:	80d1      	strh	r1, [r2, #6]
 802209e:	7156      	strb	r6, [r2, #5]
 80220a0:	9a05      	ldr	r2, [sp, #20]
 80220a2:	3201      	adds	r2, #1
 80220a4:	b292      	uxth	r2, r2
 80220a6:	9205      	str	r2, [sp, #20]
 80220a8:	e7e0      	b.n	802206c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80220aa:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80220ae:	463a      	mov	r2, r7
 80220b0:	795b      	ldrb	r3, [r3, #5]
 80220b2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80220b6:	4426      	add	r6, r4
 80220b8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80220ba:	eb01 0c06 	add.w	ip, r1, r6
 80220be:	f1bc 0f00 	cmp.w	ip, #0
 80220c2:	dd07      	ble.n	80220d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80220c4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80220c8:	f892 c004 	ldrb.w	ip, [r2, #4]
 80220cc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80220d0:	88d2      	ldrh	r2, [r2, #6]
 80220d2:	e7f1      	b.n	80220b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80220d4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80220d8:	b29b      	uxth	r3, r3
 80220da:	e7c3      	b.n	8022064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80220dc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80220de:	970c      	str	r7, [sp, #48]	@ 0x30
 80220e0:	9a01      	ldr	r2, [sp, #4]
 80220e2:	46b4      	mov	ip, r6
 80220e4:	461f      	mov	r7, r3
 80220e6:	e78c      	b.n	8022002 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80220e8:	1b7b      	subs	r3, r7, r5
 80220ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80220ee:	9201      	str	r2, [sp, #4]
 80220f0:	eb0c 0605 	add.w	r6, ip, r5
 80220f4:	b29b      	uxth	r3, r3
 80220f6:	b2b6      	uxth	r6, r6
 80220f8:	2500      	movs	r5, #0
 80220fa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80220fc:	4282      	cmp	r2, r0
 80220fe:	d88b      	bhi.n	8022018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8022100:	9a01      	ldr	r2, [sp, #4]
 8022102:	e74b      	b.n	8021f9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8022104:	4297      	cmp	r7, r2
 8022106:	d332      	bcc.n	802216e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8022108:	1abb      	subs	r3, r7, r2
 802210a:	b29b      	uxth	r3, r3
 802210c:	9208      	str	r2, [sp, #32]
 802210e:	9501      	str	r5, [sp, #4]
 8022110:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8022112:	29ff      	cmp	r1, #255	@ 0xff
 8022114:	9908      	ldr	r1, [sp, #32]
 8022116:	eb0c 0601 	add.w	r6, ip, r1
 802211a:	d135      	bne.n	8022188 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 802211c:	f1a0 0e02 	sub.w	lr, r0, #2
 8022120:	b2b6      	uxth	r6, r6
 8022122:	45b4      	cmp	ip, r6
 8022124:	f040 808c 	bne.w	8022240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8022128:	9908      	ldr	r1, [sp, #32]
 802212a:	4297      	cmp	r7, r2
 802212c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8022130:	d3e2      	bcc.n	80220f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8022132:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8022134:	9904      	ldr	r1, [sp, #16]
 8022136:	8812      	ldrh	r2, [r2, #0]
 8022138:	1a52      	subs	r2, r2, r1
 802213a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802213e:	9a07      	ldr	r2, [sp, #28]
 8022140:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8022142:	3201      	adds	r2, #1
 8022144:	428a      	cmp	r2, r1
 8022146:	9207      	str	r2, [sp, #28]
 8022148:	f040 8087 	bne.w	802225a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 802214c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8022150:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8022154:	9b04      	ldr	r3, [sp, #16]
 8022156:	1bed      	subs	r5, r5, r7
 8022158:	b2ad      	uxth	r5, r5
 802215a:	2d00      	cmp	r5, #0
 802215c:	bf08      	it	eq
 802215e:	461a      	moveq	r2, r3
 8022160:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022162:	bf18      	it	ne
 8022164:	2200      	movne	r2, #0
 8022166:	3301      	adds	r3, #1
 8022168:	930d      	str	r3, [sp, #52]	@ 0x34
 802216a:	b292      	uxth	r2, r2
 802216c:	e70d      	b.n	8021f8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 802216e:	1bd1      	subs	r1, r2, r7
 8022170:	b28b      	uxth	r3, r1
 8022172:	9301      	str	r3, [sp, #4]
 8022174:	9708      	str	r7, [sp, #32]
 8022176:	462b      	mov	r3, r5
 8022178:	e7ca      	b.n	8022110 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 802217a:	bf00      	nop
 802217c:	200138e4 	.word	0x200138e4
 8022180:	200138de 	.word	0x200138de
 8022184:	fffff7fb 	.word	0xfffff7fb
 8022188:	b2b6      	uxth	r6, r6
 802218a:	900b      	str	r0, [sp, #44]	@ 0x2c
 802218c:	45b4      	cmp	ip, r6
 802218e:	d0cb      	beq.n	8022128 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8022190:	f10c 0101 	add.w	r1, ip, #1
 8022194:	44a4      	add	ip, r4
 8022196:	9117      	str	r1, [sp, #92]	@ 0x5c
 8022198:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 802219c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802219e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80221a2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80221a4:	f8b1 c000 	ldrh.w	ip, [r1]
 80221a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80221aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80221ae:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80221b2:	fb1e fe01 	smulbb	lr, lr, r1
 80221b6:	ea4f 2825 	mov.w	r8, r5, asr #8
 80221ba:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80221bc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80221c0:	fb08 e801 	mla	r8, r8, r1, lr
 80221c4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80221c8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80221ca:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80221ce:	fb19 f901 	smulbb	r9, r9, r1
 80221d2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80221d6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80221d8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80221dc:	fb0e 9e01 	mla	lr, lr, r1, r9
 80221e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80221e4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80221e6:	fa5f fc8c 	uxtb.w	ip, ip
 80221ea:	fb1c fc01 	smulbb	ip, ip, r1
 80221ee:	00ed      	lsls	r5, r5, #3
 80221f0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80221f2:	b2ed      	uxtb	r5, r5
 80221f4:	fb05 c501 	mla	r5, r5, r1, ip
 80221f8:	fa1f f888 	uxth.w	r8, r8
 80221fc:	fa1f fe8e 	uxth.w	lr, lr
 8022200:	b2ad      	uxth	r5, r5
 8022202:	f108 0c01 	add.w	ip, r8, #1
 8022206:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 802220a:	f10e 0901 	add.w	r9, lr, #1
 802220e:	f105 0c01 	add.w	ip, r5, #1
 8022212:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8022216:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 802221a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802221e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8022222:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022226:	ea4c 0808 	orr.w	r8, ip, r8
 802222a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802222c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8022230:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022234:	ea48 0809 	orr.w	r8, r8, r9
 8022238:	f821 8b02 	strh.w	r8, [r1], #2
 802223c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802223e:	e7a5      	b.n	802218c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8022240:	f10c 0801 	add.w	r8, ip, #1
 8022244:	44a4      	add	ip, r4
 8022246:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8022248:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 802224c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8022250:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8022254:	fa1f fc88 	uxth.w	ip, r8
 8022258:	e763      	b.n	8022122 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 802225a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 802225e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8022262:	1aad      	subs	r5, r5, r2
 8022264:	b2ad      	uxth	r5, r5
 8022266:	2d00      	cmp	r5, #0
 8022268:	bf18      	it	ne
 802226a:	2200      	movne	r2, #0
 802226c:	9201      	str	r2, [sp, #4]
 802226e:	e744      	b.n	80220fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8022270:	4b03      	ldr	r3, [pc, #12]	@ (8022280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8022272:	6818      	ldr	r0, [r3, #0]
 8022274:	6803      	ldr	r3, [r0, #0]
 8022276:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022278:	4798      	blx	r3
 802227a:	b01f      	add	sp, #124	@ 0x7c
 802227c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022280:	200138e4 	.word	0x200138e4

08022284 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8022284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022288:	b093      	sub	sp, #76	@ 0x4c
 802228a:	4616      	mov	r6, r2
 802228c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8022290:	9003      	str	r0, [sp, #12]
 8022292:	460d      	mov	r5, r1
 8022294:	9201      	str	r2, [sp, #4]
 8022296:	2a00      	cmp	r2, #0
 8022298:	f000 8304 	beq.w	80228a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 802229c:	6830      	ldr	r0, [r6, #0]
 802229e:	6871      	ldr	r1, [r6, #4]
 80222a0:	ac0e      	add	r4, sp, #56	@ 0x38
 80222a2:	c403      	stmia	r4!, {r0, r1}
 80222a4:	6818      	ldr	r0, [r3, #0]
 80222a6:	6859      	ldr	r1, [r3, #4]
 80222a8:	ac10      	add	r4, sp, #64	@ 0x40
 80222aa:	c403      	stmia	r4!, {r0, r1}
 80222ac:	a80e      	add	r0, sp, #56	@ 0x38
 80222ae:	f7f8 fef5 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80222b2:	4631      	mov	r1, r6
 80222b4:	a810      	add	r0, sp, #64	@ 0x40
 80222b6:	f7f8 ff35 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80222ba:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80222be:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80222c2:	bfd7      	itett	le
 80222c4:	b293      	uxthle	r3, r2
 80222c6:	2301      	movgt	r3, #1
 80222c8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80222cc:	fb91 f3f3 	sdivle	r3, r1, r3
 80222d0:	9304      	str	r3, [sp, #16]
 80222d2:	f105 0308 	add.w	r3, r5, #8
 80222d6:	9904      	ldr	r1, [sp, #16]
 80222d8:	9308      	str	r3, [sp, #32]
 80222da:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80222de:	440b      	add	r3, r1
 80222e0:	3b01      	subs	r3, #1
 80222e2:	fb93 f3f1 	sdiv	r3, r3, r1
 80222e6:	9908      	ldr	r1, [sp, #32]
 80222e8:	3b01      	subs	r3, #1
 80222ea:	b29b      	uxth	r3, r3
 80222ec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80222f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80222f2:	9904      	ldr	r1, [sp, #16]
 80222f4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80222f8:	fb93 f0f1 	sdiv	r0, r3, r1
 80222fc:	b284      	uxth	r4, r0
 80222fe:	9405      	str	r4, [sp, #20]
 8022300:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8022304:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8022308:	fb05 3914 	mls	r9, r5, r4, r3
 802230c:	fb19 f902 	smulbb	r9, r9, r2
 8022310:	4489      	add	r9, r1
 8022312:	fa1f f989 	uxth.w	r9, r9
 8022316:	2d00      	cmp	r5, #0
 8022318:	d05d      	beq.n	80223d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 802231a:	1e6a      	subs	r2, r5, #1
 802231c:	9808      	ldr	r0, [sp, #32]
 802231e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8022322:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022324:	fa9a fa8a 	rev.w	sl, sl
 8022328:	4492      	add	sl, r2
 802232a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 802232e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8022332:	4411      	add	r1, r2
 8022334:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8022338:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 802233c:	4413      	add	r3, r2
 802233e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8022342:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8022346:	9302      	str	r3, [sp, #8]
 8022348:	4bcb      	ldr	r3, [pc, #812]	@ (8022678 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 802234a:	6818      	ldr	r0, [r3, #0]
 802234c:	6803      	ldr	r3, [r0, #0]
 802234e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022350:	4798      	blx	r3
 8022352:	4bca      	ldr	r3, [pc, #808]	@ (802267c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8022354:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8022358:	881b      	ldrh	r3, [r3, #0]
 802235a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 802235e:	fb03 2404 	mla	r4, r3, r4, r2
 8022362:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022366:	436b      	muls	r3, r5
 8022368:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802236c:	930d      	str	r3, [sp, #52]	@ 0x34
 802236e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8022372:	fb99 f3f3 	sdiv	r3, r9, r3
 8022376:	9306      	str	r3, [sp, #24]
 8022378:	9b01      	ldr	r3, [sp, #4]
 802237a:	43db      	mvns	r3, r3
 802237c:	b2db      	uxtb	r3, r3
 802237e:	930a      	str	r3, [sp, #40]	@ 0x28
 8022380:	9b03      	ldr	r3, [sp, #12]
 8022382:	3304      	adds	r3, #4
 8022384:	4618      	mov	r0, r3
 8022386:	2280      	movs	r2, #128	@ 0x80
 8022388:	2100      	movs	r1, #0
 802238a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802238c:	f00c fc0f 	bl	802ebae <memset>
 8022390:	4bbb      	ldr	r3, [pc, #748]	@ (8022680 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8022392:	9300      	str	r3, [sp, #0]
 8022394:	2300      	movs	r3, #0
 8022396:	f04f 0600 	mov.w	r6, #0
 802239a:	9307      	str	r3, [sp, #28]
 802239c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802239e:	42a3      	cmp	r3, r4
 80223a0:	f240 827b 	bls.w	802289a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80223a4:	f04f 0e07 	mov.w	lr, #7
 80223a8:	f1b9 0f00 	cmp.w	r9, #0
 80223ac:	f000 8159 	beq.w	8022662 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80223b0:	f89a 5000 	ldrb.w	r5, [sl]
 80223b4:	b2ed      	uxtb	r5, r5
 80223b6:	11aa      	asrs	r2, r5, #6
 80223b8:	f10a 0701 	add.w	r7, sl, #1
 80223bc:	d10e      	bne.n	80223dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80223be:	9b03      	ldr	r3, [sp, #12]
 80223c0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80223c4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80223c8:	88ae      	ldrh	r6, [r5, #4]
 80223ca:	f109 39ff 	add.w	r9, r9, #4294967295
 80223ce:	fa1f f989 	uxth.w	r9, r9
 80223d2:	46ba      	mov	sl, r7
 80223d4:	e7e8      	b.n	80223a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80223d6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80223da:	e7a6      	b.n	802232a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80223dc:	2a01      	cmp	r2, #1
 80223de:	d129      	bne.n	8022434 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80223e0:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80223e4:	f005 0203 	and.w	r2, r5, #3
 80223e8:	3b02      	subs	r3, #2
 80223ea:	4413      	add	r3, r2
 80223ec:	f003 031f 	and.w	r3, r3, #31
 80223f0:	f3c5 0281 	ubfx	r2, r5, #2, #2
 80223f4:	f363 0604 	bfi	r6, r3, #0, #5
 80223f8:	3a02      	subs	r2, #2
 80223fa:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 80223fe:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8022402:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8022406:	f362 164a 	bfi	r6, r2, #5, #6
 802240a:	3d02      	subs	r5, #2
 802240c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8022410:	f005 051f 	and.w	r5, r5, #31
 8022414:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8022418:	2103      	movs	r1, #3
 802241a:	fb11 2205 	smlabb	r2, r1, r5, r2
 802241e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8022422:	9a03      	ldr	r2, [sp, #12]
 8022424:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8022428:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802242c:	f365 26cf 	bfi	r6, r5, #11, #5
 8022430:	809e      	strh	r6, [r3, #4]
 8022432:	e7ca      	b.n	80223ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8022434:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8022438:	2a02      	cmp	r2, #2
 802243a:	b2ab      	uxth	r3, r5
 802243c:	d136      	bne.n	80224ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 802243e:	2101      	movs	r1, #1
 8022440:	fb12 1205 	smlabb	r2, r2, r5, r1
 8022444:	4492      	add	sl, r2
 8022446:	463a      	mov	r2, r7
 8022448:	4552      	cmp	r2, sl
 802244a:	d01c      	beq.n	8022486 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 802244c:	4694      	mov	ip, r2
 802244e:	f04f 0b03 	mov.w	fp, #3
 8022452:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8022456:	7852      	ldrb	r2, [r2, #1]
 8022458:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 802245c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8022460:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8022464:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8022468:	f001 021f 	and.w	r2, r1, #31
 802246c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8022470:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8022474:	9a03      	ldr	r2, [sp, #12]
 8022476:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 802247a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 802247e:	460e      	mov	r6, r1
 8022480:	8081      	strh	r1, [r0, #4]
 8022482:	4662      	mov	r2, ip
 8022484:	e7e0      	b.n	8022448 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8022486:	4599      	cmp	r9, r3
 8022488:	d20b      	bcs.n	80224a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 802248a:	eba5 0509 	sub.w	r5, r5, r9
 802248e:	2d00      	cmp	r5, #0
 8022490:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8022494:	f300 8209 	bgt.w	80228aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8022498:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802249c:	2301      	movs	r3, #1
 802249e:	9307      	str	r3, [sp, #28]
 80224a0:	e00c      	b.n	80224bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80224a2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80224a6:	eba9 0903 	sub.w	r9, r9, r3
 80224aa:	e790      	b.n	80223ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80224ac:	4599      	cmp	r9, r3
 80224ae:	d2fa      	bcs.n	80224a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80224b0:	eba5 0509 	sub.w	r5, r5, r9
 80224b4:	2d00      	cmp	r5, #0
 80224b6:	dc1d      	bgt.n	80224f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80224b8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80224bc:	f04f 0b00 	mov.w	fp, #0
 80224c0:	f1b8 0f00 	cmp.w	r8, #0
 80224c4:	f340 81a1 	ble.w	802280a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80224c8:	783b      	ldrb	r3, [r7, #0]
 80224ca:	b2db      	uxtb	r3, r3
 80224cc:	119a      	asrs	r2, r3, #6
 80224ce:	f107 0a01 	add.w	sl, r7, #1
 80224d2:	f040 80d7 	bne.w	8022684 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80224d6:	9a03      	ldr	r2, [sp, #12]
 80224d8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80224dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80224e0:	889e      	ldrh	r6, [r3, #4]
 80224e2:	9b01      	ldr	r3, [sp, #4]
 80224e4:	2bff      	cmp	r3, #255	@ 0xff
 80224e6:	f040 81e9 	bne.w	80228bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80224ea:	8026      	strh	r6, [r4, #0]
 80224ec:	f108 38ff 	add.w	r8, r8, #4294967295
 80224f0:	3402      	adds	r4, #2
 80224f2:	e0be      	b.n	8022672 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80224f4:	9b02      	ldr	r3, [sp, #8]
 80224f6:	9a02      	ldr	r2, [sp, #8]
 80224f8:	42ab      	cmp	r3, r5
 80224fa:	bfa8      	it	ge
 80224fc:	462b      	movge	r3, r5
 80224fe:	eba2 0803 	sub.w	r8, r2, r3
 8022502:	9a07      	ldr	r2, [sp, #28]
 8022504:	1aed      	subs	r5, r5, r3
 8022506:	2a00      	cmp	r2, #0
 8022508:	d05a      	beq.n	80225c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 802250a:	9a01      	ldr	r2, [sp, #4]
 802250c:	2aff      	cmp	r2, #255	@ 0xff
 802250e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022512:	d049      	beq.n	80225a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8022514:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8022518:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 802251c:	42a3      	cmp	r3, r4
 802251e:	f240 80a5 	bls.w	802266c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8022522:	46bc      	mov	ip, r7
 8022524:	8820      	ldrh	r0, [r4, #0]
 8022526:	f81c 2b02 	ldrb.w	r2, [ip], #2
 802252a:	7879      	ldrb	r1, [r7, #1]
 802252c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8022530:	b212      	sxth	r2, r2
 8022532:	b291      	uxth	r1, r2
 8022534:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8022538:	120f      	asrs	r7, r1, #8
 802253a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 802253e:	fb1a fa09 	smulbb	sl, sl, r9
 8022542:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8022546:	fb07 a70e 	mla	r7, r7, lr, sl
 802254a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 802254e:	00c0      	lsls	r0, r0, #3
 8022550:	10c9      	asrs	r1, r1, #3
 8022552:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8022556:	00d2      	lsls	r2, r2, #3
 8022558:	b2c0      	uxtb	r0, r0
 802255a:	fb1a fa09 	smulbb	sl, sl, r9
 802255e:	fb10 f009 	smulbb	r0, r0, r9
 8022562:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022566:	b2d2      	uxtb	r2, r2
 8022568:	b2bf      	uxth	r7, r7
 802256a:	fb01 a10e 	mla	r1, r1, lr, sl
 802256e:	fb02 020e 	mla	r2, r2, lr, r0
 8022572:	b289      	uxth	r1, r1
 8022574:	b292      	uxth	r2, r2
 8022576:	1c78      	adds	r0, r7, #1
 8022578:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 802257c:	f101 0a01 	add.w	sl, r1, #1
 8022580:	1c50      	adds	r0, r2, #1
 8022582:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8022586:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 802258a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 802258e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022592:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022596:	4307      	orrs	r7, r0
 8022598:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802259c:	ea47 070a 	orr.w	r7, r7, sl
 80225a0:	f824 7b02 	strh.w	r7, [r4], #2
 80225a4:	4667      	mov	r7, ip
 80225a6:	e7b9      	b.n	802251c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80225a8:	42a3      	cmp	r3, r4
 80225aa:	d95f      	bls.n	802266c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80225ac:	463a      	mov	r2, r7
 80225ae:	f812 1b02 	ldrb.w	r1, [r2], #2
 80225b2:	7878      	ldrb	r0, [r7, #1]
 80225b4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80225b8:	f824 1b02 	strh.w	r1, [r4], #2
 80225bc:	4617      	mov	r7, r2
 80225be:	e7f3      	b.n	80225a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80225c0:	9901      	ldr	r1, [sp, #4]
 80225c2:	29ff      	cmp	r1, #255	@ 0xff
 80225c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80225c8:	b2b2      	uxth	r2, r6
 80225ca:	d044      	beq.n	8022656 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80225cc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80225d0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80225d4:	ea4f 2922 	mov.w	r9, r2, asr #8
 80225d8:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80225dc:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80225e0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80225e4:	4608      	mov	r0, r1
 80225e6:	fb09 f901 	mul.w	r9, r9, r1
 80225ea:	fb0e fe01 	mul.w	lr, lr, r1
 80225ee:	00d1      	lsls	r1, r2, #3
 80225f0:	b2c9      	uxtb	r1, r1
 80225f2:	4341      	muls	r1, r0
 80225f4:	429c      	cmp	r4, r3
 80225f6:	f4bf af61 	bcs.w	80224bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80225fa:	8822      	ldrh	r2, [r4, #0]
 80225fc:	1210      	asrs	r0, r2, #8
 80225fe:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022602:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022606:	00d2      	lsls	r2, r2, #3
 8022608:	fb00 900a 	mla	r0, r0, sl, r9
 802260c:	b2d2      	uxtb	r2, r2
 802260e:	b280      	uxth	r0, r0
 8022610:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8022614:	fb02 120a 	mla	r2, r2, sl, r1
 8022618:	b292      	uxth	r2, r2
 802261a:	f100 0b01 	add.w	fp, r0, #1
 802261e:	fb0c ec0a 	mla	ip, ip, sl, lr
 8022622:	fa1f fc8c 	uxth.w	ip, ip
 8022626:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802262a:	1c50      	adds	r0, r2, #1
 802262c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8022630:	f10c 0201 	add.w	r2, ip, #1
 8022634:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8022638:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 802263c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022640:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022644:	ea40 0b0b 	orr.w	fp, r0, fp
 8022648:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802264c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8022650:	f824 bb02 	strh.w	fp, [r4], #2
 8022654:	e7ce      	b.n	80225f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8022656:	429c      	cmp	r4, r3
 8022658:	f4bf af30 	bcs.w	80224bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 802265c:	f824 2b02 	strh.w	r2, [r4], #2
 8022660:	e7f9      	b.n	8022656 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8022662:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8022666:	4657      	mov	r7, sl
 8022668:	464d      	mov	r5, r9
 802266a:	e727      	b.n	80224bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 802266c:	2300      	movs	r3, #0
 802266e:	e716      	b.n	802249e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8022670:	44bb      	add	fp, r7
 8022672:	4657      	mov	r7, sl
 8022674:	e724      	b.n	80224c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8022676:	bf00      	nop
 8022678:	200138e4 	.word	0x200138e4
 802267c:	200138de 	.word	0x200138de
 8022680:	20000180 	.word	0x20000180
 8022684:	2a01      	cmp	r2, #1
 8022686:	d12a      	bne.n	80226de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8022688:	f3c6 0104 	ubfx	r1, r6, #0, #5
 802268c:	f003 0203 	and.w	r2, r3, #3
 8022690:	3902      	subs	r1, #2
 8022692:	4411      	add	r1, r2
 8022694:	f001 011f 	and.w	r1, r1, #31
 8022698:	f3c3 0081 	ubfx	r0, r3, #2, #2
 802269c:	f361 0604 	bfi	r6, r1, #0, #5
 80226a0:	3802      	subs	r0, #2
 80226a2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80226a6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80226aa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80226ae:	f360 164a 	bfi	r6, r0, #5, #6
 80226b2:	3b02      	subs	r3, #2
 80226b4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80226b8:	f002 031f 	and.w	r3, r2, #31
 80226bc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80226c0:	2203      	movs	r2, #3
 80226c2:	f363 26cf 	bfi	r6, r3, #11, #5
 80226c6:	fb12 0303 	smlabb	r3, r2, r3, r0
 80226ca:	2207      	movs	r2, #7
 80226cc:	fb12 3301 	smlabb	r3, r2, r1, r3
 80226d0:	9a03      	ldr	r2, [sp, #12]
 80226d2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80226d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80226da:	809e      	strh	r6, [r3, #4]
 80226dc:	e701      	b.n	80224e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 80226de:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 80226e2:	45a8      	cmp	r8, r5
 80226e4:	4647      	mov	r7, r8
 80226e6:	bfa8      	it	ge
 80226e8:	462f      	movge	r7, r5
 80226ea:	2a02      	cmp	r2, #2
 80226ec:	d154      	bne.n	8022798 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 80226ee:	9b01      	ldr	r3, [sp, #4]
 80226f0:	2bff      	cmp	r3, #255	@ 0xff
 80226f2:	d01a      	beq.n	802272a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80226f4:	eb0b 0307 	add.w	r3, fp, r7
 80226f8:	2b40      	cmp	r3, #64	@ 0x40
 80226fa:	dd16      	ble.n	802272a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80226fc:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8022700:	4649      	mov	r1, r9
 8022702:	9800      	ldr	r0, [sp, #0]
 8022704:	f7de ff2a 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 8022708:	465a      	mov	r2, fp
 802270a:	9b01      	ldr	r3, [sp, #4]
 802270c:	9900      	ldr	r1, [sp, #0]
 802270e:	4620      	mov	r0, r4
 8022710:	f7de ff4e 	bl	80015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8022714:	9b00      	ldr	r3, [sp, #0]
 8022716:	461a      	mov	r2, r3
 8022718:	4b6c      	ldr	r3, [pc, #432]	@ (80228cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 802271a:	429a      	cmp	r2, r3
 802271c:	bf0c      	ite	eq
 802271e:	4b6c      	ldreq	r3, [pc, #432]	@ (80228d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8022720:	4b6a      	ldrne	r3, [pc, #424]	@ (80228cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8022722:	9300      	str	r3, [sp, #0]
 8022724:	444c      	add	r4, r9
 8022726:	f04f 0b00 	mov.w	fp, #0
 802272a:	4652      	mov	r2, sl
 802272c:	2100      	movs	r1, #0
 802272e:	42a9      	cmp	r1, r5
 8022730:	da2c      	bge.n	802278c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8022732:	4694      	mov	ip, r2
 8022734:	f04f 0903 	mov.w	r9, #3
 8022738:	f81c 3b02 	ldrb.w	r3, [ip], #2
 802273c:	7852      	ldrb	r2, [r2, #1]
 802273e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8022742:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8022746:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 802274a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802274e:	f003 021f 	and.w	r2, r3, #31
 8022752:	fb19 000e 	smlabb	r0, r9, lr, r0
 8022756:	f04f 0e07 	mov.w	lr, #7
 802275a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 802275e:	9a03      	ldr	r2, [sp, #12]
 8022760:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8022764:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8022768:	42b9      	cmp	r1, r7
 802276a:	461e      	mov	r6, r3
 802276c:	8083      	strh	r3, [r0, #4]
 802276e:	da0a      	bge.n	8022786 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8022770:	9a01      	ldr	r2, [sp, #4]
 8022772:	2aff      	cmp	r2, #255	@ 0xff
 8022774:	bf15      	itete	ne
 8022776:	9a00      	ldrne	r2, [sp, #0]
 8022778:	8023      	strheq	r3, [r4, #0]
 802277a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 802277e:	3402      	addeq	r4, #2
 8022780:	bf18      	it	ne
 8022782:	f10b 0b01 	addne.w	fp, fp, #1
 8022786:	3101      	adds	r1, #1
 8022788:	4662      	mov	r2, ip
 802278a:	e7d0      	b.n	802272e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 802278c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8022790:	eba8 0807 	sub.w	r8, r8, r7
 8022794:	1bed      	subs	r5, r5, r7
 8022796:	e76c      	b.n	8022672 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8022798:	9b01      	ldr	r3, [sp, #4]
 802279a:	2bff      	cmp	r3, #255	@ 0xff
 802279c:	eba8 0807 	sub.w	r8, r8, r7
 80227a0:	eba5 0507 	sub.w	r5, r5, r7
 80227a4:	fa1f f986 	uxth.w	r9, r6
 80227a8:	d027      	beq.n	80227fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80227aa:	eb0b 0307 	add.w	r3, fp, r7
 80227ae:	2b40      	cmp	r3, #64	@ 0x40
 80227b0:	dd18      	ble.n	80227e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80227b2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80227b6:	4619      	mov	r1, r3
 80227b8:	9800      	ldr	r0, [sp, #0]
 80227ba:	930c      	str	r3, [sp, #48]	@ 0x30
 80227bc:	f7de fece 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 80227c0:	465a      	mov	r2, fp
 80227c2:	9b01      	ldr	r3, [sp, #4]
 80227c4:	9900      	ldr	r1, [sp, #0]
 80227c6:	4620      	mov	r0, r4
 80227c8:	f7de fef2 	bl	80015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80227cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80227ce:	441c      	add	r4, r3
 80227d0:	9b00      	ldr	r3, [sp, #0]
 80227d2:	461a      	mov	r2, r3
 80227d4:	4b3d      	ldr	r3, [pc, #244]	@ (80228cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80227d6:	429a      	cmp	r2, r3
 80227d8:	bf0c      	ite	eq
 80227da:	4b3d      	ldreq	r3, [pc, #244]	@ (80228d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80227dc:	4b3b      	ldrne	r3, [pc, #236]	@ (80228cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80227de:	9300      	str	r3, [sp, #0]
 80227e0:	f04f 0b00 	mov.w	fp, #0
 80227e4:	9b00      	ldr	r3, [sp, #0]
 80227e6:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80227ea:	463b      	mov	r3, r7
 80227ec:	2b00      	cmp	r3, #0
 80227ee:	f43f af3f 	beq.w	8022670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 80227f2:	f822 9b02 	strh.w	r9, [r2], #2
 80227f6:	3b01      	subs	r3, #1
 80227f8:	e7f8      	b.n	80227ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 80227fa:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80227fe:	42a7      	cmp	r7, r4
 8022800:	f67f af37 	bls.w	8022672 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8022804:	f824 9b02 	strh.w	r9, [r4], #2
 8022808:	e7f9      	b.n	80227fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 802280a:	f1bb 0f00 	cmp.w	fp, #0
 802280e:	d00c      	beq.n	802282a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8022810:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8022814:	4641      	mov	r1, r8
 8022816:	9800      	ldr	r0, [sp, #0]
 8022818:	f7de fea0 	bl	800155c <_ZN8touchgfx5paint9flushLineEPmi>
 802281c:	4620      	mov	r0, r4
 802281e:	9b01      	ldr	r3, [sp, #4]
 8022820:	9900      	ldr	r1, [sp, #0]
 8022822:	465a      	mov	r2, fp
 8022824:	f7de fec4 	bl	80015b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8022828:	4444      	add	r4, r8
 802282a:	4b2a      	ldr	r3, [pc, #168]	@ (80228d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 802282c:	9a02      	ldr	r2, [sp, #8]
 802282e:	881b      	ldrh	r3, [r3, #0]
 8022830:	1a9b      	subs	r3, r3, r2
 8022832:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022836:	9b06      	ldr	r3, [sp, #24]
 8022838:	3301      	adds	r3, #1
 802283a:	9306      	str	r3, [sp, #24]
 802283c:	9a06      	ldr	r2, [sp, #24]
 802283e:	9b04      	ldr	r3, [sp, #16]
 8022840:	4293      	cmp	r3, r2
 8022842:	d120      	bne.n	8022886 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8022844:	9b05      	ldr	r3, [sp, #20]
 8022846:	9a05      	ldr	r2, [sp, #20]
 8022848:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 802284c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8022850:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8022852:	f103 0801 	add.w	r8, r3, #1
 8022856:	9b08      	ldr	r3, [sp, #32]
 8022858:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 802285c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802285e:	ba3f      	rev	r7, r7
 8022860:	2280      	movs	r2, #128	@ 0x80
 8022862:	2100      	movs	r1, #0
 8022864:	441f      	add	r7, r3
 8022866:	eba9 0905 	sub.w	r9, r9, r5
 802286a:	f00c f9a0 	bl	802ebae <memset>
 802286e:	2300      	movs	r3, #0
 8022870:	fa1f f989 	uxth.w	r9, r9
 8022874:	f04f 0600 	mov.w	r6, #0
 8022878:	f8cd 8014 	str.w	r8, [sp, #20]
 802287c:	9306      	str	r3, [sp, #24]
 802287e:	f7de fe63 	bl	8001548 <_ZN8touchgfx5paint8tearDownEv>
 8022882:	46ba      	mov	sl, r7
 8022884:	e58a      	b.n	802239c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8022886:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 802288a:	9b02      	ldr	r3, [sp, #8]
 802288c:	eba9 0903 	sub.w	r9, r9, r3
 8022890:	eba9 0505 	sub.w	r5, r9, r5
 8022894:	fa1f f985 	uxth.w	r9, r5
 8022898:	e7f1      	b.n	802287e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 802289a:	4b0f      	ldr	r3, [pc, #60]	@ (80228d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 802289c:	6818      	ldr	r0, [r3, #0]
 802289e:	6803      	ldr	r3, [r0, #0]
 80228a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80228a2:	4798      	blx	r3
 80228a4:	b013      	add	sp, #76	@ 0x4c
 80228a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80228aa:	9b02      	ldr	r3, [sp, #8]
 80228ac:	9a02      	ldr	r2, [sp, #8]
 80228ae:	42ab      	cmp	r3, r5
 80228b0:	bfa8      	it	ge
 80228b2:	462b      	movge	r3, r5
 80228b4:	eba2 0803 	sub.w	r8, r2, r3
 80228b8:	1aed      	subs	r5, r5, r3
 80228ba:	e626      	b.n	802250a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80228bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80228c0:	fa1f f986 	uxth.w	r9, r6
 80228c4:	2500      	movs	r5, #0
 80228c6:	2701      	movs	r7, #1
 80228c8:	e76f      	b.n	80227aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 80228ca:	bf00      	nop
 80228cc:	20000180 	.word	0x20000180
 80228d0:	20000280 	.word	0x20000280
 80228d4:	200138de 	.word	0x200138de
 80228d8:	200138e4 	.word	0x200138e4

080228dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80228dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228e0:	b08f      	sub	sp, #60	@ 0x3c
 80228e2:	461c      	mov	r4, r3
 80228e4:	9203      	str	r2, [sp, #12]
 80228e6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80228ea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80228ec:	9202      	str	r2, [sp, #8]
 80228ee:	460f      	mov	r7, r1
 80228f0:	2a00      	cmp	r2, #0
 80228f2:	f000 8128 	beq.w	8022b46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80228f6:	6820      	ldr	r0, [r4, #0]
 80228f8:	6861      	ldr	r1, [r4, #4]
 80228fa:	aa0a      	add	r2, sp, #40	@ 0x28
 80228fc:	c203      	stmia	r2!, {r0, r1}
 80228fe:	6818      	ldr	r0, [r3, #0]
 8022900:	6859      	ldr	r1, [r3, #4]
 8022902:	aa0c      	add	r2, sp, #48	@ 0x30
 8022904:	c203      	stmia	r2!, {r0, r1}
 8022906:	a80a      	add	r0, sp, #40	@ 0x28
 8022908:	f7f8 fbc8 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802290c:	4621      	mov	r1, r4
 802290e:	a80c      	add	r0, sp, #48	@ 0x30
 8022910:	f7f8 fc08 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022914:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8022918:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 802291c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8022920:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8022924:	bfde      	ittt	le
 8022926:	b2b3      	uxthle	r3, r6
 8022928:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 802292c:	fb92 f3f3 	sdivle	r3, r2, r3
 8022930:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8022934:	bfc8      	it	gt
 8022936:	2301      	movgt	r3, #1
 8022938:	fb92 f1f3 	sdiv	r1, r2, r3
 802293c:	fa1f fc81 	uxth.w	ip, r1
 8022940:	fb0c 2413 	mls	r4, ip, r3, r2
 8022944:	fb14 f406 	smulbb	r4, r4, r6
 8022948:	441d      	add	r5, r3
 802294a:	4404      	add	r4, r0
 802294c:	4661      	mov	r1, ip
 802294e:	3d01      	subs	r5, #1
 8022950:	b2a4      	uxth	r4, r4
 8022952:	fb95 f5f3 	sdiv	r5, r5, r3
 8022956:	b121      	cbz	r1, 8022962 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8022958:	9b03      	ldr	r3, [sp, #12]
 802295a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802295e:	ba1b      	rev	r3, r3
 8022960:	441f      	add	r7, r3
 8022962:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022966:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802296a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 802296e:	4418      	add	r0, r3
 8022970:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8022974:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8022978:	441a      	add	r2, r3
 802297a:	4b74      	ldr	r3, [pc, #464]	@ (8022b4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 802297c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8022980:	6818      	ldr	r0, [r3, #0]
 8022982:	6803      	ldr	r3, [r0, #0]
 8022984:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022986:	4798      	blx	r3
 8022988:	4a71      	ldr	r2, [pc, #452]	@ (8022b50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 802298a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802298e:	8813      	ldrh	r3, [r2, #0]
 8022990:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8022994:	9209      	str	r2, [sp, #36]	@ 0x24
 8022996:	fb03 c101 	mla	r1, r3, r1, ip
 802299a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 802299e:	4373      	muls	r3, r6
 80229a0:	b2ad      	uxth	r5, r5
 80229a2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80229a6:	00ad      	lsls	r5, r5, #2
 80229a8:	2c00      	cmp	r4, #0
 80229aa:	9304      	str	r3, [sp, #16]
 80229ac:	f105 0304 	add.w	r3, r5, #4
 80229b0:	9305      	str	r3, [sp, #20]
 80229b2:	bf0c      	ite	eq
 80229b4:	46c8      	moveq	r8, r9
 80229b6:	f04f 0800 	movne.w	r8, #0
 80229ba:	2300      	movs	r3, #0
 80229bc:	fa1f f888 	uxth.w	r8, r8
 80229c0:	9301      	str	r3, [sp, #4]
 80229c2:	9a04      	ldr	r2, [sp, #16]
 80229c4:	4282      	cmp	r2, r0
 80229c6:	f240 80b9 	bls.w	8022b3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80229ca:	b95b      	cbnz	r3, 80229e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 80229cc:	783a      	ldrb	r2, [r7, #0]
 80229ce:	0993      	lsrs	r3, r2, #6
 80229d0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80229d4:	9201      	str	r2, [sp, #4]
 80229d6:	1e5a      	subs	r2, r3, #1
 80229d8:	2a02      	cmp	r2, #2
 80229da:	bf8d      	iteet	hi
 80229dc:	787b      	ldrbhi	r3, [r7, #1]
 80229de:	3701      	addls	r7, #1
 80229e0:	b29b      	uxthls	r3, r3
 80229e2:	3702      	addhi	r7, #2
 80229e4:	b184      	cbz	r4, 8022a08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 80229e6:	429c      	cmp	r4, r3
 80229e8:	bf95      	itete	ls
 80229ea:	1b1c      	subls	r4, r3, r4
 80229ec:	1ae4      	subhi	r4, r4, r3
 80229ee:	fa1f fa84 	uxthls.w	sl, r4
 80229f2:	b2a4      	uxthhi	r4, r4
 80229f4:	bf87      	ittee	hi
 80229f6:	46c4      	movhi	ip, r8
 80229f8:	f04f 0a00 	movhi.w	sl, #0
 80229fc:	fa1f fc89 	uxthls.w	ip, r9
 8022a00:	2400      	movls	r4, #0
 8022a02:	4653      	mov	r3, sl
 8022a04:	46e0      	mov	r8, ip
 8022a06:	e7dc      	b.n	80229c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8022a08:	2204      	movs	r2, #4
 8022a0a:	4615      	mov	r5, r2
 8022a0c:	9905      	ldr	r1, [sp, #20]
 8022a0e:	9a01      	ldr	r2, [sp, #4]
 8022a10:	fb15 1202 	smlabb	r2, r5, r2, r1
 8022a14:	9903      	ldr	r1, [sp, #12]
 8022a16:	588a      	ldr	r2, [r1, r2]
 8022a18:	4543      	cmp	r3, r8
 8022a1a:	bf27      	ittee	cs
 8022a1c:	eba3 0a08 	subcs.w	sl, r3, r8
 8022a20:	46c6      	movcs	lr, r8
 8022a22:	eba8 0c03 	subcc.w	ip, r8, r3
 8022a26:	469e      	movcc	lr, r3
 8022a28:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8022a2c:	bf27      	ittee	cs
 8022a2e:	fa1f fa8a 	uxthcs.w	sl, sl
 8022a32:	46a4      	movcs	ip, r4
 8022a34:	fa1f fc8c 	uxthcc.w	ip, ip
 8022a38:	46a2      	movcc	sl, r4
 8022a3a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8022a3e:	2900      	cmp	r1, #0
 8022a40:	d066      	beq.n	8022b10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8022a42:	29ff      	cmp	r1, #255	@ 0xff
 8022a44:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8022a48:	d114      	bne.n	8022a74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8022a4a:	9d02      	ldr	r5, [sp, #8]
 8022a4c:	2dff      	cmp	r5, #255	@ 0xff
 8022a4e:	d111      	bne.n	8022a74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8022a50:	0951      	lsrs	r1, r2, #5
 8022a52:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8022a56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022a5a:	f026 0607 	bic.w	r6, r6, #7
 8022a5e:	430e      	orrs	r6, r1
 8022a60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022a64:	4316      	orrs	r6, r2
 8022a66:	b2b6      	uxth	r6, r6
 8022a68:	4486      	add	lr, r0
 8022a6a:	4586      	cmp	lr, r0
 8022a6c:	d051      	beq.n	8022b12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8022a6e:	f820 6b02 	strh.w	r6, [r0], #2
 8022a72:	e7fa      	b.n	8022a6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8022a74:	9d02      	ldr	r5, [sp, #8]
 8022a76:	4369      	muls	r1, r5
 8022a78:	1c4d      	adds	r5, r1, #1
 8022a7a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8022a7e:	122d      	asrs	r5, r5, #8
 8022a80:	ea6f 0b05 	mvn.w	fp, r5
 8022a84:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022a88:	b2ad      	uxth	r5, r5
 8022a8a:	b2f6      	uxtb	r6, r6
 8022a8c:	b2d2      	uxtb	r2, r2
 8022a8e:	fb11 f105 	smulbb	r1, r1, r5
 8022a92:	fb16 f605 	smulbb	r6, r6, r5
 8022a96:	fb12 f205 	smulbb	r2, r2, r5
 8022a9a:	b289      	uxth	r1, r1
 8022a9c:	b2b6      	uxth	r6, r6
 8022a9e:	b292      	uxth	r2, r2
 8022aa0:	9106      	str	r1, [sp, #24]
 8022aa2:	9607      	str	r6, [sp, #28]
 8022aa4:	9208      	str	r2, [sp, #32]
 8022aa6:	4486      	add	lr, r0
 8022aa8:	fa5f fb8b 	uxtb.w	fp, fp
 8022aac:	4586      	cmp	lr, r0
 8022aae:	d030      	beq.n	8022b12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8022ab0:	8802      	ldrh	r2, [r0, #0]
 8022ab2:	9906      	ldr	r1, [sp, #24]
 8022ab4:	1216      	asrs	r6, r2, #8
 8022ab6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8022aba:	10d5      	asrs	r5, r2, #3
 8022abc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8022ac0:	fb06 160b 	mla	r6, r6, fp, r1
 8022ac4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022ac8:	9907      	ldr	r1, [sp, #28]
 8022aca:	00d2      	lsls	r2, r2, #3
 8022acc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8022ad0:	fb05 150b 	mla	r5, r5, fp, r1
 8022ad4:	b2d2      	uxtb	r2, r2
 8022ad6:	9908      	ldr	r1, [sp, #32]
 8022ad8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022adc:	b2b6      	uxth	r6, r6
 8022ade:	fb02 120b 	mla	r2, r2, fp, r1
 8022ae2:	b292      	uxth	r2, r2
 8022ae4:	1c71      	adds	r1, r6, #1
 8022ae6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8022aea:	1c51      	adds	r1, r2, #1
 8022aec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022af0:	b2ad      	uxth	r5, r5
 8022af2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022af6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8022afa:	4316      	orrs	r6, r2
 8022afc:	1c6a      	adds	r2, r5, #1
 8022afe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8022b02:	096d      	lsrs	r5, r5, #5
 8022b04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022b08:	432e      	orrs	r6, r5
 8022b0a:	f820 6b02 	strh.w	r6, [r0], #2
 8022b0e:	e7cd      	b.n	8022aac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8022b10:	4470      	add	r0, lr
 8022b12:	4543      	cmp	r3, r8
 8022b14:	f4ff af75 	bcc.w	8022a02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8022b18:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8022b1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b1e:	fa1f fc89 	uxth.w	ip, r9
 8022b22:	eba4 040c 	sub.w	r4, r4, ip
 8022b26:	881b      	ldrh	r3, [r3, #0]
 8022b28:	b2a4      	uxth	r4, r4
 8022b2a:	2c00      	cmp	r4, #0
 8022b2c:	eba3 0309 	sub.w	r3, r3, r9
 8022b30:	bf18      	it	ne
 8022b32:	f04f 0c00 	movne.w	ip, #0
 8022b36:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8022b3a:	e762      	b.n	8022a02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8022b3c:	4b03      	ldr	r3, [pc, #12]	@ (8022b4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8022b3e:	6818      	ldr	r0, [r3, #0]
 8022b40:	6803      	ldr	r3, [r0, #0]
 8022b42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022b44:	4798      	blx	r3
 8022b46:	b00f      	add	sp, #60	@ 0x3c
 8022b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b4c:	200138e4 	.word	0x200138e4
 8022b50:	200138de 	.word	0x200138de

08022b54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8022b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b58:	b093      	sub	sp, #76	@ 0x4c
 8022b5a:	461c      	mov	r4, r3
 8022b5c:	9205      	str	r2, [sp, #20]
 8022b5e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8022b62:	9101      	str	r1, [sp, #4]
 8022b64:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b66:	9202      	str	r2, [sp, #8]
 8022b68:	2a00      	cmp	r2, #0
 8022b6a:	f000 812c 	beq.w	8022dc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8022b6e:	6820      	ldr	r0, [r4, #0]
 8022b70:	6861      	ldr	r1, [r4, #4]
 8022b72:	aa0e      	add	r2, sp, #56	@ 0x38
 8022b74:	c203      	stmia	r2!, {r0, r1}
 8022b76:	6818      	ldr	r0, [r3, #0]
 8022b78:	6859      	ldr	r1, [r3, #4]
 8022b7a:	aa10      	add	r2, sp, #64	@ 0x40
 8022b7c:	c203      	stmia	r2!, {r0, r1}
 8022b7e:	a80e      	add	r0, sp, #56	@ 0x38
 8022b80:	f7f8 fa8c 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022b84:	4621      	mov	r1, r4
 8022b86:	a810      	add	r0, sp, #64	@ 0x40
 8022b88:	f7f8 facc 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022b8c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8022b90:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8022b94:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8022b98:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8022b9c:	bfde      	ittt	le
 8022b9e:	b2b3      	uxthle	r3, r6
 8022ba0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8022ba4:	fb92 f3f3 	sdivle	r3, r2, r3
 8022ba8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8022bac:	bfc8      	it	gt
 8022bae:	2301      	movgt	r3, #1
 8022bb0:	fb92 f1f3 	sdiv	r1, r2, r3
 8022bb4:	fa1f fc81 	uxth.w	ip, r1
 8022bb8:	fb0c 2413 	mls	r4, ip, r3, r2
 8022bbc:	fb14 f406 	smulbb	r4, r4, r6
 8022bc0:	441d      	add	r5, r3
 8022bc2:	4404      	add	r4, r0
 8022bc4:	4661      	mov	r1, ip
 8022bc6:	3d01      	subs	r5, #1
 8022bc8:	b2a4      	uxth	r4, r4
 8022bca:	fb95 f5f3 	sdiv	r5, r5, r3
 8022bce:	b131      	cbz	r1, 8022bde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8022bd0:	9b05      	ldr	r3, [sp, #20]
 8022bd2:	9901      	ldr	r1, [sp, #4]
 8022bd4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8022bd8:	ba1b      	rev	r3, r3
 8022bda:	4419      	add	r1, r3
 8022bdc:	9101      	str	r1, [sp, #4]
 8022bde:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8022be2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8022be6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8022bea:	4418      	add	r0, r3
 8022bec:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8022bf0:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8022bf4:	441a      	add	r2, r3
 8022bf6:	4b75      	ldr	r3, [pc, #468]	@ (8022dcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8022bf8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8022bfc:	6818      	ldr	r0, [r3, #0]
 8022bfe:	6803      	ldr	r3, [r0, #0]
 8022c00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022c02:	4798      	blx	r3
 8022c04:	4972      	ldr	r1, [pc, #456]	@ (8022dd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8022c06:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8022c0a:	880b      	ldrh	r3, [r1, #0]
 8022c0c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8022c10:	910d      	str	r1, [sp, #52]	@ 0x34
 8022c12:	fb03 c202 	mla	r2, r3, r2, ip
 8022c16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8022c1a:	4373      	muls	r3, r6
 8022c1c:	b2ad      	uxth	r5, r5
 8022c1e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8022c22:	00ad      	lsls	r5, r5, #2
 8022c24:	9308      	str	r3, [sp, #32]
 8022c26:	1d2b      	adds	r3, r5, #4
 8022c28:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c2a:	9b02      	ldr	r3, [sp, #8]
 8022c2c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8022c30:	9106      	str	r1, [sp, #24]
 8022c32:	43da      	mvns	r2, r3
 8022c34:	2c00      	cmp	r4, #0
 8022c36:	bf0c      	ite	eq
 8022c38:	46dc      	moveq	ip, fp
 8022c3a:	f04f 0c00 	movne.w	ip, #0
 8022c3e:	2300      	movs	r3, #0
 8022c40:	b2d2      	uxtb	r2, r2
 8022c42:	fa1f fc8c 	uxth.w	ip, ip
 8022c46:	9303      	str	r3, [sp, #12]
 8022c48:	9207      	str	r2, [sp, #28]
 8022c4a:	9a08      	ldr	r2, [sp, #32]
 8022c4c:	4282      	cmp	r2, r0
 8022c4e:	f240 80b5 	bls.w	8022dbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8022c52:	b963      	cbnz	r3, 8022c6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8022c54:	9b01      	ldr	r3, [sp, #4]
 8022c56:	781a      	ldrb	r2, [r3, #0]
 8022c58:	0993      	lsrs	r3, r2, #6
 8022c5a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8022c5e:	9203      	str	r2, [sp, #12]
 8022c60:	1e5a      	subs	r2, r3, #1
 8022c62:	2a02      	cmp	r2, #2
 8022c64:	d815      	bhi.n	8022c92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8022c66:	9a01      	ldr	r2, [sp, #4]
 8022c68:	3201      	adds	r2, #1
 8022c6a:	9201      	str	r2, [sp, #4]
 8022c6c:	b29b      	uxth	r3, r3
 8022c6e:	b1b4      	cbz	r4, 8022c9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8022c70:	429c      	cmp	r4, r3
 8022c72:	bf95      	itete	ls
 8022c74:	1b1c      	subls	r4, r3, r4
 8022c76:	1ae4      	subhi	r4, r4, r3
 8022c78:	fa1f f884 	uxthls.w	r8, r4
 8022c7c:	b2a4      	uxthhi	r4, r4
 8022c7e:	bf87      	ittee	hi
 8022c80:	4666      	movhi	r6, ip
 8022c82:	f04f 0800 	movhi.w	r8, #0
 8022c86:	fa1f f68b 	uxthls.w	r6, fp
 8022c8a:	2400      	movls	r4, #0
 8022c8c:	4643      	mov	r3, r8
 8022c8e:	46b4      	mov	ip, r6
 8022c90:	e7db      	b.n	8022c4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8022c92:	9a01      	ldr	r2, [sp, #4]
 8022c94:	9b01      	ldr	r3, [sp, #4]
 8022c96:	3202      	adds	r2, #2
 8022c98:	785b      	ldrb	r3, [r3, #1]
 8022c9a:	9201      	str	r2, [sp, #4]
 8022c9c:	e7e7      	b.n	8022c6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8022c9e:	2203      	movs	r2, #3
 8022ca0:	4615      	mov	r5, r2
 8022ca2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8022ca4:	9a03      	ldr	r2, [sp, #12]
 8022ca6:	fb15 1202 	smlabb	r2, r5, r2, r1
 8022caa:	9905      	ldr	r1, [sp, #20]
 8022cac:	4563      	cmp	r3, ip
 8022cae:	eb01 0502 	add.w	r5, r1, r2
 8022cb2:	9902      	ldr	r1, [sp, #8]
 8022cb4:	bf29      	itett	cs
 8022cb6:	eba3 080c 	subcs.w	r8, r3, ip
 8022cba:	ebac 0603 	subcc.w	r6, ip, r3
 8022cbe:	fa1f f888 	uxthcs.w	r8, r8
 8022cc2:	46e1      	movcs	r9, ip
 8022cc4:	bf2f      	iteee	cs
 8022cc6:	4626      	movcs	r6, r4
 8022cc8:	b2b6      	uxthcc	r6, r6
 8022cca:	4699      	movcc	r9, r3
 8022ccc:	46a0      	movcc	r8, r4
 8022cce:	29ff      	cmp	r1, #255	@ 0xff
 8022cd0:	d04a      	beq.n	8022d68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8022cd2:	9f06      	ldr	r7, [sp, #24]
 8022cd4:	78a9      	ldrb	r1, [r5, #2]
 8022cd6:	9004      	str	r0, [sp, #16]
 8022cd8:	4379      	muls	r1, r7
 8022cda:	910a      	str	r1, [sp, #40]	@ 0x28
 8022cdc:	7869      	ldrb	r1, [r5, #1]
 8022cde:	4379      	muls	r1, r7
 8022ce0:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022ce2:	9905      	ldr	r1, [sp, #20]
 8022ce4:	5c8a      	ldrb	r2, [r1, r2]
 8022ce6:	437a      	muls	r2, r7
 8022ce8:	920c      	str	r2, [sp, #48]	@ 0x30
 8022cea:	46ca      	mov	sl, r9
 8022cec:	f1ba 0f00 	cmp.w	sl, #0
 8022cf0:	d03d      	beq.n	8022d6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8022cf2:	9a04      	ldr	r2, [sp, #16]
 8022cf4:	9f07      	ldr	r7, [sp, #28]
 8022cf6:	8812      	ldrh	r2, [r2, #0]
 8022cf8:	1215      	asrs	r5, r2, #8
 8022cfa:	46be      	mov	lr, r7
 8022cfc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022d00:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8022d02:	10d1      	asrs	r1, r2, #3
 8022d04:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8022d08:	fb05 750e 	mla	r5, r5, lr, r7
 8022d0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022d10:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8022d12:	00d2      	lsls	r2, r2, #3
 8022d14:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8022d18:	fb01 710e 	mla	r1, r1, lr, r7
 8022d1c:	b2d2      	uxtb	r2, r2
 8022d1e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8022d20:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022d24:	b2ad      	uxth	r5, r5
 8022d26:	fb02 720e 	mla	r2, r2, lr, r7
 8022d2a:	b292      	uxth	r2, r2
 8022d2c:	f105 0e01 	add.w	lr, r5, #1
 8022d30:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8022d34:	f102 0e01 	add.w	lr, r2, #1
 8022d38:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8022d3c:	b289      	uxth	r1, r1
 8022d3e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022d42:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022d46:	4315      	orrs	r5, r2
 8022d48:	1c4a      	adds	r2, r1, #1
 8022d4a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022d4e:	0949      	lsrs	r1, r1, #5
 8022d50:	9a04      	ldr	r2, [sp, #16]
 8022d52:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022d56:	430d      	orrs	r5, r1
 8022d58:	f822 5b02 	strh.w	r5, [r2], #2
 8022d5c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022d60:	9204      	str	r2, [sp, #16]
 8022d62:	fa1f fa8a 	uxth.w	sl, sl
 8022d66:	e7c1      	b.n	8022cec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8022d68:	4649      	mov	r1, r9
 8022d6a:	4686      	mov	lr, r0
 8022d6c:	b999      	cbnz	r1, 8022d96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8022d6e:	4563      	cmp	r3, ip
 8022d70:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8022d74:	d38a      	bcc.n	8022c8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8022d76:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8022d7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022d7c:	fa1f f68b 	uxth.w	r6, fp
 8022d80:	1ba4      	subs	r4, r4, r6
 8022d82:	881b      	ldrh	r3, [r3, #0]
 8022d84:	b2a4      	uxth	r4, r4
 8022d86:	2c00      	cmp	r4, #0
 8022d88:	eba3 030b 	sub.w	r3, r3, fp
 8022d8c:	bf18      	it	ne
 8022d8e:	2600      	movne	r6, #0
 8022d90:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8022d94:	e77a      	b.n	8022c8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8022d96:	78aa      	ldrb	r2, [r5, #2]
 8022d98:	4f0e      	ldr	r7, [pc, #56]	@ (8022dd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8022d9a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8022d9e:	786a      	ldrb	r2, [r5, #1]
 8022da0:	00d2      	lsls	r2, r2, #3
 8022da2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022da6:	ea4a 0202 	orr.w	r2, sl, r2
 8022daa:	f895 a000 	ldrb.w	sl, [r5]
 8022dae:	3901      	subs	r1, #1
 8022db0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8022db4:	f82e 2b02 	strh.w	r2, [lr], #2
 8022db8:	b289      	uxth	r1, r1
 8022dba:	e7d7      	b.n	8022d6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8022dbc:	4b03      	ldr	r3, [pc, #12]	@ (8022dcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8022dbe:	6818      	ldr	r0, [r3, #0]
 8022dc0:	6803      	ldr	r3, [r0, #0]
 8022dc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022dc4:	4798      	blx	r3
 8022dc6:	b013      	add	sp, #76	@ 0x4c
 8022dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022dcc:	200138e4 	.word	0x200138e4
 8022dd0:	200138de 	.word	0x200138de
 8022dd4:	fffff800 	.word	0xfffff800

08022dd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8022dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ddc:	b09d      	sub	sp, #116	@ 0x74
 8022dde:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8022de2:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8022de6:	920e      	str	r2, [sp, #56]	@ 0x38
 8022de8:	461c      	mov	r4, r3
 8022dea:	4683      	mov	fp, r0
 8022dec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8022dee:	2a00      	cmp	r2, #0
 8022df0:	f000 81e0 	beq.w	80231b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8022df4:	6820      	ldr	r0, [r4, #0]
 8022df6:	6861      	ldr	r1, [r4, #4]
 8022df8:	aa18      	add	r2, sp, #96	@ 0x60
 8022dfa:	c203      	stmia	r2!, {r0, r1}
 8022dfc:	6818      	ldr	r0, [r3, #0]
 8022dfe:	6859      	ldr	r1, [r3, #4]
 8022e00:	aa1a      	add	r2, sp, #104	@ 0x68
 8022e02:	c203      	stmia	r2!, {r0, r1}
 8022e04:	a818      	add	r0, sp, #96	@ 0x60
 8022e06:	f7f8 f949 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022e0a:	4621      	mov	r1, r4
 8022e0c:	a81a      	add	r0, sp, #104	@ 0x68
 8022e0e:	f7f8 f989 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022e12:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8022e16:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8022e1a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8022e1e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8022e22:	bfd7      	itett	le
 8022e24:	b29a      	uxthle	r2, r3
 8022e26:	2201      	movgt	r2, #1
 8022e28:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8022e2c:	fb91 f2f2 	sdivle	r2, r1, r2
 8022e30:	9202      	str	r2, [sp, #8]
 8022e32:	9802      	ldr	r0, [sp, #8]
 8022e34:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8022e38:	fb92 f0f0 	sdiv	r0, r2, r0
 8022e3c:	b280      	uxth	r0, r0
 8022e3e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8022e40:	9902      	ldr	r1, [sp, #8]
 8022e42:	9802      	ldr	r0, [sp, #8]
 8022e44:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022e46:	440c      	add	r4, r1
 8022e48:	fb05 2510 	mls	r5, r5, r0, r2
 8022e4c:	fb15 f503 	smulbb	r5, r5, r3
 8022e50:	3c01      	subs	r4, #1
 8022e52:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8022e56:	fb94 f4f1 	sdiv	r4, r4, r1
 8022e5a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8022e5e:	440d      	add	r5, r1
 8022e60:	4419      	add	r1, r3
 8022e62:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8022e66:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8022e6a:	441a      	add	r2, r3
 8022e6c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8022e70:	9306      	str	r3, [sp, #24]
 8022e72:	4bb3      	ldr	r3, [pc, #716]	@ (8023140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8022e74:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8022e78:	6818      	ldr	r0, [r3, #0]
 8022e7a:	6803      	ldr	r3, [r0, #0]
 8022e7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022e7e:	4798      	blx	r3
 8022e80:	4bb0      	ldr	r3, [pc, #704]	@ (8023144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8022e82:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8022e86:	881a      	ldrh	r2, [r3, #0]
 8022e88:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8022e8c:	9316      	str	r3, [sp, #88]	@ 0x58
 8022e8e:	fb02 7101 	mla	r1, r2, r1, r7
 8022e92:	3401      	adds	r4, #1
 8022e94:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8022e98:	b2a4      	uxth	r4, r4
 8022e9a:	4356      	muls	r6, r2
 8022e9c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8022ea0:	00a4      	lsls	r4, r4, #2
 8022ea2:	920a      	str	r2, [sp, #40]	@ 0x28
 8022ea4:	1d22      	adds	r2, r4, #4
 8022ea6:	b2ad      	uxth	r5, r5
 8022ea8:	9213      	str	r2, [sp, #76]	@ 0x4c
 8022eaa:	4ba7      	ldr	r3, [pc, #668]	@ (8023148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8022eac:	9a06      	ldr	r2, [sp, #24]
 8022eae:	2d00      	cmp	r5, #0
 8022eb0:	bf0c      	ite	eq
 8022eb2:	4611      	moveq	r1, r2
 8022eb4:	2100      	movne	r1, #0
 8022eb6:	2200      	movs	r2, #0
 8022eb8:	eba3 030b 	sub.w	r3, r3, fp
 8022ebc:	b289      	uxth	r1, r1
 8022ebe:	920d      	str	r2, [sp, #52]	@ 0x34
 8022ec0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8022ec2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022ec4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022ec6:	fa12 f383 	uxtah	r3, r2, r3
 8022eca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8022ecc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8022ed0:	3304      	adds	r3, #4
 8022ed2:	9308      	str	r3, [sp, #32]
 8022ed4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022ed6:	4543      	cmp	r3, r8
 8022ed8:	f240 8167 	bls.w	80231aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8022edc:	9a02      	ldr	r2, [sp, #8]
 8022ede:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8022ee2:	fbb5 f3f3 	udiv	r3, r5, r3
 8022ee6:	1ad3      	subs	r3, r2, r3
 8022ee8:	b29b      	uxth	r3, r3
 8022eea:	9314      	str	r3, [sp, #80]	@ 0x50
 8022eec:	9b08      	ldr	r3, [sp, #32]
 8022eee:	9808      	ldr	r0, [sp, #32]
 8022ef0:	785a      	ldrb	r2, [r3, #1]
 8022ef2:	789b      	ldrb	r3, [r3, #2]
 8022ef4:	7800      	ldrb	r0, [r0, #0]
 8022ef6:	9010      	str	r0, [sp, #64]	@ 0x40
 8022ef8:	021b      	lsls	r3, r3, #8
 8022efa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8022efe:	9a08      	ldr	r2, [sp, #32]
 8022f00:	78d2      	ldrb	r2, [r2, #3]
 8022f02:	4313      	orrs	r3, r2
 8022f04:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8022f06:	3001      	adds	r0, #1
 8022f08:	441a      	add	r2, r3
 8022f0a:	9007      	str	r0, [sp, #28]
 8022f0c:	1c50      	adds	r0, r2, #1
 8022f0e:	9005      	str	r0, [sp, #20]
 8022f10:	7852      	ldrb	r2, [r2, #1]
 8022f12:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022f14:	0212      	lsls	r2, r2, #8
 8022f16:	5cc3      	ldrb	r3, [r0, r3]
 8022f18:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8022f1c:	431a      	orrs	r2, r3
 8022f1e:	b293      	uxth	r3, r2
 8022f20:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022f22:	2300      	movs	r3, #0
 8022f24:	9309      	str	r3, [sp, #36]	@ 0x24
 8022f26:	2301      	movs	r3, #1
 8022f28:	9301      	str	r3, [sp, #4]
 8022f2a:	9304      	str	r3, [sp, #16]
 8022f2c:	2300      	movs	r3, #0
 8022f2e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8022f32:	9303      	str	r3, [sp, #12]
 8022f34:	f04f 0e01 	mov.w	lr, #1
 8022f38:	2d00      	cmp	r5, #0
 8022f3a:	d07c      	beq.n	8023036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8022f3c:	45ae      	cmp	lr, r5
 8022f3e:	d26b      	bcs.n	8023018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8022f40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022f42:	eba5 050e 	sub.w	r5, r5, lr
 8022f46:	4543      	cmp	r3, r8
 8022f48:	b2ad      	uxth	r5, r5
 8022f4a:	460c      	mov	r4, r1
 8022f4c:	d802      	bhi.n	8022f54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8022f4e:	e070      	b.n	8023032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8022f50:	2b00      	cmp	r3, #0
 8022f52:	d15c      	bne.n	802300e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8022f54:	9b05      	ldr	r3, [sp, #20]
 8022f56:	9a04      	ldr	r2, [sp, #16]
 8022f58:	785b      	ldrb	r3, [r3, #1]
 8022f5a:	9904      	ldr	r1, [sp, #16]
 8022f5c:	f1c2 0207 	rsb	r2, r2, #7
 8022f60:	4093      	lsls	r3, r2
 8022f62:	005b      	lsls	r3, r3, #1
 8022f64:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8022f68:	9b05      	ldr	r3, [sp, #20]
 8022f6a:	781b      	ldrb	r3, [r3, #0]
 8022f6c:	410b      	asrs	r3, r1
 8022f6e:	3101      	adds	r1, #1
 8022f70:	b2c9      	uxtb	r1, r1
 8022f72:	2908      	cmp	r1, #8
 8022f74:	9104      	str	r1, [sp, #16]
 8022f76:	9905      	ldr	r1, [sp, #20]
 8022f78:	bf0a      	itet	eq
 8022f7a:	3102      	addeq	r1, #2
 8022f7c:	3101      	addne	r1, #1
 8022f7e:	9105      	streq	r1, [sp, #20]
 8022f80:	b2db      	uxtb	r3, r3
 8022f82:	bf0a      	itet	eq
 8022f84:	2100      	moveq	r1, #0
 8022f86:	9105      	strne	r1, [sp, #20]
 8022f88:	9104      	streq	r1, [sp, #16]
 8022f8a:	4313      	orrs	r3, r2
 8022f8c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8022f8e:	b29a      	uxth	r2, r3
 8022f90:	4291      	cmp	r1, r2
 8022f92:	d30a      	bcc.n	8022faa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8022f94:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8022f98:	2301      	movs	r3, #1
 8022f9a:	9907      	ldr	r1, [sp, #28]
 8022f9c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8022fa0:	d30f      	bcc.n	8022fc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8022fa2:	2100      	movs	r1, #0
 8022fa4:	9301      	str	r3, [sp, #4]
 8022fa6:	9103      	str	r1, [sp, #12]
 8022fa8:	e032      	b.n	8023010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8022faa:	9b07      	ldr	r3, [sp, #28]
 8022fac:	429a      	cmp	r2, r3
 8022fae:	d318      	bcc.n	8022fe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8022fb0:	9b01      	ldr	r3, [sp, #4]
 8022fb2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8022fb6:	445b      	add	r3, fp
 8022fb8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8022fbc:	9b01      	ldr	r3, [sp, #4]
 8022fbe:	3301      	adds	r3, #1
 8022fc0:	b29b      	uxth	r3, r3
 8022fc2:	9907      	ldr	r1, [sp, #28]
 8022fc4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8022fc8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8022fcc:	7108      	strb	r0, [r1, #4]
 8022fce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8022fd0:	80c8      	strh	r0, [r1, #6]
 8022fd2:	9801      	ldr	r0, [sp, #4]
 8022fd4:	3001      	adds	r0, #1
 8022fd6:	7148      	strb	r0, [r1, #5]
 8022fd8:	9907      	ldr	r1, [sp, #28]
 8022fda:	3101      	adds	r1, #1
 8022fdc:	b289      	uxth	r1, r1
 8022fde:	9107      	str	r1, [sp, #28]
 8022fe0:	e7df      	b.n	8022fa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8022fe2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8022fe6:	4611      	mov	r1, r2
 8022fe8:	795b      	ldrb	r3, [r3, #5]
 8022fea:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8022fee:	4458      	add	r0, fp
 8022ff0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8022ff2:	4406      	add	r6, r0
 8022ff4:	2e00      	cmp	r6, #0
 8022ff6:	dd06      	ble.n	8023006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8022ff8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8022ffc:	790e      	ldrb	r6, [r1, #4]
 8022ffe:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8023002:	88c9      	ldrh	r1, [r1, #6]
 8023004:	e7f4      	b.n	8022ff0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8023006:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 802300a:	b29b      	uxth	r3, r3
 802300c:	e7c5      	b.n	8022f9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 802300e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023010:	920b      	str	r2, [sp, #44]	@ 0x2c
 8023012:	4621      	mov	r1, r4
 8023014:	469e      	mov	lr, r3
 8023016:	e78f      	b.n	8022f38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8023018:	9a03      	ldr	r2, [sp, #12]
 802301a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802301e:	442a      	add	r2, r5
 8023020:	ebae 0305 	sub.w	r3, lr, r5
 8023024:	b292      	uxth	r2, r2
 8023026:	b29b      	uxth	r3, r3
 8023028:	9203      	str	r2, [sp, #12]
 802302a:	2500      	movs	r5, #0
 802302c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802302e:	4542      	cmp	r2, r8
 8023030:	d88e      	bhi.n	8022f50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8023032:	4621      	mov	r1, r4
 8023034:	e74e      	b.n	8022ed4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8023036:	458e      	cmp	lr, r1
 8023038:	bf29      	itett	cs
 802303a:	ebae 0301 	subcs.w	r3, lr, r1
 802303e:	eba1 040e 	subcc.w	r4, r1, lr
 8023042:	b29b      	uxthcs	r3, r3
 8023044:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8023046:	bf2f      	iteee	cs
 8023048:	462c      	movcs	r4, r5
 802304a:	b2a4      	uxthcc	r4, r4
 802304c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8023050:	462b      	movcc	r3, r5
 8023052:	f04f 0900 	mov.w	r9, #0
 8023056:	9a03      	ldr	r2, [sp, #12]
 8023058:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802305a:	444a      	add	r2, r9
 802305c:	4548      	cmp	r0, r9
 802305e:	b292      	uxth	r2, r2
 8023060:	d074      	beq.n	802314c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8023062:	445a      	add	r2, fp
 8023064:	2004      	movs	r0, #4
 8023066:	4605      	mov	r5, r0
 8023068:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 802306c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802306e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8023072:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8023074:	5880      	ldr	r0, [r0, r2]
 8023076:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 802307a:	d014      	beq.n	80230a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 802307c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8023080:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8023084:	d112      	bne.n	80230ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8023086:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8023088:	2aff      	cmp	r2, #255	@ 0xff
 802308a:	d10f      	bne.n	80230ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 802308c:	0942      	lsrs	r2, r0, #5
 802308e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8023092:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023096:	f025 0507 	bic.w	r5, r5, #7
 802309a:	4315      	orrs	r5, r2
 802309c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80230a0:	4305      	orrs	r5, r0
 80230a2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80230a6:	f109 0901 	add.w	r9, r9, #1
 80230aa:	e7d4      	b.n	8023056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 80230ac:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 80230b0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80230b4:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 80230b8:	9215      	str	r2, [sp, #84]	@ 0x54
 80230ba:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80230bc:	fb02 fa0a 	mul.w	sl, r2, sl
 80230c0:	f10a 0201 	add.w	r2, sl, #1
 80230c4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80230c8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80230cc:	1212      	asrs	r2, r2, #8
 80230ce:	fa1f fa82 	uxth.w	sl, r2
 80230d2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80230d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80230da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80230de:	43d2      	mvns	r2, r2
 80230e0:	b2d2      	uxtb	r2, r2
 80230e2:	fb16 f60a 	smulbb	r6, r6, sl
 80230e6:	fa5f fc8c 	uxtb.w	ip, ip
 80230ea:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80230ee:	b2c0      	uxtb	r0, r0
 80230f0:	fb07 6702 	mla	r7, r7, r2, r6
 80230f4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80230f8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80230fa:	fb10 f00a 	smulbb	r0, r0, sl
 80230fe:	fb0c 0002 	mla	r0, ip, r2, r0
 8023102:	b2ed      	uxtb	r5, r5
 8023104:	b2bf      	uxth	r7, r7
 8023106:	fb15 f50a 	smulbb	r5, r5, sl
 802310a:	b280      	uxth	r0, r0
 802310c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8023110:	fb06 5602 	mla	r6, r6, r2, r5
 8023114:	1c7a      	adds	r2, r7, #1
 8023116:	1c45      	adds	r5, r0, #1
 8023118:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802311c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8023120:	b2b6      	uxth	r6, r6
 8023122:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8023126:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 802312a:	432f      	orrs	r7, r5
 802312c:	1c75      	adds	r5, r6, #1
 802312e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8023132:	096d      	lsrs	r5, r5, #5
 8023134:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023138:	432f      	orrs	r7, r5
 802313a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 802313e:	e7b2      	b.n	80230a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8023140:	200138e4 	.word	0x200138e4
 8023144:	200138de 	.word	0x200138de
 8023148:	fffff7fb 	.word	0xfffff7fb
 802314c:	9203      	str	r2, [sp, #12]
 802314e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023150:	458e      	cmp	lr, r1
 8023152:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8023156:	f4ff af68 	bcc.w	802302a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 802315a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 802315c:	9906      	ldr	r1, [sp, #24]
 802315e:	8812      	ldrh	r2, [r2, #0]
 8023160:	1a52      	subs	r2, r2, r1
 8023162:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8023166:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023168:	9914      	ldr	r1, [sp, #80]	@ 0x50
 802316a:	3201      	adds	r2, #1
 802316c:	428a      	cmp	r2, r1
 802316e:	9209      	str	r2, [sp, #36]	@ 0x24
 8023170:	d111      	bne.n	8023196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8023172:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8023176:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 802317a:	9b06      	ldr	r3, [sp, #24]
 802317c:	eba5 0509 	sub.w	r5, r5, r9
 8023180:	b2ad      	uxth	r5, r5
 8023182:	2d00      	cmp	r5, #0
 8023184:	bf08      	it	eq
 8023186:	4619      	moveq	r1, r3
 8023188:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802318a:	bf18      	it	ne
 802318c:	2100      	movne	r1, #0
 802318e:	3301      	adds	r3, #1
 8023190:	930d      	str	r3, [sp, #52]	@ 0x34
 8023192:	b289      	uxth	r1, r1
 8023194:	e695      	b.n	8022ec2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8023196:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802319a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 802319e:	1b2d      	subs	r5, r5, r4
 80231a0:	b2ad      	uxth	r5, r5
 80231a2:	2d00      	cmp	r5, #0
 80231a4:	bf18      	it	ne
 80231a6:	2400      	movne	r4, #0
 80231a8:	e740      	b.n	802302c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80231aa:	4b04      	ldr	r3, [pc, #16]	@ (80231bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 80231ac:	6818      	ldr	r0, [r3, #0]
 80231ae:	6803      	ldr	r3, [r0, #0]
 80231b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80231b2:	4798      	blx	r3
 80231b4:	b01d      	add	sp, #116	@ 0x74
 80231b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231ba:	bf00      	nop
 80231bc:	200138e4 	.word	0x200138e4

080231c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80231c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231c4:	b09f      	sub	sp, #124	@ 0x7c
 80231c6:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80231ca:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80231ce:	920a      	str	r2, [sp, #40]	@ 0x28
 80231d0:	461d      	mov	r5, r3
 80231d2:	4604      	mov	r4, r0
 80231d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80231d6:	2a00      	cmp	r2, #0
 80231d8:	f000 81fa 	beq.w	80235d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80231dc:	6828      	ldr	r0, [r5, #0]
 80231de:	6869      	ldr	r1, [r5, #4]
 80231e0:	aa1a      	add	r2, sp, #104	@ 0x68
 80231e2:	c203      	stmia	r2!, {r0, r1}
 80231e4:	6818      	ldr	r0, [r3, #0]
 80231e6:	6859      	ldr	r1, [r3, #4]
 80231e8:	aa1c      	add	r2, sp, #112	@ 0x70
 80231ea:	c203      	stmia	r2!, {r0, r1}
 80231ec:	a81a      	add	r0, sp, #104	@ 0x68
 80231ee:	f7f7 ff55 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80231f2:	4629      	mov	r1, r5
 80231f4:	a81c      	add	r0, sp, #112	@ 0x70
 80231f6:	f7f7 ff95 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80231fa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80231fe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8023202:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8023206:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 802320a:	bfd7      	itett	le
 802320c:	b29a      	uxthle	r2, r3
 802320e:	2201      	movgt	r2, #1
 8023210:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8023214:	fb91 f2f2 	sdivle	r2, r1, r2
 8023218:	9201      	str	r2, [sp, #4]
 802321a:	9801      	ldr	r0, [sp, #4]
 802321c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8023220:	fb92 f0f0 	sdiv	r0, r2, r0
 8023224:	b280      	uxth	r0, r0
 8023226:	9010      	str	r0, [sp, #64]	@ 0x40
 8023228:	9901      	ldr	r1, [sp, #4]
 802322a:	9801      	ldr	r0, [sp, #4]
 802322c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802322e:	440e      	add	r6, r1
 8023230:	fb05 2510 	mls	r5, r5, r0, r2
 8023234:	fb15 f503 	smulbb	r5, r5, r3
 8023238:	3e01      	subs	r6, #1
 802323a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802323e:	fb96 f6f1 	sdiv	r6, r6, r1
 8023242:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8023246:	440d      	add	r5, r1
 8023248:	4419      	add	r1, r3
 802324a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 802324e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8023252:	441a      	add	r2, r3
 8023254:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8023258:	9304      	str	r3, [sp, #16]
 802325a:	4b96      	ldr	r3, [pc, #600]	@ (80234b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 802325c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8023260:	6818      	ldr	r0, [r3, #0]
 8023262:	6803      	ldr	r3, [r0, #0]
 8023264:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023266:	4798      	blx	r3
 8023268:	4b93      	ldr	r3, [pc, #588]	@ (80234b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 802326a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 802326e:	881a      	ldrh	r2, [r3, #0]
 8023270:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8023274:	9318      	str	r3, [sp, #96]	@ 0x60
 8023276:	fb02 c101 	mla	r1, r2, r1, ip
 802327a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 802327e:	4357      	muls	r7, r2
 8023280:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8023284:	3601      	adds	r6, #1
 8023286:	920b      	str	r2, [sp, #44]	@ 0x2c
 8023288:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802328a:	4b8c      	ldr	r3, [pc, #560]	@ (80234bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 802328c:	b2b6      	uxth	r6, r6
 802328e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8023292:	1d32      	adds	r2, r6, #4
 8023294:	9206      	str	r2, [sp, #24]
 8023296:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023298:	43d2      	mvns	r2, r2
 802329a:	b2d2      	uxtb	r2, r2
 802329c:	b2ad      	uxth	r5, r5
 802329e:	9215      	str	r2, [sp, #84]	@ 0x54
 80232a0:	9a04      	ldr	r2, [sp, #16]
 80232a2:	2d00      	cmp	r5, #0
 80232a4:	bf0c      	ite	eq
 80232a6:	4611      	moveq	r1, r2
 80232a8:	2100      	movne	r1, #0
 80232aa:	2200      	movs	r2, #0
 80232ac:	1b1b      	subs	r3, r3, r4
 80232ae:	b289      	uxth	r1, r1
 80232b0:	920d      	str	r2, [sp, #52]	@ 0x34
 80232b2:	9319      	str	r3, [sp, #100]	@ 0x64
 80232b4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80232b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80232b8:	fa12 f383 	uxtah	r3, r2, r3
 80232bc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80232be:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80232c2:	3304      	adds	r3, #4
 80232c4:	9307      	str	r3, [sp, #28]
 80232c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80232c8:	455b      	cmp	r3, fp
 80232ca:	f240 817c 	bls.w	80235c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80232ce:	9a01      	ldr	r2, [sp, #4]
 80232d0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80232d4:	fbb5 f3f3 	udiv	r3, r5, r3
 80232d8:	1ad3      	subs	r3, r2, r3
 80232da:	b29b      	uxth	r3, r3
 80232dc:	9316      	str	r3, [sp, #88]	@ 0x58
 80232de:	9b07      	ldr	r3, [sp, #28]
 80232e0:	9807      	ldr	r0, [sp, #28]
 80232e2:	785a      	ldrb	r2, [r3, #1]
 80232e4:	789b      	ldrb	r3, [r3, #2]
 80232e6:	7800      	ldrb	r0, [r0, #0]
 80232e8:	9011      	str	r0, [sp, #68]	@ 0x44
 80232ea:	021b      	lsls	r3, r3, #8
 80232ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80232f0:	9a07      	ldr	r2, [sp, #28]
 80232f2:	78d2      	ldrb	r2, [r2, #3]
 80232f4:	4313      	orrs	r3, r2
 80232f6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80232f8:	3001      	adds	r0, #1
 80232fa:	441a      	add	r2, r3
 80232fc:	9005      	str	r0, [sp, #20]
 80232fe:	1c50      	adds	r0, r2, #1
 8023300:	9003      	str	r0, [sp, #12]
 8023302:	7852      	ldrb	r2, [r2, #1]
 8023304:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8023306:	0212      	lsls	r2, r2, #8
 8023308:	5cc3      	ldrb	r3, [r0, r3]
 802330a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 802330e:	431a      	orrs	r2, r3
 8023310:	b293      	uxth	r3, r2
 8023312:	930c      	str	r3, [sp, #48]	@ 0x30
 8023314:	2300      	movs	r3, #0
 8023316:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 802331a:	9308      	str	r3, [sp, #32]
 802331c:	461a      	mov	r2, r3
 802331e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8023322:	930e      	str	r3, [sp, #56]	@ 0x38
 8023324:	f04f 0801 	mov.w	r8, #1
 8023328:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 802332c:	f8cd 8008 	str.w	r8, [sp, #8]
 8023330:	46c4      	mov	ip, r8
 8023332:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023334:	2d00      	cmp	r5, #0
 8023336:	d07c      	beq.n	8023432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8023338:	45ac      	cmp	ip, r5
 802333a:	d26c      	bcs.n	8023416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 802333c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802333e:	eba5 050c 	sub.w	r5, r5, ip
 8023342:	455b      	cmp	r3, fp
 8023344:	b2ad      	uxth	r5, r5
 8023346:	4608      	mov	r0, r1
 8023348:	d802      	bhi.n	8023350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802334a:	e070      	b.n	802342e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 802334c:	2b00      	cmp	r3, #0
 802334e:	d15c      	bne.n	802340a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8023350:	9b03      	ldr	r3, [sp, #12]
 8023352:	9a02      	ldr	r2, [sp, #8]
 8023354:	785b      	ldrb	r3, [r3, #1]
 8023356:	9902      	ldr	r1, [sp, #8]
 8023358:	f1c2 0207 	rsb	r2, r2, #7
 802335c:	4093      	lsls	r3, r2
 802335e:	005b      	lsls	r3, r3, #1
 8023360:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8023364:	9b03      	ldr	r3, [sp, #12]
 8023366:	781b      	ldrb	r3, [r3, #0]
 8023368:	410b      	asrs	r3, r1
 802336a:	3101      	adds	r1, #1
 802336c:	b2c9      	uxtb	r1, r1
 802336e:	2908      	cmp	r1, #8
 8023370:	9102      	str	r1, [sp, #8]
 8023372:	9903      	ldr	r1, [sp, #12]
 8023374:	bf0a      	itet	eq
 8023376:	3102      	addeq	r1, #2
 8023378:	3101      	addne	r1, #1
 802337a:	9103      	streq	r1, [sp, #12]
 802337c:	b2db      	uxtb	r3, r3
 802337e:	bf0a      	itet	eq
 8023380:	2100      	moveq	r1, #0
 8023382:	9103      	strne	r1, [sp, #12]
 8023384:	9102      	streq	r1, [sp, #8]
 8023386:	4313      	orrs	r3, r2
 8023388:	9911      	ldr	r1, [sp, #68]	@ 0x44
 802338a:	b29a      	uxth	r2, r3
 802338c:	4291      	cmp	r1, r2
 802338e:	d30a      	bcc.n	80233a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8023390:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8023394:	2301      	movs	r3, #1
 8023396:	9905      	ldr	r1, [sp, #20]
 8023398:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 802339c:	d30f      	bcc.n	80233be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 802339e:	2100      	movs	r1, #0
 80233a0:	4698      	mov	r8, r3
 80233a2:	9100      	str	r1, [sp, #0]
 80233a4:	e032      	b.n	802340c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80233a6:	9b05      	ldr	r3, [sp, #20]
 80233a8:	429a      	cmp	r2, r3
 80233aa:	d318      	bcc.n	80233de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80233ac:	eb04 0308 	add.w	r3, r4, r8
 80233b0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80233b4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80233b8:	f108 0301 	add.w	r3, r8, #1
 80233bc:	b29b      	uxth	r3, r3
 80233be:	9905      	ldr	r1, [sp, #20]
 80233c0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80233c4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80233c8:	710e      	strb	r6, [r1, #4]
 80233ca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80233cc:	80ce      	strh	r6, [r1, #6]
 80233ce:	f108 0601 	add.w	r6, r8, #1
 80233d2:	714e      	strb	r6, [r1, #5]
 80233d4:	9905      	ldr	r1, [sp, #20]
 80233d6:	3101      	adds	r1, #1
 80233d8:	b289      	uxth	r1, r1
 80233da:	9105      	str	r1, [sp, #20]
 80233dc:	e7df      	b.n	802339e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80233de:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80233e2:	4611      	mov	r1, r2
 80233e4:	795b      	ldrb	r3, [r3, #5]
 80233e6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80233ea:	4426      	add	r6, r4
 80233ec:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80233ee:	4437      	add	r7, r6
 80233f0:	2f00      	cmp	r7, #0
 80233f2:	dd06      	ble.n	8023402 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80233f4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80233f8:	790f      	ldrb	r7, [r1, #4]
 80233fa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80233fe:	88c9      	ldrh	r1, [r1, #6]
 8023400:	e7f4      	b.n	80233ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8023402:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8023406:	b29b      	uxth	r3, r3
 8023408:	e7c5      	b.n	8023396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802340a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802340c:	920c      	str	r2, [sp, #48]	@ 0x30
 802340e:	4601      	mov	r1, r0
 8023410:	9a00      	ldr	r2, [sp, #0]
 8023412:	469c      	mov	ip, r3
 8023414:	e78e      	b.n	8023334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8023416:	1957      	adds	r7, r2, r5
 8023418:	ebac 0305 	sub.w	r3, ip, r5
 802341c:	b2ba      	uxth	r2, r7
 802341e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8023422:	9200      	str	r2, [sp, #0]
 8023424:	b29b      	uxth	r3, r3
 8023426:	2500      	movs	r5, #0
 8023428:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802342a:	455a      	cmp	r2, fp
 802342c:	d88e      	bhi.n	802334c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 802342e:	4601      	mov	r1, r0
 8023430:	e749      	b.n	80232c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8023432:	458c      	cmp	ip, r1
 8023434:	bf2c      	ite	cs
 8023436:	4628      	movcs	r0, r5
 8023438:	462b      	movcc	r3, r5
 802343a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802343c:	bf27      	ittee	cs
 802343e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8023440:	ebac 0301 	subcs.w	r3, ip, r1
 8023444:	eba1 000c 	subcc.w	r0, r1, ip
 8023448:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 802344c:	bf2c      	ite	cs
 802344e:	b29b      	uxthcs	r3, r3
 8023450:	b280      	uxthcc	r0, r0
 8023452:	2dff      	cmp	r5, #255	@ 0xff
 8023454:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023456:	eb02 0705 	add.w	r7, r2, r5
 802345a:	b2bd      	uxth	r5, r7
 802345c:	9500      	str	r5, [sp, #0]
 802345e:	d12f      	bne.n	80234c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8023460:	465e      	mov	r6, fp
 8023462:	9d00      	ldr	r5, [sp, #0]
 8023464:	42aa      	cmp	r2, r5
 8023466:	f040 8084 	bne.w	8023572 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 802346a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802346c:	458c      	cmp	ip, r1
 802346e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8023472:	d3d8      	bcc.n	8023426 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8023474:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8023476:	9904      	ldr	r1, [sp, #16]
 8023478:	8812      	ldrh	r2, [r2, #0]
 802347a:	1a52      	subs	r2, r2, r1
 802347c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8023480:	9a08      	ldr	r2, [sp, #32]
 8023482:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8023484:	3201      	adds	r2, #1
 8023486:	428a      	cmp	r2, r1
 8023488:	9208      	str	r2, [sp, #32]
 802348a:	f040 8092 	bne.w	80235b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 802348e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8023492:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8023496:	9b04      	ldr	r3, [sp, #16]
 8023498:	eba5 050c 	sub.w	r5, r5, ip
 802349c:	b2ad      	uxth	r5, r5
 802349e:	2d00      	cmp	r5, #0
 80234a0:	bf08      	it	eq
 80234a2:	4619      	moveq	r1, r3
 80234a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80234a6:	bf18      	it	ne
 80234a8:	2100      	movne	r1, #0
 80234aa:	3301      	adds	r3, #1
 80234ac:	930d      	str	r3, [sp, #52]	@ 0x34
 80234ae:	b289      	uxth	r1, r1
 80234b0:	e700      	b.n	80232b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80234b2:	bf00      	nop
 80234b4:	200138e4 	.word	0x200138e4
 80234b8:	200138de 	.word	0x200138de
 80234bc:	fffff7fb 	.word	0xfffff7fb
 80234c0:	46d9      	mov	r9, fp
 80234c2:	9d00      	ldr	r5, [sp, #0]
 80234c4:	42aa      	cmp	r2, r5
 80234c6:	d0d0      	beq.n	802346a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80234c8:	1c55      	adds	r5, r2, #1
 80234ca:	4422      	add	r2, r4
 80234cc:	9517      	str	r5, [sp, #92]	@ 0x5c
 80234ce:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 80234d2:	9a06      	ldr	r2, [sp, #24]
 80234d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80234d8:	4472      	add	r2, lr
 80234da:	9212      	str	r2, [sp, #72]	@ 0x48
 80234dc:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80234de:	f8b9 2000 	ldrh.w	r2, [r9]
 80234e2:	f897 a002 	ldrb.w	sl, [r7, #2]
 80234e6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80234e8:	1216      	asrs	r6, r2, #8
 80234ea:	fb1a fa07 	smulbb	sl, sl, r7
 80234ee:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80234f2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80234f4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80234f8:	fb06 a607 	mla	r6, r6, r7, sl
 80234fc:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80234fe:	f897 a001 	ldrb.w	sl, [r7, #1]
 8023502:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8023504:	10d5      	asrs	r5, r2, #3
 8023506:	fb1a fa07 	smulbb	sl, sl, r7
 802350a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802350e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8023510:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8023514:	fb05 a507 	mla	r5, r5, r7, sl
 8023518:	9f06      	ldr	r7, [sp, #24]
 802351a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802351e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8023520:	00d2      	lsls	r2, r2, #3
 8023522:	fb1e fe07 	smulbb	lr, lr, r7
 8023526:	b2d2      	uxtb	r2, r2
 8023528:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802352a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802352e:	b2b6      	uxth	r6, r6
 8023530:	fb02 e207 	mla	r2, r2, r7, lr
 8023534:	b292      	uxth	r2, r2
 8023536:	b2ad      	uxth	r5, r5
 8023538:	f106 0a01 	add.w	sl, r6, #1
 802353c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8023540:	f102 0e01 	add.w	lr, r2, #1
 8023544:	f105 0a01 	add.w	sl, r5, #1
 8023548:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 802354c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8023550:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8023554:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023558:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802355c:	ea4e 0606 	orr.w	r6, lr, r6
 8023560:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8023564:	ea46 060a 	orr.w	r6, r6, sl
 8023568:	f829 6b02 	strh.w	r6, [r9], #2
 802356c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8023570:	e7a7      	b.n	80234c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8023572:	f102 0e01 	add.w	lr, r2, #1
 8023576:	4422      	add	r2, r4
 8023578:	9f06      	ldr	r7, [sp, #24]
 802357a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 802357e:	9a06      	ldr	r2, [sp, #24]
 8023580:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023584:	eb02 0a05 	add.w	sl, r2, r5
 8023588:	4a13      	ldr	r2, [pc, #76]	@ (80235d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 802358a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802358e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8023592:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023596:	00d2      	lsls	r2, r2, #3
 8023598:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802359c:	ea49 0202 	orr.w	r2, r9, r2
 80235a0:	f817 9005 	ldrb.w	r9, [r7, r5]
 80235a4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80235a8:	f826 2b02 	strh.w	r2, [r6], #2
 80235ac:	fa1f f28e 	uxth.w	r2, lr
 80235b0:	e757      	b.n	8023462 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80235b2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80235b6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80235ba:	1a2d      	subs	r5, r5, r0
 80235bc:	b2ad      	uxth	r5, r5
 80235be:	2d00      	cmp	r5, #0
 80235c0:	bf18      	it	ne
 80235c2:	2000      	movne	r0, #0
 80235c4:	e730      	b.n	8023428 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80235c6:	4b05      	ldr	r3, [pc, #20]	@ (80235dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80235c8:	6818      	ldr	r0, [r3, #0]
 80235ca:	6803      	ldr	r3, [r0, #0]
 80235cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80235ce:	4798      	blx	r3
 80235d0:	b01f      	add	sp, #124	@ 0x7c
 80235d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80235d6:	bf00      	nop
 80235d8:	fffff800 	.word	0xfffff800
 80235dc:	200138e4 	.word	0x200138e4

080235e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80235e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235e4:	b091      	sub	sp, #68	@ 0x44
 80235e6:	469b      	mov	fp, r3
 80235e8:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80235ec:	4616      	mov	r6, r2
 80235ee:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80235f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80235f6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80235fa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80235fe:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8023602:	4604      	mov	r4, r0
 8023604:	460d      	mov	r5, r1
 8023606:	4640      	mov	r0, r8
 8023608:	4659      	mov	r1, fp
 802360a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 802360e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8023612:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8023616:	f7f1 fef7 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 802361a:	4631      	mov	r1, r6
 802361c:	4640      	mov	r0, r8
 802361e:	f7f1 fef3 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 8023622:	4b74      	ldr	r3, [pc, #464]	@ (80237f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8023624:	8818      	ldrh	r0, [r3, #0]
 8023626:	4b74      	ldr	r3, [pc, #464]	@ (80237f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8023628:	8819      	ldrh	r1, [r3, #0]
 802362a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802362e:	2b00      	cmp	r3, #0
 8023630:	b202      	sxth	r2, r0
 8023632:	b20e      	sxth	r6, r1
 8023634:	da07      	bge.n	8023646 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8023636:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 802363a:	4463      	add	r3, ip
 802363c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8023640:	2300      	movs	r3, #0
 8023642:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8023646:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802364a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 802364e:	1ad2      	subs	r2, r2, r3
 8023650:	4594      	cmp	ip, r2
 8023652:	bfc4      	itt	gt
 8023654:	1ac2      	subgt	r2, r0, r3
 8023656:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 802365a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 802365e:	2a00      	cmp	r2, #0
 8023660:	da07      	bge.n	8023672 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8023662:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8023666:	4462      	add	r2, ip
 8023668:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 802366c:	2200      	movs	r2, #0
 802366e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8023672:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8023676:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 802367a:	eba6 060a 	sub.w	r6, r6, sl
 802367e:	42b2      	cmp	r2, r6
 8023680:	bfc4      	itt	gt
 8023682:	eba1 020a 	subgt.w	r2, r1, sl
 8023686:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 802368a:	4a5c      	ldr	r2, [pc, #368]	@ (80237fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 802368c:	7812      	ldrb	r2, [r2, #0]
 802368e:	b9a2      	cbnz	r2, 80236ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8023690:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8023694:	4286      	cmp	r6, r0
 8023696:	4640      	mov	r0, r8
 8023698:	9303      	str	r3, [sp, #12]
 802369a:	bf14      	ite	ne
 802369c:	2600      	movne	r6, #0
 802369e:	2601      	moveq	r6, #1
 80236a0:	f7f1 fef5 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 80236a4:	9b03      	ldr	r3, [sp, #12]
 80236a6:	b160      	cbz	r0, 80236c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80236a8:	2300      	movs	r3, #0
 80236aa:	8023      	strh	r3, [r4, #0]
 80236ac:	8063      	strh	r3, [r4, #2]
 80236ae:	80a3      	strh	r3, [r4, #4]
 80236b0:	4620      	mov	r0, r4
 80236b2:	80e3      	strh	r3, [r4, #6]
 80236b4:	b011      	add	sp, #68	@ 0x44
 80236b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80236ba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80236be:	428e      	cmp	r6, r1
 80236c0:	e7e9      	b.n	8023696 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80236c2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80236c6:	9205      	str	r2, [sp, #20]
 80236c8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80236cc:	9206      	str	r2, [sp, #24]
 80236ce:	f8bb 2000 	ldrh.w	r2, [fp]
 80236d2:	900e      	str	r0, [sp, #56]	@ 0x38
 80236d4:	1a9b      	subs	r3, r3, r2
 80236d6:	b21b      	sxth	r3, r3
 80236d8:	9303      	str	r3, [sp, #12]
 80236da:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80236de:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 80236e2:	ebaa 0a03 	sub.w	sl, sl, r3
 80236e6:	fa0f f38a 	sxth.w	r3, sl
 80236ea:	9304      	str	r3, [sp, #16]
 80236ec:	9b03      	ldr	r3, [sp, #12]
 80236ee:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80236f2:	9b04      	ldr	r3, [sp, #16]
 80236f4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80236f8:	9b05      	ldr	r3, [sp, #20]
 80236fa:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80236fe:	a90e      	add	r1, sp, #56	@ 0x38
 8023700:	9b06      	ldr	r3, [sp, #24]
 8023702:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8023706:	a80c      	add	r0, sp, #48	@ 0x30
 8023708:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 802370c:	f7f7 fd0a 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023710:	4640      	mov	r0, r8
 8023712:	f7f7 fcc3 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023716:	a80e      	add	r0, sp, #56	@ 0x38
 8023718:	f7f7 fcc0 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802371c:	4b38      	ldr	r3, [pc, #224]	@ (8023800 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 802371e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8023722:	881b      	ldrh	r3, [r3, #0]
 8023724:	9307      	str	r3, [sp, #28]
 8023726:	682b      	ldr	r3, [r5, #0]
 8023728:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8023804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 802372c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802372e:	4628      	mov	r0, r5
 8023730:	4798      	blx	r3
 8023732:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8023736:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 802373a:	4681      	mov	r9, r0
 802373c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8023740:	f8db 0000 	ldr.w	r0, [fp]
 8023744:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8023746:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802374a:	6803      	ldr	r3, [r0, #0]
 802374c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 802374e:	4798      	blx	r3
 8023750:	4607      	mov	r7, r0
 8023752:	f8db 0000 	ldr.w	r0, [fp]
 8023756:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 802375a:	6803      	ldr	r3, [r0, #0]
 802375c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8023760:	9109      	str	r1, [sp, #36]	@ 0x24
 8023762:	9208      	str	r2, [sp, #32]
 8023764:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023766:	4798      	blx	r3
 8023768:	f010 0f01 	tst.w	r0, #1
 802376c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023770:	d012      	beq.n	8023798 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8023772:	f8db 0000 	ldr.w	r0, [fp]
 8023776:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 802377a:	6803      	ldr	r3, [r0, #0]
 802377c:	9200      	str	r2, [sp, #0]
 802377e:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8023780:	e898 0006 	ldmia.w	r8, {r1, r2}
 8023784:	462b      	mov	r3, r5
 8023786:	47b0      	blx	r6
 8023788:	9b03      	ldr	r3, [sp, #12]
 802378a:	8023      	strh	r3, [r4, #0]
 802378c:	9b04      	ldr	r3, [sp, #16]
 802378e:	8063      	strh	r3, [r4, #2]
 8023790:	9b05      	ldr	r3, [sp, #20]
 8023792:	80a3      	strh	r3, [r4, #4]
 8023794:	9b06      	ldr	r3, [sp, #24]
 8023796:	e78b      	b.n	80236b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8023798:	fb09 f202 	mul.w	r2, r9, r2
 802379c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80237a0:	440f      	add	r7, r1
 80237a2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80237a6:	b166      	cbz	r6, 80237c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80237a8:	9a07      	ldr	r2, [sp, #28]
 80237aa:	4592      	cmp	sl, r2
 80237ac:	d109      	bne.n	80237c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80237ae:	f8db 0000 	ldr.w	r0, [fp]
 80237b2:	6802      	ldr	r2, [r0, #0]
 80237b4:	fb09 f303 	mul.w	r3, r9, r3
 80237b8:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80237ba:	4629      	mov	r1, r5
 80237bc:	463a      	mov	r2, r7
 80237be:	47b0      	blx	r6
 80237c0:	e7e2      	b.n	8023788 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80237c2:	fb0a f303 	mul.w	r3, sl, r3
 80237c6:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8023804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80237ca:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80237ce:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80237d2:	4545      	cmp	r5, r8
 80237d4:	d2d8      	bcs.n	8023788 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80237d6:	f8db 0000 	ldr.w	r0, [fp]
 80237da:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80237de:	6802      	ldr	r2, [r0, #0]
 80237e0:	4629      	mov	r1, r5
 80237e2:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 80237e6:	005b      	lsls	r3, r3, #1
 80237e8:	463a      	mov	r2, r7
 80237ea:	47d0      	blx	sl
 80237ec:	444f      	add	r7, r9
 80237ee:	4435      	add	r5, r6
 80237f0:	e7ef      	b.n	80237d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80237f2:	bf00      	nop
 80237f4:	200138d8 	.word	0x200138d8
 80237f8:	200138da 	.word	0x200138da
 80237fc:	200138dc 	.word	0x200138dc
 8023800:	200138de 	.word	0x200138de
 8023804:	200138e4 	.word	0x200138e4

08023808 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8023808:	b5f0      	push	{r4, r5, r6, r7, lr}
 802380a:	4606      	mov	r6, r0
 802380c:	b087      	sub	sp, #28
 802380e:	460c      	mov	r4, r1
 8023810:	4617      	mov	r7, r2
 8023812:	461d      	mov	r5, r3
 8023814:	b333      	cbz	r3, 8023864 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8023816:	4608      	mov	r0, r1
 8023818:	f7f1 fe39 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 802381c:	bb10      	cbnz	r0, 8023864 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802381e:	6820      	ldr	r0, [r4, #0]
 8023820:	6861      	ldr	r1, [r4, #4]
 8023822:	4c1c      	ldr	r4, [pc, #112]	@ (8023894 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8023824:	ab04      	add	r3, sp, #16
 8023826:	c303      	stmia	r3!, {r0, r1}
 8023828:	a804      	add	r0, sp, #16
 802382a:	f7f7 fc37 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802382e:	6820      	ldr	r0, [r4, #0]
 8023830:	6803      	ldr	r3, [r0, #0]
 8023832:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023834:	4798      	blx	r3
 8023836:	2dff      	cmp	r5, #255	@ 0xff
 8023838:	d016      	beq.n	8023868 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 802383a:	f010 0f08 	tst.w	r0, #8
 802383e:	6820      	ldr	r0, [r4, #0]
 8023840:	d015      	beq.n	802386e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8023842:	2400      	movs	r4, #0
 8023844:	6801      	ldr	r1, [r0, #0]
 8023846:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 802384a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 802384e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8023852:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8023856:	9401      	str	r4, [sp, #4]
 8023858:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 802385c:	9400      	str	r4, [sp, #0]
 802385e:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8023860:	4639      	mov	r1, r7
 8023862:	47a0      	blx	r4
 8023864:	b007      	add	sp, #28
 8023866:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023868:	f010 0f02 	tst.w	r0, #2
 802386c:	e7e7      	b.n	802383e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 802386e:	6803      	ldr	r3, [r0, #0]
 8023870:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023872:	4798      	blx	r3
 8023874:	4b08      	ldr	r3, [pc, #32]	@ (8023898 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8023876:	881a      	ldrh	r2, [r3, #0]
 8023878:	6833      	ldr	r3, [r6, #0]
 802387a:	e9cd 7500 	strd	r7, r5, [sp]
 802387e:	4601      	mov	r1, r0
 8023880:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8023882:	4630      	mov	r0, r6
 8023884:	ab04      	add	r3, sp, #16
 8023886:	47a8      	blx	r5
 8023888:	6820      	ldr	r0, [r4, #0]
 802388a:	6803      	ldr	r3, [r0, #0]
 802388c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802388e:	4798      	blx	r3
 8023890:	e7e8      	b.n	8023864 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8023892:	bf00      	nop
 8023894:	200138e4 	.word	0x200138e4
 8023898:	200138de 	.word	0x200138de

0802389c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 802389c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80238a0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80238a4:	9e08      	ldr	r6, [sp, #32]
 80238a6:	4688      	mov	r8, r1
 80238a8:	4614      	mov	r4, r2
 80238aa:	461d      	mov	r5, r3
 80238ac:	2f00      	cmp	r7, #0
 80238ae:	f000 80a9 	beq.w	8023a04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80238b2:	4618      	mov	r0, r3
 80238b4:	f7f1 fdeb 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 80238b8:	2800      	cmp	r0, #0
 80238ba:	f040 80a3 	bne.w	8023a04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80238be:	f9b5 1000 	ldrsh.w	r1, [r5]
 80238c2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80238c6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80238ca:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80238ce:	fb04 1303 	mla	r3, r4, r3, r1
 80238d2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80238d6:	4365      	muls	r5, r4
 80238d8:	2fff      	cmp	r7, #255	@ 0xff
 80238da:	eba4 0200 	sub.w	r2, r4, r0
 80238de:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80238e2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80238e6:	d04a      	beq.n	802397e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80238e8:	b2bc      	uxth	r4, r7
 80238ea:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 80238ee:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80238f2:	fa5f f788 	uxtb.w	r7, r8
 80238f6:	b2f3      	uxtb	r3, r6
 80238f8:	0040      	lsls	r0, r0, #1
 80238fa:	fb0e fe04 	mul.w	lr, lr, r4
 80238fe:	4367      	muls	r7, r4
 8023900:	4363      	muls	r3, r4
 8023902:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8023906:	fa1f fc8c 	uxth.w	ip, ip
 802390a:	42a9      	cmp	r1, r5
 802390c:	d27a      	bcs.n	8023a04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 802390e:	eb01 0900 	add.w	r9, r1, r0
 8023912:	4549      	cmp	r1, r9
 8023914:	d231      	bcs.n	802397a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8023916:	880a      	ldrh	r2, [r1, #0]
 8023918:	1214      	asrs	r4, r2, #8
 802391a:	10d6      	asrs	r6, r2, #3
 802391c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8023920:	00d2      	lsls	r2, r2, #3
 8023922:	b2d2      	uxtb	r2, r2
 8023924:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023928:	fb14 f40c 	smulbb	r4, r4, ip
 802392c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023930:	4474      	add	r4, lr
 8023932:	fb12 f20c 	smulbb	r2, r2, ip
 8023936:	b2a4      	uxth	r4, r4
 8023938:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802393c:	441a      	add	r2, r3
 802393e:	b292      	uxth	r2, r2
 8023940:	f104 0a01 	add.w	sl, r4, #1
 8023944:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8023948:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802394c:	fb16 f60c 	smulbb	r6, r6, ip
 8023950:	f102 0a01 	add.w	sl, r2, #1
 8023954:	443e      	add	r6, r7
 8023956:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802395a:	b2b6      	uxth	r6, r6
 802395c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8023960:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023964:	4322      	orrs	r2, r4
 8023966:	1c74      	adds	r4, r6, #1
 8023968:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 802396c:	0976      	lsrs	r6, r6, #5
 802396e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8023972:	4332      	orrs	r2, r6
 8023974:	f821 2b02 	strh.w	r2, [r1], #2
 8023978:	e7cb      	b.n	8023912 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 802397a:	4441      	add	r1, r8
 802397c:	e7c5      	b.n	802390a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 802397e:	4f22      	ldr	r7, [pc, #136]	@ (8023a08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8023980:	0973      	lsrs	r3, r6, #5
 8023982:	ea08 0707 	and.w	r7, r8, r7
 8023986:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802398a:	433b      	orrs	r3, r7
 802398c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8023990:	4333      	orrs	r3, r6
 8023992:	07e7      	lsls	r7, r4, #31
 8023994:	b29b      	uxth	r3, r3
 8023996:	d50b      	bpl.n	80239b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8023998:	0040      	lsls	r0, r0, #1
 802399a:	0052      	lsls	r2, r2, #1
 802399c:	42a9      	cmp	r1, r5
 802399e:	d231      	bcs.n	8023a04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80239a0:	180c      	adds	r4, r1, r0
 80239a2:	42a1      	cmp	r1, r4
 80239a4:	d202      	bcs.n	80239ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80239a6:	f821 3b02 	strh.w	r3, [r1], #2
 80239aa:	e7fa      	b.n	80239a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80239ac:	4411      	add	r1, r2
 80239ae:	e7f5      	b.n	802399c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80239b0:	078e      	lsls	r6, r1, #30
 80239b2:	d008      	beq.n	80239c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80239b4:	0066      	lsls	r6, r4, #1
 80239b6:	460a      	mov	r2, r1
 80239b8:	42aa      	cmp	r2, r5
 80239ba:	d202      	bcs.n	80239c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80239bc:	8013      	strh	r3, [r2, #0]
 80239be:	4432      	add	r2, r6
 80239c0:	e7fa      	b.n	80239b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80239c2:	3102      	adds	r1, #2
 80239c4:	3801      	subs	r0, #1
 80239c6:	07c2      	lsls	r2, r0, #31
 80239c8:	d50b      	bpl.n	80239e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80239ca:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 80239ce:	3a01      	subs	r2, #1
 80239d0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80239d4:	0066      	lsls	r6, r4, #1
 80239d6:	42aa      	cmp	r2, r5
 80239d8:	d202      	bcs.n	80239e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80239da:	8013      	strh	r3, [r2, #0]
 80239dc:	4432      	add	r2, r6
 80239de:	e7fa      	b.n	80239d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80239e0:	3801      	subs	r0, #1
 80239e2:	b178      	cbz	r0, 8023a04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80239e4:	1040      	asrs	r0, r0, #1
 80239e6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80239ea:	0080      	lsls	r0, r0, #2
 80239ec:	0064      	lsls	r4, r4, #1
 80239ee:	42a9      	cmp	r1, r5
 80239f0:	d208      	bcs.n	8023a04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80239f2:	180e      	adds	r6, r1, r0
 80239f4:	460a      	mov	r2, r1
 80239f6:	42b2      	cmp	r2, r6
 80239f8:	d202      	bcs.n	8023a00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80239fa:	f842 3b04 	str.w	r3, [r2], #4
 80239fe:	e7fa      	b.n	80239f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8023a00:	4421      	add	r1, r4
 8023a02:	e7f4      	b.n	80239ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8023a04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023a08:	00fff800 	.word	0x00fff800

08023a0c <_ZN8touchgfx8LCD16bppC1Ev>:
 8023a0c:	2200      	movs	r2, #0
 8023a0e:	4912      	ldr	r1, [pc, #72]	@ (8023a58 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8023a10:	6001      	str	r1, [r0, #0]
 8023a12:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8023a16:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8023a1a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8023a1e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8023a22:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8023a26:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8023a2a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8023a2e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8023a32:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8023a36:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8023a3a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8023a3e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8023a42:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8023a46:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8023a4a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8023a4e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8023a52:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8023a56:	4770      	bx	lr
 8023a58:	08033920 	.word	0x08033920

08023a5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8023a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a60:	460d      	mov	r5, r1
 8023a62:	b08d      	sub	sp, #52	@ 0x34
 8023a64:	4604      	mov	r4, r0
 8023a66:	6808      	ldr	r0, [r1, #0]
 8023a68:	6849      	ldr	r1, [r1, #4]
 8023a6a:	4699      	mov	r9, r3
 8023a6c:	ab08      	add	r3, sp, #32
 8023a6e:	c303      	stmia	r3!, {r0, r1}
 8023a70:	6810      	ldr	r0, [r2, #0]
 8023a72:	6851      	ldr	r1, [r2, #4]
 8023a74:	ab0a      	add	r3, sp, #40	@ 0x28
 8023a76:	c303      	stmia	r3!, {r0, r1}
 8023a78:	a808      	add	r0, sp, #32
 8023a7a:	f7f7 fb0f 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023a7e:	4629      	mov	r1, r5
 8023a80:	a80a      	add	r0, sp, #40	@ 0x28
 8023a82:	f7f7 fb4f 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023a86:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8023a8a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8023a8e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8023a92:	4d63      	ldr	r5, [pc, #396]	@ (8023c20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8023a94:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8023a98:	6828      	ldr	r0, [r5, #0]
 8023a9a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8023a9e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023aa2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8023aa6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8023aaa:	440a      	add	r2, r1
 8023aac:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8023ab0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8023ab4:	4413      	add	r3, r2
 8023ab6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8023aba:	6803      	ldr	r3, [r0, #0]
 8023abc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023abe:	4798      	blx	r3
 8023ac0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023ac4:	d119      	bne.n	8023afa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8023ac6:	f010 0f20 	tst.w	r0, #32
 8023aca:	6828      	ldr	r0, [r5, #0]
 8023acc:	d018      	beq.n	8023b00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8023ace:	2500      	movs	r5, #0
 8023ad0:	6801      	ldr	r1, [r0, #0]
 8023ad2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023ad6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8023ada:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8023ade:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8023ae2:	9502      	str	r5, [sp, #8]
 8023ae4:	b2b6      	uxth	r6, r6
 8023ae6:	fa1f f588 	uxth.w	r5, r8
 8023aea:	9601      	str	r6, [sp, #4]
 8023aec:	9500      	str	r5, [sp, #0]
 8023aee:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8023af0:	4621      	mov	r1, r4
 8023af2:	47a8      	blx	r5
 8023af4:	b00d      	add	sp, #52	@ 0x34
 8023af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023afa:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8023afe:	e7e4      	b.n	8023aca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8023b00:	6803      	ldr	r3, [r0, #0]
 8023b02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023b04:	4798      	blx	r3
 8023b06:	4947      	ldr	r1, [pc, #284]	@ (8023c24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8023b08:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8023b0c:	880b      	ldrh	r3, [r1, #0]
 8023b0e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8023b12:	fb03 5202 	mla	r2, r3, r2, r5
 8023b16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023b1a:	4373      	muls	r3, r6
 8023b1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8023b20:	9307      	str	r3, [sp, #28]
 8023b22:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8023b26:	9306      	str	r3, [sp, #24]
 8023b28:	468a      	mov	sl, r1
 8023b2a:	9b07      	ldr	r3, [sp, #28]
 8023b2c:	4298      	cmp	r0, r3
 8023b2e:	d270      	bcs.n	8023c12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8023b30:	9b06      	ldr	r3, [sp, #24]
 8023b32:	4621      	mov	r1, r4
 8023b34:	eb00 0b03 	add.w	fp, r0, r3
 8023b38:	4558      	cmp	r0, fp
 8023b3a:	d25d      	bcs.n	8023bf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8023b3c:	f851 4b04 	ldr.w	r4, [r1], #4
 8023b40:	0e23      	lsrs	r3, r4, #24
 8023b42:	d014      	beq.n	8023b6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8023b44:	2bff      	cmp	r3, #255	@ 0xff
 8023b46:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8023b4a:	d112      	bne.n	8023b72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8023b4c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023b50:	d10f      	bne.n	8023b72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8023b52:	0963      	lsrs	r3, r4, #5
 8023b54:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8023b58:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023b5c:	f02c 0c07 	bic.w	ip, ip, #7
 8023b60:	ea43 0c0c 	orr.w	ip, r3, ip
 8023b64:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8023b68:	ea4c 0404 	orr.w	r4, ip, r4
 8023b6c:	8004      	strh	r4, [r0, #0]
 8023b6e:	3002      	adds	r0, #2
 8023b70:	e7e2      	b.n	8023b38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8023b72:	fb09 f303 	mul.w	r3, r9, r3
 8023b76:	8807      	ldrh	r7, [r0, #0]
 8023b78:	1c5a      	adds	r2, r3, #1
 8023b7a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8023b7e:	1212      	asrs	r2, r2, #8
 8023b80:	123e      	asrs	r6, r7, #8
 8023b82:	b293      	uxth	r3, r2
 8023b84:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8023b88:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8023b8c:	43d2      	mvns	r2, r2
 8023b8e:	b2d2      	uxtb	r2, r2
 8023b90:	10fd      	asrs	r5, r7, #3
 8023b92:	fb1e fe03 	smulbb	lr, lr, r3
 8023b96:	00ff      	lsls	r7, r7, #3
 8023b98:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8023b9c:	fb06 e602 	mla	r6, r6, r2, lr
 8023ba0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023ba4:	b2ff      	uxtb	r7, r7
 8023ba6:	fa5f fc8c 	uxtb.w	ip, ip
 8023baa:	b2e4      	uxtb	r4, r4
 8023bac:	b2b6      	uxth	r6, r6
 8023bae:	fb1c fc03 	smulbb	ip, ip, r3
 8023bb2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8023bb6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8023bba:	fb14 f403 	smulbb	r4, r4, r3
 8023bbe:	fb05 c502 	mla	r5, r5, r2, ip
 8023bc2:	f106 0e01 	add.w	lr, r6, #1
 8023bc6:	fb07 4702 	mla	r7, r7, r2, r4
 8023bca:	b2ad      	uxth	r5, r5
 8023bcc:	b2bf      	uxth	r7, r7
 8023bce:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8023bd2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8023bd6:	f105 0c01 	add.w	ip, r5, #1
 8023bda:	1c7e      	adds	r6, r7, #1
 8023bdc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8023be0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023be4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8023be8:	096d      	lsrs	r5, r5, #5
 8023bea:	ea46 060e 	orr.w	r6, r6, lr
 8023bee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023bf2:	432e      	orrs	r6, r5
 8023bf4:	8006      	strh	r6, [r0, #0]
 8023bf6:	e7ba      	b.n	8023b6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8023bf8:	f8ba 3000 	ldrh.w	r3, [sl]
 8023bfc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8023c00:	eba3 0308 	sub.w	r3, r3, r8
 8023c04:	eba4 0408 	sub.w	r4, r4, r8
 8023c08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8023c0c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8023c10:	e78b      	b.n	8023b2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8023c12:	4b03      	ldr	r3, [pc, #12]	@ (8023c20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8023c14:	6818      	ldr	r0, [r3, #0]
 8023c16:	6803      	ldr	r3, [r0, #0]
 8023c18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023c1a:	4798      	blx	r3
 8023c1c:	e76a      	b.n	8023af4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8023c1e:	bf00      	nop
 8023c20:	200138e4 	.word	0x200138e4
 8023c24:	200138de 	.word	0x200138de

08023c28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8023c28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023c2c:	460c      	mov	r4, r1
 8023c2e:	b085      	sub	sp, #20
 8023c30:	6810      	ldr	r0, [r2, #0]
 8023c32:	6851      	ldr	r1, [r2, #4]
 8023c34:	466d      	mov	r5, sp
 8023c36:	c503      	stmia	r5!, {r0, r1}
 8023c38:	6818      	ldr	r0, [r3, #0]
 8023c3a:	6859      	ldr	r1, [r3, #4]
 8023c3c:	4616      	mov	r6, r2
 8023c3e:	c503      	stmia	r5!, {r0, r1}
 8023c40:	4668      	mov	r0, sp
 8023c42:	f7f7 fa2b 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023c46:	4631      	mov	r1, r6
 8023c48:	a802      	add	r0, sp, #8
 8023c4a:	f7f7 fa6b 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023c4e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8023c52:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8023c56:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8023c5a:	4d28      	ldr	r5, [pc, #160]	@ (8023cfc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8023c5c:	4e28      	ldr	r6, [pc, #160]	@ (8023d00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8023c5e:	6828      	ldr	r0, [r5, #0]
 8023c60:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8023c64:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8023c68:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023c6c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8023c70:	f8bd 1000 	ldrh.w	r1, [sp]
 8023c74:	440a      	add	r2, r1
 8023c76:	f8ad 2008 	strh.w	r2, [sp, #8]
 8023c7a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8023c7e:	4413      	add	r3, r2
 8023c80:	f8ad 300a 	strh.w	r3, [sp, #10]
 8023c84:	6803      	ldr	r3, [r0, #0]
 8023c86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023c88:	4798      	blx	r3
 8023c8a:	8833      	ldrh	r3, [r6, #0]
 8023c8c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8023c90:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8023c94:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8023d04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8023c98:	fb03 1202 	mla	r2, r3, r2, r1
 8023c9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023ca0:	fb08 f303 	mul.w	r3, r8, r3
 8023ca4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8023ca8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8023cac:	4298      	cmp	r0, r3
 8023cae:	d21d      	bcs.n	8023cec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8023cb0:	eb00 080c 	add.w	r8, r0, ip
 8023cb4:	4540      	cmp	r0, r8
 8023cb6:	d20f      	bcs.n	8023cd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8023cb8:	f854 1b04 	ldr.w	r1, [r4], #4
 8023cbc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8023cc0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8023cc4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8023cc8:	ea42 0209 	orr.w	r2, r2, r9
 8023ccc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023cd0:	430a      	orrs	r2, r1
 8023cd2:	f820 2b02 	strh.w	r2, [r0], #2
 8023cd6:	e7ed      	b.n	8023cb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8023cd8:	8832      	ldrh	r2, [r6, #0]
 8023cda:	1bd2      	subs	r2, r2, r7
 8023cdc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023ce0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8023ce4:	1bd2      	subs	r2, r2, r7
 8023ce6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8023cea:	e7df      	b.n	8023cac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8023cec:	6828      	ldr	r0, [r5, #0]
 8023cee:	6803      	ldr	r3, [r0, #0]
 8023cf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023cf2:	4798      	blx	r3
 8023cf4:	b005      	add	sp, #20
 8023cf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023cfa:	bf00      	nop
 8023cfc:	200138e4 	.word	0x200138e4
 8023d00:	200138de 	.word	0x200138de
 8023d04:	fffff800 	.word	0xfffff800

08023d08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8023d08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023d0c:	460e      	mov	r6, r1
 8023d0e:	b08e      	sub	sp, #56	@ 0x38
 8023d10:	4604      	mov	r4, r0
 8023d12:	6808      	ldr	r0, [r1, #0]
 8023d14:	6849      	ldr	r1, [r1, #4]
 8023d16:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8023ef0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8023d1a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8023ef4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8023d1e:	461d      	mov	r5, r3
 8023d20:	ab0a      	add	r3, sp, #40	@ 0x28
 8023d22:	c303      	stmia	r3!, {r0, r1}
 8023d24:	6810      	ldr	r0, [r2, #0]
 8023d26:	6851      	ldr	r1, [r2, #4]
 8023d28:	ab0c      	add	r3, sp, #48	@ 0x30
 8023d2a:	c303      	stmia	r3!, {r0, r1}
 8023d2c:	a80a      	add	r0, sp, #40	@ 0x28
 8023d2e:	f7f7 f9b5 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023d32:	4631      	mov	r1, r6
 8023d34:	a80c      	add	r0, sp, #48	@ 0x30
 8023d36:	f7f7 f9f5 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023d3a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8023d3e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8023d42:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8023d46:	f8d8 0000 	ldr.w	r0, [r8]
 8023d4a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8023d4e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8023d52:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023d56:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023d5a:	440c      	add	r4, r1
 8023d5c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8023d60:	440a      	add	r2, r1
 8023d62:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023d66:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8023d6a:	4413      	add	r3, r2
 8023d6c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8023d70:	6803      	ldr	r3, [r0, #0]
 8023d72:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023d74:	4798      	blx	r3
 8023d76:	2dff      	cmp	r5, #255	@ 0xff
 8023d78:	d124      	bne.n	8023dc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8023d7a:	f010 0f01 	tst.w	r0, #1
 8023d7e:	f8d8 0000 	ldr.w	r0, [r8]
 8023d82:	d022      	beq.n	8023dca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8023d84:	2100      	movs	r1, #0
 8023d86:	f8d0 c000 	ldr.w	ip, [r0]
 8023d8a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8023d8e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8023d92:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8023d96:	f04f 0e01 	mov.w	lr, #1
 8023d9a:	f8cd e018 	str.w	lr, [sp, #24]
 8023d9e:	f8b9 e000 	ldrh.w	lr, [r9]
 8023da2:	9503      	str	r5, [sp, #12]
 8023da4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8023da8:	b2b6      	uxth	r6, r6
 8023daa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8023dae:	9102      	str	r1, [sp, #8]
 8023db0:	b2bf      	uxth	r7, r7
 8023db2:	9601      	str	r6, [sp, #4]
 8023db4:	9700      	str	r7, [sp, #0]
 8023db6:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8023dba:	4621      	mov	r1, r4
 8023dbc:	47a8      	blx	r5
 8023dbe:	b00e      	add	sp, #56	@ 0x38
 8023dc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023dc4:	f010 0f04 	tst.w	r0, #4
 8023dc8:	e7d9      	b.n	8023d7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8023dca:	6803      	ldr	r3, [r0, #0]
 8023dcc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023dce:	4798      	blx	r3
 8023dd0:	f8b9 3000 	ldrh.w	r3, [r9]
 8023dd4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8023dd8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8023ddc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8023de0:	fb03 1202 	mla	r2, r3, r2, r1
 8023de4:	ebac 0c07 	sub.w	ip, ip, r7
 8023de8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8023dec:	435e      	muls	r6, r3
 8023dee:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8023df2:	2dff      	cmp	r5, #255	@ 0xff
 8023df4:	eba3 0707 	sub.w	r7, r3, r7
 8023df8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8023dfc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023e00:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8023e04:	d049      	beq.n	8023e9a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8023e06:	43eb      	mvns	r3, r5
 8023e08:	fa1f f985 	uxth.w	r9, r5
 8023e0c:	b2db      	uxtb	r3, r3
 8023e0e:	42b0      	cmp	r0, r6
 8023e10:	d266      	bcs.n	8023ee0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8023e12:	eb00 0a0e 	add.w	sl, r0, lr
 8023e16:	4550      	cmp	r0, sl
 8023e18:	4621      	mov	r1, r4
 8023e1a:	f104 0403 	add.w	r4, r4, #3
 8023e1e:	d25b      	bcs.n	8023ed8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8023e20:	8802      	ldrh	r2, [r0, #0]
 8023e22:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8023e26:	ea4f 2822 	mov.w	r8, r2, asr #8
 8023e2a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8023e2e:	fb11 f109 	smulbb	r1, r1, r9
 8023e32:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8023e36:	10d5      	asrs	r5, r2, #3
 8023e38:	fb08 1803 	mla	r8, r8, r3, r1
 8023e3c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8023e40:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023e44:	fb11 f109 	smulbb	r1, r1, r9
 8023e48:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8023e4c:	fb05 1503 	mla	r5, r5, r3, r1
 8023e50:	00d2      	lsls	r2, r2, #3
 8023e52:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8023e56:	b2d2      	uxtb	r2, r2
 8023e58:	fb11 f109 	smulbb	r1, r1, r9
 8023e5c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023e60:	fa1f f888 	uxth.w	r8, r8
 8023e64:	fb02 1203 	mla	r2, r2, r3, r1
 8023e68:	b292      	uxth	r2, r2
 8023e6a:	f108 0101 	add.w	r1, r8, #1
 8023e6e:	b2ad      	uxth	r5, r5
 8023e70:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8023e74:	1c51      	adds	r1, r2, #1
 8023e76:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023e7a:	1c69      	adds	r1, r5, #1
 8023e7c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023e80:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8023e84:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023e88:	096d      	lsrs	r5, r5, #5
 8023e8a:	ea42 0208 	orr.w	r2, r2, r8
 8023e8e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023e92:	432a      	orrs	r2, r5
 8023e94:	f820 2b02 	strh.w	r2, [r0], #2
 8023e98:	e7bd      	b.n	8023e16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8023e9a:	4a14      	ldr	r2, [pc, #80]	@ (8023eec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8023e9c:	42b0      	cmp	r0, r6
 8023e9e:	d21f      	bcs.n	8023ee0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8023ea0:	eb00 050e 	add.w	r5, r0, lr
 8023ea4:	42a8      	cmp	r0, r5
 8023ea6:	4621      	mov	r1, r4
 8023ea8:	f104 0403 	add.w	r4, r4, #3
 8023eac:	d210      	bcs.n	8023ed0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8023eae:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8023eb2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8023eb6:	00db      	lsls	r3, r3, #3
 8023eb8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8023ebc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023ec0:	430b      	orrs	r3, r1
 8023ec2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8023ec6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8023eca:	f820 3b02 	strh.w	r3, [r0], #2
 8023ece:	e7e9      	b.n	8023ea4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8023ed0:	4438      	add	r0, r7
 8023ed2:	eb01 040c 	add.w	r4, r1, ip
 8023ed6:	e7e1      	b.n	8023e9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8023ed8:	4438      	add	r0, r7
 8023eda:	eb01 040c 	add.w	r4, r1, ip
 8023ede:	e796      	b.n	8023e0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8023ee0:	4b03      	ldr	r3, [pc, #12]	@ (8023ef0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8023ee2:	6818      	ldr	r0, [r3, #0]
 8023ee4:	6803      	ldr	r3, [r0, #0]
 8023ee6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8023ee8:	4798      	blx	r3
 8023eea:	e768      	b.n	8023dbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8023eec:	fffff800 	.word	0xfffff800
 8023ef0:	200138e4 	.word	0x200138e4
 8023ef4:	200138de 	.word	0x200138de

08023ef8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8023ef8:	b4f0      	push	{r4, r5, r6, r7}
 8023efa:	4616      	mov	r6, r2
 8023efc:	2e01      	cmp	r6, #1
 8023efe:	461c      	mov	r4, r3
 8023f00:	460d      	mov	r5, r1
 8023f02:	9a04      	ldr	r2, [sp, #16]
 8023f04:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8023f08:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8023f0c:	d012      	beq.n	8023f34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8023f0e:	d303      	bcc.n	8023f18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8023f10:	2e02      	cmp	r6, #2
 8023f12:	d00a      	beq.n	8023f2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8023f14:	bcf0      	pop	{r4, r5, r6, r7}
 8023f16:	4770      	bx	lr
 8023f18:	6805      	ldr	r5, [r0, #0]
 8023f1a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8023f1e:	68ed      	ldr	r5, [r5, #12]
 8023f20:	4613      	mov	r3, r2
 8023f22:	46ac      	mov	ip, r5
 8023f24:	4622      	mov	r2, r4
 8023f26:	bcf0      	pop	{r4, r5, r6, r7}
 8023f28:	4760      	bx	ip
 8023f2a:	4621      	mov	r1, r4
 8023f2c:	4628      	mov	r0, r5
 8023f2e:	bcf0      	pop	{r4, r5, r6, r7}
 8023f30:	f7ff bd94 	b.w	8023a5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8023f34:	4621      	mov	r1, r4
 8023f36:	4628      	mov	r0, r5
 8023f38:	bcf0      	pop	{r4, r5, r6, r7}
 8023f3a:	f7ff bee5 	b.w	8023d08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08023f40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8023f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f44:	4681      	mov	r9, r0
 8023f46:	b093      	sub	sp, #76	@ 0x4c
 8023f48:	6810      	ldr	r0, [r2, #0]
 8023f4a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8023f4e:	4f6d      	ldr	r7, [pc, #436]	@ (8024104 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8023f50:	4688      	mov	r8, r1
 8023f52:	6851      	ldr	r1, [r2, #4]
 8023f54:	ac0e      	add	r4, sp, #56	@ 0x38
 8023f56:	c403      	stmia	r4!, {r0, r1}
 8023f58:	6818      	ldr	r0, [r3, #0]
 8023f5a:	6859      	ldr	r1, [r3, #4]
 8023f5c:	ac10      	add	r4, sp, #64	@ 0x40
 8023f5e:	4616      	mov	r6, r2
 8023f60:	c403      	stmia	r4!, {r0, r1}
 8023f62:	a80e      	add	r0, sp, #56	@ 0x38
 8023f64:	f7f7 f89a 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023f68:	4631      	mov	r1, r6
 8023f6a:	a810      	add	r0, sp, #64	@ 0x40
 8023f6c:	f7f7 f8da 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023f70:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8023f74:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8023f78:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8023f7c:	4e62      	ldr	r6, [pc, #392]	@ (8024108 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8023f7e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8023f82:	6830      	ldr	r0, [r6, #0]
 8023f84:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8023f88:	fb11 2103 	smlabb	r1, r1, r3, r2
 8023f8c:	4489      	add	r9, r1
 8023f8e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8023f92:	440a      	add	r2, r1
 8023f94:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8023f98:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8023f9c:	4413      	add	r3, r2
 8023f9e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8023fa2:	6803      	ldr	r3, [r0, #0]
 8023fa4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8023fa6:	4798      	blx	r3
 8023fa8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8023fac:	6830      	ldr	r0, [r6, #0]
 8023fae:	d01d      	beq.n	8023fec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8023fb0:	2200      	movs	r2, #0
 8023fb2:	6801      	ldr	r1, [r0, #0]
 8023fb4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8023fb8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8023fbc:	220b      	movs	r2, #11
 8023fbe:	9207      	str	r2, [sp, #28]
 8023fc0:	883a      	ldrh	r2, [r7, #0]
 8023fc2:	9206      	str	r2, [sp, #24]
 8023fc4:	2201      	movs	r2, #1
 8023fc6:	e9cd a204 	strd	sl, r2, [sp, #16]
 8023fca:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8023fce:	9203      	str	r2, [sp, #12]
 8023fd0:	b2a4      	uxth	r4, r4
 8023fd2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8023fd6:	9200      	str	r2, [sp, #0]
 8023fd8:	b2ad      	uxth	r5, r5
 8023fda:	9502      	str	r5, [sp, #8]
 8023fdc:	9401      	str	r4, [sp, #4]
 8023fde:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8023fe0:	4642      	mov	r2, r8
 8023fe2:	4649      	mov	r1, r9
 8023fe4:	47a0      	blx	r4
 8023fe6:	b013      	add	sp, #76	@ 0x4c
 8023fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023fec:	6803      	ldr	r3, [r0, #0]
 8023fee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023ff0:	4798      	blx	r3
 8023ff2:	883b      	ldrh	r3, [r7, #0]
 8023ff4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8023ff8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8023ffc:	fb03 1202 	mla	r2, r3, r2, r1
 8024000:	435d      	muls	r5, r3
 8024002:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8024006:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 802400a:	920c      	str	r2, [sp, #48]	@ 0x30
 802400c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8024010:	1b12      	subs	r2, r2, r4
 8024012:	920d      	str	r2, [sp, #52]	@ 0x34
 8024014:	0062      	lsls	r2, r4, #1
 8024016:	1b1c      	subs	r4, r3, r4
 8024018:	0063      	lsls	r3, r4, #1
 802401a:	920a      	str	r2, [sp, #40]	@ 0x28
 802401c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802401e:	f04f 0e04 	mov.w	lr, #4
 8024022:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024024:	4298      	cmp	r0, r3
 8024026:	d266      	bcs.n	80240f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8024028:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802402a:	eb00 0b03 	add.w	fp, r0, r3
 802402e:	4558      	cmp	r0, fp
 8024030:	d25c      	bcs.n	80240ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8024032:	f819 3b01 	ldrb.w	r3, [r9], #1
 8024036:	fb1e e303 	smlabb	r3, lr, r3, lr
 802403a:	f858 2003 	ldr.w	r2, [r8, r3]
 802403e:	0e11      	lsrs	r1, r2, #24
 8024040:	d012      	beq.n	8024068 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8024042:	29ff      	cmp	r1, #255	@ 0xff
 8024044:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8024048:	d110      	bne.n	802406c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 802404a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802404e:	d10d      	bne.n	802406c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8024050:	0953      	lsrs	r3, r2, #5
 8024052:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8024056:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802405a:	f027 0707 	bic.w	r7, r7, #7
 802405e:	431f      	orrs	r7, r3
 8024060:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024064:	433a      	orrs	r2, r7
 8024066:	8002      	strh	r2, [r0, #0]
 8024068:	3002      	adds	r0, #2
 802406a:	e7e0      	b.n	802402e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 802406c:	fb0a f101 	mul.w	r1, sl, r1
 8024070:	8806      	ldrh	r6, [r0, #0]
 8024072:	1c4b      	adds	r3, r1, #1
 8024074:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8024078:	1235      	asrs	r5, r6, #8
 802407a:	10f4      	asrs	r4, r6, #3
 802407c:	121b      	asrs	r3, r3, #8
 802407e:	00f6      	lsls	r6, r6, #3
 8024080:	b299      	uxth	r1, r3
 8024082:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8024086:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802408a:	b2f6      	uxtb	r6, r6
 802408c:	43db      	mvns	r3, r3
 802408e:	b2d2      	uxtb	r2, r2
 8024090:	b2db      	uxtb	r3, r3
 8024092:	fb1c fc01 	smulbb	ip, ip, r1
 8024096:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 802409a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802409e:	fb12 f201 	smulbb	r2, r2, r1
 80240a2:	fb05 c503 	mla	r5, r5, r3, ip
 80240a6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80240aa:	b2ff      	uxtb	r7, r7
 80240ac:	fb06 2203 	mla	r2, r6, r3, r2
 80240b0:	b2ad      	uxth	r5, r5
 80240b2:	fb17 f701 	smulbb	r7, r7, r1
 80240b6:	b292      	uxth	r2, r2
 80240b8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80240bc:	fb04 7403 	mla	r4, r4, r3, r7
 80240c0:	f105 0c01 	add.w	ip, r5, #1
 80240c4:	1c57      	adds	r7, r2, #1
 80240c6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80240ca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80240ce:	b2a4      	uxth	r4, r4
 80240d0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80240d4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80240d8:	433d      	orrs	r5, r7
 80240da:	1c67      	adds	r7, r4, #1
 80240dc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80240e0:	0964      	lsrs	r4, r4, #5
 80240e2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80240e6:	4325      	orrs	r5, r4
 80240e8:	8005      	strh	r5, [r0, #0]
 80240ea:	e7bd      	b.n	8024068 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80240ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80240ee:	4418      	add	r0, r3
 80240f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80240f2:	4499      	add	r9, r3
 80240f4:	e795      	b.n	8024022 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80240f6:	4b04      	ldr	r3, [pc, #16]	@ (8024108 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80240f8:	6818      	ldr	r0, [r3, #0]
 80240fa:	6803      	ldr	r3, [r0, #0]
 80240fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80240fe:	4798      	blx	r3
 8024100:	e771      	b.n	8023fe6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8024102:	bf00      	nop
 8024104:	200138de 	.word	0x200138de
 8024108:	200138e4 	.word	0x200138e4

0802410c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 802410c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024110:	b087      	sub	sp, #28
 8024112:	4680      	mov	r8, r0
 8024114:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8024118:	460d      	mov	r5, r1
 802411a:	4614      	mov	r4, r2
 802411c:	2e00      	cmp	r6, #0
 802411e:	f000 80b9 	beq.w	8024294 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8024122:	6810      	ldr	r0, [r2, #0]
 8024124:	6851      	ldr	r1, [r2, #4]
 8024126:	af02      	add	r7, sp, #8
 8024128:	c703      	stmia	r7!, {r0, r1}
 802412a:	6818      	ldr	r0, [r3, #0]
 802412c:	6859      	ldr	r1, [r3, #4]
 802412e:	af04      	add	r7, sp, #16
 8024130:	c703      	stmia	r7!, {r0, r1}
 8024132:	a802      	add	r0, sp, #8
 8024134:	f7f6 ffb2 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024138:	4621      	mov	r1, r4
 802413a:	a804      	add	r0, sp, #16
 802413c:	f7f6 fff2 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024140:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8024144:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024148:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 802414c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8024150:	fb14 2103 	smlabb	r1, r4, r3, r2
 8024154:	eb08 0401 	add.w	r4, r8, r1
 8024158:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 802415c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8024160:	440a      	add	r2, r1
 8024162:	f8ad 2010 	strh.w	r2, [sp, #16]
 8024166:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802416a:	4413      	add	r3, r2
 802416c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8024170:	4b4a      	ldr	r3, [pc, #296]	@ (802429c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8024172:	6818      	ldr	r0, [r3, #0]
 8024174:	6803      	ldr	r3, [r0, #0]
 8024176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024178:	4798      	blx	r3
 802417a:	4b49      	ldr	r3, [pc, #292]	@ (80242a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 802417c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8024180:	881a      	ldrh	r2, [r3, #0]
 8024182:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8024186:	2eff      	cmp	r6, #255	@ 0xff
 8024188:	fb02 c101 	mla	r1, r2, r1, ip
 802418c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8024190:	fb02 f207 	mul.w	r2, r2, r7
 8024194:	f105 0104 	add.w	r1, r5, #4
 8024198:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 802419c:	461d      	mov	r5, r3
 802419e:	d05a      	beq.n	8024256 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80241a0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 80241a4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80241a8:	b2b6      	uxth	r6, r6
 80241aa:	fa1f fe8e 	uxth.w	lr, lr
 80241ae:	9301      	str	r3, [sp, #4]
 80241b0:	4282      	cmp	r2, r0
 80241b2:	d96a      	bls.n	802428a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80241b4:	eb00 0b0a 	add.w	fp, r0, sl
 80241b8:	4583      	cmp	fp, r0
 80241ba:	d940      	bls.n	802423e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80241bc:	f814 3b01 	ldrb.w	r3, [r4], #1
 80241c0:	8805      	ldrh	r5, [r0, #0]
 80241c2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80241c6:	122f      	asrs	r7, r5, #8
 80241c8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80241cc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80241d0:	fb17 f70e 	smulbb	r7, r7, lr
 80241d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80241d8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80241dc:	00ed      	lsls	r5, r5, #3
 80241de:	fb0c 7c06 	mla	ip, ip, r6, r7
 80241e2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80241e6:	10df      	asrs	r7, r3, #3
 80241e8:	b2ed      	uxtb	r5, r5
 80241ea:	00db      	lsls	r3, r3, #3
 80241ec:	fa1f fc8c 	uxth.w	ip, ip
 80241f0:	fb19 f90e 	smulbb	r9, r9, lr
 80241f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80241f8:	b2db      	uxtb	r3, r3
 80241fa:	fb15 f50e 	smulbb	r5, r5, lr
 80241fe:	fb07 9706 	mla	r7, r7, r6, r9
 8024202:	fb03 5306 	mla	r3, r3, r6, r5
 8024206:	f10c 0901 	add.w	r9, ip, #1
 802420a:	b29b      	uxth	r3, r3
 802420c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8024210:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8024214:	f103 0c01 	add.w	ip, r3, #1
 8024218:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802421c:	b2bf      	uxth	r7, r7
 802421e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024222:	ea4c 0c09 	orr.w	ip, ip, r9
 8024226:	f107 0901 	add.w	r9, r7, #1
 802422a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 802422e:	097f      	lsrs	r7, r7, #5
 8024230:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024234:	ea4c 0c07 	orr.w	ip, ip, r7
 8024238:	f820 cb02 	strh.w	ip, [r0], #2
 802423c:	e7bc      	b.n	80241b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 802423e:	9b01      	ldr	r3, [sp, #4]
 8024240:	881b      	ldrh	r3, [r3, #0]
 8024242:	eba3 0308 	sub.w	r3, r3, r8
 8024246:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802424a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802424e:	eba3 0308 	sub.w	r3, r3, r8
 8024252:	441c      	add	r4, r3
 8024254:	e7ac      	b.n	80241b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8024256:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802425a:	4282      	cmp	r2, r0
 802425c:	d915      	bls.n	802428a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 802425e:	eb00 060a 	add.w	r6, r0, sl
 8024262:	4286      	cmp	r6, r0
 8024264:	d906      	bls.n	8024274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8024266:	f814 3b01 	ldrb.w	r3, [r4], #1
 802426a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802426e:	f820 3b02 	strh.w	r3, [r0], #2
 8024272:	e7f6      	b.n	8024262 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8024274:	882b      	ldrh	r3, [r5, #0]
 8024276:	eba3 0308 	sub.w	r3, r3, r8
 802427a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802427e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8024282:	eba3 0308 	sub.w	r3, r3, r8
 8024286:	441c      	add	r4, r3
 8024288:	e7e7      	b.n	802425a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802428a:	4b04      	ldr	r3, [pc, #16]	@ (802429c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 802428c:	6818      	ldr	r0, [r3, #0]
 802428e:	6803      	ldr	r3, [r0, #0]
 8024290:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8024292:	4798      	blx	r3
 8024294:	b007      	add	sp, #28
 8024296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802429a:	bf00      	nop
 802429c:	200138e4 	.word	0x200138e4
 80242a0:	200138de 	.word	0x200138de

080242a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80242a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80242a8:	b091      	sub	sp, #68	@ 0x44
 80242aa:	4680      	mov	r8, r0
 80242ac:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80242b0:	460f      	mov	r7, r1
 80242b2:	4614      	mov	r4, r2
 80242b4:	2d00      	cmp	r5, #0
 80242b6:	d051      	beq.n	802435c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80242b8:	6810      	ldr	r0, [r2, #0]
 80242ba:	6851      	ldr	r1, [r2, #4]
 80242bc:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80244c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80242c0:	ae0c      	add	r6, sp, #48	@ 0x30
 80242c2:	c603      	stmia	r6!, {r0, r1}
 80242c4:	6818      	ldr	r0, [r3, #0]
 80242c6:	6859      	ldr	r1, [r3, #4]
 80242c8:	ae0e      	add	r6, sp, #56	@ 0x38
 80242ca:	c603      	stmia	r6!, {r0, r1}
 80242cc:	a80c      	add	r0, sp, #48	@ 0x30
 80242ce:	f7f6 fee5 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80242d2:	4621      	mov	r1, r4
 80242d4:	a80e      	add	r0, sp, #56	@ 0x38
 80242d6:	f7f6 ff25 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80242da:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 80242de:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80242e2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80242e6:	f8d9 0000 	ldr.w	r0, [r9]
 80242ea:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80242ee:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 80242f2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80242f6:	eb08 0401 	add.w	r4, r8, r1
 80242fa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80242fe:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 80244c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8024302:	440a      	add	r2, r1
 8024304:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8024308:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 802430c:	4413      	add	r3, r2
 802430e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8024312:	6803      	ldr	r3, [r0, #0]
 8024314:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8024316:	4798      	blx	r3
 8024318:	f010 0f80 	tst.w	r0, #128	@ 0x80
 802431c:	f8d9 0000 	ldr.w	r0, [r9]
 8024320:	d01f      	beq.n	8024362 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8024322:	2200      	movs	r2, #0
 8024324:	6801      	ldr	r1, [r0, #0]
 8024326:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 802432a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 802432e:	220b      	movs	r2, #11
 8024330:	9207      	str	r2, [sp, #28]
 8024332:	f8b8 2000 	ldrh.w	r2, [r8]
 8024336:	9206      	str	r2, [sp, #24]
 8024338:	2201      	movs	r2, #1
 802433a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 802433e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8024342:	9203      	str	r2, [sp, #12]
 8024344:	fa1f f28a 	uxth.w	r2, sl
 8024348:	9202      	str	r2, [sp, #8]
 802434a:	b2b6      	uxth	r6, r6
 802434c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8024350:	9200      	str	r2, [sp, #0]
 8024352:	9601      	str	r6, [sp, #4]
 8024354:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8024356:	463a      	mov	r2, r7
 8024358:	4621      	mov	r1, r4
 802435a:	47a8      	blx	r5
 802435c:	b011      	add	sp, #68	@ 0x44
 802435e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024362:	6803      	ldr	r3, [r0, #0]
 8024364:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8024366:	4798      	blx	r3
 8024368:	f8b8 2000 	ldrh.w	r2, [r8]
 802436c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8024370:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8024374:	2dff      	cmp	r5, #255	@ 0xff
 8024376:	fb02 1303 	mla	r3, r2, r3, r1
 802437a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802437e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8024382:	fb0a fa02 	mul.w	sl, sl, r2
 8024386:	d062      	beq.n	802444e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8024388:	ea6f 0c05 	mvn.w	ip, r5
 802438c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8024390:	930a      	str	r3, [sp, #40]	@ 0x28
 8024392:	b2ad      	uxth	r5, r5
 8024394:	fa5f fc8c 	uxtb.w	ip, ip
 8024398:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 802439c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802439e:	4298      	cmp	r0, r3
 80243a0:	f080 8085 	bcs.w	80244ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80243a4:	eb00 0b09 	add.w	fp, r0, r9
 80243a8:	4558      	cmp	r0, fp
 80243aa:	d246      	bcs.n	802443a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80243ac:	f814 eb01 	ldrb.w	lr, [r4], #1
 80243b0:	2303      	movs	r3, #3
 80243b2:	2204      	movs	r2, #4
 80243b4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80243b8:	eb07 0a0e 	add.w	sl, r7, lr
 80243bc:	8803      	ldrh	r3, [r0, #0]
 80243be:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80243c2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80243c6:	1219      	asrs	r1, r3, #8
 80243c8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80243cc:	fb18 f805 	smulbb	r8, r8, r5
 80243d0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80243d4:	10da      	asrs	r2, r3, #3
 80243d6:	fb01 810c 	mla	r1, r1, ip, r8
 80243da:	00db      	lsls	r3, r3, #3
 80243dc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80243e0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80243e4:	b2db      	uxtb	r3, r3
 80243e6:	fb18 f805 	smulbb	r8, r8, r5
 80243ea:	fb1e fe05 	smulbb	lr, lr, r5
 80243ee:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80243f2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80243f6:	b289      	uxth	r1, r1
 80243f8:	fb02 820c 	mla	r2, r2, ip, r8
 80243fc:	fb03 e30c 	mla	r3, r3, ip, lr
 8024400:	b292      	uxth	r2, r2
 8024402:	b29b      	uxth	r3, r3
 8024404:	f101 0801 	add.w	r8, r1, #1
 8024408:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 802440c:	f103 0e01 	add.w	lr, r3, #1
 8024410:	f102 0801 	add.w	r8, r2, #1
 8024414:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8024418:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 802441c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8024420:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8024424:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8024428:	ea4e 0101 	orr.w	r1, lr, r1
 802442c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8024430:	ea41 0108 	orr.w	r1, r1, r8
 8024434:	f820 1b02 	strh.w	r1, [r0], #2
 8024438:	e7b6      	b.n	80243a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 802443a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802443c:	881b      	ldrh	r3, [r3, #0]
 802443e:	1b9b      	subs	r3, r3, r6
 8024440:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8024444:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8024448:	1b9b      	subs	r3, r3, r6
 802444a:	441c      	add	r4, r3
 802444c:	e7a6      	b.n	802439c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 802444e:	491b      	ldr	r1, [pc, #108]	@ (80244bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8024450:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8024454:	2203      	movs	r2, #3
 8024456:	2504      	movs	r5, #4
 8024458:	4550      	cmp	r0, sl
 802445a:	d228      	bcs.n	80244ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 802445c:	eb00 0c09 	add.w	ip, r0, r9
 8024460:	4560      	cmp	r0, ip
 8024462:	4623      	mov	r3, r4
 8024464:	d219      	bcs.n	802449a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8024466:	f893 e000 	ldrb.w	lr, [r3]
 802446a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 802446e:	eb07 0b0e 	add.w	fp, r7, lr
 8024472:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024476:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802447a:	f89b b001 	ldrb.w	fp, [fp, #1]
 802447e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8024482:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8024486:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802448a:	ea43 030b 	orr.w	r3, r3, fp
 802448e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8024492:	3401      	adds	r4, #1
 8024494:	f820 3b02 	strh.w	r3, [r0], #2
 8024498:	e7e2      	b.n	8024460 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802449a:	f8b8 3000 	ldrh.w	r3, [r8]
 802449e:	1b9b      	subs	r3, r3, r6
 80244a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80244a4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80244a8:	1b9b      	subs	r3, r3, r6
 80244aa:	441c      	add	r4, r3
 80244ac:	e7d4      	b.n	8024458 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80244ae:	4b04      	ldr	r3, [pc, #16]	@ (80244c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80244b0:	6818      	ldr	r0, [r3, #0]
 80244b2:	6803      	ldr	r3, [r0, #0]
 80244b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80244b6:	4798      	blx	r3
 80244b8:	e750      	b.n	802435c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80244ba:	bf00      	nop
 80244bc:	fffff800 	.word	0xfffff800
 80244c0:	200138e4 	.word	0x200138e4
 80244c4:	200138de 	.word	0x200138de

080244c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80244c8:	b4f0      	push	{r4, r5, r6, r7}
 80244ca:	460c      	mov	r4, r1
 80244cc:	4611      	mov	r1, r2
 80244ce:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80244d2:	780f      	ldrb	r7, [r1, #0]
 80244d4:	784e      	ldrb	r6, [r1, #1]
 80244d6:	2f01      	cmp	r7, #1
 80244d8:	461a      	mov	r2, r3
 80244da:	9b04      	ldr	r3, [sp, #16]
 80244dc:	d038      	beq.n	8024550 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 80244de:	d31f      	bcc.n	8024520 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 80244e0:	2f02      	cmp	r7, #2
 80244e2:	d14d      	bne.n	8024580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80244e4:	2e03      	cmp	r6, #3
 80244e6:	d84b      	bhi.n	8024580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80244e8:	e8df f006 	tbb	[pc, r6]
 80244ec:	17140702 	.word	0x17140702
 80244f0:	9504      	str	r5, [sp, #16]
 80244f2:	4620      	mov	r0, r4
 80244f4:	bcf0      	pop	{r4, r5, r6, r7}
 80244f6:	f7ff be09 	b.w	802410c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80244fa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80244fc:	2800      	cmp	r0, #0
 80244fe:	d03f      	beq.n	8024580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8024500:	6806      	ldr	r6, [r0, #0]
 8024502:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8024506:	68b5      	ldr	r5, [r6, #8]
 8024508:	4613      	mov	r3, r2
 802450a:	46ac      	mov	ip, r5
 802450c:	460a      	mov	r2, r1
 802450e:	4621      	mov	r1, r4
 8024510:	bcf0      	pop	{r4, r5, r6, r7}
 8024512:	4760      	bx	ip
 8024514:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8024518:	e7f0      	b.n	80244fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802451a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 802451e:	e7ed      	b.n	80244fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8024520:	2e03      	cmp	r6, #3
 8024522:	d82d      	bhi.n	8024580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8024524:	e8df f006 	tbb	[pc, r6]
 8024528:	110e0702 	.word	0x110e0702
 802452c:	9504      	str	r5, [sp, #16]
 802452e:	4620      	mov	r0, r4
 8024530:	bcf0      	pop	{r4, r5, r6, r7}
 8024532:	f7ff bd05 	b.w	8023f40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8024536:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8024538:	b310      	cbz	r0, 8024580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 802453a:	6806      	ldr	r6, [r0, #0]
 802453c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8024540:	68f5      	ldr	r5, [r6, #12]
 8024542:	e7e1      	b.n	8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8024544:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8024548:	e7f6      	b.n	8024538 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 802454a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 802454e:	e7f3      	b.n	8024538 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8024550:	2e03      	cmp	r6, #3
 8024552:	d815      	bhi.n	8024580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8024554:	e8df f006 	tbb	[pc, r6]
 8024558:	110e0702 	.word	0x110e0702
 802455c:	9504      	str	r5, [sp, #16]
 802455e:	4620      	mov	r0, r4
 8024560:	bcf0      	pop	{r4, r5, r6, r7}
 8024562:	f7ff be9f 	b.w	80242a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8024566:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8024568:	b150      	cbz	r0, 8024580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 802456a:	6806      	ldr	r6, [r0, #0]
 802456c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8024570:	6935      	ldr	r5, [r6, #16]
 8024572:	e7c9      	b.n	8024508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8024574:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8024578:	e7f6      	b.n	8024568 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 802457a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 802457e:	e7f3      	b.n	8024568 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8024580:	bcf0      	pop	{r4, r5, r6, r7}
 8024582:	4770      	bx	lr

08024584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8024584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024588:	4604      	mov	r4, r0
 802458a:	b087      	sub	sp, #28
 802458c:	6810      	ldr	r0, [r2, #0]
 802458e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8024592:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 80247cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8024596:	460e      	mov	r6, r1
 8024598:	6851      	ldr	r1, [r2, #4]
 802459a:	ad02      	add	r5, sp, #8
 802459c:	c503      	stmia	r5!, {r0, r1}
 802459e:	6818      	ldr	r0, [r3, #0]
 80245a0:	6859      	ldr	r1, [r3, #4]
 80245a2:	ad04      	add	r5, sp, #16
 80245a4:	4617      	mov	r7, r2
 80245a6:	c503      	stmia	r5!, {r0, r1}
 80245a8:	a802      	add	r0, sp, #8
 80245aa:	f7f6 fd77 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80245ae:	4639      	mov	r1, r7
 80245b0:	a804      	add	r0, sp, #16
 80245b2:	f7f6 fdb7 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80245b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80245ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80245be:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80245c2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80245c6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80245ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80245ce:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80245d2:	440e      	add	r6, r1
 80245d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80245d8:	440a      	add	r2, r1
 80245da:	f8ad 2010 	strh.w	r2, [sp, #16]
 80245de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80245e2:	4413      	add	r3, r2
 80245e4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80245e8:	4b77      	ldr	r3, [pc, #476]	@ (80247c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80245ea:	6818      	ldr	r0, [r3, #0]
 80245ec:	6803      	ldr	r3, [r0, #0]
 80245ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80245f0:	4798      	blx	r3
 80245f2:	f8b9 b000 	ldrh.w	fp, [r9]
 80245f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80245fa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80245fe:	fb0b 2303 	mla	r3, fp, r3, r2
 8024602:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8024606:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802460a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802460e:	fb05 f50b 	mul.w	r5, r5, fp
 8024612:	9300      	str	r3, [sp, #0]
 8024614:	d069      	beq.n	80246ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8024616:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 802461a:	4558      	cmp	r0, fp
 802461c:	f080 80cc 	bcs.w	80247b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8024620:	9b00      	ldr	r3, [sp, #0]
 8024622:	18c3      	adds	r3, r0, r3
 8024624:	9301      	str	r3, [sp, #4]
 8024626:	4631      	mov	r1, r6
 8024628:	9b01      	ldr	r3, [sp, #4]
 802462a:	4298      	cmp	r0, r3
 802462c:	d24f      	bcs.n	80246ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 802462e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8024632:	2a00      	cmp	r2, #0
 8024634:	d048      	beq.n	80246c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8024636:	fb0a f202 	mul.w	r2, sl, r2
 802463a:	1c53      	adds	r3, r2, #1
 802463c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024640:	121b      	asrs	r3, r3, #8
 8024642:	d041      	beq.n	80246c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8024644:	8802      	ldrh	r2, [r0, #0]
 8024646:	f8b4 c000 	ldrh.w	ip, [r4]
 802464a:	b29e      	uxth	r6, r3
 802464c:	1215      	asrs	r5, r2, #8
 802464e:	43db      	mvns	r3, r3
 8024650:	b2db      	uxtb	r3, r3
 8024652:	ea4f 272c 	mov.w	r7, ip, asr #8
 8024656:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802465a:	fb15 f503 	smulbb	r5, r5, r3
 802465e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8024662:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8024666:	00d2      	lsls	r2, r2, #3
 8024668:	fb07 5706 	mla	r7, r7, r6, r5
 802466c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8024670:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8024674:	b2d2      	uxtb	r2, r2
 8024676:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802467a:	b2bf      	uxth	r7, r7
 802467c:	fb1e fe03 	smulbb	lr, lr, r3
 8024680:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8024684:	fa5f fc8c 	uxtb.w	ip, ip
 8024688:	fb12 f203 	smulbb	r2, r2, r3
 802468c:	fb05 e506 	mla	r5, r5, r6, lr
 8024690:	fb0c 2c06 	mla	ip, ip, r6, r2
 8024694:	f107 0e01 	add.w	lr, r7, #1
 8024698:	fa1f fc8c 	uxth.w	ip, ip
 802469c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80246a0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80246a4:	f10c 0701 	add.w	r7, ip, #1
 80246a8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80246ac:	b2ad      	uxth	r5, r5
 80246ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80246b2:	ea47 070e 	orr.w	r7, r7, lr
 80246b6:	f105 0e01 	add.w	lr, r5, #1
 80246ba:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80246be:	096d      	lsrs	r5, r5, #5
 80246c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80246c4:	432f      	orrs	r7, r5
 80246c6:	8007      	strh	r7, [r0, #0]
 80246c8:	3002      	adds	r0, #2
 80246ca:	3402      	adds	r4, #2
 80246cc:	e7ac      	b.n	8024628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80246ce:	f8b9 3000 	ldrh.w	r3, [r9]
 80246d2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80246d6:	eba3 0308 	sub.w	r3, r3, r8
 80246da:	eba6 0608 	sub.w	r6, r6, r8
 80246de:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80246e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80246e6:	440e      	add	r6, r1
 80246e8:	e797      	b.n	802461a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80246ea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80246ee:	42a8      	cmp	r0, r5
 80246f0:	d262      	bcs.n	80247b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80246f2:	9b00      	ldr	r3, [sp, #0]
 80246f4:	4631      	mov	r1, r6
 80246f6:	eb00 0b03 	add.w	fp, r0, r3
 80246fa:	4558      	cmp	r0, fp
 80246fc:	d24e      	bcs.n	802479c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80246fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8024702:	b12b      	cbz	r3, 8024710 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8024704:	2bff      	cmp	r3, #255	@ 0xff
 8024706:	f8b4 e000 	ldrh.w	lr, [r4]
 802470a:	d104      	bne.n	8024716 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 802470c:	f8a0 e000 	strh.w	lr, [r0]
 8024710:	3002      	adds	r0, #2
 8024712:	3402      	adds	r4, #2
 8024714:	e7f1      	b.n	80246fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8024716:	8802      	ldrh	r2, [r0, #0]
 8024718:	b29f      	uxth	r7, r3
 802471a:	1216      	asrs	r6, r2, #8
 802471c:	43db      	mvns	r3, r3
 802471e:	b2db      	uxtb	r3, r3
 8024720:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8024724:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8024728:	fb16 f603 	smulbb	r6, r6, r3
 802472c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8024730:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024734:	00d2      	lsls	r2, r2, #3
 8024736:	fb0c 6c07 	mla	ip, ip, r7, r6
 802473a:	b2d2      	uxtb	r2, r2
 802473c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8024740:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8024744:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024748:	fb1a fa03 	smulbb	sl, sl, r3
 802474c:	fa1f fc8c 	uxth.w	ip, ip
 8024750:	fb12 f303 	smulbb	r3, r2, r3
 8024754:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8024758:	fa5f fe8e 	uxtb.w	lr, lr
 802475c:	fb06 a607 	mla	r6, r6, r7, sl
 8024760:	f10c 0201 	add.w	r2, ip, #1
 8024764:	fb0e 3307 	mla	r3, lr, r7, r3
 8024768:	b2b6      	uxth	r6, r6
 802476a:	b29b      	uxth	r3, r3
 802476c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8024770:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8024774:	f106 0a01 	add.w	sl, r6, #1
 8024778:	f103 0c01 	add.w	ip, r3, #1
 802477c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024780:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8024784:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024788:	0976      	lsrs	r6, r6, #5
 802478a:	ea4c 0c02 	orr.w	ip, ip, r2
 802478e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8024792:	ea4c 0c06 	orr.w	ip, ip, r6
 8024796:	f8a0 c000 	strh.w	ip, [r0]
 802479a:	e7b9      	b.n	8024710 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802479c:	f8b9 3000 	ldrh.w	r3, [r9]
 80247a0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80247a4:	eba3 0308 	sub.w	r3, r3, r8
 80247a8:	eba6 0608 	sub.w	r6, r6, r8
 80247ac:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80247b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80247b4:	440e      	add	r6, r1
 80247b6:	e79a      	b.n	80246ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80247b8:	4b03      	ldr	r3, [pc, #12]	@ (80247c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80247ba:	6818      	ldr	r0, [r3, #0]
 80247bc:	6803      	ldr	r3, [r0, #0]
 80247be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80247c0:	4798      	blx	r3
 80247c2:	b007      	add	sp, #28
 80247c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80247c8:	200138e4 	.word	0x200138e4
 80247cc:	200138de 	.word	0x200138de

080247d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80247d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80247d4:	b089      	sub	sp, #36	@ 0x24
 80247d6:	4607      	mov	r7, r0
 80247d8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 80247dc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80247de:	4688      	mov	r8, r1
 80247e0:	4692      	mov	sl, r2
 80247e2:	4699      	mov	r9, r3
 80247e4:	2e00      	cmp	r6, #0
 80247e6:	d048      	beq.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80247e8:	4608      	mov	r0, r1
 80247ea:	f7fa f81d 	bl	801e828 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80247ee:	4605      	mov	r5, r0
 80247f0:	4640      	mov	r0, r8
 80247f2:	f7fa f84d 	bl	801e890 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80247f6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80247fa:	4640      	mov	r0, r8
 80247fc:	f8ad a008 	strh.w	sl, [sp, #8]
 8024800:	f8ad 500c 	strh.w	r5, [sp, #12]
 8024804:	f8ad 900a 	strh.w	r9, [sp, #10]
 8024808:	f7fa f900 	bl	801ea0c <_ZNK8touchgfx6Bitmap7getDataEv>
 802480c:	4605      	mov	r5, r0
 802480e:	4640      	mov	r0, r8
 8024810:	f7fa f92c 	bl	801ea6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8024814:	4682      	mov	sl, r0
 8024816:	4640      	mov	r0, r8
 8024818:	f7fa f97c 	bl	801eb14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802481c:	2810      	cmp	r0, #16
 802481e:	d82c      	bhi.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024820:	e8df f010 	tbh	[pc, r0, lsl #1]
 8024824:	00ba00ca 	.word	0x00ba00ca
 8024828:	002b0011 	.word	0x002b0011
 802482c:	002b002b 	.word	0x002b002b
 8024830:	002b002b 	.word	0x002b002b
 8024834:	002b002b 	.word	0x002b002b
 8024838:	00c1002b 	.word	0x00c1002b
 802483c:	002b002b 	.word	0x002b002b
 8024840:	002b0180 	.word	0x002b0180
 8024844:	0173      	.short	0x0173
 8024846:	4bbc      	ldr	r3, [pc, #752]	@ (8024b38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8024848:	6818      	ldr	r0, [r3, #0]
 802484a:	6803      	ldr	r3, [r0, #0]
 802484c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 802484e:	4798      	blx	r3
 8024850:	2eff      	cmp	r6, #255	@ 0xff
 8024852:	d101      	bne.n	8024858 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8024854:	0683      	lsls	r3, r0, #26
 8024856:	d506      	bpl.n	8024866 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8024858:	4633      	mov	r3, r6
 802485a:	4622      	mov	r2, r4
 802485c:	a902      	add	r1, sp, #8
 802485e:	4628      	mov	r0, r5
 8024860:	f7ff f8fc 	bl	8023a5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8024864:	e009      	b.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024866:	4640      	mov	r0, r8
 8024868:	f7fa f898 	bl	801e99c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802486c:	b940      	cbnz	r0, 8024880 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 802486e:	4623      	mov	r3, r4
 8024870:	aa02      	add	r2, sp, #8
 8024872:	4629      	mov	r1, r5
 8024874:	4638      	mov	r0, r7
 8024876:	f7ff f9d7 	bl	8023c28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 802487a:	b009      	add	sp, #36	@ 0x24
 802487c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024880:	f10d 0918 	add.w	r9, sp, #24
 8024884:	4641      	mov	r1, r8
 8024886:	4648      	mov	r0, r9
 8024888:	f7fa f836 	bl	801e8f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802488c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8024890:	f10d 0810 	add.w	r8, sp, #16
 8024894:	e888 0003 	stmia.w	r8, {r0, r1}
 8024898:	4640      	mov	r0, r8
 802489a:	4621      	mov	r1, r4
 802489c:	f7f0 fdb4 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 80248a0:	4640      	mov	r0, r8
 80248a2:	f7f0 fdf4 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 80248a6:	2800      	cmp	r0, #0
 80248a8:	d1d6      	bne.n	8024858 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80248aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80248ae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80248b2:	4293      	cmp	r3, r2
 80248b4:	dd12      	ble.n	80248dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 80248b6:	1a9b      	subs	r3, r3, r2
 80248b8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80248bc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80248c0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80248c4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80248c8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80248cc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80248d0:	464a      	mov	r2, r9
 80248d2:	4633      	mov	r3, r6
 80248d4:	a902      	add	r1, sp, #8
 80248d6:	4628      	mov	r0, r5
 80248d8:	f7ff f8c0 	bl	8023a5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80248dc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80248e0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80248e4:	4293      	cmp	r3, r2
 80248e6:	dd12      	ble.n	802490e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 80248e8:	1a9b      	subs	r3, r3, r2
 80248ea:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80248ee:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80248f2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80248f6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80248fa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80248fe:	f8ad 101e 	strh.w	r1, [sp, #30]
 8024902:	23ff      	movs	r3, #255	@ 0xff
 8024904:	464a      	mov	r2, r9
 8024906:	a902      	add	r1, sp, #8
 8024908:	4628      	mov	r0, r5
 802490a:	f7ff f8a7 	bl	8023a5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802490e:	4643      	mov	r3, r8
 8024910:	aa02      	add	r2, sp, #8
 8024912:	4629      	mov	r1, r5
 8024914:	4638      	mov	r0, r7
 8024916:	f7ff f987 	bl	8023c28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 802491a:	88a2      	ldrh	r2, [r4, #4]
 802491c:	8823      	ldrh	r3, [r4, #0]
 802491e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8024922:	4413      	add	r3, r2
 8024924:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8024928:	440a      	add	r2, r1
 802492a:	b29b      	uxth	r3, r3
 802492c:	b292      	uxth	r2, r2
 802492e:	b211      	sxth	r1, r2
 8024930:	b218      	sxth	r0, r3
 8024932:	4288      	cmp	r0, r1
 8024934:	dd12      	ble.n	802495c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8024936:	1a9b      	subs	r3, r3, r2
 8024938:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 802493c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8024940:	f8ad 1018 	strh.w	r1, [sp, #24]
 8024944:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024948:	f8ad 001e 	strh.w	r0, [sp, #30]
 802494c:	23ff      	movs	r3, #255	@ 0xff
 802494e:	464a      	mov	r2, r9
 8024950:	a902      	add	r1, sp, #8
 8024952:	4628      	mov	r0, r5
 8024954:	f8ad 601a 	strh.w	r6, [sp, #26]
 8024958:	f7ff f880 	bl	8023a5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802495c:	88e2      	ldrh	r2, [r4, #6]
 802495e:	8863      	ldrh	r3, [r4, #2]
 8024960:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8024964:	4413      	add	r3, r2
 8024966:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 802496a:	440a      	add	r2, r1
 802496c:	b29b      	uxth	r3, r3
 802496e:	b292      	uxth	r2, r2
 8024970:	b211      	sxth	r1, r2
 8024972:	b218      	sxth	r0, r3
 8024974:	4288      	cmp	r0, r1
 8024976:	dd80      	ble.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024978:	1a9b      	subs	r3, r3, r2
 802497a:	f9b4 6000 	ldrsh.w	r6, [r4]
 802497e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8024982:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024986:	f8ad 6018 	strh.w	r6, [sp, #24]
 802498a:	f8ad 101a 	strh.w	r1, [sp, #26]
 802498e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8024992:	23ff      	movs	r3, #255	@ 0xff
 8024994:	464a      	mov	r2, r9
 8024996:	e761      	b.n	802485c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8024998:	4633      	mov	r3, r6
 802499a:	4622      	mov	r2, r4
 802499c:	a902      	add	r1, sp, #8
 802499e:	4628      	mov	r0, r5
 80249a0:	f7ff f9b2 	bl	8023d08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80249a4:	e769      	b.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80249a6:	e9cd 4600 	strd	r4, r6, [sp]
 80249aa:	ab02      	add	r3, sp, #8
 80249ac:	4652      	mov	r2, sl
 80249ae:	4629      	mov	r1, r5
 80249b0:	4638      	mov	r0, r7
 80249b2:	f7ff fd89 	bl	80244c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80249b6:	e760      	b.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80249b8:	4640      	mov	r0, r8
 80249ba:	f7f9 ffef 	bl	801e99c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80249be:	b948      	cbnz	r0, 80249d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 80249c0:	683b      	ldr	r3, [r7, #0]
 80249c2:	e9cd 6000 	strd	r6, r0, [sp]
 80249c6:	aa02      	add	r2, sp, #8
 80249c8:	68de      	ldr	r6, [r3, #12]
 80249ca:	4629      	mov	r1, r5
 80249cc:	4623      	mov	r3, r4
 80249ce:	4638      	mov	r0, r7
 80249d0:	47b0      	blx	r6
 80249d2:	e752      	b.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80249d4:	f10d 0918 	add.w	r9, sp, #24
 80249d8:	4641      	mov	r1, r8
 80249da:	4648      	mov	r0, r9
 80249dc:	f7f9 ff8c 	bl	801e8f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80249e0:	e899 0003 	ldmia.w	r9, {r0, r1}
 80249e4:	f10d 0810 	add.w	r8, sp, #16
 80249e8:	e888 0003 	stmia.w	r8, {r0, r1}
 80249ec:	4640      	mov	r0, r8
 80249ee:	4621      	mov	r1, r4
 80249f0:	f7f0 fd0a 	bl	8015408 <_ZN8touchgfx4RectaNERKS0_>
 80249f4:	4640      	mov	r0, r8
 80249f6:	f7f0 fd4a 	bl	801548e <_ZNK8touchgfx4Rect7isEmptyEv>
 80249fa:	b138      	cbz	r0, 8024a0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 80249fc:	9600      	str	r6, [sp, #0]
 80249fe:	4623      	mov	r3, r4
 8024a00:	aa02      	add	r2, sp, #8
 8024a02:	4651      	mov	r1, sl
 8024a04:	4628      	mov	r0, r5
 8024a06:	f7ff fdbd 	bl	8024584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024a0a:	e736      	b.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024a0c:	683b      	ldr	r3, [r7, #0]
 8024a0e:	e9cd 6000 	strd	r6, r0, [sp]
 8024a12:	aa02      	add	r2, sp, #8
 8024a14:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8024a18:	4629      	mov	r1, r5
 8024a1a:	4643      	mov	r3, r8
 8024a1c:	4638      	mov	r0, r7
 8024a1e:	47d8      	blx	fp
 8024a20:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8024a24:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8024a28:	4293      	cmp	r3, r2
 8024a2a:	dd13      	ble.n	8024a54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8024a2c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8024a30:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024a34:	f8ad 0018 	strh.w	r0, [sp, #24]
 8024a38:	1a9b      	subs	r3, r3, r2
 8024a3a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8024a3e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8024a42:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024a46:	9600      	str	r6, [sp, #0]
 8024a48:	464b      	mov	r3, r9
 8024a4a:	aa02      	add	r2, sp, #8
 8024a4c:	4651      	mov	r1, sl
 8024a4e:	4628      	mov	r0, r5
 8024a50:	f7ff fd98 	bl	8024584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024a54:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8024a58:	f9b4 2000 	ldrsh.w	r2, [r4]
 8024a5c:	4293      	cmp	r3, r2
 8024a5e:	dd13      	ble.n	8024a88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8024a60:	1a9b      	subs	r3, r3, r2
 8024a62:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8024a66:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8024a6a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8024a6e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8024a72:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024a76:	f8ad 101e 	strh.w	r1, [sp, #30]
 8024a7a:	9600      	str	r6, [sp, #0]
 8024a7c:	464b      	mov	r3, r9
 8024a7e:	aa02      	add	r2, sp, #8
 8024a80:	4651      	mov	r1, sl
 8024a82:	4628      	mov	r0, r5
 8024a84:	f7ff fd7e 	bl	8024584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024a88:	88a2      	ldrh	r2, [r4, #4]
 8024a8a:	8823      	ldrh	r3, [r4, #0]
 8024a8c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8024a90:	4413      	add	r3, r2
 8024a92:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8024a96:	440a      	add	r2, r1
 8024a98:	b29b      	uxth	r3, r3
 8024a9a:	b292      	uxth	r2, r2
 8024a9c:	b211      	sxth	r1, r2
 8024a9e:	b218      	sxth	r0, r3
 8024aa0:	4288      	cmp	r0, r1
 8024aa2:	dd13      	ble.n	8024acc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8024aa4:	1a9b      	subs	r3, r3, r2
 8024aa6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8024aaa:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8024aae:	f8ad 1018 	strh.w	r1, [sp, #24]
 8024ab2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8024ab6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8024aba:	9600      	str	r6, [sp, #0]
 8024abc:	464b      	mov	r3, r9
 8024abe:	aa02      	add	r2, sp, #8
 8024ac0:	4651      	mov	r1, sl
 8024ac2:	4628      	mov	r0, r5
 8024ac4:	f8ad 701a 	strh.w	r7, [sp, #26]
 8024ac8:	f7ff fd5c 	bl	8024584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8024acc:	88e2      	ldrh	r2, [r4, #6]
 8024ace:	8863      	ldrh	r3, [r4, #2]
 8024ad0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8024ad4:	4413      	add	r3, r2
 8024ad6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8024ada:	440a      	add	r2, r1
 8024adc:	b29b      	uxth	r3, r3
 8024ade:	b292      	uxth	r2, r2
 8024ae0:	b211      	sxth	r1, r2
 8024ae2:	b218      	sxth	r0, r3
 8024ae4:	4288      	cmp	r0, r1
 8024ae6:	f77f aec8 	ble.w	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024aea:	f9b4 7000 	ldrsh.w	r7, [r4]
 8024aee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8024af2:	f8ad 7018 	strh.w	r7, [sp, #24]
 8024af6:	1a9b      	subs	r3, r3, r2
 8024af8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8024afc:	f8ad 101a 	strh.w	r1, [sp, #26]
 8024b00:	f8ad 001c 	strh.w	r0, [sp, #28]
 8024b04:	9600      	str	r6, [sp, #0]
 8024b06:	464b      	mov	r3, r9
 8024b08:	e77a      	b.n	8024a00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8024b0a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8024b0e:	2800      	cmp	r0, #0
 8024b10:	f43f aeb3 	beq.w	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024b14:	6803      	ldr	r3, [r0, #0]
 8024b16:	9600      	str	r6, [sp, #0]
 8024b18:	68de      	ldr	r6, [r3, #12]
 8024b1a:	4623      	mov	r3, r4
 8024b1c:	aa02      	add	r2, sp, #8
 8024b1e:	4629      	mov	r1, r5
 8024b20:	47b0      	blx	r6
 8024b22:	e6aa      	b.n	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024b24:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8024b28:	2800      	cmp	r0, #0
 8024b2a:	f43f aea6 	beq.w	802487a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8024b2e:	6803      	ldr	r3, [r0, #0]
 8024b30:	9600      	str	r6, [sp, #0]
 8024b32:	689e      	ldr	r6, [r3, #8]
 8024b34:	e7f1      	b.n	8024b1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8024b36:	bf00      	nop
 8024b38:	200138e4 	.word	0x200138e4

08024b3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8024b3c:	b180      	cbz	r0, 8024b60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8024b3e:	2903      	cmp	r1, #3
 8024b40:	d81c      	bhi.n	8024b7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8024b42:	e8df f001 	tbb	[pc, r1]
 8024b46:	1d02      	.short	0x1d02
 8024b48:	1f08      	.short	0x1f08
 8024b4a:	4b10      	ldr	r3, [pc, #64]	@ (8024b8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8024b4c:	8818      	ldrh	r0, [r3, #0]
 8024b4e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024b52:	4240      	negs	r0, r0
 8024b54:	4770      	bx	lr
 8024b56:	4b0d      	ldr	r3, [pc, #52]	@ (8024b8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8024b58:	8818      	ldrh	r0, [r3, #0]
 8024b5a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024b5e:	4770      	bx	lr
 8024b60:	2903      	cmp	r1, #3
 8024b62:	d80b      	bhi.n	8024b7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8024b64:	a301      	add	r3, pc, #4	@ (adr r3, 8024b6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8024b66:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8024b6a:	bf00      	nop
 8024b6c:	08024b81 	.word	0x08024b81
 8024b70:	08024b57 	.word	0x08024b57
 8024b74:	08024b85 	.word	0x08024b85
 8024b78:	08024b4b 	.word	0x08024b4b
 8024b7c:	2000      	movs	r0, #0
 8024b7e:	4770      	bx	lr
 8024b80:	2001      	movs	r0, #1
 8024b82:	4770      	bx	lr
 8024b84:	f04f 30ff 	mov.w	r0, #4294967295
 8024b88:	4770      	bx	lr
 8024b8a:	bf00      	nop
 8024b8c:	200138de 	.word	0x200138de

08024b90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8024b90:	b180      	cbz	r0, 8024bb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8024b92:	2903      	cmp	r1, #3
 8024b94:	d81c      	bhi.n	8024bd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8024b96:	e8df f001 	tbb	[pc, r1]
 8024b9a:	021d      	.short	0x021d
 8024b9c:	071f      	.short	0x071f
 8024b9e:	4b10      	ldr	r3, [pc, #64]	@ (8024be0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8024ba0:	8818      	ldrh	r0, [r3, #0]
 8024ba2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024ba6:	4770      	bx	lr
 8024ba8:	4b0d      	ldr	r3, [pc, #52]	@ (8024be0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8024baa:	8818      	ldrh	r0, [r3, #0]
 8024bac:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8024bb0:	4240      	negs	r0, r0
 8024bb2:	4770      	bx	lr
 8024bb4:	2903      	cmp	r1, #3
 8024bb6:	d80b      	bhi.n	8024bd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8024bb8:	a301      	add	r3, pc, #4	@ (adr r3, 8024bc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8024bba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8024bbe:	bf00      	nop
 8024bc0:	08024b9f 	.word	0x08024b9f
 8024bc4:	08024bd9 	.word	0x08024bd9
 8024bc8:	08024ba9 	.word	0x08024ba9
 8024bcc:	08024bd5 	.word	0x08024bd5
 8024bd0:	2000      	movs	r0, #0
 8024bd2:	4770      	bx	lr
 8024bd4:	2001      	movs	r0, #1
 8024bd6:	4770      	bx	lr
 8024bd8:	f04f 30ff 	mov.w	r0, #4294967295
 8024bdc:	4770      	bx	lr
 8024bde:	bf00      	nop
 8024be0:	200138de 	.word	0x200138de

08024be4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8024be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024be8:	b099      	sub	sp, #100	@ 0x64
 8024bea:	910d      	str	r1, [sp, #52]	@ 0x34
 8024bec:	a914      	add	r1, sp, #80	@ 0x50
 8024bee:	e881 000c 	stmia.w	r1, {r2, r3}
 8024bf2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8024bf6:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024bf8:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8024bfc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024c00:	9310      	str	r3, [sp, #64]	@ 0x40
 8024c02:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8024c06:	9308      	str	r3, [sp, #32]
 8024c08:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8024c0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8024c0e:	7b4b      	ldrb	r3, [r1, #13]
 8024c10:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8024c14:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8024c18:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8024c1c:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8024c1e:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8024c22:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8024c26:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8024c2a:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8024c2e:	f891 8006 	ldrb.w	r8, [r1, #6]
 8024c32:	ea58 0800 	orrs.w	r8, r8, r0
 8024c36:	f000 81ce 	beq.w	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024c3a:	011b      	lsls	r3, r3, #4
 8024c3c:	79c8      	ldrb	r0, [r1, #7]
 8024c3e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8024c42:	4303      	orrs	r3, r0
 8024c44:	930c      	str	r3, [sp, #48]	@ 0x30
 8024c46:	f000 81c6 	beq.w	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024c4a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8024c4e:	b29b      	uxth	r3, r3
 8024c50:	2d00      	cmp	r5, #0
 8024c52:	f000 812c 	beq.w	8024eae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8024c56:	1aed      	subs	r5, r5, r3
 8024c58:	b2ad      	uxth	r5, r5
 8024c5a:	0429      	lsls	r1, r5, #16
 8024c5c:	d502      	bpl.n	8024c64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8024c5e:	1b64      	subs	r4, r4, r5
 8024c60:	b224      	sxth	r4, r4
 8024c62:	2500      	movs	r5, #0
 8024c64:	f9b2 0000 	ldrsh.w	r0, [r2]
 8024c68:	8891      	ldrh	r1, [r2, #4]
 8024c6a:	4284      	cmp	r4, r0
 8024c6c:	b283      	uxth	r3, r0
 8024c6e:	bfb8      	it	lt
 8024c70:	18ed      	addlt	r5, r5, r3
 8024c72:	440b      	add	r3, r1
 8024c74:	b21b      	sxth	r3, r3
 8024c76:	930a      	str	r3, [sp, #40]	@ 0x28
 8024c78:	88d3      	ldrh	r3, [r2, #6]
 8024c7a:	8852      	ldrh	r2, [r2, #2]
 8024c7c:	4413      	add	r3, r2
 8024c7e:	b21b      	sxth	r3, r3
 8024c80:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024c82:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024c84:	930e      	str	r3, [sp, #56]	@ 0x38
 8024c86:	bfb8      	it	lt
 8024c88:	1b2c      	sublt	r4, r5, r4
 8024c8a:	4bb5      	ldr	r3, [pc, #724]	@ (8024f60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8024c8c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024c8e:	f893 b000 	ldrb.w	fp, [r3]
 8024c92:	bfbc      	itt	lt
 8024c94:	b2a5      	uxthlt	r5, r4
 8024c96:	4604      	movlt	r4, r0
 8024c98:	4653      	mov	r3, sl
 8024c9a:	4621      	mov	r1, r4
 8024c9c:	a814      	add	r0, sp, #80	@ 0x50
 8024c9e:	f7f6 f872 	bl	801ad86 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8024ca2:	4621      	mov	r1, r4
 8024ca4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8024ca8:	4653      	mov	r3, sl
 8024caa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024cac:	a814      	add	r0, sp, #80	@ 0x50
 8024cae:	f7f6 f887 	bl	801adc0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8024cb2:	a918      	add	r1, sp, #96	@ 0x60
 8024cb4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8024cb8:	a817      	add	r0, sp, #92	@ 0x5c
 8024cba:	f7f6 f9ad 	bl	801b018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8024cbe:	f1ba 0f00 	cmp.w	sl, #0
 8024cc2:	f040 80f7 	bne.w	8024eb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8024cc6:	f1bb 0f01 	cmp.w	fp, #1
 8024cca:	f040 80fb 	bne.w	8024ec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8024cce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024cd0:	2b00      	cmp	r3, #0
 8024cd2:	f040 81a8 	bne.w	8025026 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 8024cd6:	fa1f f288 	uxth.w	r2, r8
 8024cda:	b905      	cbnz	r5, 8024cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8024cdc:	b15e      	cbz	r6, 8024cf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8024cde:	9808      	ldr	r0, [sp, #32]
 8024ce0:	fb06 5302 	mla	r3, r6, r2, r5
 8024ce4:	4343      	muls	r3, r0
 8024ce6:	4631      	mov	r1, r6
 8024ce8:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8024cec:	f003 0607 	and.w	r6, r3, #7
 8024cf0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024cf2:	1a5b      	subs	r3, r3, r1
 8024cf4:	930e      	str	r3, [sp, #56]	@ 0x38
 8024cf6:	f10b 31ff 	add.w	r1, fp, #4294967295
 8024cfa:	424b      	negs	r3, r1
 8024cfc:	414b      	adcs	r3, r1
 8024cfe:	4618      	mov	r0, r3
 8024d00:	4651      	mov	r1, sl
 8024d02:	930c      	str	r3, [sp, #48]	@ 0x30
 8024d04:	f7ff ff1a 	bl	8024b3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8024d08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024d0a:	4683      	mov	fp, r0
 8024d0c:	4618      	mov	r0, r3
 8024d0e:	f7ff ff3f 	bl	8024b90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8024d12:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024d14:	4603      	mov	r3, r0
 8024d16:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8024d18:	eba1 0a00 	sub.w	sl, r1, r0
 8024d1c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8024d1e:	458a      	cmp	sl, r1
 8024d20:	bfa8      	it	ge
 8024d22:	468a      	movge	sl, r1
 8024d24:	f1ba 0f00 	cmp.w	sl, #0
 8024d28:	f340 8155 	ble.w	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024d2c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8024d2e:	1b64      	subs	r4, r4, r5
 8024d30:	1b0c      	subs	r4, r1, r4
 8024d32:	4544      	cmp	r4, r8
 8024d34:	bfd4      	ite	le
 8024d36:	ebc5 0504 	rsble	r5, r5, r4
 8024d3a:	ebc5 0508 	rsbgt	r5, r5, r8
 8024d3e:	2d00      	cmp	r5, #0
 8024d40:	f340 8149 	ble.w	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024d44:	9908      	ldr	r1, [sp, #32]
 8024d46:	1b52      	subs	r2, r2, r5
 8024d48:	434a      	muls	r2, r1
 8024d4a:	920e      	str	r2, [sp, #56]	@ 0x38
 8024d4c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8024d4e:	2a00      	cmp	r2, #0
 8024d50:	f040 8175 	bne.w	802503e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8024d54:	4a83      	ldr	r2, [pc, #524]	@ (8024f64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8024d56:	930a      	str	r3, [sp, #40]	@ 0x28
 8024d58:	6810      	ldr	r0, [r2, #0]
 8024d5a:	6802      	ldr	r2, [r0, #0]
 8024d5c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8024d5e:	4790      	blx	r2
 8024d60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024d62:	9908      	ldr	r1, [sp, #32]
 8024d64:	2201      	movs	r2, #1
 8024d66:	408a      	lsls	r2, r1
 8024d68:	3a01      	subs	r2, #1
 8024d6a:	497f      	ldr	r1, [pc, #508]	@ (8024f68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8024d6c:	b2d2      	uxtb	r2, r2
 8024d6e:	880c      	ldrh	r4, [r1, #0]
 8024d70:	920c      	str	r2, [sp, #48]	@ 0x30
 8024d72:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8024d76:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8024d7a:	fb04 1202 	mla	r2, r4, r2, r1
 8024d7e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8024d82:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8024d86:	920a      	str	r2, [sp, #40]	@ 0x28
 8024d88:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8024d8c:	9212      	str	r2, [sp, #72]	@ 0x48
 8024d8e:	b2e2      	uxtb	r2, r4
 8024d90:	9211      	str	r2, [sp, #68]	@ 0x44
 8024d92:	fa5f f289 	uxtb.w	r2, r9
 8024d96:	9210      	str	r2, [sp, #64]	@ 0x40
 8024d98:	4a74      	ldr	r2, [pc, #464]	@ (8024f6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8024d9a:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8024d9e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024da2:	4022      	ands	r2, r4
 8024da4:	430a      	orrs	r2, r1
 8024da6:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8024daa:	ea42 0209 	orr.w	r2, r2, r9
 8024dae:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8024db2:	b292      	uxth	r2, r2
 8024db4:	fb05 3b1b 	mls	fp, r5, fp, r3
 8024db8:	920f      	str	r2, [sp, #60]	@ 0x3c
 8024dba:	460b      	mov	r3, r1
 8024dbc:	783a      	ldrb	r2, [r7, #0]
 8024dbe:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024dc0:	436b      	muls	r3, r5
 8024dc2:	4132      	asrs	r2, r6
 8024dc4:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8024dc8:	b2d2      	uxtb	r2, r2
 8024dca:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024dcc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8024dd0:	f0c0 8149 	bcc.w	8025066 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8024dd4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8024dd8:	46a9      	mov	r9, r5
 8024dda:	f119 39ff 	adds.w	r9, r9, #4294967295
 8024dde:	f0c0 8132 	bcc.w	8025046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8024de2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024de4:	4013      	ands	r3, r2
 8024de6:	d054      	beq.n	8024e92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 8024de8:	20ff      	movs	r0, #255	@ 0xff
 8024dea:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8024dec:	fb90 f1f1 	sdiv	r1, r0, r1
 8024df0:	434b      	muls	r3, r1
 8024df2:	2bfe      	cmp	r3, #254	@ 0xfe
 8024df4:	dd03      	ble.n	8024dfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 8024df6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024df8:	4281      	cmp	r1, r0
 8024dfa:	f000 8122 	beq.w	8025042 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8024dfe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024e00:	f8b8 4000 	ldrh.w	r4, [r8]
 8024e04:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8024e06:	fb11 f303 	smulbb	r3, r1, r3
 8024e0a:	b29b      	uxth	r3, r3
 8024e0c:	1c59      	adds	r1, r3, #1
 8024e0e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024e12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e16:	fa1f fe83 	uxth.w	lr, r3
 8024e1a:	1221      	asrs	r1, r4, #8
 8024e1c:	fb10 fb0e 	smulbb	fp, r0, lr
 8024e20:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024e24:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8024e26:	43db      	mvns	r3, r3
 8024e28:	b2db      	uxtb	r3, r3
 8024e2a:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8024e2e:	fb01 b103 	mla	r1, r1, r3, fp
 8024e32:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8024e36:	fb10 fb0e 	smulbb	fp, r0, lr
 8024e3a:	00e4      	lsls	r4, r4, #3
 8024e3c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8024e3e:	b2e4      	uxtb	r4, r4
 8024e40:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024e44:	fb10 fe0e 	smulbb	lr, r0, lr
 8024e48:	fb04 e403 	mla	r4, r4, r3, lr
 8024e4c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8024e50:	b289      	uxth	r1, r1
 8024e52:	b2a4      	uxth	r4, r4
 8024e54:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8024e58:	fb0c bc03 	mla	ip, ip, r3, fp
 8024e5c:	1c4b      	adds	r3, r1, #1
 8024e5e:	f104 0b01 	add.w	fp, r4, #1
 8024e62:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024e66:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8024e6a:	fa1f fc8c 	uxth.w	ip, ip
 8024e6e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024e72:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8024e76:	ea4b 0101 	orr.w	r1, fp, r1
 8024e7a:	f10c 0b01 	add.w	fp, ip, #1
 8024e7e:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8024e82:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8024e86:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8024e8a:	ea41 010b 	orr.w	r1, r1, fp
 8024e8e:	f8a8 1000 	strh.w	r1, [r8]
 8024e92:	9b08      	ldr	r3, [sp, #32]
 8024e94:	441e      	add	r6, r3
 8024e96:	b2b6      	uxth	r6, r6
 8024e98:	2e07      	cmp	r6, #7
 8024e9a:	bf98      	it	ls
 8024e9c:	411a      	asrls	r2, r3
 8024e9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024ea0:	bf89      	itett	hi
 8024ea2:	787a      	ldrbhi	r2, [r7, #1]
 8024ea4:	b2d2      	uxtbls	r2, r2
 8024ea6:	3701      	addhi	r7, #1
 8024ea8:	2600      	movhi	r6, #0
 8024eaa:	4498      	add	r8, r3
 8024eac:	e795      	b.n	8024dda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8024eae:	441c      	add	r4, r3
 8024eb0:	b224      	sxth	r4, r4
 8024eb2:	e6d7      	b.n	8024c64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8024eb4:	f1ba 0f01 	cmp.w	sl, #1
 8024eb8:	f47f af09 	bne.w	8024cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024ebc:	f1bb 0f01 	cmp.w	fp, #1
 8024ec0:	f47f af05 	bne.w	8024cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024ec4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024ec6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024ec8:	1a99      	subs	r1, r3, r2
 8024eca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024ecc:	1b9b      	subs	r3, r3, r6
 8024ece:	4299      	cmp	r1, r3
 8024ed0:	bfa8      	it	ge
 8024ed2:	4619      	movge	r1, r3
 8024ed4:	2900      	cmp	r1, #0
 8024ed6:	9112      	str	r1, [sp, #72]	@ 0x48
 8024ed8:	dd7d      	ble.n	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024eda:	4a22      	ldr	r2, [pc, #136]	@ (8024f64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8024edc:	9211      	str	r2, [sp, #68]	@ 0x44
 8024ede:	6810      	ldr	r0, [r2, #0]
 8024ee0:	6803      	ldr	r3, [r0, #0]
 8024ee2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8024ee4:	4798      	blx	r3
 8024ee6:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8024eea:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8024eec:	d006      	beq.n	8024efc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8024eee:	9b08      	ldr	r3, [sp, #32]
 8024ef0:	2b04      	cmp	r3, #4
 8024ef2:	d133      	bne.n	8024f5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8024ef4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024ef6:	3300      	adds	r3, #0
 8024ef8:	bf18      	it	ne
 8024efa:	2301      	movne	r3, #1
 8024efc:	0582      	lsls	r2, r0, #22
 8024efe:	fa1f fc88 	uxth.w	ip, r8
 8024f02:	f140 80b9 	bpl.w	8025078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8024f06:	9808      	ldr	r0, [sp, #32]
 8024f08:	2808      	cmp	r0, #8
 8024f0a:	f040 80b5 	bne.w	8025078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8024f0e:	2b00      	cmp	r3, #0
 8024f10:	d064      	beq.n	8024fdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8024f12:	f10c 0c01 	add.w	ip, ip, #1
 8024f16:	f02c 0301 	bic.w	r3, ip, #1
 8024f1a:	b29b      	uxth	r3, r3
 8024f1c:	bb45      	cbnz	r5, 8024f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8024f1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024f20:	eb08 0004 	add.w	r0, r8, r4
 8024f24:	4290      	cmp	r0, r2
 8024f26:	dc23      	bgt.n	8024f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8024f28:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024f2a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8024f2e:	6810      	ldr	r0, [r2, #0]
 8024f30:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024f34:	6804      	ldr	r4, [r0, #0]
 8024f36:	9506      	str	r5, [sp, #24]
 8024f38:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8024f3c:	9505      	str	r5, [sp, #20]
 8024f3e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024f40:	9302      	str	r3, [sp, #8]
 8024f42:	b289      	uxth	r1, r1
 8024f44:	e9cd 3100 	strd	r3, r1, [sp]
 8024f48:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8024f4c:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8024f50:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8024f52:	4673      	mov	r3, lr
 8024f54:	fb06 710c 	mla	r1, r6, ip, r7
 8024f58:	47a0      	blx	r4
 8024f5a:	e03c      	b.n	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024f5c:	2300      	movs	r3, #0
 8024f5e:	e7cd      	b.n	8024efc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8024f60:	200138dc 	.word	0x200138dc
 8024f64:	200138e4 	.word	0x200138e4
 8024f68:	200138de 	.word	0x200138de
 8024f6c:	00fff800 	.word	0x00fff800
 8024f70:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024f72:	eba4 0e05 	sub.w	lr, r4, r5
 8024f76:	eba2 0e0e 	sub.w	lr, r2, lr
 8024f7a:	45c6      	cmp	lr, r8
 8024f7c:	bfd4      	ite	le
 8024f7e:	ebc5 0e0e 	rsble	lr, r5, lr
 8024f82:	ebc5 0e08 	rsbgt	lr, r5, r8
 8024f86:	f1be 0f00 	cmp.w	lr, #0
 8024f8a:	d024      	beq.n	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8024f8c:	07e8      	lsls	r0, r5, #31
 8024f8e:	f53f ae9e 	bmi.w	8024cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024f92:	f01e 0001 	ands.w	r0, lr, #1
 8024f96:	f47f ae9a 	bne.w	8024cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8024f9a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024f9c:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8024fa0:	6814      	ldr	r4, [r2, #0]
 8024fa2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024fa6:	086d      	lsrs	r5, r5, #1
 8024fa8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8024fac:	fb06 560c 	mla	r6, r6, ip, r5
 8024fb0:	6825      	ldr	r5, [r4, #0]
 8024fb2:	9006      	str	r0, [sp, #24]
 8024fb4:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8024fb8:	9005      	str	r0, [sp, #20]
 8024fba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8024fbc:	9302      	str	r3, [sp, #8]
 8024fbe:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8024fc2:	b289      	uxth	r1, r1
 8024fc4:	fa1f f38e 	uxth.w	r3, lr
 8024fc8:	9101      	str	r1, [sp, #4]
 8024fca:	9300      	str	r3, [sp, #0]
 8024fcc:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 8024fce:	4643      	mov	r3, r8
 8024fd0:	19b9      	adds	r1, r7, r6
 8024fd2:	4620      	mov	r0, r4
 8024fd4:	47a8      	blx	r5
 8024fd6:	b019      	add	sp, #100	@ 0x64
 8024fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fdc:	4a28      	ldr	r2, [pc, #160]	@ (8025080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8024fde:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8024fe2:	6810      	ldr	r0, [r2, #0]
 8024fe4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8024fe8:	f8d0 a000 	ldr.w	sl, [r0]
 8024fec:	9306      	str	r3, [sp, #24]
 8024fee:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8024ff2:	9305      	str	r3, [sp, #20]
 8024ff4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024ff6:	f8cd c008 	str.w	ip, [sp, #8]
 8024ffa:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8024ffe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025000:	1b64      	subs	r4, r4, r5
 8025002:	1b1c      	subs	r4, r3, r4
 8025004:	fb06 5608 	mla	r6, r6, r8, r5
 8025008:	4544      	cmp	r4, r8
 802500a:	bfd4      	ite	le
 802500c:	ebc5 0504 	rsble	r5, r5, r4
 8025010:	ebc5 0508 	rsbgt	r5, r5, r8
 8025014:	b289      	uxth	r1, r1
 8025016:	b2ad      	uxth	r5, r5
 8025018:	9101      	str	r1, [sp, #4]
 802501a:	9500      	str	r5, [sp, #0]
 802501c:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8025020:	4673      	mov	r3, lr
 8025022:	19b9      	adds	r1, r7, r6
 8025024:	e798      	b.n	8024f58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8025026:	2208      	movs	r2, #8
 8025028:	9b08      	ldr	r3, [sp, #32]
 802502a:	fb92 f3f3 	sdiv	r3, r2, r3
 802502e:	1e5a      	subs	r2, r3, #1
 8025030:	4442      	add	r2, r8
 8025032:	fb92 f2f3 	sdiv	r2, r2, r3
 8025036:	fb12 f203 	smulbb	r2, r2, r3
 802503a:	b292      	uxth	r2, r2
 802503c:	e64d      	b.n	8024cda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 802503e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8025040:	e68f      	b.n	8024d62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8025042:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8025044:	e723      	b.n	8024e8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8025046:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025048:	b143      	cbz	r3, 802505c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 802504a:	441e      	add	r6, r3
 802504c:	b2b6      	uxth	r6, r6
 802504e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8025052:	f006 0607 	and.w	r6, r6, #7
 8025056:	783a      	ldrb	r2, [r7, #0]
 8025058:	4132      	asrs	r2, r6
 802505a:	b2d2      	uxtb	r2, r2
 802505c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802505e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8025060:	4419      	add	r1, r3
 8025062:	910a      	str	r1, [sp, #40]	@ 0x28
 8025064:	e6b2      	b.n	8024dcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8025066:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025068:	2b00      	cmp	r3, #0
 802506a:	d1b4      	bne.n	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 802506c:	4b04      	ldr	r3, [pc, #16]	@ (8025080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 802506e:	6818      	ldr	r0, [r3, #0]
 8025070:	6803      	ldr	r3, [r0, #0]
 8025072:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8025074:	4798      	blx	r3
 8025076:	e7ae      	b.n	8024fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8025078:	2b00      	cmp	r3, #0
 802507a:	f47f af4a 	bne.w	8024f12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 802507e:	e626      	b.n	8024cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8025080:	200138e4 	.word	0x200138e4

08025084 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8025084:	b538      	push	{r3, r4, r5, lr}
 8025086:	4c15      	ldr	r4, [pc, #84]	@ (80250dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8025088:	7823      	ldrb	r3, [r4, #0]
 802508a:	f3bf 8f5b 	dmb	ish
 802508e:	07da      	lsls	r2, r3, #31
 8025090:	4605      	mov	r5, r0
 8025092:	d40b      	bmi.n	80250ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8025094:	4620      	mov	r0, r4
 8025096:	f008 fc48 	bl	802d92a <__cxa_guard_acquire>
 802509a:	b138      	cbz	r0, 80250ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802509c:	4620      	mov	r0, r4
 802509e:	f008 fc50 	bl	802d942 <__cxa_guard_release>
 80250a2:	4a0f      	ldr	r2, [pc, #60]	@ (80250e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80250a4:	490f      	ldr	r1, [pc, #60]	@ (80250e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80250a6:	4810      	ldr	r0, [pc, #64]	@ (80250e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80250a8:	f008 fc38 	bl	802d91c <__aeabi_atexit>
 80250ac:	4c0f      	ldr	r4, [pc, #60]	@ (80250ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80250ae:	7823      	ldrb	r3, [r4, #0]
 80250b0:	f3bf 8f5b 	dmb	ish
 80250b4:	07db      	lsls	r3, r3, #31
 80250b6:	d40b      	bmi.n	80250d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80250b8:	4620      	mov	r0, r4
 80250ba:	f008 fc36 	bl	802d92a <__cxa_guard_acquire>
 80250be:	b138      	cbz	r0, 80250d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80250c0:	4620      	mov	r0, r4
 80250c2:	f008 fc3e 	bl	802d942 <__cxa_guard_release>
 80250c6:	4a06      	ldr	r2, [pc, #24]	@ (80250e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80250c8:	4909      	ldr	r1, [pc, #36]	@ (80250f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80250ca:	480a      	ldr	r0, [pc, #40]	@ (80250f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80250cc:	f008 fc26 	bl	802d91c <__aeabi_atexit>
 80250d0:	4b05      	ldr	r3, [pc, #20]	@ (80250e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80250d2:	616b      	str	r3, [r5, #20]
 80250d4:	4b07      	ldr	r3, [pc, #28]	@ (80250f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80250d6:	61ab      	str	r3, [r5, #24]
 80250d8:	bd38      	pop	{r3, r4, r5, pc}
 80250da:	bf00      	nop
 80250dc:	200139c8 	.word	0x200139c8
 80250e0:	20000000 	.word	0x20000000
 80250e4:	0802118d 	.word	0x0802118d
 80250e8:	200000dc 	.word	0x200000dc
 80250ec:	200139cc 	.word	0x200139cc
 80250f0:	0802118b 	.word	0x0802118b
 80250f4:	200000e0 	.word	0x200000e0

080250f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80250f8:	b538      	push	{r3, r4, r5, lr}
 80250fa:	4c15      	ldr	r4, [pc, #84]	@ (8025150 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80250fc:	7823      	ldrb	r3, [r4, #0]
 80250fe:	f3bf 8f5b 	dmb	ish
 8025102:	07da      	lsls	r2, r3, #31
 8025104:	4605      	mov	r5, r0
 8025106:	d40b      	bmi.n	8025120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8025108:	4620      	mov	r0, r4
 802510a:	f008 fc0e 	bl	802d92a <__cxa_guard_acquire>
 802510e:	b138      	cbz	r0, 8025120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8025110:	4620      	mov	r0, r4
 8025112:	f008 fc16 	bl	802d942 <__cxa_guard_release>
 8025116:	4a0f      	ldr	r2, [pc, #60]	@ (8025154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8025118:	490f      	ldr	r1, [pc, #60]	@ (8025158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 802511a:	4810      	ldr	r0, [pc, #64]	@ (802515c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 802511c:	f008 fbfe 	bl	802d91c <__aeabi_atexit>
 8025120:	4c0f      	ldr	r4, [pc, #60]	@ (8025160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8025122:	7823      	ldrb	r3, [r4, #0]
 8025124:	f3bf 8f5b 	dmb	ish
 8025128:	07db      	lsls	r3, r3, #31
 802512a:	d40b      	bmi.n	8025144 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 802512c:	4620      	mov	r0, r4
 802512e:	f008 fbfc 	bl	802d92a <__cxa_guard_acquire>
 8025132:	b138      	cbz	r0, 8025144 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8025134:	4620      	mov	r0, r4
 8025136:	f008 fc04 	bl	802d942 <__cxa_guard_release>
 802513a:	4a06      	ldr	r2, [pc, #24]	@ (8025154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 802513c:	4909      	ldr	r1, [pc, #36]	@ (8025164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 802513e:	480a      	ldr	r0, [pc, #40]	@ (8025168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8025140:	f008 fbec 	bl	802d91c <__aeabi_atexit>
 8025144:	4b05      	ldr	r3, [pc, #20]	@ (802515c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8025146:	60eb      	str	r3, [r5, #12]
 8025148:	4b07      	ldr	r3, [pc, #28]	@ (8025168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802514a:	612b      	str	r3, [r5, #16]
 802514c:	bd38      	pop	{r3, r4, r5, pc}
 802514e:	bf00      	nop
 8025150:	200139a0 	.word	0x200139a0
 8025154:	20000000 	.word	0x20000000
 8025158:	08021191 	.word	0x08021191
 802515c:	200000b4 	.word	0x200000b4
 8025160:	200139a4 	.word	0x200139a4
 8025164:	0802118f 	.word	0x0802118f
 8025168:	200000b8 	.word	0x200000b8

0802516c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 802516c:	b510      	push	{r4, lr}
 802516e:	4604      	mov	r4, r0
 8025170:	f7ff ff88 	bl	8025084 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8025174:	4620      	mov	r0, r4
 8025176:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802517a:	f7ff bfbd 	b.w	80250f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08025180 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8025180:	b538      	push	{r3, r4, r5, lr}
 8025182:	4c15      	ldr	r4, [pc, #84]	@ (80251d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8025184:	7823      	ldrb	r3, [r4, #0]
 8025186:	f3bf 8f5b 	dmb	ish
 802518a:	07da      	lsls	r2, r3, #31
 802518c:	4605      	mov	r5, r0
 802518e:	d40b      	bmi.n	80251a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8025190:	4620      	mov	r0, r4
 8025192:	f008 fbca 	bl	802d92a <__cxa_guard_acquire>
 8025196:	b138      	cbz	r0, 80251a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8025198:	4620      	mov	r0, r4
 802519a:	f008 fbd2 	bl	802d942 <__cxa_guard_release>
 802519e:	4a0f      	ldr	r2, [pc, #60]	@ (80251dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80251a0:	490f      	ldr	r1, [pc, #60]	@ (80251e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80251a2:	4810      	ldr	r0, [pc, #64]	@ (80251e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80251a4:	f008 fbba 	bl	802d91c <__aeabi_atexit>
 80251a8:	4c0f      	ldr	r4, [pc, #60]	@ (80251e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80251aa:	7823      	ldrb	r3, [r4, #0]
 80251ac:	f3bf 8f5b 	dmb	ish
 80251b0:	07db      	lsls	r3, r3, #31
 80251b2:	d40b      	bmi.n	80251cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80251b4:	4620      	mov	r0, r4
 80251b6:	f008 fbb8 	bl	802d92a <__cxa_guard_acquire>
 80251ba:	b138      	cbz	r0, 80251cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80251bc:	4620      	mov	r0, r4
 80251be:	f008 fbc0 	bl	802d942 <__cxa_guard_release>
 80251c2:	4a06      	ldr	r2, [pc, #24]	@ (80251dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80251c4:	4909      	ldr	r1, [pc, #36]	@ (80251ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80251c6:	480a      	ldr	r0, [pc, #40]	@ (80251f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80251c8:	f008 fba8 	bl	802d91c <__aeabi_atexit>
 80251cc:	4b05      	ldr	r3, [pc, #20]	@ (80251e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80251ce:	626b      	str	r3, [r5, #36]	@ 0x24
 80251d0:	4b07      	ldr	r3, [pc, #28]	@ (80251f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80251d2:	62ab      	str	r3, [r5, #40]	@ 0x28
 80251d4:	bd38      	pop	{r3, r4, r5, pc}
 80251d6:	bf00      	nop
 80251d8:	200139d0 	.word	0x200139d0
 80251dc:	20000000 	.word	0x20000000
 80251e0:	08021185 	.word	0x08021185
 80251e4:	200000e4 	.word	0x200000e4
 80251e8:	200139d4 	.word	0x200139d4
 80251ec:	08021183 	.word	0x08021183
 80251f0:	200000e8 	.word	0x200000e8

080251f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80251f4:	b538      	push	{r3, r4, r5, lr}
 80251f6:	4c15      	ldr	r4, [pc, #84]	@ (802524c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80251f8:	7823      	ldrb	r3, [r4, #0]
 80251fa:	f3bf 8f5b 	dmb	ish
 80251fe:	07da      	lsls	r2, r3, #31
 8025200:	4605      	mov	r5, r0
 8025202:	d40b      	bmi.n	802521c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8025204:	4620      	mov	r0, r4
 8025206:	f008 fb90 	bl	802d92a <__cxa_guard_acquire>
 802520a:	b138      	cbz	r0, 802521c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 802520c:	4620      	mov	r0, r4
 802520e:	f008 fb98 	bl	802d942 <__cxa_guard_release>
 8025212:	4a0f      	ldr	r2, [pc, #60]	@ (8025250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8025214:	490f      	ldr	r1, [pc, #60]	@ (8025254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8025216:	4810      	ldr	r0, [pc, #64]	@ (8025258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8025218:	f008 fb80 	bl	802d91c <__aeabi_atexit>
 802521c:	4c0f      	ldr	r4, [pc, #60]	@ (802525c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 802521e:	7823      	ldrb	r3, [r4, #0]
 8025220:	f3bf 8f5b 	dmb	ish
 8025224:	07db      	lsls	r3, r3, #31
 8025226:	d40b      	bmi.n	8025240 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8025228:	4620      	mov	r0, r4
 802522a:	f008 fb7e 	bl	802d92a <__cxa_guard_acquire>
 802522e:	b138      	cbz	r0, 8025240 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8025230:	4620      	mov	r0, r4
 8025232:	f008 fb86 	bl	802d942 <__cxa_guard_release>
 8025236:	4a06      	ldr	r2, [pc, #24]	@ (8025250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8025238:	4909      	ldr	r1, [pc, #36]	@ (8025260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802523a:	480a      	ldr	r0, [pc, #40]	@ (8025264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802523c:	f008 fb6e 	bl	802d91c <__aeabi_atexit>
 8025240:	4b05      	ldr	r3, [pc, #20]	@ (8025258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8025242:	61eb      	str	r3, [r5, #28]
 8025244:	4b07      	ldr	r3, [pc, #28]	@ (8025264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8025246:	622b      	str	r3, [r5, #32]
 8025248:	bd38      	pop	{r3, r4, r5, pc}
 802524a:	bf00      	nop
 802524c:	200139a8 	.word	0x200139a8
 8025250:	20000000 	.word	0x20000000
 8025254:	08021189 	.word	0x08021189
 8025258:	200000bc 	.word	0x200000bc
 802525c:	200139ac 	.word	0x200139ac
 8025260:	08021187 	.word	0x08021187
 8025264:	200000c0 	.word	0x200000c0

08025268 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8025268:	b510      	push	{r4, lr}
 802526a:	4604      	mov	r4, r0
 802526c:	f7ff ff88 	bl	8025180 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8025270:	4620      	mov	r0, r4
 8025272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025276:	f7ff bfbd 	b.w	80251f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0802527c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 802527c:	b538      	push	{r3, r4, r5, lr}
 802527e:	4c15      	ldr	r4, [pc, #84]	@ (80252d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8025280:	7823      	ldrb	r3, [r4, #0]
 8025282:	f3bf 8f5b 	dmb	ish
 8025286:	07da      	lsls	r2, r3, #31
 8025288:	4605      	mov	r5, r0
 802528a:	d40b      	bmi.n	80252a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802528c:	4620      	mov	r0, r4
 802528e:	f008 fb4c 	bl	802d92a <__cxa_guard_acquire>
 8025292:	b138      	cbz	r0, 80252a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8025294:	4620      	mov	r0, r4
 8025296:	f008 fb54 	bl	802d942 <__cxa_guard_release>
 802529a:	4a0f      	ldr	r2, [pc, #60]	@ (80252d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802529c:	490f      	ldr	r1, [pc, #60]	@ (80252dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802529e:	4810      	ldr	r0, [pc, #64]	@ (80252e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80252a0:	f008 fb3c 	bl	802d91c <__aeabi_atexit>
 80252a4:	4c0f      	ldr	r4, [pc, #60]	@ (80252e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80252a6:	7823      	ldrb	r3, [r4, #0]
 80252a8:	f3bf 8f5b 	dmb	ish
 80252ac:	07db      	lsls	r3, r3, #31
 80252ae:	d40b      	bmi.n	80252c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80252b0:	4620      	mov	r0, r4
 80252b2:	f008 fb3a 	bl	802d92a <__cxa_guard_acquire>
 80252b6:	b138      	cbz	r0, 80252c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80252b8:	4620      	mov	r0, r4
 80252ba:	f008 fb42 	bl	802d942 <__cxa_guard_release>
 80252be:	4a06      	ldr	r2, [pc, #24]	@ (80252d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80252c0:	4909      	ldr	r1, [pc, #36]	@ (80252e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80252c2:	480a      	ldr	r0, [pc, #40]	@ (80252ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80252c4:	f008 fb2a 	bl	802d91c <__aeabi_atexit>
 80252c8:	4b05      	ldr	r3, [pc, #20]	@ (80252e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80252ca:	636b      	str	r3, [r5, #52]	@ 0x34
 80252cc:	4b07      	ldr	r3, [pc, #28]	@ (80252ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80252ce:	63ab      	str	r3, [r5, #56]	@ 0x38
 80252d0:	bd38      	pop	{r3, r4, r5, pc}
 80252d2:	bf00      	nop
 80252d4:	200139e0 	.word	0x200139e0
 80252d8:	20000000 	.word	0x20000000
 80252dc:	0802117d 	.word	0x0802117d
 80252e0:	200000f4 	.word	0x200000f4
 80252e4:	200139e4 	.word	0x200139e4
 80252e8:	0802117b 	.word	0x0802117b
 80252ec:	200000f8 	.word	0x200000f8

080252f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80252f0:	b538      	push	{r3, r4, r5, lr}
 80252f2:	4c15      	ldr	r4, [pc, #84]	@ (8025348 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80252f4:	7823      	ldrb	r3, [r4, #0]
 80252f6:	f3bf 8f5b 	dmb	ish
 80252fa:	07da      	lsls	r2, r3, #31
 80252fc:	4605      	mov	r5, r0
 80252fe:	d40b      	bmi.n	8025318 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8025300:	4620      	mov	r0, r4
 8025302:	f008 fb12 	bl	802d92a <__cxa_guard_acquire>
 8025306:	b138      	cbz	r0, 8025318 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8025308:	4620      	mov	r0, r4
 802530a:	f008 fb1a 	bl	802d942 <__cxa_guard_release>
 802530e:	4a0f      	ldr	r2, [pc, #60]	@ (802534c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8025310:	490f      	ldr	r1, [pc, #60]	@ (8025350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8025312:	4810      	ldr	r0, [pc, #64]	@ (8025354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8025314:	f008 fb02 	bl	802d91c <__aeabi_atexit>
 8025318:	4c0f      	ldr	r4, [pc, #60]	@ (8025358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802531a:	7823      	ldrb	r3, [r4, #0]
 802531c:	f3bf 8f5b 	dmb	ish
 8025320:	07db      	lsls	r3, r3, #31
 8025322:	d40b      	bmi.n	802533c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8025324:	4620      	mov	r0, r4
 8025326:	f008 fb00 	bl	802d92a <__cxa_guard_acquire>
 802532a:	b138      	cbz	r0, 802533c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 802532c:	4620      	mov	r0, r4
 802532e:	f008 fb08 	bl	802d942 <__cxa_guard_release>
 8025332:	4a06      	ldr	r2, [pc, #24]	@ (802534c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8025334:	4909      	ldr	r1, [pc, #36]	@ (802535c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8025336:	480a      	ldr	r0, [pc, #40]	@ (8025360 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8025338:	f008 faf0 	bl	802d91c <__aeabi_atexit>
 802533c:	4b05      	ldr	r3, [pc, #20]	@ (8025354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802533e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8025340:	4b07      	ldr	r3, [pc, #28]	@ (8025360 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8025342:	632b      	str	r3, [r5, #48]	@ 0x30
 8025344:	bd38      	pop	{r3, r4, r5, pc}
 8025346:	bf00      	nop
 8025348:	200139b0 	.word	0x200139b0
 802534c:	20000000 	.word	0x20000000
 8025350:	08021181 	.word	0x08021181
 8025354:	200000c4 	.word	0x200000c4
 8025358:	200139b4 	.word	0x200139b4
 802535c:	0802117f 	.word	0x0802117f
 8025360:	200000c8 	.word	0x200000c8

08025364 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8025364:	b510      	push	{r4, lr}
 8025366:	4604      	mov	r4, r0
 8025368:	f7ff ff88 	bl	802527c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802536c:	4620      	mov	r0, r4
 802536e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025372:	f7ff bfbd 	b.w	80252f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08025378 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8025378:	b538      	push	{r3, r4, r5, lr}
 802537a:	4c15      	ldr	r4, [pc, #84]	@ (80253d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802537c:	7823      	ldrb	r3, [r4, #0]
 802537e:	f3bf 8f5b 	dmb	ish
 8025382:	07da      	lsls	r2, r3, #31
 8025384:	4605      	mov	r5, r0
 8025386:	d40b      	bmi.n	80253a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8025388:	4620      	mov	r0, r4
 802538a:	f008 face 	bl	802d92a <__cxa_guard_acquire>
 802538e:	b138      	cbz	r0, 80253a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8025390:	4620      	mov	r0, r4
 8025392:	f008 fad6 	bl	802d942 <__cxa_guard_release>
 8025396:	4a0f      	ldr	r2, [pc, #60]	@ (80253d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8025398:	490f      	ldr	r1, [pc, #60]	@ (80253d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802539a:	4810      	ldr	r0, [pc, #64]	@ (80253dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802539c:	f008 fabe 	bl	802d91c <__aeabi_atexit>
 80253a0:	4c0f      	ldr	r4, [pc, #60]	@ (80253e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80253a2:	7823      	ldrb	r3, [r4, #0]
 80253a4:	f3bf 8f5b 	dmb	ish
 80253a8:	07db      	lsls	r3, r3, #31
 80253aa:	d40b      	bmi.n	80253c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80253ac:	4620      	mov	r0, r4
 80253ae:	f008 fabc 	bl	802d92a <__cxa_guard_acquire>
 80253b2:	b138      	cbz	r0, 80253c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80253b4:	4620      	mov	r0, r4
 80253b6:	f008 fac4 	bl	802d942 <__cxa_guard_release>
 80253ba:	4a06      	ldr	r2, [pc, #24]	@ (80253d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80253bc:	4909      	ldr	r1, [pc, #36]	@ (80253e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80253be:	480a      	ldr	r0, [pc, #40]	@ (80253e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80253c0:	f008 faac 	bl	802d91c <__aeabi_atexit>
 80253c4:	4b05      	ldr	r3, [pc, #20]	@ (80253dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80253c6:	656b      	str	r3, [r5, #84]	@ 0x54
 80253c8:	4b07      	ldr	r3, [pc, #28]	@ (80253e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80253ca:	65ab      	str	r3, [r5, #88]	@ 0x58
 80253cc:	bd38      	pop	{r3, r4, r5, pc}
 80253ce:	bf00      	nop
 80253d0:	200139e8 	.word	0x200139e8
 80253d4:	20000000 	.word	0x20000000
 80253d8:	0802116d 	.word	0x0802116d
 80253dc:	200000fc 	.word	0x200000fc
 80253e0:	200139ec 	.word	0x200139ec
 80253e4:	0802116b 	.word	0x0802116b
 80253e8:	20000100 	.word	0x20000100

080253ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80253ec:	b538      	push	{r3, r4, r5, lr}
 80253ee:	4c15      	ldr	r4, [pc, #84]	@ (8025444 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80253f0:	7823      	ldrb	r3, [r4, #0]
 80253f2:	f3bf 8f5b 	dmb	ish
 80253f6:	07da      	lsls	r2, r3, #31
 80253f8:	4605      	mov	r5, r0
 80253fa:	d40b      	bmi.n	8025414 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80253fc:	4620      	mov	r0, r4
 80253fe:	f008 fa94 	bl	802d92a <__cxa_guard_acquire>
 8025402:	b138      	cbz	r0, 8025414 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8025404:	4620      	mov	r0, r4
 8025406:	f008 fa9c 	bl	802d942 <__cxa_guard_release>
 802540a:	4a0f      	ldr	r2, [pc, #60]	@ (8025448 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802540c:	490f      	ldr	r1, [pc, #60]	@ (802544c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802540e:	4810      	ldr	r0, [pc, #64]	@ (8025450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8025410:	f008 fa84 	bl	802d91c <__aeabi_atexit>
 8025414:	4c0f      	ldr	r4, [pc, #60]	@ (8025454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8025416:	7823      	ldrb	r3, [r4, #0]
 8025418:	f3bf 8f5b 	dmb	ish
 802541c:	07db      	lsls	r3, r3, #31
 802541e:	d40b      	bmi.n	8025438 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8025420:	4620      	mov	r0, r4
 8025422:	f008 fa82 	bl	802d92a <__cxa_guard_acquire>
 8025426:	b138      	cbz	r0, 8025438 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8025428:	4620      	mov	r0, r4
 802542a:	f008 fa8a 	bl	802d942 <__cxa_guard_release>
 802542e:	4a06      	ldr	r2, [pc, #24]	@ (8025448 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8025430:	4909      	ldr	r1, [pc, #36]	@ (8025458 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8025432:	480a      	ldr	r0, [pc, #40]	@ (802545c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8025434:	f008 fa72 	bl	802d91c <__aeabi_atexit>
 8025438:	4b05      	ldr	r3, [pc, #20]	@ (8025450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802543a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 802543c:	4b07      	ldr	r3, [pc, #28]	@ (802545c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802543e:	652b      	str	r3, [r5, #80]	@ 0x50
 8025440:	bd38      	pop	{r3, r4, r5, pc}
 8025442:	bf00      	nop
 8025444:	200139f0 	.word	0x200139f0
 8025448:	20000000 	.word	0x20000000
 802544c:	08021171 	.word	0x08021171
 8025450:	20000104 	.word	0x20000104
 8025454:	200139f4 	.word	0x200139f4
 8025458:	0802116f 	.word	0x0802116f
 802545c:	20000108 	.word	0x20000108

08025460 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8025460:	b538      	push	{r3, r4, r5, lr}
 8025462:	4c15      	ldr	r4, [pc, #84]	@ (80254b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8025464:	7823      	ldrb	r3, [r4, #0]
 8025466:	f3bf 8f5b 	dmb	ish
 802546a:	07da      	lsls	r2, r3, #31
 802546c:	4605      	mov	r5, r0
 802546e:	d40b      	bmi.n	8025488 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8025470:	4620      	mov	r0, r4
 8025472:	f008 fa5a 	bl	802d92a <__cxa_guard_acquire>
 8025476:	b138      	cbz	r0, 8025488 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8025478:	4620      	mov	r0, r4
 802547a:	f008 fa62 	bl	802d942 <__cxa_guard_release>
 802547e:	4a0f      	ldr	r2, [pc, #60]	@ (80254bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8025480:	490f      	ldr	r1, [pc, #60]	@ (80254c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8025482:	4810      	ldr	r0, [pc, #64]	@ (80254c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8025484:	f008 fa4a 	bl	802d91c <__aeabi_atexit>
 8025488:	4c0f      	ldr	r4, [pc, #60]	@ (80254c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802548a:	7823      	ldrb	r3, [r4, #0]
 802548c:	f3bf 8f5b 	dmb	ish
 8025490:	07db      	lsls	r3, r3, #31
 8025492:	d40b      	bmi.n	80254ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8025494:	4620      	mov	r0, r4
 8025496:	f008 fa48 	bl	802d92a <__cxa_guard_acquire>
 802549a:	b138      	cbz	r0, 80254ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802549c:	4620      	mov	r0, r4
 802549e:	f008 fa50 	bl	802d942 <__cxa_guard_release>
 80254a2:	4a06      	ldr	r2, [pc, #24]	@ (80254bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80254a4:	4909      	ldr	r1, [pc, #36]	@ (80254cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80254a6:	480a      	ldr	r0, [pc, #40]	@ (80254d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80254a8:	f008 fa38 	bl	802d91c <__aeabi_atexit>
 80254ac:	4b05      	ldr	r3, [pc, #20]	@ (80254c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80254ae:	646b      	str	r3, [r5, #68]	@ 0x44
 80254b0:	4b07      	ldr	r3, [pc, #28]	@ (80254d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80254b2:	64ab      	str	r3, [r5, #72]	@ 0x48
 80254b4:	bd38      	pop	{r3, r4, r5, pc}
 80254b6:	bf00      	nop
 80254b8:	200139b8 	.word	0x200139b8
 80254bc:	20000000 	.word	0x20000000
 80254c0:	08021175 	.word	0x08021175
 80254c4:	200000cc 	.word	0x200000cc
 80254c8:	200139bc 	.word	0x200139bc
 80254cc:	08021173 	.word	0x08021173
 80254d0:	200000d0 	.word	0x200000d0

080254d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80254d4:	b538      	push	{r3, r4, r5, lr}
 80254d6:	4c15      	ldr	r4, [pc, #84]	@ (802552c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80254d8:	7823      	ldrb	r3, [r4, #0]
 80254da:	f3bf 8f5b 	dmb	ish
 80254de:	07da      	lsls	r2, r3, #31
 80254e0:	4605      	mov	r5, r0
 80254e2:	d40b      	bmi.n	80254fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80254e4:	4620      	mov	r0, r4
 80254e6:	f008 fa20 	bl	802d92a <__cxa_guard_acquire>
 80254ea:	b138      	cbz	r0, 80254fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80254ec:	4620      	mov	r0, r4
 80254ee:	f008 fa28 	bl	802d942 <__cxa_guard_release>
 80254f2:	4a0f      	ldr	r2, [pc, #60]	@ (8025530 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80254f4:	490f      	ldr	r1, [pc, #60]	@ (8025534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80254f6:	4810      	ldr	r0, [pc, #64]	@ (8025538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80254f8:	f008 fa10 	bl	802d91c <__aeabi_atexit>
 80254fc:	4c0f      	ldr	r4, [pc, #60]	@ (802553c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80254fe:	7823      	ldrb	r3, [r4, #0]
 8025500:	f3bf 8f5b 	dmb	ish
 8025504:	07db      	lsls	r3, r3, #31
 8025506:	d40b      	bmi.n	8025520 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8025508:	4620      	mov	r0, r4
 802550a:	f008 fa0e 	bl	802d92a <__cxa_guard_acquire>
 802550e:	b138      	cbz	r0, 8025520 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8025510:	4620      	mov	r0, r4
 8025512:	f008 fa16 	bl	802d942 <__cxa_guard_release>
 8025516:	4a06      	ldr	r2, [pc, #24]	@ (8025530 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8025518:	4909      	ldr	r1, [pc, #36]	@ (8025540 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802551a:	480a      	ldr	r0, [pc, #40]	@ (8025544 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802551c:	f008 f9fe 	bl	802d91c <__aeabi_atexit>
 8025520:	4b05      	ldr	r3, [pc, #20]	@ (8025538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8025522:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8025524:	4b07      	ldr	r3, [pc, #28]	@ (8025544 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8025526:	642b      	str	r3, [r5, #64]	@ 0x40
 8025528:	bd38      	pop	{r3, r4, r5, pc}
 802552a:	bf00      	nop
 802552c:	200139d8 	.word	0x200139d8
 8025530:	20000000 	.word	0x20000000
 8025534:	08021179 	.word	0x08021179
 8025538:	200000ec 	.word	0x200000ec
 802553c:	200139dc 	.word	0x200139dc
 8025540:	08021177 	.word	0x08021177
 8025544:	200000f0 	.word	0x200000f0

08025548 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8025548:	b510      	push	{r4, lr}
 802554a:	4604      	mov	r4, r0
 802554c:	f7ff ff14 	bl	8025378 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8025550:	4620      	mov	r0, r4
 8025552:	f7ff ff85 	bl	8025460 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8025556:	4620      	mov	r0, r4
 8025558:	f7ff ff48 	bl	80253ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802555c:	4620      	mov	r0, r4
 802555e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025562:	f7ff bfb7 	b.w	80254d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08025568 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8025568:	b538      	push	{r3, r4, r5, lr}
 802556a:	4c15      	ldr	r4, [pc, #84]	@ (80255c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802556c:	7823      	ldrb	r3, [r4, #0]
 802556e:	f3bf 8f5b 	dmb	ish
 8025572:	07da      	lsls	r2, r3, #31
 8025574:	4605      	mov	r5, r0
 8025576:	d40b      	bmi.n	8025590 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8025578:	4620      	mov	r0, r4
 802557a:	f008 f9d6 	bl	802d92a <__cxa_guard_acquire>
 802557e:	b138      	cbz	r0, 8025590 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8025580:	4620      	mov	r0, r4
 8025582:	f008 f9de 	bl	802d942 <__cxa_guard_release>
 8025586:	4a0f      	ldr	r2, [pc, #60]	@ (80255c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8025588:	490f      	ldr	r1, [pc, #60]	@ (80255c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802558a:	4810      	ldr	r0, [pc, #64]	@ (80255cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802558c:	f008 f9c6 	bl	802d91c <__aeabi_atexit>
 8025590:	4c0f      	ldr	r4, [pc, #60]	@ (80255d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8025592:	7823      	ldrb	r3, [r4, #0]
 8025594:	f3bf 8f5b 	dmb	ish
 8025598:	07db      	lsls	r3, r3, #31
 802559a:	d40b      	bmi.n	80255b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802559c:	4620      	mov	r0, r4
 802559e:	f008 f9c4 	bl	802d92a <__cxa_guard_acquire>
 80255a2:	b138      	cbz	r0, 80255b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80255a4:	4620      	mov	r0, r4
 80255a6:	f008 f9cc 	bl	802d942 <__cxa_guard_release>
 80255aa:	4a06      	ldr	r2, [pc, #24]	@ (80255c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80255ac:	4909      	ldr	r1, [pc, #36]	@ (80255d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80255ae:	480a      	ldr	r0, [pc, #40]	@ (80255d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80255b0:	f008 f9b4 	bl	802d91c <__aeabi_atexit>
 80255b4:	4b05      	ldr	r3, [pc, #20]	@ (80255cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80255b6:	666b      	str	r3, [r5, #100]	@ 0x64
 80255b8:	4b07      	ldr	r3, [pc, #28]	@ (80255d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80255ba:	66ab      	str	r3, [r5, #104]	@ 0x68
 80255bc:	bd38      	pop	{r3, r4, r5, pc}
 80255be:	bf00      	nop
 80255c0:	200139c0 	.word	0x200139c0
 80255c4:	20000000 	.word	0x20000000
 80255c8:	08021165 	.word	0x08021165
 80255cc:	200000d4 	.word	0x200000d4
 80255d0:	200139c4 	.word	0x200139c4
 80255d4:	08021163 	.word	0x08021163
 80255d8:	200000d8 	.word	0x200000d8

080255dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80255dc:	b538      	push	{r3, r4, r5, lr}
 80255de:	4c15      	ldr	r4, [pc, #84]	@ (8025634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80255e0:	7823      	ldrb	r3, [r4, #0]
 80255e2:	f3bf 8f5b 	dmb	ish
 80255e6:	07da      	lsls	r2, r3, #31
 80255e8:	4605      	mov	r5, r0
 80255ea:	d40b      	bmi.n	8025604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80255ec:	4620      	mov	r0, r4
 80255ee:	f008 f99c 	bl	802d92a <__cxa_guard_acquire>
 80255f2:	b138      	cbz	r0, 8025604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80255f4:	4620      	mov	r0, r4
 80255f6:	f008 f9a4 	bl	802d942 <__cxa_guard_release>
 80255fa:	4a0f      	ldr	r2, [pc, #60]	@ (8025638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80255fc:	490f      	ldr	r1, [pc, #60]	@ (802563c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80255fe:	4810      	ldr	r0, [pc, #64]	@ (8025640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8025600:	f008 f98c 	bl	802d91c <__aeabi_atexit>
 8025604:	4c0f      	ldr	r4, [pc, #60]	@ (8025644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8025606:	7823      	ldrb	r3, [r4, #0]
 8025608:	f3bf 8f5b 	dmb	ish
 802560c:	07db      	lsls	r3, r3, #31
 802560e:	d40b      	bmi.n	8025628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8025610:	4620      	mov	r0, r4
 8025612:	f008 f98a 	bl	802d92a <__cxa_guard_acquire>
 8025616:	b138      	cbz	r0, 8025628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8025618:	4620      	mov	r0, r4
 802561a:	f008 f992 	bl	802d942 <__cxa_guard_release>
 802561e:	4a06      	ldr	r2, [pc, #24]	@ (8025638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8025620:	4909      	ldr	r1, [pc, #36]	@ (8025648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8025622:	480a      	ldr	r0, [pc, #40]	@ (802564c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8025624:	f008 f97a 	bl	802d91c <__aeabi_atexit>
 8025628:	4b05      	ldr	r3, [pc, #20]	@ (8025640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802562a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 802562c:	4b07      	ldr	r3, [pc, #28]	@ (802564c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802562e:	662b      	str	r3, [r5, #96]	@ 0x60
 8025630:	bd38      	pop	{r3, r4, r5, pc}
 8025632:	bf00      	nop
 8025634:	20013998 	.word	0x20013998
 8025638:	20000000 	.word	0x20000000
 802563c:	08021169 	.word	0x08021169
 8025640:	200000ac 	.word	0x200000ac
 8025644:	2001399c 	.word	0x2001399c
 8025648:	08021167 	.word	0x08021167
 802564c:	200000b0 	.word	0x200000b0

08025650 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8025650:	b510      	push	{r4, lr}
 8025652:	4604      	mov	r4, r0
 8025654:	f7ff ff88 	bl	8025568 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8025658:	4620      	mov	r0, r4
 802565a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802565e:	f7ff bfbd 	b.w	80255dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08025664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8025664:	b538      	push	{r3, r4, r5, lr}
 8025666:	4c15      	ldr	r4, [pc, #84]	@ (80256bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8025668:	7823      	ldrb	r3, [r4, #0]
 802566a:	f3bf 8f5b 	dmb	ish
 802566e:	07da      	lsls	r2, r3, #31
 8025670:	4605      	mov	r5, r0
 8025672:	d40b      	bmi.n	802568c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8025674:	4620      	mov	r0, r4
 8025676:	f008 f958 	bl	802d92a <__cxa_guard_acquire>
 802567a:	b138      	cbz	r0, 802568c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802567c:	4620      	mov	r0, r4
 802567e:	f008 f960 	bl	802d942 <__cxa_guard_release>
 8025682:	4a0f      	ldr	r2, [pc, #60]	@ (80256c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8025684:	490f      	ldr	r1, [pc, #60]	@ (80256c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8025686:	4810      	ldr	r0, [pc, #64]	@ (80256c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8025688:	f008 f948 	bl	802d91c <__aeabi_atexit>
 802568c:	4c0f      	ldr	r4, [pc, #60]	@ (80256cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802568e:	7823      	ldrb	r3, [r4, #0]
 8025690:	f3bf 8f5b 	dmb	ish
 8025694:	07db      	lsls	r3, r3, #31
 8025696:	d40b      	bmi.n	80256b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8025698:	4620      	mov	r0, r4
 802569a:	f008 f946 	bl	802d92a <__cxa_guard_acquire>
 802569e:	b138      	cbz	r0, 80256b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80256a0:	4620      	mov	r0, r4
 80256a2:	f008 f94e 	bl	802d942 <__cxa_guard_release>
 80256a6:	4a06      	ldr	r2, [pc, #24]	@ (80256c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80256a8:	4909      	ldr	r1, [pc, #36]	@ (80256d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80256aa:	480a      	ldr	r0, [pc, #40]	@ (80256d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80256ac:	f008 f936 	bl	802d91c <__aeabi_atexit>
 80256b0:	4b05      	ldr	r3, [pc, #20]	@ (80256c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80256b2:	676b      	str	r3, [r5, #116]	@ 0x74
 80256b4:	4b07      	ldr	r3, [pc, #28]	@ (80256d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80256b6:	67ab      	str	r3, [r5, #120]	@ 0x78
 80256b8:	bd38      	pop	{r3, r4, r5, pc}
 80256ba:	bf00      	nop
 80256bc:	20013990 	.word	0x20013990
 80256c0:	20000000 	.word	0x20000000
 80256c4:	0802115d 	.word	0x0802115d
 80256c8:	200000a4 	.word	0x200000a4
 80256cc:	20013994 	.word	0x20013994
 80256d0:	0802115b 	.word	0x0802115b
 80256d4:	200000a8 	.word	0x200000a8

080256d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80256d8:	b538      	push	{r3, r4, r5, lr}
 80256da:	4c15      	ldr	r4, [pc, #84]	@ (8025730 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80256dc:	7823      	ldrb	r3, [r4, #0]
 80256de:	f3bf 8f5b 	dmb	ish
 80256e2:	07da      	lsls	r2, r3, #31
 80256e4:	4605      	mov	r5, r0
 80256e6:	d40b      	bmi.n	8025700 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80256e8:	4620      	mov	r0, r4
 80256ea:	f008 f91e 	bl	802d92a <__cxa_guard_acquire>
 80256ee:	b138      	cbz	r0, 8025700 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80256f0:	4620      	mov	r0, r4
 80256f2:	f008 f926 	bl	802d942 <__cxa_guard_release>
 80256f6:	4a0f      	ldr	r2, [pc, #60]	@ (8025734 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80256f8:	490f      	ldr	r1, [pc, #60]	@ (8025738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80256fa:	4810      	ldr	r0, [pc, #64]	@ (802573c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80256fc:	f008 f90e 	bl	802d91c <__aeabi_atexit>
 8025700:	4c0f      	ldr	r4, [pc, #60]	@ (8025740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8025702:	7823      	ldrb	r3, [r4, #0]
 8025704:	f3bf 8f5b 	dmb	ish
 8025708:	07db      	lsls	r3, r3, #31
 802570a:	d40b      	bmi.n	8025724 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802570c:	4620      	mov	r0, r4
 802570e:	f008 f90c 	bl	802d92a <__cxa_guard_acquire>
 8025712:	b138      	cbz	r0, 8025724 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8025714:	4620      	mov	r0, r4
 8025716:	f008 f914 	bl	802d942 <__cxa_guard_release>
 802571a:	4a06      	ldr	r2, [pc, #24]	@ (8025734 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802571c:	4909      	ldr	r1, [pc, #36]	@ (8025744 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802571e:	480a      	ldr	r0, [pc, #40]	@ (8025748 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8025720:	f008 f8fc 	bl	802d91c <__aeabi_atexit>
 8025724:	4b05      	ldr	r3, [pc, #20]	@ (802573c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8025726:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8025728:	4b07      	ldr	r3, [pc, #28]	@ (8025748 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802572a:	672b      	str	r3, [r5, #112]	@ 0x70
 802572c:	bd38      	pop	{r3, r4, r5, pc}
 802572e:	bf00      	nop
 8025730:	20013988 	.word	0x20013988
 8025734:	20000000 	.word	0x20000000
 8025738:	08021161 	.word	0x08021161
 802573c:	2000009c 	.word	0x2000009c
 8025740:	2001398c 	.word	0x2001398c
 8025744:	0802115f 	.word	0x0802115f
 8025748:	200000a0 	.word	0x200000a0

0802574c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802574c:	b510      	push	{r4, lr}
 802574e:	4604      	mov	r4, r0
 8025750:	f7ff ff88 	bl	8025664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8025754:	4620      	mov	r0, r4
 8025756:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802575a:	f7ff bfbd 	b.w	80256d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802575e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802575e:	b510      	push	{r4, lr}
 8025760:	4604      	mov	r4, r0
 8025762:	f7ff fff3 	bl	802574c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8025766:	4620      	mov	r0, r4
 8025768:	f7ff ff72 	bl	8025650 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802576c:	4620      	mov	r0, r4
 802576e:	f7ff fdf9 	bl	8025364 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8025772:	4620      	mov	r0, r4
 8025774:	f7ff fcfa 	bl	802516c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8025778:	4620      	mov	r0, r4
 802577a:	f7ff fd75 	bl	8025268 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802577e:	4620      	mov	r0, r4
 8025780:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025784:	f7ff bee0 	b.w	8025548 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08025788 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8025788:	b538      	push	{r3, r4, r5, lr}
 802578a:	4c0b      	ldr	r4, [pc, #44]	@ (80257b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802578c:	7823      	ldrb	r3, [r4, #0]
 802578e:	f3bf 8f5b 	dmb	ish
 8025792:	07db      	lsls	r3, r3, #31
 8025794:	4605      	mov	r5, r0
 8025796:	d40b      	bmi.n	80257b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8025798:	4620      	mov	r0, r4
 802579a:	f008 f8c6 	bl	802d92a <__cxa_guard_acquire>
 802579e:	b138      	cbz	r0, 80257b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80257a0:	4620      	mov	r0, r4
 80257a2:	f008 f8ce 	bl	802d942 <__cxa_guard_release>
 80257a6:	4a05      	ldr	r2, [pc, #20]	@ (80257bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80257a8:	4905      	ldr	r1, [pc, #20]	@ (80257c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80257aa:	4806      	ldr	r0, [pc, #24]	@ (80257c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80257ac:	f008 f8b6 	bl	802d91c <__aeabi_atexit>
 80257b0:	4b04      	ldr	r3, [pc, #16]	@ (80257c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80257b2:	67eb      	str	r3, [r5, #124]	@ 0x7c
 80257b4:	bd38      	pop	{r3, r4, r5, pc}
 80257b6:	bf00      	nop
 80257b8:	2001397c 	.word	0x2001397c
 80257bc:	20000000 	.word	0x20000000
 80257c0:	08021159 	.word	0x08021159
 80257c4:	20000094 	.word	0x20000094

080257c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80257c8:	b538      	push	{r3, r4, r5, lr}
 80257ca:	4c0b      	ldr	r4, [pc, #44]	@ (80257f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80257cc:	7823      	ldrb	r3, [r4, #0]
 80257ce:	f3bf 8f5b 	dmb	ish
 80257d2:	07db      	lsls	r3, r3, #31
 80257d4:	4605      	mov	r5, r0
 80257d6:	d40b      	bmi.n	80257f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80257d8:	4620      	mov	r0, r4
 80257da:	f008 f8a6 	bl	802d92a <__cxa_guard_acquire>
 80257de:	b138      	cbz	r0, 80257f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80257e0:	4620      	mov	r0, r4
 80257e2:	f008 f8ae 	bl	802d942 <__cxa_guard_release>
 80257e6:	4a05      	ldr	r2, [pc, #20]	@ (80257fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80257e8:	4905      	ldr	r1, [pc, #20]	@ (8025800 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80257ea:	4806      	ldr	r0, [pc, #24]	@ (8025804 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80257ec:	f008 f896 	bl	802d91c <__aeabi_atexit>
 80257f0:	4b04      	ldr	r3, [pc, #16]	@ (8025804 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80257f2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80257f6:	bd38      	pop	{r3, r4, r5, pc}
 80257f8:	20013980 	.word	0x20013980
 80257fc:	20000000 	.word	0x20000000
 8025800:	08021157 	.word	0x08021157
 8025804:	20000098 	.word	0x20000098

08025808 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8025808:	b570      	push	{r4, r5, r6, lr}
 802580a:	4d0d      	ldr	r5, [pc, #52]	@ (8025840 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 802580c:	4c0d      	ldr	r4, [pc, #52]	@ (8025844 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802580e:	782b      	ldrb	r3, [r5, #0]
 8025810:	f3bf 8f5b 	dmb	ish
 8025814:	f013 0f01 	tst.w	r3, #1
 8025818:	4606      	mov	r6, r0
 802581a:	d10d      	bne.n	8025838 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 802581c:	4628      	mov	r0, r5
 802581e:	f008 f884 	bl	802d92a <__cxa_guard_acquire>
 8025822:	b148      	cbz	r0, 8025838 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8025824:	4b08      	ldr	r3, [pc, #32]	@ (8025848 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8025826:	6023      	str	r3, [r4, #0]
 8025828:	4628      	mov	r0, r5
 802582a:	f008 f88a 	bl	802d942 <__cxa_guard_release>
 802582e:	4a07      	ldr	r2, [pc, #28]	@ (802584c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8025830:	4907      	ldr	r1, [pc, #28]	@ (8025850 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8025832:	4620      	mov	r0, r4
 8025834:	f008 f872 	bl	802d91c <__aeabi_atexit>
 8025838:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 802583c:	bd70      	pop	{r4, r5, r6, pc}
 802583e:	bf00      	nop
 8025840:	20013984 	.word	0x20013984
 8025844:	20013afc 	.word	0x20013afc
 8025848:	080336bc 	.word	0x080336bc
 802584c:	20000000 	.word	0x20000000
 8025850:	08021155 	.word	0x08021155

08025854 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8025854:	b510      	push	{r4, lr}
 8025856:	4604      	mov	r4, r0
 8025858:	f7ff ff96 	bl	8025788 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802585c:	4620      	mov	r0, r4
 802585e:	f7ff ffb3 	bl	80257c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8025862:	4620      	mov	r0, r4
 8025864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025868:	f7ff bfce 	b.w	8025808 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802586c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 802586c:	b570      	push	{r4, r5, r6, lr}
 802586e:	4d0d      	ldr	r5, [pc, #52]	@ (80258a4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8025870:	4c0d      	ldr	r4, [pc, #52]	@ (80258a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8025872:	782b      	ldrb	r3, [r5, #0]
 8025874:	f3bf 8f5b 	dmb	ish
 8025878:	f013 0f01 	tst.w	r3, #1
 802587c:	4606      	mov	r6, r0
 802587e:	d10d      	bne.n	802589c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8025880:	4628      	mov	r0, r5
 8025882:	f008 f852 	bl	802d92a <__cxa_guard_acquire>
 8025886:	b148      	cbz	r0, 802589c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8025888:	4b08      	ldr	r3, [pc, #32]	@ (80258ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 802588a:	6023      	str	r3, [r4, #0]
 802588c:	4628      	mov	r0, r5
 802588e:	f008 f858 	bl	802d942 <__cxa_guard_release>
 8025892:	4a07      	ldr	r2, [pc, #28]	@ (80258b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8025894:	4907      	ldr	r1, [pc, #28]	@ (80258b4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8025896:	4620      	mov	r0, r4
 8025898:	f008 f840 	bl	802d91c <__aeabi_atexit>
 802589c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 80258a0:	bd70      	pop	{r4, r5, r6, pc}
 80258a2:	bf00      	nop
 80258a4:	20013978 	.word	0x20013978
 80258a8:	200139f8 	.word	0x200139f8
 80258ac:	080336d8 	.word	0x080336d8
 80258b0:	20000000 	.word	0x20000000
 80258b4:	08021153 	.word	0x08021153

080258b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80258b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80258bc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80258c0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 80258c4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 80258c8:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 80258cc:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 80258d0:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 80258d4:	8808      	ldrh	r0, [r1, #0]
 80258d6:	fb05 4c0e 	mla	ip, r5, lr, r4
 80258da:	2d00      	cmp	r5, #0
 80258dc:	eb02 0a0c 	add.w	sl, r2, ip
 80258e0:	f2c0 80b0 	blt.w	8025a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80258e4:	45ab      	cmp	fp, r5
 80258e6:	f340 80ad 	ble.w	8025a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80258ea:	2c00      	cmp	r4, #0
 80258ec:	f2c0 80a8 	blt.w	8025a40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80258f0:	45a6      	cmp	lr, r4
 80258f2:	f340 80a5 	ble.w	8025a40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80258f6:	f812 200c 	ldrb.w	r2, [r2, ip]
 80258fa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80258fe:	1c62      	adds	r2, r4, #1
 8025900:	f100 80a3 	bmi.w	8025a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8025904:	4596      	cmp	lr, r2
 8025906:	f340 80a0 	ble.w	8025a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802590a:	f1b9 0f00 	cmp.w	r9, #0
 802590e:	f000 809c 	beq.w	8025a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8025912:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025916:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802591a:	3501      	adds	r5, #1
 802591c:	f100 8099 	bmi.w	8025a52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8025920:	45ab      	cmp	fp, r5
 8025922:	f340 8096 	ble.w	8025a52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8025926:	2f00      	cmp	r7, #0
 8025928:	f000 8093 	beq.w	8025a52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802592c:	2c00      	cmp	r4, #0
 802592e:	f2c0 808e 	blt.w	8025a4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8025932:	45a6      	cmp	lr, r4
 8025934:	f340 808b 	ble.w	8025a4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8025938:	f81a 200e 	ldrb.w	r2, [sl, lr]
 802593c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8025940:	3401      	adds	r4, #1
 8025942:	f100 8089 	bmi.w	8025a58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8025946:	45a6      	cmp	lr, r4
 8025948:	f340 8086 	ble.w	8025a58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802594c:	f1b9 0f00 	cmp.w	r9, #0
 8025950:	f000 8082 	beq.w	8025a58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8025954:	44d6      	add	lr, sl
 8025956:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802595a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 802595e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8025962:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8025966:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 802596a:	fb19 fe07 	smulbb	lr, r9, r7
 802596e:	ea44 0808 	orr.w	r8, r4, r8
 8025972:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8025976:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802597a:	f1c7 0210 	rsb	r2, r7, #16
 802597e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8025982:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025986:	ea44 0c0c 	orr.w	ip, r4, ip
 802598a:	eba2 0209 	sub.w	r2, r2, r9
 802598e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8025992:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8025996:	fb04 f40c 	mul.w	r4, r4, ip
 802599a:	fb02 4808 	mla	r8, r2, r8, r4
 802599e:	041a      	lsls	r2, r3, #16
 80259a0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80259a4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80259a8:	4313      	orrs	r3, r2
 80259aa:	042a      	lsls	r2, r5, #16
 80259ac:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80259b0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80259b4:	fb0e 8303 	mla	r3, lr, r3, r8
 80259b8:	432a      	orrs	r2, r5
 80259ba:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80259be:	fb07 3202 	mla	r2, r7, r2, r3
 80259c2:	0d53      	lsrs	r3, r2, #21
 80259c4:	0952      	lsrs	r2, r2, #5
 80259c6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80259ca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80259ce:	431a      	orrs	r2, r3
 80259d0:	b293      	uxth	r3, r2
 80259d2:	b2b4      	uxth	r4, r6
 80259d4:	1202      	asrs	r2, r0, #8
 80259d6:	43f6      	mvns	r6, r6
 80259d8:	b2f6      	uxtb	r6, r6
 80259da:	121d      	asrs	r5, r3, #8
 80259dc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80259e0:	fb12 f206 	smulbb	r2, r2, r6
 80259e4:	10c7      	asrs	r7, r0, #3
 80259e6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80259ea:	00c0      	lsls	r0, r0, #3
 80259ec:	fb05 2504 	mla	r5, r5, r4, r2
 80259f0:	b2c0      	uxtb	r0, r0
 80259f2:	10da      	asrs	r2, r3, #3
 80259f4:	00db      	lsls	r3, r3, #3
 80259f6:	b2db      	uxtb	r3, r3
 80259f8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80259fc:	fb10 f006 	smulbb	r0, r0, r6
 8025a00:	b2ad      	uxth	r5, r5
 8025a02:	fb03 0004 	mla	r0, r3, r4, r0
 8025a06:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025a0a:	fb17 f706 	smulbb	r7, r7, r6
 8025a0e:	b280      	uxth	r0, r0
 8025a10:	1c6b      	adds	r3, r5, #1
 8025a12:	fb02 7204 	mla	r2, r2, r4, r7
 8025a16:	b292      	uxth	r2, r2
 8025a18:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025a1c:	1c43      	adds	r3, r0, #1
 8025a1e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8025a22:	1c50      	adds	r0, r2, #1
 8025a24:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8025a28:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025a2c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025a30:	0952      	lsrs	r2, r2, #5
 8025a32:	432b      	orrs	r3, r5
 8025a34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025a38:	4313      	orrs	r3, r2
 8025a3a:	800b      	strh	r3, [r1, #0]
 8025a3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a40:	4680      	mov	r8, r0
 8025a42:	e75c      	b.n	80258fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8025a44:	4684      	mov	ip, r0
 8025a46:	4680      	mov	r8, r0
 8025a48:	e767      	b.n	802591a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8025a4a:	4684      	mov	ip, r0
 8025a4c:	e765      	b.n	802591a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8025a4e:	4605      	mov	r5, r0
 8025a50:	e776      	b.n	8025940 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8025a52:	4603      	mov	r3, r0
 8025a54:	4605      	mov	r5, r0
 8025a56:	e782      	b.n	802595e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8025a58:	4603      	mov	r3, r0
 8025a5a:	e780      	b.n	802595e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08025a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a60:	b099      	sub	sp, #100	@ 0x64
 8025a62:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8025a66:	9215      	str	r2, [sp, #84]	@ 0x54
 8025a68:	9309      	str	r3, [sp, #36]	@ 0x24
 8025a6a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8025a6c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8025a70:	930d      	str	r3, [sp, #52]	@ 0x34
 8025a72:	910c      	str	r1, [sp, #48]	@ 0x30
 8025a74:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8025a78:	9016      	str	r0, [sp, #88]	@ 0x58
 8025a7a:	6850      	ldr	r0, [r2, #4]
 8025a7c:	6812      	ldr	r2, [r2, #0]
 8025a7e:	fb00 1303 	mla	r3, r0, r3, r1
 8025a82:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8025a86:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025a88:	681b      	ldr	r3, [r3, #0]
 8025a8a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8025a8c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025a8e:	685e      	ldr	r6, [r3, #4]
 8025a90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025a92:	43db      	mvns	r3, r3
 8025a94:	b2db      	uxtb	r3, r3
 8025a96:	3604      	adds	r6, #4
 8025a98:	930a      	str	r3, [sp, #40]	@ 0x28
 8025a9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025a9c:	2b00      	cmp	r3, #0
 8025a9e:	dc03      	bgt.n	8025aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8025aa0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8025aa2:	2b00      	cmp	r3, #0
 8025aa4:	f340 8225 	ble.w	8025ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8025aa8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025aaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025aae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ab2:	1e48      	subs	r0, r1, #1
 8025ab4:	1e57      	subs	r7, r2, #1
 8025ab6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025ab8:	2b00      	cmp	r3, #0
 8025aba:	f340 80e3 	ble.w	8025c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8025abe:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8025ac2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8025ac6:	d406      	bmi.n	8025ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025ac8:	4584      	cmp	ip, r0
 8025aca:	da04      	bge.n	8025ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025acc:	2b00      	cmp	r3, #0
 8025ace:	db02      	blt.n	8025ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8025ad0:	42bb      	cmp	r3, r7
 8025ad2:	f2c0 80d8 	blt.w	8025c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8025ad6:	f11c 0c01 	adds.w	ip, ip, #1
 8025ada:	f100 80c9 	bmi.w	8025c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025ade:	4561      	cmp	r1, ip
 8025ae0:	f2c0 80c6 	blt.w	8025c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025ae4:	3301      	adds	r3, #1
 8025ae6:	f100 80c3 	bmi.w	8025c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025aea:	429a      	cmp	r2, r3
 8025aec:	f2c0 80c0 	blt.w	8025c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025af0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8025af4:	4647      	mov	r7, r8
 8025af6:	f1bb 0f00 	cmp.w	fp, #0
 8025afa:	f340 80e3 	ble.w	8025cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8025afe:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8025b00:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025b02:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025b06:	689b      	ldr	r3, [r3, #8]
 8025b08:	ea5f 422a 	movs.w	r2, sl, asr #16
 8025b0c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8025b10:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8025b14:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8025b18:	f100 8121 	bmi.w	8025d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025b1c:	f103 39ff 	add.w	r9, r3, #4294967295
 8025b20:	454a      	cmp	r2, r9
 8025b22:	f280 811c 	bge.w	8025d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025b26:	f1bc 0f00 	cmp.w	ip, #0
 8025b2a:	f2c0 8118 	blt.w	8025d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025b2e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8025b32:	45cc      	cmp	ip, r9
 8025b34:	f280 8113 	bge.w	8025d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025b38:	b21b      	sxth	r3, r3
 8025b3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8025b3e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025b40:	eb04 0902 	add.w	r9, r4, r2
 8025b44:	5ca2      	ldrb	r2, [r4, r2]
 8025b46:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8025b4a:	2800      	cmp	r0, #0
 8025b4c:	f000 80fe 	beq.w	8025d4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025b50:	f899 2001 	ldrb.w	r2, [r9, #1]
 8025b54:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025b58:	9211      	str	r2, [sp, #68]	@ 0x44
 8025b5a:	b151      	cbz	r1, 8025b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8025b5c:	eb09 0203 	add.w	r2, r9, r3
 8025b60:	f819 3003 	ldrb.w	r3, [r9, r3]
 8025b64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025b68:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025b6a:	7853      	ldrb	r3, [r2, #1]
 8025b6c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025b70:	9312      	str	r3, [sp, #72]	@ 0x48
 8025b72:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8025b74:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8025b76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8025b7a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025b7e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025b82:	ea4c 0c03 	orr.w	ip, ip, r3
 8025b86:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8025b88:	041b      	lsls	r3, r3, #16
 8025b8a:	fb10 f201 	smulbb	r2, r0, r1
 8025b8e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8025b92:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025b96:	10d2      	asrs	r2, r2, #3
 8025b98:	4323      	orrs	r3, r4
 8025b9a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8025b9e:	4353      	muls	r3, r2
 8025ba0:	fb09 330c 	mla	r3, r9, ip, r3
 8025ba4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8025ba8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025bac:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8025bb0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8025bb4:	f1c1 0c10 	rsb	ip, r1, #16
 8025bb8:	ebac 0c00 	sub.w	ip, ip, r0
 8025bbc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8025bc0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8025bc4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025bc6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025bc8:	0418      	lsls	r0, r3, #16
 8025bca:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025bce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025bd2:	4318      	orrs	r0, r3
 8025bd4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8025bd8:	fb02 c200 	mla	r2, r2, r0, ip
 8025bdc:	0d53      	lsrs	r3, r2, #21
 8025bde:	0952      	lsrs	r2, r2, #5
 8025be0:	8838      	ldrh	r0, [r7, #0]
 8025be2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025be6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025bea:	431a      	orrs	r2, r3
 8025bec:	b292      	uxth	r2, r2
 8025bee:	1201      	asrs	r1, r0, #8
 8025bf0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8025bf4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8025bf8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025bfc:	fb11 f104 	smulbb	r1, r1, r4
 8025c00:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8025c04:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8025c08:	00c0      	lsls	r0, r0, #3
 8025c0a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8025c0e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8025c12:	10d1      	asrs	r1, r2, #3
 8025c14:	b2c0      	uxtb	r0, r0
 8025c16:	00d2      	lsls	r2, r2, #3
 8025c18:	b2d2      	uxtb	r2, r2
 8025c1a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025c1e:	fb1e fe04 	smulbb	lr, lr, r4
 8025c22:	fb10 f004 	smulbb	r0, r0, r4
 8025c26:	fa1f fc8c 	uxth.w	ip, ip
 8025c2a:	fb01 e103 	mla	r1, r1, r3, lr
 8025c2e:	fb02 0303 	mla	r3, r2, r3, r0
 8025c32:	b29a      	uxth	r2, r3
 8025c34:	f10c 0301 	add.w	r3, ip, #1
 8025c38:	b289      	uxth	r1, r1
 8025c3a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025c3e:	1c53      	adds	r3, r2, #1
 8025c40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025c44:	1c4a      	adds	r2, r1, #1
 8025c46:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025c4a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8025c4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025c52:	0949      	lsrs	r1, r1, #5
 8025c54:	ea43 030c 	orr.w	r3, r3, ip
 8025c58:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025c5c:	430b      	orrs	r3, r1
 8025c5e:	803b      	strh	r3, [r7, #0]
 8025c60:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025c62:	449a      	add	sl, r3
 8025c64:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025c66:	3702      	adds	r7, #2
 8025c68:	441d      	add	r5, r3
 8025c6a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025c6e:	e742      	b.n	8025af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025c70:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025c72:	449a      	add	sl, r3
 8025c74:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025c76:	441d      	add	r5, r3
 8025c78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025c7a:	3b01      	subs	r3, #1
 8025c7c:	9309      	str	r3, [sp, #36]	@ 0x24
 8025c7e:	f108 0802 	add.w	r8, r8, #2
 8025c82:	e718      	b.n	8025ab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8025c84:	d023      	beq.n	8025cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8025c86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025c88:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8025c8a:	3b01      	subs	r3, #1
 8025c8c:	fb00 a003 	mla	r0, r0, r3, sl
 8025c90:	1400      	asrs	r0, r0, #16
 8025c92:	f53f af2d 	bmi.w	8025af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025c96:	3901      	subs	r1, #1
 8025c98:	4288      	cmp	r0, r1
 8025c9a:	f6bf af29 	bge.w	8025af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025c9e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8025ca0:	fb01 5303 	mla	r3, r1, r3, r5
 8025ca4:	141b      	asrs	r3, r3, #16
 8025ca6:	f53f af23 	bmi.w	8025af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025caa:	3a01      	subs	r2, #1
 8025cac:	4293      	cmp	r3, r2
 8025cae:	f6bf af1f 	bge.w	8025af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025cb2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8025cb6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8025cba:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8025cbe:	f1be 0f00 	cmp.w	lr, #0
 8025cc2:	dc6c      	bgt.n	8025d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8025cc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025cc6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025cca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8025cce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025cd0:	2b00      	cmp	r3, #0
 8025cd2:	f340 810e 	ble.w	8025ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8025cd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025cda:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025cde:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025ce2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8025ce4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025ce8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025cec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025cf0:	eef0 6a62 	vmov.f32	s13, s5
 8025cf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025cf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025cfc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025d00:	ee16 aa90 	vmov	sl, s13
 8025d04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025d08:	eef0 6a43 	vmov.f32	s13, s6
 8025d0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025d10:	ee12 2a90 	vmov	r2, s5
 8025d14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025d18:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d1c:	ee13 2a10 	vmov	r2, s6
 8025d20:	9325      	str	r3, [sp, #148]	@ 0x94
 8025d22:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8025d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d28:	9326      	str	r3, [sp, #152]	@ 0x98
 8025d2a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025d2c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8025d2e:	3b01      	subs	r3, #1
 8025d30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025d34:	930c      	str	r3, [sp, #48]	@ 0x30
 8025d36:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8025d38:	bf08      	it	eq
 8025d3a:	4613      	moveq	r3, r2
 8025d3c:	ee16 5a90 	vmov	r5, s13
 8025d40:	9309      	str	r3, [sp, #36]	@ 0x24
 8025d42:	eeb0 3a67 	vmov.f32	s6, s15
 8025d46:	eef0 2a47 	vmov.f32	s5, s14
 8025d4a:	e6a6      	b.n	8025a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8025d4c:	2900      	cmp	r1, #0
 8025d4e:	f43f af10 	beq.w	8025b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8025d52:	f819 3003 	ldrb.w	r3, [r9, r3]
 8025d56:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d5a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025d5c:	e709      	b.n	8025b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8025d5e:	f112 0901 	adds.w	r9, r2, #1
 8025d62:	f53f af7d 	bmi.w	8025c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025d66:	454b      	cmp	r3, r9
 8025d68:	f6ff af7a 	blt.w	8025c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025d6c:	f11c 0901 	adds.w	r9, ip, #1
 8025d70:	f53f af76 	bmi.w	8025c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025d74:	45ce      	cmp	lr, r9
 8025d76:	f6ff af73 	blt.w	8025c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025d7a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8025d7c:	9202      	str	r2, [sp, #8]
 8025d7e:	b21b      	sxth	r3, r3
 8025d80:	fa0f f28e 	sxth.w	r2, lr
 8025d84:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8025d88:	e9cd c003 	strd	ip, r0, [sp, #12]
 8025d8c:	9201      	str	r2, [sp, #4]
 8025d8e:	9300      	str	r3, [sp, #0]
 8025d90:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025d92:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8025d94:	4633      	mov	r3, r6
 8025d96:	4639      	mov	r1, r7
 8025d98:	f7ff fd8e 	bl	80258b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8025d9c:	e760      	b.n	8025c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8025d9e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8025da0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025da2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025da6:	ea4f 422a 	mov.w	r2, sl, asr #16
 8025daa:	1429      	asrs	r1, r5, #16
 8025dac:	fb03 2101 	mla	r1, r3, r1, r2
 8025db0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025db2:	440a      	add	r2, r1
 8025db4:	5c61      	ldrb	r1, [r4, r1]
 8025db6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8025dba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8025dbe:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8025dc2:	f1bc 0f00 	cmp.w	ip, #0
 8025dc6:	f000 808c 	beq.w	8025ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8025dca:	7857      	ldrb	r7, [r2, #1]
 8025dcc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8025dd0:	9413      	str	r4, [sp, #76]	@ 0x4c
 8025dd2:	b140      	cbz	r0, 8025de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8025dd4:	18d7      	adds	r7, r2, r3
 8025dd6:	5cd3      	ldrb	r3, [r2, r3]
 8025dd8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025ddc:	9310      	str	r3, [sp, #64]	@ 0x40
 8025dde:	787b      	ldrb	r3, [r7, #1]
 8025de0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025de4:	9314      	str	r3, [sp, #80]	@ 0x50
 8025de6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8025de8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8025dea:	fb1c f200 	smulbb	r2, ip, r0
 8025dee:	041f      	lsls	r7, r3, #16
 8025df0:	10d2      	asrs	r2, r2, #3
 8025df2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025df6:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8025dfa:	431f      	orrs	r7, r3
 8025dfc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8025e00:	9317      	str	r3, [sp, #92]	@ 0x5c
 8025e02:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025e04:	041b      	lsls	r3, r3, #16
 8025e06:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8025e0a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025e0e:	ea43 030b 	orr.w	r3, r3, fp
 8025e12:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8025e14:	4353      	muls	r3, r2
 8025e16:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025e1a:	fb04 3707 	mla	r7, r4, r7, r3
 8025e1e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8025e22:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8025e26:	ea43 0b01 	orr.w	fp, r3, r1
 8025e2a:	f1c0 0110 	rsb	r1, r0, #16
 8025e2e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8025e30:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025e32:	eba1 0c0c 	sub.w	ip, r1, ip
 8025e36:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8025e3a:	fb0c 770b 	mla	r7, ip, fp, r7
 8025e3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8025e42:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8025e46:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025e4a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8025e4e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8025e52:	fb02 770c 	mla	r7, r2, ip, r7
 8025e56:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8025e58:	0d79      	lsrs	r1, r7, #21
 8025e5a:	097f      	lsrs	r7, r7, #5
 8025e5c:	8812      	ldrh	r2, [r2, #0]
 8025e5e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025e62:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025e66:	430f      	orrs	r7, r1
 8025e68:	b2bb      	uxth	r3, r7
 8025e6a:	1211      	asrs	r1, r2, #8
 8025e6c:	1218      	asrs	r0, r3, #8
 8025e6e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025e72:	fb11 f104 	smulbb	r1, r1, r4
 8025e76:	10d7      	asrs	r7, r2, #3
 8025e78:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025e7c:	00d2      	lsls	r2, r2, #3
 8025e7e:	fb00 1009 	mla	r0, r0, r9, r1
 8025e82:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8025e86:	10d9      	asrs	r1, r3, #3
 8025e88:	b2d2      	uxtb	r2, r2
 8025e8a:	00db      	lsls	r3, r3, #3
 8025e8c:	fb17 f704 	smulbb	r7, r7, r4
 8025e90:	fb12 f204 	smulbb	r2, r2, r4
 8025e94:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025e98:	b2db      	uxtb	r3, r3
 8025e9a:	b280      	uxth	r0, r0
 8025e9c:	fb01 7109 	mla	r1, r1, r9, r7
 8025ea0:	fb03 2309 	mla	r3, r3, r9, r2
 8025ea4:	b29b      	uxth	r3, r3
 8025ea6:	b289      	uxth	r1, r1
 8025ea8:	1c42      	adds	r2, r0, #1
 8025eaa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025eae:	1c4f      	adds	r7, r1, #1
 8025eb0:	1c5a      	adds	r2, r3, #1
 8025eb2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025eb6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8025eba:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8025ebe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025ec2:	0949      	lsrs	r1, r1, #5
 8025ec4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025ec6:	4310      	orrs	r0, r2
 8025ec8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025ecc:	4308      	orrs	r0, r1
 8025ece:	f823 0b02 	strh.w	r0, [r3], #2
 8025ed2:	930e      	str	r3, [sp, #56]	@ 0x38
 8025ed4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8025ed6:	449a      	add	sl, r3
 8025ed8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8025eda:	f10e 3eff 	add.w	lr, lr, #4294967295
 8025ede:	441d      	add	r5, r3
 8025ee0:	e6ed      	b.n	8025cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8025ee2:	2800      	cmp	r0, #0
 8025ee4:	f43f af7f 	beq.w	8025de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8025ee8:	5cd3      	ldrb	r3, [r2, r3]
 8025eea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025eee:	9310      	str	r3, [sp, #64]	@ 0x40
 8025ef0:	e779      	b.n	8025de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8025ef2:	b019      	add	sp, #100	@ 0x64
 8025ef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025ef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025ef8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025efc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8025f00:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8025f04:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8025f08:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8025f0c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8025f10:	8808      	ldrh	r0, [r1, #0]
 8025f12:	fb08 470e 	mla	r7, r8, lr, r4
 8025f16:	f1b8 0f00 	cmp.w	r8, #0
 8025f1a:	eb02 0907 	add.w	r9, r2, r7
 8025f1e:	db67      	blt.n	8025ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8025f20:	45c2      	cmp	sl, r8
 8025f22:	dd65      	ble.n	8025ff0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8025f24:	2c00      	cmp	r4, #0
 8025f26:	db61      	blt.n	8025fec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8025f28:	45a6      	cmp	lr, r4
 8025f2a:	dd5f      	ble.n	8025fec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8025f2c:	5dd2      	ldrb	r2, [r2, r7]
 8025f2e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8025f32:	1c62      	adds	r2, r4, #1
 8025f34:	d45f      	bmi.n	8025ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8025f36:	4596      	cmp	lr, r2
 8025f38:	dd5d      	ble.n	8025ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8025f3a:	2d00      	cmp	r5, #0
 8025f3c:	d05b      	beq.n	8025ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8025f3e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8025f42:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8025f46:	f118 0801 	adds.w	r8, r8, #1
 8025f4a:	d458      	bmi.n	8025ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025f4c:	45c2      	cmp	sl, r8
 8025f4e:	dd56      	ble.n	8025ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025f50:	2e00      	cmp	r6, #0
 8025f52:	d054      	beq.n	8025ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8025f54:	2c00      	cmp	r4, #0
 8025f56:	db50      	blt.n	8025ffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8025f58:	45a6      	cmp	lr, r4
 8025f5a:	dd4e      	ble.n	8025ffa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8025f5c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8025f60:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8025f64:	3401      	adds	r4, #1
 8025f66:	d407      	bmi.n	8025f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8025f68:	45a6      	cmp	lr, r4
 8025f6a:	dd05      	ble.n	8025f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8025f6c:	b125      	cbz	r5, 8025f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8025f6e:	44ce      	add	lr, r9
 8025f70:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8025f74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8025f78:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8025f7c:	fb15 f406 	smulbb	r4, r5, r6
 8025f80:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025f84:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8025f88:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025f8c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025f90:	ea43 0c0c 	orr.w	ip, r3, ip
 8025f94:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8025f98:	f1c6 0310 	rsb	r3, r6, #16
 8025f9c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025fa0:	1b5b      	subs	r3, r3, r5
 8025fa2:	ea4e 0707 	orr.w	r7, lr, r7
 8025fa6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8025faa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025fae:	437d      	muls	r5, r7
 8025fb0:	fb03 5c0c 	mla	ip, r3, ip, r5
 8025fb4:	0403      	lsls	r3, r0, #16
 8025fb6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025fba:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025fbe:	4318      	orrs	r0, r3
 8025fc0:	0413      	lsls	r3, r2, #16
 8025fc2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025fc6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025fca:	4313      	orrs	r3, r2
 8025fcc:	fb04 c000 	mla	r0, r4, r0, ip
 8025fd0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8025fd4:	fb06 0003 	mla	r0, r6, r3, r0
 8025fd8:	0d43      	lsrs	r3, r0, #21
 8025fda:	0940      	lsrs	r0, r0, #5
 8025fdc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025fe0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025fe4:	4318      	orrs	r0, r3
 8025fe6:	8008      	strh	r0, [r1, #0]
 8025fe8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025fec:	4684      	mov	ip, r0
 8025fee:	e7a0      	b.n	8025f32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8025ff0:	4607      	mov	r7, r0
 8025ff2:	4684      	mov	ip, r0
 8025ff4:	e7a7      	b.n	8025f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8025ff6:	4607      	mov	r7, r0
 8025ff8:	e7a5      	b.n	8025f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8025ffa:	4602      	mov	r2, r0
 8025ffc:	e7b2      	b.n	8025f64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8025ffe:	4602      	mov	r2, r0
 8026000:	e7ba      	b.n	8025f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08026002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026006:	b093      	sub	sp, #76	@ 0x4c
 8026008:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802600c:	920f      	str	r2, [sp, #60]	@ 0x3c
 802600e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8026010:	9108      	str	r1, [sp, #32]
 8026012:	9306      	str	r3, [sp, #24]
 8026014:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8026018:	9010      	str	r0, [sp, #64]	@ 0x40
 802601a:	6850      	ldr	r0, [r2, #4]
 802601c:	6812      	ldr	r2, [r2, #0]
 802601e:	fb00 1303 	mla	r3, r0, r3, r1
 8026022:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026026:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026028:	681b      	ldr	r3, [r3, #0]
 802602a:	9307      	str	r3, [sp, #28]
 802602c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802602e:	685f      	ldr	r7, [r3, #4]
 8026030:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8026034:	3704      	adds	r7, #4
 8026036:	9b08      	ldr	r3, [sp, #32]
 8026038:	2b00      	cmp	r3, #0
 802603a:	dc03      	bgt.n	8026044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802603c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802603e:	2b00      	cmp	r3, #0
 8026040:	f340 81b2 	ble.w	80263a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8026044:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026046:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802604a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802604e:	1e48      	subs	r0, r1, #1
 8026050:	f102 3cff 	add.w	ip, r2, #4294967295
 8026054:	9b06      	ldr	r3, [sp, #24]
 8026056:	2b00      	cmp	r3, #0
 8026058:	f340 80a9 	ble.w	80261ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802605c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026060:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026064:	d406      	bmi.n	8026074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8026066:	4586      	cmp	lr, r0
 8026068:	da04      	bge.n	8026074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802606a:	2b00      	cmp	r3, #0
 802606c:	db02      	blt.n	8026074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802606e:	4563      	cmp	r3, ip
 8026070:	f2c0 809e 	blt.w	80261b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026074:	f11e 0e01 	adds.w	lr, lr, #1
 8026078:	f100 808f 	bmi.w	802619a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802607c:	4571      	cmp	r1, lr
 802607e:	f2c0 808c 	blt.w	802619a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026082:	3301      	adds	r3, #1
 8026084:	f100 8089 	bmi.w	802619a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026088:	429a      	cmp	r2, r3
 802608a:	f2c0 8086 	blt.w	802619a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802608e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8026092:	46c8      	mov	r8, r9
 8026094:	f1bb 0f00 	cmp.w	fp, #0
 8026098:	f340 80a6 	ble.w	80261e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 802609c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802609e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80260a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80260a4:	689b      	ldr	r3, [r3, #8]
 80260a6:	1422      	asrs	r2, r4, #16
 80260a8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80260ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80260b0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80260b4:	f100 80e3 	bmi.w	802627e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80260b8:	f103 3aff 	add.w	sl, r3, #4294967295
 80260bc:	4552      	cmp	r2, sl
 80260be:	f280 80de 	bge.w	802627e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80260c2:	f1bc 0f00 	cmp.w	ip, #0
 80260c6:	f2c0 80da 	blt.w	802627e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80260ca:	f10e 3aff 	add.w	sl, lr, #4294967295
 80260ce:	45d4      	cmp	ip, sl
 80260d0:	f280 80d5 	bge.w	802627e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80260d4:	b21b      	sxth	r3, r3
 80260d6:	fb0c 2203 	mla	r2, ip, r3, r2
 80260da:	9d07      	ldr	r5, [sp, #28]
 80260dc:	eb05 0a02 	add.w	sl, r5, r2
 80260e0:	5caa      	ldrb	r2, [r5, r2]
 80260e2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80260e6:	2800      	cmp	r0, #0
 80260e8:	f000 80c0 	beq.w	802626c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80260ec:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80260f0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80260f4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80260f6:	b151      	cbz	r1, 802610e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80260f8:	eb0a 0203 	add.w	r2, sl, r3
 80260fc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8026100:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8026104:	9309      	str	r3, [sp, #36]	@ 0x24
 8026106:	7853      	ldrb	r3, [r2, #1]
 8026108:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802610c:	930c      	str	r3, [sp, #48]	@ 0x30
 802610e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026110:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026112:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8026116:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802611a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802611e:	ea4c 0c03 	orr.w	ip, ip, r3
 8026122:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026124:	041b      	lsls	r3, r3, #16
 8026126:	fb10 f201 	smulbb	r2, r0, r1
 802612a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802612e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8026132:	10d2      	asrs	r2, r2, #3
 8026134:	432b      	orrs	r3, r5
 8026136:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802613a:	4353      	muls	r3, r2
 802613c:	fb0a 330c 	mla	r3, sl, ip, r3
 8026140:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8026144:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8026148:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802614c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8026150:	f1c1 0c10 	rsb	ip, r1, #16
 8026154:	ebac 0c00 	sub.w	ip, ip, r0
 8026158:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802615c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8026160:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026162:	0418      	lsls	r0, r3, #16
 8026164:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8026168:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802616c:	4318      	orrs	r0, r3
 802616e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8026172:	fb02 c200 	mla	r2, r2, r0, ip
 8026176:	0d53      	lsrs	r3, r2, #21
 8026178:	0952      	lsrs	r2, r2, #5
 802617a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802617e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8026182:	431a      	orrs	r2, r3
 8026184:	f8a8 2000 	strh.w	r2, [r8]
 8026188:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802618a:	441c      	add	r4, r3
 802618c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802618e:	f108 0802 	add.w	r8, r8, #2
 8026192:	441e      	add	r6, r3
 8026194:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026198:	e77c      	b.n	8026094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802619a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802619c:	441c      	add	r4, r3
 802619e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80261a0:	441e      	add	r6, r3
 80261a2:	9b06      	ldr	r3, [sp, #24]
 80261a4:	3b01      	subs	r3, #1
 80261a6:	9306      	str	r3, [sp, #24]
 80261a8:	f109 0902 	add.w	r9, r9, #2
 80261ac:	e752      	b.n	8026054 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80261ae:	d020      	beq.n	80261f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80261b0:	9b06      	ldr	r3, [sp, #24]
 80261b2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80261b4:	3b01      	subs	r3, #1
 80261b6:	fb00 4003 	mla	r0, r0, r3, r4
 80261ba:	1400      	asrs	r0, r0, #16
 80261bc:	f53f af67 	bmi.w	802608e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80261c0:	3901      	subs	r1, #1
 80261c2:	4288      	cmp	r0, r1
 80261c4:	f6bf af63 	bge.w	802608e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80261c8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80261ca:	fb01 6303 	mla	r3, r1, r3, r6
 80261ce:	141b      	asrs	r3, r3, #16
 80261d0:	f53f af5d 	bmi.w	802608e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80261d4:	3a01      	subs	r2, #1
 80261d6:	4293      	cmp	r3, r2
 80261d8:	f6bf af59 	bge.w	802608e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80261dc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80261e0:	46ca      	mov	sl, r9
 80261e2:	f1b8 0f00 	cmp.w	r8, #0
 80261e6:	dc67      	bgt.n	80262b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80261e8:	9b06      	ldr	r3, [sp, #24]
 80261ea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80261ee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80261f2:	9b08      	ldr	r3, [sp, #32]
 80261f4:	2b00      	cmp	r3, #0
 80261f6:	f340 80d7 	ble.w	80263a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80261fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80261fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026202:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8026206:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026208:	ee31 1a05 	vadd.f32	s2, s2, s10
 802620c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026210:	eeb0 6a62 	vmov.f32	s12, s5
 8026214:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026218:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802621c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026220:	ee16 4a10 	vmov	r4, s12
 8026224:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026228:	eeb0 6a43 	vmov.f32	s12, s6
 802622c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026230:	ee12 2a90 	vmov	r2, s5
 8026234:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026238:	fb92 f3f3 	sdiv	r3, r2, r3
 802623c:	ee13 2a10 	vmov	r2, s6
 8026240:	931f      	str	r3, [sp, #124]	@ 0x7c
 8026242:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026244:	fb92 f3f3 	sdiv	r3, r2, r3
 8026248:	9320      	str	r3, [sp, #128]	@ 0x80
 802624a:	9b08      	ldr	r3, [sp, #32]
 802624c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802624e:	3b01      	subs	r3, #1
 8026250:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8026254:	9308      	str	r3, [sp, #32]
 8026256:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026258:	bf08      	it	eq
 802625a:	4613      	moveq	r3, r2
 802625c:	ee16 6a10 	vmov	r6, s12
 8026260:	9306      	str	r3, [sp, #24]
 8026262:	eeb0 3a67 	vmov.f32	s6, s15
 8026266:	eef0 2a47 	vmov.f32	s5, s14
 802626a:	e6e4      	b.n	8026036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802626c:	2900      	cmp	r1, #0
 802626e:	f43f af4e 	beq.w	802610e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8026272:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8026276:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802627a:	9309      	str	r3, [sp, #36]	@ 0x24
 802627c:	e747      	b.n	802610e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802627e:	f112 0a01 	adds.w	sl, r2, #1
 8026282:	d481      	bmi.n	8026188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026284:	4553      	cmp	r3, sl
 8026286:	f6ff af7f 	blt.w	8026188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802628a:	f11c 0a01 	adds.w	sl, ip, #1
 802628e:	f53f af7b 	bmi.w	8026188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026292:	45d6      	cmp	lr, sl
 8026294:	f6ff af78 	blt.w	8026188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026298:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 802629c:	b21b      	sxth	r3, r3
 802629e:	fa0f f28e 	sxth.w	r2, lr
 80262a2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80262a6:	9201      	str	r2, [sp, #4]
 80262a8:	9300      	str	r3, [sp, #0]
 80262aa:	9a07      	ldr	r2, [sp, #28]
 80262ac:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80262ae:	463b      	mov	r3, r7
 80262b0:	4641      	mov	r1, r8
 80262b2:	f7ff fe21 	bl	8025ef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80262b6:	e767      	b.n	8026188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80262b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80262ba:	9d07      	ldr	r5, [sp, #28]
 80262bc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80262c0:	1422      	asrs	r2, r4, #16
 80262c2:	1431      	asrs	r1, r6, #16
 80262c4:	fb03 2101 	mla	r1, r3, r1, r2
 80262c8:	9a07      	ldr	r2, [sp, #28]
 80262ca:	440a      	add	r2, r1
 80262cc:	5c69      	ldrb	r1, [r5, r1]
 80262ce:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80262d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80262d6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80262da:	f1be 0f00 	cmp.w	lr, #0
 80262de:	d05c      	beq.n	802639a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80262e0:	f892 c001 	ldrb.w	ip, [r2, #1]
 80262e4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80262e8:	950d      	str	r5, [sp, #52]	@ 0x34
 80262ea:	b150      	cbz	r0, 8026302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80262ec:	eb02 0c03 	add.w	ip, r2, r3
 80262f0:	5cd3      	ldrb	r3, [r2, r3]
 80262f2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80262f6:	930a      	str	r3, [sp, #40]	@ 0x28
 80262f8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80262fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8026300:	930e      	str	r3, [sp, #56]	@ 0x38
 8026302:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8026304:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026306:	fb1e f200 	smulbb	r2, lr, r0
 802630a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802630e:	10d2      	asrs	r2, r2, #3
 8026310:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8026314:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8026318:	ea4c 0c03 	orr.w	ip, ip, r3
 802631c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8026320:	9311      	str	r3, [sp, #68]	@ 0x44
 8026322:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026324:	041b      	lsls	r3, r3, #16
 8026326:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 802632a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802632e:	ea43 030b 	orr.w	r3, r3, fp
 8026332:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026334:	4353      	muls	r3, r2
 8026336:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802633a:	fb05 3c0c 	mla	ip, r5, ip, r3
 802633e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8026342:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8026346:	ea43 0b01 	orr.w	fp, r3, r1
 802634a:	f1c0 0110 	rsb	r1, r0, #16
 802634e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026350:	eba1 0e0e 	sub.w	lr, r1, lr
 8026354:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8026358:	fb0e cc0b 	mla	ip, lr, fp, ip
 802635c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8026360:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8026364:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8026368:	ea4b 0e0e 	orr.w	lr, fp, lr
 802636c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8026370:	fb02 cc0e 	mla	ip, r2, lr, ip
 8026374:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8026378:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802637c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026380:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8026384:	ea43 0c0c 	orr.w	ip, r3, ip
 8026388:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802638a:	f82a cb02 	strh.w	ip, [sl], #2
 802638e:	441c      	add	r4, r3
 8026390:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026392:	f108 38ff 	add.w	r8, r8, #4294967295
 8026396:	441e      	add	r6, r3
 8026398:	e723      	b.n	80261e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802639a:	2800      	cmp	r0, #0
 802639c:	d0b1      	beq.n	8026302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802639e:	5cd3      	ldrb	r3, [r2, r3]
 80263a0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80263a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80263a6:	e7ac      	b.n	8026302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80263a8:	b013      	add	sp, #76	@ 0x4c
 80263aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080263ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80263ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80263b2:	880d      	ldrh	r5, [r1, #0]
 80263b4:	b087      	sub	sp, #28
 80263b6:	10ef      	asrs	r7, r5, #3
 80263b8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80263bc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80263c0:	00ed      	lsls	r5, r5, #3
 80263c2:	9701      	str	r7, [sp, #4]
 80263c4:	b2ed      	uxtb	r5, r5
 80263c6:	9502      	str	r5, [sp, #8]
 80263c8:	9d01      	ldr	r5, [sp, #4]
 80263ca:	9103      	str	r1, [sp, #12]
 80263cc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 80263d0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 80263d4:	9902      	ldr	r1, [sp, #8]
 80263d6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80263da:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 80263de:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 80263e2:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 80263e6:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 80263ea:	022d      	lsls	r5, r5, #8
 80263ec:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80263f0:	fb06 0709 	mla	r7, r6, r9, r0
 80263f4:	430d      	orrs	r5, r1
 80263f6:	2e00      	cmp	r6, #0
 80263f8:	eb02 0c07 	add.w	ip, r2, r7
 80263fc:	9505      	str	r5, [sp, #20]
 80263fe:	f2c0 80b6 	blt.w	802656e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8026402:	45b3      	cmp	fp, r6
 8026404:	f340 80b3 	ble.w	802656e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8026408:	2800      	cmp	r0, #0
 802640a:	f2c0 80ae 	blt.w	802656a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802640e:	4581      	cmp	r9, r0
 8026410:	f340 80ab 	ble.w	802656a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8026414:	5dd7      	ldrb	r7, [r2, r7]
 8026416:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802641a:	441f      	add	r7, r3
 802641c:	1c42      	adds	r2, r0, #1
 802641e:	f100 80a9 	bmi.w	8026574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8026422:	4591      	cmp	r9, r2
 8026424:	f340 80a6 	ble.w	8026574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8026428:	2c00      	cmp	r4, #0
 802642a:	f000 80a3 	beq.w	8026574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802642e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8026432:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026436:	441d      	add	r5, r3
 8026438:	3601      	adds	r6, #1
 802643a:	f100 809f 	bmi.w	802657c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802643e:	45b3      	cmp	fp, r6
 8026440:	f340 809c 	ble.w	802657c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8026444:	f1be 0f00 	cmp.w	lr, #0
 8026448:	f000 8098 	beq.w	802657c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802644c:	2800      	cmp	r0, #0
 802644e:	f2c0 8093 	blt.w	8026578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8026452:	4581      	cmp	r9, r0
 8026454:	f340 8090 	ble.w	8026578 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8026458:	f81c 6009 	ldrb.w	r6, [ip, r9]
 802645c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026460:	441e      	add	r6, r3
 8026462:	3001      	adds	r0, #1
 8026464:	f100 808d 	bmi.w	8026582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8026468:	4581      	cmp	r9, r0
 802646a:	f340 808a 	ble.w	8026582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802646e:	2c00      	cmp	r4, #0
 8026470:	f000 8087 	beq.w	8026582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8026474:	44e1      	add	r9, ip
 8026476:	f899 2001 	ldrb.w	r2, [r9, #1]
 802647a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802647e:	4413      	add	r3, r2
 8026480:	b2a4      	uxth	r4, r4
 8026482:	fa1f fe8e 	uxth.w	lr, lr
 8026486:	fb04 fb0e 	mul.w	fp, r4, lr
 802648a:	0124      	lsls	r4, r4, #4
 802648c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8026490:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8026494:	eba4 040b 	sub.w	r4, r4, fp
 8026498:	fa1f f08e 	uxth.w	r0, lr
 802649c:	b2a2      	uxth	r2, r4
 802649e:	78ac      	ldrb	r4, [r5, #2]
 80264a0:	f897 c002 	ldrb.w	ip, [r7, #2]
 80264a4:	9901      	ldr	r1, [sp, #4]
 80264a6:	eba9 0900 	sub.w	r9, r9, r0
 80264aa:	fa1f f989 	uxth.w	r9, r9
 80264ae:	4354      	muls	r4, r2
 80264b0:	fb09 440c 	mla	r4, r9, ip, r4
 80264b4:	f896 c002 	ldrb.w	ip, [r6, #2]
 80264b8:	fb00 440c 	mla	r4, r0, ip, r4
 80264bc:	f893 c002 	ldrb.w	ip, [r3, #2]
 80264c0:	fa1f fe88 	uxth.w	lr, r8
 80264c4:	ea6f 0808 	mvn.w	r8, r8
 80264c8:	fa5f f888 	uxtb.w	r8, r8
 80264cc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80264d0:	fb1a fa08 	smulbb	sl, sl, r8
 80264d4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80264d8:	fb0c ac0e 	mla	ip, ip, lr, sl
 80264dc:	f895 a001 	ldrb.w	sl, [r5, #1]
 80264e0:	787c      	ldrb	r4, [r7, #1]
 80264e2:	782d      	ldrb	r5, [r5, #0]
 80264e4:	783f      	ldrb	r7, [r7, #0]
 80264e6:	fb02 fa0a 	mul.w	sl, r2, sl
 80264ea:	fb09 aa04 	mla	sl, r9, r4, sl
 80264ee:	7874      	ldrb	r4, [r6, #1]
 80264f0:	436a      	muls	r2, r5
 80264f2:	7835      	ldrb	r5, [r6, #0]
 80264f4:	fb00 aa04 	mla	sl, r0, r4, sl
 80264f8:	fb09 2207 	mla	r2, r9, r7, r2
 80264fc:	785c      	ldrb	r4, [r3, #1]
 80264fe:	781b      	ldrb	r3, [r3, #0]
 8026500:	fb00 2005 	mla	r0, r0, r5, r2
 8026504:	fb0b a404 	mla	r4, fp, r4, sl
 8026508:	fb0b 0b03 	mla	fp, fp, r3, r0
 802650c:	9b02      	ldr	r3, [sp, #8]
 802650e:	fb11 fa08 	smulbb	sl, r1, r8
 8026512:	fa1f fc8c 	uxth.w	ip, ip
 8026516:	fb13 f808 	smulbb	r8, r3, r8
 802651a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802651e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8026522:	fb04 a40e 	mla	r4, r4, lr, sl
 8026526:	f10c 0301 	add.w	r3, ip, #1
 802652a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 802652e:	fa1f fe8e 	uxth.w	lr, lr
 8026532:	b2a4      	uxth	r4, r4
 8026534:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026538:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 802653c:	f104 0a01 	add.w	sl, r4, #1
 8026540:	f10e 0c01 	add.w	ip, lr, #1
 8026544:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026548:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 802654c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8026550:	0964      	lsrs	r4, r4, #5
 8026552:	ea4c 0c03 	orr.w	ip, ip, r3
 8026556:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802655a:	9b03      	ldr	r3, [sp, #12]
 802655c:	ea4c 0c04 	orr.w	ip, ip, r4
 8026560:	f8a3 c000 	strh.w	ip, [r3]
 8026564:	b007      	add	sp, #28
 8026566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802656a:	af05      	add	r7, sp, #20
 802656c:	e756      	b.n	802641c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 802656e:	ad05      	add	r5, sp, #20
 8026570:	462f      	mov	r7, r5
 8026572:	e761      	b.n	8026438 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8026574:	ad05      	add	r5, sp, #20
 8026576:	e75f      	b.n	8026438 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8026578:	ae05      	add	r6, sp, #20
 802657a:	e772      	b.n	8026462 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 802657c:	ab05      	add	r3, sp, #20
 802657e:	461e      	mov	r6, r3
 8026580:	e77e      	b.n	8026480 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8026582:	ab05      	add	r3, sp, #20
 8026584:	e77c      	b.n	8026480 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08026586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026586:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802658a:	b095      	sub	sp, #84	@ 0x54
 802658c:	9212      	str	r2, [sp, #72]	@ 0x48
 802658e:	9309      	str	r3, [sp, #36]	@ 0x24
 8026590:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8026592:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8026596:	930f      	str	r3, [sp, #60]	@ 0x3c
 8026598:	910e      	str	r1, [sp, #56]	@ 0x38
 802659a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 802659e:	9013      	str	r0, [sp, #76]	@ 0x4c
 80265a0:	6850      	ldr	r0, [r2, #4]
 80265a2:	6812      	ldr	r2, [r2, #0]
 80265a4:	fb00 1303 	mla	r3, r0, r3, r1
 80265a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80265ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80265ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80265b0:	681b      	ldr	r3, [r3, #0]
 80265b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80265b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80265b6:	685c      	ldr	r4, [r3, #4]
 80265b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80265ba:	43db      	mvns	r3, r3
 80265bc:	b2db      	uxtb	r3, r3
 80265be:	3404      	adds	r4, #4
 80265c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80265c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80265c4:	2b00      	cmp	r3, #0
 80265c6:	dc03      	bgt.n	80265d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80265c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80265ca:	2b00      	cmp	r3, #0
 80265cc:	f340 8255 	ble.w	8026a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80265d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80265d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80265d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80265da:	1e48      	subs	r0, r1, #1
 80265dc:	1e55      	subs	r5, r2, #1
 80265de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80265e0:	2b00      	cmp	r3, #0
 80265e2:	f340 80f9 	ble.w	80267d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80265e6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80265e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80265ea:	1436      	asrs	r6, r6, #16
 80265ec:	ea4f 4323 	mov.w	r3, r3, asr #16
 80265f0:	d406      	bmi.n	8026600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80265f2:	4286      	cmp	r6, r0
 80265f4:	da04      	bge.n	8026600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80265f6:	2b00      	cmp	r3, #0
 80265f8:	db02      	blt.n	8026600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80265fa:	42ab      	cmp	r3, r5
 80265fc:	f2c0 80ed 	blt.w	80267da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8026600:	3601      	adds	r6, #1
 8026602:	f100 80da 	bmi.w	80267ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026606:	42b1      	cmp	r1, r6
 8026608:	f2c0 80d7 	blt.w	80267ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802660c:	3301      	adds	r3, #1
 802660e:	f100 80d4 	bmi.w	80267ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026612:	429a      	cmp	r2, r3
 8026614:	f2c0 80d1 	blt.w	80267ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026618:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802661a:	9311      	str	r3, [sp, #68]	@ 0x44
 802661c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802661e:	930c      	str	r3, [sp, #48]	@ 0x30
 8026620:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8026622:	2b00      	cmp	r3, #0
 8026624:	f340 80fa 	ble.w	802681c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8026628:	9826      	ldr	r0, [sp, #152]	@ 0x98
 802662a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802662c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802662e:	68c6      	ldr	r6, [r0, #12]
 8026630:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8026632:	141d      	asrs	r5, r3, #16
 8026634:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8026638:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802663a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 802663c:	1400      	asrs	r0, r0, #16
 802663e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8026642:	6892      	ldr	r2, [r2, #8]
 8026644:	f100 813e 	bmi.w	80268c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8026648:	1e57      	subs	r7, r2, #1
 802664a:	42b8      	cmp	r0, r7
 802664c:	f280 813a 	bge.w	80268c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8026650:	2d00      	cmp	r5, #0
 8026652:	f2c0 8137 	blt.w	80268c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8026656:	1e77      	subs	r7, r6, #1
 8026658:	42bd      	cmp	r5, r7
 802665a:	f280 8133 	bge.w	80268c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802665e:	b212      	sxth	r2, r2
 8026660:	fb05 0002 	mla	r0, r5, r2, r0
 8026664:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026666:	f815 a000 	ldrb.w	sl, [r5, r0]
 802666a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802666e:	182e      	adds	r6, r5, r0
 8026670:	eb04 050a 	add.w	r5, r4, sl
 8026674:	2b00      	cmp	r3, #0
 8026676:	f000 8117 	beq.w	80268a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802667a:	f896 c001 	ldrb.w	ip, [r6, #1]
 802667e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8026682:	44a4      	add	ip, r4
 8026684:	2900      	cmp	r1, #0
 8026686:	f000 8117 	beq.w	80268b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802668a:	18b0      	adds	r0, r6, r2
 802668c:	5cb2      	ldrb	r2, [r6, r2]
 802668e:	7840      	ldrb	r0, [r0, #1]
 8026690:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026694:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026698:	4422      	add	r2, r4
 802669a:	4420      	add	r0, r4
 802669c:	b29b      	uxth	r3, r3
 802669e:	b289      	uxth	r1, r1
 80266a0:	fb03 f901 	mul.w	r9, r3, r1
 80266a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80266a8:	011b      	lsls	r3, r3, #4
 80266aa:	b289      	uxth	r1, r1
 80266ac:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80266b0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80266b4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80266b6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80266ba:	f8b6 e000 	ldrh.w	lr, [r6]
 80266be:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 80266c2:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 80266c6:	eba3 0309 	sub.w	r3, r3, r9
 80266ca:	b29b      	uxth	r3, r3
 80266cc:	eba8 0801 	sub.w	r8, r8, r1
 80266d0:	fa1f f888 	uxth.w	r8, r8
 80266d4:	435f      	muls	r7, r3
 80266d6:	fb08 770b 	mla	r7, r8, fp, r7
 80266da:	f892 b002 	ldrb.w	fp, [r2, #2]
 80266de:	9310      	str	r3, [sp, #64]	@ 0x40
 80266e0:	fb01 770b 	mla	r7, r1, fp, r7
 80266e4:	f890 b002 	ldrb.w	fp, [r0, #2]
 80266e8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80266ea:	fb09 770b 	mla	r7, r9, fp, r7
 80266ee:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80266f2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80266f6:	fb1b fb03 	smulbb	fp, fp, r3
 80266fa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80266fe:	fb07 b706 	mla	r7, r7, r6, fp
 8026702:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026704:	f895 b001 	ldrb.w	fp, [r5, #1]
 8026708:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802670c:	f89c c000 	ldrb.w	ip, [ip]
 8026710:	435d      	muls	r5, r3
 8026712:	fb08 550b 	mla	r5, r8, fp, r5
 8026716:	f892 b001 	ldrb.w	fp, [r2, #1]
 802671a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802671c:	fb01 550b 	mla	r5, r1, fp, r5
 8026720:	f890 b001 	ldrb.w	fp, [r0, #1]
 8026724:	fb09 550b 	mla	r5, r9, fp, r5
 8026728:	ea4f 0bee 	mov.w	fp, lr, asr #3
 802672c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8026730:	fb1b fb03 	smulbb	fp, fp, r3
 8026734:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8026736:	fb03 f30c 	mul.w	r3, r3, ip
 802673a:	f892 c000 	ldrb.w	ip, [r2]
 802673e:	fb08 330a 	mla	r3, r8, sl, r3
 8026742:	fb01 330c 	mla	r3, r1, ip, r3
 8026746:	f890 c000 	ldrb.w	ip, [r0]
 802674a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802674e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026752:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026754:	fa5f fe8e 	uxtb.w	lr, lr
 8026758:	b2bf      	uxth	r7, r7
 802675a:	fb1e fe03 	smulbb	lr, lr, r3
 802675e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026762:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8026766:	fb05 b506 	mla	r5, r5, r6, fp
 802676a:	1c7b      	adds	r3, r7, #1
 802676c:	fb0c e606 	mla	r6, ip, r6, lr
 8026770:	b2ad      	uxth	r5, r5
 8026772:	b2b6      	uxth	r6, r6
 8026774:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8026778:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 802677c:	f105 0b01 	add.w	fp, r5, #1
 8026780:	1c77      	adds	r7, r6, #1
 8026782:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8026786:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802678a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802678e:	096d      	lsrs	r5, r5, #5
 8026790:	431f      	orrs	r7, r3
 8026792:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8026796:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026798:	433d      	orrs	r5, r7
 802679a:	801d      	strh	r5, [r3, #0]
 802679c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802679e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80267a0:	3302      	adds	r3, #2
 80267a2:	930c      	str	r3, [sp, #48]	@ 0x30
 80267a4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80267a6:	4413      	add	r3, r2
 80267a8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80267aa:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80267ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80267ae:	4413      	add	r3, r2
 80267b0:	9320      	str	r3, [sp, #128]	@ 0x80
 80267b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80267b4:	3b01      	subs	r3, #1
 80267b6:	9311      	str	r3, [sp, #68]	@ 0x44
 80267b8:	e732      	b.n	8026620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80267ba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80267bc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 80267be:	4433      	add	r3, r6
 80267c0:	931f      	str	r3, [sp, #124]	@ 0x7c
 80267c2:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 80267c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80267c6:	4433      	add	r3, r6
 80267c8:	9320      	str	r3, [sp, #128]	@ 0x80
 80267ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80267cc:	3b01      	subs	r3, #1
 80267ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80267d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80267d2:	3302      	adds	r3, #2
 80267d4:	930a      	str	r3, [sp, #40]	@ 0x28
 80267d6:	e702      	b.n	80265de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80267d8:	d027      	beq.n	802682a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80267da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80267dc:	9821      	ldr	r0, [sp, #132]	@ 0x84
 80267de:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 80267e0:	3b01      	subs	r3, #1
 80267e2:	fb00 5003 	mla	r0, r0, r3, r5
 80267e6:	1400      	asrs	r0, r0, #16
 80267e8:	f53f af16 	bmi.w	8026618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80267ec:	3901      	subs	r1, #1
 80267ee:	4288      	cmp	r0, r1
 80267f0:	f6bf af12 	bge.w	8026618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80267f4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 80267f6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80267f8:	fb01 0303 	mla	r3, r1, r3, r0
 80267fc:	141b      	asrs	r3, r3, #16
 80267fe:	f53f af0b 	bmi.w	8026618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026802:	3a01      	subs	r2, #1
 8026804:	4293      	cmp	r3, r2
 8026806:	f6bf af07 	bge.w	8026618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802680a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802680c:	9311      	str	r3, [sp, #68]	@ 0x44
 802680e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8026812:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026814:	930c      	str	r3, [sp, #48]	@ 0x30
 8026816:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8026818:	2b00      	cmp	r3, #0
 802681a:	dc70      	bgt.n	80268fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802681c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802681e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026820:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8026824:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026828:	930a      	str	r3, [sp, #40]	@ 0x28
 802682a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802682c:	2b00      	cmp	r3, #0
 802682e:	f340 8124 	ble.w	8026a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8026832:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026836:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802683a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802683e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026840:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026844:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026848:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802684c:	eef0 6a62 	vmov.f32	s13, s5
 8026850:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026854:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026858:	ee77 2a62 	vsub.f32	s5, s14, s5
 802685c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8026860:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026864:	eef0 6a43 	vmov.f32	s13, s6
 8026868:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802686c:	ee12 2a90 	vmov	r2, s5
 8026870:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026874:	fb92 f3f3 	sdiv	r3, r2, r3
 8026878:	ee13 2a10 	vmov	r2, s6
 802687c:	9321      	str	r3, [sp, #132]	@ 0x84
 802687e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026880:	fb92 f3f3 	sdiv	r3, r2, r3
 8026884:	9322      	str	r3, [sp, #136]	@ 0x88
 8026886:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8026888:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802688a:	3b01      	subs	r3, #1
 802688c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026890:	930e      	str	r3, [sp, #56]	@ 0x38
 8026892:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8026894:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8026898:	bf08      	it	eq
 802689a:	4613      	moveq	r3, r2
 802689c:	9309      	str	r3, [sp, #36]	@ 0x24
 802689e:	eeb0 3a67 	vmov.f32	s6, s15
 80268a2:	eef0 2a47 	vmov.f32	s5, s14
 80268a6:	e68c      	b.n	80265c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80268a8:	b149      	cbz	r1, 80268be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80268aa:	5cb2      	ldrb	r2, [r6, r2]
 80268ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80268b0:	4422      	add	r2, r4
 80268b2:	4628      	mov	r0, r5
 80268b4:	46ac      	mov	ip, r5
 80268b6:	e6f1      	b.n	802669c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80268b8:	4628      	mov	r0, r5
 80268ba:	462a      	mov	r2, r5
 80268bc:	e6ee      	b.n	802669c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80268be:	4628      	mov	r0, r5
 80268c0:	462a      	mov	r2, r5
 80268c2:	e7f7      	b.n	80268b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80268c4:	1c47      	adds	r7, r0, #1
 80268c6:	f53f af69 	bmi.w	802679c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80268ca:	42ba      	cmp	r2, r7
 80268cc:	f6ff af66 	blt.w	802679c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80268d0:	1c6f      	adds	r7, r5, #1
 80268d2:	f53f af63 	bmi.w	802679c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80268d6:	42be      	cmp	r6, r7
 80268d8:	f6ff af60 	blt.w	802679c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80268dc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80268de:	9002      	str	r0, [sp, #8]
 80268e0:	b236      	sxth	r6, r6
 80268e2:	b212      	sxth	r2, r2
 80268e4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80268e8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80268ec:	9200      	str	r2, [sp, #0]
 80268ee:	9601      	str	r6, [sp, #4]
 80268f0:	4623      	mov	r3, r4
 80268f2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 80268f6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80268f8:	f7ff fd59 	bl	80263ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80268fc:	e74e      	b.n	802679c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80268fe:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8026900:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8026902:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8026904:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026906:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802690a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 802690c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8026910:	142d      	asrs	r5, r5, #16
 8026912:	1400      	asrs	r0, r0, #16
 8026914:	fb02 5000 	mla	r0, r2, r0, r5
 8026918:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802691a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802691e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8026922:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8026926:	182e      	adds	r6, r5, r0
 8026928:	eb04 0509 	add.w	r5, r4, r9
 802692c:	2b00      	cmp	r3, #0
 802692e:	f000 8096 	beq.w	8026a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026932:	7877      	ldrb	r7, [r6, #1]
 8026934:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8026938:	4427      	add	r7, r4
 802693a:	2900      	cmp	r1, #0
 802693c:	f000 8097 	beq.w	8026a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8026940:	18b0      	adds	r0, r6, r2
 8026942:	5cb2      	ldrb	r2, [r6, r2]
 8026944:	7840      	ldrb	r0, [r0, #1]
 8026946:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802694a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802694e:	4422      	add	r2, r4
 8026950:	4420      	add	r0, r4
 8026952:	b29b      	uxth	r3, r3
 8026954:	b289      	uxth	r1, r1
 8026956:	fb03 f801 	mul.w	r8, r3, r1
 802695a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802695c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8026960:	f8b6 c000 	ldrh.w	ip, [r6]
 8026964:	78be      	ldrb	r6, [r7, #2]
 8026966:	f814 9009 	ldrb.w	r9, [r4, r9]
 802696a:	011b      	lsls	r3, r3, #4
 802696c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8026970:	b289      	uxth	r1, r1
 8026972:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8026976:	eba3 0308 	sub.w	r3, r3, r8
 802697a:	b29b      	uxth	r3, r3
 802697c:	ebae 0e01 	sub.w	lr, lr, r1
 8026980:	fa1f fe8e 	uxth.w	lr, lr
 8026984:	435e      	muls	r6, r3
 8026986:	fb0e 660b 	mla	r6, lr, fp, r6
 802698a:	f892 b002 	ldrb.w	fp, [r2, #2]
 802698e:	9310      	str	r3, [sp, #64]	@ 0x40
 8026990:	fb01 660b 	mla	r6, r1, fp, r6
 8026994:	f890 b002 	ldrb.w	fp, [r0, #2]
 8026998:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802699a:	fb08 660b 	mla	r6, r8, fp, r6
 802699e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80269a2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80269a6:	fb1b fb03 	smulbb	fp, fp, r3
 80269aa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80269ae:	fb06 b60a 	mla	r6, r6, sl, fp
 80269b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80269b4:	f895 b001 	ldrb.w	fp, [r5, #1]
 80269b8:	787d      	ldrb	r5, [r7, #1]
 80269ba:	783f      	ldrb	r7, [r7, #0]
 80269bc:	435d      	muls	r5, r3
 80269be:	fb0e 550b 	mla	r5, lr, fp, r5
 80269c2:	f892 b001 	ldrb.w	fp, [r2, #1]
 80269c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80269c8:	fb01 550b 	mla	r5, r1, fp, r5
 80269cc:	f890 b001 	ldrb.w	fp, [r0, #1]
 80269d0:	fb08 550b 	mla	r5, r8, fp, r5
 80269d4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80269d8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80269dc:	fb1b fb03 	smulbb	fp, fp, r3
 80269e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80269e2:	437b      	muls	r3, r7
 80269e4:	7817      	ldrb	r7, [r2, #0]
 80269e6:	fb0e 3309 	mla	r3, lr, r9, r3
 80269ea:	fb01 3307 	mla	r3, r1, r7, r3
 80269ee:	7807      	ldrb	r7, [r0, #0]
 80269f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80269f4:	fb08 3707 	mla	r7, r8, r7, r3
 80269f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80269fa:	fa5f fc8c 	uxtb.w	ip, ip
 80269fe:	fb1c fc03 	smulbb	ip, ip, r3
 8026a02:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026a06:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8026a0a:	fb05 b50a 	mla	r5, r5, sl, fp
 8026a0e:	fb07 c70a 	mla	r7, r7, sl, ip
 8026a12:	b2b6      	uxth	r6, r6
 8026a14:	b2ad      	uxth	r5, r5
 8026a16:	b2bf      	uxth	r7, r7
 8026a18:	1c73      	adds	r3, r6, #1
 8026a1a:	1c7a      	adds	r2, r7, #1
 8026a1c:	f105 0b01 	add.w	fp, r5, #1
 8026a20:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8026a24:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8026a28:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8026a2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026a30:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8026a34:	096d      	lsrs	r5, r5, #5
 8026a36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026a38:	4316      	orrs	r6, r2
 8026a3a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8026a3e:	432e      	orrs	r6, r5
 8026a40:	f823 6b02 	strh.w	r6, [r3], #2
 8026a44:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8026a46:	930c      	str	r3, [sp, #48]	@ 0x30
 8026a48:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026a4a:	4413      	add	r3, r2
 8026a4c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8026a4e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8026a50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026a52:	4413      	add	r3, r2
 8026a54:	9320      	str	r3, [sp, #128]	@ 0x80
 8026a56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8026a58:	3b01      	subs	r3, #1
 8026a5a:	9311      	str	r3, [sp, #68]	@ 0x44
 8026a5c:	e6db      	b.n	8026816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8026a5e:	b149      	cbz	r1, 8026a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8026a60:	5cb2      	ldrb	r2, [r6, r2]
 8026a62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026a66:	4422      	add	r2, r4
 8026a68:	4628      	mov	r0, r5
 8026a6a:	462f      	mov	r7, r5
 8026a6c:	e771      	b.n	8026952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8026a6e:	4628      	mov	r0, r5
 8026a70:	462a      	mov	r2, r5
 8026a72:	e76e      	b.n	8026952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8026a74:	4628      	mov	r0, r5
 8026a76:	462a      	mov	r2, r5
 8026a78:	e7f7      	b.n	8026a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026a7a:	b015      	add	sp, #84	@ 0x54
 8026a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8026a80:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026a84:	880f      	ldrh	r7, [r1, #0]
 8026a86:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8026a8a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8026a8e:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8026a92:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8026a96:	023c      	lsls	r4, r7, #8
 8026a98:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8026a9c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8026aa0:	017c      	lsls	r4, r7, #5
 8026aa2:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8026aa6:	00ff      	lsls	r7, r7, #3
 8026aa8:	ea4b 0404 	orr.w	r4, fp, r4
 8026aac:	b2ff      	uxtb	r7, r7
 8026aae:	fb05 ca0e 	mla	sl, r5, lr, ip
 8026ab2:	4327      	orrs	r7, r4
 8026ab4:	2d00      	cmp	r5, #0
 8026ab6:	eb02 080a 	add.w	r8, r2, sl
 8026aba:	9701      	str	r7, [sp, #4]
 8026abc:	db7e      	blt.n	8026bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8026abe:	45a9      	cmp	r9, r5
 8026ac0:	dd7c      	ble.n	8026bbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8026ac2:	f1bc 0f00 	cmp.w	ip, #0
 8026ac6:	db77      	blt.n	8026bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8026ac8:	45e6      	cmp	lr, ip
 8026aca:	dd75      	ble.n	8026bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8026acc:	f812 700a 	ldrb.w	r7, [r2, sl]
 8026ad0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8026ad4:	441f      	add	r7, r3
 8026ad6:	f11c 0201 	adds.w	r2, ip, #1
 8026ada:	d472      	bmi.n	8026bc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8026adc:	4596      	cmp	lr, r2
 8026ade:	dd70      	ble.n	8026bc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8026ae0:	2800      	cmp	r0, #0
 8026ae2:	d06e      	beq.n	8026bc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8026ae4:	f898 4001 	ldrb.w	r4, [r8, #1]
 8026ae8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8026aec:	441c      	add	r4, r3
 8026aee:	3501      	adds	r5, #1
 8026af0:	d46b      	bmi.n	8026bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026af2:	45a9      	cmp	r9, r5
 8026af4:	dd69      	ble.n	8026bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026af6:	2e00      	cmp	r6, #0
 8026af8:	d067      	beq.n	8026bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8026afa:	f1bc 0f00 	cmp.w	ip, #0
 8026afe:	db62      	blt.n	8026bc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8026b00:	45e6      	cmp	lr, ip
 8026b02:	dd60      	ble.n	8026bc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8026b04:	f818 500e 	ldrb.w	r5, [r8, lr]
 8026b08:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026b0c:	441d      	add	r5, r3
 8026b0e:	f11c 0201 	adds.w	r2, ip, #1
 8026b12:	d45d      	bmi.n	8026bd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8026b14:	4596      	cmp	lr, r2
 8026b16:	dd5b      	ble.n	8026bd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8026b18:	2800      	cmp	r0, #0
 8026b1a:	d059      	beq.n	8026bd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8026b1c:	44c6      	add	lr, r8
 8026b1e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8026b22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026b26:	4413      	add	r3, r2
 8026b28:	b280      	uxth	r0, r0
 8026b2a:	b2b2      	uxth	r2, r6
 8026b2c:	fb00 f602 	mul.w	r6, r0, r2
 8026b30:	0100      	lsls	r0, r0, #4
 8026b32:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8026b36:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8026b3a:	1b80      	subs	r0, r0, r6
 8026b3c:	fa1f fc82 	uxth.w	ip, r2
 8026b40:	b282      	uxth	r2, r0
 8026b42:	78a0      	ldrb	r0, [r4, #2]
 8026b44:	f897 e002 	ldrb.w	lr, [r7, #2]
 8026b48:	f897 9000 	ldrb.w	r9, [r7]
 8026b4c:	787f      	ldrb	r7, [r7, #1]
 8026b4e:	eba8 080c 	sub.w	r8, r8, ip
 8026b52:	fa1f f888 	uxth.w	r8, r8
 8026b56:	4350      	muls	r0, r2
 8026b58:	fb08 0e0e 	mla	lr, r8, lr, r0
 8026b5c:	78a8      	ldrb	r0, [r5, #2]
 8026b5e:	fb0c e000 	mla	r0, ip, r0, lr
 8026b62:	f893 e002 	ldrb.w	lr, [r3, #2]
 8026b66:	fb06 0e0e 	mla	lr, r6, lr, r0
 8026b6a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 8026b6e:	f894 e000 	ldrb.w	lr, [r4]
 8026b72:	fb02 fe0e 	mul.w	lr, r2, lr
 8026b76:	fb08 e909 	mla	r9, r8, r9, lr
 8026b7a:	f895 e000 	ldrb.w	lr, [r5]
 8026b7e:	fb0c 990e 	mla	r9, ip, lr, r9
 8026b82:	f893 e000 	ldrb.w	lr, [r3]
 8026b86:	785b      	ldrb	r3, [r3, #1]
 8026b88:	fb06 9e0e 	mla	lr, r6, lr, r9
 8026b8c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8026b90:	ea4e 0e00 	orr.w	lr, lr, r0
 8026b94:	7860      	ldrb	r0, [r4, #1]
 8026b96:	4350      	muls	r0, r2
 8026b98:	786a      	ldrb	r2, [r5, #1]
 8026b9a:	fb08 0007 	mla	r0, r8, r7, r0
 8026b9e:	fb0c 0202 	mla	r2, ip, r2, r0
 8026ba2:	fb06 2303 	mla	r3, r6, r3, r2
 8026ba6:	095b      	lsrs	r3, r3, #5
 8026ba8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026bac:	ea4e 0303 	orr.w	r3, lr, r3
 8026bb0:	800b      	strh	r3, [r1, #0]
 8026bb2:	b003      	add	sp, #12
 8026bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026bb8:	af01      	add	r7, sp, #4
 8026bba:	e78c      	b.n	8026ad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8026bbc:	ac01      	add	r4, sp, #4
 8026bbe:	4627      	mov	r7, r4
 8026bc0:	e795      	b.n	8026aee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8026bc2:	ac01      	add	r4, sp, #4
 8026bc4:	e793      	b.n	8026aee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8026bc6:	ad01      	add	r5, sp, #4
 8026bc8:	e7a1      	b.n	8026b0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8026bca:	ab01      	add	r3, sp, #4
 8026bcc:	461d      	mov	r5, r3
 8026bce:	e7ab      	b.n	8026b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8026bd0:	ab01      	add	r3, sp, #4
 8026bd2:	e7a9      	b.n	8026b28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08026bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026bd8:	b08f      	sub	sp, #60	@ 0x3c
 8026bda:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8026bde:	920c      	str	r2, [sp, #48]	@ 0x30
 8026be0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8026be2:	910a      	str	r1, [sp, #40]	@ 0x28
 8026be4:	9306      	str	r3, [sp, #24]
 8026be6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8026bea:	900d      	str	r0, [sp, #52]	@ 0x34
 8026bec:	6850      	ldr	r0, [r2, #4]
 8026bee:	6812      	ldr	r2, [r2, #0]
 8026bf0:	fb00 1303 	mla	r3, r0, r3, r1
 8026bf4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026bf8:	9307      	str	r3, [sp, #28]
 8026bfa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026bfc:	681b      	ldr	r3, [r3, #0]
 8026bfe:	9308      	str	r3, [sp, #32]
 8026c00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026c02:	685c      	ldr	r4, [r3, #4]
 8026c04:	3404      	adds	r4, #4
 8026c06:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026c08:	2b00      	cmp	r3, #0
 8026c0a:	dc03      	bgt.n	8026c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8026c0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026c0e:	2b00      	cmp	r3, #0
 8026c10:	f340 81d6 	ble.w	8026fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8026c14:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026c16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026c1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026c1e:	1e48      	subs	r0, r1, #1
 8026c20:	1e56      	subs	r6, r2, #1
 8026c22:	9b06      	ldr	r3, [sp, #24]
 8026c24:	2b00      	cmp	r3, #0
 8026c26:	f340 80b7 	ble.w	8026d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8026c2a:	ea5f 472b 	movs.w	r7, fp, asr #16
 8026c2e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8026c32:	d406      	bmi.n	8026c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026c34:	4287      	cmp	r7, r0
 8026c36:	da04      	bge.n	8026c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026c38:	2b00      	cmp	r3, #0
 8026c3a:	db02      	blt.n	8026c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026c3c:	42b3      	cmp	r3, r6
 8026c3e:	f2c0 80ac 	blt.w	8026d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8026c42:	3701      	adds	r7, #1
 8026c44:	f100 809d 	bmi.w	8026d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026c48:	42b9      	cmp	r1, r7
 8026c4a:	f2c0 809a 	blt.w	8026d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026c4e:	3301      	adds	r3, #1
 8026c50:	f100 8097 	bmi.w	8026d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026c54:	429a      	cmp	r2, r3
 8026c56:	f2c0 8094 	blt.w	8026d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026c5a:	9b06      	ldr	r3, [sp, #24]
 8026c5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026c5e:	9b07      	ldr	r3, [sp, #28]
 8026c60:	9309      	str	r3, [sp, #36]	@ 0x24
 8026c62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026c64:	2b00      	cmp	r3, #0
 8026c66:	f340 80b5 	ble.w	8026dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026c6a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8026c6c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8026c6e:	68c7      	ldr	r7, [r0, #12]
 8026c70:	6892      	ldr	r2, [r2, #8]
 8026c72:	ea5f 402b 	movs.w	r0, fp, asr #16
 8026c76:	ea4f 4625 	mov.w	r6, r5, asr #16
 8026c7a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8026c7e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8026c82:	f100 80fb 	bmi.w	8026e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026c86:	f102 3cff 	add.w	ip, r2, #4294967295
 8026c8a:	4560      	cmp	r0, ip
 8026c8c:	f280 80f6 	bge.w	8026e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026c90:	2e00      	cmp	r6, #0
 8026c92:	f2c0 80f3 	blt.w	8026e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026c96:	f107 3cff 	add.w	ip, r7, #4294967295
 8026c9a:	4566      	cmp	r6, ip
 8026c9c:	f280 80ee 	bge.w	8026e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8026ca0:	b212      	sxth	r2, r2
 8026ca2:	fb06 0002 	mla	r0, r6, r2, r0
 8026ca6:	9e08      	ldr	r6, [sp, #32]
 8026ca8:	1837      	adds	r7, r6, r0
 8026caa:	5c30      	ldrb	r0, [r6, r0]
 8026cac:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8026cb0:	eb04 0c08 	add.w	ip, r4, r8
 8026cb4:	2b00      	cmp	r3, #0
 8026cb6:	f000 80d3 	beq.w	8026e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026cba:	787e      	ldrb	r6, [r7, #1]
 8026cbc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026cc0:	4426      	add	r6, r4
 8026cc2:	2900      	cmp	r1, #0
 8026cc4:	f000 80d4 	beq.w	8026e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8026cc8:	18b8      	adds	r0, r7, r2
 8026cca:	5cba      	ldrb	r2, [r7, r2]
 8026ccc:	7840      	ldrb	r0, [r0, #1]
 8026cce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026cd2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026cd6:	4422      	add	r2, r4
 8026cd8:	4420      	add	r0, r4
 8026cda:	b29b      	uxth	r3, r3
 8026cdc:	b289      	uxth	r1, r1
 8026cde:	fb03 f901 	mul.w	r9, r3, r1
 8026ce2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026ce6:	011b      	lsls	r3, r3, #4
 8026ce8:	b289      	uxth	r1, r1
 8026cea:	78b7      	ldrb	r7, [r6, #2]
 8026cec:	f89c a002 	ldrb.w	sl, [ip, #2]
 8026cf0:	f89c c001 	ldrb.w	ip, [ip, #1]
 8026cf4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8026cf8:	eba3 0309 	sub.w	r3, r3, r9
 8026cfc:	b29b      	uxth	r3, r3
 8026cfe:	ebae 0e01 	sub.w	lr, lr, r1
 8026d02:	fa1f fe8e 	uxth.w	lr, lr
 8026d06:	435f      	muls	r7, r3
 8026d08:	fb0e 770a 	mla	r7, lr, sl, r7
 8026d0c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8026d10:	fb01 770a 	mla	r7, r1, sl, r7
 8026d14:	f890 a002 	ldrb.w	sl, [r0, #2]
 8026d18:	fb09 7a0a 	mla	sl, r9, sl, r7
 8026d1c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8026d20:	f896 8000 	ldrb.w	r8, [r6]
 8026d24:	7876      	ldrb	r6, [r6, #1]
 8026d26:	fb03 f808 	mul.w	r8, r3, r8
 8026d2a:	fb0e 8807 	mla	r8, lr, r7, r8
 8026d2e:	7817      	ldrb	r7, [r2, #0]
 8026d30:	fb01 8807 	mla	r8, r1, r7, r8
 8026d34:	7807      	ldrb	r7, [r0, #0]
 8026d36:	fb09 8707 	mla	r7, r9, r7, r8
 8026d3a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8026d3e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8026d42:	ea47 070a 	orr.w	r7, r7, sl
 8026d46:	4373      	muls	r3, r6
 8026d48:	f892 a001 	ldrb.w	sl, [r2, #1]
 8026d4c:	fb0e 330c 	mla	r3, lr, ip, r3
 8026d50:	fb01 310a 	mla	r1, r1, sl, r3
 8026d54:	f890 a001 	ldrb.w	sl, [r0, #1]
 8026d58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026d5a:	fb09 1a0a 	mla	sl, r9, sl, r1
 8026d5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8026d62:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8026d66:	ea47 070a 	orr.w	r7, r7, sl
 8026d6a:	801f      	strh	r7, [r3, #0]
 8026d6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026d6e:	3302      	adds	r3, #2
 8026d70:	9309      	str	r3, [sp, #36]	@ 0x24
 8026d72:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026d74:	449b      	add	fp, r3
 8026d76:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026d78:	441d      	add	r5, r3
 8026d7a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026d7c:	3b01      	subs	r3, #1
 8026d7e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026d80:	e76f      	b.n	8026c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026d82:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026d84:	449b      	add	fp, r3
 8026d86:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026d88:	441d      	add	r5, r3
 8026d8a:	9b06      	ldr	r3, [sp, #24]
 8026d8c:	3b01      	subs	r3, #1
 8026d8e:	9306      	str	r3, [sp, #24]
 8026d90:	9b07      	ldr	r3, [sp, #28]
 8026d92:	3302      	adds	r3, #2
 8026d94:	9307      	str	r3, [sp, #28]
 8026d96:	e744      	b.n	8026c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8026d98:	d023      	beq.n	8026de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026d9a:	9b06      	ldr	r3, [sp, #24]
 8026d9c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8026d9e:	3b01      	subs	r3, #1
 8026da0:	fb00 b003 	mla	r0, r0, r3, fp
 8026da4:	1400      	asrs	r0, r0, #16
 8026da6:	f53f af58 	bmi.w	8026c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026daa:	3901      	subs	r1, #1
 8026dac:	4288      	cmp	r0, r1
 8026dae:	f6bf af54 	bge.w	8026c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026db2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8026db4:	fb01 5303 	mla	r3, r1, r3, r5
 8026db8:	141b      	asrs	r3, r3, #16
 8026dba:	f53f af4e 	bmi.w	8026c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026dbe:	3a01      	subs	r2, #1
 8026dc0:	4293      	cmp	r3, r2
 8026dc2:	f6bf af4a 	bge.w	8026c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8026dc6:	9b06      	ldr	r3, [sp, #24]
 8026dc8:	9309      	str	r3, [sp, #36]	@ 0x24
 8026dca:	9b07      	ldr	r3, [sp, #28]
 8026dcc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026dce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026dd0:	2b00      	cmp	r3, #0
 8026dd2:	dc70      	bgt.n	8026eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8026dd4:	9b06      	ldr	r3, [sp, #24]
 8026dd6:	9a07      	ldr	r2, [sp, #28]
 8026dd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8026ddc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026de0:	9307      	str	r3, [sp, #28]
 8026de2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026de4:	2b00      	cmp	r3, #0
 8026de6:	f340 80eb 	ble.w	8026fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8026dea:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026dee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026df2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026df6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026df8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026dfc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026e00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026e04:	eef0 6a62 	vmov.f32	s13, s5
 8026e08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026e0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026e14:	ee16 ba90 	vmov	fp, s13
 8026e18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026e1c:	eef0 6a43 	vmov.f32	s13, s6
 8026e20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026e24:	ee12 2a90 	vmov	r2, s5
 8026e28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026e2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e30:	ee13 2a10 	vmov	r2, s6
 8026e34:	931b      	str	r3, [sp, #108]	@ 0x6c
 8026e36:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026e38:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e3c:	931c      	str	r3, [sp, #112]	@ 0x70
 8026e3e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026e40:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8026e42:	3b01      	subs	r3, #1
 8026e44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e48:	930a      	str	r3, [sp, #40]	@ 0x28
 8026e4a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026e4c:	bf08      	it	eq
 8026e4e:	4613      	moveq	r3, r2
 8026e50:	ee16 5a90 	vmov	r5, s13
 8026e54:	9306      	str	r3, [sp, #24]
 8026e56:	eeb0 3a67 	vmov.f32	s6, s15
 8026e5a:	eef0 2a47 	vmov.f32	s5, s14
 8026e5e:	e6d2      	b.n	8026c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8026e60:	b149      	cbz	r1, 8026e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8026e62:	5cba      	ldrb	r2, [r7, r2]
 8026e64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026e68:	4422      	add	r2, r4
 8026e6a:	4660      	mov	r0, ip
 8026e6c:	4666      	mov	r6, ip
 8026e6e:	e734      	b.n	8026cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8026e70:	4660      	mov	r0, ip
 8026e72:	4662      	mov	r2, ip
 8026e74:	e731      	b.n	8026cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8026e76:	4660      	mov	r0, ip
 8026e78:	4662      	mov	r2, ip
 8026e7a:	e7f7      	b.n	8026e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8026e7c:	f110 0c01 	adds.w	ip, r0, #1
 8026e80:	f53f af74 	bmi.w	8026d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e84:	4562      	cmp	r2, ip
 8026e86:	f6ff af71 	blt.w	8026d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e8a:	f116 0c01 	adds.w	ip, r6, #1
 8026e8e:	f53f af6d 	bmi.w	8026d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e92:	4567      	cmp	r7, ip
 8026e94:	f6ff af6a 	blt.w	8026d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026e98:	b23f      	sxth	r7, r7
 8026e9a:	b212      	sxth	r2, r2
 8026e9c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8026ea0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8026ea4:	9200      	str	r2, [sp, #0]
 8026ea6:	9701      	str	r7, [sp, #4]
 8026ea8:	4623      	mov	r3, r4
 8026eaa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8026eae:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8026eb0:	f7ff fde6 	bl	8026a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8026eb4:	e75a      	b.n	8026d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8026eb6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8026eb8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8026ebc:	ea4f 462b 	mov.w	r6, fp, asr #16
 8026ec0:	1428      	asrs	r0, r5, #16
 8026ec2:	fb02 6000 	mla	r0, r2, r0, r6
 8026ec6:	9e08      	ldr	r6, [sp, #32]
 8026ec8:	f816 8000 	ldrb.w	r8, [r6, r0]
 8026ecc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8026ed0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8026ed4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8026ed8:	1837      	adds	r7, r6, r0
 8026eda:	eb04 0c08 	add.w	ip, r4, r8
 8026ede:	2b00      	cmp	r3, #0
 8026ee0:	d060      	beq.n	8026fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8026ee2:	787e      	ldrb	r6, [r7, #1]
 8026ee4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8026ee8:	4426      	add	r6, r4
 8026eea:	2900      	cmp	r1, #0
 8026eec:	d062      	beq.n	8026fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8026eee:	18b8      	adds	r0, r7, r2
 8026ef0:	5cba      	ldrb	r2, [r7, r2]
 8026ef2:	7840      	ldrb	r0, [r0, #1]
 8026ef4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026ef8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026efc:	4422      	add	r2, r4
 8026efe:	4420      	add	r0, r4
 8026f00:	b29b      	uxth	r3, r3
 8026f02:	b289      	uxth	r1, r1
 8026f04:	fb03 f901 	mul.w	r9, r3, r1
 8026f08:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026f0c:	011b      	lsls	r3, r3, #4
 8026f0e:	b289      	uxth	r1, r1
 8026f10:	78b7      	ldrb	r7, [r6, #2]
 8026f12:	f89c a002 	ldrb.w	sl, [ip, #2]
 8026f16:	f89c c001 	ldrb.w	ip, [ip, #1]
 8026f1a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8026f1e:	eba3 0309 	sub.w	r3, r3, r9
 8026f22:	b29b      	uxth	r3, r3
 8026f24:	ebae 0e01 	sub.w	lr, lr, r1
 8026f28:	fa1f fe8e 	uxth.w	lr, lr
 8026f2c:	435f      	muls	r7, r3
 8026f2e:	fb0e 770a 	mla	r7, lr, sl, r7
 8026f32:	f892 a002 	ldrb.w	sl, [r2, #2]
 8026f36:	fb01 770a 	mla	r7, r1, sl, r7
 8026f3a:	f890 a002 	ldrb.w	sl, [r0, #2]
 8026f3e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8026f42:	f814 7008 	ldrb.w	r7, [r4, r8]
 8026f46:	f896 8000 	ldrb.w	r8, [r6]
 8026f4a:	7876      	ldrb	r6, [r6, #1]
 8026f4c:	fb03 f808 	mul.w	r8, r3, r8
 8026f50:	fb0e 8807 	mla	r8, lr, r7, r8
 8026f54:	7817      	ldrb	r7, [r2, #0]
 8026f56:	fb01 8807 	mla	r8, r1, r7, r8
 8026f5a:	7807      	ldrb	r7, [r0, #0]
 8026f5c:	fb09 8707 	mla	r7, r9, r7, r8
 8026f60:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8026f64:	4373      	muls	r3, r6
 8026f66:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8026f6a:	7856      	ldrb	r6, [r2, #1]
 8026f6c:	ea47 070a 	orr.w	r7, r7, sl
 8026f70:	fb0e 330c 	mla	r3, lr, ip, r3
 8026f74:	f890 a001 	ldrb.w	sl, [r0, #1]
 8026f78:	fb01 3306 	mla	r3, r1, r6, r3
 8026f7c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8026f80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8026f84:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026f86:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8026f8a:	ea47 070a 	orr.w	r7, r7, sl
 8026f8e:	f823 7b02 	strh.w	r7, [r3], #2
 8026f92:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026f94:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026f96:	449b      	add	fp, r3
 8026f98:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026f9a:	441d      	add	r5, r3
 8026f9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026f9e:	3b01      	subs	r3, #1
 8026fa0:	9309      	str	r3, [sp, #36]	@ 0x24
 8026fa2:	e714      	b.n	8026dce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8026fa4:	b149      	cbz	r1, 8026fba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026fa6:	5cba      	ldrb	r2, [r7, r2]
 8026fa8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8026fac:	4422      	add	r2, r4
 8026fae:	4660      	mov	r0, ip
 8026fb0:	4666      	mov	r6, ip
 8026fb2:	e7a5      	b.n	8026f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8026fb4:	4660      	mov	r0, ip
 8026fb6:	4662      	mov	r2, ip
 8026fb8:	e7a2      	b.n	8026f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8026fba:	4660      	mov	r0, ip
 8026fbc:	4662      	mov	r2, ip
 8026fbe:	e7f7      	b.n	8026fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8026fc0:	b00f      	add	sp, #60	@ 0x3c
 8026fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026fc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8026fc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026fca:	b085      	sub	sp, #20
 8026fcc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8026fd0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8026fd4:	9102      	str	r1, [sp, #8]
 8026fd6:	2c00      	cmp	r4, #0
 8026fd8:	fb04 710c 	mla	r1, r4, ip, r7
 8026fdc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8026fe0:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8026fe4:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8026fe8:	eb02 0e01 	add.w	lr, r2, r1
 8026fec:	f2c0 8122 	blt.w	8027234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8026ff0:	45a0      	cmp	r8, r4
 8026ff2:	f340 811f 	ble.w	8027234 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8026ff6:	2f00      	cmp	r7, #0
 8026ff8:	f2c0 811a 	blt.w	8027230 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8026ffc:	45bc      	cmp	ip, r7
 8026ffe:	f340 8117 	ble.w	8027230 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8027002:	5c52      	ldrb	r2, [r2, r1]
 8027004:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8027008:	1c7a      	adds	r2, r7, #1
 802700a:	f100 8116 	bmi.w	802723a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802700e:	4594      	cmp	ip, r2
 8027010:	f340 8113 	ble.w	802723a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8027014:	2e00      	cmp	r6, #0
 8027016:	f000 8112 	beq.w	802723e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802701a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802701e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8027022:	3401      	adds	r4, #1
 8027024:	f100 810f 	bmi.w	8027246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8027028:	45a0      	cmp	r8, r4
 802702a:	f340 810c 	ble.w	8027246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802702e:	2800      	cmp	r0, #0
 8027030:	f000 810c 	beq.w	802724c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8027034:	2f00      	cmp	r7, #0
 8027036:	f2c0 8104 	blt.w	8027242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802703a:	45bc      	cmp	ip, r7
 802703c:	f340 8101 	ble.w	8027242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8027040:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8027044:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8027048:	3701      	adds	r7, #1
 802704a:	f100 8102 	bmi.w	8027252 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802704e:	45bc      	cmp	ip, r7
 8027050:	f340 80ff 	ble.w	8027252 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8027054:	2e00      	cmp	r6, #0
 8027056:	f000 80fe 	beq.w	8027256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802705a:	44f4      	add	ip, lr
 802705c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8027060:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8027064:	b2b6      	uxth	r6, r6
 8027066:	b280      	uxth	r0, r0
 8027068:	fb00 fe06 	mul.w	lr, r0, r6
 802706c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8027070:	0136      	lsls	r6, r6, #4
 8027072:	eba6 070e 	sub.w	r7, r6, lr
 8027076:	b280      	uxth	r0, r0
 8027078:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802707c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027080:	b2bf      	uxth	r7, r7
 8027082:	1a1b      	subs	r3, r3, r0
 8027084:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027088:	b29b      	uxth	r3, r3
 802708a:	fb0a f607 	mul.w	r6, sl, r7
 802708e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027092:	fb0b 6603 	mla	r6, fp, r3, r6
 8027096:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802709a:	fb00 6609 	mla	r6, r0, r9, r6
 802709e:	fb0e 6608 	mla	r6, lr, r8, r6
 80270a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80270a6:	9600      	str	r6, [sp, #0]
 80270a8:	2e00      	cmp	r6, #0
 80270aa:	f000 80be 	beq.w	802722a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80270ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80270b2:	fb0b fc0c 	mul.w	ip, fp, ip
 80270b6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80270ba:	fb0b f505 	mul.w	r5, fp, r5
 80270be:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80270c2:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80270c6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80270ca:	44dc      	add	ip, fp
 80270cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80270d0:	9501      	str	r5, [sp, #4]
 80270d2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80270d6:	9503      	str	r5, [sp, #12]
 80270d8:	9d01      	ldr	r5, [sp, #4]
 80270da:	9e02      	ldr	r6, [sp, #8]
 80270dc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80270e0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80270e4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80270e8:	fb0a fc0c 	mul.w	ip, sl, ip
 80270ec:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80270f0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80270f4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80270f8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80270fc:	4465      	add	r5, ip
 80270fe:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027102:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8027106:	fb09 fc0c 	mul.w	ip, r9, ip
 802710a:	fb09 f904 	mul.w	r9, r9, r4
 802710e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8027112:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027116:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802711a:	fb08 f404 	mul.w	r4, r8, r4
 802711e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027122:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8027126:	fb08 f802 	mul.w	r8, r8, r2
 802712a:	fb0a fa01 	mul.w	sl, sl, r1
 802712e:	0a22      	lsrs	r2, r4, #8
 8027130:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8027134:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8027138:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802713c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027140:	4414      	add	r4, r2
 8027142:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027146:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802714a:	0a2d      	lsrs	r5, r5, #8
 802714c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027150:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027154:	9a03      	ldr	r2, [sp, #12]
 8027156:	8836      	ldrh	r6, [r6, #0]
 8027158:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802715c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8027160:	437d      	muls	r5, r7
 8027162:	4461      	add	r1, ip
 8027164:	0a24      	lsrs	r4, r4, #8
 8027166:	fb02 5503 	mla	r5, r2, r3, r5
 802716a:	0a09      	lsrs	r1, r1, #8
 802716c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8027170:	fb04 540e 	mla	r4, r4, lr, r5
 8027174:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8027178:	fb01 4100 	mla	r1, r1, r0, r4
 802717c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027180:	0a09      	lsrs	r1, r1, #8
 8027182:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027186:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802718a:	fb07 f70a 	mul.w	r7, r7, sl
 802718e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027192:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8027196:	fb03 7101 	mla	r1, r3, r1, r7
 802719a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802719e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80271a2:	fb0e 1e08 	mla	lr, lr, r8, r1
 80271a6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80271aa:	fb00 e101 	mla	r1, r0, r1, lr
 80271ae:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80271b2:	9a00      	ldr	r2, [sp, #0]
 80271b4:	b287      	uxth	r7, r0
 80271b6:	437a      	muls	r2, r7
 80271b8:	0a09      	lsrs	r1, r1, #8
 80271ba:	1c53      	adds	r3, r2, #1
 80271bc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80271c0:	4321      	orrs	r1, r4
 80271c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80271c6:	1235      	asrs	r5, r6, #8
 80271c8:	0c0a      	lsrs	r2, r1, #16
 80271ca:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80271ce:	b2db      	uxtb	r3, r3
 80271d0:	fb12 f207 	smulbb	r2, r2, r7
 80271d4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80271d8:	fb05 2503 	mla	r5, r5, r3, r2
 80271dc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80271e0:	10f2      	asrs	r2, r6, #3
 80271e2:	b2c8      	uxtb	r0, r1
 80271e4:	00f6      	lsls	r6, r6, #3
 80271e6:	fb14 f407 	smulbb	r4, r4, r7
 80271ea:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80271ee:	b2f6      	uxtb	r6, r6
 80271f0:	fb10 f007 	smulbb	r0, r0, r7
 80271f4:	fb02 4203 	mla	r2, r2, r3, r4
 80271f8:	b2ad      	uxth	r5, r5
 80271fa:	fb06 0303 	mla	r3, r6, r3, r0
 80271fe:	b299      	uxth	r1, r3
 8027200:	b294      	uxth	r4, r2
 8027202:	1c6b      	adds	r3, r5, #1
 8027204:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027208:	1c62      	adds	r2, r4, #1
 802720a:	1c4b      	adds	r3, r1, #1
 802720c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8027210:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8027214:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8027218:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802721c:	0952      	lsrs	r2, r2, #5
 802721e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027222:	432b      	orrs	r3, r5
 8027224:	4313      	orrs	r3, r2
 8027226:	9a02      	ldr	r2, [sp, #8]
 8027228:	8013      	strh	r3, [r2, #0]
 802722a:	b005      	add	sp, #20
 802722c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027230:	2500      	movs	r5, #0
 8027232:	e6e9      	b.n	8027008 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8027234:	2100      	movs	r1, #0
 8027236:	460d      	mov	r5, r1
 8027238:	e6f3      	b.n	8027022 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802723a:	2100      	movs	r1, #0
 802723c:	e6f1      	b.n	8027022 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802723e:	4631      	mov	r1, r6
 8027240:	e6ef      	b.n	8027022 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8027242:	2400      	movs	r4, #0
 8027244:	e700      	b.n	8027048 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8027246:	2200      	movs	r2, #0
 8027248:	4614      	mov	r4, r2
 802724a:	e70b      	b.n	8027064 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802724c:	4602      	mov	r2, r0
 802724e:	4604      	mov	r4, r0
 8027250:	e708      	b.n	8027064 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8027252:	2200      	movs	r2, #0
 8027254:	e706      	b.n	8027064 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8027256:	4632      	mov	r2, r6
 8027258:	e704      	b.n	8027064 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802725a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802725a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802725e:	b09f      	sub	sp, #124	@ 0x7c
 8027260:	921b      	str	r2, [sp, #108]	@ 0x6c
 8027262:	9309      	str	r3, [sp, #36]	@ 0x24
 8027264:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8027266:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 802726a:	931c      	str	r3, [sp, #112]	@ 0x70
 802726c:	9119      	str	r1, [sp, #100]	@ 0x64
 802726e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8027272:	901d      	str	r0, [sp, #116]	@ 0x74
 8027274:	6850      	ldr	r0, [r2, #4]
 8027276:	6812      	ldr	r2, [r2, #0]
 8027278:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 802727a:	fb00 1303 	mla	r3, r0, r3, r1
 802727e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027282:	930c      	str	r3, [sp, #48]	@ 0x30
 8027284:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8027286:	681b      	ldr	r3, [r3, #0]
 8027288:	9312      	str	r3, [sp, #72]	@ 0x48
 802728a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802728c:	685e      	ldr	r6, [r3, #4]
 802728e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8027292:	930d      	str	r3, [sp, #52]	@ 0x34
 8027294:	3604      	adds	r6, #4
 8027296:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027298:	2b00      	cmp	r3, #0
 802729a:	dc03      	bgt.n	80272a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802729c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802729e:	2b00      	cmp	r3, #0
 80272a0:	f340 8388 	ble.w	80279b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80272a4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80272a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80272aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80272ae:	1e48      	subs	r0, r1, #1
 80272b0:	1e57      	subs	r7, r2, #1
 80272b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80272b4:	2b00      	cmp	r3, #0
 80272b6:	f340 8195 	ble.w	80275e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80272ba:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80272bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80272c0:	ea4f 4325 	mov.w	r3, r5, asr #16
 80272c4:	d406      	bmi.n	80272d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80272c6:	4584      	cmp	ip, r0
 80272c8:	da04      	bge.n	80272d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80272ca:	2b00      	cmp	r3, #0
 80272cc:	db02      	blt.n	80272d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80272ce:	42bb      	cmp	r3, r7
 80272d0:	f2c0 8189 	blt.w	80275e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80272d4:	f11c 0c01 	adds.w	ip, ip, #1
 80272d8:	f100 8177 	bmi.w	80275ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80272dc:	4561      	cmp	r1, ip
 80272de:	f2c0 8174 	blt.w	80275ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80272e2:	3301      	adds	r3, #1
 80272e4:	f100 8171 	bmi.w	80275ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80272e8:	429a      	cmp	r2, r3
 80272ea:	f2c0 816e 	blt.w	80275ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80272ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80272f0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80272f2:	931a      	str	r3, [sp, #104]	@ 0x68
 80272f4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80272f6:	2b00      	cmp	r3, #0
 80272f8:	f340 8193 	ble.w	8027622 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80272fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80272fe:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8027302:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8027304:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8027308:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802730a:	141b      	asrs	r3, r3, #16
 802730c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8027310:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8027314:	f100 81d6 	bmi.w	80276c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8027318:	f100 38ff 	add.w	r8, r0, #4294967295
 802731c:	4543      	cmp	r3, r8
 802731e:	f280 81d1 	bge.w	80276c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8027322:	f1bc 0f00 	cmp.w	ip, #0
 8027326:	f2c0 81cd 	blt.w	80276c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802732a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802732e:	45c4      	cmp	ip, r8
 8027330:	f280 81c8 	bge.w	80276c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8027334:	b200      	sxth	r0, r0
 8027336:	fb0c 3300 	mla	r3, ip, r0, r3
 802733a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802733c:	eb04 0803 	add.w	r8, r4, r3
 8027340:	5ce3      	ldrb	r3, [r4, r3]
 8027342:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8027346:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802734a:	2a00      	cmp	r2, #0
 802734c:	f000 81af 	beq.w	80276ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027350:	f898 c001 	ldrb.w	ip, [r8, #1]
 8027354:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8027358:	940e      	str	r4, [sp, #56]	@ 0x38
 802735a:	0e24      	lsrs	r4, r4, #24
 802735c:	9415      	str	r4, [sp, #84]	@ 0x54
 802735e:	b179      	cbz	r1, 8027380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8027360:	eb08 0c00 	add.w	ip, r8, r0
 8027364:	f818 0000 	ldrb.w	r0, [r8, r0]
 8027368:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802736c:	900a      	str	r0, [sp, #40]	@ 0x28
 802736e:	0e00      	lsrs	r0, r0, #24
 8027370:	9013      	str	r0, [sp, #76]	@ 0x4c
 8027372:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8027376:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802737a:	900f      	str	r0, [sp, #60]	@ 0x3c
 802737c:	0e00      	lsrs	r0, r0, #24
 802737e:	9016      	str	r0, [sp, #88]	@ 0x58
 8027380:	b292      	uxth	r2, r2
 8027382:	b289      	uxth	r1, r1
 8027384:	fb02 f901 	mul.w	r9, r2, r1
 8027388:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802738c:	0112      	lsls	r2, r2, #4
 802738e:	eba2 0809 	sub.w	r8, r2, r9
 8027392:	b289      	uxth	r1, r1
 8027394:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8027398:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802739a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802739c:	fa1f f888 	uxth.w	r8, r8
 80273a0:	1a52      	subs	r2, r2, r1
 80273a2:	b292      	uxth	r2, r2
 80273a4:	fb08 f000 	mul.w	r0, r8, r0
 80273a8:	fb02 000e 	mla	r0, r2, lr, r0
 80273ac:	fb01 0004 	mla	r0, r1, r4, r0
 80273b0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80273b2:	fb09 0004 	mla	r0, r9, r4, r0
 80273b6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80273ba:	2800      	cmp	r0, #0
 80273bc:	f000 80fa 	beq.w	80275b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80273c0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80273c4:	d01b      	beq.n	80273fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80273c6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80273ca:	fb0e fa0a 	mul.w	sl, lr, sl
 80273ce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80273d2:	fb0e fe03 	mul.w	lr, lr, r3
 80273d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80273da:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80273de:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80273e2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80273e6:	4453      	add	r3, sl
 80273e8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80273ec:	0a1b      	lsrs	r3, r3, #8
 80273ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80273f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80273f6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80273fa:	ea43 030c 	orr.w	r3, r3, ip
 80273fe:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027400:	2cff      	cmp	r4, #255	@ 0xff
 8027402:	d021      	beq.n	8027448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8027404:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027406:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802740a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802740c:	fb04 fb0b 	mul.w	fp, r4, fp
 8027410:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027412:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027416:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8027418:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802741c:	fb04 fa0a 	mul.w	sl, r4, sl
 8027420:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027424:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027428:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802742c:	44de      	add	lr, fp
 802742e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027432:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027436:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802743a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802743e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027442:	ea4e 040a 	orr.w	r4, lr, sl
 8027446:	940e      	str	r4, [sp, #56]	@ 0x38
 8027448:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802744a:	2cff      	cmp	r4, #255	@ 0xff
 802744c:	d021      	beq.n	8027492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802744e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8027450:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027454:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027456:	fb04 fb0b 	mul.w	fp, r4, fp
 802745a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802745c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027460:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027462:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027466:	fb04 fa0a 	mul.w	sl, r4, sl
 802746a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802746e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027472:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027476:	44de      	add	lr, fp
 8027478:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802747c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027480:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027484:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027488:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802748c:	ea4e 040a 	orr.w	r4, lr, sl
 8027490:	940a      	str	r4, [sp, #40]	@ 0x28
 8027492:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8027494:	2cff      	cmp	r4, #255	@ 0xff
 8027496:	d021      	beq.n	80274dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8027498:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802749a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802749e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80274a0:	fb04 fb0b 	mul.w	fp, r4, fp
 80274a4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80274a6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80274aa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80274ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80274b0:	fb04 fa0a 	mul.w	sl, r4, sl
 80274b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80274b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80274bc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80274c0:	44de      	add	lr, fp
 80274c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80274c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80274ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80274ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80274d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80274d6:	ea4e 040a 	orr.w	r4, lr, sl
 80274da:	940f      	str	r4, [sp, #60]	@ 0x3c
 80274dc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80274de:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80274e2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80274e4:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80274e8:	fb08 fc0c 	mul.w	ip, r8, ip
 80274ec:	fb02 cc0e 	mla	ip, r2, lr, ip
 80274f0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80274f4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80274f6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80274fa:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80274fe:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8027500:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027504:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8027508:	fb08 f80e 	mul.w	r8, r8, lr
 802750c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027510:	fb02 8303 	mla	r3, r2, r3, r8
 8027514:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8027516:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8027518:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802751c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802751e:	fb01 330a 	mla	r3, r1, sl, r3
 8027522:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8027526:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8027528:	fb09 3901 	mla	r9, r9, r1, r3
 802752c:	4342      	muls	r2, r0
 802752e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027532:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027536:	883b      	ldrh	r3, [r7, #0]
 8027538:	1c50      	adds	r0, r2, #1
 802753a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802753e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8027542:	ea4c 0c09 	orr.w	ip, ip, r9
 8027546:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802754a:	1219      	asrs	r1, r3, #8
 802754c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8027550:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8027554:	b2c0      	uxtb	r0, r0
 8027556:	fb12 f204 	smulbb	r2, r2, r4
 802755a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802755e:	fb01 2100 	mla	r1, r1, r0, r2
 8027562:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8027566:	10da      	asrs	r2, r3, #3
 8027568:	fa5f fc8c 	uxtb.w	ip, ip
 802756c:	00db      	lsls	r3, r3, #3
 802756e:	fb1c fc04 	smulbb	ip, ip, r4
 8027572:	b2db      	uxtb	r3, r3
 8027574:	b289      	uxth	r1, r1
 8027576:	fb03 c300 	mla	r3, r3, r0, ip
 802757a:	fa1f fc83 	uxth.w	ip, r3
 802757e:	1c4b      	adds	r3, r1, #1
 8027580:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027584:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027588:	fb1e fe04 	smulbb	lr, lr, r4
 802758c:	f10c 0301 	add.w	r3, ip, #1
 8027590:	fb02 e200 	mla	r2, r2, r0, lr
 8027594:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8027598:	b292      	uxth	r2, r2
 802759a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802759e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80275a2:	430b      	orrs	r3, r1
 80275a4:	1c51      	adds	r1, r2, #1
 80275a6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80275aa:	0952      	lsrs	r2, r2, #5
 80275ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80275b0:	4313      	orrs	r3, r2
 80275b2:	803b      	strh	r3, [r7, #0]
 80275b4:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80275b6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80275b8:	441a      	add	r2, r3
 80275ba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80275bc:	9229      	str	r2, [sp, #164]	@ 0xa4
 80275be:	441d      	add	r5, r3
 80275c0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80275c2:	3b01      	subs	r3, #1
 80275c4:	3702      	adds	r7, #2
 80275c6:	931a      	str	r3, [sp, #104]	@ 0x68
 80275c8:	e694      	b.n	80272f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80275ca:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80275cc:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80275ce:	441c      	add	r4, r3
 80275d0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80275d2:	9429      	str	r4, [sp, #164]	@ 0xa4
 80275d4:	441d      	add	r5, r3
 80275d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80275d8:	3b01      	subs	r3, #1
 80275da:	9309      	str	r3, [sp, #36]	@ 0x24
 80275dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80275de:	3302      	adds	r3, #2
 80275e0:	930c      	str	r3, [sp, #48]	@ 0x30
 80275e2:	e666      	b.n	80272b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80275e4:	d024      	beq.n	8027630 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80275e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80275e8:	982b      	ldr	r0, [sp, #172]	@ 0xac
 80275ea:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80275ec:	3b01      	subs	r3, #1
 80275ee:	fb00 4003 	mla	r0, r0, r3, r4
 80275f2:	1400      	asrs	r0, r0, #16
 80275f4:	f53f ae7b 	bmi.w	80272ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80275f8:	3901      	subs	r1, #1
 80275fa:	4288      	cmp	r0, r1
 80275fc:	f6bf ae77 	bge.w	80272ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027600:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8027602:	fb01 5303 	mla	r3, r1, r3, r5
 8027606:	141b      	asrs	r3, r3, #16
 8027608:	f53f ae71 	bmi.w	80272ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802760c:	3a01      	subs	r2, #1
 802760e:	4293      	cmp	r3, r2
 8027610:	f6bf ae6d 	bge.w	80272ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027614:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8027618:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 802761c:	f1bb 0f00 	cmp.w	fp, #0
 8027620:	dc70      	bgt.n	8027704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8027622:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027624:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8027628:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802762a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802762e:	930c      	str	r3, [sp, #48]	@ 0x30
 8027630:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8027632:	2b00      	cmp	r3, #0
 8027634:	f340 81be 	ble.w	80279b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8027638:	ee30 0a04 	vadd.f32	s0, s0, s8
 802763c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8027640:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027644:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027646:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802764a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802764e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027652:	eef0 6a62 	vmov.f32	s13, s5
 8027656:	ee61 7a27 	vmul.f32	s15, s2, s15
 802765a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802765e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027662:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8027666:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802766a:	eef0 6a43 	vmov.f32	s13, s6
 802766e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027672:	ee12 2a90 	vmov	r2, s5
 8027676:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802767a:	fb92 f3f3 	sdiv	r3, r2, r3
 802767e:	ee13 2a10 	vmov	r2, s6
 8027682:	932b      	str	r3, [sp, #172]	@ 0xac
 8027684:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027686:	fb92 f3f3 	sdiv	r3, r2, r3
 802768a:	932c      	str	r3, [sp, #176]	@ 0xb0
 802768c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802768e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8027690:	3b01      	subs	r3, #1
 8027692:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027696:	9319      	str	r3, [sp, #100]	@ 0x64
 8027698:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802769a:	bf08      	it	eq
 802769c:	4613      	moveq	r3, r2
 802769e:	ee16 5a90 	vmov	r5, s13
 80276a2:	9309      	str	r3, [sp, #36]	@ 0x24
 80276a4:	eeb0 3a67 	vmov.f32	s6, s15
 80276a8:	eef0 2a47 	vmov.f32	s5, s14
 80276ac:	e5f3      	b.n	8027296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80276ae:	2900      	cmp	r1, #0
 80276b0:	f43f ae66 	beq.w	8027380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80276b4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80276b8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80276bc:	900a      	str	r0, [sp, #40]	@ 0x28
 80276be:	0e00      	lsrs	r0, r0, #24
 80276c0:	9013      	str	r0, [sp, #76]	@ 0x4c
 80276c2:	e65d      	b.n	8027380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80276c4:	f113 0801 	adds.w	r8, r3, #1
 80276c8:	f53f af74 	bmi.w	80275b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80276cc:	4540      	cmp	r0, r8
 80276ce:	f6ff af71 	blt.w	80275b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80276d2:	f11c 0801 	adds.w	r8, ip, #1
 80276d6:	f53f af6d 	bmi.w	80275b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80276da:	45c6      	cmp	lr, r8
 80276dc:	f6ff af6a 	blt.w	80275b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80276e0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80276e2:	9302      	str	r3, [sp, #8]
 80276e4:	b200      	sxth	r0, r0
 80276e6:	fa0f f38e 	sxth.w	r3, lr
 80276ea:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80276ee:	e9cd c203 	strd	ip, r2, [sp, #12]
 80276f2:	9301      	str	r3, [sp, #4]
 80276f4:	9000      	str	r0, [sp, #0]
 80276f6:	4633      	mov	r3, r6
 80276f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80276fa:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80276fc:	4639      	mov	r1, r7
 80276fe:	f7ff fc62 	bl	8026fc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8027702:	e757      	b.n	80275b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027704:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8027706:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8027708:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802770c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802770e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027712:	1427      	asrs	r7, r4, #16
 8027714:	142b      	asrs	r3, r5, #16
 8027716:	fb01 7303 	mla	r3, r1, r3, r7
 802771a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802771c:	18e7      	adds	r7, r4, r3
 802771e:	5ce3      	ldrb	r3, [r4, r3]
 8027720:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8027724:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8027728:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802772c:	2a00      	cmp	r2, #0
 802772e:	f000 8137 	beq.w	80279a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027732:	f897 e001 	ldrb.w	lr, [r7, #1]
 8027736:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802773a:	9410      	str	r4, [sp, #64]	@ 0x40
 802773c:	0e24      	lsrs	r4, r4, #24
 802773e:	9417      	str	r4, [sp, #92]	@ 0x5c
 8027740:	b170      	cbz	r0, 8027760 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8027742:	eb07 0e01 	add.w	lr, r7, r1
 8027746:	5c79      	ldrb	r1, [r7, r1]
 8027748:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802774c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802774e:	0e09      	lsrs	r1, r1, #24
 8027750:	9114      	str	r1, [sp, #80]	@ 0x50
 8027752:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8027756:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802775a:	9111      	str	r1, [sp, #68]	@ 0x44
 802775c:	0e09      	lsrs	r1, r1, #24
 802775e:	9118      	str	r1, [sp, #96]	@ 0x60
 8027760:	b292      	uxth	r2, r2
 8027762:	b280      	uxth	r0, r0
 8027764:	fb02 f800 	mul.w	r8, r2, r0
 8027768:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802776c:	0112      	lsls	r2, r2, #4
 802776e:	eba2 0e08 	sub.w	lr, r2, r8
 8027772:	b280      	uxth	r0, r0
 8027774:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8027778:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802777a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802777c:	fa1f fe8e 	uxth.w	lr, lr
 8027780:	1a12      	subs	r2, r2, r0
 8027782:	b292      	uxth	r2, r2
 8027784:	fb0e f101 	mul.w	r1, lr, r1
 8027788:	fb02 110c 	mla	r1, r2, ip, r1
 802778c:	fb00 1104 	mla	r1, r0, r4, r1
 8027790:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8027792:	fb08 1104 	mla	r1, r8, r4, r1
 8027796:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802779a:	2900      	cmp	r1, #0
 802779c:	f000 80f5 	beq.w	802798a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80277a0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80277a4:	d019      	beq.n	80277da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80277a6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80277aa:	fb0c fa0a 	mul.w	sl, ip, sl
 80277ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80277b2:	fb0c fc03 	mul.w	ip, ip, r3
 80277b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80277ba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80277be:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80277c2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80277c6:	4453      	add	r3, sl
 80277c8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80277cc:	0a1b      	lsrs	r3, r3, #8
 80277ce:	0a3f      	lsrs	r7, r7, #8
 80277d0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80277d4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80277d8:	433b      	orrs	r3, r7
 80277da:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80277dc:	2cff      	cmp	r4, #255	@ 0xff
 80277de:	d020      	beq.n	8027822 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80277e0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80277e2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80277e6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80277e8:	4367      	muls	r7, r4
 80277ea:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80277ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80277f0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80277f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80277f6:	fb04 fa0a 	mul.w	sl, r4, sl
 80277fa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80277fe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027802:	44bc      	add	ip, r7
 8027804:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027808:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802780c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027810:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027814:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027818:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802781c:	ea4c 040a 	orr.w	r4, ip, sl
 8027820:	9410      	str	r4, [sp, #64]	@ 0x40
 8027822:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8027824:	2cff      	cmp	r4, #255	@ 0xff
 8027826:	d020      	beq.n	802786a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8027828:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802782a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802782e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8027830:	4367      	muls	r7, r4
 8027832:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027834:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027838:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802783a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802783e:	fb04 fa0a 	mul.w	sl, r4, sl
 8027842:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027846:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802784a:	44bc      	add	ip, r7
 802784c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027850:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027854:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027858:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802785c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027860:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027864:	ea4c 040a 	orr.w	r4, ip, sl
 8027868:	940b      	str	r4, [sp, #44]	@ 0x2c
 802786a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802786c:	2cff      	cmp	r4, #255	@ 0xff
 802786e:	d020      	beq.n	80278b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8027870:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8027872:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8027876:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8027878:	4367      	muls	r7, r4
 802787a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802787c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027880:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8027882:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027886:	fb04 fa0a 	mul.w	sl, r4, sl
 802788a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802788e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027892:	44bc      	add	ip, r7
 8027894:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027898:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802789c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80278a4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80278a8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80278ac:	ea4c 040a 	orr.w	r4, ip, sl
 80278b0:	9411      	str	r4, [sp, #68]	@ 0x44
 80278b2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80278b4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80278b8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80278ba:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80278be:	fb0e f707 	mul.w	r7, lr, r7
 80278c2:	fb02 770c 	mla	r7, r2, ip, r7
 80278c6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80278ca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80278cc:	fb00 770c 	mla	r7, r0, ip, r7
 80278d0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80278d4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80278d6:	fb08 770c 	mla	r7, r8, ip, r7
 80278da:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 80278de:	fb0e fe0c 	mul.w	lr, lr, ip
 80278e2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80278e6:	fb02 e303 	mla	r3, r2, r3, lr
 80278ea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80278ec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80278ee:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80278f2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80278f4:	fb00 330a 	mla	r3, r0, sl, r3
 80278f8:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80278fc:	fb08 3c0c 	mla	ip, r8, ip, r3
 8027900:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027902:	f8b9 0000 	ldrh.w	r0, [r9]
 8027906:	434b      	muls	r3, r1
 8027908:	0a3f      	lsrs	r7, r7, #8
 802790a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802790e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027912:	1c59      	adds	r1, r3, #1
 8027914:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8027918:	ea47 070c 	orr.w	r7, r7, ip
 802791c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8027920:	1202      	asrs	r2, r0, #8
 8027922:	0c3b      	lsrs	r3, r7, #16
 8027924:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027928:	b2c9      	uxtb	r1, r1
 802792a:	fb13 f304 	smulbb	r3, r3, r4
 802792e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8027932:	fb02 3201 	mla	r2, r2, r1, r3
 8027936:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802793a:	10c3      	asrs	r3, r0, #3
 802793c:	b2ff      	uxtb	r7, r7
 802793e:	00c0      	lsls	r0, r0, #3
 8027940:	b292      	uxth	r2, r2
 8027942:	fb1c fc04 	smulbb	ip, ip, r4
 8027946:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802794a:	b2c0      	uxtb	r0, r0
 802794c:	fb17 f704 	smulbb	r7, r7, r4
 8027950:	fb03 c301 	mla	r3, r3, r1, ip
 8027954:	fb00 7001 	mla	r0, r0, r1, r7
 8027958:	f102 0c01 	add.w	ip, r2, #1
 802795c:	b280      	uxth	r0, r0
 802795e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8027962:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8027966:	1c42      	adds	r2, r0, #1
 8027968:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802796c:	b29b      	uxth	r3, r3
 802796e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8027972:	ea42 020c 	orr.w	r2, r2, ip
 8027976:	f103 0c01 	add.w	ip, r3, #1
 802797a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802797e:	095b      	lsrs	r3, r3, #5
 8027980:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027984:	431a      	orrs	r2, r3
 8027986:	f8a9 2000 	strh.w	r2, [r9]
 802798a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802798c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802798e:	441a      	add	r2, r3
 8027990:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027992:	9229      	str	r2, [sp, #164]	@ 0xa4
 8027994:	f109 0902 	add.w	r9, r9, #2
 8027998:	441d      	add	r5, r3
 802799a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802799e:	e63d      	b.n	802761c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80279a0:	2800      	cmp	r0, #0
 80279a2:	f43f aedd 	beq.w	8027760 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80279a6:	5c79      	ldrb	r1, [r7, r1]
 80279a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80279ac:	910b      	str	r1, [sp, #44]	@ 0x2c
 80279ae:	0e09      	lsrs	r1, r1, #24
 80279b0:	9114      	str	r1, [sp, #80]	@ 0x50
 80279b2:	e6d5      	b.n	8027760 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80279b4:	b01f      	add	sp, #124	@ 0x7c
 80279b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080279ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80279ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80279be:	b089      	sub	sp, #36	@ 0x24
 80279c0:	9101      	str	r1, [sp, #4]
 80279c2:	9801      	ldr	r0, [sp, #4]
 80279c4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 80279c8:	8800      	ldrh	r0, [r0, #0]
 80279ca:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 80279ce:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 80279d2:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 80279d6:	1206      	asrs	r6, r0, #8
 80279d8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 80279dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80279e0:	9602      	str	r6, [sp, #8]
 80279e2:	10c6      	asrs	r6, r0, #3
 80279e4:	00c0      	lsls	r0, r0, #3
 80279e6:	b2c0      	uxtb	r0, r0
 80279e8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80279ec:	9004      	str	r0, [sp, #16]
 80279ee:	2f00      	cmp	r7, #0
 80279f0:	fb07 100c 	mla	r0, r7, ip, r1
 80279f4:	9603      	str	r6, [sp, #12]
 80279f6:	eb02 0e00 	add.w	lr, r2, r0
 80279fa:	f2c0 810a 	blt.w	8027c12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80279fe:	45b8      	cmp	r8, r7
 8027a00:	f340 8107 	ble.w	8027c12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8027a04:	2900      	cmp	r1, #0
 8027a06:	f2c0 8102 	blt.w	8027c0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8027a0a:	458c      	cmp	ip, r1
 8027a0c:	f340 80ff 	ble.w	8027c0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8027a10:	5c12      	ldrb	r2, [r2, r0]
 8027a12:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8027a16:	1c4a      	adds	r2, r1, #1
 8027a18:	f100 80fe 	bmi.w	8027c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8027a1c:	4594      	cmp	ip, r2
 8027a1e:	f340 80fb 	ble.w	8027c18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8027a22:	2d00      	cmp	r5, #0
 8027a24:	f000 80fa 	beq.w	8027c1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8027a28:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8027a2c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8027a30:	3701      	adds	r7, #1
 8027a32:	f100 80f7 	bmi.w	8027c24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8027a36:	45b8      	cmp	r8, r7
 8027a38:	f340 80f4 	ble.w	8027c24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8027a3c:	2c00      	cmp	r4, #0
 8027a3e:	f000 80f4 	beq.w	8027c2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8027a42:	2900      	cmp	r1, #0
 8027a44:	eb0e 020c 	add.w	r2, lr, ip
 8027a48:	f2c0 80ea 	blt.w	8027c20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8027a4c:	458c      	cmp	ip, r1
 8027a4e:	f340 80e7 	ble.w	8027c20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8027a52:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8027a56:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8027a5a:	3101      	adds	r1, #1
 8027a5c:	f100 80e8 	bmi.w	8027c30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8027a60:	458c      	cmp	ip, r1
 8027a62:	f340 80e5 	ble.w	8027c30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8027a66:	2d00      	cmp	r5, #0
 8027a68:	f000 80e4 	beq.w	8027c34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8027a6c:	7852      	ldrb	r2, [r2, #1]
 8027a6e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8027a72:	0e0b      	lsrs	r3, r1, #24
 8027a74:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8027a78:	9300      	str	r3, [sp, #0]
 8027a7a:	b2a4      	uxth	r4, r4
 8027a7c:	b2ab      	uxth	r3, r5
 8027a7e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8027a82:	fb03 f904 	mul.w	r9, r3, r4
 8027a86:	fb0a f505 	mul.w	r5, sl, r5
 8027a8a:	011b      	lsls	r3, r3, #4
 8027a8c:	eba3 0e09 	sub.w	lr, r3, r9
 8027a90:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8027a94:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8027a98:	0a28      	lsrs	r0, r5, #8
 8027a9a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027a9e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8027aa2:	4405      	add	r5, r0
 8027aa4:	0a2d      	lsrs	r5, r5, #8
 8027aa6:	fb0a f303 	mul.w	r3, sl, r3
 8027aaa:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8027aae:	9005      	str	r0, [sp, #20]
 8027ab0:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8027ab4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8027ab8:	0a1b      	lsrs	r3, r3, #8
 8027aba:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8027abe:	9306      	str	r3, [sp, #24]
 8027ac0:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8027ac4:	fb0b f303 	mul.w	r3, fp, r3
 8027ac8:	0a1d      	lsrs	r5, r3, #8
 8027aca:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8027ace:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8027ad2:	fb0b f606 	mul.w	r6, fp, r6
 8027ad6:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8027ada:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8027ade:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027ae2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8027ae6:	fb08 f707 	mul.w	r7, r8, r7
 8027aea:	441d      	add	r5, r3
 8027aec:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8027af0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8027af4:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8027af8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8027afc:	fb08 fc0c 	mul.w	ip, r8, ip
 8027b00:	0a1b      	lsrs	r3, r3, #8
 8027b02:	9307      	str	r3, [sp, #28]
 8027b04:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8027b08:	0e0b      	lsrs	r3, r1, #24
 8027b0a:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8027b0e:	435f      	muls	r7, r3
 8027b10:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8027b14:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027b18:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8027b1c:	4460      	add	r0, ip
 8027b1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027b22:	b2a4      	uxth	r4, r4
 8027b24:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027b28:	0a2d      	lsrs	r5, r5, #8
 8027b2a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027b2e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027b32:	fa1f fe8e 	uxth.w	lr, lr
 8027b36:	4359      	muls	r1, r3
 8027b38:	1b12      	subs	r2, r2, r4
 8027b3a:	9b05      	ldr	r3, [sp, #20]
 8027b3c:	44bc      	add	ip, r7
 8027b3e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027b42:	b292      	uxth	r2, r2
 8027b44:	fb05 f50e 	mul.w	r5, r5, lr
 8027b48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027b4c:	fb03 5502 	mla	r5, r3, r2, r5
 8027b50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027b54:	9b06      	ldr	r3, [sp, #24]
 8027b56:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8027b5a:	0a36      	lsrs	r6, r6, #8
 8027b5c:	0a00      	lsrs	r0, r0, #8
 8027b5e:	fb0c 5509 	mla	r5, ip, r9, r5
 8027b62:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8027b66:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8027b6a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8027b6e:	fb00 5504 	mla	r5, r0, r4, r5
 8027b72:	fb0e f606 	mul.w	r6, lr, r6
 8027b76:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8027b7a:	0a09      	lsrs	r1, r1, #8
 8027b7c:	9b07      	ldr	r3, [sp, #28]
 8027b7e:	fb02 6000 	mla	r0, r2, r0, r6
 8027b82:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027b86:	fb09 0001 	mla	r0, r9, r1, r0
 8027b8a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027b8e:	fb0e fe0b 	mul.w	lr, lr, fp
 8027b92:	fb04 0003 	mla	r0, r4, r3, r0
 8027b96:	fb02 e20a 	mla	r2, r2, sl, lr
 8027b9a:	9b00      	ldr	r3, [sp, #0]
 8027b9c:	fb04 2408 	mla	r4, r4, r8, r2
 8027ba0:	fb09 4903 	mla	r9, r9, r3, r4
 8027ba4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8027ba8:	9b02      	ldr	r3, [sp, #8]
 8027baa:	9a04      	ldr	r2, [sp, #16]
 8027bac:	fa5f f989 	uxtb.w	r9, r9
 8027bb0:	fb03 f109 	mul.w	r1, r3, r9
 8027bb4:	9b03      	ldr	r3, [sp, #12]
 8027bb6:	0a2d      	lsrs	r5, r5, #8
 8027bb8:	0a00      	lsrs	r0, r0, #8
 8027bba:	fb03 f309 	mul.w	r3, r3, r9
 8027bbe:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8027bc2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8027bc6:	4305      	orrs	r5, r0
 8027bc8:	fb02 f909 	mul.w	r9, r2, r9
 8027bcc:	1c58      	adds	r0, r3, #1
 8027bce:	1c4a      	adds	r2, r1, #1
 8027bd0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027bd4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8027bd8:	0a2b      	lsrs	r3, r5, #8
 8027bda:	0c2a      	lsrs	r2, r5, #16
 8027bdc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8027be0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8027be4:	00db      	lsls	r3, r3, #3
 8027be6:	0212      	lsls	r2, r2, #8
 8027be8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8027bec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027bf0:	4313      	orrs	r3, r2
 8027bf2:	f109 0201 	add.w	r2, r9, #1
 8027bf6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8027bfa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8027bfe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8027c02:	431d      	orrs	r5, r3
 8027c04:	9b01      	ldr	r3, [sp, #4]
 8027c06:	801d      	strh	r5, [r3, #0]
 8027c08:	b009      	add	sp, #36	@ 0x24
 8027c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c0e:	2000      	movs	r0, #0
 8027c10:	e701      	b.n	8027a16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8027c12:	2600      	movs	r6, #0
 8027c14:	4630      	mov	r0, r6
 8027c16:	e70b      	b.n	8027a30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8027c18:	2600      	movs	r6, #0
 8027c1a:	e709      	b.n	8027a30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8027c1c:	462e      	mov	r6, r5
 8027c1e:	e707      	b.n	8027a30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8027c20:	2700      	movs	r7, #0
 8027c22:	e71a      	b.n	8027a5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8027c24:	2100      	movs	r1, #0
 8027c26:	460f      	mov	r7, r1
 8027c28:	e723      	b.n	8027a72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027c2a:	4621      	mov	r1, r4
 8027c2c:	4627      	mov	r7, r4
 8027c2e:	e720      	b.n	8027a72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027c30:	2100      	movs	r1, #0
 8027c32:	e71e      	b.n	8027a72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8027c34:	4629      	mov	r1, r5
 8027c36:	e71c      	b.n	8027a72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08027c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c3c:	b09b      	sub	sp, #108	@ 0x6c
 8027c3e:	9218      	str	r2, [sp, #96]	@ 0x60
 8027c40:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8027c42:	9116      	str	r1, [sp, #88]	@ 0x58
 8027c44:	9307      	str	r3, [sp, #28]
 8027c46:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8027c4a:	9019      	str	r0, [sp, #100]	@ 0x64
 8027c4c:	6850      	ldr	r0, [r2, #4]
 8027c4e:	6812      	ldr	r2, [r2, #0]
 8027c50:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8027c52:	fb00 1303 	mla	r3, r0, r3, r1
 8027c56:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027c5a:	930a      	str	r3, [sp, #40]	@ 0x28
 8027c5c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027c5e:	681b      	ldr	r3, [r3, #0]
 8027c60:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027c62:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027c64:	685e      	ldr	r6, [r3, #4]
 8027c66:	3604      	adds	r6, #4
 8027c68:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027c6a:	2b00      	cmp	r3, #0
 8027c6c:	dc03      	bgt.n	8027c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8027c6e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8027c70:	2b00      	cmp	r3, #0
 8027c72:	f340 8373 	ble.w	802835c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8027c76:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027c78:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027c7c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027c80:	1e48      	subs	r0, r1, #1
 8027c82:	1e57      	subs	r7, r2, #1
 8027c84:	9b07      	ldr	r3, [sp, #28]
 8027c86:	2b00      	cmp	r3, #0
 8027c88:	f340 8190 	ble.w	8027fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8027c8c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027c8e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027c92:	ea4f 4325 	mov.w	r3, r5, asr #16
 8027c96:	d406      	bmi.n	8027ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027c98:	4584      	cmp	ip, r0
 8027c9a:	da04      	bge.n	8027ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027c9c:	2b00      	cmp	r3, #0
 8027c9e:	db02      	blt.n	8027ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027ca0:	42bb      	cmp	r3, r7
 8027ca2:	f2c0 8184 	blt.w	8027fae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8027ca6:	f11c 0c01 	adds.w	ip, ip, #1
 8027caa:	f100 8172 	bmi.w	8027f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027cae:	4561      	cmp	r1, ip
 8027cb0:	f2c0 816f 	blt.w	8027f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027cb4:	3301      	adds	r3, #1
 8027cb6:	f100 816c 	bmi.w	8027f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027cba:	429a      	cmp	r2, r3
 8027cbc:	f2c0 8169 	blt.w	8027f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027cc0:	9b07      	ldr	r3, [sp, #28]
 8027cc2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8027cc4:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027cc6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8027cc8:	2b00      	cmp	r3, #0
 8027cca:	f340 818e 	ble.w	8027fea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8027cce:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8027cd0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8027cd4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027cd6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8027cda:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8027cdc:	141b      	asrs	r3, r3, #16
 8027cde:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8027ce2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8027ce6:	f100 81d1 	bmi.w	802808c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027cea:	f101 38ff 	add.w	r8, r1, #4294967295
 8027cee:	4543      	cmp	r3, r8
 8027cf0:	f280 81cc 	bge.w	802808c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027cf4:	f1bc 0f00 	cmp.w	ip, #0
 8027cf8:	f2c0 81c8 	blt.w	802808c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027cfc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027d00:	45c4      	cmp	ip, r8
 8027d02:	f280 81c3 	bge.w	802808c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8027d06:	b209      	sxth	r1, r1
 8027d08:	fb0c 3301 	mla	r3, ip, r1, r3
 8027d0c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8027d0e:	eb04 0803 	add.w	r8, r4, r3
 8027d12:	5ce3      	ldrb	r3, [r4, r3]
 8027d14:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8027d18:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8027d1c:	2a00      	cmp	r2, #0
 8027d1e:	f000 81aa 	beq.w	8028076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8027d22:	f898 c001 	ldrb.w	ip, [r8, #1]
 8027d26:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8027d2a:	940b      	str	r4, [sp, #44]	@ 0x2c
 8027d2c:	0e24      	lsrs	r4, r4, #24
 8027d2e:	9412      	str	r4, [sp, #72]	@ 0x48
 8027d30:	b178      	cbz	r0, 8027d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8027d32:	eb08 0c01 	add.w	ip, r8, r1
 8027d36:	f818 1001 	ldrb.w	r1, [r8, r1]
 8027d3a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8027d3e:	9108      	str	r1, [sp, #32]
 8027d40:	0e09      	lsrs	r1, r1, #24
 8027d42:	9110      	str	r1, [sp, #64]	@ 0x40
 8027d44:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8027d48:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8027d4c:	910c      	str	r1, [sp, #48]	@ 0x30
 8027d4e:	0e09      	lsrs	r1, r1, #24
 8027d50:	9113      	str	r1, [sp, #76]	@ 0x4c
 8027d52:	b292      	uxth	r2, r2
 8027d54:	b280      	uxth	r0, r0
 8027d56:	fb02 f900 	mul.w	r9, r2, r0
 8027d5a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027d5e:	0112      	lsls	r2, r2, #4
 8027d60:	eba2 0809 	sub.w	r8, r2, r9
 8027d64:	b280      	uxth	r0, r0
 8027d66:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8027d6a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8027d6c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027d6e:	fa1f f888 	uxth.w	r8, r8
 8027d72:	1a12      	subs	r2, r2, r0
 8027d74:	b292      	uxth	r2, r2
 8027d76:	fb08 f101 	mul.w	r1, r8, r1
 8027d7a:	fb02 110e 	mla	r1, r2, lr, r1
 8027d7e:	fb00 1104 	mla	r1, r0, r4, r1
 8027d82:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027d84:	fb09 1104 	mla	r1, r9, r4, r1
 8027d88:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027d8c:	2900      	cmp	r1, #0
 8027d8e:	f000 80f5 	beq.w	8027f7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8027d92:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8027d96:	d01b      	beq.n	8027dd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027d98:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8027d9c:	fb0e fa0a 	mul.w	sl, lr, sl
 8027da0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027da4:	fb0e fe03 	mul.w	lr, lr, r3
 8027da8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027dac:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027db0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8027db4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8027db8:	4453      	add	r3, sl
 8027dba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027dbe:	0a1b      	lsrs	r3, r3, #8
 8027dc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027dc4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027dc8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027dcc:	ea43 030c 	orr.w	r3, r3, ip
 8027dd0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8027dd2:	2cff      	cmp	r4, #255	@ 0xff
 8027dd4:	d021      	beq.n	8027e1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8027dd6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027dd8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027ddc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8027dde:	fb04 fb0b 	mul.w	fp, r4, fp
 8027de2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027de4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027de8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8027dea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027dee:	fb04 fa0a 	mul.w	sl, r4, sl
 8027df2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027df6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027dfa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027dfe:	44de      	add	lr, fp
 8027e00:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e04:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e0c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027e10:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027e14:	ea4e 040a 	orr.w	r4, lr, sl
 8027e18:	940b      	str	r4, [sp, #44]	@ 0x2c
 8027e1a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027e1c:	2cff      	cmp	r4, #255	@ 0xff
 8027e1e:	d021      	beq.n	8027e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8027e20:	9c08      	ldr	r4, [sp, #32]
 8027e22:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027e26:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027e28:	fb04 fb0b 	mul.w	fp, r4, fp
 8027e2c:	9c08      	ldr	r4, [sp, #32]
 8027e2e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027e32:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8027e34:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027e38:	fb04 fa0a 	mul.w	sl, r4, sl
 8027e3c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027e40:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027e44:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027e48:	44de      	add	lr, fp
 8027e4a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e56:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027e5a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027e5e:	ea4e 040a 	orr.w	r4, lr, sl
 8027e62:	9408      	str	r4, [sp, #32]
 8027e64:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027e66:	2cff      	cmp	r4, #255	@ 0xff
 8027e68:	d021      	beq.n	8027eae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8027e6a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027e6c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8027e70:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027e72:	fb04 fb0b 	mul.w	fp, r4, fp
 8027e76:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027e78:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8027e7c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8027e7e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027e82:	fb04 fa0a 	mul.w	sl, r4, sl
 8027e86:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027e8a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027e8e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027e92:	44de      	add	lr, fp
 8027e94:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e98:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ea0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027ea4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027ea8:	ea4e 040a 	orr.w	r4, lr, sl
 8027eac:	940c      	str	r4, [sp, #48]	@ 0x30
 8027eae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027eb0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027eb4:	9c08      	ldr	r4, [sp, #32]
 8027eb6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8027eba:	fb08 fc0c 	mul.w	ip, r8, ip
 8027ebe:	fb02 cc0e 	mla	ip, r2, lr, ip
 8027ec2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8027ec6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8027ec8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027ecc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8027ed0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8027ed2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027ed6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8027eda:	fb08 f80e 	mul.w	r8, r8, lr
 8027ede:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027ee2:	fb02 8303 	mla	r3, r2, r3, r8
 8027ee6:	9a08      	ldr	r2, [sp, #32]
 8027ee8:	f8b7 8000 	ldrh.w	r8, [r7]
 8027eec:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8027ef0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8027ef2:	fb00 330a 	mla	r3, r0, sl, r3
 8027ef6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8027efa:	fb09 3900 	mla	r9, r9, r0, r3
 8027efe:	43c9      	mvns	r1, r1
 8027f00:	ea4f 2228 	mov.w	r2, r8, asr #8
 8027f04:	fa5f fe81 	uxtb.w	lr, r1
 8027f08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027f0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027f10:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8027f14:	fb02 f20e 	mul.w	r2, r2, lr
 8027f18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027f1c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8027f20:	ea4c 0c09 	orr.w	ip, ip, r9
 8027f24:	1c53      	adds	r3, r2, #1
 8027f26:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8027f2a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8027f2e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8027f32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027f36:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8027f3a:	4a63      	ldr	r2, [pc, #396]	@ (80280c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8027f3c:	fb00 f00e 	mul.w	r0, r0, lr
 8027f40:	b2db      	uxtb	r3, r3
 8027f42:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8027f46:	1c43      	adds	r3, r0, #1
 8027f48:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027f4c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8027f50:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8027f54:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8027f58:	b2c9      	uxtb	r1, r1
 8027f5a:	00db      	lsls	r3, r3, #3
 8027f5c:	fb01 f10e 	mul.w	r1, r1, lr
 8027f60:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027f64:	4313      	orrs	r3, r2
 8027f66:	1c4a      	adds	r2, r1, #1
 8027f68:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8027f6c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8027f70:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027f74:	ea4c 0c03 	orr.w	ip, ip, r3
 8027f78:	f8a7 c000 	strh.w	ip, [r7]
 8027f7c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8027f7e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8027f80:	441a      	add	r2, r3
 8027f82:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027f84:	9225      	str	r2, [sp, #148]	@ 0x94
 8027f86:	441d      	add	r5, r3
 8027f88:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8027f8a:	3b01      	subs	r3, #1
 8027f8c:	3702      	adds	r7, #2
 8027f8e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8027f90:	e699      	b.n	8027cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027f92:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8027f94:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027f96:	441c      	add	r4, r3
 8027f98:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027f9a:	9425      	str	r4, [sp, #148]	@ 0x94
 8027f9c:	441d      	add	r5, r3
 8027f9e:	9b07      	ldr	r3, [sp, #28]
 8027fa0:	3b01      	subs	r3, #1
 8027fa2:	9307      	str	r3, [sp, #28]
 8027fa4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027fa6:	3302      	adds	r3, #2
 8027fa8:	930a      	str	r3, [sp, #40]	@ 0x28
 8027faa:	e66b      	b.n	8027c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8027fac:	d024      	beq.n	8027ff8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8027fae:	9b07      	ldr	r3, [sp, #28]
 8027fb0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8027fb2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8027fb4:	3b01      	subs	r3, #1
 8027fb6:	fb00 4003 	mla	r0, r0, r3, r4
 8027fba:	1400      	asrs	r0, r0, #16
 8027fbc:	f53f ae80 	bmi.w	8027cc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027fc0:	3901      	subs	r1, #1
 8027fc2:	4288      	cmp	r0, r1
 8027fc4:	f6bf ae7c 	bge.w	8027cc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027fc8:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8027fca:	fb01 5303 	mla	r3, r1, r3, r5
 8027fce:	141b      	asrs	r3, r3, #16
 8027fd0:	f53f ae76 	bmi.w	8027cc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027fd4:	3a01      	subs	r2, #1
 8027fd6:	4293      	cmp	r3, r2
 8027fd8:	f6bf ae72 	bge.w	8027cc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027fdc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027fe0:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8027fe4:	f1bb 0f00 	cmp.w	fp, #0
 8027fe8:	dc70      	bgt.n	80280cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8027fea:	9b07      	ldr	r3, [sp, #28]
 8027fec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8027ff0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027ff2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8027ff6:	930a      	str	r3, [sp, #40]	@ 0x28
 8027ff8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8027ffa:	2b00      	cmp	r3, #0
 8027ffc:	f340 81ae 	ble.w	802835c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8028000:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028004:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8028008:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802800c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802800e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028012:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028016:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802801a:	eef0 6a62 	vmov.f32	s13, s5
 802801e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028022:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028026:	ee77 2a62 	vsub.f32	s5, s14, s5
 802802a:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 802802e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028032:	eef0 6a43 	vmov.f32	s13, s6
 8028036:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802803a:	ee12 2a90 	vmov	r2, s5
 802803e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028042:	fb92 f3f3 	sdiv	r3, r2, r3
 8028046:	ee13 2a10 	vmov	r2, s6
 802804a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802804c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802804e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028052:	9328      	str	r3, [sp, #160]	@ 0xa0
 8028054:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8028056:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8028058:	3b01      	subs	r3, #1
 802805a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802805e:	9316      	str	r3, [sp, #88]	@ 0x58
 8028060:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028062:	bf08      	it	eq
 8028064:	4613      	moveq	r3, r2
 8028066:	ee16 5a90 	vmov	r5, s13
 802806a:	9307      	str	r3, [sp, #28]
 802806c:	eeb0 3a67 	vmov.f32	s6, s15
 8028070:	eef0 2a47 	vmov.f32	s5, s14
 8028074:	e5f8      	b.n	8027c68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8028076:	2800      	cmp	r0, #0
 8028078:	f43f ae6b 	beq.w	8027d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802807c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8028080:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8028084:	9108      	str	r1, [sp, #32]
 8028086:	0e09      	lsrs	r1, r1, #24
 8028088:	9110      	str	r1, [sp, #64]	@ 0x40
 802808a:	e662      	b.n	8027d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802808c:	f113 0801 	adds.w	r8, r3, #1
 8028090:	f53f af74 	bmi.w	8027f7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8028094:	4541      	cmp	r1, r8
 8028096:	f6ff af71 	blt.w	8027f7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802809a:	f11c 0801 	adds.w	r8, ip, #1
 802809e:	f53f af6d 	bmi.w	8027f7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80280a2:	45c6      	cmp	lr, r8
 80280a4:	f6ff af6a 	blt.w	8027f7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80280a8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80280ac:	b209      	sxth	r1, r1
 80280ae:	fa0f f38e 	sxth.w	r3, lr
 80280b2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80280b6:	9301      	str	r3, [sp, #4]
 80280b8:	9100      	str	r1, [sp, #0]
 80280ba:	4633      	mov	r3, r6
 80280bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80280be:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80280c0:	4639      	mov	r1, r7
 80280c2:	f7ff fc7a 	bl	80279ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80280c6:	e759      	b.n	8027f7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80280c8:	fffff800 	.word	0xfffff800
 80280cc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80280ce:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80280d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80280d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80280d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80280da:	1427      	asrs	r7, r4, #16
 80280dc:	142b      	asrs	r3, r5, #16
 80280de:	fb01 7303 	mla	r3, r1, r3, r7
 80280e2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80280e4:	18e7      	adds	r7, r4, r3
 80280e6:	5ce3      	ldrb	r3, [r4, r3]
 80280e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80280ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80280f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80280f4:	2a00      	cmp	r2, #0
 80280f6:	f000 8127 	beq.w	8028348 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80280fa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80280fe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8028102:	940d      	str	r4, [sp, #52]	@ 0x34
 8028104:	0e24      	lsrs	r4, r4, #24
 8028106:	9414      	str	r4, [sp, #80]	@ 0x50
 8028108:	b170      	cbz	r0, 8028128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802810a:	eb07 0e01 	add.w	lr, r7, r1
 802810e:	5c79      	ldrb	r1, [r7, r1]
 8028110:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8028114:	9109      	str	r1, [sp, #36]	@ 0x24
 8028116:	0e09      	lsrs	r1, r1, #24
 8028118:	9111      	str	r1, [sp, #68]	@ 0x44
 802811a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802811e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8028122:	910e      	str	r1, [sp, #56]	@ 0x38
 8028124:	0e09      	lsrs	r1, r1, #24
 8028126:	9115      	str	r1, [sp, #84]	@ 0x54
 8028128:	b292      	uxth	r2, r2
 802812a:	b280      	uxth	r0, r0
 802812c:	fb02 f800 	mul.w	r8, r2, r0
 8028130:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8028134:	0112      	lsls	r2, r2, #4
 8028136:	eba2 0e08 	sub.w	lr, r2, r8
 802813a:	b280      	uxth	r0, r0
 802813c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8028140:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8028142:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8028144:	fa1f fe8e 	uxth.w	lr, lr
 8028148:	1a09      	subs	r1, r1, r0
 802814a:	b289      	uxth	r1, r1
 802814c:	fb0e f202 	mul.w	r2, lr, r2
 8028150:	fb01 220c 	mla	r2, r1, ip, r2
 8028154:	fb00 2204 	mla	r2, r0, r4, r2
 8028158:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802815a:	fb08 2204 	mla	r2, r8, r4, r2
 802815e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8028162:	2a00      	cmp	r2, #0
 8028164:	f000 80e5 	beq.w	8028332 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8028168:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802816c:	d019      	beq.n	80281a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802816e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8028172:	fb0c fa0a 	mul.w	sl, ip, sl
 8028176:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802817a:	fb0c fc03 	mul.w	ip, ip, r3
 802817e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8028182:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8028186:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802818a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802818e:	4453      	add	r3, sl
 8028190:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8028194:	0a1b      	lsrs	r3, r3, #8
 8028196:	0a3f      	lsrs	r7, r7, #8
 8028198:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802819c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80281a0:	433b      	orrs	r3, r7
 80281a2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80281a4:	2cff      	cmp	r4, #255	@ 0xff
 80281a6:	d020      	beq.n	80281ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80281a8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80281aa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80281ae:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80281b0:	4367      	muls	r7, r4
 80281b2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80281b4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80281b8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80281ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80281be:	fb04 fa0a 	mul.w	sl, r4, sl
 80281c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80281c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80281ca:	44bc      	add	ip, r7
 80281cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80281d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80281d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80281e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80281e4:	ea4c 040a 	orr.w	r4, ip, sl
 80281e8:	940d      	str	r4, [sp, #52]	@ 0x34
 80281ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80281ec:	2cff      	cmp	r4, #255	@ 0xff
 80281ee:	d020      	beq.n	8028232 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80281f0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80281f2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80281f6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80281f8:	4367      	muls	r7, r4
 80281fa:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80281fc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8028200:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8028202:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028206:	fb04 fa0a 	mul.w	sl, r4, sl
 802820a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802820e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8028212:	44bc      	add	ip, r7
 8028214:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8028218:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802821c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028220:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028224:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8028228:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802822c:	ea4c 040a 	orr.w	r4, ip, sl
 8028230:	9409      	str	r4, [sp, #36]	@ 0x24
 8028232:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8028234:	2cff      	cmp	r4, #255	@ 0xff
 8028236:	d020      	beq.n	802827a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8028238:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802823a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802823e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8028240:	4367      	muls	r7, r4
 8028242:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8028244:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8028248:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802824a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802824e:	fb04 fa0a 	mul.w	sl, r4, sl
 8028252:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8028256:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802825a:	44bc      	add	ip, r7
 802825c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8028260:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028264:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028268:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802826c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8028270:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8028274:	ea4c 040a 	orr.w	r4, ip, sl
 8028278:	940e      	str	r4, [sp, #56]	@ 0x38
 802827a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802827c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8028280:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8028282:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8028286:	fb0e f707 	mul.w	r7, lr, r7
 802828a:	fb01 770c 	mla	r7, r1, ip, r7
 802828e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8028292:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8028294:	fb00 770c 	mla	r7, r0, ip, r7
 8028298:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802829c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802829e:	fb08 770c 	mla	r7, r8, ip, r7
 80282a2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 80282a6:	fb0e fe0c 	mul.w	lr, lr, ip
 80282aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80282ae:	fb01 e303 	mla	r3, r1, r3, lr
 80282b2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80282b4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80282b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80282ba:	fb00 330a 	mla	r3, r0, sl, r3
 80282be:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80282c2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80282c6:	f8b9 3000 	ldrh.w	r3, [r9]
 80282ca:	43d2      	mvns	r2, r2
 80282cc:	1218      	asrs	r0, r3, #8
 80282ce:	b2d2      	uxtb	r2, r2
 80282d0:	10d9      	asrs	r1, r3, #3
 80282d2:	0a3f      	lsrs	r7, r7, #8
 80282d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80282d8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80282dc:	00db      	lsls	r3, r3, #3
 80282de:	4350      	muls	r0, r2
 80282e0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80282e4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80282e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80282ec:	b2db      	uxtb	r3, r3
 80282ee:	ea47 070c 	orr.w	r7, r7, ip
 80282f2:	4351      	muls	r1, r2
 80282f4:	4353      	muls	r3, r2
 80282f6:	1c42      	adds	r2, r0, #1
 80282f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80282fc:	0c3a      	lsrs	r2, r7, #16
 80282fe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028302:	4a18      	ldr	r2, [pc, #96]	@ (8028364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8028304:	b2c0      	uxtb	r0, r0
 8028306:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802830a:	1c4a      	adds	r2, r1, #1
 802830c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8028310:	0a3a      	lsrs	r2, r7, #8
 8028312:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8028316:	00c9      	lsls	r1, r1, #3
 8028318:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802831c:	4301      	orrs	r1, r0
 802831e:	1c58      	adds	r0, r3, #1
 8028320:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028324:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8028328:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802832c:	4308      	orrs	r0, r1
 802832e:	f8a9 0000 	strh.w	r0, [r9]
 8028332:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8028334:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8028336:	441a      	add	r2, r3
 8028338:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802833a:	9225      	str	r2, [sp, #148]	@ 0x94
 802833c:	f109 0902 	add.w	r9, r9, #2
 8028340:	441d      	add	r5, r3
 8028342:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028346:	e64d      	b.n	8027fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8028348:	2800      	cmp	r0, #0
 802834a:	f43f aeed 	beq.w	8028128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802834e:	5c79      	ldrb	r1, [r7, r1]
 8028350:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8028354:	9109      	str	r1, [sp, #36]	@ 0x24
 8028356:	0e09      	lsrs	r1, r1, #24
 8028358:	9111      	str	r1, [sp, #68]	@ 0x44
 802835a:	e6e5      	b.n	8028128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802835c:	b01b      	add	sp, #108	@ 0x6c
 802835e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028362:	bf00      	nop
 8028364:	fffff800 	.word	0xfffff800

08028368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8028368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802836c:	b085      	sub	sp, #20
 802836e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8028372:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8028376:	9103      	str	r1, [sp, #12]
 8028378:	fb00 7406 	mla	r4, r0, r6, r7
 802837c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8028380:	2800      	cmp	r0, #0
 8028382:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8028386:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802838a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 802838e:	9501      	str	r5, [sp, #4]
 8028390:	eb03 0904 	add.w	r9, r3, r4
 8028394:	f2c0 8150 	blt.w	8028638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8028398:	4583      	cmp	fp, r0
 802839a:	f340 814d 	ble.w	8028638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802839e:	2f00      	cmp	r7, #0
 80283a0:	f2c0 8146 	blt.w	8028630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80283a4:	42be      	cmp	r6, r7
 80283a6:	f340 8143 	ble.w	8028630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80283aa:	f813 c004 	ldrb.w	ip, [r3, r4]
 80283ae:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80283b2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80283b6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 80283ba:	4355      	muls	r5, r2
 80283bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80283c0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 80283c4:	fb0c f203 	mul.w	r2, ip, r3
 80283c8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80283cc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 80283d0:	441d      	add	r5, r3
 80283d2:	f102 0320 	add.w	r3, r2, #32
 80283d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80283da:	0a1b      	lsrs	r3, r3, #8
 80283dc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80283e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80283e4:	431c      	orrs	r4, r3
 80283e6:	1c7b      	adds	r3, r7, #1
 80283e8:	f100 812b 	bmi.w	8028642 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80283ec:	429e      	cmp	r6, r3
 80283ee:	f340 8128 	ble.w	8028642 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80283f2:	2900      	cmp	r1, #0
 80283f4:	f000 8128 	beq.w	8028648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80283f8:	9a01      	ldr	r2, [sp, #4]
 80283fa:	f899 3001 	ldrb.w	r3, [r9, #1]
 80283fe:	8855      	ldrh	r5, [r2, #2]
 8028400:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8028404:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8028408:	fb08 f802 	mul.w	r8, r8, r2
 802840c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028410:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8028414:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8028418:	435d      	muls	r5, r3
 802841a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802841e:	44d0      	add	r8, sl
 8028420:	f105 0a20 	add.w	sl, r5, #32
 8028424:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8028428:	0a2d      	lsrs	r5, r5, #8
 802842a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802842e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028432:	432a      	orrs	r2, r5
 8028434:	3001      	adds	r0, #1
 8028436:	f100 810d 	bmi.w	8028654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802843a:	4583      	cmp	fp, r0
 802843c:	f340 810a 	ble.w	8028654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8028440:	f1be 0f00 	cmp.w	lr, #0
 8028444:	f000 810b 	beq.w	802865e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8028448:	2f00      	cmp	r7, #0
 802844a:	f2c0 8100 	blt.w	802864e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802844e:	42be      	cmp	r6, r7
 8028450:	f340 80fd 	ble.w	802864e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8028454:	9801      	ldr	r0, [sp, #4]
 8028456:	f819 5006 	ldrb.w	r5, [r9, r6]
 802845a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802845e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8028462:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8028466:	fb0a fa00 	mul.w	sl, sl, r0
 802846a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 802846e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8028472:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8028476:	fb05 f808 	mul.w	r8, r5, r8
 802847a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 802847e:	4482      	add	sl, r0
 8028480:	f108 0020 	add.w	r0, r8, #32
 8028484:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028488:	0a00      	lsrs	r0, r0, #8
 802848a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802848e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028492:	ea4b 0b00 	orr.w	fp, fp, r0
 8028496:	3701      	adds	r7, #1
 8028498:	f100 80e6 	bmi.w	8028668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802849c:	42be      	cmp	r6, r7
 802849e:	f340 80e3 	ble.w	8028668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80284a2:	2900      	cmp	r1, #0
 80284a4:	f000 80e3 	beq.w	802866e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80284a8:	3601      	adds	r6, #1
 80284aa:	9801      	ldr	r0, [sp, #4]
 80284ac:	f819 7006 	ldrb.w	r7, [r9, r6]
 80284b0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80284b4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80284b8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 80284bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80284c0:	fb09 f906 	mul.w	r9, r9, r6
 80284c4:	fb07 f800 	mul.w	r8, r7, r0
 80284c8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 80284cc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80284d0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 80284d4:	44d1      	add	r9, sl
 80284d6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80284da:	f108 0020 	add.w	r0, r8, #32
 80284de:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80284e2:	0a00      	lsrs	r0, r0, #8
 80284e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80284e8:	4330      	orrs	r0, r6
 80284ea:	b28e      	uxth	r6, r1
 80284ec:	fa1f f98e 	uxth.w	r9, lr
 80284f0:	fb06 f809 	mul.w	r8, r6, r9
 80284f4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80284f8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80284fc:	0136      	lsls	r6, r6, #4
 80284fe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028502:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8028506:	9601      	str	r6, [sp, #4]
 8028508:	ea4a 0404 	orr.w	r4, sl, r4
 802850c:	fa1f f689 	uxth.w	r6, r9
 8028510:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8028514:	fb11 f90e 	smulbb	r9, r1, lr
 8028518:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802851c:	9602      	str	r6, [sp, #8]
 802851e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028522:	4626      	mov	r6, r4
 8028524:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028528:	f1ce 0410 	rsb	r4, lr, #16
 802852c:	1a64      	subs	r4, r4, r1
 802852e:	ea4a 0202 	orr.w	r2, sl, r2
 8028532:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8028536:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802853a:	434a      	muls	r2, r1
 802853c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8028540:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028544:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8028548:	fb04 2406 	mla	r4, r4, r6, r2
 802854c:	ea4a 0000 	orr.w	r0, sl, r0
 8028550:	fb09 4200 	mla	r2, r9, r0, r4
 8028554:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8028558:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802855c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8028560:	ea44 0b0b 	orr.w	fp, r4, fp
 8028564:	9c01      	ldr	r4, [sp, #4]
 8028566:	9e02      	ldr	r6, [sp, #8]
 8028568:	9903      	ldr	r1, [sp, #12]
 802856a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 802856e:	1ba4      	subs	r4, r4, r6
 8028570:	9e01      	ldr	r6, [sp, #4]
 8028572:	8808      	ldrh	r0, [r1, #0]
 8028574:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8028578:	eba6 0608 	sub.w	r6, r6, r8
 802857c:	b2b6      	uxth	r6, r6
 802857e:	b2a4      	uxth	r4, r4
 8028580:	4373      	muls	r3, r6
 8028582:	fb0c 3304 	mla	r3, ip, r4, r3
 8028586:	9c02      	ldr	r4, [sp, #8]
 8028588:	fb04 3505 	mla	r5, r4, r5, r3
 802858c:	fb08 5707 	mla	r7, r8, r7, r5
 8028590:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8028594:	b289      	uxth	r1, r1
 8028596:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802859a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802859e:	434f      	muls	r7, r1
 80285a0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80285a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80285a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80285ac:	1c7b      	adds	r3, r7, #1
 80285ae:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80285b2:	ea42 0e0e 	orr.w	lr, r2, lr
 80285b6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80285ba:	fa1f f28e 	uxth.w	r2, lr
 80285be:	1203      	asrs	r3, r0, #8
 80285c0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80285c4:	b2ff      	uxtb	r7, r7
 80285c6:	1215      	asrs	r5, r2, #8
 80285c8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80285cc:	fb13 f307 	smulbb	r3, r3, r7
 80285d0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80285d4:	fb05 3501 	mla	r5, r5, r1, r3
 80285d8:	10c3      	asrs	r3, r0, #3
 80285da:	10d4      	asrs	r4, r2, #3
 80285dc:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80285e0:	fb13 f307 	smulbb	r3, r3, r7
 80285e4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80285e8:	fb04 3401 	mla	r4, r4, r1, r3
 80285ec:	00c3      	lsls	r3, r0, #3
 80285ee:	00d2      	lsls	r2, r2, #3
 80285f0:	b2db      	uxtb	r3, r3
 80285f2:	fb13 f307 	smulbb	r3, r3, r7
 80285f6:	b2d2      	uxtb	r2, r2
 80285f8:	fb02 3101 	mla	r1, r2, r1, r3
 80285fc:	b2ad      	uxth	r5, r5
 80285fe:	b289      	uxth	r1, r1
 8028600:	b2a4      	uxth	r4, r4
 8028602:	1c6b      	adds	r3, r5, #1
 8028604:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028608:	1c62      	adds	r2, r4, #1
 802860a:	1c4b      	adds	r3, r1, #1
 802860c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8028610:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8028614:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8028618:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802861c:	0964      	lsrs	r4, r4, #5
 802861e:	432b      	orrs	r3, r5
 8028620:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8028624:	9a03      	ldr	r2, [sp, #12]
 8028626:	4323      	orrs	r3, r4
 8028628:	8013      	strh	r3, [r2, #0]
 802862a:	b005      	add	sp, #20
 802862c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028630:	f04f 0c00 	mov.w	ip, #0
 8028634:	4664      	mov	r4, ip
 8028636:	e6d6      	b.n	80283e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8028638:	2300      	movs	r3, #0
 802863a:	469c      	mov	ip, r3
 802863c:	461a      	mov	r2, r3
 802863e:	461c      	mov	r4, r3
 8028640:	e6f8      	b.n	8028434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8028642:	2300      	movs	r3, #0
 8028644:	461a      	mov	r2, r3
 8028646:	e6f5      	b.n	8028434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8028648:	460b      	mov	r3, r1
 802864a:	460a      	mov	r2, r1
 802864c:	e6f2      	b.n	8028434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802864e:	2500      	movs	r5, #0
 8028650:	46ab      	mov	fp, r5
 8028652:	e720      	b.n	8028496 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8028654:	2700      	movs	r7, #0
 8028656:	463d      	mov	r5, r7
 8028658:	4638      	mov	r0, r7
 802865a:	46bb      	mov	fp, r7
 802865c:	e745      	b.n	80284ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802865e:	4677      	mov	r7, lr
 8028660:	4675      	mov	r5, lr
 8028662:	4670      	mov	r0, lr
 8028664:	46f3      	mov	fp, lr
 8028666:	e740      	b.n	80284ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8028668:	2700      	movs	r7, #0
 802866a:	4638      	mov	r0, r7
 802866c:	e73d      	b.n	80284ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802866e:	460f      	mov	r7, r1
 8028670:	4608      	mov	r0, r1
 8028672:	e73a      	b.n	80284ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08028674 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028678:	b097      	sub	sp, #92	@ 0x5c
 802867a:	9214      	str	r2, [sp, #80]	@ 0x50
 802867c:	9308      	str	r3, [sp, #32]
 802867e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8028680:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8028684:	9312      	str	r3, [sp, #72]	@ 0x48
 8028686:	9111      	str	r1, [sp, #68]	@ 0x44
 8028688:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 802868c:	9015      	str	r0, [sp, #84]	@ 0x54
 802868e:	6850      	ldr	r0, [r2, #4]
 8028690:	6812      	ldr	r2, [r2, #0]
 8028692:	fb00 1303 	mla	r3, r0, r3, r1
 8028696:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802869a:	9309      	str	r3, [sp, #36]	@ 0x24
 802869c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802869e:	681b      	ldr	r3, [r3, #0]
 80286a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80286a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80286a4:	685b      	ldr	r3, [r3, #4]
 80286a6:	930c      	str	r3, [sp, #48]	@ 0x30
 80286a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80286ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80286ae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80286b0:	2b00      	cmp	r3, #0
 80286b2:	dc03      	bgt.n	80286bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80286b4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80286b6:	2b00      	cmp	r3, #0
 80286b8:	f340 83cb 	ble.w	8028e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80286bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80286be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80286c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80286c6:	1e48      	subs	r0, r1, #1
 80286c8:	1e55      	subs	r5, r2, #1
 80286ca:	9b08      	ldr	r3, [sp, #32]
 80286cc:	2b00      	cmp	r3, #0
 80286ce:	f340 81a3 	ble.w	8028a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80286d2:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 80286d4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80286d6:	1436      	asrs	r6, r6, #16
 80286d8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80286dc:	d406      	bmi.n	80286ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80286de:	4286      	cmp	r6, r0
 80286e0:	da04      	bge.n	80286ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80286e2:	2b00      	cmp	r3, #0
 80286e4:	db02      	blt.n	80286ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80286e6:	42ab      	cmp	r3, r5
 80286e8:	f2c0 8197 	blt.w	8028a1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80286ec:	3601      	adds	r6, #1
 80286ee:	f100 8184 	bmi.w	80289fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80286f2:	42b1      	cmp	r1, r6
 80286f4:	f2c0 8181 	blt.w	80289fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80286f8:	3301      	adds	r3, #1
 80286fa:	f100 817e 	bmi.w	80289fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80286fe:	429a      	cmp	r2, r3
 8028700:	f2c0 817b 	blt.w	80289fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8028704:	9b08      	ldr	r3, [sp, #32]
 8028706:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8028708:	9313      	str	r3, [sp, #76]	@ 0x4c
 802870a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802870e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8028710:	2b00      	cmp	r3, #0
 8028712:	f340 81a4 	ble.w	8028a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8028716:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028718:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 802871a:	1418      	asrs	r0, r3, #16
 802871c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802871e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8028722:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028724:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8028728:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802872a:	142d      	asrs	r5, r5, #16
 802872c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8028730:	f100 81f8 	bmi.w	8028b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028734:	f102 3eff 	add.w	lr, r2, #4294967295
 8028738:	4575      	cmp	r5, lr
 802873a:	f280 81f3 	bge.w	8028b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802873e:	2800      	cmp	r0, #0
 8028740:	f2c0 81f0 	blt.w	8028b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028744:	f103 3eff 	add.w	lr, r3, #4294967295
 8028748:	4570      	cmp	r0, lr
 802874a:	f280 81eb 	bge.w	8028b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802874e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028750:	b212      	sxth	r2, r2
 8028752:	fb00 5002 	mla	r0, r0, r2, r5
 8028756:	fa1f fe81 	uxth.w	lr, r1
 802875a:	eb03 0a00 	add.w	sl, r3, r0
 802875e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8028762:	f813 9000 	ldrb.w	r9, [r3, r0]
 8028766:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802876a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 802876e:	b29b      	uxth	r3, r3
 8028770:	f1bc 0f00 	cmp.w	ip, #0
 8028774:	f000 81b9 	beq.w	8028aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8028778:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802877c:	940d      	str	r4, [sp, #52]	@ 0x34
 802877e:	eb0a 0b02 	add.w	fp, sl, r2
 8028782:	fa1f fa8c 	uxth.w	sl, ip
 8028786:	fb0a fe0e 	mul.w	lr, sl, lr
 802878a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802878e:	fa1f fa8a 	uxth.w	sl, sl
 8028792:	eba5 050e 	sub.w	r5, r5, lr
 8028796:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802879a:	940e      	str	r4, [sp, #56]	@ 0x38
 802879c:	eba3 030a 	sub.w	r3, r3, sl
 80287a0:	b2ad      	uxth	r5, r5
 80287a2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80287a4:	b29b      	uxth	r3, r3
 80287a6:	fb08 f505 	mul.w	r5, r8, r5
 80287aa:	fb09 5303 	mla	r3, r9, r3, r5
 80287ae:	fb0a 3304 	mla	r3, sl, r4, r3
 80287b2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80287b4:	fb0e 3304 	mla	r3, lr, r4, r3
 80287b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80287bc:	2b00      	cmp	r3, #0
 80287be:	f000 810f 	beq.w	80289e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80287c2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80287c4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80287c8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80287cc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80287d0:	f000 8190 	beq.w	8028af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80287d4:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80287d8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80287dc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80287e0:	fb09 f000 	mul.w	r0, r9, r0
 80287e4:	fb0a fe0e 	mul.w	lr, sl, lr
 80287e8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80287ec:	f100 0b20 	add.w	fp, r0, #32
 80287f0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80287f4:	44ce      	add	lr, r9
 80287f6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80287fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80287fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8028802:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8028806:	ea4e 0909 	orr.w	r9, lr, r9
 802880a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802880e:	8868      	ldrh	r0, [r5, #2]
 8028810:	d019      	beq.n	8028846 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8028812:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8028816:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802881a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802881e:	fb08 f800 	mul.w	r8, r8, r0
 8028822:	fb0a fe0e 	mul.w	lr, sl, lr
 8028826:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802882a:	f108 0b20 	add.w	fp, r8, #32
 802882e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8028832:	4486      	add	lr, r0
 8028834:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8028838:	0a00      	lsrs	r0, r0, #8
 802883a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802883e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028842:	ea4e 0000 	orr.w	r0, lr, r0
 8028846:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802884a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802884e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8028852:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028856:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802885a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802885e:	ea4e 0909 	orr.w	r9, lr, r9
 8028862:	ea4a 0000 	orr.w	r0, sl, r0
 8028866:	f1bc 0f00 	cmp.w	ip, #0
 802886a:	f000 8145 	beq.w	8028af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802886e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8028872:	3a01      	subs	r2, #1
 8028874:	0052      	lsls	r2, r2, #1
 8028876:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8028878:	3202      	adds	r2, #2
 802887a:	2cff      	cmp	r4, #255	@ 0xff
 802887c:	eb05 0e02 	add.w	lr, r5, r2
 8028880:	5aaa      	ldrh	r2, [r5, r2]
 8028882:	d018      	beq.n	80288b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8028884:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8028888:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802888c:	fb04 fa02 	mul.w	sl, r4, r2
 8028890:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028894:	fb08 f805 	mul.w	r8, r8, r5
 8028898:	f10a 0520 	add.w	r5, sl, #32
 802889c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80288a0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80288a4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80288a8:	4442      	add	r2, r8
 80288aa:	0a2d      	lsrs	r5, r5, #8
 80288ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80288b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80288b4:	432a      	orrs	r2, r5
 80288b6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80288b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80288bc:	2cff      	cmp	r4, #255	@ 0xff
 80288be:	d01a      	beq.n	80288f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80288c0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 80288c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80288c8:	fb04 fa05 	mul.w	sl, r4, r5
 80288cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80288d0:	fb08 f80e 	mul.w	r8, r8, lr
 80288d4:	f10a 0e20 	add.w	lr, sl, #32
 80288d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80288dc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80288e0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80288e4:	4445      	add	r5, r8
 80288e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80288ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80288ee:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80288f2:	ea45 050e 	orr.w	r5, r5, lr
 80288f6:	fb1c fe01 	smulbb	lr, ip, r1
 80288fa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80288fe:	f1cc 0810 	rsb	r8, ip, #16
 8028902:	eba8 0801 	sub.w	r8, r8, r1
 8028906:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802890a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802890e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8028912:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8028916:	4341      	muls	r1, r0
 8028918:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802891c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028920:	ea4a 0202 	orr.w	r2, sl, r2
 8028924:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8028928:	fb09 1108 	mla	r1, r9, r8, r1
 802892c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8028930:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8028934:	fb0c 1102 	mla	r1, ip, r2, r1
 8028938:	ea4b 0505 	orr.w	r5, fp, r5
 802893c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8028940:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8028944:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8028948:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802894c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8028950:	ea42 0e0e 	orr.w	lr, r2, lr
 8028954:	fa1f f28e 	uxth.w	r2, lr
 8028958:	2bff      	cmp	r3, #255	@ 0xff
 802895a:	d103      	bne.n	8028964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802895c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802895e:	29ff      	cmp	r1, #255	@ 0xff
 8028960:	f000 80de 	beq.w	8028b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8028964:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8028966:	8838      	ldrh	r0, [r7, #0]
 8028968:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802896a:	434b      	muls	r3, r1
 802896c:	f103 0c01 	add.w	ip, r3, #1
 8028970:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8028974:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8028978:	fa5f fc83 	uxtb.w	ip, r3
 802897c:	1203      	asrs	r3, r0, #8
 802897e:	1215      	asrs	r5, r2, #8
 8028980:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8028984:	fb13 f30c 	smulbb	r3, r3, ip
 8028988:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802898c:	fb05 3501 	mla	r5, r5, r1, r3
 8028990:	10c3      	asrs	r3, r0, #3
 8028992:	10d1      	asrs	r1, r2, #3
 8028994:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8028998:	fb13 f30c 	smulbb	r3, r3, ip
 802899c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80289a0:	fb01 3104 	mla	r1, r1, r4, r3
 80289a4:	00c3      	lsls	r3, r0, #3
 80289a6:	00d2      	lsls	r2, r2, #3
 80289a8:	b2db      	uxtb	r3, r3
 80289aa:	b2d2      	uxtb	r2, r2
 80289ac:	fb13 f30c 	smulbb	r3, r3, ip
 80289b0:	b2ad      	uxth	r5, r5
 80289b2:	fb02 3304 	mla	r3, r2, r4, r3
 80289b6:	b29a      	uxth	r2, r3
 80289b8:	1c6b      	adds	r3, r5, #1
 80289ba:	b289      	uxth	r1, r1
 80289bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80289c0:	1c53      	adds	r3, r2, #1
 80289c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80289c6:	1c4a      	adds	r2, r1, #1
 80289c8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80289cc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80289d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80289d4:	0949      	lsrs	r1, r1, #5
 80289d6:	432b      	orrs	r3, r5
 80289d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80289dc:	430b      	orrs	r3, r1
 80289de:	803b      	strh	r3, [r7, #0]
 80289e0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80289e2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80289e4:	4413      	add	r3, r2
 80289e6:	9321      	str	r3, [sp, #132]	@ 0x84
 80289e8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80289ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80289ec:	441a      	add	r2, r3
 80289ee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80289f0:	9222      	str	r2, [sp, #136]	@ 0x88
 80289f2:	3b01      	subs	r3, #1
 80289f4:	3702      	adds	r7, #2
 80289f6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80289f8:	e689      	b.n	802870e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80289fa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80289fc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80289fe:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8028a00:	4433      	add	r3, r6
 8028a02:	9321      	str	r3, [sp, #132]	@ 0x84
 8028a04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028a06:	441c      	add	r4, r3
 8028a08:	9b08      	ldr	r3, [sp, #32]
 8028a0a:	9422      	str	r4, [sp, #136]	@ 0x88
 8028a0c:	3b01      	subs	r3, #1
 8028a0e:	9308      	str	r3, [sp, #32]
 8028a10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028a12:	3302      	adds	r3, #2
 8028a14:	9309      	str	r3, [sp, #36]	@ 0x24
 8028a16:	e658      	b.n	80286ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8028a18:	d028      	beq.n	8028a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8028a1a:	9b08      	ldr	r3, [sp, #32]
 8028a1c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8028a1e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8028a20:	3b01      	subs	r3, #1
 8028a22:	fb00 5003 	mla	r0, r0, r3, r5
 8028a26:	1400      	asrs	r0, r0, #16
 8028a28:	f53f ae6c 	bmi.w	8028704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8028a2c:	3901      	subs	r1, #1
 8028a2e:	4288      	cmp	r0, r1
 8028a30:	f6bf ae68 	bge.w	8028704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8028a34:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8028a36:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8028a38:	fb01 0303 	mla	r3, r1, r3, r0
 8028a3c:	141b      	asrs	r3, r3, #16
 8028a3e:	f53f ae61 	bmi.w	8028704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8028a42:	3a01      	subs	r2, #1
 8028a44:	4293      	cmp	r3, r2
 8028a46:	f6bf ae5d 	bge.w	8028704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8028a4a:	9b08      	ldr	r3, [sp, #32]
 8028a4c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8028a50:	9313      	str	r3, [sp, #76]	@ 0x4c
 8028a52:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8028a56:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8028a58:	2b00      	cmp	r3, #0
 8028a5a:	f300 8082 	bgt.w	8028b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8028a5e:	9b08      	ldr	r3, [sp, #32]
 8028a60:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8028a64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028a66:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8028a6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8028a6c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8028a6e:	2b00      	cmp	r3, #0
 8028a70:	f340 81ef 	ble.w	8028e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8028a74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028a78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8028a7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028a80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028a82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028a86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028a8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028a8e:	eef0 6a62 	vmov.f32	s13, s5
 8028a92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028a96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028a9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028a9e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8028aa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028aa6:	eef0 6a43 	vmov.f32	s13, s6
 8028aaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028aae:	ee12 2a90 	vmov	r2, s5
 8028ab2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028ab6:	fb92 f3f3 	sdiv	r3, r2, r3
 8028aba:	ee13 2a10 	vmov	r2, s6
 8028abe:	9323      	str	r3, [sp, #140]	@ 0x8c
 8028ac0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028ac2:	fb92 f3f3 	sdiv	r3, r2, r3
 8028ac6:	9324      	str	r3, [sp, #144]	@ 0x90
 8028ac8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8028aca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8028acc:	3b01      	subs	r3, #1
 8028ace:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028ad2:	9311      	str	r3, [sp, #68]	@ 0x44
 8028ad4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028ad6:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8028ada:	bf08      	it	eq
 8028adc:	4613      	moveq	r3, r2
 8028ade:	9308      	str	r3, [sp, #32]
 8028ae0:	eeb0 3a67 	vmov.f32	s6, s15
 8028ae4:	eef0 2a47 	vmov.f32	s5, s14
 8028ae8:	e5e1      	b.n	80286ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028aea:	fb08 f505 	mul.w	r5, r8, r5
 8028aee:	fb09 5303 	mla	r3, r9, r3, r5
 8028af2:	e661      	b.n	80287b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8028af4:	4681      	mov	r9, r0
 8028af6:	e688      	b.n	802880a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8028af8:	f1c1 0210 	rsb	r2, r1, #16
 8028afc:	4341      	muls	r1, r0
 8028afe:	fb09 1902 	mla	r9, r9, r2, r1
 8028b02:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8028b06:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8028b0a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8028b0e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028b12:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028b16:	ea42 0909 	orr.w	r9, r2, r9
 8028b1a:	fa1f f289 	uxth.w	r2, r9
 8028b1e:	e71b      	b.n	8028958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8028b20:	803a      	strh	r2, [r7, #0]
 8028b22:	e75d      	b.n	80289e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028b24:	f115 0e01 	adds.w	lr, r5, #1
 8028b28:	f53f af5a 	bmi.w	80289e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028b2c:	4572      	cmp	r2, lr
 8028b2e:	f6ff af57 	blt.w	80289e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028b32:	f110 0e01 	adds.w	lr, r0, #1
 8028b36:	f53f af53 	bmi.w	80289e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028b3a:	4573      	cmp	r3, lr
 8028b3c:	f6ff af50 	blt.w	80289e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028b40:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8028b42:	9502      	str	r5, [sp, #8]
 8028b44:	b21b      	sxth	r3, r3
 8028b46:	b212      	sxth	r2, r2
 8028b48:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8028b4c:	9301      	str	r3, [sp, #4]
 8028b4e:	9200      	str	r2, [sp, #0]
 8028b50:	e9cd c405 	strd	ip, r4, [sp, #20]
 8028b54:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8028b58:	4639      	mov	r1, r7
 8028b5a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8028b5c:	f7ff fc04 	bl	8028368 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8028b60:	e73e      	b.n	80289e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8028b62:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028b64:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8028b68:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028b6a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8028b6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8028b70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028b74:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8028b76:	141f      	asrs	r7, r3, #16
 8028b78:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028b7a:	141b      	asrs	r3, r3, #16
 8028b7c:	fb01 3707 	mla	r7, r1, r7, r3
 8028b80:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028b82:	fa1f fc82 	uxth.w	ip, r2
 8028b86:	eb03 0a07 	add.w	sl, r3, r7
 8028b8a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8028b8e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8028b92:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8028b96:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8028b9a:	b29b      	uxth	r3, r3
 8028b9c:	2d00      	cmp	r5, #0
 8028b9e:	f000 813d 	beq.w	8028e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8028ba2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8028ba6:	940f      	str	r4, [sp, #60]	@ 0x3c
 8028ba8:	eb0a 0b01 	add.w	fp, sl, r1
 8028bac:	fa1f fa85 	uxth.w	sl, r5
 8028bb0:	fb0a fc0c 	mul.w	ip, sl, ip
 8028bb4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8028bb8:	fa1f fa8a 	uxth.w	sl, sl
 8028bbc:	eba0 000c 	sub.w	r0, r0, ip
 8028bc0:	eba3 030a 	sub.w	r3, r3, sl
 8028bc4:	b280      	uxth	r0, r0
 8028bc6:	fb08 f000 	mul.w	r0, r8, r0
 8028bca:	b29b      	uxth	r3, r3
 8028bcc:	fb09 0303 	mla	r3, r9, r3, r0
 8028bd0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8028bd2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8028bd6:	9410      	str	r4, [sp, #64]	@ 0x40
 8028bd8:	fb0a 3300 	mla	r3, sl, r0, r3
 8028bdc:	fb0c 3304 	mla	r3, ip, r4, r3
 8028be0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028be4:	2b00      	cmp	r3, #0
 8028be6:	f000 810b 	beq.w	8028e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8028bea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8028bec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8028bee:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8028bf2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8028bf6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8028bfa:	f000 8114 	beq.w	8028e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8028bfe:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8028c02:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8028c06:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028c0a:	fb09 f707 	mul.w	r7, r9, r7
 8028c0e:	fb0a fc0c 	mul.w	ip, sl, ip
 8028c12:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8028c16:	f107 0b20 	add.w	fp, r7, #32
 8028c1a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8028c1e:	44cc      	add	ip, r9
 8028c20:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8028c24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028c28:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8028c2c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8028c30:	ea4c 0909 	orr.w	r9, ip, r9
 8028c34:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8028c38:	8847      	ldrh	r7, [r0, #2]
 8028c3a:	d019      	beq.n	8028c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8028c3c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8028c40:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8028c44:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028c48:	fb08 f807 	mul.w	r8, r8, r7
 8028c4c:	fb0a fc0c 	mul.w	ip, sl, ip
 8028c50:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8028c54:	f108 0b20 	add.w	fp, r8, #32
 8028c58:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8028c5c:	44bc      	add	ip, r7
 8028c5e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8028c62:	0a3f      	lsrs	r7, r7, #8
 8028c64:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8028c68:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028c6c:	ea4c 0707 	orr.w	r7, ip, r7
 8028c70:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8028c74:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8028c78:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8028c7c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8028c80:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028c84:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8028c88:	ea4c 0909 	orr.w	r9, ip, r9
 8028c8c:	ea4a 0707 	orr.w	r7, sl, r7
 8028c90:	2d00      	cmp	r5, #0
 8028c92:	f000 80ca 	beq.w	8028e2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8028c96:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8028c9a:	3901      	subs	r1, #1
 8028c9c:	0049      	lsls	r1, r1, #1
 8028c9e:	3102      	adds	r1, #2
 8028ca0:	eb00 0c01 	add.w	ip, r0, r1
 8028ca4:	5a41      	ldrh	r1, [r0, r1]
 8028ca6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8028ca8:	28ff      	cmp	r0, #255	@ 0xff
 8028caa:	d019      	beq.n	8028ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8028cac:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8028cae:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8028cb2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8028cb6:	fb04 fa01 	mul.w	sl, r4, r1
 8028cba:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028cbe:	fb08 f800 	mul.w	r8, r8, r0
 8028cc2:	f10a 0020 	add.w	r0, sl, #32
 8028cc6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8028cca:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8028cce:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028cd2:	4441      	add	r1, r8
 8028cd4:	0a00      	lsrs	r0, r0, #8
 8028cd6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8028cda:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028cde:	4301      	orrs	r1, r0
 8028ce0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8028ce2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8028ce6:	2cff      	cmp	r4, #255	@ 0xff
 8028ce8:	d01a      	beq.n	8028d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8028cea:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8028cee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028cf2:	fb04 fa00 	mul.w	sl, r4, r0
 8028cf6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8028cfa:	fb08 f80c 	mul.w	r8, r8, ip
 8028cfe:	f10a 0c20 	add.w	ip, sl, #32
 8028d02:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8028d06:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8028d0a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028d0e:	4440      	add	r0, r8
 8028d10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028d14:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8028d18:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8028d1c:	ea40 000c 	orr.w	r0, r0, ip
 8028d20:	fb15 fc02 	smulbb	ip, r5, r2
 8028d24:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8028d28:	f1c5 0810 	rsb	r8, r5, #16
 8028d2c:	eba8 0802 	sub.w	r8, r8, r2
 8028d30:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8028d34:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8028d38:	437a      	muls	r2, r7
 8028d3a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8028d3e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8028d42:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028d46:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8028d4a:	fb09 2208 	mla	r2, r9, r8, r2
 8028d4e:	ea4a 0101 	orr.w	r1, sl, r1
 8028d52:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8028d56:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8028d5a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8028d5e:	fb05 2201 	mla	r2, r5, r1, r2
 8028d62:	ea4b 0000 	orr.w	r0, fp, r0
 8028d66:	fb0c 2200 	mla	r2, ip, r0, r2
 8028d6a:	0d57      	lsrs	r7, r2, #21
 8028d6c:	0952      	lsrs	r2, r2, #5
 8028d6e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028d72:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028d76:	433a      	orrs	r2, r7
 8028d78:	2bff      	cmp	r3, #255	@ 0xff
 8028d7a:	b292      	uxth	r2, r2
 8028d7c:	d102      	bne.n	8028d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8028d7e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8028d80:	29ff      	cmp	r1, #255	@ 0xff
 8028d82:	d063      	beq.n	8028e4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8028d84:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8028d86:	f8be 1000 	ldrh.w	r1, [lr]
 8028d8a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8028d8c:	4343      	muls	r3, r0
 8028d8e:	1c58      	adds	r0, r3, #1
 8028d90:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8028d94:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8028d98:	1208      	asrs	r0, r1, #8
 8028d9a:	b2db      	uxtb	r3, r3
 8028d9c:	1215      	asrs	r5, r2, #8
 8028d9e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8028da2:	fb10 f003 	smulbb	r0, r0, r3
 8028da6:	10cf      	asrs	r7, r1, #3
 8028da8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8028dac:	00c9      	lsls	r1, r1, #3
 8028dae:	fb05 0504 	mla	r5, r5, r4, r0
 8028db2:	b2c9      	uxtb	r1, r1
 8028db4:	10d0      	asrs	r0, r2, #3
 8028db6:	00d2      	lsls	r2, r2, #3
 8028db8:	fb11 f103 	smulbb	r1, r1, r3
 8028dbc:	b2d2      	uxtb	r2, r2
 8028dbe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8028dc2:	fb02 1204 	mla	r2, r2, r4, r1
 8028dc6:	fb17 f703 	smulbb	r7, r7, r3
 8028dca:	b2ad      	uxth	r5, r5
 8028dcc:	b292      	uxth	r2, r2
 8028dce:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8028dd2:	fb00 7004 	mla	r0, r0, r4, r7
 8028dd6:	1c6b      	adds	r3, r5, #1
 8028dd8:	1c57      	adds	r7, r2, #1
 8028dda:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028dde:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8028de2:	b280      	uxth	r0, r0
 8028de4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8028de8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8028dec:	433d      	orrs	r5, r7
 8028dee:	1c47      	adds	r7, r0, #1
 8028df0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8028df4:	097f      	lsrs	r7, r7, #5
 8028df6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8028dfa:	433d      	orrs	r5, r7
 8028dfc:	f8ae 5000 	strh.w	r5, [lr]
 8028e00:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8028e02:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8028e04:	4413      	add	r3, r2
 8028e06:	9321      	str	r3, [sp, #132]	@ 0x84
 8028e08:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8028e0a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028e0c:	441a      	add	r2, r3
 8028e0e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8028e10:	9222      	str	r2, [sp, #136]	@ 0x88
 8028e12:	3b01      	subs	r3, #1
 8028e14:	f10e 0e02 	add.w	lr, lr, #2
 8028e18:	9313      	str	r3, [sp, #76]	@ 0x4c
 8028e1a:	e61c      	b.n	8028a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8028e1c:	fb08 f000 	mul.w	r0, r8, r0
 8028e20:	fb09 0303 	mla	r3, r9, r3, r0
 8028e24:	e6dc      	b.n	8028be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8028e26:	46b9      	mov	r9, r7
 8028e28:	e704      	b.n	8028c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8028e2a:	f1c2 0110 	rsb	r1, r2, #16
 8028e2e:	437a      	muls	r2, r7
 8028e30:	fb09 2901 	mla	r9, r9, r1, r2
 8028e34:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8028e38:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8028e3c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8028e40:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028e44:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8028e48:	4302      	orrs	r2, r0
 8028e4a:	e795      	b.n	8028d78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8028e4c:	f8ae 2000 	strh.w	r2, [lr]
 8028e50:	e7d6      	b.n	8028e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8028e52:	b017      	add	sp, #92	@ 0x5c
 8028e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028e58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8028e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028e5c:	b085      	sub	sp, #20
 8028e5e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8028e62:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8028e66:	9103      	str	r1, [sp, #12]
 8028e68:	fb00 7406 	mla	r4, r0, r6, r7
 8028e6c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8028e70:	2800      	cmp	r0, #0
 8028e72:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8028e76:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8028e7a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8028e7e:	9501      	str	r5, [sp, #4]
 8028e80:	eb02 0904 	add.w	r9, r2, r4
 8028e84:	f2c0 8141 	blt.w	802910a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8028e88:	4583      	cmp	fp, r0
 8028e8a:	f340 813e 	ble.w	802910a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8028e8e:	2f00      	cmp	r7, #0
 8028e90:	f2c0 8137 	blt.w	8029102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8028e94:	42be      	cmp	r6, r7
 8028e96:	f340 8134 	ble.w	8029102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8028e9a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8028e9e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8028ea2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028ea6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8028eaa:	4355      	muls	r5, r2
 8028eac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8028eb0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8028eb4:	fb0c f203 	mul.w	r2, ip, r3
 8028eb8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8028ebc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8028ec0:	441d      	add	r5, r3
 8028ec2:	f102 0320 	add.w	r3, r2, #32
 8028ec6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028eca:	0a1b      	lsrs	r3, r3, #8
 8028ecc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8028ed0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8028ed4:	431c      	orrs	r4, r3
 8028ed6:	1c7b      	adds	r3, r7, #1
 8028ed8:	f100 811c 	bmi.w	8029114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8028edc:	429e      	cmp	r6, r3
 8028ede:	f340 8119 	ble.w	8029114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8028ee2:	2900      	cmp	r1, #0
 8028ee4:	f000 8119 	beq.w	802911a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8028ee8:	9a01      	ldr	r2, [sp, #4]
 8028eea:	f899 3001 	ldrb.w	r3, [r9, #1]
 8028eee:	8855      	ldrh	r5, [r2, #2]
 8028ef0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8028ef4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8028ef8:	fb08 f802 	mul.w	r8, r8, r2
 8028efc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028f00:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8028f04:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8028f08:	435d      	muls	r5, r3
 8028f0a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8028f0e:	44d0      	add	r8, sl
 8028f10:	f105 0a20 	add.w	sl, r5, #32
 8028f14:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8028f18:	0a2d      	lsrs	r5, r5, #8
 8028f1a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8028f1e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028f22:	432a      	orrs	r2, r5
 8028f24:	3001      	adds	r0, #1
 8028f26:	f100 80fe 	bmi.w	8029126 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8028f2a:	4583      	cmp	fp, r0
 8028f2c:	f340 80fb 	ble.w	8029126 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8028f30:	f1be 0f00 	cmp.w	lr, #0
 8028f34:	f000 80fc 	beq.w	8029130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8028f38:	2f00      	cmp	r7, #0
 8028f3a:	f2c0 80f1 	blt.w	8029120 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8028f3e:	42be      	cmp	r6, r7
 8028f40:	f340 80ee 	ble.w	8029120 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8028f44:	9801      	ldr	r0, [sp, #4]
 8028f46:	f819 5006 	ldrb.w	r5, [r9, r6]
 8028f4a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8028f4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8028f52:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8028f56:	fb0a fa00 	mul.w	sl, sl, r0
 8028f5a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8028f5e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8028f62:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8028f66:	fb05 f808 	mul.w	r8, r5, r8
 8028f6a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8028f6e:	4482      	add	sl, r0
 8028f70:	f108 0020 	add.w	r0, r8, #32
 8028f74:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028f78:	0a00      	lsrs	r0, r0, #8
 8028f7a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8028f7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028f82:	ea4b 0b00 	orr.w	fp, fp, r0
 8028f86:	3701      	adds	r7, #1
 8028f88:	f100 80d7 	bmi.w	802913a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8028f8c:	42be      	cmp	r6, r7
 8028f8e:	f340 80d4 	ble.w	802913a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8028f92:	2900      	cmp	r1, #0
 8028f94:	f000 80d4 	beq.w	8029140 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8028f98:	3601      	adds	r6, #1
 8028f9a:	9801      	ldr	r0, [sp, #4]
 8028f9c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8028fa0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8028fa4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8028fa8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8028fac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028fb0:	fb09 f906 	mul.w	r9, r9, r6
 8028fb4:	fb07 f800 	mul.w	r8, r7, r0
 8028fb8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8028fbc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8028fc0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8028fc4:	44d1      	add	r9, sl
 8028fc6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8028fca:	f108 0020 	add.w	r0, r8, #32
 8028fce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028fd2:	0a00      	lsrs	r0, r0, #8
 8028fd4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028fd8:	4330      	orrs	r0, r6
 8028fda:	b28e      	uxth	r6, r1
 8028fdc:	fa1f f98e 	uxth.w	r9, lr
 8028fe0:	fb06 f809 	mul.w	r8, r6, r9
 8028fe4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8028fe8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8028fec:	0136      	lsls	r6, r6, #4
 8028fee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8028ff2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8028ff6:	9601      	str	r6, [sp, #4]
 8028ff8:	ea4a 0404 	orr.w	r4, sl, r4
 8028ffc:	fa1f f689 	uxth.w	r6, r9
 8029000:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8029004:	fb11 f90e 	smulbb	r9, r1, lr
 8029008:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802900c:	9602      	str	r6, [sp, #8]
 802900e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029012:	4626      	mov	r6, r4
 8029014:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029018:	f1ce 0410 	rsb	r4, lr, #16
 802901c:	1a64      	subs	r4, r4, r1
 802901e:	ea4a 0202 	orr.w	r2, sl, r2
 8029022:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8029026:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802902a:	434a      	muls	r2, r1
 802902c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029030:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029034:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029038:	fb04 2406 	mla	r4, r4, r6, r2
 802903c:	ea4a 0000 	orr.w	r0, sl, r0
 8029040:	fb09 4200 	mla	r2, r9, r0, r4
 8029044:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8029048:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802904c:	9801      	ldr	r0, [sp, #4]
 802904e:	9903      	ldr	r1, [sp, #12]
 8029050:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8029054:	ea44 0b0b 	orr.w	fp, r4, fp
 8029058:	9c02      	ldr	r4, [sp, #8]
 802905a:	8809      	ldrh	r1, [r1, #0]
 802905c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8029060:	1b00      	subs	r0, r0, r4
 8029062:	9c01      	ldr	r4, [sp, #4]
 8029064:	eba4 0608 	sub.w	r6, r4, r8
 8029068:	b2b6      	uxth	r6, r6
 802906a:	b280      	uxth	r0, r0
 802906c:	4373      	muls	r3, r6
 802906e:	fb0c 3300 	mla	r3, ip, r0, r3
 8029072:	9802      	ldr	r0, [sp, #8]
 8029074:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8029078:	fb00 3505 	mla	r5, r0, r5, r3
 802907c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8029080:	fb08 5707 	mla	r7, r8, r7, r5
 8029084:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8029088:	120b      	asrs	r3, r1, #8
 802908a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802908e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8029092:	b2ff      	uxtb	r7, r7
 8029094:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029098:	10c8      	asrs	r0, r1, #3
 802909a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802909e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80290a2:	00c9      	lsls	r1, r1, #3
 80290a4:	437b      	muls	r3, r7
 80290a6:	ea42 0e0e 	orr.w	lr, r2, lr
 80290aa:	b2c9      	uxtb	r1, r1
 80290ac:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80290b0:	fa1f f28e 	uxth.w	r2, lr
 80290b4:	4378      	muls	r0, r7
 80290b6:	434f      	muls	r7, r1
 80290b8:	1c59      	adds	r1, r3, #1
 80290ba:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80290be:	1213      	asrs	r3, r2, #8
 80290c0:	f023 0307 	bic.w	r3, r3, #7
 80290c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80290c8:	1c41      	adds	r1, r0, #1
 80290ca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80290ce:	10d1      	asrs	r1, r2, #3
 80290d0:	f021 0103 	bic.w	r1, r1, #3
 80290d4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80290d8:	021b      	lsls	r3, r3, #8
 80290da:	00c9      	lsls	r1, r1, #3
 80290dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80290e0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80290e4:	430b      	orrs	r3, r1
 80290e6:	1c79      	adds	r1, r7, #1
 80290e8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80290ec:	00d2      	lsls	r2, r2, #3
 80290ee:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80290f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80290f6:	431a      	orrs	r2, r3
 80290f8:	9b03      	ldr	r3, [sp, #12]
 80290fa:	801a      	strh	r2, [r3, #0]
 80290fc:	b005      	add	sp, #20
 80290fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029102:	f04f 0c00 	mov.w	ip, #0
 8029106:	4664      	mov	r4, ip
 8029108:	e6e5      	b.n	8028ed6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802910a:	2300      	movs	r3, #0
 802910c:	469c      	mov	ip, r3
 802910e:	461a      	mov	r2, r3
 8029110:	461c      	mov	r4, r3
 8029112:	e707      	b.n	8028f24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8029114:	2300      	movs	r3, #0
 8029116:	461a      	mov	r2, r3
 8029118:	e704      	b.n	8028f24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802911a:	460b      	mov	r3, r1
 802911c:	460a      	mov	r2, r1
 802911e:	e701      	b.n	8028f24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8029120:	2500      	movs	r5, #0
 8029122:	46ab      	mov	fp, r5
 8029124:	e72f      	b.n	8028f86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8029126:	2700      	movs	r7, #0
 8029128:	463d      	mov	r5, r7
 802912a:	4638      	mov	r0, r7
 802912c:	46bb      	mov	fp, r7
 802912e:	e754      	b.n	8028fda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8029130:	4677      	mov	r7, lr
 8029132:	4675      	mov	r5, lr
 8029134:	4670      	mov	r0, lr
 8029136:	46f3      	mov	fp, lr
 8029138:	e74f      	b.n	8028fda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802913a:	2700      	movs	r7, #0
 802913c:	4638      	mov	r0, r7
 802913e:	e74c      	b.n	8028fda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8029140:	460f      	mov	r7, r1
 8029142:	4608      	mov	r0, r1
 8029144:	e749      	b.n	8028fda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08029148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802914c:	b093      	sub	sp, #76	@ 0x4c
 802914e:	9210      	str	r2, [sp, #64]	@ 0x40
 8029150:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8029152:	910e      	str	r1, [sp, #56]	@ 0x38
 8029154:	9306      	str	r3, [sp, #24]
 8029156:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802915a:	9011      	str	r0, [sp, #68]	@ 0x44
 802915c:	6850      	ldr	r0, [r2, #4]
 802915e:	6812      	ldr	r2, [r2, #0]
 8029160:	fb00 1303 	mla	r3, r0, r3, r1
 8029164:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8029168:	9307      	str	r3, [sp, #28]
 802916a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802916c:	681b      	ldr	r3, [r3, #0]
 802916e:	9308      	str	r3, [sp, #32]
 8029170:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029172:	685b      	ldr	r3, [r3, #4]
 8029174:	9309      	str	r3, [sp, #36]	@ 0x24
 8029176:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8029178:	2b00      	cmp	r3, #0
 802917a:	dc03      	bgt.n	8029184 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802917c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802917e:	2b00      	cmp	r3, #0
 8029180:	f340 83b4 	ble.w	80298ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8029184:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029186:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802918a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802918e:	1e48      	subs	r0, r1, #1
 8029190:	1e55      	subs	r5, r2, #1
 8029192:	9b06      	ldr	r3, [sp, #24]
 8029194:	2b00      	cmp	r3, #0
 8029196:	f340 8163 	ble.w	8029460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802919a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 802919c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802919e:	1436      	asrs	r6, r6, #16
 80291a0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80291a4:	d406      	bmi.n	80291b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80291a6:	4286      	cmp	r6, r0
 80291a8:	da04      	bge.n	80291b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80291aa:	2b00      	cmp	r3, #0
 80291ac:	db02      	blt.n	80291b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80291ae:	42ab      	cmp	r3, r5
 80291b0:	f2c0 8157 	blt.w	8029462 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80291b4:	3601      	adds	r6, #1
 80291b6:	f100 8144 	bmi.w	8029442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80291ba:	42b1      	cmp	r1, r6
 80291bc:	f2c0 8141 	blt.w	8029442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80291c0:	3301      	adds	r3, #1
 80291c2:	f100 813e 	bmi.w	8029442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80291c6:	429a      	cmp	r2, r3
 80291c8:	f2c0 813b 	blt.w	8029442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80291cc:	9b06      	ldr	r3, [sp, #24]
 80291ce:	9f07      	ldr	r7, [sp, #28]
 80291d0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80291d2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80291d6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80291d8:	2b00      	cmp	r3, #0
 80291da:	f340 8164 	ble.w	80294a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80291de:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80291e0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80291e2:	1418      	asrs	r0, r3, #16
 80291e4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80291e6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80291ea:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80291ec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80291f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80291f2:	142d      	asrs	r5, r5, #16
 80291f4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80291f8:	f100 81ee 	bmi.w	80295d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80291fc:	f102 3eff 	add.w	lr, r2, #4294967295
 8029200:	4575      	cmp	r5, lr
 8029202:	f280 81e9 	bge.w	80295d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8029206:	2800      	cmp	r0, #0
 8029208:	f2c0 81e6 	blt.w	80295d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802920c:	f103 3eff 	add.w	lr, r3, #4294967295
 8029210:	4570      	cmp	r0, lr
 8029212:	f280 81e1 	bge.w	80295d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8029216:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029218:	b212      	sxth	r2, r2
 802921a:	fb00 5002 	mla	r0, r0, r2, r5
 802921e:	fa1f fe81 	uxth.w	lr, r1
 8029222:	eb03 0a00 	add.w	sl, r3, r0
 8029226:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802922a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802922e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8029232:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8029236:	b29b      	uxth	r3, r3
 8029238:	f1bc 0f00 	cmp.w	ip, #0
 802923c:	f000 8179 	beq.w	8029532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8029240:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8029244:	940a      	str	r4, [sp, #40]	@ 0x28
 8029246:	eb0a 0b02 	add.w	fp, sl, r2
 802924a:	fa1f fa8c 	uxth.w	sl, ip
 802924e:	fb0a fe0e 	mul.w	lr, sl, lr
 8029252:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8029256:	fa1f fa8a 	uxth.w	sl, sl
 802925a:	eba5 050e 	sub.w	r5, r5, lr
 802925e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8029262:	940b      	str	r4, [sp, #44]	@ 0x2c
 8029264:	eba3 030a 	sub.w	r3, r3, sl
 8029268:	b2ad      	uxth	r5, r5
 802926a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802926c:	b29b      	uxth	r3, r3
 802926e:	fb08 f505 	mul.w	r5, r8, r5
 8029272:	fb09 5303 	mla	r3, r9, r3, r5
 8029276:	fb0a 3304 	mla	r3, sl, r4, r3
 802927a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802927c:	fb0e 3304 	mla	r3, lr, r4, r3
 8029280:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029284:	2b00      	cmp	r3, #0
 8029286:	f000 80cf 	beq.w	8029428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802928a:	9c08      	ldr	r4, [sp, #32]
 802928c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8029290:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8029294:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8029298:	f000 8150 	beq.w	802953c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802929c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80292a0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80292a4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80292a8:	fb09 f000 	mul.w	r0, r9, r0
 80292ac:	fb0a fe0e 	mul.w	lr, sl, lr
 80292b0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80292b4:	f100 0b20 	add.w	fp, r0, #32
 80292b8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80292bc:	44ce      	add	lr, r9
 80292be:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80292c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80292c6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80292ca:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80292ce:	ea4e 0909 	orr.w	r9, lr, r9
 80292d2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80292d6:	8868      	ldrh	r0, [r5, #2]
 80292d8:	d019      	beq.n	802930e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80292da:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80292de:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80292e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80292e6:	fb08 f800 	mul.w	r8, r8, r0
 80292ea:	fb0a fe0e 	mul.w	lr, sl, lr
 80292ee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80292f2:	f108 0b20 	add.w	fp, r8, #32
 80292f6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80292fa:	4486      	add	lr, r0
 80292fc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8029300:	0a00      	lsrs	r0, r0, #8
 8029302:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8029306:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802930a:	ea4e 0000 	orr.w	r0, lr, r0
 802930e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8029312:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8029316:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802931a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802931e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029322:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029326:	ea4e 0909 	orr.w	r9, lr, r9
 802932a:	ea4a 0000 	orr.w	r0, sl, r0
 802932e:	f1bc 0f00 	cmp.w	ip, #0
 8029332:	f000 8105 	beq.w	8029540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8029336:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 802933a:	3a01      	subs	r2, #1
 802933c:	0052      	lsls	r2, r2, #1
 802933e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8029340:	3202      	adds	r2, #2
 8029342:	2cff      	cmp	r4, #255	@ 0xff
 8029344:	eb05 0e02 	add.w	lr, r5, r2
 8029348:	5aaa      	ldrh	r2, [r5, r2]
 802934a:	d018      	beq.n	802937e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802934c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8029350:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029354:	fb04 fa02 	mul.w	sl, r4, r2
 8029358:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802935c:	fb08 f805 	mul.w	r8, r8, r5
 8029360:	f10a 0520 	add.w	r5, sl, #32
 8029364:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8029368:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802936c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8029370:	4442      	add	r2, r8
 8029372:	0a2d      	lsrs	r5, r5, #8
 8029374:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8029378:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802937c:	432a      	orrs	r2, r5
 802937e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8029380:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8029384:	2cff      	cmp	r4, #255	@ 0xff
 8029386:	d01a      	beq.n	80293be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8029388:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 802938c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8029390:	fb04 fa05 	mul.w	sl, r4, r5
 8029394:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8029398:	fb08 f80e 	mul.w	r8, r8, lr
 802939c:	f10a 0e20 	add.w	lr, sl, #32
 80293a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80293a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80293a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80293ac:	4445      	add	r5, r8
 80293ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80293b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80293b6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80293ba:	ea45 050e 	orr.w	r5, r5, lr
 80293be:	fb1c fe01 	smulbb	lr, ip, r1
 80293c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80293c6:	f1cc 0810 	rsb	r8, ip, #16
 80293ca:	eba8 0801 	sub.w	r8, r8, r1
 80293ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80293d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80293d6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80293da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80293de:	4341      	muls	r1, r0
 80293e0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80293e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80293e8:	ea4a 0202 	orr.w	r2, sl, r2
 80293ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80293f0:	fb09 1108 	mla	r1, r9, r8, r1
 80293f4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80293f8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80293fc:	fb0c 1102 	mla	r1, ip, r2, r1
 8029400:	ea4b 0505 	orr.w	r5, fp, r5
 8029404:	fb0e 1e05 	mla	lr, lr, r5, r1
 8029408:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802940c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8029410:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029414:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8029418:	ea42 0e0e 	orr.w	lr, r2, lr
 802941c:	fa1f f28e 	uxth.w	r2, lr
 8029420:	2bff      	cmp	r3, #255	@ 0xff
 8029422:	f040 80a1 	bne.w	8029568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8029426:	803a      	strh	r2, [r7, #0]
 8029428:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802942a:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 802942c:	4413      	add	r3, r2
 802942e:	931d      	str	r3, [sp, #116]	@ 0x74
 8029430:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8029432:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029434:	441a      	add	r2, r3
 8029436:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8029438:	921e      	str	r2, [sp, #120]	@ 0x78
 802943a:	3b01      	subs	r3, #1
 802943c:	3702      	adds	r7, #2
 802943e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029440:	e6c9      	b.n	80291d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8029442:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8029444:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8029446:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8029448:	4433      	add	r3, r6
 802944a:	931d      	str	r3, [sp, #116]	@ 0x74
 802944c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802944e:	441c      	add	r4, r3
 8029450:	9b06      	ldr	r3, [sp, #24]
 8029452:	941e      	str	r4, [sp, #120]	@ 0x78
 8029454:	3b01      	subs	r3, #1
 8029456:	9306      	str	r3, [sp, #24]
 8029458:	9b07      	ldr	r3, [sp, #28]
 802945a:	3302      	adds	r3, #2
 802945c:	9307      	str	r3, [sp, #28]
 802945e:	e698      	b.n	8029192 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8029460:	d028      	beq.n	80294b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029462:	9b06      	ldr	r3, [sp, #24]
 8029464:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8029466:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8029468:	3b01      	subs	r3, #1
 802946a:	fb00 5003 	mla	r0, r0, r3, r5
 802946e:	1400      	asrs	r0, r0, #16
 8029470:	f53f aeac 	bmi.w	80291cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8029474:	3901      	subs	r1, #1
 8029476:	4288      	cmp	r0, r1
 8029478:	f6bf aea8 	bge.w	80291cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802947c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802947e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8029480:	fb01 0303 	mla	r3, r1, r3, r0
 8029484:	141b      	asrs	r3, r3, #16
 8029486:	f53f aea1 	bmi.w	80291cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802948a:	3a01      	subs	r2, #1
 802948c:	4293      	cmp	r3, r2
 802948e:	f6bf ae9d 	bge.w	80291cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8029492:	9b06      	ldr	r3, [sp, #24]
 8029494:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8029498:	930f      	str	r3, [sp, #60]	@ 0x3c
 802949a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802949e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80294a0:	2b00      	cmp	r3, #0
 80294a2:	f300 80b6 	bgt.w	8029612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80294a6:	9b06      	ldr	r3, [sp, #24]
 80294a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80294ac:	9b07      	ldr	r3, [sp, #28]
 80294ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80294b2:	9307      	str	r3, [sp, #28]
 80294b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80294b6:	2b00      	cmp	r3, #0
 80294b8:	f340 8218 	ble.w	80298ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80294bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80294c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80294c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80294c8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80294ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80294ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80294d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80294d6:	eef0 6a62 	vmov.f32	s13, s5
 80294da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80294de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80294e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80294e6:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 80294ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80294ee:	eef0 6a43 	vmov.f32	s13, s6
 80294f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80294f6:	ee12 2a90 	vmov	r2, s5
 80294fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80294fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8029502:	ee13 2a10 	vmov	r2, s6
 8029506:	931f      	str	r3, [sp, #124]	@ 0x7c
 8029508:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802950a:	fb92 f3f3 	sdiv	r3, r2, r3
 802950e:	9320      	str	r3, [sp, #128]	@ 0x80
 8029510:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8029512:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029514:	3b01      	subs	r3, #1
 8029516:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802951a:	930e      	str	r3, [sp, #56]	@ 0x38
 802951c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802951e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8029522:	bf08      	it	eq
 8029524:	4613      	moveq	r3, r2
 8029526:	9306      	str	r3, [sp, #24]
 8029528:	eeb0 3a67 	vmov.f32	s6, s15
 802952c:	eef0 2a47 	vmov.f32	s5, s14
 8029530:	e621      	b.n	8029176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8029532:	fb08 f505 	mul.w	r5, r8, r5
 8029536:	fb09 5303 	mla	r3, r9, r3, r5
 802953a:	e6a1      	b.n	8029280 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802953c:	4681      	mov	r9, r0
 802953e:	e6c8      	b.n	80292d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8029540:	f1c1 0210 	rsb	r2, r1, #16
 8029544:	4341      	muls	r1, r0
 8029546:	fb09 1902 	mla	r9, r9, r2, r1
 802954a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802954e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8029552:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8029556:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802955a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802955e:	ea42 0909 	orr.w	r9, r2, r9
 8029562:	fa1f f289 	uxth.w	r2, r9
 8029566:	e75b      	b.n	8029420 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029568:	f8b7 c000 	ldrh.w	ip, [r7]
 802956c:	43db      	mvns	r3, r3
 802956e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8029572:	fa5f fe83 	uxtb.w	lr, r3
 8029576:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802957a:	fb00 f00e 	mul.w	r0, r0, lr
 802957e:	1c41      	adds	r1, r0, #1
 8029580:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8029584:	1211      	asrs	r1, r2, #8
 8029586:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802958a:	f021 0107 	bic.w	r1, r1, #7
 802958e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029592:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8029596:	48d7      	ldr	r0, [pc, #860]	@ (80298f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8029598:	fb05 f50e 	mul.w	r5, r5, lr
 802959c:	b2c9      	uxtb	r1, r1
 802959e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80295a2:	1c69      	adds	r1, r5, #1
 80295a4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80295a8:	10d1      	asrs	r1, r2, #3
 80295aa:	f021 0103 	bic.w	r1, r1, #3
 80295ae:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80295b2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80295b6:	b2db      	uxtb	r3, r3
 80295b8:	00c9      	lsls	r1, r1, #3
 80295ba:	fb03 f30e 	mul.w	r3, r3, lr
 80295be:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80295c2:	4301      	orrs	r1, r0
 80295c4:	1c58      	adds	r0, r3, #1
 80295c6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80295ca:	00d2      	lsls	r2, r2, #3
 80295cc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80295d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80295d4:	430a      	orrs	r2, r1
 80295d6:	e726      	b.n	8029426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80295d8:	f115 0e01 	adds.w	lr, r5, #1
 80295dc:	f53f af24 	bmi.w	8029428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80295e0:	4572      	cmp	r2, lr
 80295e2:	f6ff af21 	blt.w	8029428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80295e6:	f110 0e01 	adds.w	lr, r0, #1
 80295ea:	f53f af1d 	bmi.w	8029428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80295ee:	4573      	cmp	r3, lr
 80295f0:	f6ff af1a 	blt.w	8029428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80295f4:	b21b      	sxth	r3, r3
 80295f6:	b212      	sxth	r2, r2
 80295f8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80295fc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8029600:	9301      	str	r3, [sp, #4]
 8029602:	9200      	str	r2, [sp, #0]
 8029604:	4639      	mov	r1, r7
 8029606:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802960a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802960c:	f7ff fc24 	bl	8028e58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8029610:	e70a      	b.n	8029428 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8029612:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8029614:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8029618:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802961a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802961e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029620:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029624:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8029626:	141f      	asrs	r7, r3, #16
 8029628:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802962a:	141b      	asrs	r3, r3, #16
 802962c:	fb01 3707 	mla	r7, r1, r7, r3
 8029630:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029632:	fa1f fc82 	uxth.w	ip, r2
 8029636:	eb03 0a07 	add.w	sl, r3, r7
 802963a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802963e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8029642:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8029646:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802964a:	b29b      	uxth	r3, r3
 802964c:	2d00      	cmp	r5, #0
 802964e:	f000 80fe 	beq.w	802984e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8029652:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8029656:	940c      	str	r4, [sp, #48]	@ 0x30
 8029658:	eb0a 0b01 	add.w	fp, sl, r1
 802965c:	fa1f fa85 	uxth.w	sl, r5
 8029660:	fb0a fc0c 	mul.w	ip, sl, ip
 8029664:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8029668:	fa1f fa8a 	uxth.w	sl, sl
 802966c:	eba0 000c 	sub.w	r0, r0, ip
 8029670:	eba3 030a 	sub.w	r3, r3, sl
 8029674:	b280      	uxth	r0, r0
 8029676:	fb08 f000 	mul.w	r0, r8, r0
 802967a:	b29b      	uxth	r3, r3
 802967c:	fb09 0303 	mla	r3, r9, r3, r0
 8029680:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029682:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8029686:	940d      	str	r4, [sp, #52]	@ 0x34
 8029688:	fb0a 3300 	mla	r3, sl, r0, r3
 802968c:	fb0c 3304 	mla	r3, ip, r4, r3
 8029690:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029694:	2b00      	cmp	r3, #0
 8029696:	f000 80cc 	beq.w	8029832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802969a:	9808      	ldr	r0, [sp, #32]
 802969c:	9c08      	ldr	r4, [sp, #32]
 802969e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80296a2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80296a6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80296aa:	f000 80d5 	beq.w	8029858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80296ae:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80296b2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80296b6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80296ba:	fb09 f707 	mul.w	r7, r9, r7
 80296be:	fb0a fc0c 	mul.w	ip, sl, ip
 80296c2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80296c6:	f107 0b20 	add.w	fp, r7, #32
 80296ca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80296ce:	44cc      	add	ip, r9
 80296d0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80296d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80296d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80296dc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80296e0:	ea4c 0909 	orr.w	r9, ip, r9
 80296e4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80296e8:	8847      	ldrh	r7, [r0, #2]
 80296ea:	d019      	beq.n	8029720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80296ec:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80296f0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80296f4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80296f8:	fb08 f807 	mul.w	r8, r8, r7
 80296fc:	fb0a fc0c 	mul.w	ip, sl, ip
 8029700:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8029704:	f108 0b20 	add.w	fp, r8, #32
 8029708:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802970c:	44bc      	add	ip, r7
 802970e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8029712:	0a3f      	lsrs	r7, r7, #8
 8029714:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8029718:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802971c:	ea4c 0707 	orr.w	r7, ip, r7
 8029720:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8029724:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8029728:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802972c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8029730:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029734:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8029738:	ea4c 0909 	orr.w	r9, ip, r9
 802973c:	ea4a 0707 	orr.w	r7, sl, r7
 8029740:	2d00      	cmp	r5, #0
 8029742:	f000 808b 	beq.w	802985c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8029746:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802974a:	3901      	subs	r1, #1
 802974c:	0049      	lsls	r1, r1, #1
 802974e:	3102      	adds	r1, #2
 8029750:	eb00 0c01 	add.w	ip, r0, r1
 8029754:	5a41      	ldrh	r1, [r0, r1]
 8029756:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8029758:	28ff      	cmp	r0, #255	@ 0xff
 802975a:	d019      	beq.n	8029790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802975c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802975e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8029762:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8029766:	fb04 fa01 	mul.w	sl, r4, r1
 802976a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802976e:	fb08 f800 	mul.w	r8, r8, r0
 8029772:	f10a 0020 	add.w	r0, sl, #32
 8029776:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802977a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802977e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8029782:	4441      	add	r1, r8
 8029784:	0a00      	lsrs	r0, r0, #8
 8029786:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802978a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802978e:	4301      	orrs	r1, r0
 8029790:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8029792:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8029796:	2cff      	cmp	r4, #255	@ 0xff
 8029798:	d01a      	beq.n	80297d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802979a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 802979e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80297a2:	fb04 fa00 	mul.w	sl, r4, r0
 80297a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80297aa:	fb08 f80c 	mul.w	r8, r8, ip
 80297ae:	f10a 0c20 	add.w	ip, sl, #32
 80297b2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80297b6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80297ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80297be:	4440      	add	r0, r8
 80297c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80297c4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80297c8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80297cc:	ea40 000c 	orr.w	r0, r0, ip
 80297d0:	fb15 fc02 	smulbb	ip, r5, r2
 80297d4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80297d8:	f1c5 0810 	rsb	r8, r5, #16
 80297dc:	eba8 0802 	sub.w	r8, r8, r2
 80297e0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80297e4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80297e8:	437a      	muls	r2, r7
 80297ea:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80297ee:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80297f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80297f6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80297fa:	fb09 2208 	mla	r2, r9, r8, r2
 80297fe:	ea4a 0101 	orr.w	r1, sl, r1
 8029802:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8029806:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802980a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802980e:	fb05 2201 	mla	r2, r5, r1, r2
 8029812:	ea4b 0000 	orr.w	r0, fp, r0
 8029816:	fb0c 2200 	mla	r2, ip, r0, r2
 802981a:	0d57      	lsrs	r7, r2, #21
 802981c:	0952      	lsrs	r2, r2, #5
 802981e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8029822:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029826:	433a      	orrs	r2, r7
 8029828:	2bff      	cmp	r3, #255	@ 0xff
 802982a:	b292      	uxth	r2, r2
 802982c:	d127      	bne.n	802987e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802982e:	f8ae 2000 	strh.w	r2, [lr]
 8029832:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8029834:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8029836:	4413      	add	r3, r2
 8029838:	931d      	str	r3, [sp, #116]	@ 0x74
 802983a:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 802983c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802983e:	441a      	add	r2, r3
 8029840:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8029842:	921e      	str	r2, [sp, #120]	@ 0x78
 8029844:	3b01      	subs	r3, #1
 8029846:	f10e 0e02 	add.w	lr, lr, #2
 802984a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802984c:	e627      	b.n	802949e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802984e:	fb08 f000 	mul.w	r0, r8, r0
 8029852:	fb09 0303 	mla	r3, r9, r3, r0
 8029856:	e71b      	b.n	8029690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8029858:	46b9      	mov	r9, r7
 802985a:	e743      	b.n	80296e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802985c:	f1c2 0110 	rsb	r1, r2, #16
 8029860:	437a      	muls	r2, r7
 8029862:	fb09 2901 	mla	r9, r9, r1, r2
 8029866:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802986a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802986e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8029872:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8029876:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802987a:	4302      	orrs	r2, r0
 802987c:	e7d4      	b.n	8029828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802987e:	f8be 7000 	ldrh.w	r7, [lr]
 8029882:	4c1c      	ldr	r4, [pc, #112]	@ (80298f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8029884:	43db      	mvns	r3, r3
 8029886:	1238      	asrs	r0, r7, #8
 8029888:	fa5f fc83 	uxtb.w	ip, r3
 802988c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8029890:	10fd      	asrs	r5, r7, #3
 8029892:	fb00 f00c 	mul.w	r0, r0, ip
 8029896:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802989a:	fb05 f10c 	mul.w	r1, r5, ip
 802989e:	1c45      	adds	r5, r0, #1
 80298a0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80298a4:	1215      	asrs	r5, r2, #8
 80298a6:	f025 0507 	bic.w	r5, r5, #7
 80298aa:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80298ae:	1c4d      	adds	r5, r1, #1
 80298b0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80298b4:	10d1      	asrs	r1, r2, #3
 80298b6:	f021 0103 	bic.w	r1, r1, #3
 80298ba:	00fb      	lsls	r3, r7, #3
 80298bc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80298c0:	b2db      	uxtb	r3, r3
 80298c2:	b2c0      	uxtb	r0, r0
 80298c4:	00c9      	lsls	r1, r1, #3
 80298c6:	fb03 f30c 	mul.w	r3, r3, ip
 80298ca:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80298ce:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80298d2:	4308      	orrs	r0, r1
 80298d4:	1c59      	adds	r1, r3, #1
 80298d6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80298da:	00d2      	lsls	r2, r2, #3
 80298dc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80298e0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80298e4:	4318      	orrs	r0, r3
 80298e6:	f8ae 0000 	strh.w	r0, [lr]
 80298ea:	e7a2      	b.n	8029832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80298ec:	b013      	add	sp, #76	@ 0x4c
 80298ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80298f2:	bf00      	nop
 80298f4:	fffff800 	.word	0xfffff800

080298f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80298f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80298fc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8029900:	fb05 4c03 	mla	ip, r5, r3, r4
 8029904:	2d00      	cmp	r5, #0
 8029906:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802990a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 802990e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8029912:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8029916:	8808      	ldrh	r0, [r1, #0]
 8029918:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802991c:	f2c0 80a7 	blt.w	8029a6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8029920:	45aa      	cmp	sl, r5
 8029922:	f340 80a4 	ble.w	8029a6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8029926:	2c00      	cmp	r4, #0
 8029928:	f2c0 809f 	blt.w	8029a6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802992c:	42a3      	cmp	r3, r4
 802992e:	f340 809c 	ble.w	8029a6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8029932:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8029936:	1c62      	adds	r2, r4, #1
 8029938:	f100 809c 	bmi.w	8029a74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802993c:	4293      	cmp	r3, r2
 802993e:	f340 8099 	ble.w	8029a74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8029942:	f1b9 0f00 	cmp.w	r9, #0
 8029946:	f000 8095 	beq.w	8029a74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802994a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802994e:	3501      	adds	r5, #1
 8029950:	f100 8094 	bmi.w	8029a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8029954:	45aa      	cmp	sl, r5
 8029956:	f340 8091 	ble.w	8029a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802995a:	2f00      	cmp	r7, #0
 802995c:	f000 808e 	beq.w	8029a7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8029960:	2c00      	cmp	r4, #0
 8029962:	f2c0 8089 	blt.w	8029a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8029966:	42a3      	cmp	r3, r4
 8029968:	f340 8086 	ble.w	8029a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802996c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8029970:	3401      	adds	r4, #1
 8029972:	f100 8086 	bmi.w	8029a82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8029976:	42a3      	cmp	r3, r4
 8029978:	f340 8083 	ble.w	8029a82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802997c:	f1b9 0f00 	cmp.w	r9, #0
 8029980:	d07f      	beq.n	8029a82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8029982:	3301      	adds	r3, #1
 8029984:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8029988:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802998c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8029990:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8029994:	fb19 fe07 	smulbb	lr, r9, r7
 8029998:	ea44 0808 	orr.w	r8, r4, r8
 802999c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80299a0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80299a4:	f1c7 0210 	rsb	r2, r7, #16
 80299a8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80299ac:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80299b0:	ea44 0c0c 	orr.w	ip, r4, ip
 80299b4:	eba2 0209 	sub.w	r2, r2, r9
 80299b8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80299bc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80299c0:	fb04 f40c 	mul.w	r4, r4, ip
 80299c4:	fb02 4808 	mla	r8, r2, r8, r4
 80299c8:	041a      	lsls	r2, r3, #16
 80299ca:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80299ce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80299d2:	4313      	orrs	r3, r2
 80299d4:	042a      	lsls	r2, r5, #16
 80299d6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80299da:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80299de:	fb0e 8303 	mla	r3, lr, r3, r8
 80299e2:	432a      	orrs	r2, r5
 80299e4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80299e8:	fb07 3202 	mla	r2, r7, r2, r3
 80299ec:	0d53      	lsrs	r3, r2, #21
 80299ee:	0952      	lsrs	r2, r2, #5
 80299f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80299f4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80299f8:	431a      	orrs	r2, r3
 80299fa:	b293      	uxth	r3, r2
 80299fc:	b2b4      	uxth	r4, r6
 80299fe:	1202      	asrs	r2, r0, #8
 8029a00:	43f6      	mvns	r6, r6
 8029a02:	b2f6      	uxtb	r6, r6
 8029a04:	121d      	asrs	r5, r3, #8
 8029a06:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8029a0a:	fb12 f206 	smulbb	r2, r2, r6
 8029a0e:	10c7      	asrs	r7, r0, #3
 8029a10:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8029a14:	00c0      	lsls	r0, r0, #3
 8029a16:	fb05 2504 	mla	r5, r5, r4, r2
 8029a1a:	b2c0      	uxtb	r0, r0
 8029a1c:	10da      	asrs	r2, r3, #3
 8029a1e:	00db      	lsls	r3, r3, #3
 8029a20:	b2db      	uxtb	r3, r3
 8029a22:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8029a26:	fb10 f006 	smulbb	r0, r0, r6
 8029a2a:	b2ad      	uxth	r5, r5
 8029a2c:	fb03 0004 	mla	r0, r3, r4, r0
 8029a30:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8029a34:	fb17 f706 	smulbb	r7, r7, r6
 8029a38:	b280      	uxth	r0, r0
 8029a3a:	1c6b      	adds	r3, r5, #1
 8029a3c:	fb02 7204 	mla	r2, r2, r4, r7
 8029a40:	b292      	uxth	r2, r2
 8029a42:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029a46:	1c43      	adds	r3, r0, #1
 8029a48:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8029a4c:	1c50      	adds	r0, r2, #1
 8029a4e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8029a52:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8029a56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029a5a:	0952      	lsrs	r2, r2, #5
 8029a5c:	432b      	orrs	r3, r5
 8029a5e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029a62:	4313      	orrs	r3, r2
 8029a64:	800b      	strh	r3, [r1, #0]
 8029a66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029a6a:	4680      	mov	r8, r0
 8029a6c:	e763      	b.n	8029936 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8029a6e:	4684      	mov	ip, r0
 8029a70:	4680      	mov	r8, r0
 8029a72:	e76c      	b.n	802994e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8029a74:	4684      	mov	ip, r0
 8029a76:	e76a      	b.n	802994e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8029a78:	4605      	mov	r5, r0
 8029a7a:	e779      	b.n	8029970 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8029a7c:	4603      	mov	r3, r0
 8029a7e:	4605      	mov	r5, r0
 8029a80:	e782      	b.n	8029988 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8029a82:	4603      	mov	r3, r0
 8029a84:	e780      	b.n	8029988 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08029a86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029a86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a8a:	b093      	sub	sp, #76	@ 0x4c
 8029a8c:	461d      	mov	r5, r3
 8029a8e:	9210      	str	r2, [sp, #64]	@ 0x40
 8029a90:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8029a92:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8029a96:	920b      	str	r2, [sp, #44]	@ 0x2c
 8029a98:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8029a9c:	910a      	str	r1, [sp, #40]	@ 0x28
 8029a9e:	6859      	ldr	r1, [r3, #4]
 8029aa0:	681b      	ldr	r3, [r3, #0]
 8029aa2:	9011      	str	r0, [sp, #68]	@ 0x44
 8029aa4:	fb01 2707 	mla	r7, r1, r7, r2
 8029aa8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8029aac:	9307      	str	r3, [sp, #28]
 8029aae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029ab0:	681b      	ldr	r3, [r3, #0]
 8029ab2:	9309      	str	r3, [sp, #36]	@ 0x24
 8029ab4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8029ab6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8029aba:	43db      	mvns	r3, r3
 8029abc:	b2db      	uxtb	r3, r3
 8029abe:	9308      	str	r3, [sp, #32]
 8029ac0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029ac2:	2b00      	cmp	r3, #0
 8029ac4:	dc03      	bgt.n	8029ace <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8029ac6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8029ac8:	2b00      	cmp	r3, #0
 8029aca:	f340 8203 	ble.w	8029ed4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029ace:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029ad0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029ad4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029ad8:	1e48      	subs	r0, r1, #1
 8029ada:	f102 3cff 	add.w	ip, r2, #4294967295
 8029ade:	2d00      	cmp	r5, #0
 8029ae0:	f340 80da 	ble.w	8029c98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8029ae4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8029ae8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8029aec:	d406      	bmi.n	8029afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8029aee:	4586      	cmp	lr, r0
 8029af0:	da04      	bge.n	8029afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8029af2:	2b00      	cmp	r3, #0
 8029af4:	db02      	blt.n	8029afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8029af6:	4563      	cmp	r3, ip
 8029af8:	f2c0 80cf 	blt.w	8029c9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8029afc:	f11e 0e01 	adds.w	lr, lr, #1
 8029b00:	f100 80c1 	bmi.w	8029c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029b04:	4571      	cmp	r1, lr
 8029b06:	f2c0 80be 	blt.w	8029c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029b0a:	3301      	adds	r3, #1
 8029b0c:	f100 80bb 	bmi.w	8029c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029b10:	429a      	cmp	r2, r3
 8029b12:	f2c0 80b8 	blt.w	8029c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8029b16:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8029b1a:	46a9      	mov	r9, r5
 8029b1c:	f1b9 0f00 	cmp.w	r9, #0
 8029b20:	f340 80d8 	ble.w	8029cd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8029b24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029b26:	1421      	asrs	r1, r4, #16
 8029b28:	ea4f 4026 	mov.w	r0, r6, asr #16
 8029b2c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029b30:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029b34:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8029b38:	f100 8111 	bmi.w	8029d5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029b3c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8029b40:	4551      	cmp	r1, sl
 8029b42:	f280 810c 	bge.w	8029d5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029b46:	2800      	cmp	r0, #0
 8029b48:	f2c0 8109 	blt.w	8029d5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029b4c:	f103 3aff 	add.w	sl, r3, #4294967295
 8029b50:	4550      	cmp	r0, sl
 8029b52:	f280 8104 	bge.w	8029d5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8029b56:	fa0f f38e 	sxth.w	r3, lr
 8029b5a:	fb00 1103 	mla	r1, r0, r3, r1
 8029b5e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8029b60:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8029b64:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8029b68:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8029b6c:	f1bc 0f00 	cmp.w	ip, #0
 8029b70:	d007      	beq.n	8029b82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8029b72:	005b      	lsls	r3, r3, #1
 8029b74:	eb0a 0003 	add.w	r0, sl, r3
 8029b78:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8029b7c:	930c      	str	r3, [sp, #48]	@ 0x30
 8029b7e:	8843      	ldrh	r3, [r0, #2]
 8029b80:	930d      	str	r3, [sp, #52]	@ 0x34
 8029b82:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8029b86:	fb12 f30c 	smulbb	r3, r2, ip
 8029b8a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8029b8e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8029b92:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029b96:	10db      	asrs	r3, r3, #3
 8029b98:	ea40 000e 	orr.w	r0, r0, lr
 8029b9c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8029ba0:	f1cc 0e10 	rsb	lr, ip, #16
 8029ba4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8029ba8:	ebae 0e02 	sub.w	lr, lr, r2
 8029bac:	ea4a 0101 	orr.w	r1, sl, r1
 8029bb0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8029bb4:	4351      	muls	r1, r2
 8029bb6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8029bb8:	9f08      	ldr	r7, [sp, #32]
 8029bba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8029bbe:	fb0e 1e00 	mla	lr, lr, r0, r1
 8029bc2:	0410      	lsls	r0, r2, #16
 8029bc4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8029bc8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029bcc:	4310      	orrs	r0, r2
 8029bce:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8029bd0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8029bd2:	0412      	lsls	r2, r2, #16
 8029bd4:	fb03 e000 	mla	r0, r3, r0, lr
 8029bd8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029bdc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8029be0:	ea42 020e 	orr.w	r2, r2, lr
 8029be4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8029be8:	fb03 0302 	mla	r3, r3, r2, r0
 8029bec:	0d5a      	lsrs	r2, r3, #21
 8029bee:	095b      	lsrs	r3, r3, #5
 8029bf0:	f8b8 0000 	ldrh.w	r0, [r8]
 8029bf4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8029bf8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8029bfc:	4313      	orrs	r3, r2
 8029bfe:	b29b      	uxth	r3, r3
 8029c00:	1201      	asrs	r1, r0, #8
 8029c02:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8029c06:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8029c0a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8029c0e:	fb11 f107 	smulbb	r1, r1, r7
 8029c12:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8029c16:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8029c1a:	00c0      	lsls	r0, r0, #3
 8029c1c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8029c20:	b2c0      	uxtb	r0, r0
 8029c22:	10d9      	asrs	r1, r3, #3
 8029c24:	00db      	lsls	r3, r3, #3
 8029c26:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8029c2a:	b2db      	uxtb	r3, r3
 8029c2c:	fb10 f007 	smulbb	r0, r0, r7
 8029c30:	fa1f fc8c 	uxth.w	ip, ip
 8029c34:	fb03 0302 	mla	r3, r3, r2, r0
 8029c38:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8029c3c:	fb1e fe07 	smulbb	lr, lr, r7
 8029c40:	fb01 e102 	mla	r1, r1, r2, lr
 8029c44:	b29a      	uxth	r2, r3
 8029c46:	f10c 0301 	add.w	r3, ip, #1
 8029c4a:	b289      	uxth	r1, r1
 8029c4c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8029c50:	1c53      	adds	r3, r2, #1
 8029c52:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029c56:	1c4a      	adds	r2, r1, #1
 8029c58:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8029c5c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8029c60:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029c64:	0949      	lsrs	r1, r1, #5
 8029c66:	ea43 030c 	orr.w	r3, r3, ip
 8029c6a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8029c6e:	430b      	orrs	r3, r1
 8029c70:	f8a8 3000 	strh.w	r3, [r8]
 8029c74:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029c76:	441c      	add	r4, r3
 8029c78:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029c7a:	f108 0802 	add.w	r8, r8, #2
 8029c7e:	441e      	add	r6, r3
 8029c80:	f109 39ff 	add.w	r9, r9, #4294967295
 8029c84:	e74a      	b.n	8029b1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8029c86:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029c88:	441c      	add	r4, r3
 8029c8a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029c8c:	441e      	add	r6, r3
 8029c8e:	9b07      	ldr	r3, [sp, #28]
 8029c90:	3302      	adds	r3, #2
 8029c92:	3d01      	subs	r5, #1
 8029c94:	9307      	str	r3, [sp, #28]
 8029c96:	e722      	b.n	8029ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8029c98:	d022      	beq.n	8029ce0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8029c9a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8029c9c:	1e6b      	subs	r3, r5, #1
 8029c9e:	fb00 4003 	mla	r0, r0, r3, r4
 8029ca2:	1400      	asrs	r0, r0, #16
 8029ca4:	f53f af37 	bmi.w	8029b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029ca8:	3901      	subs	r1, #1
 8029caa:	4288      	cmp	r0, r1
 8029cac:	f6bf af33 	bge.w	8029b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029cb0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8029cb2:	fb01 6303 	mla	r3, r1, r3, r6
 8029cb6:	141b      	asrs	r3, r3, #16
 8029cb8:	f53f af2d 	bmi.w	8029b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029cbc:	3a01      	subs	r2, #1
 8029cbe:	4293      	cmp	r3, r2
 8029cc0:	f6bf af29 	bge.w	8029b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029cc4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8029cc8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8029ccc:	46a8      	mov	r8, r5
 8029cce:	f1b8 0f00 	cmp.w	r8, #0
 8029cd2:	dc5e      	bgt.n	8029d92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8029cd4:	9b07      	ldr	r3, [sp, #28]
 8029cd6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8029cda:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8029cde:	9307      	str	r3, [sp, #28]
 8029ce0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029ce2:	2b00      	cmp	r3, #0
 8029ce4:	f340 80f6 	ble.w	8029ed4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8029ce8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029cec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8029cf0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029cf4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029cf6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8029cfa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8029cfe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8029d02:	eef0 6a62 	vmov.f32	s13, s5
 8029d06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8029d0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029d0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8029d12:	ee16 4a90 	vmov	r4, s13
 8029d16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8029d1a:	eef0 6a43 	vmov.f32	s13, s6
 8029d1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8029d22:	ee12 2a90 	vmov	r2, s5
 8029d26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8029d2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8029d2e:	ee13 2a10 	vmov	r2, s6
 8029d32:	931f      	str	r3, [sp, #124]	@ 0x7c
 8029d34:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029d36:	fb92 f3f3 	sdiv	r3, r2, r3
 8029d3a:	9320      	str	r3, [sp, #128]	@ 0x80
 8029d3c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8029d3e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8029d40:	3b01      	subs	r3, #1
 8029d42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029d46:	930a      	str	r3, [sp, #40]	@ 0x28
 8029d48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8029d4a:	ee16 6a90 	vmov	r6, s13
 8029d4e:	bf14      	ite	ne
 8029d50:	461d      	movne	r5, r3
 8029d52:	4615      	moveq	r5, r2
 8029d54:	eeb0 3a67 	vmov.f32	s6, s15
 8029d58:	eef0 2a47 	vmov.f32	s5, s14
 8029d5c:	e6b0      	b.n	8029ac0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8029d5e:	f111 0a01 	adds.w	sl, r1, #1
 8029d62:	d487      	bmi.n	8029c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029d64:	45d6      	cmp	lr, sl
 8029d66:	db85      	blt.n	8029c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029d68:	f110 0a01 	adds.w	sl, r0, #1
 8029d6c:	d482      	bmi.n	8029c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029d6e:	4553      	cmp	r3, sl
 8029d70:	db80      	blt.n	8029c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029d72:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8029d74:	9101      	str	r1, [sp, #4]
 8029d76:	b21b      	sxth	r3, r3
 8029d78:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8029d7c:	9300      	str	r3, [sp, #0]
 8029d7e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8029d82:	fa0f f38e 	sxth.w	r3, lr
 8029d86:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8029d88:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8029d8a:	4641      	mov	r1, r8
 8029d8c:	f7ff fdb4 	bl	80298f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8029d90:	e770      	b.n	8029c74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8029d92:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8029d94:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8029d96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029d9a:	1430      	asrs	r0, r6, #16
 8029d9c:	1423      	asrs	r3, r4, #16
 8029d9e:	fb01 3000 	mla	r0, r1, r0, r3
 8029da2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029da4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8029da8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8029dac:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8029db0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8029db4:	8858      	ldrh	r0, [r3, #2]
 8029db6:	f1be 0f00 	cmp.w	lr, #0
 8029dba:	d00b      	beq.n	8029dd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8029dbc:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8029dc0:	3901      	subs	r1, #1
 8029dc2:	0049      	lsls	r1, r1, #1
 8029dc4:	3102      	adds	r1, #2
 8029dc6:	eb03 0b01 	add.w	fp, r3, r1
 8029dca:	5a5b      	ldrh	r3, [r3, r1]
 8029dcc:	930e      	str	r3, [sp, #56]	@ 0x38
 8029dce:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8029dd2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8029dd4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8029dd8:	fb12 f30e 	smulbb	r3, r2, lr
 8029ddc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8029de0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8029de4:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8029de8:	10db      	asrs	r3, r3, #3
 8029dea:	ea41 010c 	orr.w	r1, r1, ip
 8029dee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029df2:	f1ce 0c10 	rsb	ip, lr, #16
 8029df6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029dfa:	ebac 0c02 	sub.w	ip, ip, r2
 8029dfe:	ea4b 0000 	orr.w	r0, fp, r0
 8029e02:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8029e06:	4350      	muls	r0, r2
 8029e08:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8029e0a:	9f08      	ldr	r7, [sp, #32]
 8029e0c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8029e10:	fb0c 0c01 	mla	ip, ip, r1, r0
 8029e14:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8029e18:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8029e1c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8029e1e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8029e20:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8029e24:	0412      	lsls	r2, r2, #16
 8029e26:	ea4b 0101 	orr.w	r1, fp, r1
 8029e2a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029e2e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8029e32:	fb03 c101 	mla	r1, r3, r1, ip
 8029e36:	4302      	orrs	r2, r0
 8029e38:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8029e3c:	fb03 1202 	mla	r2, r3, r2, r1
 8029e40:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8029e44:	0952      	lsrs	r2, r2, #5
 8029e46:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8029e4a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8029e4e:	f8b9 2000 	ldrh.w	r2, [r9]
 8029e52:	ea4b 0303 	orr.w	r3, fp, r3
 8029e56:	b29b      	uxth	r3, r3
 8029e58:	1211      	asrs	r1, r2, #8
 8029e5a:	1218      	asrs	r0, r3, #8
 8029e5c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8029e60:	fb11 f107 	smulbb	r1, r1, r7
 8029e64:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8029e68:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8029e6c:	00d2      	lsls	r2, r2, #3
 8029e6e:	fb00 100a 	mla	r0, r0, sl, r1
 8029e72:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8029e76:	10d9      	asrs	r1, r3, #3
 8029e78:	b2d2      	uxtb	r2, r2
 8029e7a:	00db      	lsls	r3, r3, #3
 8029e7c:	fb1c fc07 	smulbb	ip, ip, r7
 8029e80:	fb12 f207 	smulbb	r2, r2, r7
 8029e84:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8029e88:	b2db      	uxtb	r3, r3
 8029e8a:	b280      	uxth	r0, r0
 8029e8c:	fb01 c10a 	mla	r1, r1, sl, ip
 8029e90:	fb03 230a 	mla	r3, r3, sl, r2
 8029e94:	b29b      	uxth	r3, r3
 8029e96:	b289      	uxth	r1, r1
 8029e98:	1c42      	adds	r2, r0, #1
 8029e9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029e9e:	f101 0c01 	add.w	ip, r1, #1
 8029ea2:	1c5a      	adds	r2, r3, #1
 8029ea4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8029ea8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8029eac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8029eae:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8029eb2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8029eb6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8029eba:	4310      	orrs	r0, r2
 8029ebc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8029ec0:	441c      	add	r4, r3
 8029ec2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029ec4:	ea40 000c 	orr.w	r0, r0, ip
 8029ec8:	f829 0b02 	strh.w	r0, [r9], #2
 8029ecc:	441e      	add	r6, r3
 8029ece:	f108 38ff 	add.w	r8, r8, #4294967295
 8029ed2:	e6fc      	b.n	8029cce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8029ed4:	b013      	add	sp, #76	@ 0x4c
 8029ed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029eda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8029eda:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8029ede:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8029ee2:	fb0e 4703 	mla	r7, lr, r3, r4
 8029ee6:	f1be 0f00 	cmp.w	lr, #0
 8029eea:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8029eee:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8029ef2:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8029ef6:	8808      	ldrh	r0, [r1, #0]
 8029ef8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8029efc:	db60      	blt.n	8029fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8029efe:	45f1      	cmp	r9, lr
 8029f00:	dd5e      	ble.n	8029fc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8029f02:	2c00      	cmp	r4, #0
 8029f04:	db5a      	blt.n	8029fbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8029f06:	42a3      	cmp	r3, r4
 8029f08:	dd58      	ble.n	8029fbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8029f0a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8029f0e:	1c62      	adds	r2, r4, #1
 8029f10:	d459      	bmi.n	8029fc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8029f12:	4293      	cmp	r3, r2
 8029f14:	dd57      	ble.n	8029fc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8029f16:	2d00      	cmp	r5, #0
 8029f18:	d055      	beq.n	8029fc6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8029f1a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8029f1e:	f11e 0e01 	adds.w	lr, lr, #1
 8029f22:	d454      	bmi.n	8029fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8029f24:	45f1      	cmp	r9, lr
 8029f26:	dd52      	ble.n	8029fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8029f28:	2e00      	cmp	r6, #0
 8029f2a:	d050      	beq.n	8029fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8029f2c:	2c00      	cmp	r4, #0
 8029f2e:	db4c      	blt.n	8029fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8029f30:	42a3      	cmp	r3, r4
 8029f32:	dd4a      	ble.n	8029fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8029f34:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8029f38:	3401      	adds	r4, #1
 8029f3a:	d405      	bmi.n	8029f48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029f3c:	42a3      	cmp	r3, r4
 8029f3e:	dd03      	ble.n	8029f48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029f40:	b115      	cbz	r5, 8029f48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8029f42:	3301      	adds	r3, #1
 8029f44:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8029f48:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8029f4c:	fb15 f406 	smulbb	r4, r5, r6
 8029f50:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029f54:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8029f58:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8029f5c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8029f60:	ea43 0c0c 	orr.w	ip, r3, ip
 8029f64:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8029f68:	f1c6 0310 	rsb	r3, r6, #16
 8029f6c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8029f70:	1b5b      	subs	r3, r3, r5
 8029f72:	ea4e 0707 	orr.w	r7, lr, r7
 8029f76:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8029f7a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029f7e:	437d      	muls	r5, r7
 8029f80:	fb03 5c0c 	mla	ip, r3, ip, r5
 8029f84:	0403      	lsls	r3, r0, #16
 8029f86:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029f8a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029f8e:	4318      	orrs	r0, r3
 8029f90:	0413      	lsls	r3, r2, #16
 8029f92:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8029f96:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8029f9a:	4313      	orrs	r3, r2
 8029f9c:	fb04 c000 	mla	r0, r4, r0, ip
 8029fa0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8029fa4:	fb06 0003 	mla	r0, r6, r3, r0
 8029fa8:	0d43      	lsrs	r3, r0, #21
 8029faa:	0940      	lsrs	r0, r0, #5
 8029fac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8029fb0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8029fb4:	4318      	orrs	r0, r3
 8029fb6:	8008      	strh	r0, [r1, #0]
 8029fb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8029fbc:	4684      	mov	ip, r0
 8029fbe:	e7a6      	b.n	8029f0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8029fc0:	4607      	mov	r7, r0
 8029fc2:	4684      	mov	ip, r0
 8029fc4:	e7ab      	b.n	8029f1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8029fc6:	4607      	mov	r7, r0
 8029fc8:	e7a9      	b.n	8029f1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8029fca:	4602      	mov	r2, r0
 8029fcc:	e7b4      	b.n	8029f38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8029fce:	4602      	mov	r2, r0
 8029fd0:	e7ba      	b.n	8029f48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08029fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029fd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029fd6:	b08f      	sub	sp, #60	@ 0x3c
 8029fd8:	461d      	mov	r5, r3
 8029fda:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8029fdc:	920c      	str	r2, [sp, #48]	@ 0x30
 8029fde:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8029fe2:	9107      	str	r1, [sp, #28]
 8029fe4:	6859      	ldr	r1, [r3, #4]
 8029fe6:	681b      	ldr	r3, [r3, #0]
 8029fe8:	900d      	str	r0, [sp, #52]	@ 0x34
 8029fea:	fb01 2707 	mla	r7, r1, r7, r2
 8029fee:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8029ff2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8029ff4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8029ff8:	f8d3 8000 	ldr.w	r8, [r3]
 8029ffc:	9b07      	ldr	r3, [sp, #28]
 8029ffe:	2b00      	cmp	r3, #0
 802a000:	dc03      	bgt.n	802a00a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802a002:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802a004:	2b00      	cmp	r3, #0
 802a006:	f340 8181 	ble.w	802a30c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802a00a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802a00c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a010:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802a014:	1e48      	subs	r0, r1, #1
 802a016:	f102 3cff 	add.w	ip, r2, #4294967295
 802a01a:	2d00      	cmp	r5, #0
 802a01c:	f340 809b 	ble.w	802a156 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 802a020:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802a024:	ea4f 4326 	mov.w	r3, r6, asr #16
 802a028:	d406      	bmi.n	802a038 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802a02a:	4586      	cmp	lr, r0
 802a02c:	da04      	bge.n	802a038 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802a02e:	2b00      	cmp	r3, #0
 802a030:	db02      	blt.n	802a038 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802a032:	4563      	cmp	r3, ip
 802a034:	f2c0 8090 	blt.w	802a158 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802a038:	f11e 0e01 	adds.w	lr, lr, #1
 802a03c:	f100 8084 	bmi.w	802a148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802a040:	4571      	cmp	r1, lr
 802a042:	f2c0 8081 	blt.w	802a148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802a046:	3301      	adds	r3, #1
 802a048:	d47e      	bmi.n	802a148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802a04a:	429a      	cmp	r2, r3
 802a04c:	db7c      	blt.n	802a148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802a04e:	46aa      	mov	sl, r5
 802a050:	46b9      	mov	r9, r7
 802a052:	f1ba 0f00 	cmp.w	sl, #0
 802a056:	f340 8099 	ble.w	802a18c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802a05a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802a05c:	1421      	asrs	r1, r4, #16
 802a05e:	ea4f 4026 	mov.w	r0, r6, asr #16
 802a062:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802a066:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802a06a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802a06e:	f100 80d0 	bmi.w	802a212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802a072:	f10e 3bff 	add.w	fp, lr, #4294967295
 802a076:	4559      	cmp	r1, fp
 802a078:	f280 80cb 	bge.w	802a212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802a07c:	2800      	cmp	r0, #0
 802a07e:	f2c0 80c8 	blt.w	802a212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802a082:	f103 3bff 	add.w	fp, r3, #4294967295
 802a086:	4558      	cmp	r0, fp
 802a088:	f280 80c3 	bge.w	802a212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802a08c:	fa0f fe8e 	sxth.w	lr, lr
 802a090:	fb00 110e 	mla	r1, r0, lr, r1
 802a094:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802a098:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802a09c:	8841      	ldrh	r1, [r0, #2]
 802a09e:	f1bc 0f00 	cmp.w	ip, #0
 802a0a2:	d00b      	beq.n	802a0bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802a0a4:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 802a0a8:	3b01      	subs	r3, #1
 802a0aa:	005b      	lsls	r3, r3, #1
 802a0ac:	3302      	adds	r3, #2
 802a0ae:	eb00 0e03 	add.w	lr, r0, r3
 802a0b2:	5ac3      	ldrh	r3, [r0, r3]
 802a0b4:	9308      	str	r3, [sp, #32]
 802a0b6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802a0ba:	9309      	str	r3, [sp, #36]	@ 0x24
 802a0bc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 802a0c0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802a0c4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 802a0c8:	ea40 000b 	orr.w	r0, r0, fp
 802a0cc:	fb12 f30c 	smulbb	r3, r2, ip
 802a0d0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802a0d4:	10db      	asrs	r3, r3, #3
 802a0d6:	f1cc 0e10 	rsb	lr, ip, #16
 802a0da:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802a0de:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802a0e2:	ebae 0e02 	sub.w	lr, lr, r2
 802a0e6:	ea4b 0101 	orr.w	r1, fp, r1
 802a0ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802a0ee:	4351      	muls	r1, r2
 802a0f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802a0f2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802a0f6:	fb0e 1e00 	mla	lr, lr, r0, r1
 802a0fa:	0410      	lsls	r0, r2, #16
 802a0fc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802a100:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802a104:	4310      	orrs	r0, r2
 802a106:	9a08      	ldr	r2, [sp, #32]
 802a108:	9908      	ldr	r1, [sp, #32]
 802a10a:	0412      	lsls	r2, r2, #16
 802a10c:	fb03 e000 	mla	r0, r3, r0, lr
 802a110:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802a114:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 802a118:	ea42 020e 	orr.w	r2, r2, lr
 802a11c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802a120:	fb03 0302 	mla	r3, r3, r2, r0
 802a124:	0d5a      	lsrs	r2, r3, #21
 802a126:	095b      	lsrs	r3, r3, #5
 802a128:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a12c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802a130:	4313      	orrs	r3, r2
 802a132:	f8a9 3000 	strh.w	r3, [r9]
 802a136:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802a138:	441c      	add	r4, r3
 802a13a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a13c:	f109 0902 	add.w	r9, r9, #2
 802a140:	441e      	add	r6, r3
 802a142:	f10a 3aff 	add.w	sl, sl, #4294967295
 802a146:	e784      	b.n	802a052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802a148:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802a14a:	441c      	add	r4, r3
 802a14c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a14e:	3d01      	subs	r5, #1
 802a150:	441e      	add	r6, r3
 802a152:	3702      	adds	r7, #2
 802a154:	e761      	b.n	802a01a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802a156:	d01d      	beq.n	802a194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802a158:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802a15a:	1e6b      	subs	r3, r5, #1
 802a15c:	fb00 4003 	mla	r0, r0, r3, r4
 802a160:	1400      	asrs	r0, r0, #16
 802a162:	f53f af74 	bmi.w	802a04e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a166:	3901      	subs	r1, #1
 802a168:	4288      	cmp	r0, r1
 802a16a:	f6bf af70 	bge.w	802a04e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a16e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 802a170:	fb01 6303 	mla	r3, r1, r3, r6
 802a174:	141b      	asrs	r3, r3, #16
 802a176:	f53f af6a 	bmi.w	802a04e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a17a:	3a01      	subs	r2, #1
 802a17c:	4293      	cmp	r3, r2
 802a17e:	f6bf af66 	bge.w	802a04e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802a182:	46a9      	mov	r9, r5
 802a184:	46ba      	mov	sl, r7
 802a186:	f1b9 0f00 	cmp.w	r9, #0
 802a18a:	dc5a      	bgt.n	802a242 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802a18c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802a190:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802a194:	9b07      	ldr	r3, [sp, #28]
 802a196:	2b00      	cmp	r3, #0
 802a198:	f340 80b8 	ble.w	802a30c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802a19c:	ee30 0a04 	vadd.f32	s0, s0, s8
 802a1a0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802a1a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a1a8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a1aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802a1ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 802a1b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802a1b6:	eef0 6a62 	vmov.f32	s13, s5
 802a1ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 802a1be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a1c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 802a1c6:	ee16 4a90 	vmov	r4, s13
 802a1ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802a1ce:	eef0 6a43 	vmov.f32	s13, s6
 802a1d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802a1d6:	ee12 2a90 	vmov	r2, s5
 802a1da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802a1de:	fb92 f3f3 	sdiv	r3, r2, r3
 802a1e2:	ee13 2a10 	vmov	r2, s6
 802a1e6:	931b      	str	r3, [sp, #108]	@ 0x6c
 802a1e8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a1ea:	fb92 f3f3 	sdiv	r3, r2, r3
 802a1ee:	931c      	str	r3, [sp, #112]	@ 0x70
 802a1f0:	9b07      	ldr	r3, [sp, #28]
 802a1f2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802a1f4:	3b01      	subs	r3, #1
 802a1f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a1fa:	9307      	str	r3, [sp, #28]
 802a1fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a1fe:	ee16 6a90 	vmov	r6, s13
 802a202:	bf14      	ite	ne
 802a204:	461d      	movne	r5, r3
 802a206:	4615      	moveq	r5, r2
 802a208:	eeb0 3a67 	vmov.f32	s6, s15
 802a20c:	eef0 2a47 	vmov.f32	s5, s14
 802a210:	e6f4      	b.n	8029ffc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802a212:	f111 0b01 	adds.w	fp, r1, #1
 802a216:	d48e      	bmi.n	802a136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a218:	45de      	cmp	lr, fp
 802a21a:	db8c      	blt.n	802a136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a21c:	f110 0b01 	adds.w	fp, r0, #1
 802a220:	d489      	bmi.n	802a136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a222:	455b      	cmp	r3, fp
 802a224:	db87      	blt.n	802a136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a226:	b21b      	sxth	r3, r3
 802a228:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802a22c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802a230:	9300      	str	r3, [sp, #0]
 802a232:	4642      	mov	r2, r8
 802a234:	fa0f f38e 	sxth.w	r3, lr
 802a238:	4649      	mov	r1, r9
 802a23a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802a23c:	f7ff fe4d 	bl	8029eda <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802a240:	e779      	b.n	802a136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802a242:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802a244:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802a248:	1420      	asrs	r0, r4, #16
 802a24a:	1431      	asrs	r1, r6, #16
 802a24c:	fb03 0101 	mla	r1, r3, r1, r0
 802a250:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802a254:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802a258:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802a25c:	8841      	ldrh	r1, [r0, #2]
 802a25e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802a262:	f1be 0f00 	cmp.w	lr, #0
 802a266:	d00b      	beq.n	802a280 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802a268:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802a26c:	3b01      	subs	r3, #1
 802a26e:	005b      	lsls	r3, r3, #1
 802a270:	3302      	adds	r3, #2
 802a272:	eb00 0b03 	add.w	fp, r0, r3
 802a276:	5ac3      	ldrh	r3, [r0, r3]
 802a278:	930a      	str	r3, [sp, #40]	@ 0x28
 802a27a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802a27e:	930b      	str	r3, [sp, #44]	@ 0x2c
 802a280:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802a284:	fb12 f30e 	smulbb	r3, r2, lr
 802a288:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802a28c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802a290:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802a294:	10db      	asrs	r3, r3, #3
 802a296:	ea40 000c 	orr.w	r0, r0, ip
 802a29a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802a29e:	f1ce 0c10 	rsb	ip, lr, #16
 802a2a2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802a2a6:	ebac 0c02 	sub.w	ip, ip, r2
 802a2aa:	ea4b 0101 	orr.w	r1, fp, r1
 802a2ae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802a2b2:	4351      	muls	r1, r2
 802a2b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802a2b6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802a2ba:	fb0c 1c00 	mla	ip, ip, r0, r1
 802a2be:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802a2c2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 802a2c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802a2c8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802a2ca:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802a2ce:	0412      	lsls	r2, r2, #16
 802a2d0:	ea4b 0000 	orr.w	r0, fp, r0
 802a2d4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802a2d8:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 802a2dc:	fb03 c000 	mla	r0, r3, r0, ip
 802a2e0:	ea42 0b0b 	orr.w	fp, r2, fp
 802a2e4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802a2e8:	fb03 000b 	mla	r0, r3, fp, r0
 802a2ec:	0d43      	lsrs	r3, r0, #21
 802a2ee:	0940      	lsrs	r0, r0, #5
 802a2f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802a2f4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802a2f8:	4318      	orrs	r0, r3
 802a2fa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802a2fc:	f82a 0b02 	strh.w	r0, [sl], #2
 802a300:	441c      	add	r4, r3
 802a302:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802a304:	f109 39ff 	add.w	r9, r9, #4294967295
 802a308:	441e      	add	r6, r3
 802a30a:	e73c      	b.n	802a186 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802a30c:	b00f      	add	sp, #60	@ 0x3c
 802a30e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a312 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802a312:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a316:	b085      	sub	sp, #20
 802a318:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802a31c:	9102      	str	r1, [sp, #8]
 802a31e:	2c00      	cmp	r4, #0
 802a320:	fb04 7103 	mla	r1, r4, r3, r7
 802a324:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802a328:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802a32c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802a330:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802a334:	f2c0 811b 	blt.w	802a56e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802a338:	45a6      	cmp	lr, r4
 802a33a:	f340 8118 	ble.w	802a56e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802a33e:	2f00      	cmp	r7, #0
 802a340:	f2c0 8113 	blt.w	802a56a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802a344:	42bb      	cmp	r3, r7
 802a346:	f340 8110 	ble.w	802a56a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802a34a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802a34e:	1c7a      	adds	r2, r7, #1
 802a350:	f100 8110 	bmi.w	802a574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802a354:	4293      	cmp	r3, r2
 802a356:	f340 810d 	ble.w	802a574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802a35a:	2e00      	cmp	r6, #0
 802a35c:	f000 810c 	beq.w	802a578 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 802a360:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802a364:	3401      	adds	r4, #1
 802a366:	f100 810b 	bmi.w	802a580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802a36a:	45a6      	cmp	lr, r4
 802a36c:	f340 8108 	ble.w	802a580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802a370:	2800      	cmp	r0, #0
 802a372:	f000 8108 	beq.w	802a586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802a376:	2f00      	cmp	r7, #0
 802a378:	f2c0 8100 	blt.w	802a57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802a37c:	42bb      	cmp	r3, r7
 802a37e:	f340 80fd 	ble.w	802a57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802a382:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802a386:	3701      	adds	r7, #1
 802a388:	f100 8100 	bmi.w	802a58c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802a38c:	42bb      	cmp	r3, r7
 802a38e:	f340 80fd 	ble.w	802a58c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802a392:	2e00      	cmp	r6, #0
 802a394:	f000 80fc 	beq.w	802a590 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802a398:	3301      	adds	r3, #1
 802a39a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802a39e:	b2b6      	uxth	r6, r6
 802a3a0:	b280      	uxth	r0, r0
 802a3a2:	fb00 fe06 	mul.w	lr, r0, r6
 802a3a6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802a3aa:	0136      	lsls	r6, r6, #4
 802a3ac:	eba6 070e 	sub.w	r7, r6, lr
 802a3b0:	b280      	uxth	r0, r0
 802a3b2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802a3b6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802a3ba:	b2bf      	uxth	r7, r7
 802a3bc:	1a1b      	subs	r3, r3, r0
 802a3be:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802a3c2:	b29b      	uxth	r3, r3
 802a3c4:	fb0a f607 	mul.w	r6, sl, r7
 802a3c8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802a3cc:	fb0b 6603 	mla	r6, fp, r3, r6
 802a3d0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802a3d4:	fb00 6609 	mla	r6, r0, r9, r6
 802a3d8:	fb0e 6608 	mla	r6, lr, r8, r6
 802a3dc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802a3e0:	9600      	str	r6, [sp, #0]
 802a3e2:	2e00      	cmp	r6, #0
 802a3e4:	f000 80be 	beq.w	802a564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802a3e8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a3ec:	fb0b fc0c 	mul.w	ip, fp, ip
 802a3f0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802a3f4:	fb0b f505 	mul.w	r5, fp, r5
 802a3f8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802a3fc:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802a400:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a404:	44dc      	add	ip, fp
 802a406:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a40a:	9501      	str	r5, [sp, #4]
 802a40c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802a410:	9503      	str	r5, [sp, #12]
 802a412:	9d01      	ldr	r5, [sp, #4]
 802a414:	9e02      	ldr	r6, [sp, #8]
 802a416:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802a41a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802a41e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802a422:	fb0a fc0c 	mul.w	ip, sl, ip
 802a426:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802a42a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802a42e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802a432:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a436:	4465      	add	r5, ip
 802a438:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802a43c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802a440:	fb09 fc0c 	mul.w	ip, r9, ip
 802a444:	fb09 f904 	mul.w	r9, r9, r4
 802a448:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 802a44c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802a450:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802a454:	fb08 f404 	mul.w	r4, r8, r4
 802a458:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802a45c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a460:	fb08 f802 	mul.w	r8, r8, r2
 802a464:	fb0a fa01 	mul.w	sl, sl, r1
 802a468:	0a22      	lsrs	r2, r4, #8
 802a46a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802a46e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a472:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802a476:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802a47a:	4414      	add	r4, r2
 802a47c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802a480:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802a484:	0a2d      	lsrs	r5, r5, #8
 802a486:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802a48a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802a48e:	9a03      	ldr	r2, [sp, #12]
 802a490:	8836      	ldrh	r6, [r6, #0]
 802a492:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a496:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802a49a:	437d      	muls	r5, r7
 802a49c:	4461      	add	r1, ip
 802a49e:	0a24      	lsrs	r4, r4, #8
 802a4a0:	fb02 5503 	mla	r5, r2, r3, r5
 802a4a4:	0a09      	lsrs	r1, r1, #8
 802a4a6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802a4aa:	fb04 540e 	mla	r4, r4, lr, r5
 802a4ae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802a4b2:	fb01 4100 	mla	r1, r1, r0, r4
 802a4b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a4ba:	0a09      	lsrs	r1, r1, #8
 802a4bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a4c0:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802a4c4:	fb07 f70a 	mul.w	r7, r7, sl
 802a4c8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802a4cc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802a4d0:	fb03 7101 	mla	r1, r3, r1, r7
 802a4d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a4d8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802a4dc:	fb0e 1e08 	mla	lr, lr, r8, r1
 802a4e0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802a4e4:	fb00 e101 	mla	r1, r0, r1, lr
 802a4e8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 802a4ec:	9a00      	ldr	r2, [sp, #0]
 802a4ee:	b287      	uxth	r7, r0
 802a4f0:	437a      	muls	r2, r7
 802a4f2:	0a09      	lsrs	r1, r1, #8
 802a4f4:	1c53      	adds	r3, r2, #1
 802a4f6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802a4fa:	4321      	orrs	r1, r4
 802a4fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802a500:	1235      	asrs	r5, r6, #8
 802a502:	0c0a      	lsrs	r2, r1, #16
 802a504:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802a508:	b2db      	uxtb	r3, r3
 802a50a:	fb12 f207 	smulbb	r2, r2, r7
 802a50e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802a512:	fb05 2503 	mla	r5, r5, r3, r2
 802a516:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802a51a:	10f2      	asrs	r2, r6, #3
 802a51c:	b2c8      	uxtb	r0, r1
 802a51e:	00f6      	lsls	r6, r6, #3
 802a520:	fb14 f407 	smulbb	r4, r4, r7
 802a524:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802a528:	b2f6      	uxtb	r6, r6
 802a52a:	fb10 f007 	smulbb	r0, r0, r7
 802a52e:	fb02 4203 	mla	r2, r2, r3, r4
 802a532:	b2ad      	uxth	r5, r5
 802a534:	fb06 0303 	mla	r3, r6, r3, r0
 802a538:	b299      	uxth	r1, r3
 802a53a:	b294      	uxth	r4, r2
 802a53c:	1c6b      	adds	r3, r5, #1
 802a53e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802a542:	1c62      	adds	r2, r4, #1
 802a544:	1c4b      	adds	r3, r1, #1
 802a546:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802a54a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802a54e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802a552:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802a556:	0952      	lsrs	r2, r2, #5
 802a558:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a55c:	432b      	orrs	r3, r5
 802a55e:	4313      	orrs	r3, r2
 802a560:	9a02      	ldr	r2, [sp, #8]
 802a562:	8013      	strh	r3, [r2, #0]
 802a564:	b005      	add	sp, #20
 802a566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a56a:	2500      	movs	r5, #0
 802a56c:	e6ef      	b.n	802a34e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802a56e:	2100      	movs	r1, #0
 802a570:	460d      	mov	r5, r1
 802a572:	e6f7      	b.n	802a364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802a574:	2100      	movs	r1, #0
 802a576:	e6f5      	b.n	802a364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802a578:	4631      	mov	r1, r6
 802a57a:	e6f3      	b.n	802a364 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802a57c:	2400      	movs	r4, #0
 802a57e:	e702      	b.n	802a386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 802a580:	2200      	movs	r2, #0
 802a582:	4614      	mov	r4, r2
 802a584:	e70b      	b.n	802a39e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802a586:	4602      	mov	r2, r0
 802a588:	4604      	mov	r4, r0
 802a58a:	e708      	b.n	802a39e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802a58c:	2200      	movs	r2, #0
 802a58e:	e706      	b.n	802a39e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802a590:	4632      	mov	r2, r6
 802a592:	e704      	b.n	802a39e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802a594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802a594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a598:	b09d      	sub	sp, #116	@ 0x74
 802a59a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 802a59e:	9219      	str	r2, [sp, #100]	@ 0x64
 802a5a0:	9307      	str	r3, [sp, #28]
 802a5a2:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 802a5a4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 802a5a8:	931a      	str	r3, [sp, #104]	@ 0x68
 802a5aa:	9117      	str	r1, [sp, #92]	@ 0x5c
 802a5ac:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 802a5b0:	901b      	str	r0, [sp, #108]	@ 0x6c
 802a5b2:	6850      	ldr	r0, [r2, #4]
 802a5b4:	6812      	ldr	r2, [r2, #0]
 802a5b6:	fb00 1303 	mla	r3, r0, r3, r1
 802a5ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802a5be:	930a      	str	r3, [sp, #40]	@ 0x28
 802a5c0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a5c2:	681b      	ldr	r3, [r3, #0]
 802a5c4:	9310      	str	r3, [sp, #64]	@ 0x40
 802a5c6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802a5ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 802a5cc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a5ce:	2b00      	cmp	r3, #0
 802a5d0:	dc03      	bgt.n	802a5da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802a5d2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802a5d4:	2b00      	cmp	r3, #0
 802a5d6:	f340 8375 	ble.w	802acc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802a5da:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a5dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a5e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802a5e4:	1e48      	subs	r0, r1, #1
 802a5e6:	1e57      	subs	r7, r2, #1
 802a5e8:	9b07      	ldr	r3, [sp, #28]
 802a5ea:	2b00      	cmp	r3, #0
 802a5ec:	f340 818e 	ble.w	802a90c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802a5f0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802a5f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 802a5f8:	d406      	bmi.n	802a608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802a5fa:	4584      	cmp	ip, r0
 802a5fc:	da04      	bge.n	802a608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802a5fe:	2b00      	cmp	r3, #0
 802a600:	db02      	blt.n	802a608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802a602:	42bb      	cmp	r3, r7
 802a604:	f2c0 8183 	blt.w	802a90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802a608:	f11c 0c01 	adds.w	ip, ip, #1
 802a60c:	f100 8173 	bmi.w	802a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a610:	4561      	cmp	r1, ip
 802a612:	f2c0 8170 	blt.w	802a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a616:	3301      	adds	r3, #1
 802a618:	f100 816d 	bmi.w	802a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a61c:	429a      	cmp	r2, r3
 802a61e:	f2c0 816a 	blt.w	802a8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802a622:	9b07      	ldr	r3, [sp, #28]
 802a624:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802a626:	9318      	str	r3, [sp, #96]	@ 0x60
 802a628:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a62a:	2b00      	cmp	r3, #0
 802a62c:	f340 818c 	ble.w	802a948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802a630:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 802a632:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802a634:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802a638:	689b      	ldr	r3, [r3, #8]
 802a63a:	1422      	asrs	r2, r4, #16
 802a63c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802a640:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802a644:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802a648:	f100 81cd 	bmi.w	802a9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a64c:	f103 38ff 	add.w	r8, r3, #4294967295
 802a650:	4542      	cmp	r2, r8
 802a652:	f280 81c8 	bge.w	802a9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a656:	f1bc 0f00 	cmp.w	ip, #0
 802a65a:	f2c0 81c4 	blt.w	802a9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a65e:	f10e 38ff 	add.w	r8, lr, #4294967295
 802a662:	45c4      	cmp	ip, r8
 802a664:	f280 81bf 	bge.w	802a9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802a668:	b21b      	sxth	r3, r3
 802a66a:	fb0c 2203 	mla	r2, ip, r3, r2
 802a66e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802a670:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802a674:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802a678:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802a67c:	2800      	cmp	r0, #0
 802a67e:	f000 81a9 	beq.w	802a9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802a682:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802a686:	950c      	str	r5, [sp, #48]	@ 0x30
 802a688:	0e2d      	lsrs	r5, r5, #24
 802a68a:	9513      	str	r5, [sp, #76]	@ 0x4c
 802a68c:	b181      	cbz	r1, 802a6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a68e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802a692:	3b01      	subs	r3, #1
 802a694:	009b      	lsls	r3, r3, #2
 802a696:	3304      	adds	r3, #4
 802a698:	eb08 0c03 	add.w	ip, r8, r3
 802a69c:	f858 3003 	ldr.w	r3, [r8, r3]
 802a6a0:	9308      	str	r3, [sp, #32]
 802a6a2:	0e1b      	lsrs	r3, r3, #24
 802a6a4:	9311      	str	r3, [sp, #68]	@ 0x44
 802a6a6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802a6aa:	930d      	str	r3, [sp, #52]	@ 0x34
 802a6ac:	0e1b      	lsrs	r3, r3, #24
 802a6ae:	9314      	str	r3, [sp, #80]	@ 0x50
 802a6b0:	b280      	uxth	r0, r0
 802a6b2:	b289      	uxth	r1, r1
 802a6b4:	fb00 f901 	mul.w	r9, r0, r1
 802a6b8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802a6bc:	0100      	lsls	r0, r0, #4
 802a6be:	eba0 0809 	sub.w	r8, r0, r9
 802a6c2:	b289      	uxth	r1, r1
 802a6c4:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802a6c8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802a6ca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a6cc:	fa1f f888 	uxth.w	r8, r8
 802a6d0:	1a5b      	subs	r3, r3, r1
 802a6d2:	b29b      	uxth	r3, r3
 802a6d4:	fb08 f000 	mul.w	r0, r8, r0
 802a6d8:	fb03 000e 	mla	r0, r3, lr, r0
 802a6dc:	fb01 0005 	mla	r0, r1, r5, r0
 802a6e0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a6e2:	fb09 0005 	mla	r0, r9, r5, r0
 802a6e6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802a6ea:	2800      	cmp	r0, #0
 802a6ec:	f000 80fa 	beq.w	802a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a6f0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802a6f4:	d01b      	beq.n	802a72e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802a6f6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802a6fa:	fb0e fa0a 	mul.w	sl, lr, sl
 802a6fe:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a702:	fb0e fe02 	mul.w	lr, lr, r2
 802a706:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802a70a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a70e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802a712:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802a716:	4452      	add	r2, sl
 802a718:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802a71c:	0a12      	lsrs	r2, r2, #8
 802a71e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a722:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802a726:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802a72a:	ea42 020c 	orr.w	r2, r2, ip
 802a72e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a730:	2dff      	cmp	r5, #255	@ 0xff
 802a732:	d021      	beq.n	802a778 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802a734:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a736:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a73a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a73c:	fb05 fb0b 	mul.w	fp, r5, fp
 802a740:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a742:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a746:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802a748:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a74c:	fb05 fa0a 	mul.w	sl, r5, sl
 802a750:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a754:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a758:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a75c:	44de      	add	lr, fp
 802a75e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a762:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a766:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a76a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a76e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a772:	ea4e 050a 	orr.w	r5, lr, sl
 802a776:	950c      	str	r5, [sp, #48]	@ 0x30
 802a778:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a77a:	2dff      	cmp	r5, #255	@ 0xff
 802a77c:	d021      	beq.n	802a7c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802a77e:	9d08      	ldr	r5, [sp, #32]
 802a780:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a784:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a786:	fb05 fb0b 	mul.w	fp, r5, fp
 802a78a:	9d08      	ldr	r5, [sp, #32]
 802a78c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a790:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802a792:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a796:	fb05 fa0a 	mul.w	sl, r5, sl
 802a79a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a79e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a7a2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a7a6:	44de      	add	lr, fp
 802a7a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a7ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a7b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a7b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a7b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a7bc:	ea4e 050a 	orr.w	r5, lr, sl
 802a7c0:	9508      	str	r5, [sp, #32]
 802a7c2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a7c4:	2dff      	cmp	r5, #255	@ 0xff
 802a7c6:	d021      	beq.n	802a80c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802a7c8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a7ca:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802a7ce:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a7d0:	fb05 fb0b 	mul.w	fp, r5, fp
 802a7d4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a7d6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802a7da:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802a7dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802a7e0:	fb05 fa0a 	mul.w	sl, r5, sl
 802a7e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a7e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802a7ec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802a7f0:	44de      	add	lr, fp
 802a7f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802a7f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a7fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802a7fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802a802:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802a806:	ea4e 050a 	orr.w	r5, lr, sl
 802a80a:	950d      	str	r5, [sp, #52]	@ 0x34
 802a80c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a80e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802a812:	9d08      	ldr	r5, [sp, #32]
 802a814:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802a818:	fb08 fc0c 	mul.w	ip, r8, ip
 802a81c:	fb03 cc0e 	mla	ip, r3, lr, ip
 802a820:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802a824:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802a826:	fb01 cc0e 	mla	ip, r1, lr, ip
 802a82a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802a82e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802a830:	fb09 cc0e 	mla	ip, r9, lr, ip
 802a834:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802a838:	fb08 f80e 	mul.w	r8, r8, lr
 802a83c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802a840:	fb03 8202 	mla	r2, r3, r2, r8
 802a844:	9b08      	ldr	r3, [sp, #32]
 802a846:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802a848:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 802a84c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802a84e:	fb01 220a 	mla	r2, r1, sl, r2
 802a852:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 802a856:	fb09 2901 	mla	r9, r9, r1, r2
 802a85a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802a85c:	883b      	ldrh	r3, [r7, #0]
 802a85e:	4342      	muls	r2, r0
 802a860:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a864:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a868:	1c50      	adds	r0, r2, #1
 802a86a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802a86e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802a872:	ea4c 0c09 	orr.w	ip, ip, r9
 802a876:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802a87a:	1219      	asrs	r1, r3, #8
 802a87c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802a880:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802a884:	b2c0      	uxtb	r0, r0
 802a886:	fb12 f205 	smulbb	r2, r2, r5
 802a88a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802a88e:	fb01 2100 	mla	r1, r1, r0, r2
 802a892:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802a896:	10da      	asrs	r2, r3, #3
 802a898:	fa5f fc8c 	uxtb.w	ip, ip
 802a89c:	00db      	lsls	r3, r3, #3
 802a89e:	fb1c fc05 	smulbb	ip, ip, r5
 802a8a2:	b2db      	uxtb	r3, r3
 802a8a4:	b289      	uxth	r1, r1
 802a8a6:	fb03 c300 	mla	r3, r3, r0, ip
 802a8aa:	fa1f fc83 	uxth.w	ip, r3
 802a8ae:	1c4b      	adds	r3, r1, #1
 802a8b0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802a8b4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802a8b8:	fb1e fe05 	smulbb	lr, lr, r5
 802a8bc:	f10c 0301 	add.w	r3, ip, #1
 802a8c0:	fb02 e200 	mla	r2, r2, r0, lr
 802a8c4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802a8c8:	b292      	uxth	r2, r2
 802a8ca:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802a8ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802a8d2:	430b      	orrs	r3, r1
 802a8d4:	1c51      	adds	r1, r2, #1
 802a8d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802a8da:	0952      	lsrs	r2, r2, #5
 802a8dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802a8e0:	4313      	orrs	r3, r2
 802a8e2:	803b      	strh	r3, [r7, #0]
 802a8e4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802a8e6:	441c      	add	r4, r3
 802a8e8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a8ea:	441e      	add	r6, r3
 802a8ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802a8ee:	3b01      	subs	r3, #1
 802a8f0:	3702      	adds	r7, #2
 802a8f2:	9318      	str	r3, [sp, #96]	@ 0x60
 802a8f4:	e698      	b.n	802a628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802a8f6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802a8f8:	441c      	add	r4, r3
 802a8fa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802a8fc:	441e      	add	r6, r3
 802a8fe:	9b07      	ldr	r3, [sp, #28]
 802a900:	3b01      	subs	r3, #1
 802a902:	9307      	str	r3, [sp, #28]
 802a904:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a906:	3302      	adds	r3, #2
 802a908:	930a      	str	r3, [sp, #40]	@ 0x28
 802a90a:	e66d      	b.n	802a5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802a90c:	d023      	beq.n	802a956 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802a90e:	9b07      	ldr	r3, [sp, #28]
 802a910:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802a912:	3b01      	subs	r3, #1
 802a914:	fb00 4003 	mla	r0, r0, r3, r4
 802a918:	1400      	asrs	r0, r0, #16
 802a91a:	f53f ae82 	bmi.w	802a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a91e:	3901      	subs	r1, #1
 802a920:	4288      	cmp	r0, r1
 802a922:	f6bf ae7e 	bge.w	802a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a926:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802a928:	fb01 6303 	mla	r3, r1, r3, r6
 802a92c:	141b      	asrs	r3, r3, #16
 802a92e:	f53f ae78 	bmi.w	802a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a932:	3a01      	subs	r2, #1
 802a934:	4293      	cmp	r3, r2
 802a936:	f6bf ae74 	bge.w	802a622 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a93a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802a93e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802a942:	f1bb 0f00 	cmp.w	fp, #0
 802a946:	dc6c      	bgt.n	802aa22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802a948:	9b07      	ldr	r3, [sp, #28]
 802a94a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802a94e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802a950:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802a954:	930a      	str	r3, [sp, #40]	@ 0x28
 802a956:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a958:	2b00      	cmp	r3, #0
 802a95a:	f340 81b3 	ble.w	802acc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802a95e:	ee30 0a04 	vadd.f32	s0, s0, s8
 802a962:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802a966:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a96a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a96c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802a970:	ee31 1a05 	vadd.f32	s2, s2, s10
 802a974:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802a978:	eef0 6a62 	vmov.f32	s13, s5
 802a97c:	ee61 7a27 	vmul.f32	s15, s2, s15
 802a980:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a984:	ee77 2a62 	vsub.f32	s5, s14, s5
 802a988:	ee16 4a90 	vmov	r4, s13
 802a98c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802a990:	eef0 6a43 	vmov.f32	s13, s6
 802a994:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802a998:	ee12 2a90 	vmov	r2, s5
 802a99c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802a9a0:	fb92 f3f3 	sdiv	r3, r2, r3
 802a9a4:	ee13 2a10 	vmov	r2, s6
 802a9a8:	9329      	str	r3, [sp, #164]	@ 0xa4
 802a9aa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a9ac:	fb92 f3f3 	sdiv	r3, r2, r3
 802a9b0:	932a      	str	r3, [sp, #168]	@ 0xa8
 802a9b2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802a9b4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802a9b6:	3b01      	subs	r3, #1
 802a9b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a9bc:	9317      	str	r3, [sp, #92]	@ 0x5c
 802a9be:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802a9c0:	bf08      	it	eq
 802a9c2:	4613      	moveq	r3, r2
 802a9c4:	ee16 6a90 	vmov	r6, s13
 802a9c8:	9307      	str	r3, [sp, #28]
 802a9ca:	eeb0 3a67 	vmov.f32	s6, s15
 802a9ce:	eef0 2a47 	vmov.f32	s5, s14
 802a9d2:	e5fb      	b.n	802a5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802a9d4:	2900      	cmp	r1, #0
 802a9d6:	f43f ae6b 	beq.w	802a6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a9da:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802a9de:	9308      	str	r3, [sp, #32]
 802a9e0:	0e1b      	lsrs	r3, r3, #24
 802a9e2:	9311      	str	r3, [sp, #68]	@ 0x44
 802a9e4:	e664      	b.n	802a6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802a9e6:	f112 0801 	adds.w	r8, r2, #1
 802a9ea:	f53f af7b 	bmi.w	802a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a9ee:	4543      	cmp	r3, r8
 802a9f0:	f6ff af78 	blt.w	802a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a9f4:	f11c 0801 	adds.w	r8, ip, #1
 802a9f8:	f53f af74 	bmi.w	802a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802a9fc:	45c6      	cmp	lr, r8
 802a9fe:	f6ff af71 	blt.w	802a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802aa02:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 802aa04:	9201      	str	r2, [sp, #4]
 802aa06:	fa0f f28e 	sxth.w	r2, lr
 802aa0a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802aa0e:	e9cd c002 	strd	ip, r0, [sp, #8]
 802aa12:	9200      	str	r2, [sp, #0]
 802aa14:	b21b      	sxth	r3, r3
 802aa16:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802aa18:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802aa1a:	4639      	mov	r1, r7
 802aa1c:	f7ff fc79 	bl	802a312 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802aa20:	e760      	b.n	802a8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802aa22:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802aa24:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802aa26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802aa2a:	1427      	asrs	r7, r4, #16
 802aa2c:	1433      	asrs	r3, r6, #16
 802aa2e:	fb01 7303 	mla	r3, r1, r3, r7
 802aa32:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802aa36:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802aa3a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802aa3e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802aa42:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802aa46:	2a00      	cmp	r2, #0
 802aa48:	f000 8133 	beq.w	802acb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802aa4c:	687d      	ldr	r5, [r7, #4]
 802aa4e:	950e      	str	r5, [sp, #56]	@ 0x38
 802aa50:	0e2d      	lsrs	r5, r5, #24
 802aa52:	9515      	str	r5, [sp, #84]	@ 0x54
 802aa54:	b178      	cbz	r0, 802aa76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802aa56:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 802aa5a:	3901      	subs	r1, #1
 802aa5c:	0089      	lsls	r1, r1, #2
 802aa5e:	3104      	adds	r1, #4
 802aa60:	eb07 0e01 	add.w	lr, r7, r1
 802aa64:	5879      	ldr	r1, [r7, r1]
 802aa66:	9109      	str	r1, [sp, #36]	@ 0x24
 802aa68:	0e09      	lsrs	r1, r1, #24
 802aa6a:	9112      	str	r1, [sp, #72]	@ 0x48
 802aa6c:	f8de 1004 	ldr.w	r1, [lr, #4]
 802aa70:	910f      	str	r1, [sp, #60]	@ 0x3c
 802aa72:	0e09      	lsrs	r1, r1, #24
 802aa74:	9116      	str	r1, [sp, #88]	@ 0x58
 802aa76:	b292      	uxth	r2, r2
 802aa78:	b280      	uxth	r0, r0
 802aa7a:	fb02 f800 	mul.w	r8, r2, r0
 802aa7e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802aa82:	0112      	lsls	r2, r2, #4
 802aa84:	eba2 0e08 	sub.w	lr, r2, r8
 802aa88:	b280      	uxth	r0, r0
 802aa8a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802aa8e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 802aa90:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802aa92:	fa1f fe8e 	uxth.w	lr, lr
 802aa96:	1a12      	subs	r2, r2, r0
 802aa98:	b292      	uxth	r2, r2
 802aa9a:	fb0e f101 	mul.w	r1, lr, r1
 802aa9e:	fb02 110c 	mla	r1, r2, ip, r1
 802aaa2:	fb00 1105 	mla	r1, r0, r5, r1
 802aaa6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802aaa8:	fb08 1105 	mla	r1, r8, r5, r1
 802aaac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802aab0:	2900      	cmp	r1, #0
 802aab2:	f000 80f5 	beq.w	802aca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802aab6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802aaba:	d019      	beq.n	802aaf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802aabc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802aac0:	fb0c fa0a 	mul.w	sl, ip, sl
 802aac4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802aac8:	fb0c fc03 	mul.w	ip, ip, r3
 802aacc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802aad0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802aad4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802aad8:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802aadc:	4453      	add	r3, sl
 802aade:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802aae2:	0a1b      	lsrs	r3, r3, #8
 802aae4:	0a3f      	lsrs	r7, r7, #8
 802aae6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802aaea:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802aaee:	433b      	orrs	r3, r7
 802aaf0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802aaf2:	2dff      	cmp	r5, #255	@ 0xff
 802aaf4:	d020      	beq.n	802ab38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802aaf6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802aaf8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802aafc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802aafe:	436f      	muls	r7, r5
 802ab00:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802ab02:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802ab06:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802ab08:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802ab0c:	fb05 fa0a 	mul.w	sl, r5, sl
 802ab10:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802ab14:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ab18:	44bc      	add	ip, r7
 802ab1a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802ab1e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802ab22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ab26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ab2a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ab2e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ab32:	ea4c 050a 	orr.w	r5, ip, sl
 802ab36:	950e      	str	r5, [sp, #56]	@ 0x38
 802ab38:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802ab3a:	2dff      	cmp	r5, #255	@ 0xff
 802ab3c:	d020      	beq.n	802ab80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802ab3e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802ab40:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802ab44:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802ab46:	436f      	muls	r7, r5
 802ab48:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802ab4a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802ab4e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802ab50:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802ab54:	fb05 fa0a 	mul.w	sl, r5, sl
 802ab58:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802ab5c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ab60:	44bc      	add	ip, r7
 802ab62:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802ab66:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802ab6a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ab6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ab72:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802ab76:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ab7a:	ea4c 050a 	orr.w	r5, ip, sl
 802ab7e:	9509      	str	r5, [sp, #36]	@ 0x24
 802ab80:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802ab82:	2dff      	cmp	r5, #255	@ 0xff
 802ab84:	d020      	beq.n	802abc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802ab86:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802ab88:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802ab8c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802ab8e:	436f      	muls	r7, r5
 802ab90:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802ab92:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802ab96:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802ab98:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802ab9c:	fb05 fa0a 	mul.w	sl, r5, sl
 802aba0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802aba4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802aba8:	44bc      	add	ip, r7
 802abaa:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802abae:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802abb2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802abb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802abba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802abbe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802abc2:	ea4c 050a 	orr.w	r5, ip, sl
 802abc6:	950f      	str	r5, [sp, #60]	@ 0x3c
 802abc8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802abca:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802abce:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802abd0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802abd4:	fb0e f707 	mul.w	r7, lr, r7
 802abd8:	fb02 770c 	mla	r7, r2, ip, r7
 802abdc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802abe0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802abe2:	fb00 770c 	mla	r7, r0, ip, r7
 802abe6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802abea:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802abec:	fb08 770c 	mla	r7, r8, ip, r7
 802abf0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802abf4:	fb0e fe0c 	mul.w	lr, lr, ip
 802abf8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802abfc:	fb02 e303 	mla	r3, r2, r3, lr
 802ac00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802ac02:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802ac04:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802ac08:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802ac0a:	fb00 330a 	mla	r3, r0, sl, r3
 802ac0e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 802ac12:	fb08 3c0c 	mla	ip, r8, ip, r3
 802ac16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802ac18:	f8b9 0000 	ldrh.w	r0, [r9]
 802ac1c:	4359      	muls	r1, r3
 802ac1e:	0a3f      	lsrs	r7, r7, #8
 802ac20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802ac24:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802ac28:	1c4b      	adds	r3, r1, #1
 802ac2a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802ac2e:	ea47 070c 	orr.w	r7, r7, ip
 802ac32:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802ac36:	1202      	asrs	r2, r0, #8
 802ac38:	0c3b      	lsrs	r3, r7, #16
 802ac3a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802ac3e:	b2c9      	uxtb	r1, r1
 802ac40:	fb13 f305 	smulbb	r3, r3, r5
 802ac44:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802ac48:	fb02 3201 	mla	r2, r2, r1, r3
 802ac4c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802ac50:	10c3      	asrs	r3, r0, #3
 802ac52:	b2ff      	uxtb	r7, r7
 802ac54:	00c0      	lsls	r0, r0, #3
 802ac56:	b2c0      	uxtb	r0, r0
 802ac58:	fb17 f705 	smulbb	r7, r7, r5
 802ac5c:	fb00 7001 	mla	r0, r0, r1, r7
 802ac60:	b292      	uxth	r2, r2
 802ac62:	fb1c fc05 	smulbb	ip, ip, r5
 802ac66:	b280      	uxth	r0, r0
 802ac68:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802ac6c:	fb03 c301 	mla	r3, r3, r1, ip
 802ac70:	1c51      	adds	r1, r2, #1
 802ac72:	f100 0c01 	add.w	ip, r0, #1
 802ac76:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802ac7a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802ac7e:	b29b      	uxth	r3, r3
 802ac80:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802ac84:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802ac88:	ea4c 0202 	orr.w	r2, ip, r2
 802ac8c:	f103 0c01 	add.w	ip, r3, #1
 802ac90:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802ac94:	095b      	lsrs	r3, r3, #5
 802ac96:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802ac9a:	431a      	orrs	r2, r3
 802ac9c:	f8a9 2000 	strh.w	r2, [r9]
 802aca0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802aca2:	441c      	add	r4, r3
 802aca4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802aca6:	f109 0902 	add.w	r9, r9, #2
 802acaa:	441e      	add	r6, r3
 802acac:	f10b 3bff 	add.w	fp, fp, #4294967295
 802acb0:	e647      	b.n	802a942 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802acb2:	2800      	cmp	r0, #0
 802acb4:	f43f aedf 	beq.w	802aa76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802acb8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802acbc:	9109      	str	r1, [sp, #36]	@ 0x24
 802acbe:	0e09      	lsrs	r1, r1, #24
 802acc0:	9112      	str	r1, [sp, #72]	@ 0x48
 802acc2:	e6d8      	b.n	802aa76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802acc4:	b01d      	add	sp, #116	@ 0x74
 802acc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802acca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802acca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802acce:	b085      	sub	sp, #20
 802acd0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802acd4:	9102      	str	r1, [sp, #8]
 802acd6:	2c00      	cmp	r4, #0
 802acd8:	fb04 7103 	mla	r1, r4, r3, r7
 802acdc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802ace0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802ace4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802ace8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802acec:	f2c0 810c 	blt.w	802af08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802acf0:	45a6      	cmp	lr, r4
 802acf2:	f340 8109 	ble.w	802af08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802acf6:	2f00      	cmp	r7, #0
 802acf8:	f2c0 8104 	blt.w	802af04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802acfc:	42bb      	cmp	r3, r7
 802acfe:	f340 8101 	ble.w	802af04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802ad02:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802ad06:	1c7a      	adds	r2, r7, #1
 802ad08:	f100 8101 	bmi.w	802af0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802ad0c:	4293      	cmp	r3, r2
 802ad0e:	f340 80fe 	ble.w	802af0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802ad12:	2e00      	cmp	r6, #0
 802ad14:	f000 80fd 	beq.w	802af12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802ad18:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802ad1c:	3401      	adds	r4, #1
 802ad1e:	f100 80fc 	bmi.w	802af1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802ad22:	45a6      	cmp	lr, r4
 802ad24:	f340 80f9 	ble.w	802af1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802ad28:	2800      	cmp	r0, #0
 802ad2a:	f000 80f9 	beq.w	802af20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802ad2e:	2f00      	cmp	r7, #0
 802ad30:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802ad34:	f2c0 80ef 	blt.w	802af16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802ad38:	42bb      	cmp	r3, r7
 802ad3a:	f340 80ec 	ble.w	802af16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802ad3e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802ad42:	3701      	adds	r7, #1
 802ad44:	f100 80ef 	bmi.w	802af26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802ad48:	42bb      	cmp	r3, r7
 802ad4a:	f340 80ec 	ble.w	802af26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802ad4e:	2e00      	cmp	r6, #0
 802ad50:	f000 80eb 	beq.w	802af2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802ad54:	6852      	ldr	r2, [r2, #4]
 802ad56:	b2b6      	uxth	r6, r6
 802ad58:	b280      	uxth	r0, r0
 802ad5a:	fb00 fe06 	mul.w	lr, r0, r6
 802ad5e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802ad62:	0136      	lsls	r6, r6, #4
 802ad64:	eba6 070e 	sub.w	r7, r6, lr
 802ad68:	b280      	uxth	r0, r0
 802ad6a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802ad6e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802ad72:	b2bf      	uxth	r7, r7
 802ad74:	1a1b      	subs	r3, r3, r0
 802ad76:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802ad7a:	b29b      	uxth	r3, r3
 802ad7c:	fb07 f60a 	mul.w	r6, r7, sl
 802ad80:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802ad84:	fb0b 6603 	mla	r6, fp, r3, r6
 802ad88:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802ad8c:	fb00 6609 	mla	r6, r0, r9, r6
 802ad90:	fb0e 6608 	mla	r6, lr, r8, r6
 802ad94:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802ad98:	9600      	str	r6, [sp, #0]
 802ad9a:	2e00      	cmp	r6, #0
 802ad9c:	f000 80af 	beq.w	802aefe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802ada0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802ada4:	fb0b fc0c 	mul.w	ip, fp, ip
 802ada8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802adac:	fb0b f505 	mul.w	r5, fp, r5
 802adb0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802adb4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802adb8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802adbc:	44dc      	add	ip, fp
 802adbe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802adc2:	9501      	str	r5, [sp, #4]
 802adc4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802adc8:	9503      	str	r5, [sp, #12]
 802adca:	9d01      	ldr	r5, [sp, #4]
 802adcc:	9e02      	ldr	r6, [sp, #8]
 802adce:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802add2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802add6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802adda:	fb0a fc0c 	mul.w	ip, sl, ip
 802adde:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802ade2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802ade6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802adea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802adee:	4465      	add	r5, ip
 802adf0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802adf4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802adf8:	fb09 fc0c 	mul.w	ip, r9, ip
 802adfc:	fb09 f904 	mul.w	r9, r9, r4
 802ae00:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 802ae04:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802ae08:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802ae0c:	fb08 f404 	mul.w	r4, r8, r4
 802ae10:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802ae14:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802ae18:	fb08 f802 	mul.w	r8, r8, r2
 802ae1c:	fb0a fa01 	mul.w	sl, sl, r1
 802ae20:	0a22      	lsrs	r2, r4, #8
 802ae22:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802ae26:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802ae2a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802ae2e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802ae32:	4414      	add	r4, r2
 802ae34:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802ae38:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802ae3c:	0a2d      	lsrs	r5, r5, #8
 802ae3e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802ae42:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802ae46:	9a03      	ldr	r2, [sp, #12]
 802ae48:	8836      	ldrh	r6, [r6, #0]
 802ae4a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ae4e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802ae52:	437d      	muls	r5, r7
 802ae54:	4461      	add	r1, ip
 802ae56:	0a24      	lsrs	r4, r4, #8
 802ae58:	fb02 5503 	mla	r5, r2, r3, r5
 802ae5c:	0a09      	lsrs	r1, r1, #8
 802ae5e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802ae62:	fb04 540e 	mla	r4, r4, lr, r5
 802ae66:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802ae6a:	fb01 4100 	mla	r1, r1, r0, r4
 802ae6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802ae72:	0a09      	lsrs	r1, r1, #8
 802ae74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802ae78:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802ae7c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802ae80:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802ae84:	fb07 f70a 	mul.w	r7, r7, sl
 802ae88:	fb03 7101 	mla	r1, r3, r1, r7
 802ae8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802ae90:	9b00      	ldr	r3, [sp, #0]
 802ae92:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802ae96:	fb0e 1e08 	mla	lr, lr, r8, r1
 802ae9a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802ae9e:	fb00 e101 	mla	r1, r0, r1, lr
 802aea2:	43da      	mvns	r2, r3
 802aea4:	1233      	asrs	r3, r6, #8
 802aea6:	b2d2      	uxtb	r2, r2
 802aea8:	10f0      	asrs	r0, r6, #3
 802aeaa:	0a09      	lsrs	r1, r1, #8
 802aeac:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802aeb0:	00f6      	lsls	r6, r6, #3
 802aeb2:	4353      	muls	r3, r2
 802aeb4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802aeb8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802aebc:	b2f6      	uxtb	r6, r6
 802aebe:	4321      	orrs	r1, r4
 802aec0:	4350      	muls	r0, r2
 802aec2:	4356      	muls	r6, r2
 802aec4:	1c5a      	adds	r2, r3, #1
 802aec6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802aeca:	0c0b      	lsrs	r3, r1, #16
 802aecc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802aed0:	1c42      	adds	r2, r0, #1
 802aed2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802aed6:	0a0a      	lsrs	r2, r1, #8
 802aed8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802aedc:	021b      	lsls	r3, r3, #8
 802aede:	00d2      	lsls	r2, r2, #3
 802aee0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802aee4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802aee8:	4313      	orrs	r3, r2
 802aeea:	1c72      	adds	r2, r6, #1
 802aeec:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802aef0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802aef4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802aef8:	4319      	orrs	r1, r3
 802aefa:	9b02      	ldr	r3, [sp, #8]
 802aefc:	8019      	strh	r1, [r3, #0]
 802aefe:	b005      	add	sp, #20
 802af00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802af04:	2500      	movs	r5, #0
 802af06:	e6fe      	b.n	802ad06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802af08:	2100      	movs	r1, #0
 802af0a:	460d      	mov	r5, r1
 802af0c:	e706      	b.n	802ad1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802af0e:	2100      	movs	r1, #0
 802af10:	e704      	b.n	802ad1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802af12:	4631      	mov	r1, r6
 802af14:	e702      	b.n	802ad1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802af16:	2400      	movs	r4, #0
 802af18:	e713      	b.n	802ad42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802af1a:	2200      	movs	r2, #0
 802af1c:	4614      	mov	r4, r2
 802af1e:	e71a      	b.n	802ad56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802af20:	4602      	mov	r2, r0
 802af22:	4604      	mov	r4, r0
 802af24:	e717      	b.n	802ad56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802af26:	2200      	movs	r2, #0
 802af28:	e715      	b.n	802ad56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802af2a:	4632      	mov	r2, r6
 802af2c:	e713      	b.n	802ad56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0802af30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802af30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802af34:	b09b      	sub	sp, #108	@ 0x6c
 802af36:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 802af3a:	9218      	str	r2, [sp, #96]	@ 0x60
 802af3c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802af3e:	9116      	str	r1, [sp, #88]	@ 0x58
 802af40:	9307      	str	r3, [sp, #28]
 802af42:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802af46:	9019      	str	r0, [sp, #100]	@ 0x64
 802af48:	6850      	ldr	r0, [r2, #4]
 802af4a:	6812      	ldr	r2, [r2, #0]
 802af4c:	fb00 1303 	mla	r3, r0, r3, r1
 802af50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802af54:	930a      	str	r3, [sp, #40]	@ 0x28
 802af56:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802af58:	681b      	ldr	r3, [r3, #0]
 802af5a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802af5c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802af5e:	2b00      	cmp	r3, #0
 802af60:	dc03      	bgt.n	802af6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802af62:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802af64:	2b00      	cmp	r3, #0
 802af66:	f340 8386 	ble.w	802b676 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802af6a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802af6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802af70:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802af74:	1e48      	subs	r0, r1, #1
 802af76:	1e57      	subs	r7, r2, #1
 802af78:	9b07      	ldr	r3, [sp, #28]
 802af7a:	2b00      	cmp	r3, #0
 802af7c:	f340 8166 	ble.w	802b24c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802af80:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802af84:	ea4f 4326 	mov.w	r3, r6, asr #16
 802af88:	d406      	bmi.n	802af98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802af8a:	4584      	cmp	ip, r0
 802af8c:	da04      	bge.n	802af98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802af8e:	2b00      	cmp	r3, #0
 802af90:	db02      	blt.n	802af98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802af92:	42bb      	cmp	r3, r7
 802af94:	f2c0 815b 	blt.w	802b24e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802af98:	f11c 0c01 	adds.w	ip, ip, #1
 802af9c:	f100 814b 	bmi.w	802b236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802afa0:	4561      	cmp	r1, ip
 802afa2:	f2c0 8148 	blt.w	802b236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802afa6:	3301      	adds	r3, #1
 802afa8:	f100 8145 	bmi.w	802b236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802afac:	429a      	cmp	r2, r3
 802afae:	f2c0 8142 	blt.w	802b236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802afb2:	9b07      	ldr	r3, [sp, #28]
 802afb4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802afb6:	9317      	str	r3, [sp, #92]	@ 0x5c
 802afb8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802afba:	2b00      	cmp	r3, #0
 802afbc:	f340 8165 	ble.w	802b28a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802afc0:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 802afc2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802afc4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802afc8:	689b      	ldr	r3, [r3, #8]
 802afca:	1422      	asrs	r2, r4, #16
 802afcc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802afd0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802afd4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802afd8:	f100 81d5 	bmi.w	802b386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802afdc:	f103 38ff 	add.w	r8, r3, #4294967295
 802afe0:	4542      	cmp	r2, r8
 802afe2:	f280 81d0 	bge.w	802b386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802afe6:	f1bc 0f00 	cmp.w	ip, #0
 802afea:	f2c0 81cc 	blt.w	802b386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802afee:	f10e 38ff 	add.w	r8, lr, #4294967295
 802aff2:	45c4      	cmp	ip, r8
 802aff4:	f280 81c7 	bge.w	802b386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802aff8:	b21b      	sxth	r3, r3
 802affa:	fb0c 2203 	mla	r2, ip, r3, r2
 802affe:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802b000:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802b004:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802b008:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802b00c:	2900      	cmp	r1, #0
 802b00e:	f000 8182 	beq.w	802b316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802b012:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802b016:	950b      	str	r5, [sp, #44]	@ 0x2c
 802b018:	0e2d      	lsrs	r5, r5, #24
 802b01a:	9512      	str	r5, [sp, #72]	@ 0x48
 802b01c:	b180      	cbz	r0, 802b040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802b01e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802b022:	3b01      	subs	r3, #1
 802b024:	009b      	lsls	r3, r3, #2
 802b026:	3304      	adds	r3, #4
 802b028:	eb08 0c03 	add.w	ip, r8, r3
 802b02c:	f858 3003 	ldr.w	r3, [r8, r3]
 802b030:	9308      	str	r3, [sp, #32]
 802b032:	0e1b      	lsrs	r3, r3, #24
 802b034:	9310      	str	r3, [sp, #64]	@ 0x40
 802b036:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802b03a:	930c      	str	r3, [sp, #48]	@ 0x30
 802b03c:	0e1b      	lsrs	r3, r3, #24
 802b03e:	9313      	str	r3, [sp, #76]	@ 0x4c
 802b040:	b289      	uxth	r1, r1
 802b042:	b280      	uxth	r0, r0
 802b044:	fb01 f900 	mul.w	r9, r1, r0
 802b048:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802b04c:	0109      	lsls	r1, r1, #4
 802b04e:	eba1 0809 	sub.w	r8, r1, r9
 802b052:	b280      	uxth	r0, r0
 802b054:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802b058:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802b05a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b05c:	fa1f f888 	uxth.w	r8, r8
 802b060:	1a09      	subs	r1, r1, r0
 802b062:	b289      	uxth	r1, r1
 802b064:	fb08 f303 	mul.w	r3, r8, r3
 802b068:	fb01 330e 	mla	r3, r1, lr, r3
 802b06c:	fb00 3305 	mla	r3, r0, r5, r3
 802b070:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802b072:	fb09 3305 	mla	r3, r9, r5, r3
 802b076:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b07a:	2b00      	cmp	r3, #0
 802b07c:	f000 80d2 	beq.w	802b224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b080:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802b084:	d01b      	beq.n	802b0be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802b086:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802b08a:	fb0e fa0a 	mul.w	sl, lr, sl
 802b08e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b092:	fb0e fe02 	mul.w	lr, lr, r2
 802b096:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802b09a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802b09e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802b0a2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802b0a6:	4452      	add	r2, sl
 802b0a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802b0ac:	0a12      	lsrs	r2, r2, #8
 802b0ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b0b2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802b0b6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b0ba:	ea42 020c 	orr.w	r2, r2, ip
 802b0be:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b0c0:	2dff      	cmp	r5, #255	@ 0xff
 802b0c2:	d021      	beq.n	802b108 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802b0c4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b0c6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802b0ca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b0cc:	fb05 fb0b 	mul.w	fp, r5, fp
 802b0d0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b0d2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b0d6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802b0d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b0dc:	fb05 fa0a 	mul.w	sl, r5, sl
 802b0e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b0e4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b0e8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802b0ec:	44de      	add	lr, fp
 802b0ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b0f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b0f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b0fa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b0fe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b102:	ea4e 050a 	orr.w	r5, lr, sl
 802b106:	950b      	str	r5, [sp, #44]	@ 0x2c
 802b108:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b10a:	2dff      	cmp	r5, #255	@ 0xff
 802b10c:	d021      	beq.n	802b152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802b10e:	9d08      	ldr	r5, [sp, #32]
 802b110:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802b114:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b116:	fb05 fb0b 	mul.w	fp, r5, fp
 802b11a:	9d08      	ldr	r5, [sp, #32]
 802b11c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802b120:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b122:	fb05 fa0e 	mul.w	sl, r5, lr
 802b126:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b12a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b12e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b132:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802b136:	44de      	add	lr, fp
 802b138:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b13c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b140:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b144:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b148:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b14c:	ea4e 050a 	orr.w	r5, lr, sl
 802b150:	9508      	str	r5, [sp, #32]
 802b152:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802b154:	2dff      	cmp	r5, #255	@ 0xff
 802b156:	d021      	beq.n	802b19c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802b158:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b15a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802b15e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802b160:	fb05 fb0b 	mul.w	fp, r5, fp
 802b164:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b166:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b16a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802b16c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b170:	fb05 fa0a 	mul.w	sl, r5, sl
 802b174:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b178:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802b17c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802b180:	44de      	add	lr, fp
 802b182:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b186:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b18a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b18e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802b192:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b196:	ea4e 050a 	orr.w	r5, lr, sl
 802b19a:	950c      	str	r5, [sp, #48]	@ 0x30
 802b19c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b19e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802b1a2:	9d08      	ldr	r5, [sp, #32]
 802b1a4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802b1a8:	fb08 fc0c 	mul.w	ip, r8, ip
 802b1ac:	fb01 cc0e 	mla	ip, r1, lr, ip
 802b1b0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802b1b4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802b1b6:	fb00 cc0e 	mla	ip, r0, lr, ip
 802b1ba:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802b1be:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802b1c0:	fb09 cc0e 	mla	ip, r9, lr, ip
 802b1c4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802b1c8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802b1cc:	fb08 f80e 	mul.w	r8, r8, lr
 802b1d0:	fb01 8202 	mla	r2, r1, r2, r8
 802b1d4:	9908      	ldr	r1, [sp, #32]
 802b1d6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802b1da:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802b1dc:	fb00 220a 	mla	r2, r0, sl, r2
 802b1e0:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 802b1e4:	fb09 2900 	mla	r9, r9, r0, r2
 802b1e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b1ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802b1f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b1f4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802b1f8:	ea4c 0c09 	orr.w	ip, ip, r9
 802b1fc:	2bff      	cmp	r3, #255	@ 0xff
 802b1fe:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802b202:	f040 8091 	bne.w	802b328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802b206:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802b20a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 802b20e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802b212:	f022 0207 	bic.w	r2, r2, #7
 802b216:	431a      	orrs	r2, r3
 802b218:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802b21c:	ea4c 0c02 	orr.w	ip, ip, r2
 802b220:	f8a7 c000 	strh.w	ip, [r7]
 802b224:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802b226:	441c      	add	r4, r3
 802b228:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b22a:	441e      	add	r6, r3
 802b22c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802b22e:	3b01      	subs	r3, #1
 802b230:	3702      	adds	r7, #2
 802b232:	9317      	str	r3, [sp, #92]	@ 0x5c
 802b234:	e6c0      	b.n	802afb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802b236:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802b238:	441c      	add	r4, r3
 802b23a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b23c:	441e      	add	r6, r3
 802b23e:	9b07      	ldr	r3, [sp, #28]
 802b240:	3b01      	subs	r3, #1
 802b242:	9307      	str	r3, [sp, #28]
 802b244:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b246:	3302      	adds	r3, #2
 802b248:	930a      	str	r3, [sp, #40]	@ 0x28
 802b24a:	e695      	b.n	802af78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802b24c:	d024      	beq.n	802b298 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802b24e:	9b07      	ldr	r3, [sp, #28]
 802b250:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802b252:	3b01      	subs	r3, #1
 802b254:	fb00 4003 	mla	r0, r0, r3, r4
 802b258:	1400      	asrs	r0, r0, #16
 802b25a:	f53f aeaa 	bmi.w	802afb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b25e:	3901      	subs	r1, #1
 802b260:	4288      	cmp	r0, r1
 802b262:	f6bf aea6 	bge.w	802afb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b266:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802b268:	fb01 6303 	mla	r3, r1, r3, r6
 802b26c:	141b      	asrs	r3, r3, #16
 802b26e:	f53f aea0 	bmi.w	802afb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b272:	3a01      	subs	r2, #1
 802b274:	4293      	cmp	r3, r2
 802b276:	f6bf ae9c 	bge.w	802afb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802b27a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802b27e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802b282:	f1bb 0f00 	cmp.w	fp, #0
 802b286:	f300 809a 	bgt.w	802b3be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802b28a:	9b07      	ldr	r3, [sp, #28]
 802b28c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802b290:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802b292:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802b296:	930a      	str	r3, [sp, #40]	@ 0x28
 802b298:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802b29a:	2b00      	cmp	r3, #0
 802b29c:	f340 81eb 	ble.w	802b676 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802b2a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 802b2a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802b2a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802b2ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b2ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802b2b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 802b2b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802b2ba:	eef0 6a62 	vmov.f32	s13, s5
 802b2be:	ee61 7a27 	vmul.f32	s15, s2, s15
 802b2c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b2c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 802b2ca:	ee16 4a90 	vmov	r4, s13
 802b2ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802b2d2:	eef0 6a43 	vmov.f32	s13, s6
 802b2d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802b2da:	ee12 2a90 	vmov	r2, s5
 802b2de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802b2e2:	fb92 f3f3 	sdiv	r3, r2, r3
 802b2e6:	ee13 2a10 	vmov	r2, s6
 802b2ea:	9327      	str	r3, [sp, #156]	@ 0x9c
 802b2ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b2ee:	fb92 f3f3 	sdiv	r3, r2, r3
 802b2f2:	9328      	str	r3, [sp, #160]	@ 0xa0
 802b2f4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802b2f6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802b2f8:	3b01      	subs	r3, #1
 802b2fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b2fe:	9316      	str	r3, [sp, #88]	@ 0x58
 802b300:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802b302:	bf08      	it	eq
 802b304:	4613      	moveq	r3, r2
 802b306:	ee16 6a90 	vmov	r6, s13
 802b30a:	9307      	str	r3, [sp, #28]
 802b30c:	eeb0 3a67 	vmov.f32	s6, s15
 802b310:	eef0 2a47 	vmov.f32	s5, s14
 802b314:	e622      	b.n	802af5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802b316:	2800      	cmp	r0, #0
 802b318:	f43f ae92 	beq.w	802b040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802b31c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802b320:	9308      	str	r3, [sp, #32]
 802b322:	0e1b      	lsrs	r3, r3, #24
 802b324:	9310      	str	r3, [sp, #64]	@ 0x40
 802b326:	e68b      	b.n	802b040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802b328:	8839      	ldrh	r1, [r7, #0]
 802b32a:	4dd4      	ldr	r5, [pc, #848]	@ (802b67c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802b32c:	43db      	mvns	r3, r3
 802b32e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802b332:	fa5f f883 	uxtb.w	r8, r3
 802b336:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802b33a:	fb0e fe08 	mul.w	lr, lr, r8
 802b33e:	10c8      	asrs	r0, r1, #3
 802b340:	00cb      	lsls	r3, r1, #3
 802b342:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b346:	f10e 0101 	add.w	r1, lr, #1
 802b34a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802b34e:	fb00 f008 	mul.w	r0, r0, r8
 802b352:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802b356:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802b35a:	f100 0e01 	add.w	lr, r0, #1
 802b35e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802b362:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802b366:	b2db      	uxtb	r3, r3
 802b368:	b2c9      	uxtb	r1, r1
 802b36a:	00d2      	lsls	r2, r2, #3
 802b36c:	fb03 f308 	mul.w	r3, r3, r8
 802b370:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802b374:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b378:	430a      	orrs	r2, r1
 802b37a:	1c59      	adds	r1, r3, #1
 802b37c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802b380:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802b384:	e748      	b.n	802b218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802b386:	f112 0801 	adds.w	r8, r2, #1
 802b38a:	f53f af4b 	bmi.w	802b224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b38e:	4543      	cmp	r3, r8
 802b390:	f6ff af48 	blt.w	802b224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b394:	f11c 0801 	adds.w	r8, ip, #1
 802b398:	f53f af44 	bmi.w	802b224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b39c:	45c6      	cmp	lr, r8
 802b39e:	f6ff af41 	blt.w	802b224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b3a2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802b3a6:	fa0f f28e 	sxth.w	r2, lr
 802b3aa:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802b3ae:	9200      	str	r2, [sp, #0]
 802b3b0:	b21b      	sxth	r3, r3
 802b3b2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802b3b4:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802b3b6:	4639      	mov	r1, r7
 802b3b8:	f7ff fc87 	bl	802acca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802b3bc:	e732      	b.n	802b224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802b3be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802b3c0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802b3c2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802b3c6:	1421      	asrs	r1, r4, #16
 802b3c8:	1433      	asrs	r3, r6, #16
 802b3ca:	fb07 1303 	mla	r3, r7, r3, r1
 802b3ce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802b3d0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802b3d4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802b3d8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802b3dc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802b3e0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802b3e4:	2a00      	cmp	r2, #0
 802b3e6:	f000 8107 	beq.w	802b5f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802b3ea:	684d      	ldr	r5, [r1, #4]
 802b3ec:	950d      	str	r5, [sp, #52]	@ 0x34
 802b3ee:	0e2d      	lsrs	r5, r5, #24
 802b3f0:	9514      	str	r5, [sp, #80]	@ 0x50
 802b3f2:	b178      	cbz	r0, 802b414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802b3f4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 802b3f8:	3f01      	subs	r7, #1
 802b3fa:	00bf      	lsls	r7, r7, #2
 802b3fc:	3704      	adds	r7, #4
 802b3fe:	eb01 0e07 	add.w	lr, r1, r7
 802b402:	59c9      	ldr	r1, [r1, r7]
 802b404:	9109      	str	r1, [sp, #36]	@ 0x24
 802b406:	0e09      	lsrs	r1, r1, #24
 802b408:	9111      	str	r1, [sp, #68]	@ 0x44
 802b40a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802b40e:	910e      	str	r1, [sp, #56]	@ 0x38
 802b410:	0e09      	lsrs	r1, r1, #24
 802b412:	9115      	str	r1, [sp, #84]	@ 0x54
 802b414:	b292      	uxth	r2, r2
 802b416:	b280      	uxth	r0, r0
 802b418:	fb02 f900 	mul.w	r9, r2, r0
 802b41c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802b420:	0112      	lsls	r2, r2, #4
 802b422:	eba2 0e09 	sub.w	lr, r2, r9
 802b426:	b280      	uxth	r0, r0
 802b428:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 802b42c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802b42e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b430:	fa1f fe8e 	uxth.w	lr, lr
 802b434:	1a09      	subs	r1, r1, r0
 802b436:	b289      	uxth	r1, r1
 802b438:	fb0e f202 	mul.w	r2, lr, r2
 802b43c:	fb01 220c 	mla	r2, r1, ip, r2
 802b440:	fb00 2205 	mla	r2, r0, r5, r2
 802b444:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b446:	fb09 2205 	mla	r2, r9, r5, r2
 802b44a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802b44e:	2a00      	cmp	r2, #0
 802b450:	f000 80c9 	beq.w	802b5e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802b454:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802b458:	d019      	beq.n	802b48e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802b45a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802b45e:	fb0c fa0a 	mul.w	sl, ip, sl
 802b462:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802b466:	fb0c fc03 	mul.w	ip, ip, r3
 802b46a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802b46e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b472:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802b476:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802b47a:	4453      	add	r3, sl
 802b47c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802b480:	0a1b      	lsrs	r3, r3, #8
 802b482:	0a3f      	lsrs	r7, r7, #8
 802b484:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802b488:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802b48c:	433b      	orrs	r3, r7
 802b48e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802b490:	2dff      	cmp	r5, #255	@ 0xff
 802b492:	d020      	beq.n	802b4d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802b494:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b496:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b49a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802b49c:	436f      	muls	r7, r5
 802b49e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b4a0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b4a4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802b4a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802b4aa:	fb05 fa0a 	mul.w	sl, r5, sl
 802b4ae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802b4b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b4b6:	44bc      	add	ip, r7
 802b4b8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802b4bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802b4c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b4c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b4c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b4cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b4d0:	ea4c 050a 	orr.w	r5, ip, sl
 802b4d4:	950d      	str	r5, [sp, #52]	@ 0x34
 802b4d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b4d8:	2dff      	cmp	r5, #255	@ 0xff
 802b4da:	d020      	beq.n	802b51e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802b4dc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802b4de:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b4e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b4e4:	436f      	muls	r7, r5
 802b4e6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802b4e8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802b4ec:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802b4ee:	fb05 fa0c 	mul.w	sl, r5, ip
 802b4f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802b4f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b4fa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802b4fe:	44bc      	add	ip, r7
 802b500:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802b504:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802b508:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b50c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b510:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b514:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b518:	ea4c 050a 	orr.w	r5, ip, sl
 802b51c:	9509      	str	r5, [sp, #36]	@ 0x24
 802b51e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b520:	2dff      	cmp	r5, #255	@ 0xff
 802b522:	d020      	beq.n	802b566 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802b524:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b526:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b52a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b52c:	436f      	muls	r7, r5
 802b52e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b530:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802b534:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802b536:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802b53a:	fb05 fa0a 	mul.w	sl, r5, sl
 802b53e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802b542:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b546:	44bc      	add	ip, r7
 802b548:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802b54c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802b550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b554:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b558:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802b55c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802b560:	ea4c 050a 	orr.w	r5, ip, sl
 802b564:	950e      	str	r5, [sp, #56]	@ 0x38
 802b566:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b568:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802b56c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802b56e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802b572:	fb0e f707 	mul.w	r7, lr, r7
 802b576:	fb01 770c 	mla	r7, r1, ip, r7
 802b57a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802b57e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802b580:	fb00 770c 	mla	r7, r0, ip, r7
 802b584:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802b588:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802b58a:	fb09 770c 	mla	r7, r9, ip, r7
 802b58e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802b592:	fb0e fe0c 	mul.w	lr, lr, ip
 802b596:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802b59a:	fb01 e303 	mla	r3, r1, r3, lr
 802b59e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802b5a0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802b5a4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802b5a6:	fb00 330a 	mla	r3, r0, sl, r3
 802b5aa:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 802b5ae:	fb09 3c0c 	mla	ip, r9, ip, r3
 802b5b2:	0a3f      	lsrs	r7, r7, #8
 802b5b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b5b8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802b5bc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802b5c0:	ea47 070c 	orr.w	r7, r7, ip
 802b5c4:	2aff      	cmp	r2, #255	@ 0xff
 802b5c6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802b5ca:	d11e      	bne.n	802b60a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802b5cc:	097a      	lsrs	r2, r7, #5
 802b5ce:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 802b5d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802b5d6:	f023 0307 	bic.w	r3, r3, #7
 802b5da:	4313      	orrs	r3, r2
 802b5dc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802b5e0:	431f      	orrs	r7, r3
 802b5e2:	f8a8 7000 	strh.w	r7, [r8]
 802b5e6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802b5e8:	441c      	add	r4, r3
 802b5ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b5ec:	f108 0802 	add.w	r8, r8, #2
 802b5f0:	441e      	add	r6, r3
 802b5f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 802b5f6:	e644      	b.n	802b282 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802b5f8:	2800      	cmp	r0, #0
 802b5fa:	f43f af0b 	beq.w	802b414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802b5fe:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802b602:	9109      	str	r1, [sp, #36]	@ 0x24
 802b604:	0e09      	lsrs	r1, r1, #24
 802b606:	9111      	str	r1, [sp, #68]	@ 0x44
 802b608:	e704      	b.n	802b414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802b60a:	f8b8 1000 	ldrh.w	r1, [r8]
 802b60e:	43d2      	mvns	r2, r2
 802b610:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802b614:	fa5f fe82 	uxtb.w	lr, r2
 802b618:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802b61c:	fb0c fc0e 	mul.w	ip, ip, lr
 802b620:	10c8      	asrs	r0, r1, #3
 802b622:	00ca      	lsls	r2, r1, #3
 802b624:	f10c 0101 	add.w	r1, ip, #1
 802b628:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802b62c:	0c39      	lsrs	r1, r7, #16
 802b62e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802b632:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b636:	4911      	ldr	r1, [pc, #68]	@ (802b67c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802b638:	fb00 f00e 	mul.w	r0, r0, lr
 802b63c:	fa5f fc8c 	uxtb.w	ip, ip
 802b640:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802b644:	b2d2      	uxtb	r2, r2
 802b646:	1c41      	adds	r1, r0, #1
 802b648:	fb02 f20e 	mul.w	r2, r2, lr
 802b64c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802b650:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802b654:	1c51      	adds	r1, r2, #1
 802b656:	00c0      	lsls	r0, r0, #3
 802b658:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802b65c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b660:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802b664:	ea4c 0c00 	orr.w	ip, ip, r0
 802b668:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802b66c:	ea47 0c0c 	orr.w	ip, r7, ip
 802b670:	f8a8 c000 	strh.w	ip, [r8]
 802b674:	e7b7      	b.n	802b5e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802b676:	b01b      	add	sp, #108	@ 0x6c
 802b678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b67c:	fffff800 	.word	0xfffff800

0802b680 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802b680:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b684:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802b688:	2d00      	cmp	r5, #0
 802b68a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802b68e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802b692:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802b696:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802b69a:	fb05 0e03 	mla	lr, r5, r3, r0
 802b69e:	f2c0 808c 	blt.w	802b7ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802b6a2:	45a9      	cmp	r9, r5
 802b6a4:	f340 8089 	ble.w	802b7ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802b6a8:	2800      	cmp	r0, #0
 802b6aa:	f2c0 8084 	blt.w	802b7b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802b6ae:	4580      	cmp	r8, r0
 802b6b0:	f340 8081 	ble.w	802b7b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802b6b4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802b6b8:	f01e 0f01 	tst.w	lr, #1
 802b6bc:	5d16      	ldrb	r6, [r2, r4]
 802b6be:	bf0c      	ite	eq
 802b6c0:	f006 060f 	andeq.w	r6, r6, #15
 802b6c4:	1136      	asrne	r6, r6, #4
 802b6c6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802b6ca:	b2f6      	uxtb	r6, r6
 802b6cc:	1c44      	adds	r4, r0, #1
 802b6ce:	d477      	bmi.n	802b7c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802b6d0:	45a0      	cmp	r8, r4
 802b6d2:	dd75      	ble.n	802b7c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802b6d4:	2f00      	cmp	r7, #0
 802b6d6:	d075      	beq.n	802b7c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802b6d8:	f10e 0a01 	add.w	sl, lr, #1
 802b6dc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802b6e0:	f01a 0f01 	tst.w	sl, #1
 802b6e4:	5d14      	ldrb	r4, [r2, r4]
 802b6e6:	bf0c      	ite	eq
 802b6e8:	f004 040f 	andeq.w	r4, r4, #15
 802b6ec:	1124      	asrne	r4, r4, #4
 802b6ee:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802b6f2:	b2e4      	uxtb	r4, r4
 802b6f4:	3501      	adds	r5, #1
 802b6f6:	d469      	bmi.n	802b7cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802b6f8:	45a9      	cmp	r9, r5
 802b6fa:	dd67      	ble.n	802b7cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802b6fc:	f1bc 0f00 	cmp.w	ip, #0
 802b700:	d067      	beq.n	802b7d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802b702:	2800      	cmp	r0, #0
 802b704:	db60      	blt.n	802b7c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802b706:	4580      	cmp	r8, r0
 802b708:	dd5e      	ble.n	802b7c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802b70a:	eb03 090e 	add.w	r9, r3, lr
 802b70e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802b712:	f019 0f01 	tst.w	r9, #1
 802b716:	5d55      	ldrb	r5, [r2, r5]
 802b718:	bf0c      	ite	eq
 802b71a:	f005 050f 	andeq.w	r5, r5, #15
 802b71e:	112d      	asrne	r5, r5, #4
 802b720:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802b724:	b2ed      	uxtb	r5, r5
 802b726:	3001      	adds	r0, #1
 802b728:	d456      	bmi.n	802b7d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802b72a:	4580      	cmp	r8, r0
 802b72c:	dd54      	ble.n	802b7d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802b72e:	2f00      	cmp	r7, #0
 802b730:	d054      	beq.n	802b7dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802b732:	3301      	adds	r3, #1
 802b734:	449e      	add	lr, r3
 802b736:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802b73a:	f01e 0f01 	tst.w	lr, #1
 802b73e:	5cd0      	ldrb	r0, [r2, r3]
 802b740:	bf0c      	ite	eq
 802b742:	f000 000f 	andeq.w	r0, r0, #15
 802b746:	1100      	asrne	r0, r0, #4
 802b748:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b74c:	b2c3      	uxtb	r3, r0
 802b74e:	b2ba      	uxth	r2, r7
 802b750:	fa1f fc8c 	uxth.w	ip, ip
 802b754:	fb02 f00c 	mul.w	r0, r2, ip
 802b758:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802b75c:	0112      	lsls	r2, r2, #4
 802b75e:	fa1f fc8c 	uxth.w	ip, ip
 802b762:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802b766:	1a12      	subs	r2, r2, r0
 802b768:	eba7 070c 	sub.w	r7, r7, ip
 802b76c:	b292      	uxth	r2, r2
 802b76e:	b2bf      	uxth	r7, r7
 802b770:	4362      	muls	r2, r4
 802b772:	fb06 2207 	mla	r2, r6, r7, r2
 802b776:	fb0c 2505 	mla	r5, ip, r5, r2
 802b77a:	fb00 5303 	mla	r3, r0, r3, r5
 802b77e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b782:	b1b3      	cbz	r3, 802b7b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802b784:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802b788:	435a      	muls	r2, r3
 802b78a:	1c53      	adds	r3, r2, #1
 802b78c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b790:	4a2d      	ldr	r2, [pc, #180]	@ (802b848 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802b792:	121b      	asrs	r3, r3, #8
 802b794:	6812      	ldr	r2, [r2, #0]
 802b796:	2bff      	cmp	r3, #255	@ 0xff
 802b798:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802b79c:	d120      	bne.n	802b7e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802b79e:	4b2b      	ldr	r3, [pc, #172]	@ (802b84c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802b7a0:	0950      	lsrs	r0, r2, #5
 802b7a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b7a6:	4033      	ands	r3, r6
 802b7a8:	4318      	orrs	r0, r3
 802b7aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802b7ae:	4302      	orrs	r2, r0
 802b7b0:	800a      	strh	r2, [r1, #0]
 802b7b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b7b6:	2600      	movs	r6, #0
 802b7b8:	e788      	b.n	802b6cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802b7ba:	2400      	movs	r4, #0
 802b7bc:	4626      	mov	r6, r4
 802b7be:	e799      	b.n	802b6f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b7c0:	2400      	movs	r4, #0
 802b7c2:	e797      	b.n	802b6f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b7c4:	463c      	mov	r4, r7
 802b7c6:	e795      	b.n	802b6f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802b7c8:	2500      	movs	r5, #0
 802b7ca:	e7ac      	b.n	802b726 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802b7cc:	2300      	movs	r3, #0
 802b7ce:	461d      	mov	r5, r3
 802b7d0:	e7bd      	b.n	802b74e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b7d2:	4663      	mov	r3, ip
 802b7d4:	4665      	mov	r5, ip
 802b7d6:	e7ba      	b.n	802b74e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b7d8:	2300      	movs	r3, #0
 802b7da:	e7b8      	b.n	802b74e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b7dc:	463b      	mov	r3, r7
 802b7de:	e7b6      	b.n	802b74e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802b7e0:	880d      	ldrh	r5, [r1, #0]
 802b7e2:	b29f      	uxth	r7, r3
 802b7e4:	122c      	asrs	r4, r5, #8
 802b7e6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802b7ea:	43db      	mvns	r3, r3
 802b7ec:	b2db      	uxtb	r3, r3
 802b7ee:	fb10 f007 	smulbb	r0, r0, r7
 802b7f2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802b7f6:	fb04 0403 	mla	r4, r4, r3, r0
 802b7fa:	b2f6      	uxtb	r6, r6
 802b7fc:	10e8      	asrs	r0, r5, #3
 802b7fe:	b2d2      	uxtb	r2, r2
 802b800:	00ed      	lsls	r5, r5, #3
 802b802:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802b806:	fb12 f207 	smulbb	r2, r2, r7
 802b80a:	fb16 f607 	smulbb	r6, r6, r7
 802b80e:	b2ed      	uxtb	r5, r5
 802b810:	b2a4      	uxth	r4, r4
 802b812:	fb00 6603 	mla	r6, r0, r3, r6
 802b816:	fb05 2303 	mla	r3, r5, r3, r2
 802b81a:	b29a      	uxth	r2, r3
 802b81c:	1c63      	adds	r3, r4, #1
 802b81e:	b2b0      	uxth	r0, r6
 802b820:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802b824:	1c53      	adds	r3, r2, #1
 802b826:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b82a:	1c42      	adds	r2, r0, #1
 802b82c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802b830:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802b834:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802b838:	0940      	lsrs	r0, r0, #5
 802b83a:	4323      	orrs	r3, r4
 802b83c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802b840:	4303      	orrs	r3, r0
 802b842:	800b      	strh	r3, [r1, #0]
 802b844:	e7b5      	b.n	802b7b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802b846:	bf00      	nop
 802b848:	200138f4 	.word	0x200138f4
 802b84c:	00fff800 	.word	0x00fff800

0802b850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b854:	b097      	sub	sp, #92	@ 0x5c
 802b856:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802b85a:	9214      	str	r2, [sp, #80]	@ 0x50
 802b85c:	9309      	str	r3, [sp, #36]	@ 0x24
 802b85e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 802b860:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802b864:	910d      	str	r1, [sp, #52]	@ 0x34
 802b866:	930f      	str	r3, [sp, #60]	@ 0x3c
 802b868:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 802b86c:	9015      	str	r0, [sp, #84]	@ 0x54
 802b86e:	6850      	ldr	r0, [r2, #4]
 802b870:	6812      	ldr	r2, [r2, #0]
 802b872:	fb00 1303 	mla	r3, r0, r3, r1
 802b876:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802b87a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b87c:	689b      	ldr	r3, [r3, #8]
 802b87e:	3301      	adds	r3, #1
 802b880:	f023 0301 	bic.w	r3, r3, #1
 802b884:	930a      	str	r3, [sp, #40]	@ 0x28
 802b886:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b888:	681f      	ldr	r7, [r3, #0]
 802b88a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802b88c:	2b00      	cmp	r3, #0
 802b88e:	dc03      	bgt.n	802b898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802b890:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802b892:	2b00      	cmp	r3, #0
 802b894:	f340 8287 	ble.w	802bda6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802b898:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b89a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802b89e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802b8a2:	1e48      	subs	r0, r1, #1
 802b8a4:	f102 3cff 	add.w	ip, r2, #4294967295
 802b8a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b8aa:	2b00      	cmp	r3, #0
 802b8ac:	f340 80c4 	ble.w	802ba38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802b8b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802b8b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 802b8b8:	d406      	bmi.n	802b8c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b8ba:	4586      	cmp	lr, r0
 802b8bc:	da04      	bge.n	802b8c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b8be:	2b00      	cmp	r3, #0
 802b8c0:	db02      	blt.n	802b8c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802b8c2:	4563      	cmp	r3, ip
 802b8c4:	f2c0 80b9 	blt.w	802ba3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802b8c8:	f11e 0e01 	adds.w	lr, lr, #1
 802b8cc:	f100 80aa 	bmi.w	802ba24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b8d0:	4571      	cmp	r1, lr
 802b8d2:	f2c0 80a7 	blt.w	802ba24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b8d6:	3301      	adds	r3, #1
 802b8d8:	f100 80a4 	bmi.w	802ba24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b8dc:	429a      	cmp	r2, r3
 802b8de:	f2c0 80a1 	blt.w	802ba24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802b8e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b8e4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802b8e8:	930e      	str	r3, [sp, #56]	@ 0x38
 802b8ea:	46c8      	mov	r8, r9
 802b8ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802b8ee:	2b00      	cmp	r3, #0
 802b8f0:	f340 80c3 	ble.w	802ba7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802b8f4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802b8f6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802b8fa:	1423      	asrs	r3, r4, #16
 802b8fc:	ea4f 4026 	mov.w	r0, r6, asr #16
 802b900:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802b904:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802b908:	f100 814d 	bmi.w	802bba6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b90c:	f10c 3bff 	add.w	fp, ip, #4294967295
 802b910:	455b      	cmp	r3, fp
 802b912:	f280 8148 	bge.w	802bba6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b916:	2800      	cmp	r0, #0
 802b918:	f2c0 8145 	blt.w	802bba6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b91c:	f10e 3bff 	add.w	fp, lr, #4294967295
 802b920:	4558      	cmp	r0, fp
 802b922:	f280 8140 	bge.w	802bba6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802b926:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802b928:	fb00 3305 	mla	r3, r0, r5, r3
 802b92c:	0858      	lsrs	r0, r3, #1
 802b92e:	07dd      	lsls	r5, r3, #31
 802b930:	f817 c000 	ldrb.w	ip, [r7, r0]
 802b934:	bf54      	ite	pl
 802b936:	f00c 0c0f 	andpl.w	ip, ip, #15
 802b93a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802b93e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802b942:	fa5f fc8c 	uxtb.w	ip, ip
 802b946:	2a00      	cmp	r2, #0
 802b948:	f000 80db 	beq.w	802bb02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802b94c:	1c58      	adds	r0, r3, #1
 802b94e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802b952:	07c0      	lsls	r0, r0, #31
 802b954:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802b958:	bf54      	ite	pl
 802b95a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802b95e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802b962:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802b966:	fa5f f08e 	uxtb.w	r0, lr
 802b96a:	9010      	str	r0, [sp, #64]	@ 0x40
 802b96c:	b1c9      	cbz	r1, 802b9a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802b96e:	4453      	add	r3, sl
 802b970:	0858      	lsrs	r0, r3, #1
 802b972:	07dd      	lsls	r5, r3, #31
 802b974:	5c38      	ldrb	r0, [r7, r0]
 802b976:	bf54      	ite	pl
 802b978:	f000 000f 	andpl.w	r0, r0, #15
 802b97c:	1100      	asrmi	r0, r0, #4
 802b97e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802b982:	3301      	adds	r3, #1
 802b984:	b2c0      	uxtb	r0, r0
 802b986:	900b      	str	r0, [sp, #44]	@ 0x2c
 802b988:	0858      	lsrs	r0, r3, #1
 802b98a:	07dd      	lsls	r5, r3, #31
 802b98c:	f817 e000 	ldrb.w	lr, [r7, r0]
 802b990:	bf54      	ite	pl
 802b992:	f00e 030f 	andpl.w	r3, lr, #15
 802b996:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802b99a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802b99e:	b2db      	uxtb	r3, r3
 802b9a0:	9311      	str	r3, [sp, #68]	@ 0x44
 802b9a2:	b292      	uxth	r2, r2
 802b9a4:	b289      	uxth	r1, r1
 802b9a6:	fb02 f301 	mul.w	r3, r2, r1
 802b9aa:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802b9ae:	0112      	lsls	r2, r2, #4
 802b9b0:	b289      	uxth	r1, r1
 802b9b2:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802b9b6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802b9b8:	1ad2      	subs	r2, r2, r3
 802b9ba:	1a40      	subs	r0, r0, r1
 802b9bc:	b292      	uxth	r2, r2
 802b9be:	436a      	muls	r2, r5
 802b9c0:	b280      	uxth	r0, r0
 802b9c2:	fb0c 2c00 	mla	ip, ip, r0, r2
 802b9c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802b9c8:	fb01 c102 	mla	r1, r1, r2, ip
 802b9cc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802b9ce:	fb03 1302 	mla	r3, r3, r2, r1
 802b9d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802b9d6:	b1db      	cbz	r3, 802ba10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802b9d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802b9da:	4353      	muls	r3, r2
 802b9dc:	1c5a      	adds	r2, r3, #1
 802b9de:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802b9e2:	4ac6      	ldr	r2, [pc, #792]	@ (802bcfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802b9e4:	121b      	asrs	r3, r3, #8
 802b9e6:	6812      	ldr	r2, [r2, #0]
 802b9e8:	2bff      	cmp	r3, #255	@ 0xff
 802b9ea:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802b9ee:	f040 8099 	bne.w	802bb24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802b9f2:	0953      	lsrs	r3, r2, #5
 802b9f4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802b9f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802b9fc:	f02c 0c07 	bic.w	ip, ip, #7
 802ba00:	ea43 0c0c 	orr.w	ip, r3, ip
 802ba04:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802ba08:	ea4c 0202 	orr.w	r2, ip, r2
 802ba0c:	f8a8 2000 	strh.w	r2, [r8]
 802ba10:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802ba12:	441c      	add	r4, r3
 802ba14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802ba16:	441e      	add	r6, r3
 802ba18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802ba1a:	3b01      	subs	r3, #1
 802ba1c:	f108 0802 	add.w	r8, r8, #2
 802ba20:	930e      	str	r3, [sp, #56]	@ 0x38
 802ba22:	e763      	b.n	802b8ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802ba24:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802ba26:	441c      	add	r4, r3
 802ba28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802ba2a:	441e      	add	r6, r3
 802ba2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ba2e:	3b01      	subs	r3, #1
 802ba30:	9309      	str	r3, [sp, #36]	@ 0x24
 802ba32:	f109 0902 	add.w	r9, r9, #2
 802ba36:	e737      	b.n	802b8a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802ba38:	d024      	beq.n	802ba84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802ba3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ba3c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802ba3e:	3b01      	subs	r3, #1
 802ba40:	fb00 4003 	mla	r0, r0, r3, r4
 802ba44:	1400      	asrs	r0, r0, #16
 802ba46:	f53f af4c 	bmi.w	802b8e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802ba4a:	3901      	subs	r1, #1
 802ba4c:	4288      	cmp	r0, r1
 802ba4e:	f6bf af48 	bge.w	802b8e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802ba52:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802ba54:	fb01 6303 	mla	r3, r1, r3, r6
 802ba58:	141b      	asrs	r3, r3, #16
 802ba5a:	f53f af42 	bmi.w	802b8e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802ba5e:	3a01      	subs	r2, #1
 802ba60:	4293      	cmp	r3, r2
 802ba62:	f6bf af3e 	bge.w	802b8e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802ba66:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802ba6a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802ba6e:	930e      	str	r3, [sp, #56]	@ 0x38
 802ba70:	46c8      	mov	r8, r9
 802ba72:	f1bb 0f00 	cmp.w	fp, #0
 802ba76:	f300 80b7 	bgt.w	802bbe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802ba7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ba7c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802ba80:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802ba84:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802ba86:	2b00      	cmp	r3, #0
 802ba88:	f340 818d 	ble.w	802bda6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802ba8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 802ba90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802ba94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802ba98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802ba9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802ba9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 802baa2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802baa6:	eef0 6a62 	vmov.f32	s13, s5
 802baaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 802baae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802bab2:	ee77 2a62 	vsub.f32	s5, s14, s5
 802bab6:	ee16 4a90 	vmov	r4, s13
 802baba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802babe:	eef0 6a43 	vmov.f32	s13, s6
 802bac2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802bac6:	ee12 2a90 	vmov	r2, s5
 802baca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802bace:	fb92 f3f3 	sdiv	r3, r2, r3
 802bad2:	ee13 2a10 	vmov	r2, s6
 802bad6:	9323      	str	r3, [sp, #140]	@ 0x8c
 802bad8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802bada:	fb92 f3f3 	sdiv	r3, r2, r3
 802bade:	9324      	str	r3, [sp, #144]	@ 0x90
 802bae0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802bae2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802bae4:	3b01      	subs	r3, #1
 802bae6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802baea:	930d      	str	r3, [sp, #52]	@ 0x34
 802baec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802baee:	bf08      	it	eq
 802baf0:	4613      	moveq	r3, r2
 802baf2:	ee16 6a90 	vmov	r6, s13
 802baf6:	9309      	str	r3, [sp, #36]	@ 0x24
 802baf8:	eeb0 3a67 	vmov.f32	s6, s15
 802bafc:	eef0 2a47 	vmov.f32	s5, s14
 802bb00:	e6c3      	b.n	802b88a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802bb02:	2900      	cmp	r1, #0
 802bb04:	f43f af4d 	beq.w	802b9a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802bb08:	eb0a 0003 	add.w	r0, sl, r3
 802bb0c:	0843      	lsrs	r3, r0, #1
 802bb0e:	07c0      	lsls	r0, r0, #31
 802bb10:	5cfb      	ldrb	r3, [r7, r3]
 802bb12:	bf54      	ite	pl
 802bb14:	f003 030f 	andpl.w	r3, r3, #15
 802bb18:	111b      	asrmi	r3, r3, #4
 802bb1a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802bb1e:	b2db      	uxtb	r3, r3
 802bb20:	930b      	str	r3, [sp, #44]	@ 0x2c
 802bb22:	e73e      	b.n	802b9a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802bb24:	f8b8 e000 	ldrh.w	lr, [r8]
 802bb28:	fa1f fb83 	uxth.w	fp, r3
 802bb2c:	ea4f 202e 	mov.w	r0, lr, asr #8
 802bb30:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802bb34:	43db      	mvns	r3, r3
 802bb36:	b2db      	uxtb	r3, r3
 802bb38:	fb11 f10b 	smulbb	r1, r1, fp
 802bb3c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bb40:	fb00 1003 	mla	r0, r0, r3, r1
 802bb44:	fa5f fc8c 	uxtb.w	ip, ip
 802bb48:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802bb4c:	b2d2      	uxtb	r2, r2
 802bb4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802bb52:	b280      	uxth	r0, r0
 802bb54:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802bb58:	fb1c fc0b 	smulbb	ip, ip, fp
 802bb5c:	fa5f fe8e 	uxtb.w	lr, lr
 802bb60:	fb12 fb0b 	smulbb	fp, r2, fp
 802bb64:	fb01 cc03 	mla	ip, r1, r3, ip
 802bb68:	fb0e bb03 	mla	fp, lr, r3, fp
 802bb6c:	1c43      	adds	r3, r0, #1
 802bb6e:	fa1f fc8c 	uxth.w	ip, ip
 802bb72:	fa1f fb8b 	uxth.w	fp, fp
 802bb76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bb7a:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 802bb7e:	f10c 0101 	add.w	r1, ip, #1
 802bb82:	f10b 0001 	add.w	r0, fp, #1
 802bb86:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802bb8a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802bb8e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802bb92:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802bb96:	4318      	orrs	r0, r3
 802bb98:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802bb9c:	ea40 000c 	orr.w	r0, r0, ip
 802bba0:	f8a8 0000 	strh.w	r0, [r8]
 802bba4:	e734      	b.n	802ba10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bba6:	f113 0b01 	adds.w	fp, r3, #1
 802bbaa:	f53f af31 	bmi.w	802ba10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bbae:	45dc      	cmp	ip, fp
 802bbb0:	f6ff af2e 	blt.w	802ba10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bbb4:	f110 0b01 	adds.w	fp, r0, #1
 802bbb8:	f53f af2a 	bmi.w	802ba10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bbbc:	45de      	cmp	lr, fp
 802bbbe:	f6ff af27 	blt.w	802ba10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bbc2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802bbc4:	9302      	str	r3, [sp, #8]
 802bbc6:	fa0f f38e 	sxth.w	r3, lr
 802bbca:	9301      	str	r3, [sp, #4]
 802bbcc:	fa0f f38c 	sxth.w	r3, ip
 802bbd0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802bbd4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802bbd8:	9300      	str	r3, [sp, #0]
 802bbda:	463a      	mov	r2, r7
 802bbdc:	4653      	mov	r3, sl
 802bbde:	4641      	mov	r1, r8
 802bbe0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802bbe2:	f7ff fd4d 	bl	802b680 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802bbe6:	e713      	b.n	802ba10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802bbe8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802bbea:	1422      	asrs	r2, r4, #16
 802bbec:	1433      	asrs	r3, r6, #16
 802bbee:	fb05 2303 	mla	r3, r5, r3, r2
 802bbf2:	085a      	lsrs	r2, r3, #1
 802bbf4:	07dd      	lsls	r5, r3, #31
 802bbf6:	5cba      	ldrb	r2, [r7, r2]
 802bbf8:	bf54      	ite	pl
 802bbfa:	f002 020f 	andpl.w	r2, r2, #15
 802bbfe:	1112      	asrmi	r2, r2, #4
 802bc00:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802bc04:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802bc08:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802bc0c:	b2d2      	uxtb	r2, r2
 802bc0e:	2900      	cmp	r1, #0
 802bc10:	d076      	beq.n	802bd00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802bc12:	f103 0e01 	add.w	lr, r3, #1
 802bc16:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802bc1a:	f01e 0f01 	tst.w	lr, #1
 802bc1e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bc22:	bf0c      	ite	eq
 802bc24:	f00c 0c0f 	andeq.w	ip, ip, #15
 802bc28:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802bc2c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bc30:	fa5f f58c 	uxtb.w	r5, ip
 802bc34:	9512      	str	r5, [sp, #72]	@ 0x48
 802bc36:	b300      	cbz	r0, 802bc7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802bc38:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802bc3a:	442b      	add	r3, r5
 802bc3c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802bc40:	07dd      	lsls	r5, r3, #31
 802bc42:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bc46:	bf54      	ite	pl
 802bc48:	f00c 0c0f 	andpl.w	ip, ip, #15
 802bc4c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802bc50:	3301      	adds	r3, #1
 802bc52:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bc56:	fa5f f58c 	uxtb.w	r5, ip
 802bc5a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802bc5e:	950c      	str	r5, [sp, #48]	@ 0x30
 802bc60:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bc64:	07dd      	lsls	r5, r3, #31
 802bc66:	bf54      	ite	pl
 802bc68:	f00c 0c0f 	andpl.w	ip, ip, #15
 802bc6c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802bc70:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bc74:	fa5f f38c 	uxtb.w	r3, ip
 802bc78:	9313      	str	r3, [sp, #76]	@ 0x4c
 802bc7a:	b289      	uxth	r1, r1
 802bc7c:	b280      	uxth	r0, r0
 802bc7e:	fb01 f300 	mul.w	r3, r1, r0
 802bc82:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802bc86:	0109      	lsls	r1, r1, #4
 802bc88:	b280      	uxth	r0, r0
 802bc8a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 802bc8e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802bc90:	1ac9      	subs	r1, r1, r3
 802bc92:	ebac 0c00 	sub.w	ip, ip, r0
 802bc96:	b289      	uxth	r1, r1
 802bc98:	4369      	muls	r1, r5
 802bc9a:	fa1f fc8c 	uxth.w	ip, ip
 802bc9e:	fb02 120c 	mla	r2, r2, ip, r1
 802bca2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802bca4:	fb00 2001 	mla	r0, r0, r1, r2
 802bca8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802bcaa:	fb03 0302 	mla	r3, r3, r2, r0
 802bcae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802bcb2:	b1d3      	cbz	r3, 802bcea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802bcb4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802bcb6:	4353      	muls	r3, r2
 802bcb8:	1c5a      	adds	r2, r3, #1
 802bcba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802bcbe:	4a0f      	ldr	r2, [pc, #60]	@ (802bcfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802bcc0:	121b      	asrs	r3, r3, #8
 802bcc2:	6812      	ldr	r2, [r2, #0]
 802bcc4:	2bff      	cmp	r3, #255	@ 0xff
 802bcc6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802bcca:	d12d      	bne.n	802bd28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802bccc:	0953      	lsrs	r3, r2, #5
 802bcce:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802bcd2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802bcd6:	f02c 0c07 	bic.w	ip, ip, #7
 802bcda:	ea43 0c0c 	orr.w	ip, r3, ip
 802bcde:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802bce2:	ea4c 0202 	orr.w	r2, ip, r2
 802bce6:	f8a8 2000 	strh.w	r2, [r8]
 802bcea:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802bcec:	441c      	add	r4, r3
 802bcee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bcf0:	f108 0802 	add.w	r8, r8, #2
 802bcf4:	441e      	add	r6, r3
 802bcf6:	f10b 3bff 	add.w	fp, fp, #4294967295
 802bcfa:	e6ba      	b.n	802ba72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802bcfc:	200138f4 	.word	0x200138f4
 802bd00:	2800      	cmp	r0, #0
 802bd02:	d0ba      	beq.n	802bc7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802bd04:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802bd06:	442b      	add	r3, r5
 802bd08:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802bd0c:	07db      	lsls	r3, r3, #31
 802bd0e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802bd12:	bf54      	ite	pl
 802bd14:	f00c 0c0f 	andpl.w	ip, ip, #15
 802bd18:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802bd1c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802bd20:	fa5f f38c 	uxtb.w	r3, ip
 802bd24:	930c      	str	r3, [sp, #48]	@ 0x30
 802bd26:	e7a8      	b.n	802bc7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802bd28:	f8b8 e000 	ldrh.w	lr, [r8]
 802bd2c:	fa1f fa83 	uxth.w	sl, r3
 802bd30:	ea4f 202e 	mov.w	r0, lr, asr #8
 802bd34:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802bd38:	43db      	mvns	r3, r3
 802bd3a:	b2db      	uxtb	r3, r3
 802bd3c:	fb11 f10a 	smulbb	r1, r1, sl
 802bd40:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802bd44:	fb00 1003 	mla	r0, r0, r3, r1
 802bd48:	b2d2      	uxtb	r2, r2
 802bd4a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802bd4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802bd52:	fa5f fe8e 	uxtb.w	lr, lr
 802bd56:	fb12 f20a 	smulbb	r2, r2, sl
 802bd5a:	fb0e 2203 	mla	r2, lr, r3, r2
 802bd5e:	fa5f fc8c 	uxtb.w	ip, ip
 802bd62:	b280      	uxth	r0, r0
 802bd64:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802bd68:	b292      	uxth	r2, r2
 802bd6a:	fb1c fc0a 	smulbb	ip, ip, sl
 802bd6e:	fb01 cc03 	mla	ip, r1, r3, ip
 802bd72:	1c43      	adds	r3, r0, #1
 802bd74:	1c51      	adds	r1, r2, #1
 802bd76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802bd7a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802bd7e:	fa1f fc8c 	uxth.w	ip, ip
 802bd82:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802bd86:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802bd8a:	4308      	orrs	r0, r1
 802bd8c:	f10c 0101 	add.w	r1, ip, #1
 802bd90:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802bd94:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802bd98:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802bd9c:	ea40 000c 	orr.w	r0, r0, ip
 802bda0:	f8a8 0000 	strh.w	r0, [r8]
 802bda4:	e7a1      	b.n	802bcea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802bda6:	b017      	add	sp, #92	@ 0x5c
 802bda8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802bdac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802bdac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bdb0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802bdb4:	2d00      	cmp	r5, #0
 802bdb6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802bdba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802bdbe:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802bdc2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802bdc6:	fb05 0e03 	mla	lr, r5, r3, r0
 802bdca:	f2c0 80b0 	blt.w	802bf2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802bdce:	45a9      	cmp	r9, r5
 802bdd0:	f340 80ad 	ble.w	802bf2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802bdd4:	2800      	cmp	r0, #0
 802bdd6:	f2c0 80a8 	blt.w	802bf2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802bdda:	4580      	cmp	r8, r0
 802bddc:	f340 80a5 	ble.w	802bf2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802bde0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802bde4:	f01e 0f01 	tst.w	lr, #1
 802bde8:	5d16      	ldrb	r6, [r2, r4]
 802bdea:	bf0c      	ite	eq
 802bdec:	f006 060f 	andeq.w	r6, r6, #15
 802bdf0:	1136      	asrne	r6, r6, #4
 802bdf2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802bdf6:	b2f6      	uxtb	r6, r6
 802bdf8:	1c44      	adds	r4, r0, #1
 802bdfa:	f100 809b 	bmi.w	802bf34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802bdfe:	45a0      	cmp	r8, r4
 802be00:	f340 8098 	ble.w	802bf34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802be04:	2f00      	cmp	r7, #0
 802be06:	f000 8097 	beq.w	802bf38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802be0a:	f10e 0a01 	add.w	sl, lr, #1
 802be0e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802be12:	f01a 0f01 	tst.w	sl, #1
 802be16:	5d14      	ldrb	r4, [r2, r4]
 802be18:	bf0c      	ite	eq
 802be1a:	f004 040f 	andeq.w	r4, r4, #15
 802be1e:	1124      	asrne	r4, r4, #4
 802be20:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802be24:	b2e4      	uxtb	r4, r4
 802be26:	3501      	adds	r5, #1
 802be28:	f100 808a 	bmi.w	802bf40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802be2c:	45a9      	cmp	r9, r5
 802be2e:	f340 8087 	ble.w	802bf40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802be32:	f1bc 0f00 	cmp.w	ip, #0
 802be36:	f000 8086 	beq.w	802bf46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802be3a:	2800      	cmp	r0, #0
 802be3c:	db7e      	blt.n	802bf3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802be3e:	4580      	cmp	r8, r0
 802be40:	dd7c      	ble.n	802bf3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802be42:	eb03 090e 	add.w	r9, r3, lr
 802be46:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802be4a:	f019 0f01 	tst.w	r9, #1
 802be4e:	5d55      	ldrb	r5, [r2, r5]
 802be50:	bf0c      	ite	eq
 802be52:	f005 050f 	andeq.w	r5, r5, #15
 802be56:	112d      	asrne	r5, r5, #4
 802be58:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802be5c:	b2ed      	uxtb	r5, r5
 802be5e:	3001      	adds	r0, #1
 802be60:	d474      	bmi.n	802bf4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802be62:	4580      	cmp	r8, r0
 802be64:	dd72      	ble.n	802bf4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802be66:	2f00      	cmp	r7, #0
 802be68:	d072      	beq.n	802bf50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802be6a:	3301      	adds	r3, #1
 802be6c:	449e      	add	lr, r3
 802be6e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802be72:	f01e 0f01 	tst.w	lr, #1
 802be76:	5cd0      	ldrb	r0, [r2, r3]
 802be78:	bf0c      	ite	eq
 802be7a:	f000 000f 	andeq.w	r0, r0, #15
 802be7e:	1100      	asrne	r0, r0, #4
 802be80:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802be84:	b2c3      	uxtb	r3, r0
 802be86:	b2ba      	uxth	r2, r7
 802be88:	fa1f fc8c 	uxth.w	ip, ip
 802be8c:	fb02 f00c 	mul.w	r0, r2, ip
 802be90:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802be94:	0112      	lsls	r2, r2, #4
 802be96:	fa1f fc8c 	uxth.w	ip, ip
 802be9a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802be9e:	1a12      	subs	r2, r2, r0
 802bea0:	eba7 070c 	sub.w	r7, r7, ip
 802bea4:	b292      	uxth	r2, r2
 802bea6:	b2bf      	uxth	r7, r7
 802bea8:	4362      	muls	r2, r4
 802beaa:	fb06 2207 	mla	r2, r6, r7, r2
 802beae:	fb0c 2505 	mla	r5, ip, r5, r2
 802beb2:	fb00 5303 	mla	r3, r0, r3, r5
 802beb6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802beba:	b3a3      	cbz	r3, 802bf26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802bebc:	4a25      	ldr	r2, [pc, #148]	@ (802bf54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802bebe:	880e      	ldrh	r6, [r1, #0]
 802bec0:	6815      	ldr	r5, [r2, #0]
 802bec2:	1234      	asrs	r4, r6, #8
 802bec4:	b29a      	uxth	r2, r3
 802bec6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802beca:	43db      	mvns	r3, r3
 802becc:	b2db      	uxtb	r3, r3
 802bece:	fb10 f002 	smulbb	r0, r0, r2
 802bed2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802bed6:	fb04 0403 	mla	r4, r4, r3, r0
 802beda:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802bede:	10f0      	asrs	r0, r6, #3
 802bee0:	b2ed      	uxtb	r5, r5
 802bee2:	00f6      	lsls	r6, r6, #3
 802bee4:	fb17 f702 	smulbb	r7, r7, r2
 802bee8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802beec:	fb15 f202 	smulbb	r2, r5, r2
 802bef0:	b2f6      	uxtb	r6, r6
 802bef2:	b2a4      	uxth	r4, r4
 802bef4:	fb00 7003 	mla	r0, r0, r3, r7
 802bef8:	fb06 2303 	mla	r3, r6, r3, r2
 802befc:	b29a      	uxth	r2, r3
 802befe:	1c63      	adds	r3, r4, #1
 802bf00:	b280      	uxth	r0, r0
 802bf02:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802bf06:	1c53      	adds	r3, r2, #1
 802bf08:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802bf0c:	1c42      	adds	r2, r0, #1
 802bf0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802bf12:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802bf16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802bf1a:	0940      	lsrs	r0, r0, #5
 802bf1c:	4323      	orrs	r3, r4
 802bf1e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802bf22:	4303      	orrs	r3, r0
 802bf24:	800b      	strh	r3, [r1, #0]
 802bf26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bf2a:	2600      	movs	r6, #0
 802bf2c:	e764      	b.n	802bdf8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802bf2e:	2400      	movs	r4, #0
 802bf30:	4626      	mov	r6, r4
 802bf32:	e778      	b.n	802be26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802bf34:	2400      	movs	r4, #0
 802bf36:	e776      	b.n	802be26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802bf38:	463c      	mov	r4, r7
 802bf3a:	e774      	b.n	802be26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802bf3c:	2500      	movs	r5, #0
 802bf3e:	e78e      	b.n	802be5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802bf40:	2300      	movs	r3, #0
 802bf42:	461d      	mov	r5, r3
 802bf44:	e79f      	b.n	802be86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bf46:	4663      	mov	r3, ip
 802bf48:	4665      	mov	r5, ip
 802bf4a:	e79c      	b.n	802be86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bf4c:	2300      	movs	r3, #0
 802bf4e:	e79a      	b.n	802be86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bf50:	463b      	mov	r3, r7
 802bf52:	e798      	b.n	802be86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802bf54:	200138f4 	.word	0x200138f4

0802bf58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802bf58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bf5c:	b093      	sub	sp, #76	@ 0x4c
 802bf5e:	461d      	mov	r5, r3
 802bf60:	920c      	str	r2, [sp, #48]	@ 0x30
 802bf62:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 802bf64:	9107      	str	r1, [sp, #28]
 802bf66:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802bf6a:	9011      	str	r0, [sp, #68]	@ 0x44
 802bf6c:	6850      	ldr	r0, [r2, #4]
 802bf6e:	6812      	ldr	r2, [r2, #0]
 802bf70:	fb00 1303 	mla	r3, r0, r3, r1
 802bf74:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802bf78:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bf7a:	689b      	ldr	r3, [r3, #8]
 802bf7c:	3301      	adds	r3, #1
 802bf7e:	f023 0301 	bic.w	r3, r3, #1
 802bf82:	9306      	str	r3, [sp, #24]
 802bf84:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bf86:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802bf8a:	681f      	ldr	r7, [r3, #0]
 802bf8c:	9b07      	ldr	r3, [sp, #28]
 802bf8e:	2b00      	cmp	r3, #0
 802bf90:	dc03      	bgt.n	802bf9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802bf92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802bf94:	2b00      	cmp	r3, #0
 802bf96:	f340 8267 	ble.w	802c468 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802bf9a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bf9c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802bfa0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802bfa4:	1e48      	subs	r0, r1, #1
 802bfa6:	f102 3cff 	add.w	ip, r2, #4294967295
 802bfaa:	2d00      	cmp	r5, #0
 802bfac:	f340 80b8 	ble.w	802c120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802bfb0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802bfb4:	ea4f 4326 	mov.w	r3, r6, asr #16
 802bfb8:	d406      	bmi.n	802bfc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802bfba:	4586      	cmp	lr, r0
 802bfbc:	da04      	bge.n	802bfc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802bfbe:	2b00      	cmp	r3, #0
 802bfc0:	db02      	blt.n	802bfc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802bfc2:	4563      	cmp	r3, ip
 802bfc4:	f2c0 80ad 	blt.w	802c122 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802bfc8:	f11e 0e01 	adds.w	lr, lr, #1
 802bfcc:	f100 80a0 	bmi.w	802c110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bfd0:	4571      	cmp	r1, lr
 802bfd2:	f2c0 809d 	blt.w	802c110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bfd6:	3301      	adds	r3, #1
 802bfd8:	f100 809a 	bmi.w	802c110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bfdc:	429a      	cmp	r2, r3
 802bfde:	f2c0 8097 	blt.w	802c110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802bfe2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802bfe6:	9509      	str	r5, [sp, #36]	@ 0x24
 802bfe8:	46c8      	mov	r8, r9
 802bfea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802bfec:	2b00      	cmp	r3, #0
 802bfee:	f340 80b6 	ble.w	802c15e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802bff2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802bff6:	9308      	str	r3, [sp, #32]
 802bff8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802bffa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802bffe:	1423      	asrs	r3, r4, #16
 802c000:	ea4f 4026 	mov.w	r0, r6, asr #16
 802c004:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802c008:	f100 813e 	bmi.w	802c288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802c00c:	f10c 3bff 	add.w	fp, ip, #4294967295
 802c010:	455b      	cmp	r3, fp
 802c012:	f280 8139 	bge.w	802c288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802c016:	2800      	cmp	r0, #0
 802c018:	f2c0 8136 	blt.w	802c288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802c01c:	f10e 3bff 	add.w	fp, lr, #4294967295
 802c020:	4558      	cmp	r0, fp
 802c022:	f280 8131 	bge.w	802c288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802c026:	9a06      	ldr	r2, [sp, #24]
 802c028:	fb00 3302 	mla	r3, r0, r2, r3
 802c02c:	0858      	lsrs	r0, r3, #1
 802c02e:	07da      	lsls	r2, r3, #31
 802c030:	f817 c000 	ldrb.w	ip, [r7, r0]
 802c034:	9a08      	ldr	r2, [sp, #32]
 802c036:	bf54      	ite	pl
 802c038:	f00c 0c0f 	andpl.w	ip, ip, #15
 802c03c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802c040:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802c044:	fa5f fc8c 	uxtb.w	ip, ip
 802c048:	2a00      	cmp	r2, #0
 802c04a:	f000 80cb 	beq.w	802c1e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802c04e:	1c58      	adds	r0, r3, #1
 802c050:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802c054:	07c0      	lsls	r0, r0, #31
 802c056:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802c05a:	bf54      	ite	pl
 802c05c:	f00e 0e0f 	andpl.w	lr, lr, #15
 802c060:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802c064:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802c068:	fa5f fe8e 	uxtb.w	lr, lr
 802c06c:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 802c070:	b1b9      	cbz	r1, 802c0a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802c072:	4453      	add	r3, sl
 802c074:	0858      	lsrs	r0, r3, #1
 802c076:	07da      	lsls	r2, r3, #31
 802c078:	5c38      	ldrb	r0, [r7, r0]
 802c07a:	bf54      	ite	pl
 802c07c:	f000 000f 	andpl.w	r0, r0, #15
 802c080:	1100      	asrmi	r0, r0, #4
 802c082:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802c086:	b2c0      	uxtb	r0, r0
 802c088:	900a      	str	r0, [sp, #40]	@ 0x28
 802c08a:	1c58      	adds	r0, r3, #1
 802c08c:	0843      	lsrs	r3, r0, #1
 802c08e:	07c2      	lsls	r2, r0, #31
 802c090:	5cfb      	ldrb	r3, [r7, r3]
 802c092:	bf54      	ite	pl
 802c094:	f003 030f 	andpl.w	r3, r3, #15
 802c098:	111b      	asrmi	r3, r3, #4
 802c09a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802c09e:	b2db      	uxtb	r3, r3
 802c0a0:	930e      	str	r3, [sp, #56]	@ 0x38
 802c0a2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802c0a6:	b289      	uxth	r1, r1
 802c0a8:	fb02 f301 	mul.w	r3, r2, r1
 802c0ac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802c0b0:	0112      	lsls	r2, r2, #4
 802c0b2:	b289      	uxth	r1, r1
 802c0b4:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802c0b8:	1a40      	subs	r0, r0, r1
 802c0ba:	fa1f fe80 	uxth.w	lr, r0
 802c0be:	1ad2      	subs	r2, r2, r3
 802c0c0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802c0c2:	b292      	uxth	r2, r2
 802c0c4:	4342      	muls	r2, r0
 802c0c6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802c0ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802c0cc:	fb01 c102 	mla	r1, r1, r2, ip
 802c0d0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802c0d2:	fb03 1302 	mla	r3, r3, r2, r1
 802c0d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802c0da:	2bff      	cmp	r3, #255	@ 0xff
 802c0dc:	f040 8093 	bne.w	802c206 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802c0e0:	4bbe      	ldr	r3, [pc, #760]	@ (802c3dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802c0e2:	681a      	ldr	r2, [r3, #0]
 802c0e4:	4bbe      	ldr	r3, [pc, #760]	@ (802c3e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802c0e6:	0951      	lsrs	r1, r2, #5
 802c0e8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802c0ec:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802c0f0:	430b      	orrs	r3, r1
 802c0f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802c0f6:	4313      	orrs	r3, r2
 802c0f8:	f8a8 3000 	strh.w	r3, [r8]
 802c0fc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c0fe:	441c      	add	r4, r3
 802c100:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c102:	441e      	add	r6, r3
 802c104:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802c106:	3b01      	subs	r3, #1
 802c108:	f108 0802 	add.w	r8, r8, #2
 802c10c:	9309      	str	r3, [sp, #36]	@ 0x24
 802c10e:	e76c      	b.n	802bfea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802c110:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c112:	441c      	add	r4, r3
 802c114:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c116:	3d01      	subs	r5, #1
 802c118:	441e      	add	r6, r3
 802c11a:	f109 0902 	add.w	r9, r9, #2
 802c11e:	e744      	b.n	802bfaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802c120:	d021      	beq.n	802c166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802c122:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802c124:	1e6b      	subs	r3, r5, #1
 802c126:	fb00 4003 	mla	r0, r0, r3, r4
 802c12a:	1400      	asrs	r0, r0, #16
 802c12c:	f53f af59 	bmi.w	802bfe2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c130:	3901      	subs	r1, #1
 802c132:	4288      	cmp	r0, r1
 802c134:	f6bf af55 	bge.w	802bfe2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c138:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802c13a:	fb01 6303 	mla	r3, r1, r3, r6
 802c13e:	141b      	asrs	r3, r3, #16
 802c140:	f53f af4f 	bmi.w	802bfe2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c144:	3a01      	subs	r2, #1
 802c146:	4293      	cmp	r3, r2
 802c148:	f6bf af4b 	bge.w	802bfe2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802c14c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802c150:	9308      	str	r3, [sp, #32]
 802c152:	46a8      	mov	r8, r5
 802c154:	46ce      	mov	lr, r9
 802c156:	f1b8 0f00 	cmp.w	r8, #0
 802c15a:	f300 80b5 	bgt.w	802c2c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802c15e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802c162:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802c166:	9b07      	ldr	r3, [sp, #28]
 802c168:	2b00      	cmp	r3, #0
 802c16a:	f340 817d 	ble.w	802c468 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802c16e:	ee30 0a04 	vadd.f32	s0, s0, s8
 802c172:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802c176:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802c17a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802c17c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802c180:	ee31 1a05 	vadd.f32	s2, s2, s10
 802c184:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802c188:	eef0 6a62 	vmov.f32	s13, s5
 802c18c:	ee61 7a27 	vmul.f32	s15, s2, s15
 802c190:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c194:	ee77 2a62 	vsub.f32	s5, s14, s5
 802c198:	ee16 4a90 	vmov	r4, s13
 802c19c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802c1a0:	eef0 6a43 	vmov.f32	s13, s6
 802c1a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802c1a8:	ee12 2a90 	vmov	r2, s5
 802c1ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802c1b0:	fb92 f3f3 	sdiv	r3, r2, r3
 802c1b4:	ee13 2a10 	vmov	r2, s6
 802c1b8:	931f      	str	r3, [sp, #124]	@ 0x7c
 802c1ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802c1bc:	fb92 f3f3 	sdiv	r3, r2, r3
 802c1c0:	9320      	str	r3, [sp, #128]	@ 0x80
 802c1c2:	9b07      	ldr	r3, [sp, #28]
 802c1c4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802c1c6:	3b01      	subs	r3, #1
 802c1c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c1cc:	9307      	str	r3, [sp, #28]
 802c1ce:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802c1d0:	ee16 6a90 	vmov	r6, s13
 802c1d4:	bf14      	ite	ne
 802c1d6:	461d      	movne	r5, r3
 802c1d8:	4615      	moveq	r5, r2
 802c1da:	eeb0 3a67 	vmov.f32	s6, s15
 802c1de:	eef0 2a47 	vmov.f32	s5, s14
 802c1e2:	e6d3      	b.n	802bf8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802c1e4:	2900      	cmp	r1, #0
 802c1e6:	f43f af5c 	beq.w	802c0a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802c1ea:	eb0a 0003 	add.w	r0, sl, r3
 802c1ee:	0843      	lsrs	r3, r0, #1
 802c1f0:	07c0      	lsls	r0, r0, #31
 802c1f2:	5cfb      	ldrb	r3, [r7, r3]
 802c1f4:	bf54      	ite	pl
 802c1f6:	f003 030f 	andpl.w	r3, r3, #15
 802c1fa:	111b      	asrmi	r3, r3, #4
 802c1fc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802c200:	b2db      	uxtb	r3, r3
 802c202:	930a      	str	r3, [sp, #40]	@ 0x28
 802c204:	e74d      	b.n	802c0a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802c206:	2b00      	cmp	r3, #0
 802c208:	f43f af78 	beq.w	802c0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c20c:	4a73      	ldr	r2, [pc, #460]	@ (802c3dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802c20e:	f8b8 c000 	ldrh.w	ip, [r8]
 802c212:	6810      	ldr	r0, [r2, #0]
 802c214:	fa1f fe83 	uxth.w	lr, r3
 802c218:	ea4f 212c 	mov.w	r1, ip, asr #8
 802c21c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802c220:	43db      	mvns	r3, r3
 802c222:	b2db      	uxtb	r3, r3
 802c224:	fb12 f20e 	smulbb	r2, r2, lr
 802c228:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c22c:	fb01 2103 	mla	r1, r1, r3, r2
 802c230:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802c234:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802c238:	b2c0      	uxtb	r0, r0
 802c23a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802c23e:	fb1b fb0e 	smulbb	fp, fp, lr
 802c242:	b289      	uxth	r1, r1
 802c244:	fb10 fe0e 	smulbb	lr, r0, lr
 802c248:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c24c:	fa5f fc8c 	uxtb.w	ip, ip
 802c250:	fb02 b203 	mla	r2, r2, r3, fp
 802c254:	1c48      	adds	r0, r1, #1
 802c256:	fb0c e303 	mla	r3, ip, r3, lr
 802c25a:	b292      	uxth	r2, r2
 802c25c:	b29b      	uxth	r3, r3
 802c25e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802c262:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802c266:	f102 0b01 	add.w	fp, r2, #1
 802c26a:	1c59      	adds	r1, r3, #1
 802c26c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802c270:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802c274:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802c278:	0952      	lsrs	r2, r2, #5
 802c27a:	4301      	orrs	r1, r0
 802c27c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c280:	4311      	orrs	r1, r2
 802c282:	f8a8 1000 	strh.w	r1, [r8]
 802c286:	e739      	b.n	802c0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c288:	f113 0b01 	adds.w	fp, r3, #1
 802c28c:	f53f af36 	bmi.w	802c0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c290:	45dc      	cmp	ip, fp
 802c292:	f6ff af33 	blt.w	802c0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c296:	f110 0b01 	adds.w	fp, r0, #1
 802c29a:	f53f af2f 	bmi.w	802c0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c29e:	45de      	cmp	lr, fp
 802c2a0:	f6ff af2c 	blt.w	802c0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c2a4:	9a08      	ldr	r2, [sp, #32]
 802c2a6:	9302      	str	r3, [sp, #8]
 802c2a8:	fa0f f38e 	sxth.w	r3, lr
 802c2ac:	9301      	str	r3, [sp, #4]
 802c2ae:	fa0f f38c 	sxth.w	r3, ip
 802c2b2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802c2b6:	9105      	str	r1, [sp, #20]
 802c2b8:	9300      	str	r3, [sp, #0]
 802c2ba:	463a      	mov	r2, r7
 802c2bc:	4653      	mov	r3, sl
 802c2be:	4641      	mov	r1, r8
 802c2c0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802c2c2:	f7ff fd73 	bl	802bdac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802c2c6:	e719      	b.n	802c0fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802c2c8:	9906      	ldr	r1, [sp, #24]
 802c2ca:	1422      	asrs	r2, r4, #16
 802c2cc:	1433      	asrs	r3, r6, #16
 802c2ce:	fb01 2303 	mla	r3, r1, r3, r2
 802c2d2:	085a      	lsrs	r2, r3, #1
 802c2d4:	07d9      	lsls	r1, r3, #31
 802c2d6:	5cba      	ldrb	r2, [r7, r2]
 802c2d8:	bf54      	ite	pl
 802c2da:	f002 020f 	andpl.w	r2, r2, #15
 802c2de:	1112      	asrmi	r2, r2, #4
 802c2e0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802c2e4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802c2e8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802c2ec:	b2d2      	uxtb	r2, r2
 802c2ee:	2800      	cmp	r0, #0
 802c2f0:	d062      	beq.n	802c3b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802c2f2:	f103 0a01 	add.w	sl, r3, #1
 802c2f6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802c2fa:	f01a 0f01 	tst.w	sl, #1
 802c2fe:	5c79      	ldrb	r1, [r7, r1]
 802c300:	bf0c      	ite	eq
 802c302:	f001 010f 	andeq.w	r1, r1, #15
 802c306:	1109      	asrne	r1, r1, #4
 802c308:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c30c:	b2c9      	uxtb	r1, r1
 802c30e:	910f      	str	r1, [sp, #60]	@ 0x3c
 802c310:	f1bc 0f00 	cmp.w	ip, #0
 802c314:	d019      	beq.n	802c34a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802c316:	9908      	ldr	r1, [sp, #32]
 802c318:	440b      	add	r3, r1
 802c31a:	0859      	lsrs	r1, r3, #1
 802c31c:	f013 0f01 	tst.w	r3, #1
 802c320:	5c79      	ldrb	r1, [r7, r1]
 802c322:	bf0c      	ite	eq
 802c324:	f001 010f 	andeq.w	r1, r1, #15
 802c328:	1109      	asrne	r1, r1, #4
 802c32a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c32e:	b2c9      	uxtb	r1, r1
 802c330:	3301      	adds	r3, #1
 802c332:	910b      	str	r1, [sp, #44]	@ 0x2c
 802c334:	0859      	lsrs	r1, r3, #1
 802c336:	07db      	lsls	r3, r3, #31
 802c338:	5c79      	ldrb	r1, [r7, r1]
 802c33a:	bf54      	ite	pl
 802c33c:	f001 010f 	andpl.w	r1, r1, #15
 802c340:	1109      	asrmi	r1, r1, #4
 802c342:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c346:	b2c9      	uxtb	r1, r1
 802c348:	9110      	str	r1, [sp, #64]	@ 0x40
 802c34a:	b280      	uxth	r0, r0
 802c34c:	fa1f fc8c 	uxth.w	ip, ip
 802c350:	fb00 f30c 	mul.w	r3, r0, ip
 802c354:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802c358:	0100      	lsls	r0, r0, #4
 802c35a:	fa1f fc8c 	uxth.w	ip, ip
 802c35e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 802c362:	eba1 010c 	sub.w	r1, r1, ip
 802c366:	fa1f fa81 	uxth.w	sl, r1
 802c36a:	1ac0      	subs	r0, r0, r3
 802c36c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802c36e:	b280      	uxth	r0, r0
 802c370:	4348      	muls	r0, r1
 802c372:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802c374:	fb02 020a 	mla	r2, r2, sl, r0
 802c378:	fb0c 2c01 	mla	ip, ip, r1, r2
 802c37c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802c37e:	fb03 c302 	mla	r3, r3, r2, ip
 802c382:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802c386:	2bff      	cmp	r3, #255	@ 0xff
 802c388:	d12c      	bne.n	802c3e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802c38a:	4b14      	ldr	r3, [pc, #80]	@ (802c3dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802c38c:	681a      	ldr	r2, [r3, #0]
 802c38e:	4b14      	ldr	r3, [pc, #80]	@ (802c3e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802c390:	0951      	lsrs	r1, r2, #5
 802c392:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802c396:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802c39a:	430b      	orrs	r3, r1
 802c39c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802c3a0:	4313      	orrs	r3, r2
 802c3a2:	f8ae 3000 	strh.w	r3, [lr]
 802c3a6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802c3a8:	441c      	add	r4, r3
 802c3aa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802c3ac:	f10e 0e02 	add.w	lr, lr, #2
 802c3b0:	441e      	add	r6, r3
 802c3b2:	f108 38ff 	add.w	r8, r8, #4294967295
 802c3b6:	e6ce      	b.n	802c156 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802c3b8:	f1bc 0f00 	cmp.w	ip, #0
 802c3bc:	d0c5      	beq.n	802c34a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802c3be:	9908      	ldr	r1, [sp, #32]
 802c3c0:	440b      	add	r3, r1
 802c3c2:	0859      	lsrs	r1, r3, #1
 802c3c4:	07db      	lsls	r3, r3, #31
 802c3c6:	5c79      	ldrb	r1, [r7, r1]
 802c3c8:	bf54      	ite	pl
 802c3ca:	f001 010f 	andpl.w	r1, r1, #15
 802c3ce:	1109      	asrmi	r1, r1, #4
 802c3d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802c3d4:	b2c9      	uxtb	r1, r1
 802c3d6:	910b      	str	r1, [sp, #44]	@ 0x2c
 802c3d8:	e7b7      	b.n	802c34a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802c3da:	bf00      	nop
 802c3dc:	200138f4 	.word	0x200138f4
 802c3e0:	fffff800 	.word	0xfffff800
 802c3e4:	2b00      	cmp	r3, #0
 802c3e6:	d0de      	beq.n	802c3a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802c3e8:	4a21      	ldr	r2, [pc, #132]	@ (802c470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802c3ea:	f8be c000 	ldrh.w	ip, [lr]
 802c3ee:	6810      	ldr	r0, [r2, #0]
 802c3f0:	fa1f fa83 	uxth.w	sl, r3
 802c3f4:	ea4f 212c 	mov.w	r1, ip, asr #8
 802c3f8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802c3fc:	43db      	mvns	r3, r3
 802c3fe:	b2db      	uxtb	r3, r3
 802c400:	fb12 f20a 	smulbb	r2, r2, sl
 802c404:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802c408:	fb01 2103 	mla	r1, r1, r3, r2
 802c40c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802c410:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802c414:	b2c0      	uxtb	r0, r0
 802c416:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802c41a:	fa5f fc8c 	uxtb.w	ip, ip
 802c41e:	fb10 f00a 	smulbb	r0, r0, sl
 802c422:	fb0c 0003 	mla	r0, ip, r3, r0
 802c426:	b289      	uxth	r1, r1
 802c428:	fb1b fb0a 	smulbb	fp, fp, sl
 802c42c:	b280      	uxth	r0, r0
 802c42e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802c432:	fb02 b203 	mla	r2, r2, r3, fp
 802c436:	1c4b      	adds	r3, r1, #1
 802c438:	f100 0b01 	add.w	fp, r0, #1
 802c43c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802c440:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802c444:	b292      	uxth	r2, r2
 802c446:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802c44a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802c44e:	ea4b 0101 	orr.w	r1, fp, r1
 802c452:	f102 0b01 	add.w	fp, r2, #1
 802c456:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802c45a:	0952      	lsrs	r2, r2, #5
 802c45c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802c460:	4311      	orrs	r1, r2
 802c462:	f8ae 1000 	strh.w	r1, [lr]
 802c466:	e79e      	b.n	802c3a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802c468:	b013      	add	sp, #76	@ 0x4c
 802c46a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c46e:	bf00      	nop
 802c470:	200138f4 	.word	0x200138f4

0802c474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802c474:	b570      	push	{r4, r5, r6, lr}
 802c476:	1208      	asrs	r0, r1, #8
 802c478:	b29e      	uxth	r6, r3
 802c47a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802c47e:	1213      	asrs	r3, r2, #8
 802c480:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802c484:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802c488:	fb13 f305 	smulbb	r3, r3, r5
 802c48c:	fb10 f006 	smulbb	r0, r0, r6
 802c490:	4418      	add	r0, r3
 802c492:	10cc      	asrs	r4, r1, #3
 802c494:	10d3      	asrs	r3, r2, #3
 802c496:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802c49a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802c49e:	fb13 f305 	smulbb	r3, r3, r5
 802c4a2:	fb14 f406 	smulbb	r4, r4, r6
 802c4a6:	00c9      	lsls	r1, r1, #3
 802c4a8:	00d2      	lsls	r2, r2, #3
 802c4aa:	441c      	add	r4, r3
 802c4ac:	b2d2      	uxtb	r2, r2
 802c4ae:	b2cb      	uxtb	r3, r1
 802c4b0:	fb12 f205 	smulbb	r2, r2, r5
 802c4b4:	b280      	uxth	r0, r0
 802c4b6:	fb13 f306 	smulbb	r3, r3, r6
 802c4ba:	4413      	add	r3, r2
 802c4bc:	1c42      	adds	r2, r0, #1
 802c4be:	b29b      	uxth	r3, r3
 802c4c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802c4c4:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802c4c8:	1c58      	adds	r0, r3, #1
 802c4ca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c4ce:	b2a4      	uxth	r4, r4
 802c4d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c4d4:	4310      	orrs	r0, r2
 802c4d6:	1c62      	adds	r2, r4, #1
 802c4d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c4dc:	0964      	lsrs	r4, r4, #5
 802c4de:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802c4e2:	4320      	orrs	r0, r4
 802c4e4:	bd70      	pop	{r4, r5, r6, pc}
	...

0802c4e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802c4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c4ec:	b08f      	sub	sp, #60	@ 0x3c
 802c4ee:	461c      	mov	r4, r3
 802c4f0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802c4f4:	9004      	str	r0, [sp, #16]
 802c4f6:	460d      	mov	r5, r1
 802c4f8:	4616      	mov	r6, r2
 802c4fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802c4fc:	2f00      	cmp	r7, #0
 802c4fe:	f000 80f6 	beq.w	802c6ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802c502:	6820      	ldr	r0, [r4, #0]
 802c504:	6861      	ldr	r1, [r4, #4]
 802c506:	aa0a      	add	r2, sp, #40	@ 0x28
 802c508:	c203      	stmia	r2!, {r0, r1}
 802c50a:	6818      	ldr	r0, [r3, #0]
 802c50c:	6859      	ldr	r1, [r3, #4]
 802c50e:	aa0c      	add	r2, sp, #48	@ 0x30
 802c510:	c203      	stmia	r2!, {r0, r1}
 802c512:	a80a      	add	r0, sp, #40	@ 0x28
 802c514:	f7ee fdc2 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c518:	4621      	mov	r1, r4
 802c51a:	a80c      	add	r0, sp, #48	@ 0x30
 802c51c:	f7ee fe02 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c520:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802c524:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802c528:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802c52c:	f002 0301 	and.w	r3, r2, #1
 802c530:	9306      	str	r3, [sp, #24]
 802c532:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c536:	f003 0101 	and.w	r1, r3, #1
 802c53a:	9105      	str	r1, [sp, #20]
 802c53c:	9805      	ldr	r0, [sp, #20]
 802c53e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802c542:	4403      	add	r3, r0
 802c544:	fb01 2303 	mla	r3, r1, r3, r2
 802c548:	f04f 0802 	mov.w	r8, #2
 802c54c:	fb93 f3f8 	sdiv	r3, r3, r8
 802c550:	441d      	add	r5, r3
 802c552:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802c556:	441a      	add	r2, r3
 802c558:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802c55c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802c560:	4419      	add	r1, r3
 802c562:	4b64      	ldr	r3, [pc, #400]	@ (802c6f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802c564:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802c568:	6818      	ldr	r0, [r3, #0]
 802c56a:	6803      	ldr	r3, [r0, #0]
 802c56c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802c56e:	4798      	blx	r3
 802c570:	4a61      	ldr	r2, [pc, #388]	@ (802c6f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802c572:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802c576:	8813      	ldrh	r3, [r2, #0]
 802c578:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802c57c:	2fff      	cmp	r7, #255	@ 0xff
 802c57e:	fb03 a404 	mla	r4, r3, r4, sl
 802c582:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c586:	f106 0604 	add.w	r6, r6, #4
 802c58a:	4611      	mov	r1, r2
 802c58c:	fb03 fb0b 	mul.w	fp, r3, fp
 802c590:	d06b      	beq.n	802c66a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802c592:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802c596:	9303      	str	r3, [sp, #12]
 802c598:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802c59c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802c5a0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802c5a4:	9b07      	ldr	r3, [sp, #28]
 802c5a6:	42a3      	cmp	r3, r4
 802c5a8:	f240 809c 	bls.w	802c6e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802c5ac:	9b06      	ldr	r3, [sp, #24]
 802c5ae:	2b00      	cmp	r3, #0
 802c5b0:	d039      	beq.n	802c626 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802c5b2:	782b      	ldrb	r3, [r5, #0]
 802c5b4:	8822      	ldrh	r2, [r4, #0]
 802c5b6:	9804      	ldr	r0, [sp, #16]
 802c5b8:	f003 030f 	and.w	r3, r3, #15
 802c5bc:	f105 0801 	add.w	r8, r5, #1
 802c5c0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c5c4:	9b03      	ldr	r3, [sp, #12]
 802c5c6:	9300      	str	r3, [sp, #0]
 802c5c8:	463b      	mov	r3, r7
 802c5ca:	f7ff ff53 	bl	802c474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c5ce:	f824 0b02 	strh.w	r0, [r4], #2
 802c5d2:	f109 3bff 	add.w	fp, r9, #4294967295
 802c5d6:	f1bb 0f01 	cmp.w	fp, #1
 802c5da:	46a2      	mov	sl, r4
 802c5dc:	f104 0404 	add.w	r4, r4, #4
 802c5e0:	dd24      	ble.n	802c62c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802c5e2:	f898 3000 	ldrb.w	r3, [r8]
 802c5e6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802c5ea:	9804      	ldr	r0, [sp, #16]
 802c5ec:	091b      	lsrs	r3, r3, #4
 802c5ee:	f1ab 0b02 	sub.w	fp, fp, #2
 802c5f2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c5f6:	9b03      	ldr	r3, [sp, #12]
 802c5f8:	9300      	str	r3, [sp, #0]
 802c5fa:	463b      	mov	r3, r7
 802c5fc:	f7ff ff3a 	bl	802c474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c600:	f824 0c04 	strh.w	r0, [r4, #-4]
 802c604:	f818 3b01 	ldrb.w	r3, [r8], #1
 802c608:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802c60c:	9804      	ldr	r0, [sp, #16]
 802c60e:	f003 030f 	and.w	r3, r3, #15
 802c612:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c616:	9b03      	ldr	r3, [sp, #12]
 802c618:	9300      	str	r3, [sp, #0]
 802c61a:	463b      	mov	r3, r7
 802c61c:	f7ff ff2a 	bl	802c474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c620:	f824 0c02 	strh.w	r0, [r4, #-2]
 802c624:	e7d7      	b.n	802c5d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802c626:	46a8      	mov	r8, r5
 802c628:	46cb      	mov	fp, r9
 802c62a:	e7d4      	b.n	802c5d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802c62c:	d10e      	bne.n	802c64c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802c62e:	f898 3000 	ldrb.w	r3, [r8]
 802c632:	f8ba 2000 	ldrh.w	r2, [sl]
 802c636:	9804      	ldr	r0, [sp, #16]
 802c638:	091b      	lsrs	r3, r3, #4
 802c63a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802c63e:	9b03      	ldr	r3, [sp, #12]
 802c640:	9300      	str	r3, [sp, #0]
 802c642:	463b      	mov	r3, r7
 802c644:	f7ff ff16 	bl	802c474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802c648:	f82a 0b02 	strh.w	r0, [sl], #2
 802c64c:	9b08      	ldr	r3, [sp, #32]
 802c64e:	9a05      	ldr	r2, [sp, #20]
 802c650:	881c      	ldrh	r4, [r3, #0]
 802c652:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c656:	eba4 0409 	sub.w	r4, r4, r9
 802c65a:	4413      	add	r3, r2
 802c65c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802c660:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802c662:	fb93 f3f2 	sdiv	r3, r3, r2
 802c666:	441d      	add	r5, r3
 802c668:	e79c      	b.n	802c5a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802c66a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802c66e:	45a3      	cmp	fp, r4
 802c670:	d938      	bls.n	802c6e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802c672:	9b06      	ldr	r3, [sp, #24]
 802c674:	b1f3      	cbz	r3, 802c6b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802c676:	782b      	ldrb	r3, [r5, #0]
 802c678:	f003 030f 	and.w	r3, r3, #15
 802c67c:	1c6a      	adds	r2, r5, #1
 802c67e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802c682:	8023      	strh	r3, [r4, #0]
 802c684:	f109 30ff 	add.w	r0, r9, #4294967295
 802c688:	3402      	adds	r4, #2
 802c68a:	2801      	cmp	r0, #1
 802c68c:	4623      	mov	r3, r4
 802c68e:	f104 0404 	add.w	r4, r4, #4
 802c692:	dd12      	ble.n	802c6ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802c694:	7813      	ldrb	r3, [r2, #0]
 802c696:	091b      	lsrs	r3, r3, #4
 802c698:	3802      	subs	r0, #2
 802c69a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802c69e:	f824 3c04 	strh.w	r3, [r4, #-4]
 802c6a2:	f812 3b01 	ldrb.w	r3, [r2], #1
 802c6a6:	f003 030f 	and.w	r3, r3, #15
 802c6aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802c6ae:	f824 3c02 	strh.w	r3, [r4, #-2]
 802c6b2:	e7ea      	b.n	802c68a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802c6b4:	462a      	mov	r2, r5
 802c6b6:	4648      	mov	r0, r9
 802c6b8:	e7e7      	b.n	802c68a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802c6ba:	d106      	bne.n	802c6ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802c6bc:	7812      	ldrb	r2, [r2, #0]
 802c6be:	0912      	lsrs	r2, r2, #4
 802c6c0:	3302      	adds	r3, #2
 802c6c2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802c6c6:	f823 2c02 	strh.w	r2, [r3, #-2]
 802c6ca:	880c      	ldrh	r4, [r1, #0]
 802c6cc:	9a05      	ldr	r2, [sp, #20]
 802c6ce:	eba4 0409 	sub.w	r4, r4, r9
 802c6d2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802c6d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c6da:	4413      	add	r3, r2
 802c6dc:	fb93 f3f8 	sdiv	r3, r3, r8
 802c6e0:	441d      	add	r5, r3
 802c6e2:	e7c4      	b.n	802c66e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802c6e4:	4b03      	ldr	r3, [pc, #12]	@ (802c6f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802c6e6:	6818      	ldr	r0, [r3, #0]
 802c6e8:	6803      	ldr	r3, [r0, #0]
 802c6ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802c6ec:	4798      	blx	r3
 802c6ee:	b00f      	add	sp, #60	@ 0x3c
 802c6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c6f4:	200138e4 	.word	0x200138e4
 802c6f8:	200138de 	.word	0x200138de

0802c6fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802c6fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c6fe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802c702:	2dff      	cmp	r5, #255	@ 0xff
 802c704:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802c708:	d10c      	bne.n	802c724 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802c70a:	2bff      	cmp	r3, #255	@ 0xff
 802c70c:	d10a      	bne.n	802c724 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802c70e:	4b25      	ldr	r3, [pc, #148]	@ (802c7a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802c710:	0948      	lsrs	r0, r1, #5
 802c712:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802c716:	403b      	ands	r3, r7
 802c718:	4318      	orrs	r0, r3
 802c71a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802c71e:	4308      	orrs	r0, r1
 802c720:	b280      	uxth	r0, r0
 802c722:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c724:	fb15 f503 	smulbb	r5, r5, r3
 802c728:	b2ab      	uxth	r3, r5
 802c72a:	1c5d      	adds	r5, r3, #1
 802c72c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802c730:	1214      	asrs	r4, r2, #8
 802c732:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802c736:	fa1f fc85 	uxth.w	ip, r5
 802c73a:	10d6      	asrs	r6, r2, #3
 802c73c:	00d0      	lsls	r0, r2, #3
 802c73e:	43ed      	mvns	r5, r5
 802c740:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c744:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802c748:	b2eb      	uxtb	r3, r5
 802c74a:	b2c0      	uxtb	r0, r0
 802c74c:	fb12 f20c 	smulbb	r2, r2, ip
 802c750:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802c754:	fb04 2403 	mla	r4, r4, r3, r2
 802c758:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802c75c:	b2c8      	uxtb	r0, r1
 802c75e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802c762:	b2fd      	uxtb	r5, r7
 802c764:	fb10 f00c 	smulbb	r0, r0, ip
 802c768:	b2a4      	uxth	r4, r4
 802c76a:	fb02 0003 	mla	r0, r2, r3, r0
 802c76e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802c772:	fb15 f50c 	smulbb	r5, r5, ip
 802c776:	fb06 5503 	mla	r5, r6, r3, r5
 802c77a:	b283      	uxth	r3, r0
 802c77c:	1c60      	adds	r0, r4, #1
 802c77e:	b2ad      	uxth	r5, r5
 802c780:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802c784:	1c58      	adds	r0, r3, #1
 802c786:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c78a:	1c6b      	adds	r3, r5, #1
 802c78c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802c790:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802c794:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c798:	096d      	lsrs	r5, r5, #5
 802c79a:	4320      	orrs	r0, r4
 802c79c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802c7a0:	4328      	orrs	r0, r5
 802c7a2:	e7be      	b.n	802c722 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802c7a4:	00fff800 	.word	0x00fff800

0802c7a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802c7a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c7ac:	461c      	mov	r4, r3
 802c7ae:	b08d      	sub	sp, #52	@ 0x34
 802c7b0:	460d      	mov	r5, r1
 802c7b2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802c7b4:	6861      	ldr	r1, [r4, #4]
 802c7b6:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802c7ba:	4680      	mov	r8, r0
 802c7bc:	6820      	ldr	r0, [r4, #0]
 802c7be:	4616      	mov	r6, r2
 802c7c0:	aa08      	add	r2, sp, #32
 802c7c2:	c203      	stmia	r2!, {r0, r1}
 802c7c4:	6818      	ldr	r0, [r3, #0]
 802c7c6:	6859      	ldr	r1, [r3, #4]
 802c7c8:	aa0a      	add	r2, sp, #40	@ 0x28
 802c7ca:	c203      	stmia	r2!, {r0, r1}
 802c7cc:	a808      	add	r0, sp, #32
 802c7ce:	f7ee fc65 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c7d2:	4621      	mov	r1, r4
 802c7d4:	a80a      	add	r0, sp, #40	@ 0x28
 802c7d6:	f7ee fca5 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c7da:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802c7de:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 802c7e2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802c7e6:	f002 0301 	and.w	r3, r2, #1
 802c7ea:	9303      	str	r3, [sp, #12]
 802c7ec:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802c7f0:	f003 0101 	and.w	r1, r3, #1
 802c7f4:	9102      	str	r1, [sp, #8]
 802c7f6:	9802      	ldr	r0, [sp, #8]
 802c7f8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 802c7fc:	4403      	add	r3, r0
 802c7fe:	fb01 2303 	mla	r3, r1, r3, r2
 802c802:	f04f 0a02 	mov.w	sl, #2
 802c806:	fb93 f3fa 	sdiv	r3, r3, sl
 802c80a:	441d      	add	r5, r3
 802c80c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802c810:	441a      	add	r2, r3
 802c812:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802c816:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802c81a:	4a3f      	ldr	r2, [pc, #252]	@ (802c918 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802c81c:	9205      	str	r2, [sp, #20]
 802c81e:	4419      	add	r1, r3
 802c820:	6810      	ldr	r0, [r2, #0]
 802c822:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802c826:	6803      	ldr	r3, [r0, #0]
 802c828:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802c82a:	4798      	blx	r3
 802c82c:	4b3b      	ldr	r3, [pc, #236]	@ (802c91c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802c82e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 802c832:	8819      	ldrh	r1, [r3, #0]
 802c834:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802c838:	fb01 c404 	mla	r4, r1, r4, ip
 802c83c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802c840:	434f      	muls	r7, r1
 802c842:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802c846:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802c84a:	3604      	adds	r6, #4
 802c84c:	9204      	str	r2, [sp, #16]
 802c84e:	9b04      	ldr	r3, [sp, #16]
 802c850:	429c      	cmp	r4, r3
 802c852:	d258      	bcs.n	802c906 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802c854:	9b03      	ldr	r3, [sp, #12]
 802c856:	2b00      	cmp	r3, #0
 802c858:	d034      	beq.n	802c8c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802c85a:	782b      	ldrb	r3, [r5, #0]
 802c85c:	f003 030f 	and.w	r3, r3, #15
 802c860:	1c6f      	adds	r7, r5, #1
 802c862:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c866:	0e0b      	lsrs	r3, r1, #24
 802c868:	d006      	beq.n	802c878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802c86a:	8822      	ldrh	r2, [r4, #0]
 802c86c:	9300      	str	r3, [sp, #0]
 802c86e:	4640      	mov	r0, r8
 802c870:	464b      	mov	r3, r9
 802c872:	f7ff ff43 	bl	802c6fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c876:	8020      	strh	r0, [r4, #0]
 802c878:	3402      	adds	r4, #2
 802c87a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802c87e:	f1ba 0f01 	cmp.w	sl, #1
 802c882:	dd22      	ble.n	802c8ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802c884:	783b      	ldrb	r3, [r7, #0]
 802c886:	091b      	lsrs	r3, r3, #4
 802c888:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c88c:	0e0b      	lsrs	r3, r1, #24
 802c88e:	d006      	beq.n	802c89e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802c890:	8822      	ldrh	r2, [r4, #0]
 802c892:	9300      	str	r3, [sp, #0]
 802c894:	4640      	mov	r0, r8
 802c896:	464b      	mov	r3, r9
 802c898:	f7ff ff30 	bl	802c6fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c89c:	8020      	strh	r0, [r4, #0]
 802c89e:	f817 3b01 	ldrb.w	r3, [r7], #1
 802c8a2:	f003 030f 	and.w	r3, r3, #15
 802c8a6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c8aa:	0e0b      	lsrs	r3, r1, #24
 802c8ac:	d006      	beq.n	802c8bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802c8ae:	8862      	ldrh	r2, [r4, #2]
 802c8b0:	9300      	str	r3, [sp, #0]
 802c8b2:	4640      	mov	r0, r8
 802c8b4:	464b      	mov	r3, r9
 802c8b6:	f7ff ff21 	bl	802c6fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c8ba:	8060      	strh	r0, [r4, #2]
 802c8bc:	3404      	adds	r4, #4
 802c8be:	f1aa 0a02 	sub.w	sl, sl, #2
 802c8c2:	e7dc      	b.n	802c87e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802c8c4:	462f      	mov	r7, r5
 802c8c6:	46da      	mov	sl, fp
 802c8c8:	e7d9      	b.n	802c87e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802c8ca:	d10d      	bne.n	802c8e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802c8cc:	783b      	ldrb	r3, [r7, #0]
 802c8ce:	091b      	lsrs	r3, r3, #4
 802c8d0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802c8d4:	0e0b      	lsrs	r3, r1, #24
 802c8d6:	d006      	beq.n	802c8e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802c8d8:	8822      	ldrh	r2, [r4, #0]
 802c8da:	9300      	str	r3, [sp, #0]
 802c8dc:	4640      	mov	r0, r8
 802c8de:	464b      	mov	r3, r9
 802c8e0:	f7ff ff0c 	bl	802c6fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802c8e4:	8020      	strh	r0, [r4, #0]
 802c8e6:	3402      	adds	r4, #2
 802c8e8:	9b06      	ldr	r3, [sp, #24]
 802c8ea:	9a02      	ldr	r2, [sp, #8]
 802c8ec:	881b      	ldrh	r3, [r3, #0]
 802c8ee:	eba3 030b 	sub.w	r3, r3, fp
 802c8f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802c8f6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802c8fa:	4413      	add	r3, r2
 802c8fc:	9a07      	ldr	r2, [sp, #28]
 802c8fe:	fb93 f3f2 	sdiv	r3, r3, r2
 802c902:	441d      	add	r5, r3
 802c904:	e7a3      	b.n	802c84e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802c906:	9b05      	ldr	r3, [sp, #20]
 802c908:	6818      	ldr	r0, [r3, #0]
 802c90a:	6803      	ldr	r3, [r0, #0]
 802c90c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802c90e:	4798      	blx	r3
 802c910:	b00d      	add	sp, #52	@ 0x34
 802c912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c916:	bf00      	nop
 802c918:	200138e4 	.word	0x200138e4
 802c91c:	200138de 	.word	0x200138de

0802c920 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 802c920:	b570      	push	{r4, r5, r6, lr}
 802c922:	1214      	asrs	r4, r2, #8
 802c924:	788d      	ldrb	r5, [r1, #2]
 802c926:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802c92a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802c92e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802c932:	fb15 f503 	smulbb	r5, r5, r3
 802c936:	fb04 5506 	mla	r5, r4, r6, r5
 802c93a:	10d0      	asrs	r0, r2, #3
 802c93c:	784c      	ldrb	r4, [r1, #1]
 802c93e:	7809      	ldrb	r1, [r1, #0]
 802c940:	00d2      	lsls	r2, r2, #3
 802c942:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802c946:	b2d2      	uxtb	r2, r2
 802c948:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802c94c:	fb14 f403 	smulbb	r4, r4, r3
 802c950:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802c954:	fb11 f303 	smulbb	r3, r1, r3
 802c958:	fb00 4406 	mla	r4, r0, r6, r4
 802c95c:	fb02 3306 	mla	r3, r2, r6, r3
 802c960:	b2ad      	uxth	r5, r5
 802c962:	b29b      	uxth	r3, r3
 802c964:	b2a4      	uxth	r4, r4
 802c966:	1c68      	adds	r0, r5, #1
 802c968:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802c96c:	1c62      	adds	r2, r4, #1
 802c96e:	1c58      	adds	r0, r3, #1
 802c970:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802c974:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802c978:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802c97c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802c980:	0964      	lsrs	r4, r4, #5
 802c982:	4328      	orrs	r0, r5
 802c984:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802c988:	4320      	orrs	r0, r4
 802c98a:	bd70      	pop	{r4, r5, r6, pc}

0802c98c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802c98c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c990:	b08f      	sub	sp, #60	@ 0x3c
 802c992:	461c      	mov	r4, r3
 802c994:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802c998:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802c99a:	4682      	mov	sl, r0
 802c99c:	460e      	mov	r6, r1
 802c99e:	4615      	mov	r5, r2
 802c9a0:	2f00      	cmp	r7, #0
 802c9a2:	f000 8142 	beq.w	802cc2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802c9a6:	6820      	ldr	r0, [r4, #0]
 802c9a8:	6861      	ldr	r1, [r4, #4]
 802c9aa:	aa0a      	add	r2, sp, #40	@ 0x28
 802c9ac:	c203      	stmia	r2!, {r0, r1}
 802c9ae:	6818      	ldr	r0, [r3, #0]
 802c9b0:	6859      	ldr	r1, [r3, #4]
 802c9b2:	aa0c      	add	r2, sp, #48	@ 0x30
 802c9b4:	c203      	stmia	r2!, {r0, r1}
 802c9b6:	a80a      	add	r0, sp, #40	@ 0x28
 802c9b8:	f7ee fb70 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802c9bc:	4621      	mov	r1, r4
 802c9be:	a80c      	add	r0, sp, #48	@ 0x30
 802c9c0:	f7ee fbb0 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802c9c4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802c9c8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802c9cc:	f002 0301 	and.w	r3, r2, #1
 802c9d0:	9306      	str	r3, [sp, #24]
 802c9d2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802c9d6:	f003 0101 	and.w	r1, r3, #1
 802c9da:	9105      	str	r1, [sp, #20]
 802c9dc:	9805      	ldr	r0, [sp, #20]
 802c9de:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802c9e2:	4403      	add	r3, r0
 802c9e4:	fb01 2303 	mla	r3, r1, r3, r2
 802c9e8:	f04f 0802 	mov.w	r8, #2
 802c9ec:	fb93 f3f8 	sdiv	r3, r3, r8
 802c9f0:	441e      	add	r6, r3
 802c9f2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802c9f6:	441a      	add	r2, r3
 802c9f8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802c9fc:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802ca00:	4419      	add	r1, r3
 802ca02:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802ca06:	9303      	str	r3, [sp, #12]
 802ca08:	4b89      	ldr	r3, [pc, #548]	@ (802cc30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802ca0a:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802ca0e:	6818      	ldr	r0, [r3, #0]
 802ca10:	6803      	ldr	r3, [r0, #0]
 802ca12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802ca14:	4798      	blx	r3
 802ca16:	4a87      	ldr	r2, [pc, #540]	@ (802cc34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802ca18:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802ca1c:	8813      	ldrh	r3, [r2, #0]
 802ca1e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 802ca22:	2fff      	cmp	r7, #255	@ 0xff
 802ca24:	fb03 9404 	mla	r4, r3, r4, r9
 802ca28:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802ca2c:	f105 0504 	add.w	r5, r5, #4
 802ca30:	4694      	mov	ip, r2
 802ca32:	fb03 f30b 	mul.w	r3, r3, fp
 802ca36:	d071      	beq.n	802cb1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802ca38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802ca3c:	43f9      	mvns	r1, r7
 802ca3e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802ca42:	b2c9      	uxtb	r1, r1
 802ca44:	9104      	str	r1, [sp, #16]
 802ca46:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802ca4a:	9b07      	ldr	r3, [sp, #28]
 802ca4c:	42a3      	cmp	r3, r4
 802ca4e:	f240 80e7 	bls.w	802cc20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802ca52:	9b06      	ldr	r3, [sp, #24]
 802ca54:	2b00      	cmp	r3, #0
 802ca56:	d03d      	beq.n	802cad4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802ca58:	7831      	ldrb	r1, [r6, #0]
 802ca5a:	9b04      	ldr	r3, [sp, #16]
 802ca5c:	8822      	ldrh	r2, [r4, #0]
 802ca5e:	9300      	str	r3, [sp, #0]
 802ca60:	f001 010f 	and.w	r1, r1, #15
 802ca64:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ca68:	463b      	mov	r3, r7
 802ca6a:	4429      	add	r1, r5
 802ca6c:	4650      	mov	r0, sl
 802ca6e:	f7ff ff57 	bl	802c920 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802ca72:	9b03      	ldr	r3, [sp, #12]
 802ca74:	f824 0b02 	strh.w	r0, [r4], #2
 802ca78:	f106 0801 	add.w	r8, r6, #1
 802ca7c:	f103 3bff 	add.w	fp, r3, #4294967295
 802ca80:	f1bb 0f01 	cmp.w	fp, #1
 802ca84:	46a1      	mov	r9, r4
 802ca86:	f104 0404 	add.w	r4, r4, #4
 802ca8a:	dd27      	ble.n	802cadc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802ca8c:	f898 1000 	ldrb.w	r1, [r8]
 802ca90:	9b04      	ldr	r3, [sp, #16]
 802ca92:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802ca96:	9300      	str	r3, [sp, #0]
 802ca98:	0909      	lsrs	r1, r1, #4
 802ca9a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802ca9e:	463b      	mov	r3, r7
 802caa0:	4429      	add	r1, r5
 802caa2:	4650      	mov	r0, sl
 802caa4:	f7ff ff3c 	bl	802c920 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802caa8:	f824 0c04 	strh.w	r0, [r4, #-4]
 802caac:	f818 1b01 	ldrb.w	r1, [r8], #1
 802cab0:	9b04      	ldr	r3, [sp, #16]
 802cab2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802cab6:	9300      	str	r3, [sp, #0]
 802cab8:	f001 010f 	and.w	r1, r1, #15
 802cabc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802cac0:	463b      	mov	r3, r7
 802cac2:	4429      	add	r1, r5
 802cac4:	4650      	mov	r0, sl
 802cac6:	f7ff ff2b 	bl	802c920 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802caca:	f1ab 0b02 	sub.w	fp, fp, #2
 802cace:	f824 0c02 	strh.w	r0, [r4, #-2]
 802cad2:	e7d5      	b.n	802ca80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802cad4:	46b0      	mov	r8, r6
 802cad6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802cada:	e7d1      	b.n	802ca80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802cadc:	d10f      	bne.n	802cafe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802cade:	f898 1000 	ldrb.w	r1, [r8]
 802cae2:	9b04      	ldr	r3, [sp, #16]
 802cae4:	f8b9 2000 	ldrh.w	r2, [r9]
 802cae8:	9300      	str	r3, [sp, #0]
 802caea:	0909      	lsrs	r1, r1, #4
 802caec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802caf0:	463b      	mov	r3, r7
 802caf2:	4429      	add	r1, r5
 802caf4:	4650      	mov	r0, sl
 802caf6:	f7ff ff13 	bl	802c920 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802cafa:	f829 0b02 	strh.w	r0, [r9], #2
 802cafe:	9b08      	ldr	r3, [sp, #32]
 802cb00:	9a05      	ldr	r2, [sp, #20]
 802cb02:	881c      	ldrh	r4, [r3, #0]
 802cb04:	9b03      	ldr	r3, [sp, #12]
 802cb06:	1ae4      	subs	r4, r4, r3
 802cb08:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802cb0c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802cb10:	4413      	add	r3, r2
 802cb12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802cb14:	fb93 f3f2 	sdiv	r3, r3, r2
 802cb18:	441e      	add	r6, r3
 802cb1a:	e796      	b.n	802ca4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802cb1c:	4f46      	ldr	r7, [pc, #280]	@ (802cc38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802cb1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802cb22:	42a3      	cmp	r3, r4
 802cb24:	d97c      	bls.n	802cc20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802cb26:	9a06      	ldr	r2, [sp, #24]
 802cb28:	2a00      	cmp	r2, #0
 802cb2a:	d054      	beq.n	802cbd6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802cb2c:	7830      	ldrb	r0, [r6, #0]
 802cb2e:	f000 000f 	and.w	r0, r0, #15
 802cb32:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802cb36:	eb05 0e00 	add.w	lr, r5, r0
 802cb3a:	5c28      	ldrb	r0, [r5, r0]
 802cb3c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802cb40:	f89e e001 	ldrb.w	lr, [lr, #1]
 802cb44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802cb48:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802cb4c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802cb50:	ea42 020e 	orr.w	r2, r2, lr
 802cb54:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802cb58:	f824 2b02 	strh.w	r2, [r4], #2
 802cb5c:	9a03      	ldr	r2, [sp, #12]
 802cb5e:	1c71      	adds	r1, r6, #1
 802cb60:	f102 3eff 	add.w	lr, r2, #4294967295
 802cb64:	f1be 0f01 	cmp.w	lr, #1
 802cb68:	4620      	mov	r0, r4
 802cb6a:	f104 0404 	add.w	r4, r4, #4
 802cb6e:	dd36      	ble.n	802cbde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 802cb70:	7808      	ldrb	r0, [r1, #0]
 802cb72:	0900      	lsrs	r0, r0, #4
 802cb74:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802cb78:	eb05 0a00 	add.w	sl, r5, r0
 802cb7c:	f1ae 0e02 	sub.w	lr, lr, #2
 802cb80:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802cb84:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802cb88:	00d2      	lsls	r2, r2, #3
 802cb8a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802cb8e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802cb92:	ea49 0202 	orr.w	r2, r9, r2
 802cb96:	f815 9000 	ldrb.w	r9, [r5, r0]
 802cb9a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802cb9e:	f824 2c04 	strh.w	r2, [r4, #-4]
 802cba2:	f811 0b01 	ldrb.w	r0, [r1], #1
 802cba6:	f000 000f 	and.w	r0, r0, #15
 802cbaa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802cbae:	eb05 0a00 	add.w	sl, r5, r0
 802cbb2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802cbb6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802cbba:	00d2      	lsls	r2, r2, #3
 802cbbc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802cbc0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802cbc4:	ea49 0202 	orr.w	r2, r9, r2
 802cbc8:	f815 9000 	ldrb.w	r9, [r5, r0]
 802cbcc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802cbd0:	f824 2c02 	strh.w	r2, [r4, #-2]
 802cbd4:	e7c6      	b.n	802cb64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802cbd6:	4631      	mov	r1, r6
 802cbd8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802cbdc:	e7c2      	b.n	802cb64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802cbde:	d111      	bne.n	802cc04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 802cbe0:	7809      	ldrb	r1, [r1, #0]
 802cbe2:	0909      	lsrs	r1, r1, #4
 802cbe4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802cbe8:	186c      	adds	r4, r5, r1
 802cbea:	5c69      	ldrb	r1, [r5, r1]
 802cbec:	78a2      	ldrb	r2, [r4, #2]
 802cbee:	7864      	ldrb	r4, [r4, #1]
 802cbf0:	00e4      	lsls	r4, r4, #3
 802cbf2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802cbf6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802cbfa:	4322      	orrs	r2, r4
 802cbfc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802cc00:	f820 2b02 	strh.w	r2, [r0], #2
 802cc04:	9a03      	ldr	r2, [sp, #12]
 802cc06:	f8bc 4000 	ldrh.w	r4, [ip]
 802cc0a:	9905      	ldr	r1, [sp, #20]
 802cc0c:	1aa4      	subs	r4, r4, r2
 802cc0e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 802cc12:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802cc16:	440a      	add	r2, r1
 802cc18:	fb92 f2f8 	sdiv	r2, r2, r8
 802cc1c:	4416      	add	r6, r2
 802cc1e:	e780      	b.n	802cb22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 802cc20:	4b03      	ldr	r3, [pc, #12]	@ (802cc30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802cc22:	6818      	ldr	r0, [r3, #0]
 802cc24:	6803      	ldr	r3, [r0, #0]
 802cc26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802cc28:	4798      	blx	r3
 802cc2a:	b00f      	add	sp, #60	@ 0x3c
 802cc2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cc30:	200138e4 	.word	0x200138e4
 802cc34:	200138de 	.word	0x200138de
 802cc38:	fffff800 	.word	0xfffff800

0802cc3c <CRC_Lock>:
 802cc3c:	b530      	push	{r4, r5, lr}
 802cc3e:	4a2d      	ldr	r2, [pc, #180]	@ (802ccf4 <CRC_Lock+0xb8>)
 802cc40:	6813      	ldr	r3, [r2, #0]
 802cc42:	f023 0301 	bic.w	r3, r3, #1
 802cc46:	6013      	str	r3, [r2, #0]
 802cc48:	4b2b      	ldr	r3, [pc, #172]	@ (802ccf8 <CRC_Lock+0xbc>)
 802cc4a:	681c      	ldr	r4, [r3, #0]
 802cc4c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 802cc50:	4014      	ands	r4, r2
 802cc52:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802cc56:	42ac      	cmp	r4, r5
 802cc58:	d005      	beq.n	802cc66 <CRC_Lock+0x2a>
 802cc5a:	681c      	ldr	r4, [r3, #0]
 802cc5c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 802cc60:	4014      	ands	r4, r2
 802cc62:	42ac      	cmp	r4, r5
 802cc64:	d125      	bne.n	802ccb2 <CRC_Lock+0x76>
 802cc66:	4b25      	ldr	r3, [pc, #148]	@ (802ccfc <CRC_Lock+0xc0>)
 802cc68:	681b      	ldr	r3, [r3, #0]
 802cc6a:	2b00      	cmp	r3, #0
 802cc6c:	d139      	bne.n	802cce2 <CRC_Lock+0xa6>
 802cc6e:	4b24      	ldr	r3, [pc, #144]	@ (802cd00 <CRC_Lock+0xc4>)
 802cc70:	681a      	ldr	r2, [r3, #0]
 802cc72:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802cc76:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802cc7a:	d00d      	beq.n	802cc98 <CRC_Lock+0x5c>
 802cc7c:	681a      	ldr	r2, [r3, #0]
 802cc7e:	f240 4483 	movw	r4, #1155	@ 0x483
 802cc82:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802cc86:	42a2      	cmp	r2, r4
 802cc88:	d006      	beq.n	802cc98 <CRC_Lock+0x5c>
 802cc8a:	681b      	ldr	r3, [r3, #0]
 802cc8c:	f240 4285 	movw	r2, #1157	@ 0x485
 802cc90:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802cc94:	4293      	cmp	r3, r2
 802cc96:	d124      	bne.n	802cce2 <CRC_Lock+0xa6>
 802cc98:	4b1a      	ldr	r3, [pc, #104]	@ (802cd04 <CRC_Lock+0xc8>)
 802cc9a:	2201      	movs	r2, #1
 802cc9c:	601a      	str	r2, [r3, #0]
 802cc9e:	681a      	ldr	r2, [r3, #0]
 802cca0:	2a00      	cmp	r2, #0
 802cca2:	d1fc      	bne.n	802cc9e <CRC_Lock+0x62>
 802cca4:	4b18      	ldr	r3, [pc, #96]	@ (802cd08 <CRC_Lock+0xcc>)
 802cca6:	6018      	str	r0, [r3, #0]
 802cca8:	6818      	ldr	r0, [r3, #0]
 802ccaa:	1a43      	subs	r3, r0, r1
 802ccac:	4258      	negs	r0, r3
 802ccae:	4158      	adcs	r0, r3
 802ccb0:	e00e      	b.n	802ccd0 <CRC_Lock+0x94>
 802ccb2:	681b      	ldr	r3, [r3, #0]
 802ccb4:	4013      	ands	r3, r2
 802ccb6:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802ccba:	4293      	cmp	r3, r2
 802ccbc:	d111      	bne.n	802cce2 <CRC_Lock+0xa6>
 802ccbe:	4b13      	ldr	r3, [pc, #76]	@ (802cd0c <CRC_Lock+0xd0>)
 802ccc0:	681b      	ldr	r3, [r3, #0]
 802ccc2:	f240 4286 	movw	r2, #1158	@ 0x486
 802ccc6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802ccca:	4293      	cmp	r3, r2
 802cccc:	d001      	beq.n	802ccd2 <CRC_Lock+0x96>
 802ccce:	2000      	movs	r0, #0
 802ccd0:	bd30      	pop	{r4, r5, pc}
 802ccd2:	4b0f      	ldr	r3, [pc, #60]	@ (802cd10 <CRC_Lock+0xd4>)
 802ccd4:	2201      	movs	r2, #1
 802ccd6:	601a      	str	r2, [r3, #0]
 802ccd8:	681a      	ldr	r2, [r3, #0]
 802ccda:	2a00      	cmp	r2, #0
 802ccdc:	d1fc      	bne.n	802ccd8 <CRC_Lock+0x9c>
 802ccde:	4b0d      	ldr	r3, [pc, #52]	@ (802cd14 <CRC_Lock+0xd8>)
 802cce0:	e7e1      	b.n	802cca6 <CRC_Lock+0x6a>
 802cce2:	4b0d      	ldr	r3, [pc, #52]	@ (802cd18 <CRC_Lock+0xdc>)
 802cce4:	2201      	movs	r2, #1
 802cce6:	601a      	str	r2, [r3, #0]
 802cce8:	681a      	ldr	r2, [r3, #0]
 802ccea:	2a00      	cmp	r2, #0
 802ccec:	d1fc      	bne.n	802cce8 <CRC_Lock+0xac>
 802ccee:	4b0b      	ldr	r3, [pc, #44]	@ (802cd1c <CRC_Lock+0xe0>)
 802ccf0:	e7d9      	b.n	802cca6 <CRC_Lock+0x6a>
 802ccf2:	bf00      	nop
 802ccf4:	e0002000 	.word	0xe0002000
 802ccf8:	e000ed00 	.word	0xe000ed00
 802ccfc:	e0042000 	.word	0xe0042000
 802cd00:	5c001000 	.word	0x5c001000
 802cd04:	58024c08 	.word	0x58024c08
 802cd08:	58024c00 	.word	0x58024c00
 802cd0c:	46008ff0 	.word	0x46008ff0
 802cd10:	46024c08 	.word	0x46024c08
 802cd14:	46024c00 	.word	0x46024c00
 802cd18:	40023008 	.word	0x40023008
 802cd1c:	40023000 	.word	0x40023000

0802cd20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802cd20:	6101      	str	r1, [r0, #16]
 802cd22:	4770      	bx	lr

0802cd24 <_ZN8touchgfx8Gestures4tickEv>:
 802cd24:	7b83      	ldrb	r3, [r0, #14]
 802cd26:	b14b      	cbz	r3, 802cd3c <_ZN8touchgfx8Gestures4tickEv+0x18>
 802cd28:	8903      	ldrh	r3, [r0, #8]
 802cd2a:	3301      	adds	r3, #1
 802cd2c:	b29b      	uxth	r3, r3
 802cd2e:	2b07      	cmp	r3, #7
 802cd30:	8103      	strh	r3, [r0, #8]
 802cd32:	bf81      	itttt	hi
 802cd34:	2300      	movhi	r3, #0
 802cd36:	8143      	strhhi	r3, [r0, #10]
 802cd38:	8183      	strhhi	r3, [r0, #12]
 802cd3a:	7383      	strbhi	r3, [r0, #14]
 802cd3c:	4770      	bx	lr
	...

0802cd40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802cd40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802cd44:	4698      	mov	r8, r3
 802cd46:	8883      	ldrh	r3, [r0, #4]
 802cd48:	f8ad 3006 	strh.w	r3, [sp, #6]
 802cd4c:	eba8 0303 	sub.w	r3, r8, r3
 802cd50:	b21b      	sxth	r3, r3
 802cd52:	4604      	mov	r4, r0
 802cd54:	2b00      	cmp	r3, #0
 802cd56:	4617      	mov	r7, r2
 802cd58:	4a18      	ldr	r2, [pc, #96]	@ (802cdbc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802cd5a:	9200      	str	r2, [sp, #0]
 802cd5c:	bfb8      	it	lt
 802cd5e:	425b      	neglt	r3, r3
 802cd60:	8aa2      	ldrh	r2, [r4, #20]
 802cd62:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802cd66:	f8ad 800a 	strh.w	r8, [sp, #10]
 802cd6a:	b21b      	sxth	r3, r3
 802cd6c:	460e      	mov	r6, r1
 802cd6e:	4293      	cmp	r3, r2
 802cd70:	88c1      	ldrh	r1, [r0, #6]
 802cd72:	f8ad 1008 	strh.w	r1, [sp, #8]
 802cd76:	f04f 0000 	mov.w	r0, #0
 802cd7a:	f88d 0004 	strb.w	r0, [sp, #4]
 802cd7e:	f8ad 500c 	strh.w	r5, [sp, #12]
 802cd82:	dc07      	bgt.n	802cd94 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802cd84:	1a69      	subs	r1, r5, r1
 802cd86:	b209      	sxth	r1, r1
 802cd88:	2900      	cmp	r1, #0
 802cd8a:	bfb8      	it	lt
 802cd8c:	4249      	neglt	r1, r1
 802cd8e:	b209      	sxth	r1, r1
 802cd90:	428a      	cmp	r2, r1
 802cd92:	da10      	bge.n	802cdb6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802cd94:	6920      	ldr	r0, [r4, #16]
 802cd96:	6803      	ldr	r3, [r0, #0]
 802cd98:	4669      	mov	r1, sp
 802cd9a:	685b      	ldr	r3, [r3, #4]
 802cd9c:	4798      	blx	r3
 802cd9e:	eba8 0606 	sub.w	r6, r8, r6
 802cda2:	2300      	movs	r3, #0
 802cda4:	1bef      	subs	r7, r5, r7
 802cda6:	2001      	movs	r0, #1
 802cda8:	8123      	strh	r3, [r4, #8]
 802cdaa:	8166      	strh	r6, [r4, #10]
 802cdac:	81a7      	strh	r7, [r4, #12]
 802cdae:	f8a4 8004 	strh.w	r8, [r4, #4]
 802cdb2:	80e5      	strh	r5, [r4, #6]
 802cdb4:	73a0      	strb	r0, [r4, #14]
 802cdb6:	b004      	add	sp, #16
 802cdb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cdbc:	08033628 	.word	0x08033628

0802cdc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802cdc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 802cdc2:	461e      	mov	r6, r3
 802cdc4:	1e4b      	subs	r3, r1, #1
 802cdc6:	2b01      	cmp	r3, #1
 802cdc8:	b085      	sub	sp, #20
 802cdca:	4604      	mov	r4, r0
 802cdcc:	460d      	mov	r5, r1
 802cdce:	4617      	mov	r7, r2
 802cdd0:	d84b      	bhi.n	802ce6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802cdd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802cdd6:	1cd3      	adds	r3, r2, #3
 802cdd8:	b29b      	uxth	r3, r3
 802cdda:	2b06      	cmp	r3, #6
 802cddc:	d916      	bls.n	802ce0c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802cdde:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 802ce80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802cde2:	f8cd c004 	str.w	ip, [sp, #4]
 802cde6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802cdea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802cdee:	6900      	ldr	r0, [r0, #16]
 802cdf0:	f8ad 100c 	strh.w	r1, [sp, #12]
 802cdf4:	f04f 0c00 	mov.w	ip, #0
 802cdf8:	f88d c008 	strb.w	ip, [sp, #8]
 802cdfc:	f8ad 200a 	strh.w	r2, [sp, #10]
 802ce00:	f8ad 300e 	strh.w	r3, [sp, #14]
 802ce04:	6803      	ldr	r3, [r0, #0]
 802ce06:	a901      	add	r1, sp, #4
 802ce08:	689b      	ldr	r3, [r3, #8]
 802ce0a:	4798      	blx	r3
 802ce0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ce10:	1cd3      	adds	r3, r2, #3
 802ce12:	b29b      	uxth	r3, r3
 802ce14:	2b06      	cmp	r3, #6
 802ce16:	d916      	bls.n	802ce46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802ce18:	f8df c064 	ldr.w	ip, [pc, #100]	@ 802ce80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802ce1c:	f8cd c004 	str.w	ip, [sp, #4]
 802ce20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802ce24:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802ce28:	6920      	ldr	r0, [r4, #16]
 802ce2a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802ce2e:	f04f 0c01 	mov.w	ip, #1
 802ce32:	f88d c008 	strb.w	ip, [sp, #8]
 802ce36:	f8ad 200a 	strh.w	r2, [sp, #10]
 802ce3a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802ce3e:	6803      	ldr	r3, [r0, #0]
 802ce40:	a901      	add	r1, sp, #4
 802ce42:	689b      	ldr	r3, [r3, #8]
 802ce44:	4798      	blx	r3
 802ce46:	4b0d      	ldr	r3, [pc, #52]	@ (802ce7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802ce48:	9301      	str	r3, [sp, #4]
 802ce4a:	6920      	ldr	r0, [r4, #16]
 802ce4c:	f88d 5008 	strb.w	r5, [sp, #8]
 802ce50:	2300      	movs	r3, #0
 802ce52:	f8ad 700a 	strh.w	r7, [sp, #10]
 802ce56:	f8ad 600c 	strh.w	r6, [sp, #12]
 802ce5a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802ce5e:	6803      	ldr	r3, [r0, #0]
 802ce60:	a901      	add	r1, sp, #4
 802ce62:	681b      	ldr	r3, [r3, #0]
 802ce64:	4798      	blx	r3
 802ce66:	b005      	add	sp, #20
 802ce68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ce6a:	2900      	cmp	r1, #0
 802ce6c:	d1eb      	bne.n	802ce46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802ce6e:	80a2      	strh	r2, [r4, #4]
 802ce70:	80c6      	strh	r6, [r0, #6]
 802ce72:	60a1      	str	r1, [r4, #8]
 802ce74:	81a1      	strh	r1, [r4, #12]
 802ce76:	73a1      	strb	r1, [r4, #14]
 802ce78:	e7e5      	b.n	802ce46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802ce7a:	bf00      	nop
 802ce7c:	08033614 	.word	0x08033614
 802ce80:	0803363c 	.word	0x0803363c

0802ce84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 802ce84:	10c9      	asrs	r1, r1, #3
 802ce86:	2900      	cmp	r1, #0
 802ce88:	bfb8      	it	lt
 802ce8a:	4249      	neglt	r1, r1
 802ce8c:	2801      	cmp	r0, #1
 802ce8e:	d108      	bne.n	802cea2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802ce90:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802ce94:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 802ce98:	4601      	mov	r1, r0
 802ce9a:	dd02      	ble.n	802cea2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802ce9c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 802cea0:	4770      	bx	lr
 802cea2:	29ff      	cmp	r1, #255	@ 0xff
 802cea4:	bfa8      	it	ge
 802cea6:	21ff      	movge	r1, #255	@ 0xff
 802cea8:	4608      	mov	r0, r1
 802ceaa:	4770      	bx	lr

0802ceac <_ZN8touchgfx10Rasterizer6lineToEii>:
 802ceac:	b410      	push	{r4}
 802ceae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802ceb2:	429c      	cmp	r4, r3
 802ceb4:	d803      	bhi.n	802cebe <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802ceb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ceba:	f7ec bbf5 	b.w	80196a8 <_ZN8touchgfx7Outline6lineToEii>
 802cebe:	f85d 4b04 	ldr.w	r4, [sp], #4
 802cec2:	4770      	bx	lr

0802cec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802cec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cec8:	b08b      	sub	sp, #44	@ 0x2c
 802ceca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802cece:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 802ced2:	9308      	str	r3, [sp, #32]
 802ced4:	4606      	mov	r6, r0
 802ced6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 802ceda:	9309      	str	r3, [sp, #36]	@ 0x24
 802cedc:	468a      	mov	sl, r1
 802cede:	f7ec fd50 	bl	8019982 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802cee2:	68b5      	ldr	r5, [r6, #8]
 802cee4:	4604      	mov	r4, r0
 802cee6:	2d00      	cmp	r5, #0
 802cee8:	d044      	beq.n	802cf74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802ceea:	6873      	ldr	r3, [r6, #4]
 802ceec:	42ab      	cmp	r3, r5
 802ceee:	d33d      	bcc.n	802cf6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802cef0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802cef4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 802cef8:	eb02 0b03 	add.w	fp, r2, r3
 802cefc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802cf00:	fb02 1203 	mla	r2, r2, r3, r1
 802cf04:	9205      	str	r2, [sp, #20]
 802cf06:	1e6a      	subs	r2, r5, #1
 802cf08:	9204      	str	r2, [sp, #16]
 802cf0a:	f04f 0800 	mov.w	r8, #0
 802cf0e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802cf12:	f9b4 7000 	ldrsh.w	r7, [r4]
 802cf16:	454b      	cmp	r3, r9
 802cf18:	463a      	mov	r2, r7
 802cf1a:	d008      	beq.n	802cf2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802cf1c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 802cf20:	eb03 0b09 	add.w	fp, r3, r9
 802cf24:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802cf28:	fb03 1309 	mla	r3, r3, r9, r1
 802cf2c:	9305      	str	r3, [sp, #20]
 802cf2e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802cf32:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802cf36:	4498      	add	r8, r3
 802cf38:	9b04      	ldr	r3, [sp, #16]
 802cf3a:	3b01      	subs	r3, #1
 802cf3c:	9304      	str	r3, [sp, #16]
 802cf3e:	9b04      	ldr	r3, [sp, #16]
 802cf40:	3301      	adds	r3, #1
 802cf42:	d015      	beq.n	802cf70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802cf44:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802cf48:	42bb      	cmp	r3, r7
 802cf4a:	d117      	bne.n	802cf7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802cf4c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802cf50:	9b04      	ldr	r3, [sp, #16]
 802cf52:	4548      	cmp	r0, r9
 802cf54:	f103 33ff 	add.w	r3, r3, #4294967295
 802cf58:	d17f      	bne.n	802d05a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802cf5a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802cf5e:	4401      	add	r1, r0
 802cf60:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802cf64:	4480      	add	r8, r0
 802cf66:	e7e9      	b.n	802cf3c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802cf68:	461f      	mov	r7, r3
 802cf6a:	e044      	b.n	802cff6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802cf6c:	2000      	movs	r0, #0
 802cf6e:	e002      	b.n	802cf76 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802cf70:	2900      	cmp	r1, #0
 802cf72:	d16f      	bne.n	802d054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 802cf74:	2001      	movs	r0, #1
 802cf76:	b00b      	add	sp, #44	@ 0x2c
 802cf78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802cf7c:	2900      	cmp	r1, #0
 802cf7e:	d030      	beq.n	802cfe2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802cf80:	2f00      	cmp	r7, #0
 802cf82:	db29      	blt.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802cf84:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802cf88:	42bb      	cmp	r3, r7
 802cf8a:	dd25      	ble.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802cf8c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802cf90:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802cf94:	f7ff ff76 	bl	802ce84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802cf98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802cf9a:	fb10 f003 	smulbb	r0, r0, r3
 802cf9e:	b280      	uxth	r0, r0
 802cfa0:	1c41      	adds	r1, r0, #1
 802cfa2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802cfa6:	1209      	asrs	r1, r1, #8
 802cfa8:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802cfac:	d014      	beq.n	802cfd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802cfae:	9808      	ldr	r0, [sp, #32]
 802cfb0:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802cfb2:	b2c9      	uxtb	r1, r1
 802cfb4:	b2ba      	uxth	r2, r7
 802cfb6:	9102      	str	r1, [sp, #8]
 802cfb8:	2101      	movs	r1, #1
 802cfba:	4413      	add	r3, r2
 802cfbc:	9101      	str	r1, [sp, #4]
 802cfbe:	4402      	add	r2, r0
 802cfc0:	fa0f f18b 	sxth.w	r1, fp
 802cfc4:	f8da 0000 	ldr.w	r0, [sl]
 802cfc8:	9100      	str	r1, [sp, #0]
 802cfca:	6941      	ldr	r1, [r0, #20]
 802cfcc:	b21b      	sxth	r3, r3
 802cfce:	460d      	mov	r5, r1
 802cfd0:	b212      	sxth	r2, r2
 802cfd2:	9905      	ldr	r1, [sp, #20]
 802cfd4:	4650      	mov	r0, sl
 802cfd6:	47a8      	blx	r5
 802cfd8:	9b04      	ldr	r3, [sp, #16]
 802cfda:	3301      	adds	r3, #1
 802cfdc:	f107 0201 	add.w	r2, r7, #1
 802cfe0:	d0c8      	beq.n	802cf74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802cfe2:	f9b4 7000 	ldrsh.w	r7, [r4]
 802cfe6:	1abb      	subs	r3, r7, r2
 802cfe8:	2b00      	cmp	r3, #0
 802cfea:	dd31      	ble.n	802d050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802cfec:	2a00      	cmp	r2, #0
 802cfee:	dabb      	bge.n	802cf68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802cff0:	2f00      	cmp	r7, #0
 802cff2:	dd2d      	ble.n	802d050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802cff4:	2200      	movs	r2, #0
 802cff6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802cffa:	19d1      	adds	r1, r2, r7
 802cffc:	4299      	cmp	r1, r3
 802cffe:	db02      	blt.n	802d006 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802d000:	1a9f      	subs	r7, r3, r2
 802d002:	2f00      	cmp	r7, #0
 802d004:	dd24      	ble.n	802d050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d006:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802d00a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802d00e:	f7ff ff39 	bl	802ce84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802d012:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802d014:	fb10 f003 	smulbb	r0, r0, r3
 802d018:	b280      	uxth	r0, r0
 802d01a:	1c41      	adds	r1, r0, #1
 802d01c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802d020:	1209      	asrs	r1, r1, #8
 802d022:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802d026:	d013      	beq.n	802d050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d028:	9808      	ldr	r0, [sp, #32]
 802d02a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802d02c:	b292      	uxth	r2, r2
 802d02e:	b2c9      	uxtb	r1, r1
 802d030:	4413      	add	r3, r2
 802d032:	9102      	str	r1, [sp, #8]
 802d034:	4402      	add	r2, r0
 802d036:	b23f      	sxth	r7, r7
 802d038:	f8da 0000 	ldr.w	r0, [sl]
 802d03c:	9701      	str	r7, [sp, #4]
 802d03e:	fa0f f18b 	sxth.w	r1, fp
 802d042:	9100      	str	r1, [sp, #0]
 802d044:	6947      	ldr	r7, [r0, #20]
 802d046:	9905      	ldr	r1, [sp, #20]
 802d048:	b21b      	sxth	r3, r3
 802d04a:	b212      	sxth	r2, r2
 802d04c:	4650      	mov	r0, sl
 802d04e:	47b8      	blx	r7
 802d050:	464b      	mov	r3, r9
 802d052:	e75c      	b.n	802cf0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802d054:	2f00      	cmp	r7, #0
 802d056:	da95      	bge.n	802cf84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802d058:	e78c      	b.n	802cf74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802d05a:	2900      	cmp	r1, #0
 802d05c:	d0f8      	beq.n	802d050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d05e:	e78f      	b.n	802cf80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802d060 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 802d060:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802d064:	461e      	mov	r6, r3
 802d066:	4b36      	ldr	r3, [pc, #216]	@ (802d140 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 802d068:	e9c0 3100 	strd	r3, r1, [r0]
 802d06c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 802d070:	8103      	strh	r3, [r0, #8]
 802d072:	2500      	movs	r5, #0
 802d074:	f89d 3020 	ldrb.w	r3, [sp, #32]
 802d078:	7283      	strb	r3, [r0, #10]
 802d07a:	f100 0814 	add.w	r8, r0, #20
 802d07e:	4604      	mov	r4, r0
 802d080:	8185      	strh	r5, [r0, #12]
 802d082:	81c5      	strh	r5, [r0, #14]
 802d084:	8205      	strh	r5, [r0, #16]
 802d086:	8245      	strh	r5, [r0, #18]
 802d088:	4640      	mov	r0, r8
 802d08a:	4617      	mov	r7, r2
 802d08c:	f7eb fe44 	bl	8018d18 <_ZN8touchgfx7OutlineC1Ev>
 802d090:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 802d094:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802d098:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 802d09c:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 802d0a0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 802d0a4:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 802d0a8:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 802d0ac:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 802d0b0:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 802d0b4:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 802d0b8:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 802d0bc:	6830      	ldr	r0, [r6, #0]
 802d0be:	6871      	ldr	r1, [r6, #4]
 802d0c0:	8872      	ldrh	r2, [r6, #2]
 802d0c2:	8835      	ldrh	r5, [r6, #0]
 802d0c4:	466b      	mov	r3, sp
 802d0c6:	c303      	stmia	r3!, {r0, r1}
 802d0c8:	887b      	ldrh	r3, [r7, #2]
 802d0ca:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 802d0ce:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 802d0d2:	4413      	add	r3, r2
 802d0d4:	883a      	ldrh	r2, [r7, #0]
 802d0d6:	81e3      	strh	r3, [r4, #14]
 802d0d8:	442a      	add	r2, r5
 802d0da:	81a2      	strh	r2, [r4, #12]
 802d0dc:	8220      	strh	r0, [r4, #16]
 802d0de:	8261      	strh	r1, [r4, #18]
 802d0e0:	4668      	mov	r0, sp
 802d0e2:	4639      	mov	r1, r7
 802d0e4:	f7ee f81e 	bl	801b124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802d0e8:	f104 000c 	add.w	r0, r4, #12
 802d0ec:	f7ed ffd6 	bl	801b09c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802d0f0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802d0f4:	f8bd 2000 	ldrh.w	r2, [sp]
 802d0f8:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 802d0fc:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 802d100:	4640      	mov	r0, r8
 802d102:	f7eb fded 	bl	8018ce0 <_ZN8touchgfx7Outline5resetEv>
 802d106:	f9bd 3000 	ldrsh.w	r3, [sp]
 802d10a:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802d10e:	015b      	lsls	r3, r3, #5
 802d110:	64e3      	str	r3, [r4, #76]	@ 0x4c
 802d112:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802d116:	015b      	lsls	r3, r3, #5
 802d118:	6523      	str	r3, [r4, #80]	@ 0x50
 802d11a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802d11e:	015b      	lsls	r3, r3, #5
 802d120:	6563      	str	r3, [r4, #84]	@ 0x54
 802d122:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802d126:	015b      	lsls	r3, r3, #5
 802d128:	65a3      	str	r3, [r4, #88]	@ 0x58
 802d12a:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802d12e:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 802d132:	4620      	mov	r0, r4
 802d134:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 802d138:	b002      	add	sp, #8
 802d13a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802d13e:	bf00      	nop
 802d140:	08033978 	.word	0x08033978

0802d144 <_ZN8touchgfx6Canvas5closeEv>:
 802d144:	b538      	push	{r3, r4, r5, lr}
 802d146:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802d14a:	4604      	mov	r4, r0
 802d14c:	b193      	cbz	r3, 802d174 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802d14e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 802d152:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 802d156:	4213      	tst	r3, r2
 802d158:	d10c      	bne.n	802d174 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802d15a:	f100 0514 	add.w	r5, r0, #20
 802d15e:	b123      	cbz	r3, 802d16a <_ZN8touchgfx6Canvas5closeEv+0x26>
 802d160:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 802d164:	4628      	mov	r0, r5
 802d166:	f7ff fea1 	bl	802ceac <_ZN8touchgfx10Rasterizer6lineToEii>
 802d16a:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 802d16e:	4628      	mov	r0, r5
 802d170:	f7ff fe9c 	bl	802ceac <_ZN8touchgfx10Rasterizer6lineToEii>
 802d174:	2300      	movs	r3, #0
 802d176:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802d17a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802d17e:	4298      	cmp	r0, r3
 802d180:	bf34      	ite	cc
 802d182:	2000      	movcc	r0, #0
 802d184:	2001      	movcs	r0, #1
 802d186:	bd38      	pop	{r3, r4, r5, pc}

0802d188 <_ZN8touchgfx6Canvas6renderEh>:
 802d188:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802d18c:	7a85      	ldrb	r5, [r0, #10]
 802d18e:	4369      	muls	r1, r5
 802d190:	1c4d      	adds	r5, r1, #1
 802d192:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802d196:	122d      	asrs	r5, r5, #8
 802d198:	4604      	mov	r4, r0
 802d19a:	f000 8099 	beq.w	802d2d0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802d19e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 802d1a2:	2b00      	cmp	r3, #0
 802d1a4:	f000 8094 	beq.w	802d2d0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802d1a8:	f7ff ffcc 	bl	802d144 <_ZN8touchgfx6Canvas5closeEv>
 802d1ac:	4607      	mov	r7, r0
 802d1ae:	2800      	cmp	r0, #0
 802d1b0:	d045      	beq.n	802d23e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802d1b2:	6860      	ldr	r0, [r4, #4]
 802d1b4:	4e47      	ldr	r6, [pc, #284]	@ (802d2d4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802d1b6:	6803      	ldr	r3, [r0, #0]
 802d1b8:	6837      	ldr	r7, [r6, #0]
 802d1ba:	689b      	ldr	r3, [r3, #8]
 802d1bc:	4798      	blx	r3
 802d1be:	4601      	mov	r1, r0
 802d1c0:	4638      	mov	r0, r7
 802d1c2:	f7e9 f84b 	bl	801625c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802d1c6:	4607      	mov	r7, r0
 802d1c8:	f7d6 fe72 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 802d1cc:	6803      	ldr	r3, [r0, #0]
 802d1ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802d1d0:	4798      	blx	r3
 802d1d2:	4680      	mov	r8, r0
 802d1d4:	f7d6 fe6c 	bl	8003eb0 <_ZN8touchgfx3HAL3lcdEv>
 802d1d8:	6803      	ldr	r3, [r0, #0]
 802d1da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802d1dc:	4798      	blx	r3
 802d1de:	280b      	cmp	r0, #11
 802d1e0:	d85b      	bhi.n	802d29a <_ZN8touchgfx6Canvas6renderEh+0x112>
 802d1e2:	e8df f000 	tbb	[pc, r0]
 802d1e6:	5c51      	.short	0x5c51
 802d1e8:	305a066c 	.word	0x305a066c
 802d1ec:	65656540 	.word	0x65656540
 802d1f0:	6565      	.short	0x6565
 802d1f2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d1f6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802d1fa:	2208      	movs	r2, #8
 802d1fc:	fb91 f2f2 	sdiv	r2, r1, r2
 802d200:	fb08 2303 	mla	r3, r8, r3, r2
 802d204:	441f      	add	r7, r3
 802d206:	424b      	negs	r3, r1
 802d208:	f003 0307 	and.w	r3, r3, #7
 802d20c:	f001 0107 	and.w	r1, r1, #7
 802d210:	bf58      	it	pl
 802d212:	4259      	negpl	r1, r3
 802d214:	b2c9      	uxtb	r1, r1
 802d216:	b2ed      	uxtb	r5, r5
 802d218:	463a      	mov	r2, r7
 802d21a:	e9cd 1500 	strd	r1, r5, [sp]
 802d21e:	fa0f f388 	sxth.w	r3, r8
 802d222:	6861      	ldr	r1, [r4, #4]
 802d224:	f104 0014 	add.w	r0, r4, #20
 802d228:	f7ff fe4c 	bl	802cec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802d22c:	4607      	mov	r7, r0
 802d22e:	6860      	ldr	r0, [r4, #4]
 802d230:	6803      	ldr	r3, [r0, #0]
 802d232:	691b      	ldr	r3, [r3, #16]
 802d234:	4798      	blx	r3
 802d236:	6830      	ldr	r0, [r6, #0]
 802d238:	6803      	ldr	r3, [r0, #0]
 802d23a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802d23c:	4798      	blx	r3
 802d23e:	4638      	mov	r0, r7
 802d240:	b002      	add	sp, #8
 802d242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802d246:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d24a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802d24e:	2204      	movs	r2, #4
 802d250:	fb91 f2f2 	sdiv	r2, r1, r2
 802d254:	fb08 2303 	mla	r3, r8, r3, r2
 802d258:	441f      	add	r7, r3
 802d25a:	424b      	negs	r3, r1
 802d25c:	f003 0303 	and.w	r3, r3, #3
 802d260:	f001 0103 	and.w	r1, r1, #3
 802d264:	e7d4      	b.n	802d210 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802d266:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802d26a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d26e:	2900      	cmp	r1, #0
 802d270:	f04f 0202 	mov.w	r2, #2
 802d274:	fb91 f2f2 	sdiv	r2, r1, r2
 802d278:	f001 0101 	and.w	r1, r1, #1
 802d27c:	fb08 2303 	mla	r3, r8, r3, r2
 802d280:	441f      	add	r7, r3
 802d282:	bfb8      	it	lt
 802d284:	4249      	neglt	r1, r1
 802d286:	e7c5      	b.n	802d214 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802d288:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d28c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d290:	fb08 f303 	mul.w	r3, r8, r3
 802d294:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802d298:	441f      	add	r7, r3
 802d29a:	2100      	movs	r1, #0
 802d29c:	e7bb      	b.n	802d216 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802d29e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d2a2:	fb08 f203 	mul.w	r2, r8, r3
 802d2a6:	89a3      	ldrh	r3, [r4, #12]
 802d2a8:	2103      	movs	r1, #3
 802d2aa:	fb13 2301 	smlabb	r3, r3, r1, r2
 802d2ae:	e7f3      	b.n	802d298 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802d2b0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d2b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d2b8:	fb08 2303 	mla	r3, r8, r3, r2
 802d2bc:	e7ec      	b.n	802d298 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802d2be:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802d2c2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d2c6:	fb08 f303 	mul.w	r3, r8, r3
 802d2ca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802d2ce:	e7e3      	b.n	802d298 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802d2d0:	2701      	movs	r7, #1
 802d2d2:	e7b4      	b.n	802d23e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802d2d4:	200138e4 	.word	0x200138e4

0802d2d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802d2d8:	b510      	push	{r4, lr}
 802d2da:	4b06      	ldr	r3, [pc, #24]	@ (802d2f4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802d2dc:	781b      	ldrb	r3, [r3, #0]
 802d2de:	2b01      	cmp	r3, #1
 802d2e0:	d107      	bne.n	802d2f2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 802d2e2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 802d2e6:	680b      	ldr	r3, [r1, #0]
 802d2e8:	6814      	ldr	r4, [r2, #0]
 802d2ea:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802d2ee:	6013      	str	r3, [r2, #0]
 802d2f0:	600c      	str	r4, [r1, #0]
 802d2f2:	bd10      	pop	{r4, pc}
 802d2f4:	200138dc 	.word	0x200138dc

0802d2f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802d2f8:	b513      	push	{r0, r1, r4, lr}
 802d2fa:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802d2fe:	4604      	mov	r4, r0
 802d300:	e9cd 2100 	strd	r2, r1, [sp]
 802d304:	b9a3      	cbnz	r3, 802d330 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802d306:	466a      	mov	r2, sp
 802d308:	a901      	add	r1, sp, #4
 802d30a:	4620      	mov	r0, r4
 802d30c:	f7ff ffe4 	bl	802d2d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802d310:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802d312:	9901      	ldr	r1, [sp, #4]
 802d314:	9a00      	ldr	r2, [sp, #0]
 802d316:	1ac9      	subs	r1, r1, r3
 802d318:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802d31a:	9101      	str	r1, [sp, #4]
 802d31c:	1ad2      	subs	r2, r2, r3
 802d31e:	2a00      	cmp	r2, #0
 802d320:	9200      	str	r2, [sp, #0]
 802d322:	da0b      	bge.n	802d33c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802d324:	2301      	movs	r3, #1
 802d326:	2900      	cmp	r1, #0
 802d328:	da0e      	bge.n	802d348 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802d32a:	f043 0304 	orr.w	r3, r3, #4
 802d32e:	e013      	b.n	802d358 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802d330:	f7ff ff08 	bl	802d144 <_ZN8touchgfx6Canvas5closeEv>
 802d334:	2800      	cmp	r0, #0
 802d336:	d1e6      	bne.n	802d306 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802d338:	b002      	add	sp, #8
 802d33a:	bd10      	pop	{r4, pc}
 802d33c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802d33e:	429a      	cmp	r2, r3
 802d340:	bfac      	ite	ge
 802d342:	2302      	movge	r3, #2
 802d344:	2300      	movlt	r3, #0
 802d346:	e7ee      	b.n	802d326 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802d348:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802d34a:	4281      	cmp	r1, r0
 802d34c:	bfac      	ite	ge
 802d34e:	2008      	movge	r0, #8
 802d350:	2000      	movlt	r0, #0
 802d352:	4318      	orrs	r0, r3
 802d354:	b2c3      	uxtb	r3, r0
 802d356:	b158      	cbz	r0, 802d370 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802d358:	2200      	movs	r2, #0
 802d35a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802d35e:	9901      	ldr	r1, [sp, #4]
 802d360:	9a00      	ldr	r2, [sp, #0]
 802d362:	66e1      	str	r1, [r4, #108]	@ 0x6c
 802d364:	6722      	str	r2, [r4, #112]	@ 0x70
 802d366:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802d36a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802d36e:	e7e3      	b.n	802d338 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802d370:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802d374:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802d378:	4298      	cmp	r0, r3
 802d37a:	d803      	bhi.n	802d384 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802d37c:	f104 0014 	add.w	r0, r4, #20
 802d380:	f7ec f9ac 	bl	80196dc <_ZN8touchgfx7Outline6moveToEii>
 802d384:	2301      	movs	r3, #1
 802d386:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802d38a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802d38e:	2300      	movs	r3, #0
 802d390:	e7e5      	b.n	802d35e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802d392 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802d392:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802d394:	ab02      	add	r3, sp, #8
 802d396:	4604      	mov	r4, r0
 802d398:	f843 2d08 	str.w	r2, [r3, #-8]!
 802d39c:	9101      	str	r1, [sp, #4]
 802d39e:	461a      	mov	r2, r3
 802d3a0:	a901      	add	r1, sp, #4
 802d3a2:	f7ff ff99 	bl	802d2d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802d3a6:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802d3a8:	9901      	ldr	r1, [sp, #4]
 802d3aa:	9a00      	ldr	r2, [sp, #0]
 802d3ac:	1ac9      	subs	r1, r1, r3
 802d3ae:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802d3b0:	9101      	str	r1, [sp, #4]
 802d3b2:	1ad2      	subs	r2, r2, r3
 802d3b4:	2a00      	cmp	r2, #0
 802d3b6:	9200      	str	r2, [sp, #0]
 802d3b8:	db1c      	blt.n	802d3f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802d3ba:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802d3bc:	429a      	cmp	r2, r3
 802d3be:	bfac      	ite	ge
 802d3c0:	2002      	movge	r0, #2
 802d3c2:	2000      	movlt	r0, #0
 802d3c4:	2900      	cmp	r1, #0
 802d3c6:	db17      	blt.n	802d3f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802d3c8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802d3ca:	4299      	cmp	r1, r3
 802d3cc:	bfac      	ite	ge
 802d3ce:	2308      	movge	r3, #8
 802d3d0:	2300      	movlt	r3, #0
 802d3d2:	4303      	orrs	r3, r0
 802d3d4:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 802d3d8:	b2dd      	uxtb	r5, r3
 802d3da:	b978      	cbnz	r0, 802d3fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802d3dc:	f104 0014 	add.w	r0, r4, #20
 802d3e0:	f7ff fd64 	bl	802ceac <_ZN8touchgfx10Rasterizer6lineToEii>
 802d3e4:	9b01      	ldr	r3, [sp, #4]
 802d3e6:	6623      	str	r3, [r4, #96]	@ 0x60
 802d3e8:	9b00      	ldr	r3, [sp, #0]
 802d3ea:	6663      	str	r3, [r4, #100]	@ 0x64
 802d3ec:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 802d3f0:	b002      	add	sp, #8
 802d3f2:	bd70      	pop	{r4, r5, r6, pc}
 802d3f4:	2001      	movs	r0, #1
 802d3f6:	e7e5      	b.n	802d3c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802d3f8:	2304      	movs	r3, #4
 802d3fa:	e7ea      	b.n	802d3d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802d3fc:	b113      	cbz	r3, 802d404 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802d3fe:	ea10 0305 	ands.w	r3, r0, r5
 802d402:	d11c      	bne.n	802d43e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802d404:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 802d408:	f104 0614 	add.w	r6, r4, #20
 802d40c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 802d410:	b98b      	cbnz	r3, 802d436 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802d412:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802d416:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802d41a:	4298      	cmp	r0, r3
 802d41c:	d802      	bhi.n	802d424 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802d41e:	4630      	mov	r0, r6
 802d420:	f7ec f95c 	bl	80196dc <_ZN8touchgfx7Outline6moveToEii>
 802d424:	2301      	movs	r3, #1
 802d426:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802d42a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802d42e:	e9dd 2100 	ldrd	r2, r1, [sp]
 802d432:	4630      	mov	r0, r6
 802d434:	e7d4      	b.n	802d3e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802d436:	4630      	mov	r0, r6
 802d438:	f7ff fd38 	bl	802ceac <_ZN8touchgfx10Rasterizer6lineToEii>
 802d43c:	e7f7      	b.n	802d42e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802d43e:	461d      	mov	r5, r3
 802d440:	e7d0      	b.n	802d3e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802d444 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 802d444:	b538      	push	{r3, r4, r5, lr}
 802d446:	ed2d 8b10 	vpush	{d8-d15}
 802d44a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 802d44e:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 802d5b8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 802d452:	4605      	mov	r5, r0
 802d454:	eeb0 ca40 	vmov.f32	s24, s0
 802d458:	eef0 ca60 	vmov.f32	s25, s1
 802d45c:	eeb0 da41 	vmov.f32	s26, s2
 802d460:	eef0 da61 	vmov.f32	s27, s3
 802d464:	eeb0 ea42 	vmov.f32	s28, s4
 802d468:	eef0 ea62 	vmov.f32	s29, s5
 802d46c:	460c      	mov	r4, r1
 802d46e:	eef0 aa6b 	vmov.f32	s21, s23
 802d472:	2c08      	cmp	r4, #8
 802d474:	d86e      	bhi.n	802d554 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802d476:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802d47a:	ee7d 7aee 	vsub.f32	s15, s27, s29
 802d47e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 802d482:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802d486:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802d48a:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802d48e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d492:	ee7c faad 	vadd.f32	s31, s25, s27
 802d496:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802d49a:	ee3d aaae 	vadd.f32	s20, s27, s29
 802d49e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802d4a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4a6:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802d4aa:	ee6f faab 	vmul.f32	s31, s31, s23
 802d4ae:	ee69 9aab 	vmul.f32	s19, s19, s23
 802d4b2:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802d4b6:	bf48      	it	mi
 802d4b8:	eef1 7a67 	vnegmi.f32	s15, s15
 802d4bc:	ee7f 8a29 	vadd.f32	s17, s30, s19
 802d4c0:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 802d4c4:	eef4 7acb 	vcmpe.f32	s15, s22
 802d4c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4cc:	ee68 8aab 	vmul.f32	s17, s17, s23
 802d4d0:	ee29 9a2b 	vmul.f32	s18, s18, s23
 802d4d4:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 802d4d8:	dd3f      	ble.n	802d55a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802d4da:	ee27 7a07 	vmul.f32	s14, s14, s14
 802d4de:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d4e2:	eea6 7aa6 	vfma.f32	s14, s13, s13
 802d4e6:	ee27 7a06 	vmul.f32	s14, s14, s12
 802d4ea:	eef4 7ac7 	vcmpe.f32	s15, s14
 802d4ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4f2:	d847      	bhi.n	802d584 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802d4f4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 802d4f8:	ee3e 0aed 	vsub.f32	s0, s29, s27
 802d4fc:	f000 fa3b 	bl	802d976 <atan2f>
 802d500:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 802d504:	eeb0 8a40 	vmov.f32	s16, s0
 802d508:	ee3d 0aec 	vsub.f32	s0, s27, s25
 802d50c:	f000 fa33 	bl	802d976 <atan2f>
 802d510:	ee38 0a40 	vsub.f32	s0, s16, s0
 802d514:	eddf 7a29 	vldr	s15, [pc, #164]	@ 802d5bc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802d518:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d51c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d520:	bf48      	it	mi
 802d522:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d526:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d52a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d52e:	bfa4      	itt	ge
 802d530:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 802d5c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 802d534:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802d538:	eddf 7a22 	vldr	s15, [pc, #136]	@ 802d5c4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 802d53c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d544:	d51e      	bpl.n	802d584 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802d546:	eef0 0a49 	vmov.f32	s1, s18
 802d54a:	eeb0 0a68 	vmov.f32	s0, s17
 802d54e:	4628      	mov	r0, r5
 802d550:	f7ea f88a 	bl	8017668 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d554:	ecbd 8b10 	vpop	{d8-d15}
 802d558:	bd38      	pop	{r3, r4, r5, pc}
 802d55a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802d55e:	eeb0 7a68 	vmov.f32	s14, s17
 802d562:	eea7 7aea 	vfms.f32	s14, s15, s21
 802d566:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802d56a:	eef0 6a49 	vmov.f32	s13, s18
 802d56e:	eee7 6aea 	vfms.f32	s13, s15, s21
 802d572:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802d576:	eee7 7a07 	vfma.f32	s15, s14, s14
 802d57a:	eef4 7ac6 	vcmpe.f32	s15, s12
 802d57e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d582:	d9e0      	bls.n	802d546 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 802d584:	3401      	adds	r4, #1
 802d586:	eef0 0a6c 	vmov.f32	s1, s25
 802d58a:	eeb0 0a4c 	vmov.f32	s0, s24
 802d58e:	4621      	mov	r1, r4
 802d590:	eef0 2a49 	vmov.f32	s5, s18
 802d594:	eeb0 2a68 	vmov.f32	s4, s17
 802d598:	eef0 1a6f 	vmov.f32	s3, s31
 802d59c:	eeb0 1a4f 	vmov.f32	s2, s30
 802d5a0:	4628      	mov	r0, r5
 802d5a2:	f7ff ff4f 	bl	802d444 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802d5a6:	eef0 da4a 	vmov.f32	s27, s20
 802d5aa:	eeb0 da69 	vmov.f32	s26, s19
 802d5ae:	eef0 ca49 	vmov.f32	s25, s18
 802d5b2:	eeb0 ca68 	vmov.f32	s24, s17
 802d5b6:	e75c      	b.n	802d472 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 802d5b8:	2edbe6ff 	.word	0x2edbe6ff
 802d5bc:	40490fdb 	.word	0x40490fdb
 802d5c0:	40c90fdb 	.word	0x40c90fdb
 802d5c4:	3dcccccd 	.word	0x3dcccccd

0802d5c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 802d5c8:	b530      	push	{r4, r5, lr}
 802d5ca:	ed2d 8b10 	vpush	{d8-d15}
 802d5ce:	4604      	mov	r4, r0
 802d5d0:	b085      	sub	sp, #20
 802d5d2:	eef0 8a40 	vmov.f32	s17, s0
 802d5d6:	eef0 9a60 	vmov.f32	s19, s1
 802d5da:	eef0 fa41 	vmov.f32	s31, s2
 802d5de:	eeb0 fa61 	vmov.f32	s30, s3
 802d5e2:	eef0 ba42 	vmov.f32	s23, s4
 802d5e6:	eeb0 ca62 	vmov.f32	s24, s5
 802d5ea:	eef0 aa43 	vmov.f32	s21, s6
 802d5ee:	eeb0 ba63 	vmov.f32	s22, s7
 802d5f2:	460d      	mov	r5, r1
 802d5f4:	2d08      	cmp	r5, #8
 802d5f6:	f200 8115 	bhi.w	802d824 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802d5fa:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 802d5fe:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802d602:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802d606:	ee26 6a27 	vmul.f32	s12, s12, s15
 802d60a:	ee38 daaf 	vadd.f32	s26, s17, s31
 802d60e:	ed8d 6a01 	vstr	s12, [sp, #4]
 802d612:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802d616:	ee2d da27 	vmul.f32	s26, s26, s15
 802d61a:	ee7c ca0b 	vadd.f32	s25, s24, s22
 802d61e:	eeb0 ea4d 	vmov.f32	s28, s26
 802d622:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802d626:	ee6c caa7 	vmul.f32	s25, s25, s15
 802d62a:	ee66 6a27 	vmul.f32	s13, s12, s15
 802d62e:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 802d632:	edcd 6a03 	vstr	s13, [sp, #12]
 802d636:	ee79 da8f 	vadd.f32	s27, s19, s30
 802d63a:	eef0 6a6c 	vmov.f32	s13, s25
 802d63e:	eee7 6a27 	vfma.f32	s13, s14, s15
 802d642:	ee6d daa7 	vmul.f32	s27, s27, s15
 802d646:	ee2e ea27 	vmul.f32	s28, s28, s15
 802d64a:	eef0 ea6d 	vmov.f32	s29, s27
 802d64e:	eee7 ea27 	vfma.f32	s29, s14, s15
 802d652:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802d656:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802d65a:	ed8d 7a02 	vstr	s14, [sp, #8]
 802d65e:	ed9d 7a03 	vldr	s14, [sp, #12]
 802d662:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802d666:	ed9d 7a02 	vldr	s14, [sp, #8]
 802d66a:	ee3e aa87 	vadd.f32	s20, s29, s14
 802d66e:	ee29 9a27 	vmul.f32	s18, s18, s15
 802d672:	ee2a aa27 	vmul.f32	s20, s20, s15
 802d676:	eef0 6a67 	vmov.f32	s13, s15
 802d67a:	2d00      	cmp	r5, #0
 802d67c:	f000 810d 	beq.w	802d89a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d680:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 802d684:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 802d688:	ee7b 7a69 	vsub.f32	s15, s22, s19
 802d68c:	ee3f 6aea 	vsub.f32	s12, s31, s21
 802d690:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 802d694:	ee3b 5aea 	vsub.f32	s10, s23, s21
 802d698:	eea6 7a27 	vfma.f32	s14, s12, s15
 802d69c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 802d6a0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802d6a4:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 802d6a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6ac:	eea5 6a27 	vfma.f32	s12, s10, s15
 802d6b0:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 802d8e0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802d6b4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802d6b8:	bf48      	it	mi
 802d6ba:	eeb1 7a47 	vnegmi.f32	s14, s14
 802d6be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6c2:	eeb4 7ae4 	vcmpe.f32	s14, s9
 802d6c6:	bf48      	it	mi
 802d6c8:	eeb1 6a46 	vnegmi.f32	s12, s12
 802d6cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6d0:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 802d6d4:	f340 80aa 	ble.w	802d82c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 802d6d8:	eeb4 6ae4 	vcmpe.f32	s12, s9
 802d6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6e0:	dd5c      	ble.n	802d79c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 802d6e2:	ee65 5aa5 	vmul.f32	s11, s11, s11
 802d6e6:	ee37 7a06 	vadd.f32	s14, s14, s12
 802d6ea:	eee7 5aa7 	vfma.f32	s11, s15, s15
 802d6ee:	ee27 7a07 	vmul.f32	s14, s14, s14
 802d6f2:	ee65 7a85 	vmul.f32	s15, s11, s10
 802d6f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d6fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d6fe:	f200 80cc 	bhi.w	802d89a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d702:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d706:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d70a:	f000 f934 	bl	802d976 <atan2f>
 802d70e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802d712:	eeb0 8a40 	vmov.f32	s16, s0
 802d716:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802d71a:	f000 f92c 	bl	802d976 <atan2f>
 802d71e:	ee38 fa40 	vsub.f32	s30, s16, s0
 802d722:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802d726:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802d72a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d72e:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802d732:	bf48      	it	mi
 802d734:	eeb1 fa4f 	vnegmi.f32	s30, s30
 802d738:	f000 f91d 	bl	802d976 <atan2f>
 802d73c:	ee30 0a48 	vsub.f32	s0, s0, s16
 802d740:	eddf 7a68 	vldr	s15, [pc, #416]	@ 802d8e4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d744:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d74c:	eeb4 fae7 	vcmpe.f32	s30, s15
 802d750:	bf48      	it	mi
 802d752:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d756:	eddf 7a63 	vldr	s15, [pc, #396]	@ 802d8e4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d75a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d75e:	bfa8      	it	ge
 802d760:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 802d8e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d764:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d768:	bfa8      	it	ge
 802d76a:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 802d76e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d772:	bfa8      	it	ge
 802d774:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 802d8e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d778:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802d8ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802d77c:	bfa8      	it	ge
 802d77e:	ee37 0a40 	vsubge.f32	s0, s14, s0
 802d782:	ee3f 0a00 	vadd.f32	s0, s30, s0
 802d786:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d78a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d78e:	f140 8084 	bpl.w	802d89a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d792:	eef0 0a4a 	vmov.f32	s1, s20
 802d796:	eeb0 0a49 	vmov.f32	s0, s18
 802d79a:	e040      	b.n	802d81e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 802d79c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d7a0:	ee27 7a07 	vmul.f32	s14, s14, s14
 802d7a4:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802d7a8:	ee67 7a85 	vmul.f32	s15, s15, s10
 802d7ac:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d7b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d7b4:	d871      	bhi.n	802d89a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d7b6:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d7ba:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d7be:	f000 f8da 	bl	802d976 <atan2f>
 802d7c2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802d7c6:	eeb0 8a40 	vmov.f32	s16, s0
 802d7ca:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802d7ce:	f000 f8d2 	bl	802d976 <atan2f>
 802d7d2:	ee38 0a40 	vsub.f32	s0, s16, s0
 802d7d6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 802d8e4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802d7da:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d7de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d7e2:	bf48      	it	mi
 802d7e4:	eeb1 0a40 	vnegmi.f32	s0, s0
 802d7e8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d7ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d7f0:	bfa4      	itt	ge
 802d7f2:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 802d8e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802d7f6:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802d7fa:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 802d8ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802d7fe:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d802:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d806:	d548      	bpl.n	802d89a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d808:	eef0 0a4f 	vmov.f32	s1, s30
 802d80c:	eeb0 0a6f 	vmov.f32	s0, s31
 802d810:	4620      	mov	r0, r4
 802d812:	f7e9 ff29 	bl	8017668 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d816:	eef0 0a4c 	vmov.f32	s1, s24
 802d81a:	eeb0 0a6b 	vmov.f32	s0, s23
 802d81e:	4620      	mov	r0, r4
 802d820:	f7e9 ff22 	bl	8017668 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802d824:	b005      	add	sp, #20
 802d826:	ecbd 8b10 	vpop	{d8-d15}
 802d82a:	bd30      	pop	{r4, r5, pc}
 802d82c:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 802d8e0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802d830:	eeb4 6ac7 	vcmpe.f32	s12, s14
 802d834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d838:	dd19      	ble.n	802d86e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802d83a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802d83e:	ee26 7a06 	vmul.f32	s14, s12, s12
 802d842:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802d846:	ee67 7a85 	vmul.f32	s15, s15, s10
 802d84a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802d84e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d852:	d822      	bhi.n	802d89a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802d854:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802d858:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802d85c:	f000 f88b 	bl	802d976 <atan2f>
 802d860:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802d864:	eeb0 8a40 	vmov.f32	s16, s0
 802d868:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802d86c:	e7af      	b.n	802d7ce <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 802d86e:	ee78 7aaa 	vadd.f32	s15, s17, s21
 802d872:	eeb0 7a49 	vmov.f32	s14, s18
 802d876:	eea7 7ae6 	vfms.f32	s14, s15, s13
 802d87a:	ee79 7a8b 	vadd.f32	s15, s19, s22
 802d87e:	eeb0 6a4a 	vmov.f32	s12, s20
 802d882:	eea7 6ae6 	vfms.f32	s12, s15, s13
 802d886:	ee66 7a06 	vmul.f32	s15, s12, s12
 802d88a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802d88e:	eef4 7ac5 	vcmpe.f32	s15, s10
 802d892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d896:	f67f af7c 	bls.w	802d792 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 802d89a:	3501      	adds	r5, #1
 802d89c:	eef0 0a69 	vmov.f32	s1, s19
 802d8a0:	eeb0 0a68 	vmov.f32	s0, s17
 802d8a4:	4629      	mov	r1, r5
 802d8a6:	eef0 3a4a 	vmov.f32	s7, s20
 802d8aa:	eeb0 3a49 	vmov.f32	s6, s18
 802d8ae:	eef0 2a6e 	vmov.f32	s5, s29
 802d8b2:	eeb0 2a4e 	vmov.f32	s4, s28
 802d8b6:	eef0 1a6d 	vmov.f32	s3, s27
 802d8ba:	eeb0 1a4d 	vmov.f32	s2, s26
 802d8be:	4620      	mov	r0, r4
 802d8c0:	f7ff fe82 	bl	802d5c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 802d8c4:	eeb0 ca6c 	vmov.f32	s24, s25
 802d8c8:	eddd ba01 	vldr	s23, [sp, #4]
 802d8cc:	ed9d fa02 	vldr	s30, [sp, #8]
 802d8d0:	eddd fa03 	vldr	s31, [sp, #12]
 802d8d4:	eef0 9a4a 	vmov.f32	s19, s20
 802d8d8:	eef0 8a49 	vmov.f32	s17, s18
 802d8dc:	e68a      	b.n	802d5f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 802d8de:	bf00      	nop
 802d8e0:	2edbe6ff 	.word	0x2edbe6ff
 802d8e4:	40490fdb 	.word	0x40490fdb
 802d8e8:	40c90fdb 	.word	0x40c90fdb
 802d8ec:	3dcccccd 	.word	0x3dcccccd

0802d8f0 <_ZN8touchgfx6CanvasD1Ev>:
 802d8f0:	b510      	push	{r4, lr}
 802d8f2:	4b04      	ldr	r3, [pc, #16]	@ (802d904 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802d8f4:	4604      	mov	r4, r0
 802d8f6:	f840 3b14 	str.w	r3, [r0], #20
 802d8fa:	f7eb f9e9 	bl	8018cd0 <_ZN8touchgfx7OutlineD1Ev>
 802d8fe:	4620      	mov	r0, r4
 802d900:	bd10      	pop	{r4, pc}
 802d902:	bf00      	nop
 802d904:	08033978 	.word	0x08033978

0802d908 <_ZN8touchgfx6CanvasD0Ev>:
 802d908:	b510      	push	{r4, lr}
 802d90a:	4604      	mov	r4, r0
 802d90c:	f7ff fff0 	bl	802d8f0 <_ZN8touchgfx6CanvasD1Ev>
 802d910:	4620      	mov	r0, r4
 802d912:	2174      	movs	r1, #116	@ 0x74
 802d914:	f000 f807 	bl	802d926 <_ZdlPvj>
 802d918:	4620      	mov	r0, r4
 802d91a:	bd10      	pop	{r4, pc}

0802d91c <__aeabi_atexit>:
 802d91c:	460b      	mov	r3, r1
 802d91e:	4601      	mov	r1, r0
 802d920:	4618      	mov	r0, r3
 802d922:	f001 b81f 	b.w	802e964 <__cxa_atexit>

0802d926 <_ZdlPvj>:
 802d926:	f000 b812 	b.w	802d94e <_ZdlPv>

0802d92a <__cxa_guard_acquire>:
 802d92a:	6802      	ldr	r2, [r0, #0]
 802d92c:	07d2      	lsls	r2, r2, #31
 802d92e:	4603      	mov	r3, r0
 802d930:	d405      	bmi.n	802d93e <__cxa_guard_acquire+0x14>
 802d932:	7842      	ldrb	r2, [r0, #1]
 802d934:	b102      	cbz	r2, 802d938 <__cxa_guard_acquire+0xe>
 802d936:	deff      	udf	#255	@ 0xff
 802d938:	2001      	movs	r0, #1
 802d93a:	7058      	strb	r0, [r3, #1]
 802d93c:	4770      	bx	lr
 802d93e:	2000      	movs	r0, #0
 802d940:	4770      	bx	lr

0802d942 <__cxa_guard_release>:
 802d942:	2301      	movs	r3, #1
 802d944:	6003      	str	r3, [r0, #0]
 802d946:	4770      	bx	lr

0802d948 <__cxa_pure_virtual>:
 802d948:	b508      	push	{r3, lr}
 802d94a:	f000 f80f 	bl	802d96c <_ZSt9terminatev>

0802d94e <_ZdlPv>:
 802d94e:	f000 bf53 	b.w	802e7f8 <free>

0802d952 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802d952:	b508      	push	{r3, lr}
 802d954:	4780      	blx	r0
 802d956:	f000 ff1b 	bl	802e790 <abort>
	...

0802d95c <_ZSt13get_terminatev>:
 802d95c:	4b02      	ldr	r3, [pc, #8]	@ (802d968 <_ZSt13get_terminatev+0xc>)
 802d95e:	6818      	ldr	r0, [r3, #0]
 802d960:	f3bf 8f5b 	dmb	ish
 802d964:	4770      	bx	lr
 802d966:	bf00      	nop
 802d968:	2000010c 	.word	0x2000010c

0802d96c <_ZSt9terminatev>:
 802d96c:	b508      	push	{r3, lr}
 802d96e:	f7ff fff5 	bl	802d95c <_ZSt13get_terminatev>
 802d972:	f7ff ffee 	bl	802d952 <_ZN10__cxxabiv111__terminateEPFvvE>

0802d976 <atan2f>:
 802d976:	f000 b94d 	b.w	802dc14 <__ieee754_atan2f>
	...

0802d97c <sqrtf>:
 802d97c:	b508      	push	{r3, lr}
 802d97e:	ed2d 8b02 	vpush	{d8}
 802d982:	eeb0 8a40 	vmov.f32	s16, s0
 802d986:	f000 f8a1 	bl	802dacc <__ieee754_sqrtf>
 802d98a:	eeb4 8a48 	vcmp.f32	s16, s16
 802d98e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d992:	d60c      	bvs.n	802d9ae <sqrtf+0x32>
 802d994:	eddf 8a07 	vldr	s17, [pc, #28]	@ 802d9b4 <sqrtf+0x38>
 802d998:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802d99c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d9a0:	d505      	bpl.n	802d9ae <sqrtf+0x32>
 802d9a2:	f001 f9a7 	bl	802ecf4 <__errno>
 802d9a6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802d9aa:	2321      	movs	r3, #33	@ 0x21
 802d9ac:	6003      	str	r3, [r0, #0]
 802d9ae:	ecbd 8b02 	vpop	{d8}
 802d9b2:	bd08      	pop	{r3, pc}
 802d9b4:	00000000 	.word	0x00000000

0802d9b8 <cosf>:
 802d9b8:	ee10 3a10 	vmov	r3, s0
 802d9bc:	b507      	push	{r0, r1, r2, lr}
 802d9be:	4a1e      	ldr	r2, [pc, #120]	@ (802da38 <cosf+0x80>)
 802d9c0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802d9c4:	4293      	cmp	r3, r2
 802d9c6:	d806      	bhi.n	802d9d6 <cosf+0x1e>
 802d9c8:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 802da3c <cosf+0x84>
 802d9cc:	b003      	add	sp, #12
 802d9ce:	f85d eb04 	ldr.w	lr, [sp], #4
 802d9d2:	f000 b87f 	b.w	802dad4 <__kernel_cosf>
 802d9d6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802d9da:	d304      	bcc.n	802d9e6 <cosf+0x2e>
 802d9dc:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d9e0:	b003      	add	sp, #12
 802d9e2:	f85d fb04 	ldr.w	pc, [sp], #4
 802d9e6:	4668      	mov	r0, sp
 802d9e8:	f000 f9b4 	bl	802dd54 <__ieee754_rem_pio2f>
 802d9ec:	f000 0003 	and.w	r0, r0, #3
 802d9f0:	2801      	cmp	r0, #1
 802d9f2:	d009      	beq.n	802da08 <cosf+0x50>
 802d9f4:	2802      	cmp	r0, #2
 802d9f6:	d010      	beq.n	802da1a <cosf+0x62>
 802d9f8:	b9b0      	cbnz	r0, 802da28 <cosf+0x70>
 802d9fa:	eddd 0a01 	vldr	s1, [sp, #4]
 802d9fe:	ed9d 0a00 	vldr	s0, [sp]
 802da02:	f000 f867 	bl	802dad4 <__kernel_cosf>
 802da06:	e7eb      	b.n	802d9e0 <cosf+0x28>
 802da08:	eddd 0a01 	vldr	s1, [sp, #4]
 802da0c:	ed9d 0a00 	vldr	s0, [sp]
 802da10:	f000 f8b8 	bl	802db84 <__kernel_sinf>
 802da14:	eeb1 0a40 	vneg.f32	s0, s0
 802da18:	e7e2      	b.n	802d9e0 <cosf+0x28>
 802da1a:	eddd 0a01 	vldr	s1, [sp, #4]
 802da1e:	ed9d 0a00 	vldr	s0, [sp]
 802da22:	f000 f857 	bl	802dad4 <__kernel_cosf>
 802da26:	e7f5      	b.n	802da14 <cosf+0x5c>
 802da28:	eddd 0a01 	vldr	s1, [sp, #4]
 802da2c:	ed9d 0a00 	vldr	s0, [sp]
 802da30:	2001      	movs	r0, #1
 802da32:	f000 f8a7 	bl	802db84 <__kernel_sinf>
 802da36:	e7d3      	b.n	802d9e0 <cosf+0x28>
 802da38:	3f490fd8 	.word	0x3f490fd8
 802da3c:	00000000 	.word	0x00000000

0802da40 <sinf>:
 802da40:	ee10 3a10 	vmov	r3, s0
 802da44:	b507      	push	{r0, r1, r2, lr}
 802da46:	4a1f      	ldr	r2, [pc, #124]	@ (802dac4 <sinf+0x84>)
 802da48:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802da4c:	4293      	cmp	r3, r2
 802da4e:	d807      	bhi.n	802da60 <sinf+0x20>
 802da50:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 802dac8 <sinf+0x88>
 802da54:	2000      	movs	r0, #0
 802da56:	b003      	add	sp, #12
 802da58:	f85d eb04 	ldr.w	lr, [sp], #4
 802da5c:	f000 b892 	b.w	802db84 <__kernel_sinf>
 802da60:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802da64:	d304      	bcc.n	802da70 <sinf+0x30>
 802da66:	ee30 0a40 	vsub.f32	s0, s0, s0
 802da6a:	b003      	add	sp, #12
 802da6c:	f85d fb04 	ldr.w	pc, [sp], #4
 802da70:	4668      	mov	r0, sp
 802da72:	f000 f96f 	bl	802dd54 <__ieee754_rem_pio2f>
 802da76:	f000 0003 	and.w	r0, r0, #3
 802da7a:	2801      	cmp	r0, #1
 802da7c:	d00a      	beq.n	802da94 <sinf+0x54>
 802da7e:	2802      	cmp	r0, #2
 802da80:	d00f      	beq.n	802daa2 <sinf+0x62>
 802da82:	b9c0      	cbnz	r0, 802dab6 <sinf+0x76>
 802da84:	eddd 0a01 	vldr	s1, [sp, #4]
 802da88:	ed9d 0a00 	vldr	s0, [sp]
 802da8c:	2001      	movs	r0, #1
 802da8e:	f000 f879 	bl	802db84 <__kernel_sinf>
 802da92:	e7ea      	b.n	802da6a <sinf+0x2a>
 802da94:	eddd 0a01 	vldr	s1, [sp, #4]
 802da98:	ed9d 0a00 	vldr	s0, [sp]
 802da9c:	f000 f81a 	bl	802dad4 <__kernel_cosf>
 802daa0:	e7e3      	b.n	802da6a <sinf+0x2a>
 802daa2:	eddd 0a01 	vldr	s1, [sp, #4]
 802daa6:	ed9d 0a00 	vldr	s0, [sp]
 802daaa:	2001      	movs	r0, #1
 802daac:	f000 f86a 	bl	802db84 <__kernel_sinf>
 802dab0:	eeb1 0a40 	vneg.f32	s0, s0
 802dab4:	e7d9      	b.n	802da6a <sinf+0x2a>
 802dab6:	eddd 0a01 	vldr	s1, [sp, #4]
 802daba:	ed9d 0a00 	vldr	s0, [sp]
 802dabe:	f000 f809 	bl	802dad4 <__kernel_cosf>
 802dac2:	e7f5      	b.n	802dab0 <sinf+0x70>
 802dac4:	3f490fd8 	.word	0x3f490fd8
 802dac8:	00000000 	.word	0x00000000

0802dacc <__ieee754_sqrtf>:
 802dacc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802dad0:	4770      	bx	lr
	...

0802dad4 <__kernel_cosf>:
 802dad4:	ee10 3a10 	vmov	r3, s0
 802dad8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802dadc:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802dae0:	eef0 6a40 	vmov.f32	s13, s0
 802dae4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802dae8:	d204      	bcs.n	802daf4 <__kernel_cosf+0x20>
 802daea:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 802daee:	ee17 2a90 	vmov	r2, s15
 802daf2:	b342      	cbz	r2, 802db46 <__kernel_cosf+0x72>
 802daf4:	ee26 7aa6 	vmul.f32	s14, s13, s13
 802daf8:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 802db64 <__kernel_cosf+0x90>
 802dafc:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802db68 <__kernel_cosf+0x94>
 802db00:	4a1a      	ldr	r2, [pc, #104]	@ (802db6c <__kernel_cosf+0x98>)
 802db02:	eea7 6a27 	vfma.f32	s12, s14, s15
 802db06:	4293      	cmp	r3, r2
 802db08:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802db70 <__kernel_cosf+0x9c>
 802db0c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802db10:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 802db74 <__kernel_cosf+0xa0>
 802db14:	eea7 6a87 	vfma.f32	s12, s15, s14
 802db18:	eddf 7a17 	vldr	s15, [pc, #92]	@ 802db78 <__kernel_cosf+0xa4>
 802db1c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802db20:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 802db7c <__kernel_cosf+0xa8>
 802db24:	eea7 6a87 	vfma.f32	s12, s15, s14
 802db28:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 802db2c:	ee26 6a07 	vmul.f32	s12, s12, s14
 802db30:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802db34:	eee7 0a06 	vfma.f32	s1, s14, s12
 802db38:	ee67 7a27 	vmul.f32	s15, s14, s15
 802db3c:	d804      	bhi.n	802db48 <__kernel_cosf+0x74>
 802db3e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802db42:	ee30 0a67 	vsub.f32	s0, s0, s15
 802db46:	4770      	bx	lr
 802db48:	4a0d      	ldr	r2, [pc, #52]	@ (802db80 <__kernel_cosf+0xac>)
 802db4a:	4293      	cmp	r3, r2
 802db4c:	bf9a      	itte	ls
 802db4e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 802db52:	ee07 3a10 	vmovls	s14, r3
 802db56:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802db5a:	ee30 0a47 	vsub.f32	s0, s0, s14
 802db5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802db62:	e7ec      	b.n	802db3e <__kernel_cosf+0x6a>
 802db64:	ad47d74e 	.word	0xad47d74e
 802db68:	310f74f6 	.word	0x310f74f6
 802db6c:	3e999999 	.word	0x3e999999
 802db70:	b493f27c 	.word	0xb493f27c
 802db74:	37d00d01 	.word	0x37d00d01
 802db78:	bab60b61 	.word	0xbab60b61
 802db7c:	3d2aaaab 	.word	0x3d2aaaab
 802db80:	3f480000 	.word	0x3f480000

0802db84 <__kernel_sinf>:
 802db84:	ee10 3a10 	vmov	r3, s0
 802db88:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802db8c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802db90:	d204      	bcs.n	802db9c <__kernel_sinf+0x18>
 802db92:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802db96:	ee17 3a90 	vmov	r3, s15
 802db9a:	b35b      	cbz	r3, 802dbf4 <__kernel_sinf+0x70>
 802db9c:	ee20 7a00 	vmul.f32	s14, s0, s0
 802dba0:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802dbf8 <__kernel_sinf+0x74>
 802dba4:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 802dbfc <__kernel_sinf+0x78>
 802dba8:	eea7 6a27 	vfma.f32	s12, s14, s15
 802dbac:	eddf 7a14 	vldr	s15, [pc, #80]	@ 802dc00 <__kernel_sinf+0x7c>
 802dbb0:	eee6 7a07 	vfma.f32	s15, s12, s14
 802dbb4:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 802dc04 <__kernel_sinf+0x80>
 802dbb8:	eea7 6a87 	vfma.f32	s12, s15, s14
 802dbbc:	eddf 7a12 	vldr	s15, [pc, #72]	@ 802dc08 <__kernel_sinf+0x84>
 802dbc0:	ee60 6a07 	vmul.f32	s13, s0, s14
 802dbc4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802dbc8:	b930      	cbnz	r0, 802dbd8 <__kernel_sinf+0x54>
 802dbca:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 802dc0c <__kernel_sinf+0x88>
 802dbce:	eea7 6a27 	vfma.f32	s12, s14, s15
 802dbd2:	eea6 0a26 	vfma.f32	s0, s12, s13
 802dbd6:	4770      	bx	lr
 802dbd8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802dbdc:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 802dbe0:	eee0 7a86 	vfma.f32	s15, s1, s12
 802dbe4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802dbe8:	eddf 7a09 	vldr	s15, [pc, #36]	@ 802dc10 <__kernel_sinf+0x8c>
 802dbec:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802dbf0:	ee30 0a60 	vsub.f32	s0, s0, s1
 802dbf4:	4770      	bx	lr
 802dbf6:	bf00      	nop
 802dbf8:	2f2ec9d3 	.word	0x2f2ec9d3
 802dbfc:	b2d72f34 	.word	0xb2d72f34
 802dc00:	3638ef1b 	.word	0x3638ef1b
 802dc04:	b9500d01 	.word	0xb9500d01
 802dc08:	3c088889 	.word	0x3c088889
 802dc0c:	be2aaaab 	.word	0xbe2aaaab
 802dc10:	3e2aaaab 	.word	0x3e2aaaab

0802dc14 <__ieee754_atan2f>:
 802dc14:	ee10 2a90 	vmov	r2, s1
 802dc18:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 802dc1c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802dc20:	b510      	push	{r4, lr}
 802dc22:	eef0 7a40 	vmov.f32	s15, s0
 802dc26:	d806      	bhi.n	802dc36 <__ieee754_atan2f+0x22>
 802dc28:	ee10 0a10 	vmov	r0, s0
 802dc2c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 802dc30:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802dc34:	d904      	bls.n	802dc40 <__ieee754_atan2f+0x2c>
 802dc36:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802dc3a:	eeb0 0a67 	vmov.f32	s0, s15
 802dc3e:	bd10      	pop	{r4, pc}
 802dc40:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 802dc44:	d103      	bne.n	802dc4e <__ieee754_atan2f+0x3a>
 802dc46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dc4a:	f000 b9b3 	b.w	802dfb4 <atanf>
 802dc4e:	1794      	asrs	r4, r2, #30
 802dc50:	f004 0402 	and.w	r4, r4, #2
 802dc54:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802dc58:	b943      	cbnz	r3, 802dc6c <__ieee754_atan2f+0x58>
 802dc5a:	2c02      	cmp	r4, #2
 802dc5c:	d05e      	beq.n	802dd1c <__ieee754_atan2f+0x108>
 802dc5e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802dd30 <__ieee754_atan2f+0x11c>
 802dc62:	2c03      	cmp	r4, #3
 802dc64:	bf08      	it	eq
 802dc66:	eef0 7a47 	vmoveq.f32	s15, s14
 802dc6a:	e7e6      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dc6c:	b941      	cbnz	r1, 802dc80 <__ieee754_atan2f+0x6c>
 802dc6e:	eddf 7a31 	vldr	s15, [pc, #196]	@ 802dd34 <__ieee754_atan2f+0x120>
 802dc72:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802dd38 <__ieee754_atan2f+0x124>
 802dc76:	2800      	cmp	r0, #0
 802dc78:	bfa8      	it	ge
 802dc7a:	eef0 7a47 	vmovge.f32	s15, s14
 802dc7e:	e7dc      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dc80:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802dc84:	d110      	bne.n	802dca8 <__ieee754_atan2f+0x94>
 802dc86:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802dc8a:	f104 34ff 	add.w	r4, r4, #4294967295
 802dc8e:	d107      	bne.n	802dca0 <__ieee754_atan2f+0x8c>
 802dc90:	2c02      	cmp	r4, #2
 802dc92:	d846      	bhi.n	802dd22 <__ieee754_atan2f+0x10e>
 802dc94:	4b29      	ldr	r3, [pc, #164]	@ (802dd3c <__ieee754_atan2f+0x128>)
 802dc96:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802dc9a:	edd3 7a00 	vldr	s15, [r3]
 802dc9e:	e7cc      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dca0:	2c02      	cmp	r4, #2
 802dca2:	d841      	bhi.n	802dd28 <__ieee754_atan2f+0x114>
 802dca4:	4b26      	ldr	r3, [pc, #152]	@ (802dd40 <__ieee754_atan2f+0x12c>)
 802dca6:	e7f6      	b.n	802dc96 <__ieee754_atan2f+0x82>
 802dca8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802dcac:	d0df      	beq.n	802dc6e <__ieee754_atan2f+0x5a>
 802dcae:	1a5b      	subs	r3, r3, r1
 802dcb0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 802dcb4:	ea4f 51e3 	mov.w	r1, r3, asr #23
 802dcb8:	da1a      	bge.n	802dcf0 <__ieee754_atan2f+0xdc>
 802dcba:	2a00      	cmp	r2, #0
 802dcbc:	da01      	bge.n	802dcc2 <__ieee754_atan2f+0xae>
 802dcbe:	313c      	adds	r1, #60	@ 0x3c
 802dcc0:	db19      	blt.n	802dcf6 <__ieee754_atan2f+0xe2>
 802dcc2:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 802dcc6:	f000 fa49 	bl	802e15c <fabsf>
 802dcca:	f000 f973 	bl	802dfb4 <atanf>
 802dcce:	eef0 7a40 	vmov.f32	s15, s0
 802dcd2:	2c01      	cmp	r4, #1
 802dcd4:	d012      	beq.n	802dcfc <__ieee754_atan2f+0xe8>
 802dcd6:	2c02      	cmp	r4, #2
 802dcd8:	d017      	beq.n	802dd0a <__ieee754_atan2f+0xf6>
 802dcda:	2c00      	cmp	r4, #0
 802dcdc:	d0ad      	beq.n	802dc3a <__ieee754_atan2f+0x26>
 802dcde:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 802dd44 <__ieee754_atan2f+0x130>
 802dce2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802dce6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802dd48 <__ieee754_atan2f+0x134>
 802dcea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dcee:	e7a4      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dcf0:	eddf 7a11 	vldr	s15, [pc, #68]	@ 802dd38 <__ieee754_atan2f+0x124>
 802dcf4:	e7ed      	b.n	802dcd2 <__ieee754_atan2f+0xbe>
 802dcf6:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802dd4c <__ieee754_atan2f+0x138>
 802dcfa:	e7ea      	b.n	802dcd2 <__ieee754_atan2f+0xbe>
 802dcfc:	ee17 3a90 	vmov	r3, s15
 802dd00:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802dd04:	ee07 3a90 	vmov	s15, r3
 802dd08:	e797      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dd0a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 802dd44 <__ieee754_atan2f+0x130>
 802dd0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802dd12:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802dd48 <__ieee754_atan2f+0x134>
 802dd16:	ee77 7a67 	vsub.f32	s15, s14, s15
 802dd1a:	e78e      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dd1c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802dd48 <__ieee754_atan2f+0x134>
 802dd20:	e78b      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dd22:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 802dd50 <__ieee754_atan2f+0x13c>
 802dd26:	e788      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dd28:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802dd4c <__ieee754_atan2f+0x138>
 802dd2c:	e785      	b.n	802dc3a <__ieee754_atan2f+0x26>
 802dd2e:	bf00      	nop
 802dd30:	c0490fdb 	.word	0xc0490fdb
 802dd34:	bfc90fdb 	.word	0xbfc90fdb
 802dd38:	3fc90fdb 	.word	0x3fc90fdb
 802dd3c:	08033990 	.word	0x08033990
 802dd40:	08033984 	.word	0x08033984
 802dd44:	33bbbd2e 	.word	0x33bbbd2e
 802dd48:	40490fdb 	.word	0x40490fdb
 802dd4c:	00000000 	.word	0x00000000
 802dd50:	3f490fdb 	.word	0x3f490fdb

0802dd54 <__ieee754_rem_pio2f>:
 802dd54:	b5f0      	push	{r4, r5, r6, r7, lr}
 802dd56:	ee10 6a10 	vmov	r6, s0
 802dd5a:	4b88      	ldr	r3, [pc, #544]	@ (802df7c <__ieee754_rem_pio2f+0x228>)
 802dd5c:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 802dd60:	429d      	cmp	r5, r3
 802dd62:	b087      	sub	sp, #28
 802dd64:	4604      	mov	r4, r0
 802dd66:	d805      	bhi.n	802dd74 <__ieee754_rem_pio2f+0x20>
 802dd68:	2300      	movs	r3, #0
 802dd6a:	ed80 0a00 	vstr	s0, [r0]
 802dd6e:	6043      	str	r3, [r0, #4]
 802dd70:	2000      	movs	r0, #0
 802dd72:	e022      	b.n	802ddba <__ieee754_rem_pio2f+0x66>
 802dd74:	4b82      	ldr	r3, [pc, #520]	@ (802df80 <__ieee754_rem_pio2f+0x22c>)
 802dd76:	429d      	cmp	r5, r3
 802dd78:	d83a      	bhi.n	802ddf0 <__ieee754_rem_pio2f+0x9c>
 802dd7a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802dd7e:	2e00      	cmp	r6, #0
 802dd80:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 802df84 <__ieee754_rem_pio2f+0x230>
 802dd84:	4a80      	ldr	r2, [pc, #512]	@ (802df88 <__ieee754_rem_pio2f+0x234>)
 802dd86:	f023 030f 	bic.w	r3, r3, #15
 802dd8a:	dd18      	ble.n	802ddbe <__ieee754_rem_pio2f+0x6a>
 802dd8c:	4293      	cmp	r3, r2
 802dd8e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802dd92:	bf09      	itett	eq
 802dd94:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 802df8c <__ieee754_rem_pio2f+0x238>
 802dd98:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 802df90 <__ieee754_rem_pio2f+0x23c>
 802dd9c:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 802df94 <__ieee754_rem_pio2f+0x240>
 802dda0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802dda4:	ee37 7ae6 	vsub.f32	s14, s15, s13
 802dda8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ddac:	ed80 7a00 	vstr	s14, [r0]
 802ddb0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ddb4:	edc0 7a01 	vstr	s15, [r0, #4]
 802ddb8:	2001      	movs	r0, #1
 802ddba:	b007      	add	sp, #28
 802ddbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ddbe:	4293      	cmp	r3, r2
 802ddc0:	ee70 7a07 	vadd.f32	s15, s0, s14
 802ddc4:	bf09      	itett	eq
 802ddc6:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 802df8c <__ieee754_rem_pio2f+0x238>
 802ddca:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 802df90 <__ieee754_rem_pio2f+0x23c>
 802ddce:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 802df94 <__ieee754_rem_pio2f+0x240>
 802ddd2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802ddd6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ddda:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ddde:	ed80 7a00 	vstr	s14, [r0]
 802dde2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802dde6:	edc0 7a01 	vstr	s15, [r0, #4]
 802ddea:	f04f 30ff 	mov.w	r0, #4294967295
 802ddee:	e7e4      	b.n	802ddba <__ieee754_rem_pio2f+0x66>
 802ddf0:	4b69      	ldr	r3, [pc, #420]	@ (802df98 <__ieee754_rem_pio2f+0x244>)
 802ddf2:	429d      	cmp	r5, r3
 802ddf4:	d873      	bhi.n	802dede <__ieee754_rem_pio2f+0x18a>
 802ddf6:	f000 f9b1 	bl	802e15c <fabsf>
 802ddfa:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 802df9c <__ieee754_rem_pio2f+0x248>
 802ddfe:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802de02:	eee0 7a07 	vfma.f32	s15, s0, s14
 802de06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802de0a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802de0e:	ee17 0a90 	vmov	r0, s15
 802de12:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802df84 <__ieee754_rem_pio2f+0x230>
 802de16:	eea7 0a67 	vfms.f32	s0, s14, s15
 802de1a:	281f      	cmp	r0, #31
 802de1c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802df90 <__ieee754_rem_pio2f+0x23c>
 802de20:	ee67 7a27 	vmul.f32	s15, s14, s15
 802de24:	eeb1 6a47 	vneg.f32	s12, s14
 802de28:	ee70 6a67 	vsub.f32	s13, s0, s15
 802de2c:	ee16 1a90 	vmov	r1, s13
 802de30:	dc09      	bgt.n	802de46 <__ieee754_rem_pio2f+0xf2>
 802de32:	4a5b      	ldr	r2, [pc, #364]	@ (802dfa0 <__ieee754_rem_pio2f+0x24c>)
 802de34:	1e47      	subs	r7, r0, #1
 802de36:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802de3a:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 802de3e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 802de42:	4293      	cmp	r3, r2
 802de44:	d107      	bne.n	802de56 <__ieee754_rem_pio2f+0x102>
 802de46:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802de4a:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 802de4e:	2a08      	cmp	r2, #8
 802de50:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802de54:	dc14      	bgt.n	802de80 <__ieee754_rem_pio2f+0x12c>
 802de56:	6021      	str	r1, [r4, #0]
 802de58:	ed94 7a00 	vldr	s14, [r4]
 802de5c:	ee30 0a47 	vsub.f32	s0, s0, s14
 802de60:	2e00      	cmp	r6, #0
 802de62:	ee30 0a67 	vsub.f32	s0, s0, s15
 802de66:	ed84 0a01 	vstr	s0, [r4, #4]
 802de6a:	daa6      	bge.n	802ddba <__ieee754_rem_pio2f+0x66>
 802de6c:	eeb1 7a47 	vneg.f32	s14, s14
 802de70:	eeb1 0a40 	vneg.f32	s0, s0
 802de74:	ed84 7a00 	vstr	s14, [r4]
 802de78:	ed84 0a01 	vstr	s0, [r4, #4]
 802de7c:	4240      	negs	r0, r0
 802de7e:	e79c      	b.n	802ddba <__ieee754_rem_pio2f+0x66>
 802de80:	eddf 5a42 	vldr	s11, [pc, #264]	@ 802df8c <__ieee754_rem_pio2f+0x238>
 802de84:	eef0 6a40 	vmov.f32	s13, s0
 802de88:	eee6 6a25 	vfma.f32	s13, s12, s11
 802de8c:	ee70 7a66 	vsub.f32	s15, s0, s13
 802de90:	eee6 7a25 	vfma.f32	s15, s12, s11
 802de94:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 802df94 <__ieee754_rem_pio2f+0x240>
 802de98:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802de9c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802dea0:	ee15 2a90 	vmov	r2, s11
 802dea4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802dea8:	1a5b      	subs	r3, r3, r1
 802deaa:	2b19      	cmp	r3, #25
 802deac:	dc04      	bgt.n	802deb8 <__ieee754_rem_pio2f+0x164>
 802deae:	edc4 5a00 	vstr	s11, [r4]
 802deb2:	eeb0 0a66 	vmov.f32	s0, s13
 802deb6:	e7cf      	b.n	802de58 <__ieee754_rem_pio2f+0x104>
 802deb8:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 802dfa4 <__ieee754_rem_pio2f+0x250>
 802debc:	eeb0 0a66 	vmov.f32	s0, s13
 802dec0:	eea6 0a25 	vfma.f32	s0, s12, s11
 802dec4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802dec8:	eddf 6a37 	vldr	s13, [pc, #220]	@ 802dfa8 <__ieee754_rem_pio2f+0x254>
 802decc:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ded0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802ded4:	ee30 7a67 	vsub.f32	s14, s0, s15
 802ded8:	ed84 7a00 	vstr	s14, [r4]
 802dedc:	e7bc      	b.n	802de58 <__ieee754_rem_pio2f+0x104>
 802dede:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 802dee2:	d306      	bcc.n	802def2 <__ieee754_rem_pio2f+0x19e>
 802dee4:	ee70 7a40 	vsub.f32	s15, s0, s0
 802dee8:	edc0 7a01 	vstr	s15, [r0, #4]
 802deec:	edc0 7a00 	vstr	s15, [r0]
 802def0:	e73e      	b.n	802dd70 <__ieee754_rem_pio2f+0x1c>
 802def2:	15ea      	asrs	r2, r5, #23
 802def4:	3a86      	subs	r2, #134	@ 0x86
 802def6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802defa:	ee07 3a90 	vmov	s15, r3
 802defe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802df02:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 802dfac <__ieee754_rem_pio2f+0x258>
 802df06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802df0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802df0e:	ed8d 7a03 	vstr	s14, [sp, #12]
 802df12:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802df16:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802df1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802df1e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802df22:	ed8d 7a04 	vstr	s14, [sp, #16]
 802df26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802df2a:	eef5 7a40 	vcmp.f32	s15, #0.0
 802df2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802df32:	edcd 7a05 	vstr	s15, [sp, #20]
 802df36:	d11e      	bne.n	802df76 <__ieee754_rem_pio2f+0x222>
 802df38:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802df3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802df40:	bf0c      	ite	eq
 802df42:	2301      	moveq	r3, #1
 802df44:	2302      	movne	r3, #2
 802df46:	491a      	ldr	r1, [pc, #104]	@ (802dfb0 <__ieee754_rem_pio2f+0x25c>)
 802df48:	9101      	str	r1, [sp, #4]
 802df4a:	2102      	movs	r1, #2
 802df4c:	9100      	str	r1, [sp, #0]
 802df4e:	a803      	add	r0, sp, #12
 802df50:	4621      	mov	r1, r4
 802df52:	f000 f90b 	bl	802e16c <__kernel_rem_pio2f>
 802df56:	2e00      	cmp	r6, #0
 802df58:	f6bf af2f 	bge.w	802ddba <__ieee754_rem_pio2f+0x66>
 802df5c:	edd4 7a00 	vldr	s15, [r4]
 802df60:	eef1 7a67 	vneg.f32	s15, s15
 802df64:	edc4 7a00 	vstr	s15, [r4]
 802df68:	edd4 7a01 	vldr	s15, [r4, #4]
 802df6c:	eef1 7a67 	vneg.f32	s15, s15
 802df70:	edc4 7a01 	vstr	s15, [r4, #4]
 802df74:	e782      	b.n	802de7c <__ieee754_rem_pio2f+0x128>
 802df76:	2303      	movs	r3, #3
 802df78:	e7e5      	b.n	802df46 <__ieee754_rem_pio2f+0x1f2>
 802df7a:	bf00      	nop
 802df7c:	3f490fd8 	.word	0x3f490fd8
 802df80:	4016cbe3 	.word	0x4016cbe3
 802df84:	3fc90f80 	.word	0x3fc90f80
 802df88:	3fc90fd0 	.word	0x3fc90fd0
 802df8c:	37354400 	.word	0x37354400
 802df90:	37354443 	.word	0x37354443
 802df94:	2e85a308 	.word	0x2e85a308
 802df98:	43490f80 	.word	0x43490f80
 802df9c:	3f22f984 	.word	0x3f22f984
 802dfa0:	0803399c 	.word	0x0803399c
 802dfa4:	2e85a300 	.word	0x2e85a300
 802dfa8:	248d3132 	.word	0x248d3132
 802dfac:	43800000 	.word	0x43800000
 802dfb0:	08033a1c 	.word	0x08033a1c

0802dfb4 <atanf>:
 802dfb4:	b538      	push	{r3, r4, r5, lr}
 802dfb6:	ee10 5a10 	vmov	r5, s0
 802dfba:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 802dfbe:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 802dfc2:	eef0 7a40 	vmov.f32	s15, s0
 802dfc6:	d310      	bcc.n	802dfea <atanf+0x36>
 802dfc8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 802dfcc:	d904      	bls.n	802dfd8 <atanf+0x24>
 802dfce:	ee70 7a00 	vadd.f32	s15, s0, s0
 802dfd2:	eeb0 0a67 	vmov.f32	s0, s15
 802dfd6:	bd38      	pop	{r3, r4, r5, pc}
 802dfd8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 802e110 <atanf+0x15c>
 802dfdc:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 802e114 <atanf+0x160>
 802dfe0:	2d00      	cmp	r5, #0
 802dfe2:	bfc8      	it	gt
 802dfe4:	eef0 7a47 	vmovgt.f32	s15, s14
 802dfe8:	e7f3      	b.n	802dfd2 <atanf+0x1e>
 802dfea:	4b4b      	ldr	r3, [pc, #300]	@ (802e118 <atanf+0x164>)
 802dfec:	429c      	cmp	r4, r3
 802dfee:	d810      	bhi.n	802e012 <atanf+0x5e>
 802dff0:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 802dff4:	d20a      	bcs.n	802e00c <atanf+0x58>
 802dff6:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 802e11c <atanf+0x168>
 802dffa:	ee30 7a07 	vadd.f32	s14, s0, s14
 802dffe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802e002:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802e006:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e00a:	dce2      	bgt.n	802dfd2 <atanf+0x1e>
 802e00c:	f04f 33ff 	mov.w	r3, #4294967295
 802e010:	e013      	b.n	802e03a <atanf+0x86>
 802e012:	f000 f8a3 	bl	802e15c <fabsf>
 802e016:	4b42      	ldr	r3, [pc, #264]	@ (802e120 <atanf+0x16c>)
 802e018:	429c      	cmp	r4, r3
 802e01a:	d84f      	bhi.n	802e0bc <atanf+0x108>
 802e01c:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802e020:	429c      	cmp	r4, r3
 802e022:	d841      	bhi.n	802e0a8 <atanf+0xf4>
 802e024:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802e028:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802e02c:	eea0 7a27 	vfma.f32	s14, s0, s15
 802e030:	2300      	movs	r3, #0
 802e032:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e036:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802e03a:	1c5a      	adds	r2, r3, #1
 802e03c:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802e040:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 802e124 <atanf+0x170>
 802e044:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802e128 <atanf+0x174>
 802e048:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 802e12c <atanf+0x178>
 802e04c:	ee66 6a06 	vmul.f32	s13, s12, s12
 802e050:	eee6 5a87 	vfma.f32	s11, s13, s14
 802e054:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 802e130 <atanf+0x17c>
 802e058:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802e05c:	eddf 5a35 	vldr	s11, [pc, #212]	@ 802e134 <atanf+0x180>
 802e060:	eee7 5a26 	vfma.f32	s11, s14, s13
 802e064:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802e138 <atanf+0x184>
 802e068:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802e06c:	eddf 5a33 	vldr	s11, [pc, #204]	@ 802e13c <atanf+0x188>
 802e070:	eee7 5a26 	vfma.f32	s11, s14, s13
 802e074:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 802e140 <atanf+0x18c>
 802e078:	eea6 5a87 	vfma.f32	s10, s13, s14
 802e07c:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802e144 <atanf+0x190>
 802e080:	eea5 7a26 	vfma.f32	s14, s10, s13
 802e084:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802e148 <atanf+0x194>
 802e088:	eea7 5a26 	vfma.f32	s10, s14, s13
 802e08c:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 802e14c <atanf+0x198>
 802e090:	eea5 7a26 	vfma.f32	s14, s10, s13
 802e094:	ee27 7a26 	vmul.f32	s14, s14, s13
 802e098:	eea5 7a86 	vfma.f32	s14, s11, s12
 802e09c:	ee27 7a87 	vmul.f32	s14, s15, s14
 802e0a0:	d121      	bne.n	802e0e6 <atanf+0x132>
 802e0a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e0a6:	e794      	b.n	802dfd2 <atanf+0x1e>
 802e0a8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 802e0ac:	ee30 7a67 	vsub.f32	s14, s0, s15
 802e0b0:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e0b4:	2301      	movs	r3, #1
 802e0b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802e0ba:	e7be      	b.n	802e03a <atanf+0x86>
 802e0bc:	4b24      	ldr	r3, [pc, #144]	@ (802e150 <atanf+0x19c>)
 802e0be:	429c      	cmp	r4, r3
 802e0c0:	d80b      	bhi.n	802e0da <atanf+0x126>
 802e0c2:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 802e0c6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802e0ca:	eea0 7a27 	vfma.f32	s14, s0, s15
 802e0ce:	2302      	movs	r3, #2
 802e0d0:	ee70 6a67 	vsub.f32	s13, s0, s15
 802e0d4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802e0d8:	e7af      	b.n	802e03a <atanf+0x86>
 802e0da:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802e0de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802e0e2:	2303      	movs	r3, #3
 802e0e4:	e7a9      	b.n	802e03a <atanf+0x86>
 802e0e6:	4a1b      	ldr	r2, [pc, #108]	@ (802e154 <atanf+0x1a0>)
 802e0e8:	491b      	ldr	r1, [pc, #108]	@ (802e158 <atanf+0x1a4>)
 802e0ea:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802e0ee:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802e0f2:	edd3 6a00 	vldr	s13, [r3]
 802e0f6:	ee37 7a66 	vsub.f32	s14, s14, s13
 802e0fa:	2d00      	cmp	r5, #0
 802e0fc:	ee37 7a67 	vsub.f32	s14, s14, s15
 802e100:	edd2 7a00 	vldr	s15, [r2]
 802e104:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e108:	bfb8      	it	lt
 802e10a:	eef1 7a67 	vneglt.f32	s15, s15
 802e10e:	e760      	b.n	802dfd2 <atanf+0x1e>
 802e110:	bfc90fdb 	.word	0xbfc90fdb
 802e114:	3fc90fdb 	.word	0x3fc90fdb
 802e118:	3edfffff 	.word	0x3edfffff
 802e11c:	7149f2ca 	.word	0x7149f2ca
 802e120:	3f97ffff 	.word	0x3f97ffff
 802e124:	3c8569d7 	.word	0x3c8569d7
 802e128:	3d4bda59 	.word	0x3d4bda59
 802e12c:	bd6ef16b 	.word	0xbd6ef16b
 802e130:	3d886b35 	.word	0x3d886b35
 802e134:	3dba2e6e 	.word	0x3dba2e6e
 802e138:	3e124925 	.word	0x3e124925
 802e13c:	3eaaaaab 	.word	0x3eaaaaab
 802e140:	bd15a221 	.word	0xbd15a221
 802e144:	bd9d8795 	.word	0xbd9d8795
 802e148:	bde38e38 	.word	0xbde38e38
 802e14c:	be4ccccd 	.word	0xbe4ccccd
 802e150:	401bffff 	.word	0x401bffff
 802e154:	08033d44 	.word	0x08033d44
 802e158:	08033d34 	.word	0x08033d34

0802e15c <fabsf>:
 802e15c:	ee10 3a10 	vmov	r3, s0
 802e160:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802e164:	ee00 3a10 	vmov	s0, r3
 802e168:	4770      	bx	lr
	...

0802e16c <__kernel_rem_pio2f>:
 802e16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e170:	ed2d 8b04 	vpush	{d8-d9}
 802e174:	b0d9      	sub	sp, #356	@ 0x164
 802e176:	4690      	mov	r8, r2
 802e178:	9001      	str	r0, [sp, #4]
 802e17a:	4ab6      	ldr	r2, [pc, #728]	@ (802e454 <__kernel_rem_pio2f+0x2e8>)
 802e17c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802e17e:	f118 0f04 	cmn.w	r8, #4
 802e182:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802e186:	460f      	mov	r7, r1
 802e188:	f103 3bff 	add.w	fp, r3, #4294967295
 802e18c:	db26      	blt.n	802e1dc <__kernel_rem_pio2f+0x70>
 802e18e:	f1b8 0203 	subs.w	r2, r8, #3
 802e192:	bf48      	it	mi
 802e194:	f108 0204 	addmi.w	r2, r8, #4
 802e198:	10d2      	asrs	r2, r2, #3
 802e19a:	1c55      	adds	r5, r2, #1
 802e19c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802e19e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 802e464 <__kernel_rem_pio2f+0x2f8>
 802e1a2:	00e8      	lsls	r0, r5, #3
 802e1a4:	eba2 060b 	sub.w	r6, r2, fp
 802e1a8:	9002      	str	r0, [sp, #8]
 802e1aa:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802e1ae:	eb0a 0c0b 	add.w	ip, sl, fp
 802e1b2:	ac1c      	add	r4, sp, #112	@ 0x70
 802e1b4:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 802e1b8:	2000      	movs	r0, #0
 802e1ba:	4560      	cmp	r0, ip
 802e1bc:	dd10      	ble.n	802e1e0 <__kernel_rem_pio2f+0x74>
 802e1be:	a91c      	add	r1, sp, #112	@ 0x70
 802e1c0:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802e1c4:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 802e1c8:	2600      	movs	r6, #0
 802e1ca:	4556      	cmp	r6, sl
 802e1cc:	dc24      	bgt.n	802e218 <__kernel_rem_pio2f+0xac>
 802e1ce:	f8dd e004 	ldr.w	lr, [sp, #4]
 802e1d2:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 802e464 <__kernel_rem_pio2f+0x2f8>
 802e1d6:	4684      	mov	ip, r0
 802e1d8:	2400      	movs	r4, #0
 802e1da:	e016      	b.n	802e20a <__kernel_rem_pio2f+0x9e>
 802e1dc:	2200      	movs	r2, #0
 802e1de:	e7dc      	b.n	802e19a <__kernel_rem_pio2f+0x2e>
 802e1e0:	42c6      	cmn	r6, r0
 802e1e2:	bf5d      	ittte	pl
 802e1e4:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 802e1e8:	ee07 1a90 	vmovpl	s15, r1
 802e1ec:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802e1f0:	eef0 7a47 	vmovmi.f32	s15, s14
 802e1f4:	ece4 7a01 	vstmia	r4!, {s15}
 802e1f8:	3001      	adds	r0, #1
 802e1fa:	e7de      	b.n	802e1ba <__kernel_rem_pio2f+0x4e>
 802e1fc:	ecfe 6a01 	vldmia	lr!, {s13}
 802e200:	ed3c 7a01 	vldmdb	ip!, {s14}
 802e204:	eee6 7a87 	vfma.f32	s15, s13, s14
 802e208:	3401      	adds	r4, #1
 802e20a:	455c      	cmp	r4, fp
 802e20c:	ddf6      	ble.n	802e1fc <__kernel_rem_pio2f+0x90>
 802e20e:	ece9 7a01 	vstmia	r9!, {s15}
 802e212:	3601      	adds	r6, #1
 802e214:	3004      	adds	r0, #4
 802e216:	e7d8      	b.n	802e1ca <__kernel_rem_pio2f+0x5e>
 802e218:	a908      	add	r1, sp, #32
 802e21a:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802e21e:	9104      	str	r1, [sp, #16]
 802e220:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802e222:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 802e460 <__kernel_rem_pio2f+0x2f4>
 802e226:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802e45c <__kernel_rem_pio2f+0x2f0>
 802e22a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802e22e:	9203      	str	r2, [sp, #12]
 802e230:	4654      	mov	r4, sl
 802e232:	00a2      	lsls	r2, r4, #2
 802e234:	9205      	str	r2, [sp, #20]
 802e236:	aa58      	add	r2, sp, #352	@ 0x160
 802e238:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802e23c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 802e240:	a944      	add	r1, sp, #272	@ 0x110
 802e242:	aa08      	add	r2, sp, #32
 802e244:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802e248:	4694      	mov	ip, r2
 802e24a:	4626      	mov	r6, r4
 802e24c:	2e00      	cmp	r6, #0
 802e24e:	dc4c      	bgt.n	802e2ea <__kernel_rem_pio2f+0x17e>
 802e250:	4628      	mov	r0, r5
 802e252:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802e256:	f000 f9f1 	bl	802e63c <scalbnf>
 802e25a:	eeb0 8a40 	vmov.f32	s16, s0
 802e25e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802e262:	ee28 0a00 	vmul.f32	s0, s16, s0
 802e266:	f000 fa4f 	bl	802e708 <floorf>
 802e26a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802e26e:	eea0 8a67 	vfms.f32	s16, s0, s15
 802e272:	2d00      	cmp	r5, #0
 802e274:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802e278:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802e27c:	ee17 9a90 	vmov	r9, s15
 802e280:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e284:	ee38 8a67 	vsub.f32	s16, s16, s15
 802e288:	dd41      	ble.n	802e30e <__kernel_rem_pio2f+0x1a2>
 802e28a:	f104 3cff 	add.w	ip, r4, #4294967295
 802e28e:	a908      	add	r1, sp, #32
 802e290:	f1c5 0e08 	rsb	lr, r5, #8
 802e294:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802e298:	fa46 f00e 	asr.w	r0, r6, lr
 802e29c:	4481      	add	r9, r0
 802e29e:	fa00 f00e 	lsl.w	r0, r0, lr
 802e2a2:	1a36      	subs	r6, r6, r0
 802e2a4:	f1c5 0007 	rsb	r0, r5, #7
 802e2a8:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 802e2ac:	4106      	asrs	r6, r0
 802e2ae:	2e00      	cmp	r6, #0
 802e2b0:	dd3c      	ble.n	802e32c <__kernel_rem_pio2f+0x1c0>
 802e2b2:	f04f 0e00 	mov.w	lr, #0
 802e2b6:	f109 0901 	add.w	r9, r9, #1
 802e2ba:	4670      	mov	r0, lr
 802e2bc:	4574      	cmp	r4, lr
 802e2be:	dc68      	bgt.n	802e392 <__kernel_rem_pio2f+0x226>
 802e2c0:	2d00      	cmp	r5, #0
 802e2c2:	dd03      	ble.n	802e2cc <__kernel_rem_pio2f+0x160>
 802e2c4:	2d01      	cmp	r5, #1
 802e2c6:	d074      	beq.n	802e3b2 <__kernel_rem_pio2f+0x246>
 802e2c8:	2d02      	cmp	r5, #2
 802e2ca:	d07d      	beq.n	802e3c8 <__kernel_rem_pio2f+0x25c>
 802e2cc:	2e02      	cmp	r6, #2
 802e2ce:	d12d      	bne.n	802e32c <__kernel_rem_pio2f+0x1c0>
 802e2d0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802e2d4:	ee30 8a48 	vsub.f32	s16, s0, s16
 802e2d8:	b340      	cbz	r0, 802e32c <__kernel_rem_pio2f+0x1c0>
 802e2da:	4628      	mov	r0, r5
 802e2dc:	9306      	str	r3, [sp, #24]
 802e2de:	f000 f9ad 	bl	802e63c <scalbnf>
 802e2e2:	9b06      	ldr	r3, [sp, #24]
 802e2e4:	ee38 8a40 	vsub.f32	s16, s16, s0
 802e2e8:	e020      	b.n	802e32c <__kernel_rem_pio2f+0x1c0>
 802e2ea:	ee60 7a28 	vmul.f32	s15, s0, s17
 802e2ee:	3e01      	subs	r6, #1
 802e2f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802e2f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e2f8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802e2fc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802e300:	ecac 0a01 	vstmia	ip!, {s0}
 802e304:	ed30 0a01 	vldmdb	r0!, {s0}
 802e308:	ee37 0a80 	vadd.f32	s0, s15, s0
 802e30c:	e79e      	b.n	802e24c <__kernel_rem_pio2f+0xe0>
 802e30e:	d105      	bne.n	802e31c <__kernel_rem_pio2f+0x1b0>
 802e310:	1e60      	subs	r0, r4, #1
 802e312:	a908      	add	r1, sp, #32
 802e314:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 802e318:	11f6      	asrs	r6, r6, #7
 802e31a:	e7c8      	b.n	802e2ae <__kernel_rem_pio2f+0x142>
 802e31c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802e320:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802e324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e328:	da31      	bge.n	802e38e <__kernel_rem_pio2f+0x222>
 802e32a:	2600      	movs	r6, #0
 802e32c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802e330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e334:	f040 8098 	bne.w	802e468 <__kernel_rem_pio2f+0x2fc>
 802e338:	1e60      	subs	r0, r4, #1
 802e33a:	2200      	movs	r2, #0
 802e33c:	4550      	cmp	r0, sl
 802e33e:	da4b      	bge.n	802e3d8 <__kernel_rem_pio2f+0x26c>
 802e340:	2a00      	cmp	r2, #0
 802e342:	d065      	beq.n	802e410 <__kernel_rem_pio2f+0x2a4>
 802e344:	3c01      	subs	r4, #1
 802e346:	ab08      	add	r3, sp, #32
 802e348:	3d08      	subs	r5, #8
 802e34a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802e34e:	2b00      	cmp	r3, #0
 802e350:	d0f8      	beq.n	802e344 <__kernel_rem_pio2f+0x1d8>
 802e352:	4628      	mov	r0, r5
 802e354:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802e358:	f000 f970 	bl	802e63c <scalbnf>
 802e35c:	1c63      	adds	r3, r4, #1
 802e35e:	aa44      	add	r2, sp, #272	@ 0x110
 802e360:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 802e460 <__kernel_rem_pio2f+0x2f4>
 802e364:	0099      	lsls	r1, r3, #2
 802e366:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802e36a:	4623      	mov	r3, r4
 802e36c:	2b00      	cmp	r3, #0
 802e36e:	f280 80a9 	bge.w	802e4c4 <__kernel_rem_pio2f+0x358>
 802e372:	4623      	mov	r3, r4
 802e374:	2b00      	cmp	r3, #0
 802e376:	f2c0 80c7 	blt.w	802e508 <__kernel_rem_pio2f+0x39c>
 802e37a:	aa44      	add	r2, sp, #272	@ 0x110
 802e37c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802e380:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 802e458 <__kernel_rem_pio2f+0x2ec>
 802e384:	eddf 7a37 	vldr	s15, [pc, #220]	@ 802e464 <__kernel_rem_pio2f+0x2f8>
 802e388:	2000      	movs	r0, #0
 802e38a:	1ae2      	subs	r2, r4, r3
 802e38c:	e0b1      	b.n	802e4f2 <__kernel_rem_pio2f+0x386>
 802e38e:	2602      	movs	r6, #2
 802e390:	e78f      	b.n	802e2b2 <__kernel_rem_pio2f+0x146>
 802e392:	f852 1b04 	ldr.w	r1, [r2], #4
 802e396:	b948      	cbnz	r0, 802e3ac <__kernel_rem_pio2f+0x240>
 802e398:	b121      	cbz	r1, 802e3a4 <__kernel_rem_pio2f+0x238>
 802e39a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802e39e:	f842 1c04 	str.w	r1, [r2, #-4]
 802e3a2:	2101      	movs	r1, #1
 802e3a4:	f10e 0e01 	add.w	lr, lr, #1
 802e3a8:	4608      	mov	r0, r1
 802e3aa:	e787      	b.n	802e2bc <__kernel_rem_pio2f+0x150>
 802e3ac:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 802e3b0:	e7f5      	b.n	802e39e <__kernel_rem_pio2f+0x232>
 802e3b2:	f104 3cff 	add.w	ip, r4, #4294967295
 802e3b6:	aa08      	add	r2, sp, #32
 802e3b8:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e3bc:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 802e3c0:	a908      	add	r1, sp, #32
 802e3c2:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 802e3c6:	e781      	b.n	802e2cc <__kernel_rem_pio2f+0x160>
 802e3c8:	f104 3cff 	add.w	ip, r4, #4294967295
 802e3cc:	aa08      	add	r2, sp, #32
 802e3ce:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802e3d2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802e3d6:	e7f3      	b.n	802e3c0 <__kernel_rem_pio2f+0x254>
 802e3d8:	a908      	add	r1, sp, #32
 802e3da:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802e3de:	3801      	subs	r0, #1
 802e3e0:	430a      	orrs	r2, r1
 802e3e2:	e7ab      	b.n	802e33c <__kernel_rem_pio2f+0x1d0>
 802e3e4:	3201      	adds	r2, #1
 802e3e6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 802e3ea:	2e00      	cmp	r6, #0
 802e3ec:	d0fa      	beq.n	802e3e4 <__kernel_rem_pio2f+0x278>
 802e3ee:	9905      	ldr	r1, [sp, #20]
 802e3f0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 802e3f4:	eb0d 0001 	add.w	r0, sp, r1
 802e3f8:	18e6      	adds	r6, r4, r3
 802e3fa:	a91c      	add	r1, sp, #112	@ 0x70
 802e3fc:	f104 0c01 	add.w	ip, r4, #1
 802e400:	384c      	subs	r0, #76	@ 0x4c
 802e402:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 802e406:	4422      	add	r2, r4
 802e408:	4562      	cmp	r2, ip
 802e40a:	da04      	bge.n	802e416 <__kernel_rem_pio2f+0x2aa>
 802e40c:	4614      	mov	r4, r2
 802e40e:	e710      	b.n	802e232 <__kernel_rem_pio2f+0xc6>
 802e410:	9804      	ldr	r0, [sp, #16]
 802e412:	2201      	movs	r2, #1
 802e414:	e7e7      	b.n	802e3e6 <__kernel_rem_pio2f+0x27a>
 802e416:	9903      	ldr	r1, [sp, #12]
 802e418:	f8dd e004 	ldr.w	lr, [sp, #4]
 802e41c:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802e420:	9105      	str	r1, [sp, #20]
 802e422:	ee07 1a90 	vmov	s15, r1
 802e426:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e42a:	2400      	movs	r4, #0
 802e42c:	ece6 7a01 	vstmia	r6!, {s15}
 802e430:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802e464 <__kernel_rem_pio2f+0x2f8>
 802e434:	46b1      	mov	r9, r6
 802e436:	455c      	cmp	r4, fp
 802e438:	dd04      	ble.n	802e444 <__kernel_rem_pio2f+0x2d8>
 802e43a:	ece0 7a01 	vstmia	r0!, {s15}
 802e43e:	f10c 0c01 	add.w	ip, ip, #1
 802e442:	e7e1      	b.n	802e408 <__kernel_rem_pio2f+0x29c>
 802e444:	ecfe 6a01 	vldmia	lr!, {s13}
 802e448:	ed39 7a01 	vldmdb	r9!, {s14}
 802e44c:	3401      	adds	r4, #1
 802e44e:	eee6 7a87 	vfma.f32	s15, s13, s14
 802e452:	e7f0      	b.n	802e436 <__kernel_rem_pio2f+0x2ca>
 802e454:	08033d80 	.word	0x08033d80
 802e458:	08033d54 	.word	0x08033d54
 802e45c:	43800000 	.word	0x43800000
 802e460:	3b800000 	.word	0x3b800000
 802e464:	00000000 	.word	0x00000000
 802e468:	9b02      	ldr	r3, [sp, #8]
 802e46a:	eeb0 0a48 	vmov.f32	s0, s16
 802e46e:	eba3 0008 	sub.w	r0, r3, r8
 802e472:	f000 f8e3 	bl	802e63c <scalbnf>
 802e476:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802e45c <__kernel_rem_pio2f+0x2f0>
 802e47a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802e47e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e482:	db19      	blt.n	802e4b8 <__kernel_rem_pio2f+0x34c>
 802e484:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 802e460 <__kernel_rem_pio2f+0x2f4>
 802e488:	ee60 7a27 	vmul.f32	s15, s0, s15
 802e48c:	aa08      	add	r2, sp, #32
 802e48e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802e492:	3508      	adds	r5, #8
 802e494:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e498:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802e49c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802e4a0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802e4a4:	ee10 3a10 	vmov	r3, s0
 802e4a8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802e4ac:	ee17 3a90 	vmov	r3, s15
 802e4b0:	3401      	adds	r4, #1
 802e4b2:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802e4b6:	e74c      	b.n	802e352 <__kernel_rem_pio2f+0x1e6>
 802e4b8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802e4bc:	aa08      	add	r2, sp, #32
 802e4be:	ee10 3a10 	vmov	r3, s0
 802e4c2:	e7f6      	b.n	802e4b2 <__kernel_rem_pio2f+0x346>
 802e4c4:	a808      	add	r0, sp, #32
 802e4c6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802e4ca:	9001      	str	r0, [sp, #4]
 802e4cc:	ee07 0a90 	vmov	s15, r0
 802e4d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802e4d4:	3b01      	subs	r3, #1
 802e4d6:	ee67 7a80 	vmul.f32	s15, s15, s0
 802e4da:	ee20 0a07 	vmul.f32	s0, s0, s14
 802e4de:	ed62 7a01 	vstmdb	r2!, {s15}
 802e4e2:	e743      	b.n	802e36c <__kernel_rem_pio2f+0x200>
 802e4e4:	ecfc 6a01 	vldmia	ip!, {s13}
 802e4e8:	ecb5 7a01 	vldmia	r5!, {s14}
 802e4ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 802e4f0:	3001      	adds	r0, #1
 802e4f2:	4550      	cmp	r0, sl
 802e4f4:	dc01      	bgt.n	802e4fa <__kernel_rem_pio2f+0x38e>
 802e4f6:	4290      	cmp	r0, r2
 802e4f8:	ddf4      	ble.n	802e4e4 <__kernel_rem_pio2f+0x378>
 802e4fa:	a858      	add	r0, sp, #352	@ 0x160
 802e4fc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802e500:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 802e504:	3b01      	subs	r3, #1
 802e506:	e735      	b.n	802e374 <__kernel_rem_pio2f+0x208>
 802e508:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802e50a:	2b02      	cmp	r3, #2
 802e50c:	dc09      	bgt.n	802e522 <__kernel_rem_pio2f+0x3b6>
 802e50e:	2b00      	cmp	r3, #0
 802e510:	dc27      	bgt.n	802e562 <__kernel_rem_pio2f+0x3f6>
 802e512:	d040      	beq.n	802e596 <__kernel_rem_pio2f+0x42a>
 802e514:	f009 0007 	and.w	r0, r9, #7
 802e518:	b059      	add	sp, #356	@ 0x164
 802e51a:	ecbd 8b04 	vpop	{d8-d9}
 802e51e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e522:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802e524:	2b03      	cmp	r3, #3
 802e526:	d1f5      	bne.n	802e514 <__kernel_rem_pio2f+0x3a8>
 802e528:	aa30      	add	r2, sp, #192	@ 0xc0
 802e52a:	1f0b      	subs	r3, r1, #4
 802e52c:	4413      	add	r3, r2
 802e52e:	461a      	mov	r2, r3
 802e530:	4620      	mov	r0, r4
 802e532:	2800      	cmp	r0, #0
 802e534:	dc50      	bgt.n	802e5d8 <__kernel_rem_pio2f+0x46c>
 802e536:	4622      	mov	r2, r4
 802e538:	2a01      	cmp	r2, #1
 802e53a:	dc5d      	bgt.n	802e5f8 <__kernel_rem_pio2f+0x48c>
 802e53c:	ab30      	add	r3, sp, #192	@ 0xc0
 802e53e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 802e464 <__kernel_rem_pio2f+0x2f8>
 802e542:	440b      	add	r3, r1
 802e544:	2c01      	cmp	r4, #1
 802e546:	dc67      	bgt.n	802e618 <__kernel_rem_pio2f+0x4ac>
 802e548:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802e54c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 802e550:	2e00      	cmp	r6, #0
 802e552:	d167      	bne.n	802e624 <__kernel_rem_pio2f+0x4b8>
 802e554:	edc7 6a00 	vstr	s13, [r7]
 802e558:	ed87 7a01 	vstr	s14, [r7, #4]
 802e55c:	edc7 7a02 	vstr	s15, [r7, #8]
 802e560:	e7d8      	b.n	802e514 <__kernel_rem_pio2f+0x3a8>
 802e562:	ab30      	add	r3, sp, #192	@ 0xc0
 802e564:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 802e464 <__kernel_rem_pio2f+0x2f8>
 802e568:	440b      	add	r3, r1
 802e56a:	4622      	mov	r2, r4
 802e56c:	2a00      	cmp	r2, #0
 802e56e:	da24      	bge.n	802e5ba <__kernel_rem_pio2f+0x44e>
 802e570:	b34e      	cbz	r6, 802e5c6 <__kernel_rem_pio2f+0x45a>
 802e572:	eef1 7a47 	vneg.f32	s15, s14
 802e576:	edc7 7a00 	vstr	s15, [r7]
 802e57a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802e57e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e582:	aa31      	add	r2, sp, #196	@ 0xc4
 802e584:	2301      	movs	r3, #1
 802e586:	429c      	cmp	r4, r3
 802e588:	da20      	bge.n	802e5cc <__kernel_rem_pio2f+0x460>
 802e58a:	b10e      	cbz	r6, 802e590 <__kernel_rem_pio2f+0x424>
 802e58c:	eef1 7a67 	vneg.f32	s15, s15
 802e590:	edc7 7a01 	vstr	s15, [r7, #4]
 802e594:	e7be      	b.n	802e514 <__kernel_rem_pio2f+0x3a8>
 802e596:	ab30      	add	r3, sp, #192	@ 0xc0
 802e598:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 802e464 <__kernel_rem_pio2f+0x2f8>
 802e59c:	440b      	add	r3, r1
 802e59e:	2c00      	cmp	r4, #0
 802e5a0:	da05      	bge.n	802e5ae <__kernel_rem_pio2f+0x442>
 802e5a2:	b10e      	cbz	r6, 802e5a8 <__kernel_rem_pio2f+0x43c>
 802e5a4:	eef1 7a67 	vneg.f32	s15, s15
 802e5a8:	edc7 7a00 	vstr	s15, [r7]
 802e5ac:	e7b2      	b.n	802e514 <__kernel_rem_pio2f+0x3a8>
 802e5ae:	ed33 7a01 	vldmdb	r3!, {s14}
 802e5b2:	3c01      	subs	r4, #1
 802e5b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 802e5b8:	e7f1      	b.n	802e59e <__kernel_rem_pio2f+0x432>
 802e5ba:	ed73 7a01 	vldmdb	r3!, {s15}
 802e5be:	3a01      	subs	r2, #1
 802e5c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 802e5c4:	e7d2      	b.n	802e56c <__kernel_rem_pio2f+0x400>
 802e5c6:	eef0 7a47 	vmov.f32	s15, s14
 802e5ca:	e7d4      	b.n	802e576 <__kernel_rem_pio2f+0x40a>
 802e5cc:	ecb2 7a01 	vldmia	r2!, {s14}
 802e5d0:	3301      	adds	r3, #1
 802e5d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802e5d6:	e7d6      	b.n	802e586 <__kernel_rem_pio2f+0x41a>
 802e5d8:	ed72 7a01 	vldmdb	r2!, {s15}
 802e5dc:	edd2 6a01 	vldr	s13, [r2, #4]
 802e5e0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802e5e4:	3801      	subs	r0, #1
 802e5e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e5ea:	ed82 7a00 	vstr	s14, [r2]
 802e5ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802e5f2:	edc2 7a01 	vstr	s15, [r2, #4]
 802e5f6:	e79c      	b.n	802e532 <__kernel_rem_pio2f+0x3c6>
 802e5f8:	ed73 7a01 	vldmdb	r3!, {s15}
 802e5fc:	edd3 6a01 	vldr	s13, [r3, #4]
 802e600:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802e604:	3a01      	subs	r2, #1
 802e606:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802e60a:	ed83 7a00 	vstr	s14, [r3]
 802e60e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802e612:	edc3 7a01 	vstr	s15, [r3, #4]
 802e616:	e78f      	b.n	802e538 <__kernel_rem_pio2f+0x3cc>
 802e618:	ed33 7a01 	vldmdb	r3!, {s14}
 802e61c:	3c01      	subs	r4, #1
 802e61e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802e622:	e78f      	b.n	802e544 <__kernel_rem_pio2f+0x3d8>
 802e624:	eef1 6a66 	vneg.f32	s13, s13
 802e628:	eeb1 7a47 	vneg.f32	s14, s14
 802e62c:	edc7 6a00 	vstr	s13, [r7]
 802e630:	ed87 7a01 	vstr	s14, [r7, #4]
 802e634:	eef1 7a67 	vneg.f32	s15, s15
 802e638:	e790      	b.n	802e55c <__kernel_rem_pio2f+0x3f0>
 802e63a:	bf00      	nop

0802e63c <scalbnf>:
 802e63c:	ee10 3a10 	vmov	r3, s0
 802e640:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 802e644:	d02b      	beq.n	802e69e <scalbnf+0x62>
 802e646:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802e64a:	d302      	bcc.n	802e652 <scalbnf+0x16>
 802e64c:	ee30 0a00 	vadd.f32	s0, s0, s0
 802e650:	4770      	bx	lr
 802e652:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802e656:	d123      	bne.n	802e6a0 <scalbnf+0x64>
 802e658:	4b24      	ldr	r3, [pc, #144]	@ (802e6ec <scalbnf+0xb0>)
 802e65a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802e6f0 <scalbnf+0xb4>
 802e65e:	4298      	cmp	r0, r3
 802e660:	ee20 0a27 	vmul.f32	s0, s0, s15
 802e664:	db17      	blt.n	802e696 <scalbnf+0x5a>
 802e666:	ee10 3a10 	vmov	r3, s0
 802e66a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802e66e:	3a19      	subs	r2, #25
 802e670:	f24c 3150 	movw	r1, #50000	@ 0xc350
 802e674:	4288      	cmp	r0, r1
 802e676:	dd15      	ble.n	802e6a4 <scalbnf+0x68>
 802e678:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 802e6f4 <scalbnf+0xb8>
 802e67c:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802e6f8 <scalbnf+0xbc>
 802e680:	ee10 3a10 	vmov	r3, s0
 802e684:	eeb0 7a67 	vmov.f32	s14, s15
 802e688:	2b00      	cmp	r3, #0
 802e68a:	bfb8      	it	lt
 802e68c:	eef0 7a66 	vmovlt.f32	s15, s13
 802e690:	ee27 0a87 	vmul.f32	s0, s15, s14
 802e694:	4770      	bx	lr
 802e696:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802e6fc <scalbnf+0xc0>
 802e69a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802e69e:	4770      	bx	lr
 802e6a0:	0dd2      	lsrs	r2, r2, #23
 802e6a2:	e7e5      	b.n	802e670 <scalbnf+0x34>
 802e6a4:	4410      	add	r0, r2
 802e6a6:	28fe      	cmp	r0, #254	@ 0xfe
 802e6a8:	dce6      	bgt.n	802e678 <scalbnf+0x3c>
 802e6aa:	2800      	cmp	r0, #0
 802e6ac:	dd06      	ble.n	802e6bc <scalbnf+0x80>
 802e6ae:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802e6b2:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802e6b6:	ee00 3a10 	vmov	s0, r3
 802e6ba:	4770      	bx	lr
 802e6bc:	f110 0f16 	cmn.w	r0, #22
 802e6c0:	da09      	bge.n	802e6d6 <scalbnf+0x9a>
 802e6c2:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802e6fc <scalbnf+0xc0>
 802e6c6:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802e700 <scalbnf+0xc4>
 802e6ca:	ee10 3a10 	vmov	r3, s0
 802e6ce:	eeb0 7a67 	vmov.f32	s14, s15
 802e6d2:	2b00      	cmp	r3, #0
 802e6d4:	e7d9      	b.n	802e68a <scalbnf+0x4e>
 802e6d6:	3019      	adds	r0, #25
 802e6d8:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802e6dc:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802e6e0:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 802e704 <scalbnf+0xc8>
 802e6e4:	ee07 3a90 	vmov	s15, r3
 802e6e8:	e7d7      	b.n	802e69a <scalbnf+0x5e>
 802e6ea:	bf00      	nop
 802e6ec:	ffff3cb0 	.word	0xffff3cb0
 802e6f0:	4c000000 	.word	0x4c000000
 802e6f4:	7149f2ca 	.word	0x7149f2ca
 802e6f8:	f149f2ca 	.word	0xf149f2ca
 802e6fc:	0da24260 	.word	0x0da24260
 802e700:	8da24260 	.word	0x8da24260
 802e704:	33000000 	.word	0x33000000

0802e708 <floorf>:
 802e708:	ee10 3a10 	vmov	r3, s0
 802e70c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802e710:	3a7f      	subs	r2, #127	@ 0x7f
 802e712:	2a16      	cmp	r2, #22
 802e714:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802e718:	dc2b      	bgt.n	802e772 <floorf+0x6a>
 802e71a:	2a00      	cmp	r2, #0
 802e71c:	da12      	bge.n	802e744 <floorf+0x3c>
 802e71e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802e784 <floorf+0x7c>
 802e722:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e726:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802e72a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e72e:	dd06      	ble.n	802e73e <floorf+0x36>
 802e730:	2b00      	cmp	r3, #0
 802e732:	da24      	bge.n	802e77e <floorf+0x76>
 802e734:	2900      	cmp	r1, #0
 802e736:	4b14      	ldr	r3, [pc, #80]	@ (802e788 <floorf+0x80>)
 802e738:	bf08      	it	eq
 802e73a:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802e73e:	ee00 3a10 	vmov	s0, r3
 802e742:	4770      	bx	lr
 802e744:	4911      	ldr	r1, [pc, #68]	@ (802e78c <floorf+0x84>)
 802e746:	4111      	asrs	r1, r2
 802e748:	420b      	tst	r3, r1
 802e74a:	d0fa      	beq.n	802e742 <floorf+0x3a>
 802e74c:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 802e784 <floorf+0x7c>
 802e750:	ee30 0a27 	vadd.f32	s0, s0, s15
 802e754:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802e758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802e75c:	ddef      	ble.n	802e73e <floorf+0x36>
 802e75e:	2b00      	cmp	r3, #0
 802e760:	bfbe      	ittt	lt
 802e762:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802e766:	fa40 f202 	asrlt.w	r2, r0, r2
 802e76a:	189b      	addlt	r3, r3, r2
 802e76c:	ea23 0301 	bic.w	r3, r3, r1
 802e770:	e7e5      	b.n	802e73e <floorf+0x36>
 802e772:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802e776:	d3e4      	bcc.n	802e742 <floorf+0x3a>
 802e778:	ee30 0a00 	vadd.f32	s0, s0, s0
 802e77c:	4770      	bx	lr
 802e77e:	2300      	movs	r3, #0
 802e780:	e7dd      	b.n	802e73e <floorf+0x36>
 802e782:	bf00      	nop
 802e784:	7149f2ca 	.word	0x7149f2ca
 802e788:	bf800000 	.word	0xbf800000
 802e78c:	007fffff 	.word	0x007fffff

0802e790 <abort>:
 802e790:	b508      	push	{r3, lr}
 802e792:	2006      	movs	r0, #6
 802e794:	f000 fa3c 	bl	802ec10 <raise>
 802e798:	2001      	movs	r0, #1
 802e79a:	f7d4 f9e9 	bl	8002b70 <_exit>
	...

0802e7a0 <__assert_func>:
 802e7a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802e7a2:	4614      	mov	r4, r2
 802e7a4:	461a      	mov	r2, r3
 802e7a6:	4b09      	ldr	r3, [pc, #36]	@ (802e7cc <__assert_func+0x2c>)
 802e7a8:	681b      	ldr	r3, [r3, #0]
 802e7aa:	4605      	mov	r5, r0
 802e7ac:	68d8      	ldr	r0, [r3, #12]
 802e7ae:	b14c      	cbz	r4, 802e7c4 <__assert_func+0x24>
 802e7b0:	4b07      	ldr	r3, [pc, #28]	@ (802e7d0 <__assert_func+0x30>)
 802e7b2:	9100      	str	r1, [sp, #0]
 802e7b4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802e7b8:	4906      	ldr	r1, [pc, #24]	@ (802e7d4 <__assert_func+0x34>)
 802e7ba:	462b      	mov	r3, r5
 802e7bc:	f000 f984 	bl	802eac8 <fiprintf>
 802e7c0:	f7ff ffe6 	bl	802e790 <abort>
 802e7c4:	4b04      	ldr	r3, [pc, #16]	@ (802e7d8 <__assert_func+0x38>)
 802e7c6:	461c      	mov	r4, r3
 802e7c8:	e7f3      	b.n	802e7b2 <__assert_func+0x12>
 802e7ca:	bf00      	nop
 802e7cc:	2000011c 	.word	0x2000011c
 802e7d0:	08030d78 	.word	0x08030d78
 802e7d4:	08030d85 	.word	0x08030d85
 802e7d8:	08030db3 	.word	0x08030db3

0802e7dc <atexit>:
 802e7dc:	2300      	movs	r3, #0
 802e7de:	4601      	mov	r1, r0
 802e7e0:	461a      	mov	r2, r3
 802e7e2:	4618      	mov	r0, r3
 802e7e4:	f000 bac2 	b.w	802ed6c <__register_exitproc>

0802e7e8 <malloc>:
 802e7e8:	4b02      	ldr	r3, [pc, #8]	@ (802e7f4 <malloc+0xc>)
 802e7ea:	4601      	mov	r1, r0
 802e7ec:	6818      	ldr	r0, [r3, #0]
 802e7ee:	f000 b82d 	b.w	802e84c <_malloc_r>
 802e7f2:	bf00      	nop
 802e7f4:	2000011c 	.word	0x2000011c

0802e7f8 <free>:
 802e7f8:	4b02      	ldr	r3, [pc, #8]	@ (802e804 <free+0xc>)
 802e7fa:	4601      	mov	r1, r0
 802e7fc:	6818      	ldr	r0, [r3, #0]
 802e7fe:	f000 bb11 	b.w	802ee24 <_free_r>
 802e802:	bf00      	nop
 802e804:	2000011c 	.word	0x2000011c

0802e808 <sbrk_aligned>:
 802e808:	b570      	push	{r4, r5, r6, lr}
 802e80a:	4e0f      	ldr	r6, [pc, #60]	@ (802e848 <sbrk_aligned+0x40>)
 802e80c:	460c      	mov	r4, r1
 802e80e:	6831      	ldr	r1, [r6, #0]
 802e810:	4605      	mov	r5, r0
 802e812:	b911      	cbnz	r1, 802e81a <sbrk_aligned+0x12>
 802e814:	f000 fa4c 	bl	802ecb0 <_sbrk_r>
 802e818:	6030      	str	r0, [r6, #0]
 802e81a:	4621      	mov	r1, r4
 802e81c:	4628      	mov	r0, r5
 802e81e:	f000 fa47 	bl	802ecb0 <_sbrk_r>
 802e822:	1c43      	adds	r3, r0, #1
 802e824:	d103      	bne.n	802e82e <sbrk_aligned+0x26>
 802e826:	f04f 34ff 	mov.w	r4, #4294967295
 802e82a:	4620      	mov	r0, r4
 802e82c:	bd70      	pop	{r4, r5, r6, pc}
 802e82e:	1cc4      	adds	r4, r0, #3
 802e830:	f024 0403 	bic.w	r4, r4, #3
 802e834:	42a0      	cmp	r0, r4
 802e836:	d0f8      	beq.n	802e82a <sbrk_aligned+0x22>
 802e838:	1a21      	subs	r1, r4, r0
 802e83a:	4628      	mov	r0, r5
 802e83c:	f000 fa38 	bl	802ecb0 <_sbrk_r>
 802e840:	3001      	adds	r0, #1
 802e842:	d1f2      	bne.n	802e82a <sbrk_aligned+0x22>
 802e844:	e7ef      	b.n	802e826 <sbrk_aligned+0x1e>
 802e846:	bf00      	nop
 802e848:	20014340 	.word	0x20014340

0802e84c <_malloc_r>:
 802e84c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e850:	1ccd      	adds	r5, r1, #3
 802e852:	f025 0503 	bic.w	r5, r5, #3
 802e856:	3508      	adds	r5, #8
 802e858:	2d0c      	cmp	r5, #12
 802e85a:	bf38      	it	cc
 802e85c:	250c      	movcc	r5, #12
 802e85e:	2d00      	cmp	r5, #0
 802e860:	4606      	mov	r6, r0
 802e862:	db01      	blt.n	802e868 <_malloc_r+0x1c>
 802e864:	42a9      	cmp	r1, r5
 802e866:	d904      	bls.n	802e872 <_malloc_r+0x26>
 802e868:	230c      	movs	r3, #12
 802e86a:	6033      	str	r3, [r6, #0]
 802e86c:	2000      	movs	r0, #0
 802e86e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e872:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802e948 <_malloc_r+0xfc>
 802e876:	f000 f869 	bl	802e94c <__malloc_lock>
 802e87a:	f8d8 3000 	ldr.w	r3, [r8]
 802e87e:	461c      	mov	r4, r3
 802e880:	bb44      	cbnz	r4, 802e8d4 <_malloc_r+0x88>
 802e882:	4629      	mov	r1, r5
 802e884:	4630      	mov	r0, r6
 802e886:	f7ff ffbf 	bl	802e808 <sbrk_aligned>
 802e88a:	1c43      	adds	r3, r0, #1
 802e88c:	4604      	mov	r4, r0
 802e88e:	d158      	bne.n	802e942 <_malloc_r+0xf6>
 802e890:	f8d8 4000 	ldr.w	r4, [r8]
 802e894:	4627      	mov	r7, r4
 802e896:	2f00      	cmp	r7, #0
 802e898:	d143      	bne.n	802e922 <_malloc_r+0xd6>
 802e89a:	2c00      	cmp	r4, #0
 802e89c:	d04b      	beq.n	802e936 <_malloc_r+0xea>
 802e89e:	6823      	ldr	r3, [r4, #0]
 802e8a0:	4639      	mov	r1, r7
 802e8a2:	4630      	mov	r0, r6
 802e8a4:	eb04 0903 	add.w	r9, r4, r3
 802e8a8:	f000 fa02 	bl	802ecb0 <_sbrk_r>
 802e8ac:	4581      	cmp	r9, r0
 802e8ae:	d142      	bne.n	802e936 <_malloc_r+0xea>
 802e8b0:	6821      	ldr	r1, [r4, #0]
 802e8b2:	1a6d      	subs	r5, r5, r1
 802e8b4:	4629      	mov	r1, r5
 802e8b6:	4630      	mov	r0, r6
 802e8b8:	f7ff ffa6 	bl	802e808 <sbrk_aligned>
 802e8bc:	3001      	adds	r0, #1
 802e8be:	d03a      	beq.n	802e936 <_malloc_r+0xea>
 802e8c0:	6823      	ldr	r3, [r4, #0]
 802e8c2:	442b      	add	r3, r5
 802e8c4:	6023      	str	r3, [r4, #0]
 802e8c6:	f8d8 3000 	ldr.w	r3, [r8]
 802e8ca:	685a      	ldr	r2, [r3, #4]
 802e8cc:	bb62      	cbnz	r2, 802e928 <_malloc_r+0xdc>
 802e8ce:	f8c8 7000 	str.w	r7, [r8]
 802e8d2:	e00f      	b.n	802e8f4 <_malloc_r+0xa8>
 802e8d4:	6822      	ldr	r2, [r4, #0]
 802e8d6:	1b52      	subs	r2, r2, r5
 802e8d8:	d420      	bmi.n	802e91c <_malloc_r+0xd0>
 802e8da:	2a0b      	cmp	r2, #11
 802e8dc:	d917      	bls.n	802e90e <_malloc_r+0xc2>
 802e8de:	1961      	adds	r1, r4, r5
 802e8e0:	42a3      	cmp	r3, r4
 802e8e2:	6025      	str	r5, [r4, #0]
 802e8e4:	bf18      	it	ne
 802e8e6:	6059      	strne	r1, [r3, #4]
 802e8e8:	6863      	ldr	r3, [r4, #4]
 802e8ea:	bf08      	it	eq
 802e8ec:	f8c8 1000 	streq.w	r1, [r8]
 802e8f0:	5162      	str	r2, [r4, r5]
 802e8f2:	604b      	str	r3, [r1, #4]
 802e8f4:	4630      	mov	r0, r6
 802e8f6:	f000 f82f 	bl	802e958 <__malloc_unlock>
 802e8fa:	f104 000b 	add.w	r0, r4, #11
 802e8fe:	1d23      	adds	r3, r4, #4
 802e900:	f020 0007 	bic.w	r0, r0, #7
 802e904:	1ac2      	subs	r2, r0, r3
 802e906:	bf1c      	itt	ne
 802e908:	1a1b      	subne	r3, r3, r0
 802e90a:	50a3      	strne	r3, [r4, r2]
 802e90c:	e7af      	b.n	802e86e <_malloc_r+0x22>
 802e90e:	6862      	ldr	r2, [r4, #4]
 802e910:	42a3      	cmp	r3, r4
 802e912:	bf0c      	ite	eq
 802e914:	f8c8 2000 	streq.w	r2, [r8]
 802e918:	605a      	strne	r2, [r3, #4]
 802e91a:	e7eb      	b.n	802e8f4 <_malloc_r+0xa8>
 802e91c:	4623      	mov	r3, r4
 802e91e:	6864      	ldr	r4, [r4, #4]
 802e920:	e7ae      	b.n	802e880 <_malloc_r+0x34>
 802e922:	463c      	mov	r4, r7
 802e924:	687f      	ldr	r7, [r7, #4]
 802e926:	e7b6      	b.n	802e896 <_malloc_r+0x4a>
 802e928:	461a      	mov	r2, r3
 802e92a:	685b      	ldr	r3, [r3, #4]
 802e92c:	42a3      	cmp	r3, r4
 802e92e:	d1fb      	bne.n	802e928 <_malloc_r+0xdc>
 802e930:	2300      	movs	r3, #0
 802e932:	6053      	str	r3, [r2, #4]
 802e934:	e7de      	b.n	802e8f4 <_malloc_r+0xa8>
 802e936:	230c      	movs	r3, #12
 802e938:	6033      	str	r3, [r6, #0]
 802e93a:	4630      	mov	r0, r6
 802e93c:	f000 f80c 	bl	802e958 <__malloc_unlock>
 802e940:	e794      	b.n	802e86c <_malloc_r+0x20>
 802e942:	6005      	str	r5, [r0, #0]
 802e944:	e7d6      	b.n	802e8f4 <_malloc_r+0xa8>
 802e946:	bf00      	nop
 802e948:	20014344 	.word	0x20014344

0802e94c <__malloc_lock>:
 802e94c:	4801      	ldr	r0, [pc, #4]	@ (802e954 <__malloc_lock+0x8>)
 802e94e:	f000 b9fc 	b.w	802ed4a <__retarget_lock_acquire_recursive>
 802e952:	bf00      	nop
 802e954:	20014488 	.word	0x20014488

0802e958 <__malloc_unlock>:
 802e958:	4801      	ldr	r0, [pc, #4]	@ (802e960 <__malloc_unlock+0x8>)
 802e95a:	f000 b9f7 	b.w	802ed4c <__retarget_lock_release_recursive>
 802e95e:	bf00      	nop
 802e960:	20014488 	.word	0x20014488

0802e964 <__cxa_atexit>:
 802e964:	b510      	push	{r4, lr}
 802e966:	4604      	mov	r4, r0
 802e968:	4804      	ldr	r0, [pc, #16]	@ (802e97c <__cxa_atexit+0x18>)
 802e96a:	4613      	mov	r3, r2
 802e96c:	b120      	cbz	r0, 802e978 <__cxa_atexit+0x14>
 802e96e:	460a      	mov	r2, r1
 802e970:	2002      	movs	r0, #2
 802e972:	4621      	mov	r1, r4
 802e974:	f000 f9fa 	bl	802ed6c <__register_exitproc>
 802e978:	bd10      	pop	{r4, pc}
 802e97a:	bf00      	nop
 802e97c:	0802ed6d 	.word	0x0802ed6d

0802e980 <std>:
 802e980:	2300      	movs	r3, #0
 802e982:	b510      	push	{r4, lr}
 802e984:	4604      	mov	r4, r0
 802e986:	e9c0 3300 	strd	r3, r3, [r0]
 802e98a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802e98e:	6083      	str	r3, [r0, #8]
 802e990:	8181      	strh	r1, [r0, #12]
 802e992:	6643      	str	r3, [r0, #100]	@ 0x64
 802e994:	81c2      	strh	r2, [r0, #14]
 802e996:	6183      	str	r3, [r0, #24]
 802e998:	4619      	mov	r1, r3
 802e99a:	2208      	movs	r2, #8
 802e99c:	305c      	adds	r0, #92	@ 0x5c
 802e99e:	f000 f906 	bl	802ebae <memset>
 802e9a2:	4b0d      	ldr	r3, [pc, #52]	@ (802e9d8 <std+0x58>)
 802e9a4:	6263      	str	r3, [r4, #36]	@ 0x24
 802e9a6:	4b0d      	ldr	r3, [pc, #52]	@ (802e9dc <std+0x5c>)
 802e9a8:	62a3      	str	r3, [r4, #40]	@ 0x28
 802e9aa:	4b0d      	ldr	r3, [pc, #52]	@ (802e9e0 <std+0x60>)
 802e9ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802e9ae:	4b0d      	ldr	r3, [pc, #52]	@ (802e9e4 <std+0x64>)
 802e9b0:	6323      	str	r3, [r4, #48]	@ 0x30
 802e9b2:	4b0d      	ldr	r3, [pc, #52]	@ (802e9e8 <std+0x68>)
 802e9b4:	6224      	str	r4, [r4, #32]
 802e9b6:	429c      	cmp	r4, r3
 802e9b8:	d006      	beq.n	802e9c8 <std+0x48>
 802e9ba:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802e9be:	4294      	cmp	r4, r2
 802e9c0:	d002      	beq.n	802e9c8 <std+0x48>
 802e9c2:	33d0      	adds	r3, #208	@ 0xd0
 802e9c4:	429c      	cmp	r4, r3
 802e9c6:	d105      	bne.n	802e9d4 <std+0x54>
 802e9c8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802e9cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e9d0:	f000 b9ba 	b.w	802ed48 <__retarget_lock_init_recursive>
 802e9d4:	bd10      	pop	{r4, pc}
 802e9d6:	bf00      	nop
 802e9d8:	0802eb29 	.word	0x0802eb29
 802e9dc:	0802eb4b 	.word	0x0802eb4b
 802e9e0:	0802eb83 	.word	0x0802eb83
 802e9e4:	0802eba7 	.word	0x0802eba7
 802e9e8:	20014348 	.word	0x20014348

0802e9ec <stdio_exit_handler>:
 802e9ec:	4a02      	ldr	r2, [pc, #8]	@ (802e9f8 <stdio_exit_handler+0xc>)
 802e9ee:	4903      	ldr	r1, [pc, #12]	@ (802e9fc <stdio_exit_handler+0x10>)
 802e9f0:	4803      	ldr	r0, [pc, #12]	@ (802ea00 <stdio_exit_handler+0x14>)
 802e9f2:	f000 b87b 	b.w	802eaec <_fwalk_sglue>
 802e9f6:	bf00      	nop
 802e9f8:	20000110 	.word	0x20000110
 802e9fc:	0802f55d 	.word	0x0802f55d
 802ea00:	20000120 	.word	0x20000120

0802ea04 <cleanup_stdio>:
 802ea04:	6841      	ldr	r1, [r0, #4]
 802ea06:	4b0c      	ldr	r3, [pc, #48]	@ (802ea38 <cleanup_stdio+0x34>)
 802ea08:	4299      	cmp	r1, r3
 802ea0a:	b510      	push	{r4, lr}
 802ea0c:	4604      	mov	r4, r0
 802ea0e:	d001      	beq.n	802ea14 <cleanup_stdio+0x10>
 802ea10:	f000 fda4 	bl	802f55c <_fflush_r>
 802ea14:	68a1      	ldr	r1, [r4, #8]
 802ea16:	4b09      	ldr	r3, [pc, #36]	@ (802ea3c <cleanup_stdio+0x38>)
 802ea18:	4299      	cmp	r1, r3
 802ea1a:	d002      	beq.n	802ea22 <cleanup_stdio+0x1e>
 802ea1c:	4620      	mov	r0, r4
 802ea1e:	f000 fd9d 	bl	802f55c <_fflush_r>
 802ea22:	68e1      	ldr	r1, [r4, #12]
 802ea24:	4b06      	ldr	r3, [pc, #24]	@ (802ea40 <cleanup_stdio+0x3c>)
 802ea26:	4299      	cmp	r1, r3
 802ea28:	d004      	beq.n	802ea34 <cleanup_stdio+0x30>
 802ea2a:	4620      	mov	r0, r4
 802ea2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ea30:	f000 bd94 	b.w	802f55c <_fflush_r>
 802ea34:	bd10      	pop	{r4, pc}
 802ea36:	bf00      	nop
 802ea38:	20014348 	.word	0x20014348
 802ea3c:	200143b0 	.word	0x200143b0
 802ea40:	20014418 	.word	0x20014418

0802ea44 <global_stdio_init.part.0>:
 802ea44:	b510      	push	{r4, lr}
 802ea46:	4b0b      	ldr	r3, [pc, #44]	@ (802ea74 <global_stdio_init.part.0+0x30>)
 802ea48:	4c0b      	ldr	r4, [pc, #44]	@ (802ea78 <global_stdio_init.part.0+0x34>)
 802ea4a:	4a0c      	ldr	r2, [pc, #48]	@ (802ea7c <global_stdio_init.part.0+0x38>)
 802ea4c:	601a      	str	r2, [r3, #0]
 802ea4e:	4620      	mov	r0, r4
 802ea50:	2200      	movs	r2, #0
 802ea52:	2104      	movs	r1, #4
 802ea54:	f7ff ff94 	bl	802e980 <std>
 802ea58:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802ea5c:	2201      	movs	r2, #1
 802ea5e:	2109      	movs	r1, #9
 802ea60:	f7ff ff8e 	bl	802e980 <std>
 802ea64:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802ea68:	2202      	movs	r2, #2
 802ea6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ea6e:	2112      	movs	r1, #18
 802ea70:	f7ff bf86 	b.w	802e980 <std>
 802ea74:	20014480 	.word	0x20014480
 802ea78:	20014348 	.word	0x20014348
 802ea7c:	0802e9ed 	.word	0x0802e9ed

0802ea80 <__sfp_lock_acquire>:
 802ea80:	4801      	ldr	r0, [pc, #4]	@ (802ea88 <__sfp_lock_acquire+0x8>)
 802ea82:	f000 b962 	b.w	802ed4a <__retarget_lock_acquire_recursive>
 802ea86:	bf00      	nop
 802ea88:	2001448a 	.word	0x2001448a

0802ea8c <__sfp_lock_release>:
 802ea8c:	4801      	ldr	r0, [pc, #4]	@ (802ea94 <__sfp_lock_release+0x8>)
 802ea8e:	f000 b95d 	b.w	802ed4c <__retarget_lock_release_recursive>
 802ea92:	bf00      	nop
 802ea94:	2001448a 	.word	0x2001448a

0802ea98 <__sinit>:
 802ea98:	b510      	push	{r4, lr}
 802ea9a:	4604      	mov	r4, r0
 802ea9c:	f7ff fff0 	bl	802ea80 <__sfp_lock_acquire>
 802eaa0:	6a23      	ldr	r3, [r4, #32]
 802eaa2:	b11b      	cbz	r3, 802eaac <__sinit+0x14>
 802eaa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802eaa8:	f7ff bff0 	b.w	802ea8c <__sfp_lock_release>
 802eaac:	4b04      	ldr	r3, [pc, #16]	@ (802eac0 <__sinit+0x28>)
 802eaae:	6223      	str	r3, [r4, #32]
 802eab0:	4b04      	ldr	r3, [pc, #16]	@ (802eac4 <__sinit+0x2c>)
 802eab2:	681b      	ldr	r3, [r3, #0]
 802eab4:	2b00      	cmp	r3, #0
 802eab6:	d1f5      	bne.n	802eaa4 <__sinit+0xc>
 802eab8:	f7ff ffc4 	bl	802ea44 <global_stdio_init.part.0>
 802eabc:	e7f2      	b.n	802eaa4 <__sinit+0xc>
 802eabe:	bf00      	nop
 802eac0:	0802ea05 	.word	0x0802ea05
 802eac4:	20014480 	.word	0x20014480

0802eac8 <fiprintf>:
 802eac8:	b40e      	push	{r1, r2, r3}
 802eaca:	b503      	push	{r0, r1, lr}
 802eacc:	4601      	mov	r1, r0
 802eace:	ab03      	add	r3, sp, #12
 802ead0:	4805      	ldr	r0, [pc, #20]	@ (802eae8 <fiprintf+0x20>)
 802ead2:	f853 2b04 	ldr.w	r2, [r3], #4
 802ead6:	6800      	ldr	r0, [r0, #0]
 802ead8:	9301      	str	r3, [sp, #4]
 802eada:	f000 fa17 	bl	802ef0c <_vfiprintf_r>
 802eade:	b002      	add	sp, #8
 802eae0:	f85d eb04 	ldr.w	lr, [sp], #4
 802eae4:	b003      	add	sp, #12
 802eae6:	4770      	bx	lr
 802eae8:	2000011c 	.word	0x2000011c

0802eaec <_fwalk_sglue>:
 802eaec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802eaf0:	4607      	mov	r7, r0
 802eaf2:	4688      	mov	r8, r1
 802eaf4:	4614      	mov	r4, r2
 802eaf6:	2600      	movs	r6, #0
 802eaf8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802eafc:	f1b9 0901 	subs.w	r9, r9, #1
 802eb00:	d505      	bpl.n	802eb0e <_fwalk_sglue+0x22>
 802eb02:	6824      	ldr	r4, [r4, #0]
 802eb04:	2c00      	cmp	r4, #0
 802eb06:	d1f7      	bne.n	802eaf8 <_fwalk_sglue+0xc>
 802eb08:	4630      	mov	r0, r6
 802eb0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802eb0e:	89ab      	ldrh	r3, [r5, #12]
 802eb10:	2b01      	cmp	r3, #1
 802eb12:	d907      	bls.n	802eb24 <_fwalk_sglue+0x38>
 802eb14:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802eb18:	3301      	adds	r3, #1
 802eb1a:	d003      	beq.n	802eb24 <_fwalk_sglue+0x38>
 802eb1c:	4629      	mov	r1, r5
 802eb1e:	4638      	mov	r0, r7
 802eb20:	47c0      	blx	r8
 802eb22:	4306      	orrs	r6, r0
 802eb24:	3568      	adds	r5, #104	@ 0x68
 802eb26:	e7e9      	b.n	802eafc <_fwalk_sglue+0x10>

0802eb28 <__sread>:
 802eb28:	b510      	push	{r4, lr}
 802eb2a:	460c      	mov	r4, r1
 802eb2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eb30:	f000 f898 	bl	802ec64 <_read_r>
 802eb34:	2800      	cmp	r0, #0
 802eb36:	bfab      	itete	ge
 802eb38:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802eb3a:	89a3      	ldrhlt	r3, [r4, #12]
 802eb3c:	181b      	addge	r3, r3, r0
 802eb3e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802eb42:	bfac      	ite	ge
 802eb44:	6563      	strge	r3, [r4, #84]	@ 0x54
 802eb46:	81a3      	strhlt	r3, [r4, #12]
 802eb48:	bd10      	pop	{r4, pc}

0802eb4a <__swrite>:
 802eb4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802eb4e:	461f      	mov	r7, r3
 802eb50:	898b      	ldrh	r3, [r1, #12]
 802eb52:	05db      	lsls	r3, r3, #23
 802eb54:	4605      	mov	r5, r0
 802eb56:	460c      	mov	r4, r1
 802eb58:	4616      	mov	r6, r2
 802eb5a:	d505      	bpl.n	802eb68 <__swrite+0x1e>
 802eb5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eb60:	2302      	movs	r3, #2
 802eb62:	2200      	movs	r2, #0
 802eb64:	f000 f86c 	bl	802ec40 <_lseek_r>
 802eb68:	89a3      	ldrh	r3, [r4, #12]
 802eb6a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802eb6e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802eb72:	81a3      	strh	r3, [r4, #12]
 802eb74:	4632      	mov	r2, r6
 802eb76:	463b      	mov	r3, r7
 802eb78:	4628      	mov	r0, r5
 802eb7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802eb7e:	f000 b8a7 	b.w	802ecd0 <_write_r>

0802eb82 <__sseek>:
 802eb82:	b510      	push	{r4, lr}
 802eb84:	460c      	mov	r4, r1
 802eb86:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eb8a:	f000 f859 	bl	802ec40 <_lseek_r>
 802eb8e:	1c43      	adds	r3, r0, #1
 802eb90:	89a3      	ldrh	r3, [r4, #12]
 802eb92:	bf15      	itete	ne
 802eb94:	6560      	strne	r0, [r4, #84]	@ 0x54
 802eb96:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802eb9a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802eb9e:	81a3      	strheq	r3, [r4, #12]
 802eba0:	bf18      	it	ne
 802eba2:	81a3      	strhne	r3, [r4, #12]
 802eba4:	bd10      	pop	{r4, pc}

0802eba6 <__sclose>:
 802eba6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ebaa:	f000 b839 	b.w	802ec20 <_close_r>

0802ebae <memset>:
 802ebae:	4402      	add	r2, r0
 802ebb0:	4603      	mov	r3, r0
 802ebb2:	4293      	cmp	r3, r2
 802ebb4:	d100      	bne.n	802ebb8 <memset+0xa>
 802ebb6:	4770      	bx	lr
 802ebb8:	f803 1b01 	strb.w	r1, [r3], #1
 802ebbc:	e7f9      	b.n	802ebb2 <memset+0x4>

0802ebbe <_raise_r>:
 802ebbe:	291f      	cmp	r1, #31
 802ebc0:	b538      	push	{r3, r4, r5, lr}
 802ebc2:	4605      	mov	r5, r0
 802ebc4:	460c      	mov	r4, r1
 802ebc6:	d904      	bls.n	802ebd2 <_raise_r+0x14>
 802ebc8:	2316      	movs	r3, #22
 802ebca:	6003      	str	r3, [r0, #0]
 802ebcc:	f04f 30ff 	mov.w	r0, #4294967295
 802ebd0:	bd38      	pop	{r3, r4, r5, pc}
 802ebd2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802ebd4:	b112      	cbz	r2, 802ebdc <_raise_r+0x1e>
 802ebd6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802ebda:	b94b      	cbnz	r3, 802ebf0 <_raise_r+0x32>
 802ebdc:	4628      	mov	r0, r5
 802ebde:	f000 f865 	bl	802ecac <_getpid_r>
 802ebe2:	4622      	mov	r2, r4
 802ebe4:	4601      	mov	r1, r0
 802ebe6:	4628      	mov	r0, r5
 802ebe8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ebec:	f000 b84c 	b.w	802ec88 <_kill_r>
 802ebf0:	2b01      	cmp	r3, #1
 802ebf2:	d00a      	beq.n	802ec0a <_raise_r+0x4c>
 802ebf4:	1c59      	adds	r1, r3, #1
 802ebf6:	d103      	bne.n	802ec00 <_raise_r+0x42>
 802ebf8:	2316      	movs	r3, #22
 802ebfa:	6003      	str	r3, [r0, #0]
 802ebfc:	2001      	movs	r0, #1
 802ebfe:	e7e7      	b.n	802ebd0 <_raise_r+0x12>
 802ec00:	2100      	movs	r1, #0
 802ec02:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802ec06:	4620      	mov	r0, r4
 802ec08:	4798      	blx	r3
 802ec0a:	2000      	movs	r0, #0
 802ec0c:	e7e0      	b.n	802ebd0 <_raise_r+0x12>
	...

0802ec10 <raise>:
 802ec10:	4b02      	ldr	r3, [pc, #8]	@ (802ec1c <raise+0xc>)
 802ec12:	4601      	mov	r1, r0
 802ec14:	6818      	ldr	r0, [r3, #0]
 802ec16:	f7ff bfd2 	b.w	802ebbe <_raise_r>
 802ec1a:	bf00      	nop
 802ec1c:	2000011c 	.word	0x2000011c

0802ec20 <_close_r>:
 802ec20:	b538      	push	{r3, r4, r5, lr}
 802ec22:	4d06      	ldr	r5, [pc, #24]	@ (802ec3c <_close_r+0x1c>)
 802ec24:	2300      	movs	r3, #0
 802ec26:	4604      	mov	r4, r0
 802ec28:	4608      	mov	r0, r1
 802ec2a:	602b      	str	r3, [r5, #0]
 802ec2c:	f7d3 ffc2 	bl	8002bb4 <_close>
 802ec30:	1c43      	adds	r3, r0, #1
 802ec32:	d102      	bne.n	802ec3a <_close_r+0x1a>
 802ec34:	682b      	ldr	r3, [r5, #0]
 802ec36:	b103      	cbz	r3, 802ec3a <_close_r+0x1a>
 802ec38:	6023      	str	r3, [r4, #0]
 802ec3a:	bd38      	pop	{r3, r4, r5, pc}
 802ec3c:	20014484 	.word	0x20014484

0802ec40 <_lseek_r>:
 802ec40:	b538      	push	{r3, r4, r5, lr}
 802ec42:	4d07      	ldr	r5, [pc, #28]	@ (802ec60 <_lseek_r+0x20>)
 802ec44:	4604      	mov	r4, r0
 802ec46:	4608      	mov	r0, r1
 802ec48:	4611      	mov	r1, r2
 802ec4a:	2200      	movs	r2, #0
 802ec4c:	602a      	str	r2, [r5, #0]
 802ec4e:	461a      	mov	r2, r3
 802ec50:	f7d3 ffba 	bl	8002bc8 <_lseek>
 802ec54:	1c43      	adds	r3, r0, #1
 802ec56:	d102      	bne.n	802ec5e <_lseek_r+0x1e>
 802ec58:	682b      	ldr	r3, [r5, #0]
 802ec5a:	b103      	cbz	r3, 802ec5e <_lseek_r+0x1e>
 802ec5c:	6023      	str	r3, [r4, #0]
 802ec5e:	bd38      	pop	{r3, r4, r5, pc}
 802ec60:	20014484 	.word	0x20014484

0802ec64 <_read_r>:
 802ec64:	b538      	push	{r3, r4, r5, lr}
 802ec66:	4d07      	ldr	r5, [pc, #28]	@ (802ec84 <_read_r+0x20>)
 802ec68:	4604      	mov	r4, r0
 802ec6a:	4608      	mov	r0, r1
 802ec6c:	4611      	mov	r1, r2
 802ec6e:	2200      	movs	r2, #0
 802ec70:	602a      	str	r2, [r5, #0]
 802ec72:	461a      	mov	r2, r3
 802ec74:	f7d3 ff82 	bl	8002b7c <_read>
 802ec78:	1c43      	adds	r3, r0, #1
 802ec7a:	d102      	bne.n	802ec82 <_read_r+0x1e>
 802ec7c:	682b      	ldr	r3, [r5, #0]
 802ec7e:	b103      	cbz	r3, 802ec82 <_read_r+0x1e>
 802ec80:	6023      	str	r3, [r4, #0]
 802ec82:	bd38      	pop	{r3, r4, r5, pc}
 802ec84:	20014484 	.word	0x20014484

0802ec88 <_kill_r>:
 802ec88:	b538      	push	{r3, r4, r5, lr}
 802ec8a:	4d07      	ldr	r5, [pc, #28]	@ (802eca8 <_kill_r+0x20>)
 802ec8c:	2300      	movs	r3, #0
 802ec8e:	4604      	mov	r4, r0
 802ec90:	4608      	mov	r0, r1
 802ec92:	4611      	mov	r1, r2
 802ec94:	602b      	str	r3, [r5, #0]
 802ec96:	f7d3 ff63 	bl	8002b60 <_kill>
 802ec9a:	1c43      	adds	r3, r0, #1
 802ec9c:	d102      	bne.n	802eca4 <_kill_r+0x1c>
 802ec9e:	682b      	ldr	r3, [r5, #0]
 802eca0:	b103      	cbz	r3, 802eca4 <_kill_r+0x1c>
 802eca2:	6023      	str	r3, [r4, #0]
 802eca4:	bd38      	pop	{r3, r4, r5, pc}
 802eca6:	bf00      	nop
 802eca8:	20014484 	.word	0x20014484

0802ecac <_getpid_r>:
 802ecac:	f7d3 bf56 	b.w	8002b5c <_getpid>

0802ecb0 <_sbrk_r>:
 802ecb0:	b538      	push	{r3, r4, r5, lr}
 802ecb2:	4d06      	ldr	r5, [pc, #24]	@ (802eccc <_sbrk_r+0x1c>)
 802ecb4:	2300      	movs	r3, #0
 802ecb6:	4604      	mov	r4, r0
 802ecb8:	4608      	mov	r0, r1
 802ecba:	602b      	str	r3, [r5, #0]
 802ecbc:	f7d3 ff86 	bl	8002bcc <_sbrk>
 802ecc0:	1c43      	adds	r3, r0, #1
 802ecc2:	d102      	bne.n	802ecca <_sbrk_r+0x1a>
 802ecc4:	682b      	ldr	r3, [r5, #0]
 802ecc6:	b103      	cbz	r3, 802ecca <_sbrk_r+0x1a>
 802ecc8:	6023      	str	r3, [r4, #0]
 802ecca:	bd38      	pop	{r3, r4, r5, pc}
 802eccc:	20014484 	.word	0x20014484

0802ecd0 <_write_r>:
 802ecd0:	b538      	push	{r3, r4, r5, lr}
 802ecd2:	4d07      	ldr	r5, [pc, #28]	@ (802ecf0 <_write_r+0x20>)
 802ecd4:	4604      	mov	r4, r0
 802ecd6:	4608      	mov	r0, r1
 802ecd8:	4611      	mov	r1, r2
 802ecda:	2200      	movs	r2, #0
 802ecdc:	602a      	str	r2, [r5, #0]
 802ecde:	461a      	mov	r2, r3
 802ece0:	f7d3 ff5a 	bl	8002b98 <_write>
 802ece4:	1c43      	adds	r3, r0, #1
 802ece6:	d102      	bne.n	802ecee <_write_r+0x1e>
 802ece8:	682b      	ldr	r3, [r5, #0]
 802ecea:	b103      	cbz	r3, 802ecee <_write_r+0x1e>
 802ecec:	6023      	str	r3, [r4, #0]
 802ecee:	bd38      	pop	{r3, r4, r5, pc}
 802ecf0:	20014484 	.word	0x20014484

0802ecf4 <__errno>:
 802ecf4:	4b01      	ldr	r3, [pc, #4]	@ (802ecfc <__errno+0x8>)
 802ecf6:	6818      	ldr	r0, [r3, #0]
 802ecf8:	4770      	bx	lr
 802ecfa:	bf00      	nop
 802ecfc:	2000011c 	.word	0x2000011c

0802ed00 <__libc_init_array>:
 802ed00:	b570      	push	{r4, r5, r6, lr}
 802ed02:	4d0d      	ldr	r5, [pc, #52]	@ (802ed38 <__libc_init_array+0x38>)
 802ed04:	4c0d      	ldr	r4, [pc, #52]	@ (802ed3c <__libc_init_array+0x3c>)
 802ed06:	1b64      	subs	r4, r4, r5
 802ed08:	10a4      	asrs	r4, r4, #2
 802ed0a:	2600      	movs	r6, #0
 802ed0c:	42a6      	cmp	r6, r4
 802ed0e:	d109      	bne.n	802ed24 <__libc_init_array+0x24>
 802ed10:	4d0b      	ldr	r5, [pc, #44]	@ (802ed40 <__libc_init_array+0x40>)
 802ed12:	4c0c      	ldr	r4, [pc, #48]	@ (802ed44 <__libc_init_array+0x44>)
 802ed14:	f000 fd62 	bl	802f7dc <_init>
 802ed18:	1b64      	subs	r4, r4, r5
 802ed1a:	10a4      	asrs	r4, r4, #2
 802ed1c:	2600      	movs	r6, #0
 802ed1e:	42a6      	cmp	r6, r4
 802ed20:	d105      	bne.n	802ed2e <__libc_init_array+0x2e>
 802ed22:	bd70      	pop	{r4, r5, r6, pc}
 802ed24:	f855 3b04 	ldr.w	r3, [r5], #4
 802ed28:	4798      	blx	r3
 802ed2a:	3601      	adds	r6, #1
 802ed2c:	e7ee      	b.n	802ed0c <__libc_init_array+0xc>
 802ed2e:	f855 3b04 	ldr.w	r3, [r5], #4
 802ed32:	4798      	blx	r3
 802ed34:	3601      	adds	r6, #1
 802ed36:	e7f2      	b.n	802ed1e <__libc_init_array+0x1e>
 802ed38:	081e76c0 	.word	0x081e76c0
 802ed3c:	081e76c0 	.word	0x081e76c0
 802ed40:	081e76c0 	.word	0x081e76c0
 802ed44:	081e76d4 	.word	0x081e76d4

0802ed48 <__retarget_lock_init_recursive>:
 802ed48:	4770      	bx	lr

0802ed4a <__retarget_lock_acquire_recursive>:
 802ed4a:	4770      	bx	lr

0802ed4c <__retarget_lock_release_recursive>:
 802ed4c:	4770      	bx	lr

0802ed4e <memcpy>:
 802ed4e:	440a      	add	r2, r1
 802ed50:	4291      	cmp	r1, r2
 802ed52:	f100 33ff 	add.w	r3, r0, #4294967295
 802ed56:	d100      	bne.n	802ed5a <memcpy+0xc>
 802ed58:	4770      	bx	lr
 802ed5a:	b510      	push	{r4, lr}
 802ed5c:	f811 4b01 	ldrb.w	r4, [r1], #1
 802ed60:	f803 4f01 	strb.w	r4, [r3, #1]!
 802ed64:	4291      	cmp	r1, r2
 802ed66:	d1f9      	bne.n	802ed5c <memcpy+0xe>
 802ed68:	bd10      	pop	{r4, pc}
	...

0802ed6c <__register_exitproc>:
 802ed6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ed70:	4d27      	ldr	r5, [pc, #156]	@ (802ee10 <__register_exitproc+0xa4>)
 802ed72:	4607      	mov	r7, r0
 802ed74:	6828      	ldr	r0, [r5, #0]
 802ed76:	4691      	mov	r9, r2
 802ed78:	460e      	mov	r6, r1
 802ed7a:	4698      	mov	r8, r3
 802ed7c:	f7ff ffe5 	bl	802ed4a <__retarget_lock_acquire_recursive>
 802ed80:	4a24      	ldr	r2, [pc, #144]	@ (802ee14 <__register_exitproc+0xa8>)
 802ed82:	6814      	ldr	r4, [r2, #0]
 802ed84:	b93c      	cbnz	r4, 802ed96 <__register_exitproc+0x2a>
 802ed86:	4b24      	ldr	r3, [pc, #144]	@ (802ee18 <__register_exitproc+0xac>)
 802ed88:	6013      	str	r3, [r2, #0]
 802ed8a:	4a24      	ldr	r2, [pc, #144]	@ (802ee1c <__register_exitproc+0xb0>)
 802ed8c:	b112      	cbz	r2, 802ed94 <__register_exitproc+0x28>
 802ed8e:	6812      	ldr	r2, [r2, #0]
 802ed90:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802ed94:	4c20      	ldr	r4, [pc, #128]	@ (802ee18 <__register_exitproc+0xac>)
 802ed96:	6863      	ldr	r3, [r4, #4]
 802ed98:	2b1f      	cmp	r3, #31
 802ed9a:	dd06      	ble.n	802edaa <__register_exitproc+0x3e>
 802ed9c:	6828      	ldr	r0, [r5, #0]
 802ed9e:	f7ff ffd5 	bl	802ed4c <__retarget_lock_release_recursive>
 802eda2:	f04f 30ff 	mov.w	r0, #4294967295
 802eda6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802edaa:	b32f      	cbz	r7, 802edf8 <__register_exitproc+0x8c>
 802edac:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802edb0:	b968      	cbnz	r0, 802edce <__register_exitproc+0x62>
 802edb2:	4b1b      	ldr	r3, [pc, #108]	@ (802ee20 <__register_exitproc+0xb4>)
 802edb4:	2b00      	cmp	r3, #0
 802edb6:	d0f1      	beq.n	802ed9c <__register_exitproc+0x30>
 802edb8:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802edbc:	f7ff fd14 	bl	802e7e8 <malloc>
 802edc0:	2800      	cmp	r0, #0
 802edc2:	d0eb      	beq.n	802ed9c <__register_exitproc+0x30>
 802edc4:	2300      	movs	r3, #0
 802edc6:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802edca:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802edce:	6863      	ldr	r3, [r4, #4]
 802edd0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802edd4:	2201      	movs	r2, #1
 802edd6:	409a      	lsls	r2, r3
 802edd8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802eddc:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802ede0:	4313      	orrs	r3, r2
 802ede2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802ede6:	2f02      	cmp	r7, #2
 802ede8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802edec:	bf02      	ittt	eq
 802edee:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802edf2:	4313      	orreq	r3, r2
 802edf4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802edf8:	6863      	ldr	r3, [r4, #4]
 802edfa:	6828      	ldr	r0, [r5, #0]
 802edfc:	1c5a      	adds	r2, r3, #1
 802edfe:	3302      	adds	r3, #2
 802ee00:	6062      	str	r2, [r4, #4]
 802ee02:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802ee06:	f7ff ffa1 	bl	802ed4c <__retarget_lock_release_recursive>
 802ee0a:	2000      	movs	r0, #0
 802ee0c:	e7cb      	b.n	802eda6 <__register_exitproc+0x3a>
 802ee0e:	bf00      	nop
 802ee10:	2000016c 	.word	0x2000016c
 802ee14:	20014518 	.word	0x20014518
 802ee18:	2001448c 	.word	0x2001448c
 802ee1c:	08033d8c 	.word	0x08033d8c
 802ee20:	0802e7e9 	.word	0x0802e7e9

0802ee24 <_free_r>:
 802ee24:	b538      	push	{r3, r4, r5, lr}
 802ee26:	4605      	mov	r5, r0
 802ee28:	2900      	cmp	r1, #0
 802ee2a:	d041      	beq.n	802eeb0 <_free_r+0x8c>
 802ee2c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802ee30:	1f0c      	subs	r4, r1, #4
 802ee32:	2b00      	cmp	r3, #0
 802ee34:	bfb8      	it	lt
 802ee36:	18e4      	addlt	r4, r4, r3
 802ee38:	f7ff fd88 	bl	802e94c <__malloc_lock>
 802ee3c:	4a1d      	ldr	r2, [pc, #116]	@ (802eeb4 <_free_r+0x90>)
 802ee3e:	6813      	ldr	r3, [r2, #0]
 802ee40:	b933      	cbnz	r3, 802ee50 <_free_r+0x2c>
 802ee42:	6063      	str	r3, [r4, #4]
 802ee44:	6014      	str	r4, [r2, #0]
 802ee46:	4628      	mov	r0, r5
 802ee48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ee4c:	f7ff bd84 	b.w	802e958 <__malloc_unlock>
 802ee50:	42a3      	cmp	r3, r4
 802ee52:	d908      	bls.n	802ee66 <_free_r+0x42>
 802ee54:	6820      	ldr	r0, [r4, #0]
 802ee56:	1821      	adds	r1, r4, r0
 802ee58:	428b      	cmp	r3, r1
 802ee5a:	bf01      	itttt	eq
 802ee5c:	6819      	ldreq	r1, [r3, #0]
 802ee5e:	685b      	ldreq	r3, [r3, #4]
 802ee60:	1809      	addeq	r1, r1, r0
 802ee62:	6021      	streq	r1, [r4, #0]
 802ee64:	e7ed      	b.n	802ee42 <_free_r+0x1e>
 802ee66:	461a      	mov	r2, r3
 802ee68:	685b      	ldr	r3, [r3, #4]
 802ee6a:	b10b      	cbz	r3, 802ee70 <_free_r+0x4c>
 802ee6c:	42a3      	cmp	r3, r4
 802ee6e:	d9fa      	bls.n	802ee66 <_free_r+0x42>
 802ee70:	6811      	ldr	r1, [r2, #0]
 802ee72:	1850      	adds	r0, r2, r1
 802ee74:	42a0      	cmp	r0, r4
 802ee76:	d10b      	bne.n	802ee90 <_free_r+0x6c>
 802ee78:	6820      	ldr	r0, [r4, #0]
 802ee7a:	4401      	add	r1, r0
 802ee7c:	1850      	adds	r0, r2, r1
 802ee7e:	4283      	cmp	r3, r0
 802ee80:	6011      	str	r1, [r2, #0]
 802ee82:	d1e0      	bne.n	802ee46 <_free_r+0x22>
 802ee84:	6818      	ldr	r0, [r3, #0]
 802ee86:	685b      	ldr	r3, [r3, #4]
 802ee88:	6053      	str	r3, [r2, #4]
 802ee8a:	4408      	add	r0, r1
 802ee8c:	6010      	str	r0, [r2, #0]
 802ee8e:	e7da      	b.n	802ee46 <_free_r+0x22>
 802ee90:	d902      	bls.n	802ee98 <_free_r+0x74>
 802ee92:	230c      	movs	r3, #12
 802ee94:	602b      	str	r3, [r5, #0]
 802ee96:	e7d6      	b.n	802ee46 <_free_r+0x22>
 802ee98:	6820      	ldr	r0, [r4, #0]
 802ee9a:	1821      	adds	r1, r4, r0
 802ee9c:	428b      	cmp	r3, r1
 802ee9e:	bf04      	itt	eq
 802eea0:	6819      	ldreq	r1, [r3, #0]
 802eea2:	685b      	ldreq	r3, [r3, #4]
 802eea4:	6063      	str	r3, [r4, #4]
 802eea6:	bf04      	itt	eq
 802eea8:	1809      	addeq	r1, r1, r0
 802eeaa:	6021      	streq	r1, [r4, #0]
 802eeac:	6054      	str	r4, [r2, #4]
 802eeae:	e7ca      	b.n	802ee46 <_free_r+0x22>
 802eeb0:	bd38      	pop	{r3, r4, r5, pc}
 802eeb2:	bf00      	nop
 802eeb4:	20014344 	.word	0x20014344

0802eeb8 <__sfputc_r>:
 802eeb8:	6893      	ldr	r3, [r2, #8]
 802eeba:	3b01      	subs	r3, #1
 802eebc:	2b00      	cmp	r3, #0
 802eebe:	b410      	push	{r4}
 802eec0:	6093      	str	r3, [r2, #8]
 802eec2:	da08      	bge.n	802eed6 <__sfputc_r+0x1e>
 802eec4:	6994      	ldr	r4, [r2, #24]
 802eec6:	42a3      	cmp	r3, r4
 802eec8:	db01      	blt.n	802eece <__sfputc_r+0x16>
 802eeca:	290a      	cmp	r1, #10
 802eecc:	d103      	bne.n	802eed6 <__sfputc_r+0x1e>
 802eece:	f85d 4b04 	ldr.w	r4, [sp], #4
 802eed2:	f000 bb6b 	b.w	802f5ac <__swbuf_r>
 802eed6:	6813      	ldr	r3, [r2, #0]
 802eed8:	1c58      	adds	r0, r3, #1
 802eeda:	6010      	str	r0, [r2, #0]
 802eedc:	7019      	strb	r1, [r3, #0]
 802eede:	4608      	mov	r0, r1
 802eee0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802eee4:	4770      	bx	lr

0802eee6 <__sfputs_r>:
 802eee6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802eee8:	4606      	mov	r6, r0
 802eeea:	460f      	mov	r7, r1
 802eeec:	4614      	mov	r4, r2
 802eeee:	18d5      	adds	r5, r2, r3
 802eef0:	42ac      	cmp	r4, r5
 802eef2:	d101      	bne.n	802eef8 <__sfputs_r+0x12>
 802eef4:	2000      	movs	r0, #0
 802eef6:	e007      	b.n	802ef08 <__sfputs_r+0x22>
 802eef8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802eefc:	463a      	mov	r2, r7
 802eefe:	4630      	mov	r0, r6
 802ef00:	f7ff ffda 	bl	802eeb8 <__sfputc_r>
 802ef04:	1c43      	adds	r3, r0, #1
 802ef06:	d1f3      	bne.n	802eef0 <__sfputs_r+0xa>
 802ef08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802ef0c <_vfiprintf_r>:
 802ef0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ef10:	460d      	mov	r5, r1
 802ef12:	b09d      	sub	sp, #116	@ 0x74
 802ef14:	4614      	mov	r4, r2
 802ef16:	4698      	mov	r8, r3
 802ef18:	4606      	mov	r6, r0
 802ef1a:	b118      	cbz	r0, 802ef24 <_vfiprintf_r+0x18>
 802ef1c:	6a03      	ldr	r3, [r0, #32]
 802ef1e:	b90b      	cbnz	r3, 802ef24 <_vfiprintf_r+0x18>
 802ef20:	f7ff fdba 	bl	802ea98 <__sinit>
 802ef24:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802ef26:	07d9      	lsls	r1, r3, #31
 802ef28:	d405      	bmi.n	802ef36 <_vfiprintf_r+0x2a>
 802ef2a:	89ab      	ldrh	r3, [r5, #12]
 802ef2c:	059a      	lsls	r2, r3, #22
 802ef2e:	d402      	bmi.n	802ef36 <_vfiprintf_r+0x2a>
 802ef30:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802ef32:	f7ff ff0a 	bl	802ed4a <__retarget_lock_acquire_recursive>
 802ef36:	89ab      	ldrh	r3, [r5, #12]
 802ef38:	071b      	lsls	r3, r3, #28
 802ef3a:	d501      	bpl.n	802ef40 <_vfiprintf_r+0x34>
 802ef3c:	692b      	ldr	r3, [r5, #16]
 802ef3e:	b99b      	cbnz	r3, 802ef68 <_vfiprintf_r+0x5c>
 802ef40:	4629      	mov	r1, r5
 802ef42:	4630      	mov	r0, r6
 802ef44:	f000 fb70 	bl	802f628 <__swsetup_r>
 802ef48:	b170      	cbz	r0, 802ef68 <_vfiprintf_r+0x5c>
 802ef4a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802ef4c:	07dc      	lsls	r4, r3, #31
 802ef4e:	d504      	bpl.n	802ef5a <_vfiprintf_r+0x4e>
 802ef50:	f04f 30ff 	mov.w	r0, #4294967295
 802ef54:	b01d      	add	sp, #116	@ 0x74
 802ef56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ef5a:	89ab      	ldrh	r3, [r5, #12]
 802ef5c:	0598      	lsls	r0, r3, #22
 802ef5e:	d4f7      	bmi.n	802ef50 <_vfiprintf_r+0x44>
 802ef60:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802ef62:	f7ff fef3 	bl	802ed4c <__retarget_lock_release_recursive>
 802ef66:	e7f3      	b.n	802ef50 <_vfiprintf_r+0x44>
 802ef68:	2300      	movs	r3, #0
 802ef6a:	9309      	str	r3, [sp, #36]	@ 0x24
 802ef6c:	2320      	movs	r3, #32
 802ef6e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802ef72:	f8cd 800c 	str.w	r8, [sp, #12]
 802ef76:	2330      	movs	r3, #48	@ 0x30
 802ef78:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802f128 <_vfiprintf_r+0x21c>
 802ef7c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802ef80:	f04f 0901 	mov.w	r9, #1
 802ef84:	4623      	mov	r3, r4
 802ef86:	469a      	mov	sl, r3
 802ef88:	f813 2b01 	ldrb.w	r2, [r3], #1
 802ef8c:	b10a      	cbz	r2, 802ef92 <_vfiprintf_r+0x86>
 802ef8e:	2a25      	cmp	r2, #37	@ 0x25
 802ef90:	d1f9      	bne.n	802ef86 <_vfiprintf_r+0x7a>
 802ef92:	ebba 0b04 	subs.w	fp, sl, r4
 802ef96:	d00b      	beq.n	802efb0 <_vfiprintf_r+0xa4>
 802ef98:	465b      	mov	r3, fp
 802ef9a:	4622      	mov	r2, r4
 802ef9c:	4629      	mov	r1, r5
 802ef9e:	4630      	mov	r0, r6
 802efa0:	f7ff ffa1 	bl	802eee6 <__sfputs_r>
 802efa4:	3001      	adds	r0, #1
 802efa6:	f000 80a7 	beq.w	802f0f8 <_vfiprintf_r+0x1ec>
 802efaa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802efac:	445a      	add	r2, fp
 802efae:	9209      	str	r2, [sp, #36]	@ 0x24
 802efb0:	f89a 3000 	ldrb.w	r3, [sl]
 802efb4:	2b00      	cmp	r3, #0
 802efb6:	f000 809f 	beq.w	802f0f8 <_vfiprintf_r+0x1ec>
 802efba:	2300      	movs	r3, #0
 802efbc:	f04f 32ff 	mov.w	r2, #4294967295
 802efc0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802efc4:	f10a 0a01 	add.w	sl, sl, #1
 802efc8:	9304      	str	r3, [sp, #16]
 802efca:	9307      	str	r3, [sp, #28]
 802efcc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802efd0:	931a      	str	r3, [sp, #104]	@ 0x68
 802efd2:	4654      	mov	r4, sl
 802efd4:	2205      	movs	r2, #5
 802efd6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802efda:	4853      	ldr	r0, [pc, #332]	@ (802f128 <_vfiprintf_r+0x21c>)
 802efdc:	f7d1 f908 	bl	80001f0 <memchr>
 802efe0:	9a04      	ldr	r2, [sp, #16]
 802efe2:	b9d8      	cbnz	r0, 802f01c <_vfiprintf_r+0x110>
 802efe4:	06d1      	lsls	r1, r2, #27
 802efe6:	bf44      	itt	mi
 802efe8:	2320      	movmi	r3, #32
 802efea:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802efee:	0713      	lsls	r3, r2, #28
 802eff0:	bf44      	itt	mi
 802eff2:	232b      	movmi	r3, #43	@ 0x2b
 802eff4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802eff8:	f89a 3000 	ldrb.w	r3, [sl]
 802effc:	2b2a      	cmp	r3, #42	@ 0x2a
 802effe:	d015      	beq.n	802f02c <_vfiprintf_r+0x120>
 802f000:	9a07      	ldr	r2, [sp, #28]
 802f002:	4654      	mov	r4, sl
 802f004:	2000      	movs	r0, #0
 802f006:	f04f 0c0a 	mov.w	ip, #10
 802f00a:	4621      	mov	r1, r4
 802f00c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802f010:	3b30      	subs	r3, #48	@ 0x30
 802f012:	2b09      	cmp	r3, #9
 802f014:	d94b      	bls.n	802f0ae <_vfiprintf_r+0x1a2>
 802f016:	b1b0      	cbz	r0, 802f046 <_vfiprintf_r+0x13a>
 802f018:	9207      	str	r2, [sp, #28]
 802f01a:	e014      	b.n	802f046 <_vfiprintf_r+0x13a>
 802f01c:	eba0 0308 	sub.w	r3, r0, r8
 802f020:	fa09 f303 	lsl.w	r3, r9, r3
 802f024:	4313      	orrs	r3, r2
 802f026:	9304      	str	r3, [sp, #16]
 802f028:	46a2      	mov	sl, r4
 802f02a:	e7d2      	b.n	802efd2 <_vfiprintf_r+0xc6>
 802f02c:	9b03      	ldr	r3, [sp, #12]
 802f02e:	1d19      	adds	r1, r3, #4
 802f030:	681b      	ldr	r3, [r3, #0]
 802f032:	9103      	str	r1, [sp, #12]
 802f034:	2b00      	cmp	r3, #0
 802f036:	bfbb      	ittet	lt
 802f038:	425b      	neglt	r3, r3
 802f03a:	f042 0202 	orrlt.w	r2, r2, #2
 802f03e:	9307      	strge	r3, [sp, #28]
 802f040:	9307      	strlt	r3, [sp, #28]
 802f042:	bfb8      	it	lt
 802f044:	9204      	strlt	r2, [sp, #16]
 802f046:	7823      	ldrb	r3, [r4, #0]
 802f048:	2b2e      	cmp	r3, #46	@ 0x2e
 802f04a:	d10a      	bne.n	802f062 <_vfiprintf_r+0x156>
 802f04c:	7863      	ldrb	r3, [r4, #1]
 802f04e:	2b2a      	cmp	r3, #42	@ 0x2a
 802f050:	d132      	bne.n	802f0b8 <_vfiprintf_r+0x1ac>
 802f052:	9b03      	ldr	r3, [sp, #12]
 802f054:	1d1a      	adds	r2, r3, #4
 802f056:	681b      	ldr	r3, [r3, #0]
 802f058:	9203      	str	r2, [sp, #12]
 802f05a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802f05e:	3402      	adds	r4, #2
 802f060:	9305      	str	r3, [sp, #20]
 802f062:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802f138 <_vfiprintf_r+0x22c>
 802f066:	7821      	ldrb	r1, [r4, #0]
 802f068:	2203      	movs	r2, #3
 802f06a:	4650      	mov	r0, sl
 802f06c:	f7d1 f8c0 	bl	80001f0 <memchr>
 802f070:	b138      	cbz	r0, 802f082 <_vfiprintf_r+0x176>
 802f072:	9b04      	ldr	r3, [sp, #16]
 802f074:	eba0 000a 	sub.w	r0, r0, sl
 802f078:	2240      	movs	r2, #64	@ 0x40
 802f07a:	4082      	lsls	r2, r0
 802f07c:	4313      	orrs	r3, r2
 802f07e:	3401      	adds	r4, #1
 802f080:	9304      	str	r3, [sp, #16]
 802f082:	f814 1b01 	ldrb.w	r1, [r4], #1
 802f086:	4829      	ldr	r0, [pc, #164]	@ (802f12c <_vfiprintf_r+0x220>)
 802f088:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802f08c:	2206      	movs	r2, #6
 802f08e:	f7d1 f8af 	bl	80001f0 <memchr>
 802f092:	2800      	cmp	r0, #0
 802f094:	d03f      	beq.n	802f116 <_vfiprintf_r+0x20a>
 802f096:	4b26      	ldr	r3, [pc, #152]	@ (802f130 <_vfiprintf_r+0x224>)
 802f098:	bb1b      	cbnz	r3, 802f0e2 <_vfiprintf_r+0x1d6>
 802f09a:	9b03      	ldr	r3, [sp, #12]
 802f09c:	3307      	adds	r3, #7
 802f09e:	f023 0307 	bic.w	r3, r3, #7
 802f0a2:	3308      	adds	r3, #8
 802f0a4:	9303      	str	r3, [sp, #12]
 802f0a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802f0a8:	443b      	add	r3, r7
 802f0aa:	9309      	str	r3, [sp, #36]	@ 0x24
 802f0ac:	e76a      	b.n	802ef84 <_vfiprintf_r+0x78>
 802f0ae:	fb0c 3202 	mla	r2, ip, r2, r3
 802f0b2:	460c      	mov	r4, r1
 802f0b4:	2001      	movs	r0, #1
 802f0b6:	e7a8      	b.n	802f00a <_vfiprintf_r+0xfe>
 802f0b8:	2300      	movs	r3, #0
 802f0ba:	3401      	adds	r4, #1
 802f0bc:	9305      	str	r3, [sp, #20]
 802f0be:	4619      	mov	r1, r3
 802f0c0:	f04f 0c0a 	mov.w	ip, #10
 802f0c4:	4620      	mov	r0, r4
 802f0c6:	f810 2b01 	ldrb.w	r2, [r0], #1
 802f0ca:	3a30      	subs	r2, #48	@ 0x30
 802f0cc:	2a09      	cmp	r2, #9
 802f0ce:	d903      	bls.n	802f0d8 <_vfiprintf_r+0x1cc>
 802f0d0:	2b00      	cmp	r3, #0
 802f0d2:	d0c6      	beq.n	802f062 <_vfiprintf_r+0x156>
 802f0d4:	9105      	str	r1, [sp, #20]
 802f0d6:	e7c4      	b.n	802f062 <_vfiprintf_r+0x156>
 802f0d8:	fb0c 2101 	mla	r1, ip, r1, r2
 802f0dc:	4604      	mov	r4, r0
 802f0de:	2301      	movs	r3, #1
 802f0e0:	e7f0      	b.n	802f0c4 <_vfiprintf_r+0x1b8>
 802f0e2:	ab03      	add	r3, sp, #12
 802f0e4:	9300      	str	r3, [sp, #0]
 802f0e6:	462a      	mov	r2, r5
 802f0e8:	4b12      	ldr	r3, [pc, #72]	@ (802f134 <_vfiprintf_r+0x228>)
 802f0ea:	a904      	add	r1, sp, #16
 802f0ec:	4630      	mov	r0, r6
 802f0ee:	f3af 8000 	nop.w
 802f0f2:	4607      	mov	r7, r0
 802f0f4:	1c78      	adds	r0, r7, #1
 802f0f6:	d1d6      	bne.n	802f0a6 <_vfiprintf_r+0x19a>
 802f0f8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802f0fa:	07d9      	lsls	r1, r3, #31
 802f0fc:	d405      	bmi.n	802f10a <_vfiprintf_r+0x1fe>
 802f0fe:	89ab      	ldrh	r3, [r5, #12]
 802f100:	059a      	lsls	r2, r3, #22
 802f102:	d402      	bmi.n	802f10a <_vfiprintf_r+0x1fe>
 802f104:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802f106:	f7ff fe21 	bl	802ed4c <__retarget_lock_release_recursive>
 802f10a:	89ab      	ldrh	r3, [r5, #12]
 802f10c:	065b      	lsls	r3, r3, #25
 802f10e:	f53f af1f 	bmi.w	802ef50 <_vfiprintf_r+0x44>
 802f112:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802f114:	e71e      	b.n	802ef54 <_vfiprintf_r+0x48>
 802f116:	ab03      	add	r3, sp, #12
 802f118:	9300      	str	r3, [sp, #0]
 802f11a:	462a      	mov	r2, r5
 802f11c:	4b05      	ldr	r3, [pc, #20]	@ (802f134 <_vfiprintf_r+0x228>)
 802f11e:	a904      	add	r1, sp, #16
 802f120:	4630      	mov	r0, r6
 802f122:	f000 f879 	bl	802f218 <_printf_i>
 802f126:	e7e4      	b.n	802f0f2 <_vfiprintf_r+0x1e6>
 802f128:	08030db4 	.word	0x08030db4
 802f12c:	08030dbe 	.word	0x08030dbe
 802f130:	00000000 	.word	0x00000000
 802f134:	0802eee7 	.word	0x0802eee7
 802f138:	08030dba 	.word	0x08030dba

0802f13c <_printf_common>:
 802f13c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802f140:	4616      	mov	r6, r2
 802f142:	4698      	mov	r8, r3
 802f144:	688a      	ldr	r2, [r1, #8]
 802f146:	690b      	ldr	r3, [r1, #16]
 802f148:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802f14c:	4293      	cmp	r3, r2
 802f14e:	bfb8      	it	lt
 802f150:	4613      	movlt	r3, r2
 802f152:	6033      	str	r3, [r6, #0]
 802f154:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802f158:	4607      	mov	r7, r0
 802f15a:	460c      	mov	r4, r1
 802f15c:	b10a      	cbz	r2, 802f162 <_printf_common+0x26>
 802f15e:	3301      	adds	r3, #1
 802f160:	6033      	str	r3, [r6, #0]
 802f162:	6823      	ldr	r3, [r4, #0]
 802f164:	0699      	lsls	r1, r3, #26
 802f166:	bf42      	ittt	mi
 802f168:	6833      	ldrmi	r3, [r6, #0]
 802f16a:	3302      	addmi	r3, #2
 802f16c:	6033      	strmi	r3, [r6, #0]
 802f16e:	6825      	ldr	r5, [r4, #0]
 802f170:	f015 0506 	ands.w	r5, r5, #6
 802f174:	d106      	bne.n	802f184 <_printf_common+0x48>
 802f176:	f104 0a19 	add.w	sl, r4, #25
 802f17a:	68e3      	ldr	r3, [r4, #12]
 802f17c:	6832      	ldr	r2, [r6, #0]
 802f17e:	1a9b      	subs	r3, r3, r2
 802f180:	42ab      	cmp	r3, r5
 802f182:	dc26      	bgt.n	802f1d2 <_printf_common+0x96>
 802f184:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802f188:	6822      	ldr	r2, [r4, #0]
 802f18a:	3b00      	subs	r3, #0
 802f18c:	bf18      	it	ne
 802f18e:	2301      	movne	r3, #1
 802f190:	0692      	lsls	r2, r2, #26
 802f192:	d42b      	bmi.n	802f1ec <_printf_common+0xb0>
 802f194:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802f198:	4641      	mov	r1, r8
 802f19a:	4638      	mov	r0, r7
 802f19c:	47c8      	blx	r9
 802f19e:	3001      	adds	r0, #1
 802f1a0:	d01e      	beq.n	802f1e0 <_printf_common+0xa4>
 802f1a2:	6823      	ldr	r3, [r4, #0]
 802f1a4:	6922      	ldr	r2, [r4, #16]
 802f1a6:	f003 0306 	and.w	r3, r3, #6
 802f1aa:	2b04      	cmp	r3, #4
 802f1ac:	bf02      	ittt	eq
 802f1ae:	68e5      	ldreq	r5, [r4, #12]
 802f1b0:	6833      	ldreq	r3, [r6, #0]
 802f1b2:	1aed      	subeq	r5, r5, r3
 802f1b4:	68a3      	ldr	r3, [r4, #8]
 802f1b6:	bf0c      	ite	eq
 802f1b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802f1bc:	2500      	movne	r5, #0
 802f1be:	4293      	cmp	r3, r2
 802f1c0:	bfc4      	itt	gt
 802f1c2:	1a9b      	subgt	r3, r3, r2
 802f1c4:	18ed      	addgt	r5, r5, r3
 802f1c6:	2600      	movs	r6, #0
 802f1c8:	341a      	adds	r4, #26
 802f1ca:	42b5      	cmp	r5, r6
 802f1cc:	d11a      	bne.n	802f204 <_printf_common+0xc8>
 802f1ce:	2000      	movs	r0, #0
 802f1d0:	e008      	b.n	802f1e4 <_printf_common+0xa8>
 802f1d2:	2301      	movs	r3, #1
 802f1d4:	4652      	mov	r2, sl
 802f1d6:	4641      	mov	r1, r8
 802f1d8:	4638      	mov	r0, r7
 802f1da:	47c8      	blx	r9
 802f1dc:	3001      	adds	r0, #1
 802f1de:	d103      	bne.n	802f1e8 <_printf_common+0xac>
 802f1e0:	f04f 30ff 	mov.w	r0, #4294967295
 802f1e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802f1e8:	3501      	adds	r5, #1
 802f1ea:	e7c6      	b.n	802f17a <_printf_common+0x3e>
 802f1ec:	18e1      	adds	r1, r4, r3
 802f1ee:	1c5a      	adds	r2, r3, #1
 802f1f0:	2030      	movs	r0, #48	@ 0x30
 802f1f2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802f1f6:	4422      	add	r2, r4
 802f1f8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802f1fc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802f200:	3302      	adds	r3, #2
 802f202:	e7c7      	b.n	802f194 <_printf_common+0x58>
 802f204:	2301      	movs	r3, #1
 802f206:	4622      	mov	r2, r4
 802f208:	4641      	mov	r1, r8
 802f20a:	4638      	mov	r0, r7
 802f20c:	47c8      	blx	r9
 802f20e:	3001      	adds	r0, #1
 802f210:	d0e6      	beq.n	802f1e0 <_printf_common+0xa4>
 802f212:	3601      	adds	r6, #1
 802f214:	e7d9      	b.n	802f1ca <_printf_common+0x8e>
	...

0802f218 <_printf_i>:
 802f218:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802f21c:	7e0f      	ldrb	r7, [r1, #24]
 802f21e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802f220:	2f78      	cmp	r7, #120	@ 0x78
 802f222:	4691      	mov	r9, r2
 802f224:	4680      	mov	r8, r0
 802f226:	460c      	mov	r4, r1
 802f228:	469a      	mov	sl, r3
 802f22a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802f22e:	d807      	bhi.n	802f240 <_printf_i+0x28>
 802f230:	2f62      	cmp	r7, #98	@ 0x62
 802f232:	d80a      	bhi.n	802f24a <_printf_i+0x32>
 802f234:	2f00      	cmp	r7, #0
 802f236:	f000 80d1 	beq.w	802f3dc <_printf_i+0x1c4>
 802f23a:	2f58      	cmp	r7, #88	@ 0x58
 802f23c:	f000 80b8 	beq.w	802f3b0 <_printf_i+0x198>
 802f240:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802f244:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802f248:	e03a      	b.n	802f2c0 <_printf_i+0xa8>
 802f24a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802f24e:	2b15      	cmp	r3, #21
 802f250:	d8f6      	bhi.n	802f240 <_printf_i+0x28>
 802f252:	a101      	add	r1, pc, #4	@ (adr r1, 802f258 <_printf_i+0x40>)
 802f254:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802f258:	0802f2b1 	.word	0x0802f2b1
 802f25c:	0802f2c5 	.word	0x0802f2c5
 802f260:	0802f241 	.word	0x0802f241
 802f264:	0802f241 	.word	0x0802f241
 802f268:	0802f241 	.word	0x0802f241
 802f26c:	0802f241 	.word	0x0802f241
 802f270:	0802f2c5 	.word	0x0802f2c5
 802f274:	0802f241 	.word	0x0802f241
 802f278:	0802f241 	.word	0x0802f241
 802f27c:	0802f241 	.word	0x0802f241
 802f280:	0802f241 	.word	0x0802f241
 802f284:	0802f3c3 	.word	0x0802f3c3
 802f288:	0802f2ef 	.word	0x0802f2ef
 802f28c:	0802f37d 	.word	0x0802f37d
 802f290:	0802f241 	.word	0x0802f241
 802f294:	0802f241 	.word	0x0802f241
 802f298:	0802f3e5 	.word	0x0802f3e5
 802f29c:	0802f241 	.word	0x0802f241
 802f2a0:	0802f2ef 	.word	0x0802f2ef
 802f2a4:	0802f241 	.word	0x0802f241
 802f2a8:	0802f241 	.word	0x0802f241
 802f2ac:	0802f385 	.word	0x0802f385
 802f2b0:	6833      	ldr	r3, [r6, #0]
 802f2b2:	1d1a      	adds	r2, r3, #4
 802f2b4:	681b      	ldr	r3, [r3, #0]
 802f2b6:	6032      	str	r2, [r6, #0]
 802f2b8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802f2bc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802f2c0:	2301      	movs	r3, #1
 802f2c2:	e09c      	b.n	802f3fe <_printf_i+0x1e6>
 802f2c4:	6833      	ldr	r3, [r6, #0]
 802f2c6:	6820      	ldr	r0, [r4, #0]
 802f2c8:	1d19      	adds	r1, r3, #4
 802f2ca:	6031      	str	r1, [r6, #0]
 802f2cc:	0606      	lsls	r6, r0, #24
 802f2ce:	d501      	bpl.n	802f2d4 <_printf_i+0xbc>
 802f2d0:	681d      	ldr	r5, [r3, #0]
 802f2d2:	e003      	b.n	802f2dc <_printf_i+0xc4>
 802f2d4:	0645      	lsls	r5, r0, #25
 802f2d6:	d5fb      	bpl.n	802f2d0 <_printf_i+0xb8>
 802f2d8:	f9b3 5000 	ldrsh.w	r5, [r3]
 802f2dc:	2d00      	cmp	r5, #0
 802f2de:	da03      	bge.n	802f2e8 <_printf_i+0xd0>
 802f2e0:	232d      	movs	r3, #45	@ 0x2d
 802f2e2:	426d      	negs	r5, r5
 802f2e4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802f2e8:	4858      	ldr	r0, [pc, #352]	@ (802f44c <_printf_i+0x234>)
 802f2ea:	230a      	movs	r3, #10
 802f2ec:	e011      	b.n	802f312 <_printf_i+0xfa>
 802f2ee:	6821      	ldr	r1, [r4, #0]
 802f2f0:	6833      	ldr	r3, [r6, #0]
 802f2f2:	0608      	lsls	r0, r1, #24
 802f2f4:	f853 5b04 	ldr.w	r5, [r3], #4
 802f2f8:	d402      	bmi.n	802f300 <_printf_i+0xe8>
 802f2fa:	0649      	lsls	r1, r1, #25
 802f2fc:	bf48      	it	mi
 802f2fe:	b2ad      	uxthmi	r5, r5
 802f300:	2f6f      	cmp	r7, #111	@ 0x6f
 802f302:	4852      	ldr	r0, [pc, #328]	@ (802f44c <_printf_i+0x234>)
 802f304:	6033      	str	r3, [r6, #0]
 802f306:	bf14      	ite	ne
 802f308:	230a      	movne	r3, #10
 802f30a:	2308      	moveq	r3, #8
 802f30c:	2100      	movs	r1, #0
 802f30e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802f312:	6866      	ldr	r6, [r4, #4]
 802f314:	60a6      	str	r6, [r4, #8]
 802f316:	2e00      	cmp	r6, #0
 802f318:	db05      	blt.n	802f326 <_printf_i+0x10e>
 802f31a:	6821      	ldr	r1, [r4, #0]
 802f31c:	432e      	orrs	r6, r5
 802f31e:	f021 0104 	bic.w	r1, r1, #4
 802f322:	6021      	str	r1, [r4, #0]
 802f324:	d04b      	beq.n	802f3be <_printf_i+0x1a6>
 802f326:	4616      	mov	r6, r2
 802f328:	fbb5 f1f3 	udiv	r1, r5, r3
 802f32c:	fb03 5711 	mls	r7, r3, r1, r5
 802f330:	5dc7      	ldrb	r7, [r0, r7]
 802f332:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802f336:	462f      	mov	r7, r5
 802f338:	42bb      	cmp	r3, r7
 802f33a:	460d      	mov	r5, r1
 802f33c:	d9f4      	bls.n	802f328 <_printf_i+0x110>
 802f33e:	2b08      	cmp	r3, #8
 802f340:	d10b      	bne.n	802f35a <_printf_i+0x142>
 802f342:	6823      	ldr	r3, [r4, #0]
 802f344:	07df      	lsls	r7, r3, #31
 802f346:	d508      	bpl.n	802f35a <_printf_i+0x142>
 802f348:	6923      	ldr	r3, [r4, #16]
 802f34a:	6861      	ldr	r1, [r4, #4]
 802f34c:	4299      	cmp	r1, r3
 802f34e:	bfde      	ittt	le
 802f350:	2330      	movle	r3, #48	@ 0x30
 802f352:	f806 3c01 	strble.w	r3, [r6, #-1]
 802f356:	f106 36ff 	addle.w	r6, r6, #4294967295
 802f35a:	1b92      	subs	r2, r2, r6
 802f35c:	6122      	str	r2, [r4, #16]
 802f35e:	f8cd a000 	str.w	sl, [sp]
 802f362:	464b      	mov	r3, r9
 802f364:	aa03      	add	r2, sp, #12
 802f366:	4621      	mov	r1, r4
 802f368:	4640      	mov	r0, r8
 802f36a:	f7ff fee7 	bl	802f13c <_printf_common>
 802f36e:	3001      	adds	r0, #1
 802f370:	d14a      	bne.n	802f408 <_printf_i+0x1f0>
 802f372:	f04f 30ff 	mov.w	r0, #4294967295
 802f376:	b004      	add	sp, #16
 802f378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802f37c:	6823      	ldr	r3, [r4, #0]
 802f37e:	f043 0320 	orr.w	r3, r3, #32
 802f382:	6023      	str	r3, [r4, #0]
 802f384:	4832      	ldr	r0, [pc, #200]	@ (802f450 <_printf_i+0x238>)
 802f386:	2778      	movs	r7, #120	@ 0x78
 802f388:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802f38c:	6823      	ldr	r3, [r4, #0]
 802f38e:	6831      	ldr	r1, [r6, #0]
 802f390:	061f      	lsls	r7, r3, #24
 802f392:	f851 5b04 	ldr.w	r5, [r1], #4
 802f396:	d402      	bmi.n	802f39e <_printf_i+0x186>
 802f398:	065f      	lsls	r7, r3, #25
 802f39a:	bf48      	it	mi
 802f39c:	b2ad      	uxthmi	r5, r5
 802f39e:	6031      	str	r1, [r6, #0]
 802f3a0:	07d9      	lsls	r1, r3, #31
 802f3a2:	bf44      	itt	mi
 802f3a4:	f043 0320 	orrmi.w	r3, r3, #32
 802f3a8:	6023      	strmi	r3, [r4, #0]
 802f3aa:	b11d      	cbz	r5, 802f3b4 <_printf_i+0x19c>
 802f3ac:	2310      	movs	r3, #16
 802f3ae:	e7ad      	b.n	802f30c <_printf_i+0xf4>
 802f3b0:	4826      	ldr	r0, [pc, #152]	@ (802f44c <_printf_i+0x234>)
 802f3b2:	e7e9      	b.n	802f388 <_printf_i+0x170>
 802f3b4:	6823      	ldr	r3, [r4, #0]
 802f3b6:	f023 0320 	bic.w	r3, r3, #32
 802f3ba:	6023      	str	r3, [r4, #0]
 802f3bc:	e7f6      	b.n	802f3ac <_printf_i+0x194>
 802f3be:	4616      	mov	r6, r2
 802f3c0:	e7bd      	b.n	802f33e <_printf_i+0x126>
 802f3c2:	6833      	ldr	r3, [r6, #0]
 802f3c4:	6825      	ldr	r5, [r4, #0]
 802f3c6:	6961      	ldr	r1, [r4, #20]
 802f3c8:	1d18      	adds	r0, r3, #4
 802f3ca:	6030      	str	r0, [r6, #0]
 802f3cc:	062e      	lsls	r6, r5, #24
 802f3ce:	681b      	ldr	r3, [r3, #0]
 802f3d0:	d501      	bpl.n	802f3d6 <_printf_i+0x1be>
 802f3d2:	6019      	str	r1, [r3, #0]
 802f3d4:	e002      	b.n	802f3dc <_printf_i+0x1c4>
 802f3d6:	0668      	lsls	r0, r5, #25
 802f3d8:	d5fb      	bpl.n	802f3d2 <_printf_i+0x1ba>
 802f3da:	8019      	strh	r1, [r3, #0]
 802f3dc:	2300      	movs	r3, #0
 802f3de:	6123      	str	r3, [r4, #16]
 802f3e0:	4616      	mov	r6, r2
 802f3e2:	e7bc      	b.n	802f35e <_printf_i+0x146>
 802f3e4:	6833      	ldr	r3, [r6, #0]
 802f3e6:	1d1a      	adds	r2, r3, #4
 802f3e8:	6032      	str	r2, [r6, #0]
 802f3ea:	681e      	ldr	r6, [r3, #0]
 802f3ec:	6862      	ldr	r2, [r4, #4]
 802f3ee:	2100      	movs	r1, #0
 802f3f0:	4630      	mov	r0, r6
 802f3f2:	f7d0 fefd 	bl	80001f0 <memchr>
 802f3f6:	b108      	cbz	r0, 802f3fc <_printf_i+0x1e4>
 802f3f8:	1b80      	subs	r0, r0, r6
 802f3fa:	6060      	str	r0, [r4, #4]
 802f3fc:	6863      	ldr	r3, [r4, #4]
 802f3fe:	6123      	str	r3, [r4, #16]
 802f400:	2300      	movs	r3, #0
 802f402:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802f406:	e7aa      	b.n	802f35e <_printf_i+0x146>
 802f408:	6923      	ldr	r3, [r4, #16]
 802f40a:	4632      	mov	r2, r6
 802f40c:	4649      	mov	r1, r9
 802f40e:	4640      	mov	r0, r8
 802f410:	47d0      	blx	sl
 802f412:	3001      	adds	r0, #1
 802f414:	d0ad      	beq.n	802f372 <_printf_i+0x15a>
 802f416:	6823      	ldr	r3, [r4, #0]
 802f418:	079b      	lsls	r3, r3, #30
 802f41a:	d413      	bmi.n	802f444 <_printf_i+0x22c>
 802f41c:	68e0      	ldr	r0, [r4, #12]
 802f41e:	9b03      	ldr	r3, [sp, #12]
 802f420:	4298      	cmp	r0, r3
 802f422:	bfb8      	it	lt
 802f424:	4618      	movlt	r0, r3
 802f426:	e7a6      	b.n	802f376 <_printf_i+0x15e>
 802f428:	2301      	movs	r3, #1
 802f42a:	4632      	mov	r2, r6
 802f42c:	4649      	mov	r1, r9
 802f42e:	4640      	mov	r0, r8
 802f430:	47d0      	blx	sl
 802f432:	3001      	adds	r0, #1
 802f434:	d09d      	beq.n	802f372 <_printf_i+0x15a>
 802f436:	3501      	adds	r5, #1
 802f438:	68e3      	ldr	r3, [r4, #12]
 802f43a:	9903      	ldr	r1, [sp, #12]
 802f43c:	1a5b      	subs	r3, r3, r1
 802f43e:	42ab      	cmp	r3, r5
 802f440:	dcf2      	bgt.n	802f428 <_printf_i+0x210>
 802f442:	e7eb      	b.n	802f41c <_printf_i+0x204>
 802f444:	2500      	movs	r5, #0
 802f446:	f104 0619 	add.w	r6, r4, #25
 802f44a:	e7f5      	b.n	802f438 <_printf_i+0x220>
 802f44c:	08030dc5 	.word	0x08030dc5
 802f450:	08030dd6 	.word	0x08030dd6

0802f454 <__sflush_r>:
 802f454:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802f458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802f45c:	0716      	lsls	r6, r2, #28
 802f45e:	4605      	mov	r5, r0
 802f460:	460c      	mov	r4, r1
 802f462:	d454      	bmi.n	802f50e <__sflush_r+0xba>
 802f464:	684b      	ldr	r3, [r1, #4]
 802f466:	2b00      	cmp	r3, #0
 802f468:	dc02      	bgt.n	802f470 <__sflush_r+0x1c>
 802f46a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802f46c:	2b00      	cmp	r3, #0
 802f46e:	dd48      	ble.n	802f502 <__sflush_r+0xae>
 802f470:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802f472:	2e00      	cmp	r6, #0
 802f474:	d045      	beq.n	802f502 <__sflush_r+0xae>
 802f476:	2300      	movs	r3, #0
 802f478:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802f47c:	682f      	ldr	r7, [r5, #0]
 802f47e:	6a21      	ldr	r1, [r4, #32]
 802f480:	602b      	str	r3, [r5, #0]
 802f482:	d030      	beq.n	802f4e6 <__sflush_r+0x92>
 802f484:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802f486:	89a3      	ldrh	r3, [r4, #12]
 802f488:	0759      	lsls	r1, r3, #29
 802f48a:	d505      	bpl.n	802f498 <__sflush_r+0x44>
 802f48c:	6863      	ldr	r3, [r4, #4]
 802f48e:	1ad2      	subs	r2, r2, r3
 802f490:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802f492:	b10b      	cbz	r3, 802f498 <__sflush_r+0x44>
 802f494:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802f496:	1ad2      	subs	r2, r2, r3
 802f498:	2300      	movs	r3, #0
 802f49a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802f49c:	6a21      	ldr	r1, [r4, #32]
 802f49e:	4628      	mov	r0, r5
 802f4a0:	47b0      	blx	r6
 802f4a2:	1c43      	adds	r3, r0, #1
 802f4a4:	89a3      	ldrh	r3, [r4, #12]
 802f4a6:	d106      	bne.n	802f4b6 <__sflush_r+0x62>
 802f4a8:	6829      	ldr	r1, [r5, #0]
 802f4aa:	291d      	cmp	r1, #29
 802f4ac:	d82b      	bhi.n	802f506 <__sflush_r+0xb2>
 802f4ae:	4a2a      	ldr	r2, [pc, #168]	@ (802f558 <__sflush_r+0x104>)
 802f4b0:	40ca      	lsrs	r2, r1
 802f4b2:	07d6      	lsls	r6, r2, #31
 802f4b4:	d527      	bpl.n	802f506 <__sflush_r+0xb2>
 802f4b6:	2200      	movs	r2, #0
 802f4b8:	6062      	str	r2, [r4, #4]
 802f4ba:	04d9      	lsls	r1, r3, #19
 802f4bc:	6922      	ldr	r2, [r4, #16]
 802f4be:	6022      	str	r2, [r4, #0]
 802f4c0:	d504      	bpl.n	802f4cc <__sflush_r+0x78>
 802f4c2:	1c42      	adds	r2, r0, #1
 802f4c4:	d101      	bne.n	802f4ca <__sflush_r+0x76>
 802f4c6:	682b      	ldr	r3, [r5, #0]
 802f4c8:	b903      	cbnz	r3, 802f4cc <__sflush_r+0x78>
 802f4ca:	6560      	str	r0, [r4, #84]	@ 0x54
 802f4cc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802f4ce:	602f      	str	r7, [r5, #0]
 802f4d0:	b1b9      	cbz	r1, 802f502 <__sflush_r+0xae>
 802f4d2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802f4d6:	4299      	cmp	r1, r3
 802f4d8:	d002      	beq.n	802f4e0 <__sflush_r+0x8c>
 802f4da:	4628      	mov	r0, r5
 802f4dc:	f7ff fca2 	bl	802ee24 <_free_r>
 802f4e0:	2300      	movs	r3, #0
 802f4e2:	6363      	str	r3, [r4, #52]	@ 0x34
 802f4e4:	e00d      	b.n	802f502 <__sflush_r+0xae>
 802f4e6:	2301      	movs	r3, #1
 802f4e8:	4628      	mov	r0, r5
 802f4ea:	47b0      	blx	r6
 802f4ec:	4602      	mov	r2, r0
 802f4ee:	1c50      	adds	r0, r2, #1
 802f4f0:	d1c9      	bne.n	802f486 <__sflush_r+0x32>
 802f4f2:	682b      	ldr	r3, [r5, #0]
 802f4f4:	2b00      	cmp	r3, #0
 802f4f6:	d0c6      	beq.n	802f486 <__sflush_r+0x32>
 802f4f8:	2b1d      	cmp	r3, #29
 802f4fa:	d001      	beq.n	802f500 <__sflush_r+0xac>
 802f4fc:	2b16      	cmp	r3, #22
 802f4fe:	d11e      	bne.n	802f53e <__sflush_r+0xea>
 802f500:	602f      	str	r7, [r5, #0]
 802f502:	2000      	movs	r0, #0
 802f504:	e022      	b.n	802f54c <__sflush_r+0xf8>
 802f506:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802f50a:	b21b      	sxth	r3, r3
 802f50c:	e01b      	b.n	802f546 <__sflush_r+0xf2>
 802f50e:	690f      	ldr	r7, [r1, #16]
 802f510:	2f00      	cmp	r7, #0
 802f512:	d0f6      	beq.n	802f502 <__sflush_r+0xae>
 802f514:	0793      	lsls	r3, r2, #30
 802f516:	680e      	ldr	r6, [r1, #0]
 802f518:	bf08      	it	eq
 802f51a:	694b      	ldreq	r3, [r1, #20]
 802f51c:	600f      	str	r7, [r1, #0]
 802f51e:	bf18      	it	ne
 802f520:	2300      	movne	r3, #0
 802f522:	eba6 0807 	sub.w	r8, r6, r7
 802f526:	608b      	str	r3, [r1, #8]
 802f528:	f1b8 0f00 	cmp.w	r8, #0
 802f52c:	dde9      	ble.n	802f502 <__sflush_r+0xae>
 802f52e:	6a21      	ldr	r1, [r4, #32]
 802f530:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802f532:	4643      	mov	r3, r8
 802f534:	463a      	mov	r2, r7
 802f536:	4628      	mov	r0, r5
 802f538:	47b0      	blx	r6
 802f53a:	2800      	cmp	r0, #0
 802f53c:	dc08      	bgt.n	802f550 <__sflush_r+0xfc>
 802f53e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f542:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802f546:	81a3      	strh	r3, [r4, #12]
 802f548:	f04f 30ff 	mov.w	r0, #4294967295
 802f54c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802f550:	4407      	add	r7, r0
 802f552:	eba8 0800 	sub.w	r8, r8, r0
 802f556:	e7e7      	b.n	802f528 <__sflush_r+0xd4>
 802f558:	20400001 	.word	0x20400001

0802f55c <_fflush_r>:
 802f55c:	b538      	push	{r3, r4, r5, lr}
 802f55e:	690b      	ldr	r3, [r1, #16]
 802f560:	4605      	mov	r5, r0
 802f562:	460c      	mov	r4, r1
 802f564:	b913      	cbnz	r3, 802f56c <_fflush_r+0x10>
 802f566:	2500      	movs	r5, #0
 802f568:	4628      	mov	r0, r5
 802f56a:	bd38      	pop	{r3, r4, r5, pc}
 802f56c:	b118      	cbz	r0, 802f576 <_fflush_r+0x1a>
 802f56e:	6a03      	ldr	r3, [r0, #32]
 802f570:	b90b      	cbnz	r3, 802f576 <_fflush_r+0x1a>
 802f572:	f7ff fa91 	bl	802ea98 <__sinit>
 802f576:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f57a:	2b00      	cmp	r3, #0
 802f57c:	d0f3      	beq.n	802f566 <_fflush_r+0xa>
 802f57e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802f580:	07d0      	lsls	r0, r2, #31
 802f582:	d404      	bmi.n	802f58e <_fflush_r+0x32>
 802f584:	0599      	lsls	r1, r3, #22
 802f586:	d402      	bmi.n	802f58e <_fflush_r+0x32>
 802f588:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802f58a:	f7ff fbde 	bl	802ed4a <__retarget_lock_acquire_recursive>
 802f58e:	4628      	mov	r0, r5
 802f590:	4621      	mov	r1, r4
 802f592:	f7ff ff5f 	bl	802f454 <__sflush_r>
 802f596:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802f598:	07da      	lsls	r2, r3, #31
 802f59a:	4605      	mov	r5, r0
 802f59c:	d4e4      	bmi.n	802f568 <_fflush_r+0xc>
 802f59e:	89a3      	ldrh	r3, [r4, #12]
 802f5a0:	059b      	lsls	r3, r3, #22
 802f5a2:	d4e1      	bmi.n	802f568 <_fflush_r+0xc>
 802f5a4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802f5a6:	f7ff fbd1 	bl	802ed4c <__retarget_lock_release_recursive>
 802f5aa:	e7dd      	b.n	802f568 <_fflush_r+0xc>

0802f5ac <__swbuf_r>:
 802f5ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f5ae:	460e      	mov	r6, r1
 802f5b0:	4614      	mov	r4, r2
 802f5b2:	4605      	mov	r5, r0
 802f5b4:	b118      	cbz	r0, 802f5be <__swbuf_r+0x12>
 802f5b6:	6a03      	ldr	r3, [r0, #32]
 802f5b8:	b90b      	cbnz	r3, 802f5be <__swbuf_r+0x12>
 802f5ba:	f7ff fa6d 	bl	802ea98 <__sinit>
 802f5be:	69a3      	ldr	r3, [r4, #24]
 802f5c0:	60a3      	str	r3, [r4, #8]
 802f5c2:	89a3      	ldrh	r3, [r4, #12]
 802f5c4:	071a      	lsls	r2, r3, #28
 802f5c6:	d501      	bpl.n	802f5cc <__swbuf_r+0x20>
 802f5c8:	6923      	ldr	r3, [r4, #16]
 802f5ca:	b943      	cbnz	r3, 802f5de <__swbuf_r+0x32>
 802f5cc:	4621      	mov	r1, r4
 802f5ce:	4628      	mov	r0, r5
 802f5d0:	f000 f82a 	bl	802f628 <__swsetup_r>
 802f5d4:	b118      	cbz	r0, 802f5de <__swbuf_r+0x32>
 802f5d6:	f04f 37ff 	mov.w	r7, #4294967295
 802f5da:	4638      	mov	r0, r7
 802f5dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802f5de:	6823      	ldr	r3, [r4, #0]
 802f5e0:	6922      	ldr	r2, [r4, #16]
 802f5e2:	1a98      	subs	r0, r3, r2
 802f5e4:	6963      	ldr	r3, [r4, #20]
 802f5e6:	b2f6      	uxtb	r6, r6
 802f5e8:	4283      	cmp	r3, r0
 802f5ea:	4637      	mov	r7, r6
 802f5ec:	dc05      	bgt.n	802f5fa <__swbuf_r+0x4e>
 802f5ee:	4621      	mov	r1, r4
 802f5f0:	4628      	mov	r0, r5
 802f5f2:	f7ff ffb3 	bl	802f55c <_fflush_r>
 802f5f6:	2800      	cmp	r0, #0
 802f5f8:	d1ed      	bne.n	802f5d6 <__swbuf_r+0x2a>
 802f5fa:	68a3      	ldr	r3, [r4, #8]
 802f5fc:	3b01      	subs	r3, #1
 802f5fe:	60a3      	str	r3, [r4, #8]
 802f600:	6823      	ldr	r3, [r4, #0]
 802f602:	1c5a      	adds	r2, r3, #1
 802f604:	6022      	str	r2, [r4, #0]
 802f606:	701e      	strb	r6, [r3, #0]
 802f608:	6962      	ldr	r2, [r4, #20]
 802f60a:	1c43      	adds	r3, r0, #1
 802f60c:	429a      	cmp	r2, r3
 802f60e:	d004      	beq.n	802f61a <__swbuf_r+0x6e>
 802f610:	89a3      	ldrh	r3, [r4, #12]
 802f612:	07db      	lsls	r3, r3, #31
 802f614:	d5e1      	bpl.n	802f5da <__swbuf_r+0x2e>
 802f616:	2e0a      	cmp	r6, #10
 802f618:	d1df      	bne.n	802f5da <__swbuf_r+0x2e>
 802f61a:	4621      	mov	r1, r4
 802f61c:	4628      	mov	r0, r5
 802f61e:	f7ff ff9d 	bl	802f55c <_fflush_r>
 802f622:	2800      	cmp	r0, #0
 802f624:	d0d9      	beq.n	802f5da <__swbuf_r+0x2e>
 802f626:	e7d6      	b.n	802f5d6 <__swbuf_r+0x2a>

0802f628 <__swsetup_r>:
 802f628:	b538      	push	{r3, r4, r5, lr}
 802f62a:	4b29      	ldr	r3, [pc, #164]	@ (802f6d0 <__swsetup_r+0xa8>)
 802f62c:	4605      	mov	r5, r0
 802f62e:	6818      	ldr	r0, [r3, #0]
 802f630:	460c      	mov	r4, r1
 802f632:	b118      	cbz	r0, 802f63c <__swsetup_r+0x14>
 802f634:	6a03      	ldr	r3, [r0, #32]
 802f636:	b90b      	cbnz	r3, 802f63c <__swsetup_r+0x14>
 802f638:	f7ff fa2e 	bl	802ea98 <__sinit>
 802f63c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f640:	0719      	lsls	r1, r3, #28
 802f642:	d422      	bmi.n	802f68a <__swsetup_r+0x62>
 802f644:	06da      	lsls	r2, r3, #27
 802f646:	d407      	bmi.n	802f658 <__swsetup_r+0x30>
 802f648:	2209      	movs	r2, #9
 802f64a:	602a      	str	r2, [r5, #0]
 802f64c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802f650:	81a3      	strh	r3, [r4, #12]
 802f652:	f04f 30ff 	mov.w	r0, #4294967295
 802f656:	e033      	b.n	802f6c0 <__swsetup_r+0x98>
 802f658:	0758      	lsls	r0, r3, #29
 802f65a:	d512      	bpl.n	802f682 <__swsetup_r+0x5a>
 802f65c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802f65e:	b141      	cbz	r1, 802f672 <__swsetup_r+0x4a>
 802f660:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802f664:	4299      	cmp	r1, r3
 802f666:	d002      	beq.n	802f66e <__swsetup_r+0x46>
 802f668:	4628      	mov	r0, r5
 802f66a:	f7ff fbdb 	bl	802ee24 <_free_r>
 802f66e:	2300      	movs	r3, #0
 802f670:	6363      	str	r3, [r4, #52]	@ 0x34
 802f672:	89a3      	ldrh	r3, [r4, #12]
 802f674:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802f678:	81a3      	strh	r3, [r4, #12]
 802f67a:	2300      	movs	r3, #0
 802f67c:	6063      	str	r3, [r4, #4]
 802f67e:	6923      	ldr	r3, [r4, #16]
 802f680:	6023      	str	r3, [r4, #0]
 802f682:	89a3      	ldrh	r3, [r4, #12]
 802f684:	f043 0308 	orr.w	r3, r3, #8
 802f688:	81a3      	strh	r3, [r4, #12]
 802f68a:	6923      	ldr	r3, [r4, #16]
 802f68c:	b94b      	cbnz	r3, 802f6a2 <__swsetup_r+0x7a>
 802f68e:	89a3      	ldrh	r3, [r4, #12]
 802f690:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802f694:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802f698:	d003      	beq.n	802f6a2 <__swsetup_r+0x7a>
 802f69a:	4621      	mov	r1, r4
 802f69c:	4628      	mov	r0, r5
 802f69e:	f000 f83f 	bl	802f720 <__smakebuf_r>
 802f6a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f6a6:	f013 0201 	ands.w	r2, r3, #1
 802f6aa:	d00a      	beq.n	802f6c2 <__swsetup_r+0x9a>
 802f6ac:	2200      	movs	r2, #0
 802f6ae:	60a2      	str	r2, [r4, #8]
 802f6b0:	6962      	ldr	r2, [r4, #20]
 802f6b2:	4252      	negs	r2, r2
 802f6b4:	61a2      	str	r2, [r4, #24]
 802f6b6:	6922      	ldr	r2, [r4, #16]
 802f6b8:	b942      	cbnz	r2, 802f6cc <__swsetup_r+0xa4>
 802f6ba:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802f6be:	d1c5      	bne.n	802f64c <__swsetup_r+0x24>
 802f6c0:	bd38      	pop	{r3, r4, r5, pc}
 802f6c2:	0799      	lsls	r1, r3, #30
 802f6c4:	bf58      	it	pl
 802f6c6:	6962      	ldrpl	r2, [r4, #20]
 802f6c8:	60a2      	str	r2, [r4, #8]
 802f6ca:	e7f4      	b.n	802f6b6 <__swsetup_r+0x8e>
 802f6cc:	2000      	movs	r0, #0
 802f6ce:	e7f7      	b.n	802f6c0 <__swsetup_r+0x98>
 802f6d0:	2000011c 	.word	0x2000011c

0802f6d4 <__swhatbuf_r>:
 802f6d4:	b570      	push	{r4, r5, r6, lr}
 802f6d6:	460c      	mov	r4, r1
 802f6d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802f6dc:	2900      	cmp	r1, #0
 802f6de:	b096      	sub	sp, #88	@ 0x58
 802f6e0:	4615      	mov	r5, r2
 802f6e2:	461e      	mov	r6, r3
 802f6e4:	da0d      	bge.n	802f702 <__swhatbuf_r+0x2e>
 802f6e6:	89a3      	ldrh	r3, [r4, #12]
 802f6e8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802f6ec:	f04f 0100 	mov.w	r1, #0
 802f6f0:	bf14      	ite	ne
 802f6f2:	2340      	movne	r3, #64	@ 0x40
 802f6f4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802f6f8:	2000      	movs	r0, #0
 802f6fa:	6031      	str	r1, [r6, #0]
 802f6fc:	602b      	str	r3, [r5, #0]
 802f6fe:	b016      	add	sp, #88	@ 0x58
 802f700:	bd70      	pop	{r4, r5, r6, pc}
 802f702:	466a      	mov	r2, sp
 802f704:	f000 f848 	bl	802f798 <_fstat_r>
 802f708:	2800      	cmp	r0, #0
 802f70a:	dbec      	blt.n	802f6e6 <__swhatbuf_r+0x12>
 802f70c:	9901      	ldr	r1, [sp, #4]
 802f70e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802f712:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802f716:	4259      	negs	r1, r3
 802f718:	4159      	adcs	r1, r3
 802f71a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802f71e:	e7eb      	b.n	802f6f8 <__swhatbuf_r+0x24>

0802f720 <__smakebuf_r>:
 802f720:	898b      	ldrh	r3, [r1, #12]
 802f722:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802f724:	079d      	lsls	r5, r3, #30
 802f726:	4606      	mov	r6, r0
 802f728:	460c      	mov	r4, r1
 802f72a:	d507      	bpl.n	802f73c <__smakebuf_r+0x1c>
 802f72c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802f730:	6023      	str	r3, [r4, #0]
 802f732:	6123      	str	r3, [r4, #16]
 802f734:	2301      	movs	r3, #1
 802f736:	6163      	str	r3, [r4, #20]
 802f738:	b003      	add	sp, #12
 802f73a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802f73c:	ab01      	add	r3, sp, #4
 802f73e:	466a      	mov	r2, sp
 802f740:	f7ff ffc8 	bl	802f6d4 <__swhatbuf_r>
 802f744:	9f00      	ldr	r7, [sp, #0]
 802f746:	4605      	mov	r5, r0
 802f748:	4639      	mov	r1, r7
 802f74a:	4630      	mov	r0, r6
 802f74c:	f7ff f87e 	bl	802e84c <_malloc_r>
 802f750:	b948      	cbnz	r0, 802f766 <__smakebuf_r+0x46>
 802f752:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802f756:	059a      	lsls	r2, r3, #22
 802f758:	d4ee      	bmi.n	802f738 <__smakebuf_r+0x18>
 802f75a:	f023 0303 	bic.w	r3, r3, #3
 802f75e:	f043 0302 	orr.w	r3, r3, #2
 802f762:	81a3      	strh	r3, [r4, #12]
 802f764:	e7e2      	b.n	802f72c <__smakebuf_r+0xc>
 802f766:	89a3      	ldrh	r3, [r4, #12]
 802f768:	6020      	str	r0, [r4, #0]
 802f76a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802f76e:	81a3      	strh	r3, [r4, #12]
 802f770:	9b01      	ldr	r3, [sp, #4]
 802f772:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802f776:	b15b      	cbz	r3, 802f790 <__smakebuf_r+0x70>
 802f778:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802f77c:	4630      	mov	r0, r6
 802f77e:	f000 f81d 	bl	802f7bc <_isatty_r>
 802f782:	b128      	cbz	r0, 802f790 <__smakebuf_r+0x70>
 802f784:	89a3      	ldrh	r3, [r4, #12]
 802f786:	f023 0303 	bic.w	r3, r3, #3
 802f78a:	f043 0301 	orr.w	r3, r3, #1
 802f78e:	81a3      	strh	r3, [r4, #12]
 802f790:	89a3      	ldrh	r3, [r4, #12]
 802f792:	431d      	orrs	r5, r3
 802f794:	81a5      	strh	r5, [r4, #12]
 802f796:	e7cf      	b.n	802f738 <__smakebuf_r+0x18>

0802f798 <_fstat_r>:
 802f798:	b538      	push	{r3, r4, r5, lr}
 802f79a:	4d07      	ldr	r5, [pc, #28]	@ (802f7b8 <_fstat_r+0x20>)
 802f79c:	2300      	movs	r3, #0
 802f79e:	4604      	mov	r4, r0
 802f7a0:	4608      	mov	r0, r1
 802f7a2:	4611      	mov	r1, r2
 802f7a4:	602b      	str	r3, [r5, #0]
 802f7a6:	f7d3 fa08 	bl	8002bba <_fstat>
 802f7aa:	1c43      	adds	r3, r0, #1
 802f7ac:	d102      	bne.n	802f7b4 <_fstat_r+0x1c>
 802f7ae:	682b      	ldr	r3, [r5, #0]
 802f7b0:	b103      	cbz	r3, 802f7b4 <_fstat_r+0x1c>
 802f7b2:	6023      	str	r3, [r4, #0]
 802f7b4:	bd38      	pop	{r3, r4, r5, pc}
 802f7b6:	bf00      	nop
 802f7b8:	20014484 	.word	0x20014484

0802f7bc <_isatty_r>:
 802f7bc:	b538      	push	{r3, r4, r5, lr}
 802f7be:	4d06      	ldr	r5, [pc, #24]	@ (802f7d8 <_isatty_r+0x1c>)
 802f7c0:	2300      	movs	r3, #0
 802f7c2:	4604      	mov	r4, r0
 802f7c4:	4608      	mov	r0, r1
 802f7c6:	602b      	str	r3, [r5, #0]
 802f7c8:	f7d3 f9fc 	bl	8002bc4 <_isatty>
 802f7cc:	1c43      	adds	r3, r0, #1
 802f7ce:	d102      	bne.n	802f7d6 <_isatty_r+0x1a>
 802f7d0:	682b      	ldr	r3, [r5, #0]
 802f7d2:	b103      	cbz	r3, 802f7d6 <_isatty_r+0x1a>
 802f7d4:	6023      	str	r3, [r4, #0]
 802f7d6:	bd38      	pop	{r3, r4, r5, pc}
 802f7d8:	20014484 	.word	0x20014484

0802f7dc <_init>:
 802f7dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f7de:	bf00      	nop
 802f7e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802f7e2:	bc08      	pop	{r3}
 802f7e4:	469e      	mov	lr, r3
 802f7e6:	4770      	bx	lr

0802f7e8 <_fini>:
 802f7e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802f7ea:	bf00      	nop
 802f7ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802f7ee:	bc08      	pop	{r3}
 802f7f0:	469e      	mov	lr, r3
 802f7f2:	4770      	bx	lr
