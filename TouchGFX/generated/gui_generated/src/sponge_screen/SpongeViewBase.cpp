/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/sponge_screen/SpongeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

SpongeViewBase::SpongeViewBase() :
    flexButtonCallback(this, &SpongeViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    san_Dau.setBitmap(touchgfx::Bitmap(BITMAP_TRAIN_ID));
    san_Dau.setPosition(0, 0, 240, 320);
    san_Dau.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(san_Dau);

    bleach.setBitmap(touchgfx::Bitmap(BITMAP_DUMMY_ID));
    bleach.setPosition(131, 118, 120, 103);
    bleach.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(bleach);

    naruto.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ID));
    naruto.setPosition(8, 118, 80, 103);
    naruto.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(naruto);

    naruto_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_SPE_ID));
    naruto_spe.setPosition(12, 78, 108, 143);
    naruto_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    naruto_spe.setVisible(false);
    add(naruto_spe);

    naruto_spe_1.setBitmap(touchgfx::Bitmap(BITMAP_PUNCH_ID));
    naruto_spe_1.setPosition(155, 47, 77, 122);
    naruto_spe_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    naruto_spe_1.setVisible(false);
    add(naruto_spe_1);

    naruto_def.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_DEF_ID));
    naruto_def.setPosition(8, 111, 91, 121);
    naruto_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    naruto_def.setVisible(false);
    add(naruto_def);

    naruto_atk.setBitmap(touchgfx::Bitmap(BITMAP_SPONGE_ATK_ID));
    naruto_atk.setPosition(8, 118, 184, 115);
    naruto_atk.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    naruto_atk.setVisible(false);
    add(naruto_atk);

    btn_attack.setBitmap(touchgfx::Bitmap(BITMAP_ATK_ID));
    btn_attack.setPosition(64, 242, 46, 46);
    btn_attack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    btn_attack.setVisible(false);
    add(btn_attack);

    btn_def.setBitmap(touchgfx::Bitmap(BITMAP_DEF_ID));
    btn_def.setPosition(124, 242, 46, 46);
    btn_def.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    btn_def.setVisible(false);
    add(btn_def);

    btn_spe.setBitmap(touchgfx::Bitmap(BITMAP_SPE_ID));
    btn_spe.setPosition(184, 242, 46, 46);
    btn_spe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    btn_spe.setVisible(false);
    add(btn_spe);

    btn_arrow2.setBitmap(touchgfx::Bitmap(BITMAP_NUT1_ID));
    btn_arrow2.setPosition(2, 241, 46, 46);
    btn_arrow2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    btn_arrow2.setVisible(false);
    add(btn_arrow2);

    btn_arrow1.setBitmap(touchgfx::Bitmap(BITMAP_NUT_ID));
    btn_arrow1.setPosition(2, 241, 46, 46);
    btn_arrow1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(btn_arrow1);

    home.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ID));
    home.setPosition(198, 292, 42, 28);
    home.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(home);

    REWARD.setBoxWithBorderPosition(0, 0, 27, 33);
    REWARD.setBorderSize(5);
    REWARD.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    REWARD.setAlpha(10);
    REWARD.setAction(flexButtonCallback);
    REWARD.setPosition(205, 287, 27, 33);
    add(REWARD);
}

SpongeViewBase::~SpongeViewBase()
{

}

void SpongeViewBase::setupScreen()
{

}

void SpongeViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &REWARD)
    {
        //Home
        //When REWARD clicked change screen to SakuraFinalScreen
        //Go to SakuraFinalScreen with no screen transition
        application().gotoSakuraFinalScreenScreenNoTransition();
    }
}
