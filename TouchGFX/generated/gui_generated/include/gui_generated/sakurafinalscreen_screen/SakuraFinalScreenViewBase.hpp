/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SAKURAFINALSCREENVIEWBASE_HPP
#define SAKURAFINALSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/sakurafinalscreen_screen/SakuraFinalScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class SakuraFinalScreenViewBase : public touchgfx::View<SakuraFinalScreenPresenter>
{
public:
    SakuraFinalScreenViewBase();
    virtual ~SakuraFinalScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background;
    touchgfx::ScalableImage title;
    touchgfx::ScalableImage select_img;
    touchgfx::ScalableImage play_img;
    touchgfx::ScalableImage reward;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  reward1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  SELECT;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SakuraFinalScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SAKURAFINALSCREENVIEWBASE_HPP
